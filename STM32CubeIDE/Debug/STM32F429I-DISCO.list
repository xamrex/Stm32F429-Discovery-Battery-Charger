
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021ae0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002d2c  08021c90  08021c90  00031c90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000162e  080249bc  080249bc  000349bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000094  08025fec  08025fec  00035fec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000224  08026080  08026080  00036080  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0009d2a8  080262a4  080262a4  000362a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080c354c  080c354c  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080c354c  080c354c  000d354c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080c3554  080c3554  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080c3554  080c3554  000d3554  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080c3568  080c3568  000d3568  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080c3570  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00015934  2000016c  080c36dc  000e016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20015aa0  080c36dc  000e5aa0  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .debug_line   00051fee  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ef7d4  00000000  00000000  0013218a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00015124  00000000  00000000  0022195e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000030d0  00000000  00000000  00236a88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011afbd  00000000  00000000  00239b58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00007060  00000000  00000000  00354b18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00035df8  00000000  00000000  0035bb78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030c36  00000000  00000000  00391970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  003c25a6  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e90  00000000  00000000  003c2678  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021c78 	.word	0x08021c78

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021c78 	.word	0x08021c78

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fc77 	bl	8005eb0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 fb7d 	bl	8020cc0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f001 f81f 	bl	8001608 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080c3570 	.word	0x080c3570
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20015aa0 	.word	0x20015aa0

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f020 f96f 	bl	80208d8 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	200157f3 	.word	0x200157f3

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 fa38 	bl	8001c28 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b fa73 	bl	800bcb4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a bcd0 	b.w	800b19c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f020 f869 	bl	80208d8 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	200157ec 	.word	0x200157ec
 800085c:	200157e8 	.word	0x200157e8
 8000860:	200157ea 	.word	0x200157ea

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f020 f8e3 	bl	8020a40 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021ce8 	.word	0x08021ce8
 8000898:	08021d20 	.word	0x08021d20
 800089c:	08021d6e 	.word	0x08021d6e
 80008a0:	200157f2 	.word	0x200157f2

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f020 f8bf 	bl	8020a40 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	200157e8 	.word	0x200157e8
 80008d0:	200157ea 	.word	0x200157ea
 80008d4:	08021db3 	.word	0x08021db3
 80008d8:	08021e16 	.word	0x08021e16
 80008dc:	08021d6e 	.word	0x08021d6e
 80008e0:	200157ee 	.word	0x200157ee
 80008e4:	200157f0 	.word	0x200157f0

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 ff90 	bl	8008814 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f020 f89d 	bl	8020a40 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f008 f848 	bl	80089a0 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08021f34 	.word	0x08021f34
 8000928:	08021f7d 	.word	0x08021f7d
 800092c:	08021fac 	.word	0x08021fac
 8000930:	20000198 	.word	0x20000198
 8000934:	08022026 	.word	0x08022026

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 bfbe 	b.w	80088c0 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 bff2 	b.w	8008934 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 bfb1 	b.w	80088c0 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f008 b85b 	b.w	8008a2c <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f008 f890 	bl	8008ab0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f008 f889 	bl	8008ab0 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20003a54 	.word	0x20003a54
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	080221f0 	.word	0x080221f0
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f ff4d 	bl	80208d8 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	200157f4 	.word	0x200157f4

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b fa77 	bl	800bf60 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	080221f0 	.word	0x080221f0

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f ffc7 	bl	8020a40 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08022068 	.word	0x08022068
 8000ac0:	08022083 	.word	0x08022083
 8000ac4:	080220cd 	.word	0x080220cd

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f ffa9 	bl	8020a40 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08022068 	.word	0x08022068
 8000afc:	08022145 	.word	0x08022145
 8000b00:	080220cd 	.word	0x080220cd

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f ff36 	bl	8020a40 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08022190 	.word	0x08022190
 8000c48:	080221aa 	.word	0x080221aa
 8000c4c:	080220cd 	.word	0x080220cd
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 703c 	movw	r0, #10044	; 0x273c
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 be6c 	b.w	8002a64 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fe37 	bl	800aa06 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	080222a8 	.word	0x080222a8

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fd94 	bl	80208d8 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fe23 	bl	800aa06 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08022274 	.word	0x08022274

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 7144 	movw	r1, #10052	; 0x2744
 8000dd6:	f01f fd7f 	bl	80208d8 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fe0d 	bl	800aa06 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08022240 	.word	0x08022240

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fd6a 	bl	80208d8 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 501d 	add.w	r0, r0, #10048	; 0x2740
 8000e14:	3030      	adds	r0, #48	; 0x30
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	080222dc 	.word	0x080222dc

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f642 110c 	movw	r1, #10508	; 0x290c
 8000e52:	f01f fd41 	bl	80208d8 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 fae8 	bl	8002434 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 fae9 	bl	800243c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fc2f 	bl	80146d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f004 f876 	bl	8004f74 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 fb8d 	bl	80145a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fd1f 	bl	80208dc <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fda3 	bl	800aa08 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fd9e 	bl	800aa08 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fd99 	bl	800aa08 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2770 	str.w	r2, [r3, #1904]	; 0x770
 8000ee0:	f503 60f6 	add.w	r0, r3, #1968	; 0x7b0
 8000ee4:	f004 f8c2 	bl	800506c <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f004 f8b2 	bl	8005058 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fdb5 	bl	8002a64 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fdbe 	bl	8020a7c <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fcf7 	bl	80208f4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	20015858 	.word	0x20015858
 8000f18:	200038d0 	.word	0x200038d0
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	20002914 	.word	0x20002914
 8000f2c:	080222dc 	.word	0x080222dc
 8000f30:	08022240 	.word	0x08022240
 8000f34:	08022274 	.word	0x08022274
 8000f38:	080222a8 	.word	0x080222a8
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003854 	.word	0x20003854

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003854 	.word	0x20003854

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fcc2 	bl	80178ec <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20002ab0 	.word	0x20002ab0
 8000fe4:	20002ab4 	.word	0x20002ab4
 8000fe8:	08021cd8 	.word	0x08021cd8
 8000fec:	200038d4 	.word	0x200038d4
 8000ff0:	20003854 	.word	0x20003854
 8000ff4:	200157f4 	.word	0x200157f4
 8000ff8:	200157e8 	.word	0x200157e8
 8000ffc:	200157ee 	.word	0x200157ee
 8001000:	01000001 	.word	0x01000001
 8001004:	200157ea 	.word	0x200157ea
 8001008:	200157f0 	.word	0x200157f0
 800100c:	200157ec 	.word	0x200157ec
 8001010:	08021e64 	.word	0x08021e64

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002ab4 	.word	0x20002ab4

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003950 	.word	0x20003950
 8001064:	2000394e 	.word	0x2000394e

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f00a f8dd 	bl	800b246 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f010 f906 	bl	80112a0 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f00a b8ac 	b.w	800b214 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f00a b8b0 	b.w	800b22c <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	2000394c 	.word	0x2000394c

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f00a b86a 	b.w	800b1a8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f00a b9c3 	b.w	800b45e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 f960 	bl	80073f0 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a fdb7 	bl	800bcb4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 f94e 	bl	80073f0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	200157f4 	.word	0x200157f4
 800116c:	40016800 	.word	0x40016800
 8001170:	20003950 	.word	0x20003950
 8001174:	2000394e 	.word	0x2000394e

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fe42 	bl	8007e12 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003bc4 	.word	0x20003bc4

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.MeasurementsEverySec[i];
 800119c:	4910      	ldr	r1, [pc, #64]	; (80011e0 <CountAvgFrom60sec+0x44>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.MeasurementsEverySec[i];
 80011a2:	f503 7236 	add.w	r2, r3, #728	; 0x2d8
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.MeasurementsEverySec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.MeasurementsEverySec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
		ladowarka.AverageFromLastMin=result/60;
 80011c0:	eddd 6a01 	vldr	s13, [sp, #4]
 80011c4:	eddf 7a07 	vldr	s15, [pc, #28]	; 80011e4 <CountAvgFrom60sec+0x48>
 80011c8:	4b07      	ldr	r3, [pc, #28]	; (80011e8 <CountAvgFrom60sec+0x4c>)
 80011ca:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80011ce:	ed83 7a00 	vstr	s14, [r3]
	return result/60;
 80011d2:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011d6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011da:	b002      	add	sp, #8
 80011dc:	4770      	bx	lr
 80011de:	bf00      	nop
 80011e0:	20003c5c 	.word	0x20003c5c
 80011e4:	42700000 	.word	0x42700000
 80011e8:	200048c4 	.word	0x200048c4

080011ec <SetProperVoltage>:
int  SetProperVoltage(int current){
 80011ec:	b508      	push	{r3, lr}
	HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 2700);
 80011ee:	2200      	movs	r2, #0
 80011f0:	f640 238c 	movw	r3, #2700	; 0xa8c
 80011f4:	2110      	movs	r1, #16
 80011f6:	4802      	ldr	r0, [pc, #8]	; (8001200 <SetProperVoltage+0x14>)
 80011f8:	f005 f925 	bl	8006446 <HAL_DAC_SetValue>
}
 80011fc:	bd08      	pop	{r3, pc}
 80011fe:	bf00      	nop
 8001200:	20003a40 	.word	0x20003a40

08001204 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 8001204:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.
	  static volatile uint32_t value3=0; //actual value of adc vrefint

	  static int sec0to59=0;

		if(ladowarka.Passed100ms){ //interruption form timer7
 8001208:	4cbe      	ldr	r4, [pc, #760]	; (8001504 <ZadanieDwa+0x300>)
			ladowarka.Passed100ms=0; //clear flag

					//Masure batt voltage
					HAL_ADC_Start(&hadc3);
 800120a:	4dbf      	ldr	r5, [pc, #764]	; (8001508 <ZadanieDwa+0x304>)
		if(ladowarka.Passed100ms){ //interruption form timer7
 800120c:	f8d4 3c50 	ldr.w	r3, [r4, #3152]	; 0xc50
 8001210:	2b00      	cmp	r3, #0
 8001212:	f000 80e2 	beq.w	80013da <ZadanieDwa+0x1d6>
			ladowarka.Passed100ms=0; //clear flag
 8001216:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc3);
 8001218:	4628      	mov	r0, r5
			ladowarka.Passed100ms=0; //clear flag
 800121a:	f8c4 3c50 	str.w	r3, [r4, #3152]	; 0xc50
					value += HAL_ADC_GetValue(&hadc3);
 800121e:	f8df 8328 	ldr.w	r8, [pc, #808]	; 8001548 <ZadanieDwa+0x344>

					//Measure batt and resistor voltage
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
 8001222:	4fba      	ldr	r7, [pc, #744]	; (800150c <ZadanieDwa+0x308>)

					//Measure Vref voltage
					HAL_ADC_Start(&hadc1);
					value3 += HAL_ADC_GetValue(&hadc1);
 8001224:	4eba      	ldr	r6, [pc, #744]	; (8001510 <ZadanieDwa+0x30c>)
					HAL_ADC_Start(&hadc3);
 8001226:	f004 ff37 	bl	8006098 <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc3);
 800122a:	4628      	mov	r0, r5
 800122c:	f004 ffa8 	bl	8006180 <HAL_ADC_GetValue>
 8001230:	f8d8 3000 	ldr.w	r3, [r8]
 8001234:	4418      	add	r0, r3
 8001236:	f8c8 0000 	str.w	r0, [r8]
					HAL_ADC_Start(&hadc2);
 800123a:	48b6      	ldr	r0, [pc, #728]	; (8001514 <ZadanieDwa+0x310>)
 800123c:	f004 ff2c 	bl	8006098 <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001240:	48b4      	ldr	r0, [pc, #720]	; (8001514 <ZadanieDwa+0x310>)
 8001242:	f004 ff9d 	bl	8006180 <HAL_ADC_GetValue>
 8001246:	683b      	ldr	r3, [r7, #0]
 8001248:	4418      	add	r0, r3
 800124a:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc1);
 800124c:	48b2      	ldr	r0, [pc, #712]	; (8001518 <ZadanieDwa+0x314>)
 800124e:	f004 ff23 	bl	8006098 <HAL_ADC_Start>
					value3 += HAL_ADC_GetValue(&hadc1);
 8001252:	48b1      	ldr	r0, [pc, #708]	; (8001518 <ZadanieDwa+0x314>)
 8001254:	f004 ff94 	bl	8006180 <HAL_ADC_GetValue>
 8001258:	6833      	ldr	r3, [r6, #0]
 800125a:	4418      	add	r0, r3
 800125c:	6030      	str	r0, [r6, #0]
					liczbaPomiarow++;
 800125e:	48af      	ldr	r0, [pc, #700]	; (800151c <ZadanieDwa+0x318>)
 8001260:	6803      	ldr	r3, [r0, #0]
 8001262:	f04f 0c0a 	mov.w	ip, #10
 8001266:	3301      	adds	r3, #1
 8001268:	6003      	str	r3, [r0, #0]
 800126a:	fb93 f2fc 	sdiv	r2, r3, ip
 800126e:	fb0c 3312 	mls	r3, ip, r2, r3

					/****** after 1sec ->10ticks every 100ms********/

					if(liczbaPomiarow%10==0){ //After 1 sec
 8001272:	2b00      	cmp	r3, #0
 8001274:	f040 80b1 	bne.w	80013da <ZadanieDwa+0x1d6>

						ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 8001278:	6833      	ldr	r3, [r6, #0]
 800127a:	fbb3 f3fc 	udiv	r3, r3, ip
 800127e:	ee07 3a90 	vmov	s15, r3
 8001282:	4ba7      	ldr	r3, [pc, #668]	; (8001520 <ZadanieDwa+0x31c>)
						ladowarka.VccVoltage=(Vref*4095.0f)/ladowarka.VccVoltage;
 8001284:	eddf 6aa7 	vldr	s13, [pc, #668]	; 8001524 <ZadanieDwa+0x320>
						ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 8001288:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800128c:	edc3 7a00 	vstr	s15, [r3]
						ladowarka.VccVoltage=(Vref*4095.0f)/ladowarka.VccVoltage;
 8001290:	ed93 7a00 	vldr	s14, [r3]
 8001294:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001298:	edc3 7a00 	vstr	s15, [r3]

						ladowarka.BatteryVoltage=(value/10) * ladowarka.VccVoltage / 4095.0f; //Batt voltage
 800129c:	f8d8 1000 	ldr.w	r1, [r8]
 80012a0:	fbb1 f2fc 	udiv	r2, r1, ip
 80012a4:	ee07 2a90 	vmov	s15, r2
 80012a8:	ed93 7a00 	vldr	s14, [r3]
 80012ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012b4:	ed9f 7a9c 	vldr	s14, [pc, #624]	; 8001528 <ZadanieDwa+0x324>
 80012b8:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80012bc:	edc4 6a00 	vstr	s13, [r4]
						ladowarka.ChargingCurrent=(value2/10) * ladowarka.VccVoltage / 4095.0f; // Batt+resistor voltage
 80012c0:	683a      	ldr	r2, [r7, #0]
 80012c2:	fbb2 f2fc 	udiv	r2, r2, ip
 80012c6:	ee07 2a90 	vmov	s15, r2
 80012ca:	edd3 6a00 	vldr	s13, [r3]
 80012ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012d2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80012d6:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80012da:	ed43 6a03 	vstr	s13, [r3, #-12]


						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; // Resistor is 1Ohm, so current equals Voltage, its multipled by 1000 to have result in [mA]
 80012de:	ed53 7a03 	vldr	s15, [r3, #-12]
 80012e2:	ed94 7a00 	vldr	s14, [r4]
 80012e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80012ea:	ed9f 7a90 	vldr	s14, [pc, #576]	; 800152c <ZadanieDwa+0x328>
 80012ee:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012f2:	ed43 7a03 	vstr	s15, [r3, #-12]
						if (ladowarka.ChargingCurrent <=0 ) ladowarka.ChargingCurrent=0;
 80012f6:	ed53 7a03 	vldr	s15, [r3, #-12]
 80012fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80012fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001302:	bf9c      	itt	ls
 8001304:	2200      	movls	r2, #0
 8001306:	f843 2c0c 	strls.w	r2, [r3, #-12]

						if (ladowarka.BatteryVoltage<MinBattVoltage){ladowarka.NoBattFlag=1;} else {ladowarka.NoBattFlag=0;}
 800130a:	ed94 7a00 	vldr	s14, [r4]
 800130e:	eddf 7a88 	vldr	s15, [pc, #544]	; 8001530 <ZadanieDwa+0x32c>
 8001312:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800131a:	bf4c      	ite	mi
 800131c:	2301      	movmi	r3, #1
 800131e:	2300      	movpl	r3, #0
 8001320:	f8c4 3c70 	str.w	r3, [r4, #3184]	; 0xc70

						// if charging started
						if (ladowarka.ChargeStarted ){
 8001324:	6963      	ldr	r3, [r4, #20]
 8001326:	2b00      	cmp	r3, #0
 8001328:	d051      	beq.n	80013ce <ZadanieDwa+0x1ca>
							if (ladowarka.ChargingTimeInSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; ladowarka.AverageFromLastMin = ladowarka.BatteryVoltage; ladowarka.PlotPointOnMinutesGraph=1; }//for measurement 0 add results to array immediatly, and plot it on both graphs
 800132a:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 800132e:	2b00      	cmp	r3, #0
 8001330:	dc07      	bgt.n	8001342 <ZadanieDwa+0x13e>
 8001332:	6823      	ldr	r3, [r4, #0]
 8001334:	61e3      	str	r3, [r4, #28]
 8001336:	4b7f      	ldr	r3, [pc, #508]	; (8001534 <ZadanieDwa+0x330>)
 8001338:	6822      	ldr	r2, [r4, #0]
 800133a:	601a      	str	r2, [r3, #0]
 800133c:	2301      	movs	r3, #1
 800133e:	f8c4 3c58 	str.w	r3, [r4, #3160]	; 0xc58


							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //update  max battery voltage value.
 8001342:	ed94 7a00 	vldr	s14, [r4]
 8001346:	edd4 7a01 	vldr	s15, [r4, #4]
 800134a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800134e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001352:	bfc4      	itt	gt
 8001354:	6823      	ldrgt	r3, [r4, #0]
 8001356:	6063      	strgt	r3, [r4, #4]
							if (ladowarka.BatteryVoltage<ladowarka.MinBatteryVotage) ladowarka.MinBatteryVotage=ladowarka.BatteryVoltage; //update Min battery voltage value.
 8001358:	ed94 7a00 	vldr	s14, [r4]
 800135c:	edd4 7a02 	vldr	s15, [r4, #8]
 8001360:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001364:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001368:	bf44      	itt	mi
 800136a:	6823      	ldrmi	r3, [r4, #0]
 800136c:	60a3      	strmi	r3, [r4, #8]

							if(ladowarka.ChargingCompleted==0){
 800136e:	f8d4 3c64 	ldr.w	r3, [r4, #3172]	; 0xc64
 8001372:	b923      	cbnz	r3, 800137e <ZadanieDwa+0x17a>
							ladowarka.ChargingTimeInSec++; //if charging is ongoing, update charging time (add 1sec)
 8001374:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 8001378:	3301      	adds	r3, #1
 800137a:	f8c4 3c5c 	str.w	r3, [r4, #3164]	; 0xc5c
							}
							ladowarka.PlotPointOnSecGraph=1; //allow to plot  on graph

							/********* every 1 sec add result to array********/
							ladowarka.MeasurementsEverySec[sec0to59++]=ladowarka.BatteryVoltage;
 800137e:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 800154c <ZadanieDwa+0x348>
							ladowarka.PlotPointOnSecGraph=1; //allow to plot  on graph
 8001382:	2301      	movs	r3, #1
 8001384:	f8c4 3c54 	str.w	r3, [r4, #3156]	; 0xc54
							ladowarka.MeasurementsEverySec[sec0to59++]=ladowarka.BatteryVoltage;
 8001388:	f8d9 3000 	ldr.w	r3, [r9]
 800138c:	6821      	ldr	r1, [r4, #0]
 800138e:	1c5a      	adds	r2, r3, #1
 8001390:	f503 7336 	add.w	r3, r3, #728	; 0x2d8
 8001394:	eb04 0383 	add.w	r3, r4, r3, lsl #2
							if (sec0to59>59) {	// if there is 10 elements in array (10 sec passed) average it, and put into NapiecieBaterii array
 8001398:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.MeasurementsEverySec[sec0to59++]=ladowarka.BatteryVoltage;
 800139a:	f8c9 2000 	str.w	r2, [r9]
 800139e:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	// if there is 10 elements in array (10 sec passed) average it, and put into NapiecieBaterii array
 80013a0:	dd15      	ble.n	80013ce <ZadanieDwa+0x1ca>
								//jesli ladujemy to dodaj wartosc do tablicy
								CountAvgFrom60sec();
 80013a2:	f7ff fefb 	bl	800119c <CountAvgFrom60sec>
								if (ladowarka.ChargingCompleted==0){
 80013a6:	f8d4 3c64 	ldr.w	r3, [r4, #3172]	; 0xc64
 80013aa:	b953      	cbnz	r3, 80013c2 <ZadanieDwa+0x1be>
									ladowarka.NapiecieBaterii[ladowarka.ChargingTimeInSec/60]=ladowarka.AverageFromLastMin; // average
 80013ac:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 80013b0:	223c      	movs	r2, #60	; 0x3c
 80013b2:	fb93 f3f2 	sdiv	r3, r3, r2
 80013b6:	4a5f      	ldr	r2, [pc, #380]	; (8001534 <ZadanieDwa+0x330>)
 80013b8:	3306      	adds	r3, #6
 80013ba:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80013be:	6812      	ldr	r2, [r2, #0]
 80013c0:	605a      	str	r2, [r3, #4]
								}

								sec0to59=0;
 80013c2:	2300      	movs	r3, #0
 80013c4:	f8c9 3000 	str.w	r3, [r9]

								ladowarka.PlotPointOnMinutesGraph=1;//allow to plot on graph.
 80013c8:	2301      	movs	r3, #1
 80013ca:	f8c4 3c58 	str.w	r3, [r4, #3160]	; 0xc58
							}

						}


						liczbaPomiarow=0; //after 1 sec set it to 0
 80013ce:	2300      	movs	r3, #0
						value=0; //reset batt voltage measurement
 80013d0:	f8c8 3000 	str.w	r3, [r8]
						liczbaPomiarow=0; //after 1 sec set it to 0
 80013d4:	6003      	str	r3, [r0, #0]
						value2=0; //reset  Batt and resistor voltage
 80013d6:	603b      	str	r3, [r7, #0]
						value3=0; //reset  Vrefin.
 80013d8:	6033      	str	r3, [r6, #0]
					}

					}

					/*************** Generate OpAmp voltage when batt voltage is low -> set current to 1/2 value***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.OpAmpVoltageSet==0 && ladowarka.BatteryVoltage<MinBattVltgForFastCharging){
 80013da:	6963      	ldr	r3, [r4, #20]
 80013dc:	2b01      	cmp	r3, #1
 80013de:	f040 8085 	bne.w	80014ec <ZadanieDwa+0x2e8>
 80013e2:	69a3      	ldr	r3, [r4, #24]
 80013e4:	2b00      	cmp	r3, #0
 80013e6:	f040 8081 	bne.w	80014ec <ZadanieDwa+0x2e8>
 80013ea:	ed94 7a00 	vldr	s14, [r4]
 80013ee:	eddf 7a52 	vldr	s15, [pc, #328]	; 8001538 <ZadanieDwa+0x334>
 80013f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80013f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013fa:	d577      	bpl.n	80014ec <ZadanieDwa+0x2e8>
						SetProperVoltage(ladowarka.LoadingCurrent/2);
 80013fc:	68e0      	ldr	r0, [r4, #12]
 80013fe:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8001402:	1040      	asrs	r0, r0, #1
 8001404:	f7ff fef2 	bl	80011ec <SetProperVoltage>
						volatile int count=SetProperVoltage(ladowarka.LoadingCurrent);
						ladowarka.OpAmpVoltageSet=1;
					}

					/*********************** Safery mecahnizm over precharging -> Max battery Voltage***********************/
					if (ladowarka.BatteryVoltage>MaxBattVoltage){
 8001408:	ed94 7a00 	vldr	s14, [r4]
 800140c:	eddf 7a4b 	vldr	s15, [pc, #300]	; 800153c <ZadanieDwa+0x338>
 8001410:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
						ladowarka.ChargingCompleted=1;
 8001418:	bfc4      	itt	gt
 800141a:	2301      	movgt	r3, #1
 800141c:	f8c4 3c64 	strgt.w	r3, [r4, #3172]	; 0xc64
					}

					/*********************** Safery mecahnizm  over precharging> dV/dT***********************/
					if(ladowarka.ChargingTimeInSec > 20*60){ //if chargin time is longer than 20min
 8001420:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 8001424:	f5b3 6f96 	cmp.w	r3, #1200	; 0x4b0
 8001428:	dd3d      	ble.n	80014a6 <ZadanieDwa+0x2a2>
						//check if masurement [20] is lower than 19mins ago -> masurement[1], and if actual measurement-1min -> masurement[19] is lower than 20 mins ago -> measurement[0]
						if ( (ladowarka.NapiecieBaterii[ladowarka.ChargingTimeInSec/60])  < (ladowarka.NapiecieBaterii[(ladowarka.ChargingTimeInSec/60)-19]) ){
 800142a:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 800142e:	263c      	movs	r6, #60	; 0x3c
 8001430:	fb93 f3f6 	sdiv	r3, r3, r6
 8001434:	3306      	adds	r3, #6
 8001436:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800143a:	ed93 7a01 	vldr	s14, [r3, #4]
 800143e:	f8d4 2c5c 	ldr.w	r2, [r4, #3164]	; 0xc5c
 8001442:	fb92 f2f6 	sdiv	r2, r2, r6
 8001446:	3a0d      	subs	r2, #13
 8001448:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800144c:	edd2 7a01 	vldr	s15, [r2, #4]
 8001450:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001458:	d525      	bpl.n	80014a6 <ZadanieDwa+0x2a2>
							HAL_GPIO_WritePin(Led_green_GPIO_Port, Led_green_Pin,GPIO_PIN_SET); //to be deleted
 800145a:	2201      	movs	r2, #1
 800145c:	4838      	ldr	r0, [pc, #224]	; (8001540 <ZadanieDwa+0x33c>)
 800145e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001462:	f005 f9e7 	bl	8006834 <HAL_GPIO_WritePin>
								if ( ladowarka.NapiecieBaterii[((ladowarka.ChargingTimeInSec/60)-1)]  < (ladowarka.NapiecieBaterii[(ladowarka.ChargingTimeInSec/60)-20]) ){
 8001466:	f8d4 2c5c 	ldr.w	r2, [r4, #3164]	; 0xc5c
 800146a:	fb92 f2f6 	sdiv	r2, r2, r6
 800146e:	3205      	adds	r2, #5
 8001470:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8001474:	ed92 7a01 	vldr	s14, [r2, #4]
 8001478:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 800147c:	fb93 f3f6 	sdiv	r3, r3, r6
 8001480:	3b0e      	subs	r3, #14
 8001482:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8001486:	edd3 7a01 	vldr	s15, [r3, #4]
 800148a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800148e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001492:	d508      	bpl.n	80014a6 <ZadanieDwa+0x2a2>
									HAL_GPIO_WritePin(Led_Red_GPIO_Port, Led_Red_Pin,GPIO_PIN_SET); //to be deleted
 8001494:	482a      	ldr	r0, [pc, #168]	; (8001540 <ZadanieDwa+0x33c>)
 8001496:	2201      	movs	r2, #1
 8001498:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800149c:	f005 f9ca 	bl	8006834 <HAL_GPIO_WritePin>
									ladowarka.ChargingCompleted=1;
 80014a0:	2301      	movs	r3, #1
 80014a2:	f8c4 3c64 	str.w	r3, [r4, #3172]	; 0xc64
								}
						}
					}

					/************** check if chargin should be stopped*****************/
					if(ladowarka.ChargeStarted==1 && (ladowarka.ChargingTimeInSec >= ladowarka.ChargingTime*60*60)) ladowarka.ChargingCompleted=1;
 80014a6:	6962      	ldr	r2, [r4, #20]
 80014a8:	2a01      	cmp	r2, #1
 80014aa:	d109      	bne.n	80014c0 <ZadanieDwa+0x2bc>
 80014ac:	f8d4 1c5c 	ldr.w	r1, [r4, #3164]	; 0xc5c
 80014b0:	6923      	ldr	r3, [r4, #16]
 80014b2:	f44f 6061 	mov.w	r0, #3600	; 0xe10
 80014b6:	4343      	muls	r3, r0
 80014b8:	4299      	cmp	r1, r3
 80014ba:	bfa8      	it	ge
 80014bc:	f8c4 2c64 	strge.w	r2, [r4, #3172]	; 0xc64

					if (ladowarka.ChargingCompleted==1){
 80014c0:	f8d4 3c64 	ldr.w	r3, [r4, #3172]	; 0xc64
 80014c4:	2b01      	cmp	r3, #1
 80014c6:	d102      	bne.n	80014ce <ZadanieDwa+0x2ca>
						SetProperVoltage(CurrentAfterCharging); //Sets CurrentAfterCharging
 80014c8:	200a      	movs	r0, #10
 80014ca:	f7ff fe8f 	bl	80011ec <SetProperVoltage>
					}

					if (ladowarka.NoBattFlag==1 ){
 80014ce:	f8d4 3c70 	ldr.w	r3, [r4, #3184]	; 0xc70
 80014d2:	2b01      	cmp	r3, #1
 80014d4:	d106      	bne.n	80014e4 <ZadanieDwa+0x2e0>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095);  //No battery -> dont charge
 80014d6:	481b      	ldr	r0, [pc, #108]	; (8001544 <ZadanieDwa+0x340>)
 80014d8:	f640 73ff 	movw	r3, #4095	; 0xfff
 80014dc:	2200      	movs	r2, #0
 80014de:	2110      	movs	r1, #16
 80014e0:	f004 ffb1 	bl	8006446 <HAL_DAC_SetValue>
						}


    osDelay(1); //should stay??
 80014e4:	2001      	movs	r0, #1
 80014e6:	f007 f97b 	bl	80087e0 <osDelay>
  {
 80014ea:	e68f      	b.n	800120c <ZadanieDwa+0x8>
					else if(ladowarka.ChargeStarted==1 && ladowarka.OpAmpVoltageSet==0 ) { //if START button on GUI pressed and op amp voltage is not set yet.
 80014ec:	6966      	ldr	r6, [r4, #20]
 80014ee:	2e01      	cmp	r6, #1
 80014f0:	d18a      	bne.n	8001408 <ZadanieDwa+0x204>
 80014f2:	69a3      	ldr	r3, [r4, #24]
 80014f4:	2b00      	cmp	r3, #0
 80014f6:	d187      	bne.n	8001408 <ZadanieDwa+0x204>
						volatile int count=SetProperVoltage(ladowarka.LoadingCurrent);
 80014f8:	68e0      	ldr	r0, [r4, #12]
 80014fa:	f7ff fe77 	bl	80011ec <SetProperVoltage>
 80014fe:	9001      	str	r0, [sp, #4]
						ladowarka.OpAmpVoltageSet=1;
 8001500:	61a6      	str	r6, [r4, #24]
 8001502:	e781      	b.n	8001408 <ZadanieDwa+0x204>
 8001504:	20003c5c 	.word	0x20003c5c
 8001508:	200039f0 	.word	0x200039f0
 800150c:	200048e0 	.word	0x200048e0
 8001510:	200048e4 	.word	0x200048e4
 8001514:	200039a8 	.word	0x200039a8
 8001518:	20003960 	.word	0x20003960
 800151c:	200048d4 	.word	0x200048d4
 8001520:	200048c8 	.word	0x200048c8
 8001524:	459ad79a 	.word	0x459ad79a
 8001528:	457ff000 	.word	0x457ff000
 800152c:	447a0000 	.word	0x447a0000
 8001530:	3f333333 	.word	0x3f333333
 8001534:	200048c4 	.word	0x200048c4
 8001538:	3f666666 	.word	0x3f666666
 800153c:	3fcccccd 	.word	0x3fcccccd
 8001540:	40021800 	.word	0x40021800
 8001544:	20003a40 	.word	0x20003a40
 8001548:	200048dc 	.word	0x200048dc
 800154c:	200048d8 	.word	0x200048d8

08001550 <SystemClock_Config>:
{
 8001550:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001552:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001554:	2210      	movs	r2, #16
 8001556:	2100      	movs	r1, #0
 8001558:	a80a      	add	r0, sp, #40	; 0x28
 800155a:	f01f fbf7 	bl	8020d4c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800155e:	2214      	movs	r2, #20
 8001560:	2100      	movs	r1, #0
 8001562:	a803      	add	r0, sp, #12
 8001564:	f01f fbf2 	bl	8020d4c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001568:	2100      	movs	r1, #0
 800156a:	2230      	movs	r2, #48	; 0x30
 800156c:	a814      	add	r0, sp, #80	; 0x50
 800156e:	f01f fbed 	bl	8020d4c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001572:	2400      	movs	r4, #0
 8001574:	4b22      	ldr	r3, [pc, #136]	; (8001600 <SystemClock_Config+0xb0>)
 8001576:	9401      	str	r4, [sp, #4]
 8001578:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800157a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800157e:	641a      	str	r2, [r3, #64]	; 0x40
 8001580:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001582:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001586:	9301      	str	r3, [sp, #4]
 8001588:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800158a:	4b1e      	ldr	r3, [pc, #120]	; (8001604 <SystemClock_Config+0xb4>)
 800158c:	9402      	str	r4, [sp, #8]
 800158e:	681a      	ldr	r2, [r3, #0]
 8001590:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001594:	601a      	str	r2, [r3, #0]
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800159c:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800159e:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80015a0:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80015a2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80015a6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80015aa:	2502      	movs	r5, #2
 80015ac:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80015b0:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80015b4:	2708      	movs	r7, #8
 80015b6:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80015ba:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80015bc:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 80015be:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80015c2:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80015c4:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80015c6:	f005 ff31 	bl	800742c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80015ca:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80015cc:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80015d0:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80015d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80015d8:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80015dc:	a803      	add	r0, sp, #12
 80015de:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80015e0:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80015e2:	f006 f8fb 	bl	80077dc <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80015e6:	23c0      	movs	r3, #192	; 0xc0
 80015e8:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80015ea:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80015ec:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80015f0:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80015f2:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80015f4:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80015f6:	f006 f9cb 	bl	8007990 <HAL_RCCEx_PeriphCLKConfig>
}
 80015fa:	b021      	add	sp, #132	; 0x84
 80015fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015fe:	bf00      	nop
 8001600:	40023800 	.word	0x40023800
 8001604:	40007000 	.word	0x40007000

08001608 <main>:
{
 8001608:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 800160c:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 800160e:	f004 fc5d 	bl	8005ecc <HAL_Init>
  SystemClock_Config();
 8001612:	f7ff ff9d 	bl	8001550 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001616:	2214      	movs	r2, #20
 8001618:	2100      	movs	r1, #0
 800161a:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800161c:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800161e:	f01f fb95 	bl	8020d4c <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001622:	4bc6      	ldr	r3, [pc, #792]	; (800193c <main+0x334>)
 8001624:	9400      	str	r4, [sp, #0]
 8001626:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001628:	48c5      	ldr	r0, [pc, #788]	; (8001940 <main+0x338>)
  hi2c3.Instance = I2C3;
 800162a:	4ec6      	ldr	r6, [pc, #792]	; (8001944 <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800162c:	f042 0220 	orr.w	r2, r2, #32
 8001630:	631a      	str	r2, [r3, #48]	; 0x30
 8001632:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001634:	f002 0220 	and.w	r2, r2, #32
 8001638:	9200      	str	r2, [sp, #0]
 800163a:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800163c:	9401      	str	r4, [sp, #4]
 800163e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001640:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001644:	631a      	str	r2, [r3, #48]	; 0x30
 8001646:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001648:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800164c:	9201      	str	r2, [sp, #4]
 800164e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001650:	9402      	str	r4, [sp, #8]
 8001652:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001654:	f042 0204 	orr.w	r2, r2, #4
 8001658:	631a      	str	r2, [r3, #48]	; 0x30
 800165a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800165c:	f002 0204 	and.w	r2, r2, #4
 8001660:	9202      	str	r2, [sp, #8]
 8001662:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001664:	9403      	str	r4, [sp, #12]
 8001666:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001668:	f042 0201 	orr.w	r2, r2, #1
 800166c:	631a      	str	r2, [r3, #48]	; 0x30
 800166e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001670:	f002 0201 	and.w	r2, r2, #1
 8001674:	9203      	str	r2, [sp, #12]
 8001676:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001678:	9404      	str	r4, [sp, #16]
 800167a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800167c:	f042 0202 	orr.w	r2, r2, #2
 8001680:	631a      	str	r2, [r3, #48]	; 0x30
 8001682:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001684:	f002 0202 	and.w	r2, r2, #2
 8001688:	9204      	str	r2, [sp, #16]
 800168a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800168c:	9405      	str	r4, [sp, #20]
 800168e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001690:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001694:	631a      	str	r2, [r3, #48]	; 0x30
 8001696:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001698:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800169c:	9205      	str	r2, [sp, #20]
 800169e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80016a0:	9406      	str	r4, [sp, #24]
 80016a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016a4:	f042 0210 	orr.w	r2, r2, #16
 80016a8:	631a      	str	r2, [r3, #48]	; 0x30
 80016aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016ac:	f002 0210 	and.w	r2, r2, #16
 80016b0:	9206      	str	r2, [sp, #24]
 80016b2:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80016b4:	9407      	str	r4, [sp, #28]
 80016b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016b8:	f042 0208 	orr.w	r2, r2, #8
 80016bc:	631a      	str	r2, [r3, #48]	; 0x30
 80016be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016c0:	f003 0308 	and.w	r3, r3, #8
 80016c4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016c6:	4622      	mov	r2, r4
 80016c8:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80016ca:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016cc:	f005 f8b2 	bl	8006834 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80016d0:	489d      	ldr	r0, [pc, #628]	; (8001948 <main+0x340>)
 80016d2:	4622      	mov	r2, r4
 80016d4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80016d8:	f005 f8ac 	bl	8006834 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80016dc:	489b      	ldr	r0, [pc, #620]	; (800194c <main+0x344>)
 80016de:	4622      	mov	r2, r4
 80016e0:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80016e4:	f005 f8a6 	bl	8006834 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, Led_green_Pin|Led_Red_Pin, GPIO_PIN_RESET);
 80016e8:	4622      	mov	r2, r4
 80016ea:	4899      	ldr	r0, [pc, #612]	; (8001950 <main+0x348>)
 80016ec:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016f0:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOG, Led_green_Pin|Led_Red_Pin, GPIO_PIN_RESET);
 80016f2:	f005 f89f 	bl	8006834 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80016f6:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016f8:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016fc:	4890      	ldr	r0, [pc, #576]	; (8001940 <main+0x338>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80016fe:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001700:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001702:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001706:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001708:	f004 ffac 	bl	8006664 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800170c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001710:	488d      	ldr	r0, [pc, #564]	; (8001948 <main+0x340>)
 8001712:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001714:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001718:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800171c:	f004 ffa2 	bl	8006664 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001720:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001724:	4889      	ldr	r0, [pc, #548]	; (800194c <main+0x344>)
 8001726:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001728:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800172c:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001730:	f004 ff98 	bl	8006664 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001734:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = Led_green_Pin|Led_Red_Pin;
 8001736:	f44f 42c0 	mov.w	r2, #24576	; 0x6000
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800173a:	4885      	ldr	r0, [pc, #532]	; (8001950 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800173c:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001740:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001744:	f004 ff8e 	bl	8006664 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001748:	4882      	ldr	r0, [pc, #520]	; (8001954 <main+0x34c>)
 800174a:	4a83      	ldr	r2, [pc, #524]	; (8001958 <main+0x350>)
 800174c:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800174e:	f004 fe09 	bl	8006364 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001752:	4b82      	ldr	r3, [pc, #520]	; (800195c <main+0x354>)
 8001754:	4a82      	ldr	r2, [pc, #520]	; (8001960 <main+0x358>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001756:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001758:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800175c:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800175e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001762:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001766:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800176a:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800176e:	f005 fa43 	bl	8006bf8 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001772:	2110      	movs	r1, #16
 8001774:	4630      	mov	r0, r6
 8001776:	f005 fc7f 	bl	8007078 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800177a:	4621      	mov	r1, r4
 800177c:	4630      	mov	r0, r6
 800177e:	f005 fc9a 	bl	80070b6 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001782:	4878      	ldr	r0, [pc, #480]	; (8001964 <main+0x35c>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001784:	4978      	ldr	r1, [pc, #480]	; (8001968 <main+0x360>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001786:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001788:	f44f 7282 	mov.w	r2, #260	; 0x104
 800178c:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001790:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001794:	2218      	movs	r2, #24
 8001796:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800179a:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800179c:	4e73      	ldr	r6, [pc, #460]	; (800196c <main+0x364>)
  hspi5.Init.CRCPolynomial = 10;
 800179e:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80017a0:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80017a4:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80017a8:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80017ac:	f006 faf4 	bl	8007d98 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80017b0:	4a6f      	ldr	r2, [pc, #444]	; (8001970 <main+0x368>)
  SdramTiming.LoadToActiveDelay = 2;
 80017b2:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017b4:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80017b8:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017bc:	2240      	movs	r2, #64	; 0x40
 80017be:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017c2:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017c6:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80017ca:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 80017ce:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017d0:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80017d4:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017d8:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80017da:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017de:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 80017e0:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80017e4:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017e8:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80017ec:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 80017ee:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RCDDelay = 2;
 80017f2:	9713      	str	r7, [sp, #76]	; 0x4c
  SdramTiming.RowCycleDelay = 7;
 80017f4:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017f8:	f006 f9f4 	bl	8007be4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80017fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001800:	a909      	add	r1, sp, #36	; 0x24
 8001802:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 8001804:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001808:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 800180a:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800180c:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800180e:	f006 fa09 	bl	8007c24 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001812:	4628      	mov	r0, r5
 8001814:	f004 fb86 	bl	8005f24 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001818:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800181c:	a909      	add	r1, sp, #36	; 0x24
 800181e:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001820:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001824:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001828:	f006 f9fc 	bl	8007c24 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800182c:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800182e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001832:	a909      	add	r1, sp, #36	; 0x24
 8001834:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001836:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800183a:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800183e:	f006 f9f1 	bl	8007c24 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001842:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001846:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001848:	9b08      	ldr	r3, [sp, #32]
 800184a:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800184c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001850:	a909      	add	r1, sp, #36	; 0x24
 8001852:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001854:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8001858:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800185a:	f006 f9e3 	bl	8007c24 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 800185e:	f240 516a 	movw	r1, #1386	; 0x56a
 8001862:	4630      	mov	r0, r6
 8001864:	f006 f9f5 	bl	8007c52 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001868:	2234      	movs	r2, #52	; 0x34
 800186a:	4621      	mov	r1, r4
 800186c:	eb0d 0002 	add.w	r0, sp, r2
 8001870:	f01f fa6c 	bl	8020d4c <memset>
  hltdc.Instance = LTDC;
 8001874:	4e3f      	ldr	r6, [pc, #252]	; (8001974 <main+0x36c>)
 8001876:	4b40      	ldr	r3, [pc, #256]	; (8001978 <main+0x370>)
  hltdc.Init.Backcolor.Blue = 0;
 8001878:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800187a:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 800187e:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 8001880:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 8001884:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 8001888:	2303      	movs	r3, #3
 800188a:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800188e:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001892:	f240 1343 	movw	r3, #323	; 0x143
 8001896:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 800189a:	f240 1917 	movw	r9, #279	; 0x117
 800189e:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80018a2:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 80018a4:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80018a8:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80018ac:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 80018ae:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80018b2:	f005 fca5 	bl	8007200 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80018b6:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 80018b8:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 80018ba:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80018be:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 80018c2:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80018c4:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80018c8:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 80018cc:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018d0:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 80018d2:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018d6:	4630      	mov	r0, r6
 80018d8:	4622      	mov	r2, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80018da:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 80018de:	4e27      	ldr	r6, [pc, #156]	; (800197c <main+0x374>)
  pLayerCfg.ImageHeight = 320;
 80018e0:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 80018e2:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80018e4:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80018e8:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018ec:	f005 fd53 	bl	8007396 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80018f0:	4b23      	ldr	r3, [pc, #140]	; (8001980 <main+0x378>)
 80018f2:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 80018f4:	681b      	ldr	r3, [r3, #0]
  hdac.Instance = DAC;
 80018f6:	f8df 909c 	ldr.w	r9, [pc, #156]	; 8001994 <main+0x38c>
  LcdDrv->Init();
 80018fa:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80018fc:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 80018fe:	4e21      	ldr	r6, [pc, #132]	; (8001984 <main+0x37c>)
  LcdDrv->DisplayOff();
 8001900:	68db      	ldr	r3, [r3, #12]
 8001902:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001904:	4b20      	ldr	r3, [pc, #128]	; (8001988 <main+0x380>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001906:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800190a:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800190e:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001910:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001914:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001918:	f004 fda7 	bl	800646a <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800191c:	4629      	mov	r1, r5
 800191e:	4630      	mov	r0, r6
 8001920:	f004 fe5c 	bl	80065dc <HAL_DMA2D_ConfigLayer>
  htim7.Instance = TIM7;
 8001924:	4e19      	ldr	r6, [pc, #100]	; (800198c <main+0x384>)
  htim7.Init.Prescaler = 8400-1;
 8001926:	4a1a      	ldr	r2, [pc, #104]	; (8001990 <main+0x388>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001928:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 800192a:	f242 03cf 	movw	r3, #8399	; 0x20cf
 800192e:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001932:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1;
 8001934:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001938:	60f3      	str	r3, [r6, #12]
 800193a:	e02d      	b.n	8001998 <main+0x390>
 800193c:	40023800 	.word	0x40023800
 8001940:	40020800 	.word	0x40020800
 8001944:	20003a94 	.word	0x20003a94
 8001948:	40020400 	.word	0x40020400
 800194c:	40020c00 	.word	0x40020c00
 8001950:	40021800 	.word	0x40021800
 8001954:	20003a38 	.word	0x20003a38
 8001958:	40023000 	.word	0x40023000
 800195c:	40005c00 	.word	0x40005c00
 8001960:	000186a0 	.word	0x000186a0
 8001964:	20003bc4 	.word	0x20003bc4
 8001968:	40015000 	.word	0x40015000
 800196c:	20003b90 	.word	0x20003b90
 8001970:	a0000140 	.word	0xa0000140
 8001974:	20003ae8 	.word	0x20003ae8
 8001978:	40016800 	.word	0x40016800
 800197c:	20003958 	.word	0x20003958
 8001980:	2000001c 	.word	0x2000001c
 8001984:	20003a54 	.word	0x20003a54
 8001988:	4002b000 	.word	0x4002b000
 800198c:	20003c1c 	.word	0x20003c1c
 8001990:	40001400 	.word	0x40001400
 8001994:	20003a40 	.word	0x20003a40
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001998:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800199c:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800199e:	f006 fd95 	bl	80084cc <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80019a2:	a90d      	add	r1, sp, #52	; 0x34
 80019a4:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80019a6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80019aa:	f006 fda9 	bl	8008500 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 80019ae:	4b51      	ldr	r3, [pc, #324]	; (8001af4 <main+0x4ec>)
 80019b0:	f8c9 3000 	str.w	r3, [r9]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 80019b4:	4648      	mov	r0, r9
  DAC_ChannelConfTypeDef sConfig = {0};
 80019b6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 80019ba:	f004 fce3 	bl	8006384 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 80019be:	4642      	mov	r2, r8
 80019c0:	a90d      	add	r1, sp, #52	; 0x34
 80019c2:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 80019c4:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 80019c8:	f004 fd1c 	bl	8006404 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 80019cc:	4621      	mov	r1, r4
 80019ce:	4642      	mov	r2, r8
 80019d0:	a80d      	add	r0, sp, #52	; 0x34
 80019d2:	f01f f9bb 	bl	8020d4c <memset>
  hadc2.Instance = ADC2;
 80019d6:	4a48      	ldr	r2, [pc, #288]	; (8001af8 <main+0x4f0>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80019d8:	4b48      	ldr	r3, [pc, #288]	; (8001afc <main+0x4f4>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 80019da:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80019dc:	f44f 3b80 	mov.w	fp, #65536	; 0x10000
 80019e0:	e9c2 3b00 	strd	r3, fp, [r2]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80019e4:	4610      	mov	r0, r2
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80019e6:	4b46      	ldr	r3, [pc, #280]	; (8001b00 <main+0x4f8>)
 80019e8:	6293      	str	r3, [r2, #40]	; 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 80019ea:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 80019ec:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80019ee:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80019f2:	62d4      	str	r4, [r2, #44]	; 0x2c
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80019f4:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 80019f6:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 80019f8:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80019fc:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80019fe:	f004 faa5 	bl	8005f4c <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001a02:	4a3d      	ldr	r2, [pc, #244]	; (8001af8 <main+0x4f0>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001a04:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001a08:	a90d      	add	r1, sp, #52	; 0x34
 8001a0a:	4610      	mov	r0, r2
  sConfig.Rank = 1;
 8001a0c:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  hadc3.Instance = ADC3;
 8001a10:	4f3c      	ldr	r7, [pc, #240]	; (8001b04 <main+0x4fc>)
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001a12:	f004 fbb9 	bl	8006188 <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001a16:	4621      	mov	r1, r4
 8001a18:	4642      	mov	r2, r8
 8001a1a:	a80d      	add	r0, sp, #52	; 0x34
 8001a1c:	f01f f996 	bl	8020d4c <memset>
  hadc3.Instance = ADC3;
 8001a20:	4a39      	ldr	r2, [pc, #228]	; (8001b08 <main+0x500>)
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001a22:	4b37      	ldr	r3, [pc, #220]	; (8001b00 <main+0x4f8>)
 8001a24:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8001a26:	4638      	mov	r0, r7
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001a28:	e9c7 2b00 	strd	r2, fp, [r7]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8001a2c:	60bc      	str	r4, [r7, #8]
  hadc3.Init.ScanConvMode = DISABLE;
 8001a2e:	613c      	str	r4, [r7, #16]
  hadc3.Init.ContinuousConvMode = ENABLE;
 8001a30:	763d      	strb	r5, [r7, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8001a32:	f887 4020 	strb.w	r4, [r7, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001a36:	62fc      	str	r4, [r7, #44]	; 0x2c
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001a38:	60fc      	str	r4, [r7, #12]
  hadc3.Init.NbrOfConversion = 1;
 8001a3a:	61fd      	str	r5, [r7, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 8001a3c:	f887 4030 	strb.w	r4, [r7, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001a40:	617d      	str	r5, [r7, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8001a42:	f004 fa83 	bl	8005f4c <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001a46:	a90d      	add	r1, sp, #52	; 0x34
 8001a48:	4638      	mov	r0, r7
  sConfig.Rank = 1;
 8001a4a:	e9cd 550d 	strd	r5, r5, [sp, #52]	; 0x34
  hadc1.Instance = ADC1;
 8001a4e:	4f2f      	ldr	r7, [pc, #188]	; (8001b0c <main+0x504>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001a50:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001a54:	f004 fb98 	bl	8006188 <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001a58:	4621      	mov	r1, r4
 8001a5a:	4642      	mov	r2, r8
 8001a5c:	a80d      	add	r0, sp, #52	; 0x34
 8001a5e:	f01f f975 	bl	8020d4c <memset>
  hadc1.Instance = ADC1;
 8001a62:	4a2b      	ldr	r2, [pc, #172]	; (8001b10 <main+0x508>)
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001a64:	4b26      	ldr	r3, [pc, #152]	; (8001b00 <main+0x4f8>)
 8001a66:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001a68:	4638      	mov	r0, r7
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001a6a:	e9c7 2b00 	strd	r2, fp, [r7]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001a6e:	60bc      	str	r4, [r7, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001a70:	613c      	str	r4, [r7, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8001a72:	763d      	strb	r5, [r7, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001a74:	f887 4020 	strb.w	r4, [r7, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001a78:	62fc      	str	r4, [r7, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001a7a:	60fc      	str	r4, [r7, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001a7c:	61fd      	str	r5, [r7, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001a7e:	f887 4030 	strb.w	r4, [r7, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001a82:	617d      	str	r5, [r7, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001a84:	f004 fa62 	bl	8005f4c <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 8001a88:	2311      	movs	r3, #17
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001a8a:	a90d      	add	r1, sp, #52	; 0x34
 8001a8c:	4638      	mov	r0, r7
  sConfig.Rank = 1;
 8001a8e:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001a92:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001a96:	f004 fb77 	bl	8006188 <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 8001a9a:	f7fe fda4 	bl	80005e6 <MX_TouchGFX_Init>
  ladowarka.VccVoltage=3.3f;
 8001a9e:	4b1d      	ldr	r3, [pc, #116]	; (8001b14 <main+0x50c>)
 8001aa0:	491d      	ldr	r1, [pc, #116]	; (8001b18 <main+0x510>)
 8001aa2:	f603 426c 	addw	r2, r3, #3180	; 0xc6c
  HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 8001aa6:	4648      	mov	r0, r9
  ladowarka.VccVoltage=3.3f;
 8001aa8:	6011      	str	r1, [r2, #0]
  ladowarka.MinBatteryVotage=1.4;
 8001aaa:	4a1c      	ldr	r2, [pc, #112]	; (8001b1c <main+0x514>)
 8001aac:	609a      	str	r2, [r3, #8]
  HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 8001aae:	4641      	mov	r1, r8
  ladowarka.adjustment=0;
 8001ab0:	f8c3 4c74 	str.w	r4, [r3, #3188]	; 0xc74
  HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 8001ab4:	f004 fc79 	bl	80063aa <HAL_DAC_Start>
  HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //sets max voltage on opAmp to not charge battery.
 8001ab8:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001abc:	4622      	mov	r2, r4
 8001abe:	4641      	mov	r1, r8
 8001ac0:	4648      	mov	r0, r9
 8001ac2:	f004 fcc0 	bl	8006446 <HAL_DAC_SetValue>
  HAL_TIM_Base_Start_IT(&htim7); //timer seven start
 8001ac6:	4630      	mov	r0, r6
 8001ac8:	f006 fbe3 	bl	8008292 <HAL_TIM_Base_Start_IT>
  osKernelInitialize();
 8001acc:	f006 fdf8 	bl	80086c0 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001ad0:	4a13      	ldr	r2, [pc, #76]	; (8001b20 <main+0x518>)
 8001ad2:	4814      	ldr	r0, [pc, #80]	; (8001b24 <main+0x51c>)
 8001ad4:	4621      	mov	r1, r4
 8001ad6:	f006 fe2d 	bl	8008734 <osThreadNew>
 8001ada:	4b13      	ldr	r3, [pc, #76]	; (8001b28 <main+0x520>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 8001adc:	4a13      	ldr	r2, [pc, #76]	; (8001b2c <main+0x524>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001ade:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 8001ae0:	4621      	mov	r1, r4
 8001ae2:	4813      	ldr	r0, [pc, #76]	; (8001b30 <main+0x528>)
 8001ae4:	f006 fe26 	bl	8008734 <osThreadNew>
 8001ae8:	4b12      	ldr	r3, [pc, #72]	; (8001b34 <main+0x52c>)
 8001aea:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001aec:	f006 fe02 	bl	80086f4 <osKernelStart>
  while (1)
 8001af0:	e7fe      	b.n	8001af0 <main+0x4e8>
 8001af2:	bf00      	nop
 8001af4:	40007400 	.word	0x40007400
 8001af8:	200039a8 	.word	0x200039a8
 8001afc:	40012100 	.word	0x40012100
 8001b00:	0f000001 	.word	0x0f000001
 8001b04:	200039f0 	.word	0x200039f0
 8001b08:	40012200 	.word	0x40012200
 8001b0c:	20003960 	.word	0x20003960
 8001b10:	40012000 	.word	0x40012000
 8001b14:	20003c5c 	.word	0x20003c5c
 8001b18:	40533333 	.word	0x40533333
 8001b1c:	3fb33333 	.word	0x3fb33333
 8001b20:	080222fc 	.word	0x080222fc
 8001b24:	080005eb 	.word	0x080005eb
 8001b28:	20003954 	.word	0x20003954
 8001b2c:	08022320 	.word	0x08022320
 8001b30:	08001205 	.word	0x08001205
 8001b34:	2000395c 	.word	0x2000395c

08001b38 <IOE_Init>:
 8001b38:	4770      	bx	lr

08001b3a <IOE_ITConfig>:
 8001b3a:	4770      	bx	lr

08001b3c <IOE_Write>:
{
 8001b3c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001b3e:	4b09      	ldr	r3, [pc, #36]	; (8001b64 <IOE_Write+0x28>)
 8001b40:	f88d 2017 	strb.w	r2, [sp, #23]
 8001b44:	681b      	ldr	r3, [r3, #0]
 8001b46:	9302      	str	r3, [sp, #8]
 8001b48:	f10d 0217 	add.w	r2, sp, #23
 8001b4c:	2301      	movs	r3, #1
 8001b4e:	9200      	str	r2, [sp, #0]
 8001b50:	9301      	str	r3, [sp, #4]
 8001b52:	460a      	mov	r2, r1
 8001b54:	4601      	mov	r1, r0
 8001b56:	4804      	ldr	r0, [pc, #16]	; (8001b68 <IOE_Write+0x2c>)
 8001b58:	f005 f8f6 	bl	8006d48 <HAL_I2C_Mem_Write>
}
 8001b5c:	b007      	add	sp, #28
 8001b5e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b62:	bf00      	nop
 8001b64:	2000000c 	.word	0x2000000c
 8001b68:	20003a94 	.word	0x20003a94

08001b6c <IOE_Read>:
{
 8001b6c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001b6e:	2300      	movs	r3, #0
 8001b70:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001b74:	4b08      	ldr	r3, [pc, #32]	; (8001b98 <IOE_Read+0x2c>)
 8001b76:	681b      	ldr	r3, [r3, #0]
 8001b78:	9302      	str	r3, [sp, #8]
{
 8001b7a:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001b7c:	2301      	movs	r3, #1
 8001b7e:	f10d 0117 	add.w	r1, sp, #23
 8001b82:	9100      	str	r1, [sp, #0]
 8001b84:	9301      	str	r3, [sp, #4]
 8001b86:	4601      	mov	r1, r0
 8001b88:	4804      	ldr	r0, [pc, #16]	; (8001b9c <IOE_Read+0x30>)
 8001b8a:	f005 f96d 	bl	8006e68 <HAL_I2C_Mem_Read>
}
 8001b8e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001b92:	b007      	add	sp, #28
 8001b94:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b98:	2000000c 	.word	0x2000000c
 8001b9c:	20003a94 	.word	0x20003a94

08001ba0 <IOE_ReadMultiple>:
{
 8001ba0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001ba2:	4c08      	ldr	r4, [pc, #32]	; (8001bc4 <IOE_ReadMultiple+0x24>)
 8001ba4:	6824      	ldr	r4, [r4, #0]
 8001ba6:	9200      	str	r2, [sp, #0]
 8001ba8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001bac:	460a      	mov	r2, r1
 8001bae:	2301      	movs	r3, #1
 8001bb0:	4601      	mov	r1, r0
 8001bb2:	4805      	ldr	r0, [pc, #20]	; (8001bc8 <IOE_ReadMultiple+0x28>)
 8001bb4:	f005 f958 	bl	8006e68 <HAL_I2C_Mem_Read>
}
 8001bb8:	3800      	subs	r0, #0
 8001bba:	bf18      	it	ne
 8001bbc:	2001      	movne	r0, #1
 8001bbe:	b004      	add	sp, #16
 8001bc0:	bd10      	pop	{r4, pc}
 8001bc2:	bf00      	nop
 8001bc4:	2000000c 	.word	0x2000000c
 8001bc8:	20003a94 	.word	0x20003a94

08001bcc <IOE_Delay>:
 8001bcc:	f004 b9aa 	b.w	8005f24 <HAL_Delay>

08001bd0 <LCD_IO_Init>:
{
 8001bd0:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001bd2:	4806      	ldr	r0, [pc, #24]	; (8001bec <LCD_IO_Init+0x1c>)
 8001bd4:	2200      	movs	r2, #0
 8001bd6:	2104      	movs	r1, #4
 8001bd8:	f004 fe2c 	bl	8006834 <HAL_GPIO_WritePin>
}
 8001bdc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001be0:	4802      	ldr	r0, [pc, #8]	; (8001bec <LCD_IO_Init+0x1c>)
 8001be2:	2201      	movs	r2, #1
 8001be4:	2104      	movs	r1, #4
 8001be6:	f004 be25 	b.w	8006834 <HAL_GPIO_WritePin>
 8001bea:	bf00      	nop
 8001bec:	40020800 	.word	0x40020800

08001bf0 <LCD_IO_WriteData>:
{
 8001bf0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001bf2:	4d0b      	ldr	r5, [pc, #44]	; (8001c20 <LCD_IO_WriteData+0x30>)
{
 8001bf4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001bf6:	2201      	movs	r2, #1
 8001bf8:	480a      	ldr	r0, [pc, #40]	; (8001c24 <LCD_IO_WriteData+0x34>)
 8001bfa:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001bfe:	f004 fe19 	bl	8006834 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c02:	2200      	movs	r2, #0
 8001c04:	2104      	movs	r1, #4
 8001c06:	4628      	mov	r0, r5
 8001c08:	f004 fe14 	bl	8006834 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001c0c:	4620      	mov	r0, r4
 8001c0e:	f7ff fab3 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c12:	4628      	mov	r0, r5
 8001c14:	2201      	movs	r2, #1
}
 8001c16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c1a:	2104      	movs	r1, #4
 8001c1c:	f004 be0a 	b.w	8006834 <HAL_GPIO_WritePin>
 8001c20:	40020800 	.word	0x40020800
 8001c24:	40020c00 	.word	0x40020c00

08001c28 <LCD_IO_WriteReg>:
{
 8001c28:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c2a:	4d0b      	ldr	r5, [pc, #44]	; (8001c58 <LCD_IO_WriteReg+0x30>)
{
 8001c2c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001c2e:	2200      	movs	r2, #0
 8001c30:	480a      	ldr	r0, [pc, #40]	; (8001c5c <LCD_IO_WriteReg+0x34>)
 8001c32:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001c36:	f004 fdfd 	bl	8006834 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c3a:	2200      	movs	r2, #0
 8001c3c:	2104      	movs	r1, #4
 8001c3e:	4628      	mov	r0, r5
 8001c40:	f004 fdf8 	bl	8006834 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001c44:	4620      	mov	r0, r4
 8001c46:	f7ff fa97 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c4a:	4628      	mov	r0, r5
 8001c4c:	2201      	movs	r2, #1
}
 8001c4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c52:	2104      	movs	r1, #4
 8001c54:	f004 bdee 	b.w	8006834 <HAL_GPIO_WritePin>
 8001c58:	40020800 	.word	0x40020800
 8001c5c:	40020c00 	.word	0x40020c00

08001c60 <LCD_IO_ReadData>:
{
 8001c60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c62:	4e14      	ldr	r6, [pc, #80]	; (8001cb4 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001c64:	4f14      	ldr	r7, [pc, #80]	; (8001cb8 <LCD_IO_ReadData+0x58>)
{
 8001c66:	4605      	mov	r5, r0
 8001c68:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c6a:	4630      	mov	r0, r6
 8001c6c:	2200      	movs	r2, #0
 8001c6e:	2104      	movs	r1, #4
 8001c70:	f004 fde0 	bl	8006834 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001c74:	2200      	movs	r2, #0
 8001c76:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001c7a:	4638      	mov	r0, r7
 8001c7c:	f004 fdda 	bl	8006834 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001c80:	4628      	mov	r0, r5
 8001c82:	f7ff fa79 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001c86:	4b0d      	ldr	r3, [pc, #52]	; (8001cbc <LCD_IO_ReadData+0x5c>)
 8001c88:	480d      	ldr	r0, [pc, #52]	; (8001cc0 <LCD_IO_ReadData+0x60>)
 8001c8a:	681b      	ldr	r3, [r3, #0]
 8001c8c:	4622      	mov	r2, r4
 8001c8e:	a901      	add	r1, sp, #4
 8001c90:	f006 fa5d 	bl	800814e <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001c94:	4638      	mov	r0, r7
 8001c96:	2201      	movs	r2, #1
 8001c98:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001c9c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001c9e:	f004 fdc9 	bl	8006834 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ca2:	4630      	mov	r0, r6
 8001ca4:	2201      	movs	r2, #1
 8001ca6:	2104      	movs	r1, #4
 8001ca8:	f004 fdc4 	bl	8006834 <HAL_GPIO_WritePin>
}
 8001cac:	4620      	mov	r0, r4
 8001cae:	b003      	add	sp, #12
 8001cb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cb2:	bf00      	nop
 8001cb4:	40020800 	.word	0x40020800
 8001cb8:	40020c00 	.word	0x40020c00
 8001cbc:	20000010 	.word	0x20000010
 8001cc0:	20003bc4 	.word	0x20003bc4

08001cc4 <LCD_Delay>:
  HAL_Delay(Delay);
 8001cc4:	f004 b92e 	b.w	8005f24 <HAL_Delay>

08001cc8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001cc8:	6802      	ldr	r2, [r0, #0]
 8001cca:	4b08      	ldr	r3, [pc, #32]	; (8001cec <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001ccc:	429a      	cmp	r2, r3
{
 8001cce:	b510      	push	{r4, lr}
 8001cd0:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001cd2:	d101      	bne.n	8001cd8 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001cd4:	f004 f914 	bl	8005f00 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001cd8:	6822      	ldr	r2, [r4, #0]
 8001cda:	4b05      	ldr	r3, [pc, #20]	; (8001cf0 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001cdc:	429a      	cmp	r2, r3
	  ladowarka.Passed100ms=1;
 8001cde:	bf02      	ittt	eq
 8001ce0:	4b04      	ldreq	r3, [pc, #16]	; (8001cf4 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001ce2:	2201      	moveq	r2, #1
 8001ce4:	f8c3 2c50 	streq.w	r2, [r3, #3152]	; 0xc50
  }

  /* USER CODE END Callback 1 */
}
 8001ce8:	bd10      	pop	{r4, pc}
 8001cea:	bf00      	nop
 8001cec:	40010400 	.word	0x40010400
 8001cf0:	40001400 	.word	0x40001400
 8001cf4:	20003c5c 	.word	0x20003c5c

08001cf8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001cf8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001cfa:	4b0e      	ldr	r3, [pc, #56]	; (8001d34 <HAL_MspInit+0x3c>)
 8001cfc:	2200      	movs	r2, #0
 8001cfe:	9200      	str	r2, [sp, #0]
 8001d00:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001d02:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001d06:	6459      	str	r1, [r3, #68]	; 0x44
 8001d08:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001d0a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001d0e:	9100      	str	r1, [sp, #0]
 8001d10:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001d12:	9201      	str	r2, [sp, #4]
 8001d14:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001d16:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001d1a:	6419      	str	r1, [r3, #64]	; 0x40
 8001d1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d1e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d22:	9301      	str	r3, [sp, #4]
 8001d24:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d26:	210f      	movs	r1, #15
 8001d28:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001d2c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d2e:	f004 bad9 	b.w	80062e4 <HAL_NVIC_SetPriority>
 8001d32:	bf00      	nop
 8001d34:	40023800 	.word	0x40023800

08001d38 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001d38:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d3a:	2214      	movs	r2, #20
{
 8001d3c:	b08a      	sub	sp, #40	; 0x28
 8001d3e:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d40:	2100      	movs	r1, #0
 8001d42:	eb0d 0002 	add.w	r0, sp, r2
 8001d46:	f01f f801 	bl	8020d4c <memset>
  if(hadc->Instance==ADC1)
 8001d4a:	6823      	ldr	r3, [r4, #0]
 8001d4c:	4a26      	ldr	r2, [pc, #152]	; (8001de8 <HAL_ADC_MspInit+0xb0>)
 8001d4e:	4293      	cmp	r3, r2
 8001d50:	d10d      	bne.n	8001d6e <HAL_ADC_MspInit+0x36>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001d52:	2300      	movs	r3, #0
 8001d54:	9300      	str	r3, [sp, #0]
 8001d56:	4b25      	ldr	r3, [pc, #148]	; (8001dec <HAL_ADC_MspInit+0xb4>)
 8001d58:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d5a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001d5e:	645a      	str	r2, [r3, #68]	; 0x44
 8001d60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d62:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001d66:	9300      	str	r3, [sp, #0]
 8001d68:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 8001d6a:	b00a      	add	sp, #40	; 0x28
 8001d6c:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001d6e:	4a20      	ldr	r2, [pc, #128]	; (8001df0 <HAL_ADC_MspInit+0xb8>)
 8001d70:	4293      	cmp	r3, r2
 8001d72:	d11e      	bne.n	8001db2 <HAL_ADC_MspInit+0x7a>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001d74:	4b1d      	ldr	r3, [pc, #116]	; (8001dec <HAL_ADC_MspInit+0xb4>)
 8001d76:	2100      	movs	r1, #0
 8001d78:	9101      	str	r1, [sp, #4]
 8001d7a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d7c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001d80:	645a      	str	r2, [r3, #68]	; 0x44
 8001d82:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d84:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001d88:	9201      	str	r2, [sp, #4]
 8001d8a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d8c:	9102      	str	r1, [sp, #8]
 8001d8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d90:	f042 0201 	orr.w	r2, r2, #1
 8001d94:	631a      	str	r2, [r3, #48]	; 0x30
 8001d96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d98:	f003 0301 	and.w	r3, r3, #1
 8001d9c:	9302      	str	r3, [sp, #8]
 8001d9e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001da0:	2304      	movs	r3, #4
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001da2:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001da4:	4813      	ldr	r0, [pc, #76]	; (8001df4 <HAL_ADC_MspInit+0xbc>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001da6:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001da8:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001daa:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dac:	f004 fc5a 	bl	8006664 <HAL_GPIO_Init>
}
 8001db0:	e7db      	b.n	8001d6a <HAL_ADC_MspInit+0x32>
  else if(hadc->Instance==ADC3)
 8001db2:	4a11      	ldr	r2, [pc, #68]	; (8001df8 <HAL_ADC_MspInit+0xc0>)
 8001db4:	4293      	cmp	r3, r2
 8001db6:	d1d8      	bne.n	8001d6a <HAL_ADC_MspInit+0x32>
    __HAL_RCC_ADC3_CLK_ENABLE();
 8001db8:	4b0c      	ldr	r3, [pc, #48]	; (8001dec <HAL_ADC_MspInit+0xb4>)
 8001dba:	2100      	movs	r1, #0
 8001dbc:	9103      	str	r1, [sp, #12]
 8001dbe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001dc0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001dc4:	645a      	str	r2, [r3, #68]	; 0x44
 8001dc6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001dc8:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001dcc:	9203      	str	r2, [sp, #12]
 8001dce:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001dd0:	9104      	str	r1, [sp, #16]
 8001dd2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dd4:	f042 0201 	orr.w	r2, r2, #1
 8001dd8:	631a      	str	r2, [r3, #48]	; 0x30
 8001dda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ddc:	f003 0301 	and.w	r3, r3, #1
 8001de0:	9304      	str	r3, [sp, #16]
 8001de2:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001de4:	2302      	movs	r3, #2
 8001de6:	e7dc      	b.n	8001da2 <HAL_ADC_MspInit+0x6a>
 8001de8:	40012000 	.word	0x40012000
 8001dec:	40023800 	.word	0x40023800
 8001df0:	40012100 	.word	0x40012100
 8001df4:	40020000 	.word	0x40020000
 8001df8:	40012200 	.word	0x40012200

08001dfc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001dfc:	6802      	ldr	r2, [r0, #0]
 8001dfe:	4b09      	ldr	r3, [pc, #36]	; (8001e24 <HAL_CRC_MspInit+0x28>)
 8001e00:	429a      	cmp	r2, r3
{
 8001e02:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001e04:	d10b      	bne.n	8001e1e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001e06:	2300      	movs	r3, #0
 8001e08:	9301      	str	r3, [sp, #4]
 8001e0a:	4b07      	ldr	r3, [pc, #28]	; (8001e28 <HAL_CRC_MspInit+0x2c>)
 8001e0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e0e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001e12:	631a      	str	r2, [r3, #48]	; 0x30
 8001e14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e16:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001e1a:	9301      	str	r3, [sp, #4]
 8001e1c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001e1e:	b002      	add	sp, #8
 8001e20:	4770      	bx	lr
 8001e22:	bf00      	nop
 8001e24:	40023000 	.word	0x40023000
 8001e28:	40023800 	.word	0x40023800

08001e2c <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001e2c:	b510      	push	{r4, lr}
 8001e2e:	4604      	mov	r4, r0
 8001e30:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e32:	2214      	movs	r2, #20
 8001e34:	2100      	movs	r1, #0
 8001e36:	a803      	add	r0, sp, #12
 8001e38:	f01e ff88 	bl	8020d4c <memset>
  if(hdac->Instance==DAC)
 8001e3c:	6822      	ldr	r2, [r4, #0]
 8001e3e:	4b12      	ldr	r3, [pc, #72]	; (8001e88 <HAL_DAC_MspInit+0x5c>)
 8001e40:	429a      	cmp	r2, r3
 8001e42:	d11e      	bne.n	8001e82 <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001e44:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001e48:	2100      	movs	r1, #0
 8001e4a:	9101      	str	r1, [sp, #4]
 8001e4c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e4e:	480f      	ldr	r0, [pc, #60]	; (8001e8c <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001e50:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001e54:	641a      	str	r2, [r3, #64]	; 0x40
 8001e56:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001e58:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001e5c:	9201      	str	r2, [sp, #4]
 8001e5e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e60:	9102      	str	r1, [sp, #8]
 8001e62:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e64:	f042 0201 	orr.w	r2, r2, #1
 8001e68:	631a      	str	r2, [r3, #48]	; 0x30
 8001e6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e6c:	f003 0301 	and.w	r3, r3, #1
 8001e70:	9302      	str	r3, [sp, #8]
 8001e72:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001e74:	2220      	movs	r2, #32
 8001e76:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e78:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001e7a:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e7e:	f004 fbf1 	bl	8006664 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001e82:	b008      	add	sp, #32
 8001e84:	bd10      	pop	{r4, pc}
 8001e86:	bf00      	nop
 8001e88:	40007400 	.word	0x40007400
 8001e8c:	40020000 	.word	0x40020000

08001e90 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001e90:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001e92:	4b0f      	ldr	r3, [pc, #60]	; (8001ed0 <HAL_DMA2D_MspInit+0x40>)
 8001e94:	6802      	ldr	r2, [r0, #0]
 8001e96:	429a      	cmp	r2, r3
 8001e98:	d116      	bne.n	8001ec8 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001e9a:	2200      	movs	r2, #0
 8001e9c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001ea0:	9201      	str	r2, [sp, #4]
 8001ea2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001ea4:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001ea8:	6319      	str	r1, [r3, #48]	; 0x30
 8001eaa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001eac:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001eb0:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001eb2:	2105      	movs	r1, #5
 8001eb4:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001eb6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001eb8:	f004 fa14 	bl	80062e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ebc:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001ebe:	b003      	add	sp, #12
 8001ec0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ec4:	f004 ba40 	b.w	8006348 <HAL_NVIC_EnableIRQ>
}
 8001ec8:	b003      	add	sp, #12
 8001eca:	f85d fb04 	ldr.w	pc, [sp], #4
 8001ece:	bf00      	nop
 8001ed0:	4002b000 	.word	0x4002b000

08001ed4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ed4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001ed8:	4604      	mov	r4, r0
 8001eda:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001edc:	2214      	movs	r2, #20
 8001ede:	2100      	movs	r1, #0
 8001ee0:	a803      	add	r0, sp, #12
 8001ee2:	f01e ff33 	bl	8020d4c <memset>
  if(hi2c->Instance==I2C3)
 8001ee6:	6822      	ldr	r2, [r4, #0]
 8001ee8:	4b24      	ldr	r3, [pc, #144]	; (8001f7c <HAL_I2C_MspInit+0xa8>)
 8001eea:	429a      	cmp	r2, r3
 8001eec:	d143      	bne.n	8001f76 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001eee:	4c24      	ldr	r4, [pc, #144]	; (8001f80 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ef0:	4824      	ldr	r0, [pc, #144]	; (8001f84 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ef2:	2500      	movs	r5, #0
 8001ef4:	9500      	str	r5, [sp, #0]
 8001ef6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ef8:	f043 0304 	orr.w	r3, r3, #4
 8001efc:	6323      	str	r3, [r4, #48]	; 0x30
 8001efe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001f00:	f003 0304 	and.w	r3, r3, #4
 8001f04:	9300      	str	r3, [sp, #0]
 8001f06:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f08:	9501      	str	r5, [sp, #4]
 8001f0a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001f0c:	f043 0301 	orr.w	r3, r3, #1
 8001f10:	6323      	str	r3, [r4, #48]	; 0x30
 8001f12:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001f14:	f003 0301 	and.w	r3, r3, #1
 8001f18:	9301      	str	r3, [sp, #4]
 8001f1a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001f1c:	f04f 0912 	mov.w	r9, #18
 8001f20:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f24:	f04f 0801 	mov.w	r8, #1
 8001f28:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001f2a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f2c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001f2e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f32:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001f36:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f38:	f004 fb94 	bl	8006664 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001f3c:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f40:	4811      	ldr	r0, [pc, #68]	; (8001f88 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001f42:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f44:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001f46:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f4a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f4e:	f004 fb89 	bl	8006664 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001f52:	9502      	str	r5, [sp, #8]
 8001f54:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001f56:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f5a:	6423      	str	r3, [r4, #64]	; 0x40
 8001f5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001f5e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001f62:	9302      	str	r3, [sp, #8]
 8001f64:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001f66:	6a23      	ldr	r3, [r4, #32]
 8001f68:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f6c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001f6e:	6a23      	ldr	r3, [r4, #32]
 8001f70:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001f74:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001f76:	b009      	add	sp, #36	; 0x24
 8001f78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001f7c:	40005c00 	.word	0x40005c00
 8001f80:	40023800 	.word	0x40023800
 8001f84:	40020800 	.word	0x40020800
 8001f88:	40020000 	.word	0x40020000

08001f8c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001f8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f8e:	4604      	mov	r4, r0
 8001f90:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f92:	2214      	movs	r2, #20
 8001f94:	2100      	movs	r1, #0
 8001f96:	a807      	add	r0, sp, #28
 8001f98:	f01e fed8 	bl	8020d4c <memset>
  if(hltdc->Instance==LTDC)
 8001f9c:	6822      	ldr	r2, [r4, #0]
 8001f9e:	4b57      	ldr	r3, [pc, #348]	; (80020fc <HAL_LTDC_MspInit+0x170>)
 8001fa0:	429a      	cmp	r2, r3
 8001fa2:	f040 80a8 	bne.w	80020f6 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001fa6:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001faa:	2500      	movs	r5, #0
 8001fac:	9500      	str	r5, [sp, #0]
 8001fae:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fb0:	4853      	ldr	r0, [pc, #332]	; (8002100 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001fb2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001fb6:	645a      	str	r2, [r3, #68]	; 0x44
 8001fb8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001fba:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001fbe:	9200      	str	r2, [sp, #0]
 8001fc0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001fc2:	9501      	str	r5, [sp, #4]
 8001fc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fc6:	f042 0220 	orr.w	r2, r2, #32
 8001fca:	631a      	str	r2, [r3, #48]	; 0x30
 8001fcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fce:	f002 0220 	and.w	r2, r2, #32
 8001fd2:	9201      	str	r2, [sp, #4]
 8001fd4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fd6:	9502      	str	r5, [sp, #8]
 8001fd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fda:	f042 0201 	orr.w	r2, r2, #1
 8001fde:	631a      	str	r2, [r3, #48]	; 0x30
 8001fe0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fe2:	f002 0201 	and.w	r2, r2, #1
 8001fe6:	9202      	str	r2, [sp, #8]
 8001fe8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fea:	9503      	str	r5, [sp, #12]
 8001fec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fee:	f042 0202 	orr.w	r2, r2, #2
 8001ff2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ff4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ff6:	f002 0202 	and.w	r2, r2, #2
 8001ffa:	9203      	str	r2, [sp, #12]
 8001ffc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001ffe:	9504      	str	r5, [sp, #16]
 8002000:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002002:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002006:	631a      	str	r2, [r3, #48]	; 0x30
 8002008:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800200a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800200e:	9204      	str	r2, [sp, #16]
 8002010:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002012:	9505      	str	r5, [sp, #20]
 8002014:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002016:	f042 0204 	orr.w	r2, r2, #4
 800201a:	631a      	str	r2, [r3, #48]	; 0x30
 800201c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800201e:	f002 0204 	and.w	r2, r2, #4
 8002022:	9205      	str	r2, [sp, #20]
 8002024:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002026:	9506      	str	r5, [sp, #24]
 8002028:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800202a:	f042 0208 	orr.w	r2, r2, #8
 800202e:	631a      	str	r2, [r3, #48]	; 0x30
 8002030:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002032:	f003 0308 	and.w	r3, r3, #8
 8002036:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002038:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800203a:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800203c:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800203e:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002040:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002044:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002046:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800204a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800204c:	f004 fb0a 	bl	8006664 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002050:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002054:	482b      	ldr	r0, [pc, #172]	; (8002104 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002056:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002058:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800205a:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800205e:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002060:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002064:	f004 fafe 	bl	8006664 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002068:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800206a:	4827      	ldr	r0, [pc, #156]	; (8002108 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800206c:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800206e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002070:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002074:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002078:	f004 faf4 	bl	8006664 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800207c:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002080:	4821      	ldr	r0, [pc, #132]	; (8002108 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002082:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002084:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002086:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800208a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800208e:	f004 fae9 	bl	8006664 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002092:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002096:	481d      	ldr	r0, [pc, #116]	; (800210c <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002098:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800209a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800209c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80020a0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020a4:	f004 fade 	bl	8006664 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80020a8:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020aa:	4819      	ldr	r0, [pc, #100]	; (8002110 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020ac:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020ae:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020b0:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80020b4:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020b8:	f004 fad4 	bl	8006664 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80020bc:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020be:	4815      	ldr	r0, [pc, #84]	; (8002114 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020c0:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020c2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020c4:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80020c8:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020cc:	f004 faca 	bl	8006664 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020d0:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020d4:	480d      	ldr	r0, [pc, #52]	; (800210c <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80020d6:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020d8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020da:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80020de:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020e2:	f004 fabf 	bl	8006664 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80020e6:	2058      	movs	r0, #88	; 0x58
 80020e8:	462a      	mov	r2, r5
 80020ea:	2105      	movs	r1, #5
 80020ec:	f004 f8fa 	bl	80062e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80020f0:	2058      	movs	r0, #88	; 0x58
 80020f2:	f004 f929 	bl	8006348 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80020f6:	b00d      	add	sp, #52	; 0x34
 80020f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020fa:	bf00      	nop
 80020fc:	40016800 	.word	0x40016800
 8002100:	40021400 	.word	0x40021400
 8002104:	40020000 	.word	0x40020000
 8002108:	40020400 	.word	0x40020400
 800210c:	40021800 	.word	0x40021800
 8002110:	40020800 	.word	0x40020800
 8002114:	40020c00 	.word	0x40020c00

08002118 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002118:	b510      	push	{r4, lr}
 800211a:	4604      	mov	r4, r0
 800211c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800211e:	2214      	movs	r2, #20
 8002120:	2100      	movs	r1, #0
 8002122:	a803      	add	r0, sp, #12
 8002124:	f01e fe12 	bl	8020d4c <memset>
  if(hspi->Instance==SPI5)
 8002128:	6822      	ldr	r2, [r4, #0]
 800212a:	4b14      	ldr	r3, [pc, #80]	; (800217c <HAL_SPI_MspInit+0x64>)
 800212c:	429a      	cmp	r2, r3
 800212e:	d123      	bne.n	8002178 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002130:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8002134:	2100      	movs	r1, #0
 8002136:	9101      	str	r1, [sp, #4]
 8002138:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800213a:	4811      	ldr	r0, [pc, #68]	; (8002180 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 800213c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8002140:	645a      	str	r2, [r3, #68]	; 0x44
 8002142:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002144:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8002148:	9201      	str	r2, [sp, #4]
 800214a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800214c:	9102      	str	r1, [sp, #8]
 800214e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002150:	f042 0220 	orr.w	r2, r2, #32
 8002154:	631a      	str	r2, [r3, #48]	; 0x30
 8002156:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002158:	f003 0320 	and.w	r3, r3, #32
 800215c:	9302      	str	r3, [sp, #8]
 800215e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002160:	f44f 7260 	mov.w	r2, #896	; 0x380
 8002164:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002166:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002168:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800216c:	2305      	movs	r3, #5
 800216e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002172:	a903      	add	r1, sp, #12
 8002174:	f004 fa76 	bl	8006664 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002178:	b008      	add	sp, #32
 800217a:	bd10      	pop	{r4, pc}
 800217c:	40015000 	.word	0x40015000
 8002180:	40021400 	.word	0x40021400

08002184 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002184:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8002186:	4b0f      	ldr	r3, [pc, #60]	; (80021c4 <HAL_TIM_Base_MspInit+0x40>)
 8002188:	6802      	ldr	r2, [r0, #0]
 800218a:	429a      	cmp	r2, r3
 800218c:	d116      	bne.n	80021bc <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 800218e:	2200      	movs	r2, #0
 8002190:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8002194:	9201      	str	r2, [sp, #4]
 8002196:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002198:	f041 0120 	orr.w	r1, r1, #32
 800219c:	6419      	str	r1, [r3, #64]	; 0x40
 800219e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021a0:	f003 0320 	and.w	r3, r3, #32
 80021a4:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 80021a6:	2105      	movs	r1, #5
 80021a8:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 80021aa:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 80021ac:	f004 f89a 	bl	80062e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 80021b0:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 80021b2:	b003      	add	sp, #12
 80021b4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 80021b8:	f004 b8c6 	b.w	8006348 <HAL_NVIC_EnableIRQ>
}
 80021bc:	b003      	add	sp, #12
 80021be:	f85d fb04 	ldr.w	pc, [sp], #4
 80021c2:	bf00      	nop
 80021c4:	40001400 	.word	0x40001400

080021c8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80021c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80021cc:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80021ce:	2300      	movs	r3, #0
 80021d0:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80021d2:	4b2b      	ldr	r3, [pc, #172]	; (8002280 <HAL_SDRAM_MspInit+0xb8>)
 80021d4:	681c      	ldr	r4, [r3, #0]
 80021d6:	2c00      	cmp	r4, #0
 80021d8:	d14f      	bne.n	800227a <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 80021da:	f04f 0801 	mov.w	r8, #1
 80021de:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 80021e2:	4b28      	ldr	r3, [pc, #160]	; (8002284 <HAL_SDRAM_MspInit+0xbc>)
 80021e4:	9400      	str	r4, [sp, #0]
 80021e6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021e8:	4827      	ldr	r0, [pc, #156]	; (8002288 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80021ea:	ea42 0208 	orr.w	r2, r2, r8
 80021ee:	639a      	str	r2, [r3, #56]	; 0x38
 80021f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80021f2:	ea03 0308 	and.w	r3, r3, r8
 80021f6:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021f8:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021fa:	2603      	movs	r6, #3
 80021fc:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80021fe:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002200:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002202:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8002206:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800220a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800220e:	f004 fa29 	bl	8006664 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002212:	481e      	ldr	r0, [pc, #120]	; (800228c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002214:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002216:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002218:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800221c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002220:	f004 fa20 	bl	8006664 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002224:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002228:	4819      	ldr	r0, [pc, #100]	; (8002290 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800222a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800222c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800222e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002232:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002236:	f004 fa15 	bl	8006664 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800223a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800223e:	4815      	ldr	r0, [pc, #84]	; (8002294 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002240:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002242:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002244:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002248:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800224c:	f004 fa0a 	bl	8006664 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002250:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002254:	4810      	ldr	r0, [pc, #64]	; (8002298 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002256:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002258:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800225a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800225e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002262:	f004 f9ff 	bl	8006664 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002266:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002268:	480c      	ldr	r0, [pc, #48]	; (800229c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800226a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800226c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800226e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002272:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002276:	f004 f9f5 	bl	8006664 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800227a:	b006      	add	sp, #24
 800227c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002280:	200048e8 	.word	0x200048e8
 8002284:	40023800 	.word	0x40023800
 8002288:	40021400 	.word	0x40021400
 800228c:	40020800 	.word	0x40020800
 8002290:	40021800 	.word	0x40021800
 8002294:	40021000 	.word	0x40021000
 8002298:	40020c00 	.word	0x40020c00
 800229c:	40020400 	.word	0x40020400

080022a0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80022a0:	b530      	push	{r4, r5, lr}
 80022a2:	4601      	mov	r1, r0
 80022a4:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 80022a6:	2200      	movs	r2, #0
 80022a8:	202c      	movs	r0, #44	; 0x2c
 80022aa:	f004 f81b 	bl	80062e4 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 80022ae:	202c      	movs	r0, #44	; 0x2c
 80022b0:	f004 f84a 	bl	8006348 <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 80022b4:	2500      	movs	r5, #0
 80022b6:	4b15      	ldr	r3, [pc, #84]	; (800230c <HAL_InitTick+0x6c>)
 80022b8:	9502      	str	r5, [sp, #8]
 80022ba:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 80022bc:	4c14      	ldr	r4, [pc, #80]	; (8002310 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 80022be:	f042 0202 	orr.w	r2, r2, #2
 80022c2:	645a      	str	r2, [r3, #68]	; 0x44
 80022c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80022c6:	f003 0302 	and.w	r3, r3, #2
 80022ca:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80022cc:	a901      	add	r1, sp, #4
 80022ce:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 80022d0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80022d2:	f005 fb3f 	bl	8007954 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80022d6:	f005 fb2d 	bl	8007934 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 80022da:	4b0e      	ldr	r3, [pc, #56]	; (8002314 <HAL_InitTick+0x74>)
 80022dc:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 80022de:	f240 33e7 	movw	r3, #999	; 0x3e7
 80022e2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80022e4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80022e6:	4b0c      	ldr	r3, [pc, #48]	; (8002318 <HAL_InitTick+0x78>)
 80022e8:	fbb0 f0f3 	udiv	r0, r0, r3
 80022ec:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 80022ee:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80022f0:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 80022f2:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80022f4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80022f6:	f006 f8e9 	bl	80084cc <HAL_TIM_Base_Init>
 80022fa:	b920      	cbnz	r0, 8002306 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 80022fc:	4620      	mov	r0, r4
 80022fe:	f005 ffc8 	bl	8008292 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8002302:	b009      	add	sp, #36	; 0x24
 8002304:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8002306:	2001      	movs	r0, #1
 8002308:	e7fb      	b.n	8002302 <HAL_InitTick+0x62>
 800230a:	bf00      	nop
 800230c:	40023800 	.word	0x40023800
 8002310:	200048ec 	.word	0x200048ec
 8002314:	40010400 	.word	0x40010400
 8002318:	000f4240 	.word	0x000f4240

0800231c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800231c:	4770      	bx	lr

0800231e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800231e:	e7fe      	b.n	800231e <HardFault_Handler>

08002320 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002320:	e7fe      	b.n	8002320 <MemManage_Handler>

08002322 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002322:	e7fe      	b.n	8002322 <BusFault_Handler>

08002324 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002324:	e7fe      	b.n	8002324 <UsageFault_Handler>

08002326 <DebugMon_Handler>:
 8002326:	4770      	bx	lr

08002328 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8002328:	4801      	ldr	r0, [pc, #4]	; (8002330 <TIM8_UP_TIM13_IRQHandler+0x8>)
 800232a:	f005 bfc6 	b.w	80082ba <HAL_TIM_IRQHandler>
 800232e:	bf00      	nop
 8002330:	200048ec 	.word	0x200048ec

08002334 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8002334:	4801      	ldr	r0, [pc, #4]	; (800233c <TIM7_IRQHandler+0x8>)
 8002336:	f005 bfc0 	b.w	80082ba <HAL_TIM_IRQHandler>
 800233a:	bf00      	nop
 800233c:	20003c1c 	.word	0x20003c1c

08002340 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002340:	4801      	ldr	r0, [pc, #4]	; (8002348 <LTDC_IRQHandler+0x8>)
 8002342:	f004 bfcb 	b.w	80072dc <HAL_LTDC_IRQHandler>
 8002346:	bf00      	nop
 8002348:	20003ae8 	.word	0x20003ae8

0800234c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800234c:	4801      	ldr	r0, [pc, #4]	; (8002354 <DMA2D_IRQHandler+0x8>)
 800234e:	f004 b8ba 	b.w	80064c6 <HAL_DMA2D_IRQHandler>
 8002352:	bf00      	nop
 8002354:	20003a54 	.word	0x20003a54

08002358 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002358:	2001      	movs	r0, #1
 800235a:	4770      	bx	lr

0800235c <_kill>:

int _kill(int pid, int sig)
{
 800235c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800235e:	f01e fba1 	bl	8020aa4 <__errno>
 8002362:	2316      	movs	r3, #22
 8002364:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002366:	f04f 30ff 	mov.w	r0, #4294967295
 800236a:	bd08      	pop	{r3, pc}

0800236c <_exit>:

void _exit (int status)
{
 800236c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800236e:	f01e fb99 	bl	8020aa4 <__errno>
 8002372:	2316      	movs	r3, #22
 8002374:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002376:	e7fe      	b.n	8002376 <_exit+0xa>

08002378 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002378:	b570      	push	{r4, r5, r6, lr}
 800237a:	460d      	mov	r5, r1
 800237c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800237e:	460e      	mov	r6, r1
 8002380:	1b73      	subs	r3, r6, r5
 8002382:	429c      	cmp	r4, r3
 8002384:	dc01      	bgt.n	800238a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002386:	4620      	mov	r0, r4
 8002388:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800238a:	f3af 8000 	nop.w
 800238e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002392:	e7f5      	b.n	8002380 <_read+0x8>

08002394 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002394:	b570      	push	{r4, r5, r6, lr}
 8002396:	460d      	mov	r5, r1
 8002398:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800239a:	460e      	mov	r6, r1
 800239c:	1b73      	subs	r3, r6, r5
 800239e:	429c      	cmp	r4, r3
 80023a0:	dc01      	bgt.n	80023a6 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80023a2:	4620      	mov	r0, r4
 80023a4:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80023a6:	f816 0b01 	ldrb.w	r0, [r6], #1
 80023aa:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80023ae:	e7f5      	b.n	800239c <_write+0x8>

080023b0 <_close>:

int _close(int file)
{
	return -1;
}
 80023b0:	f04f 30ff 	mov.w	r0, #4294967295
 80023b4:	4770      	bx	lr

080023b6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80023b6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80023ba:	604b      	str	r3, [r1, #4]
	return 0;
}
 80023bc:	2000      	movs	r0, #0
 80023be:	4770      	bx	lr

080023c0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80023c0:	2001      	movs	r0, #1
 80023c2:	4770      	bx	lr

080023c4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80023c4:	2000      	movs	r0, #0
 80023c6:	4770      	bx	lr

080023c8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80023c8:	4a0a      	ldr	r2, [pc, #40]	; (80023f4 <_sbrk+0x2c>)
 80023ca:	6811      	ldr	r1, [r2, #0]
{
 80023cc:	b508      	push	{r3, lr}
 80023ce:	4603      	mov	r3, r0
	if (heap_end == 0)
 80023d0:	b909      	cbnz	r1, 80023d6 <_sbrk+0xe>
		heap_end = &end;
 80023d2:	4909      	ldr	r1, [pc, #36]	; (80023f8 <_sbrk+0x30>)
 80023d4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80023d6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80023d8:	4669      	mov	r1, sp
 80023da:	4403      	add	r3, r0
 80023dc:	428b      	cmp	r3, r1
 80023de:	d906      	bls.n	80023ee <_sbrk+0x26>
	{
		errno = ENOMEM;
 80023e0:	f01e fb60 	bl	8020aa4 <__errno>
 80023e4:	230c      	movs	r3, #12
 80023e6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80023e8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80023ec:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80023ee:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80023f0:	e7fc      	b.n	80023ec <_sbrk+0x24>
 80023f2:	bf00      	nop
 80023f4:	2000492c 	.word	0x2000492c
 80023f8:	20015aa0 	.word	0x20015aa0

080023fc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80023fc:	4770      	bx	lr

080023fe <_ZN23ApplicationFontProviderD0Ev>:
 80023fe:	b510      	push	{r4, lr}
 8002400:	2104      	movs	r1, #4
 8002402:	4604      	mov	r4, r0
 8002404:	f01e fa68 	bl	80208d8 <_ZdlPvj>
 8002408:	4620      	mov	r0, r4
 800240a:	bd10      	pop	{r4, pc}

0800240c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 800240c:	2901      	cmp	r1, #1
{
 800240e:	b508      	push	{r3, lr}
    switch (typography)
 8002410:	d006      	beq.n	8002420 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002412:	2902      	cmp	r1, #2
 8002414:	d008      	beq.n	8002428 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002416:	b959      	cbnz	r1, 8002430 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002418:	f002 fdf8 	bl	800500c <_ZN17TypedTextDatabase8getFontsEv>
 800241c:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800241e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002420:	f002 fdf4 	bl	800500c <_ZN17TypedTextDatabase8getFontsEv>
 8002424:	6840      	ldr	r0, [r0, #4]
 8002426:	e7fa      	b.n	800241e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002428:	f002 fdf0 	bl	800500c <_ZN17TypedTextDatabase8getFontsEv>
 800242c:	6880      	ldr	r0, [r0, #8]
 800242e:	e7f6      	b.n	800241e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002430:	2000      	movs	r0, #0
 8002432:	e7f4      	b.n	800241e <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002434 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002434:	4800      	ldr	r0, [pc, #0]	; (8002438 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002436:	4770      	bx	lr
 8002438:	08022358 	.word	0x08022358

0800243c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800243c:	200d      	movs	r0, #13
 800243e:	4770      	bx	lr

08002440 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002440:	b513      	push	{r0, r1, r4, lr}
 8002442:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002444:	b151      	cbz	r1, 800245c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002446:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002448:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800244a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800244e:	aa01      	add	r2, sp, #4
 8002450:	689c      	ldr	r4, [r3, #8]
 8002452:	f10d 0303 	add.w	r3, sp, #3
 8002456:	47a0      	blx	r4
        return glyph;
    }
 8002458:	b002      	add	sp, #8
 800245a:	bd10      	pop	{r4, pc}
            return 0;
 800245c:	4608      	mov	r0, r1
 800245e:	e7fb      	b.n	8002458 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002460 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002460:	8940      	ldrh	r0, [r0, #10]
 8002462:	4770      	bx	lr

08002464 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002464:	8980      	ldrh	r0, [r0, #12]
 8002466:	4770      	bx	lr

08002468 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002468:	8880      	ldrh	r0, [r0, #4]
 800246a:	4770      	bx	lr

0800246c <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 800246c:	7983      	ldrb	r3, [r0, #6]
 800246e:	8880      	ldrh	r0, [r0, #4]
 8002470:	4418      	add	r0, r3
    }
 8002472:	b280      	uxth	r0, r0
 8002474:	4770      	bx	lr

08002476 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002476:	79c0      	ldrb	r0, [r0, #7]
    }
 8002478:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800247c:	4770      	bx	lr

0800247e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800247e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002480:	09c0      	lsrs	r0, r0, #7
 8002482:	4770      	bx	lr

08002484 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002484:	4770      	bx	lr

08002486 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002486:	b510      	push	{r4, lr}
    }
 8002488:	2108      	movs	r1, #8
    virtual ~TypedText()
 800248a:	4604      	mov	r4, r0
    }
 800248c:	f01e fa24 	bl	80208d8 <_ZdlPvj>
 8002490:	4620      	mov	r0, r4
 8002492:	bd10      	pop	{r4, pc}

08002494 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002494:	4770      	bx	lr

08002496 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002496:	4770      	bx	lr

08002498 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002498:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800249c:	6808      	ldr	r0, [r1, #0]
 800249e:	6849      	ldr	r1, [r1, #4]
 80024a0:	c303      	stmia	r3!, {r0, r1}
    }
 80024a2:	4770      	bx	lr

080024a4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80024a4:	2000      	movs	r0, #0
 80024a6:	4770      	bx	lr

080024a8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80024a8:	8081      	strh	r1, [r0, #4]
    }
 80024aa:	4770      	bx	lr

080024ac <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80024ac:	80c1      	strh	r1, [r0, #6]
    }
 80024ae:	4770      	bx	lr

080024b0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80024b0:	8101      	strh	r1, [r0, #8]
    }
 80024b2:	4770      	bx	lr

080024b4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80024b4:	8141      	strh	r1, [r0, #10]
    }
 80024b6:	4770      	bx	lr

080024b8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80024b8:	4770      	bx	lr

080024ba <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80024ba:	4770      	bx	lr

080024bc <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80024bc:	4770      	bx	lr

080024be <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80024be:	4770      	bx	lr

080024c0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80024c0:	4770      	bx	lr

080024c2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80024c2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80024c4:	88c4      	ldrh	r4, [r0, #6]
 80024c6:	6803      	ldr	r3, [r0, #0]
 80024c8:	1b12      	subs	r2, r2, r4
 80024ca:	8884      	ldrh	r4, [r0, #4]
 80024cc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80024ce:	1b09      	subs	r1, r1, r4
 80024d0:	b212      	sxth	r2, r2
    }
 80024d2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80024d6:	b209      	sxth	r1, r1
 80024d8:	4718      	bx	r3

080024da <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80024da:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024de:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80024e0:	f04f 33ff 	mov.w	r3, #4294967295
 80024e4:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80024e6:	6813      	ldr	r3, [r2, #0]
 80024e8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80024ea:	6010      	str	r0, [r2, #0]
    }
 80024ec:	4770      	bx	lr

080024ee <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80024ee:	4770      	bx	lr

080024f0 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80024f0:	4770      	bx	lr

080024f2 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80024f2:	6041      	str	r1, [r0, #4]
    }
 80024f4:	4770      	bx	lr

080024f6 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80024f6:	4770      	bx	lr

080024f8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80024f8:	4b06      	ldr	r3, [pc, #24]	; (8002514 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80024fa:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80024fe:	2300      	movs	r3, #0
 8002500:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002504:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002508:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800250c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002510:	4770      	bx	lr
 8002512:	bf00      	nop
 8002514:	08002629 	.word	0x08002629

08002518 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002518:	2301      	movs	r3, #1
 800251a:	7203      	strb	r3, [r0, #8]
    }
 800251c:	4770      	bx	lr

0800251e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800251e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002522:	b11a      	cbz	r2, 800252c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002524:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002528:	b102      	cbz	r2, 800252c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800252a:	6018      	str	r0, [r3, #0]
        }
    }
 800252c:	4770      	bx	lr

0800252e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 800252e:	4770      	bx	lr

08002530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 8002530:	4770      	bx	lr

08002532 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002532:	4770      	bx	lr

08002534 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002534:	4770      	bx	lr

08002536 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 8002536:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002538:	6840      	ldr	r0, [r0, #4]
 800253a:	6803      	ldr	r3, [r0, #0]
 800253c:	3110      	adds	r1, #16
 800253e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002540:	4718      	bx	r3

08002542 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 8002542:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002544:	6840      	ldr	r0, [r0, #4]
 8002546:	6803      	ldr	r3, [r0, #0]
 8002548:	3110      	adds	r1, #16
 800254a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800254c:	4718      	bx	r3

0800254e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800254e:	4770      	bx	lr

08002550 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 8002550:	4770      	bx	lr

08002552 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 8002552:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002554:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002556:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800255a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800255e:	8002      	strh	r2, [r0, #0]
 8002560:	8042      	strh	r2, [r0, #2]
 8002562:	8084      	strh	r4, [r0, #4]
 8002564:	80c1      	strh	r1, [r0, #6]
        }
 8002566:	bd10      	pop	{r4, pc}

08002568 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002568:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800256a:	68c2      	ldr	r2, [r0, #12]
 800256c:	6841      	ldr	r1, [r0, #4]
 800256e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002570:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002572:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002576:	07d2      	lsls	r2, r2, #31
 8002578:	bf48      	it	mi
 800257a:	590a      	ldrmi	r2, [r1, r4]
 800257c:	689b      	ldr	r3, [r3, #8]
    }
 800257e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002582:	bf48      	it	mi
 8002584:	58d3      	ldrmi	r3, [r2, r3]
 8002586:	4718      	bx	r3

08002588 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002588:	6843      	ldr	r3, [r0, #4]
 800258a:	b12b      	cbz	r3, 8002598 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800258c:	6883      	ldr	r3, [r0, #8]
 800258e:	b92b      	cbnz	r3, 800259c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002590:	68c0      	ldr	r0, [r0, #12]
 8002592:	f000 0001 	and.w	r0, r0, #1
 8002596:	4770      	bx	lr
 8002598:	4618      	mov	r0, r3
 800259a:	4770      	bx	lr
 800259c:	2001      	movs	r0, #1
    }
 800259e:	4770      	bx	lr

080025a0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80025a0:	b510      	push	{r4, lr}
 80025a2:	210c      	movs	r1, #12
 80025a4:	4604      	mov	r4, r0
 80025a6:	f01e f997 	bl	80208d8 <_ZdlPvj>
 80025aa:	4620      	mov	r0, r4
 80025ac:	bd10      	pop	{r4, pc}

080025ae <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80025ae:	b510      	push	{r4, lr}
 80025b0:	2110      	movs	r1, #16
 80025b2:	4604      	mov	r4, r0
 80025b4:	f01e f990 	bl	80208d8 <_ZdlPvj>
 80025b8:	4620      	mov	r0, r4
 80025ba:	bd10      	pop	{r4, pc}

080025bc <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80025bc:	b510      	push	{r4, lr}
 80025be:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80025c2:	4604      	mov	r4, r0
 80025c4:	f01e f988 	bl	80208d8 <_ZdlPvj>
 80025c8:	4620      	mov	r0, r4
 80025ca:	bd10      	pop	{r4, pc}

080025cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80025cc:	b510      	push	{r4, lr}
 80025ce:	2138      	movs	r1, #56	; 0x38
 80025d0:	4604      	mov	r4, r0
 80025d2:	f01e f981 	bl	80208d8 <_ZdlPvj>
 80025d6:	4620      	mov	r0, r4
 80025d8:	bd10      	pop	{r4, pc}

080025da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80025da:	b510      	push	{r4, lr}
 80025dc:	2128      	movs	r1, #40	; 0x28
 80025de:	4604      	mov	r4, r0
 80025e0:	f01e f97a 	bl	80208d8 <_ZdlPvj>
 80025e4:	4620      	mov	r0, r4
 80025e6:	bd10      	pop	{r4, pc}

080025e8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80025e8:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80025ea:	f00e fe59 	bl	80112a0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80025ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80025f2:	f00f b9f9 	b.w	80119e8 <_ZN8touchgfx11Application10invalidateEv>

080025f6 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80025f6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80025fa:	b112      	cbz	r2, 8002602 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80025fc:	6803      	ldr	r3, [r0, #0]
 80025fe:	695b      	ldr	r3, [r3, #20]
 8002600:	4718      	bx	r3
    }
 8002602:	4770      	bx	lr

08002604 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002604:	b510      	push	{r4, lr}
 8002606:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002608:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 800260c:	b158      	cbz	r0, 8002626 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800260e:	6803      	ldr	r3, [r0, #0]
 8002610:	68db      	ldr	r3, [r3, #12]
 8002612:	4798      	blx	r3
 8002614:	b138      	cbz	r0, 8002626 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002616:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800261a:	6803      	ldr	r3, [r0, #0]
 800261c:	689b      	ldr	r3, [r3, #8]
 800261e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002620:	2300      	movs	r3, #0
 8002622:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002626:	bd10      	pop	{r4, pc}

08002628 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002628:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800262c:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002630:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002632:	68a8      	ldr	r0, [r5, #8]
 8002634:	6803      	ldr	r3, [r0, #0]
 8002636:	6a1b      	ldr	r3, [r3, #32]
 8002638:	4798      	blx	r3
 800263a:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 800263e:	d205      	bcs.n	800264c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002640:	4b45      	ldr	r3, [pc, #276]	; (8002758 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002642:	4a46      	ldr	r2, [pc, #280]	; (800275c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002644:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002646:	4846      	ldr	r0, [pc, #280]	; (8002760 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002648:	f01e f9fa 	bl	8020a40 <__assert_func>
 800264c:	6868      	ldr	r0, [r5, #4]
 800264e:	6803      	ldr	r3, [r0, #0]
 8002650:	6a1b      	ldr	r3, [r3, #32]
 8002652:	4798      	blx	r3
 8002654:	280f      	cmp	r0, #15
 8002656:	d803      	bhi.n	8002660 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002658:	4b42      	ldr	r3, [pc, #264]	; (8002764 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 800265a:	4a40      	ldr	r2, [pc, #256]	; (800275c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800265c:	21a4      	movs	r1, #164	; 0xa4
 800265e:	e7f2      	b.n	8002646 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002660:	68e8      	ldr	r0, [r5, #12]
 8002662:	6803      	ldr	r3, [r0, #0]
 8002664:	6a1b      	ldr	r3, [r3, #32]
 8002666:	4798      	blx	r3
 8002668:	280b      	cmp	r0, #11
 800266a:	d803      	bhi.n	8002674 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 800266c:	4b3e      	ldr	r3, [pc, #248]	; (8002768 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800266e:	4a3b      	ldr	r2, [pc, #236]	; (800275c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002670:	21a5      	movs	r1, #165	; 0xa5
 8002672:	e7e8      	b.n	8002646 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002674:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002770 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002678:	f00e fe12 	bl	80112a0 <_ZN8touchgfx11Application11getInstanceEv>
 800267c:	f00e fe16 	bl	80112ac <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002680:	f8d9 0000 	ldr.w	r0, [r9]
 8002684:	b110      	cbz	r0, 800268c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002686:	6803      	ldr	r3, [r0, #0]
 8002688:	68db      	ldr	r3, [r3, #12]
 800268a:	4798      	blx	r3
    if (*currentTrans)
 800268c:	f8d9 0000 	ldr.w	r0, [r9]
 8002690:	b110      	cbz	r0, 8002698 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002692:	6803      	ldr	r3, [r0, #0]
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	4798      	blx	r3
    if (*currentScreen)
 8002698:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002774 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 800269c:	f8d8 0000 	ldr.w	r0, [r8]
 80026a0:	b110      	cbz	r0, 80026a8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80026a2:	6803      	ldr	r3, [r0, #0]
 80026a4:	695b      	ldr	r3, [r3, #20]
 80026a6:	4798      	blx	r3
    if (*currentPresenter)
 80026a8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80026ac:	b110      	cbz	r0, 80026b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80026ae:	6803      	ldr	r3, [r0, #0]
 80026b0:	685b      	ldr	r3, [r3, #4]
 80026b2:	4798      	blx	r3
    if (*currentScreen)
 80026b4:	f8d8 0000 	ldr.w	r0, [r8]
 80026b8:	b110      	cbz	r0, 80026c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80026ba:	6803      	ldr	r3, [r0, #0]
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	4798      	blx	r3
    if (*currentPresenter)
 80026c0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80026c4:	b110      	cbz	r0, 80026cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80026c6:	6803      	ldr	r3, [r0, #0]
 80026c8:	689b      	ldr	r3, [r3, #8]
 80026ca:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80026cc:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80026ce:	6803      	ldr	r3, [r0, #0]
 80026d0:	2100      	movs	r1, #0
 80026d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026d4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80026d6:	f04f 0b00 	mov.w	fp, #0
 80026da:	4b24      	ldr	r3, [pc, #144]	; (800276c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80026dc:	6003      	str	r3, [r0, #0]
 80026de:	4604      	mov	r4, r0
 80026e0:	f8c0 b004 	str.w	fp, [r0, #4]
 80026e4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026e8:	68a8      	ldr	r0, [r5, #8]
 80026ea:	6803      	ldr	r3, [r0, #0]
 80026ec:	4659      	mov	r1, fp
 80026ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026f0:	4798      	blx	r3
 80026f2:	4606      	mov	r6, r0
 80026f4:	f002 fdc8 	bl	8005288 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80026f8:	6868      	ldr	r0, [r5, #4]
 80026fa:	6803      	ldr	r3, [r0, #0]
 80026fc:	4659      	mov	r1, fp
 80026fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002700:	4798      	blx	r3
 8002702:	4631      	mov	r1, r6
 8002704:	4605      	mov	r5, r0
 8002706:	f002 fd13 	bl	8005130 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 800270a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800270e:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002712:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002716:	b1e5      	cbz	r5, 8002752 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002718:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800271a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800271e:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayCurrentValue() {};
    virtual void DisplayChargingFinished() {};

    void bind(Model* m)
    {
        model = m;
 8002720:	f8c5 a008 	str.w	sl, [r5, #8]
 8002724:	4630      	mov	r0, r6
 8002726:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002728:	63f5      	str	r5, [r6, #60]	; 0x3c
 800272a:	4798      	blx	r3
    newPresenter->activate();
 800272c:	682b      	ldr	r3, [r5, #0]
 800272e:	4628      	mov	r0, r5
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002734:	4621      	mov	r1, r4
 8002736:	4630      	mov	r0, r6
 8002738:	f010 fa60 	bl	8012bfc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800273c:	6823      	ldr	r3, [r4, #0]
 800273e:	4620      	mov	r0, r4
 8002740:	691b      	ldr	r3, [r3, #16]
 8002742:	4798      	blx	r3
    newTransition->invalidate();
 8002744:	6823      	ldr	r3, [r4, #0]
 8002746:	695b      	ldr	r3, [r3, #20]
 8002748:	4620      	mov	r0, r4
}
 800274a:	b001      	add	sp, #4
 800274c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002750:	4718      	bx	r3
    model->bind(newPresenter);
 8002752:	462b      	mov	r3, r5
 8002754:	e7e1      	b.n	800271a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002756:	bf00      	nop
 8002758:	0802246c 	.word	0x0802246c
 800275c:	080224fa 	.word	0x080224fa
 8002760:	080225fe 	.word	0x080225fe
 8002764:	08022645 	.word	0x08022645
 8002768:	080226e8 	.word	0x080226e8
 800276c:	08022918 	.word	0x08022918
 8002770:	2001583c 	.word	0x2001583c
 8002774:	20015838 	.word	0x20015838

08002778 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002778:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800277c:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 8002780:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002782:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002786:	6803      	ldr	r3, [r0, #0]
 8002788:	6a1b      	ldr	r3, [r3, #32]
 800278a:	4798      	blx	r3
 800278c:	f242 733b 	movw	r3, #10043	; 0x273b
 8002790:	4298      	cmp	r0, r3
 8002792:	d805      	bhi.n	80027a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x28>
 8002794:	4b56      	ldr	r3, [pc, #344]	; (80028f0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x178>)
 8002796:	4a57      	ldr	r2, [pc, #348]	; (80028f4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002798:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800279a:	4857      	ldr	r0, [pc, #348]	; (80028f8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x180>)
 800279c:	f01e f950 	bl	8020a40 <__assert_func>
 80027a0:	f8db 0004 	ldr.w	r0, [fp, #4]
 80027a4:	6803      	ldr	r3, [r0, #0]
 80027a6:	6a1b      	ldr	r3, [r3, #32]
 80027a8:	4798      	blx	r3
 80027aa:	280f      	cmp	r0, #15
 80027ac:	d803      	bhi.n	80027b6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3e>
 80027ae:	4b53      	ldr	r3, [pc, #332]	; (80028fc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x184>)
 80027b0:	4a50      	ldr	r2, [pc, #320]	; (80028f4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80027b2:	21a4      	movs	r1, #164	; 0xa4
 80027b4:	e7f1      	b.n	800279a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80027b6:	f8db 000c 	ldr.w	r0, [fp, #12]
 80027ba:	6803      	ldr	r3, [r0, #0]
 80027bc:	6a1b      	ldr	r3, [r3, #32]
 80027be:	4798      	blx	r3
 80027c0:	2837      	cmp	r0, #55	; 0x37
 80027c2:	d803      	bhi.n	80027cc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x54>
 80027c4:	4b4e      	ldr	r3, [pc, #312]	; (8002900 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x188>)
 80027c6:	4a4b      	ldr	r2, [pc, #300]	; (80028f4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80027c8:	21a5      	movs	r1, #165	; 0xa5
 80027ca:	e7e6      	b.n	800279a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    if (*currentTrans)
 80027cc:	f8df 9144 	ldr.w	r9, [pc, #324]	; 8002914 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 80027d0:	f00e fd66 	bl	80112a0 <_ZN8touchgfx11Application11getInstanceEv>
 80027d4:	f00e fd6a 	bl	80112ac <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80027d8:	f8d9 0000 	ldr.w	r0, [r9]
 80027dc:	b110      	cbz	r0, 80027e4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 80027de:	6803      	ldr	r3, [r0, #0]
 80027e0:	68db      	ldr	r3, [r3, #12]
 80027e2:	4798      	blx	r3
    if (*currentTrans)
 80027e4:	f8d9 0000 	ldr.w	r0, [r9]
 80027e8:	b110      	cbz	r0, 80027f0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 80027ea:	6803      	ldr	r3, [r0, #0]
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	4798      	blx	r3
    if (*currentScreen)
 80027f0:	f8df 8124 	ldr.w	r8, [pc, #292]	; 8002918 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x1a0>
 80027f4:	f8d8 0000 	ldr.w	r0, [r8]
 80027f8:	b110      	cbz	r0, 8002800 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80027fa:	6803      	ldr	r3, [r0, #0]
 80027fc:	695b      	ldr	r3, [r3, #20]
 80027fe:	4798      	blx	r3
    if (*currentPresenter)
 8002800:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002804:	b110      	cbz	r0, 800280c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 8002806:	6803      	ldr	r3, [r0, #0]
 8002808:	685b      	ldr	r3, [r3, #4]
 800280a:	4798      	blx	r3
    if (*currentScreen)
 800280c:	f8d8 0000 	ldr.w	r0, [r8]
 8002810:	b110      	cbz	r0, 8002818 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 8002812:	6803      	ldr	r3, [r0, #0]
 8002814:	681b      	ldr	r3, [r3, #0]
 8002816:	4798      	blx	r3
    if (*currentPresenter)
 8002818:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800281c:	b110      	cbz	r0, 8002824 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 800281e:	6803      	ldr	r3, [r0, #0]
 8002820:	689b      	ldr	r3, [r3, #8]
 8002822:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002824:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002828:	6803      	ldr	r3, [r0, #0]
 800282a:	2100      	movs	r1, #0
 800282c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800282e:	4798      	blx	r3
          solid()
 8002830:	4b34      	ldr	r3, [pc, #208]	; (8002904 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x18c>)
 8002832:	6003      	str	r3, [r0, #0]
 8002834:	4604      	mov	r4, r0
 8002836:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800283a:	8103      	strh	r3, [r0, #8]
 800283c:	2500      	movs	r5, #0
 800283e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002842:	6045      	str	r5, [r0, #4]
 8002844:	7285      	strb	r5, [r0, #10]
 8002846:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002848:	4b2f      	ldr	r3, [pc, #188]	; (8002908 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x190>)
 800284a:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 800284c:	4b2f      	ldr	r3, [pc, #188]	; (800290c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x194>)
          solid()
 800284e:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_WIDTH;
 8002850:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002854:	4b2e      	ldr	r3, [pc, #184]	; (8002910 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002856:	81a1      	strh	r1, [r4, #12]
          solid()
 8002858:	3010      	adds	r0, #16
 800285a:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800285e:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002862:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002866:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800286a:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 800286e:	9001      	str	r0, [sp, #4]
 8002870:	f7ff fe1e 	bl	80024b0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002874:	6923      	ldr	r3, [r4, #16]
 8002876:	9801      	ldr	r0, [sp, #4]
 8002878:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800287a:	4631      	mov	r1, r6
 800287c:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800287e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002882:	6803      	ldr	r3, [r0, #0]
 8002884:	4629      	mov	r1, r5
 8002886:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002888:	4798      	blx	r3
 800288a:	4606      	mov	r6, r0
 800288c:	f003 f866 	bl	800595c <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002890:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002894:	6803      	ldr	r3, [r0, #0]
 8002896:	4629      	mov	r1, r5
 8002898:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800289a:	4798      	blx	r3
 800289c:	4631      	mov	r1, r6
 800289e:	4605      	mov	r5, r0
 80028a0:	f002 fd4c 	bl	800533c <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 80028a4:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80028a8:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80028ac:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80028b0:	b1e5      	cbz	r5, 80028ec <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x174>
 80028b2:	1d2b      	adds	r3, r5, #4
 80028b4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80028b8:	6833      	ldr	r3, [r6, #0]
 80028ba:	f8c5 a008 	str.w	sl, [r5, #8]
 80028be:	4630      	mov	r0, r6
 80028c0:	68db      	ldr	r3, [r3, #12]
 80028c2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80028c4:	4798      	blx	r3
    newPresenter->activate();
 80028c6:	682b      	ldr	r3, [r5, #0]
 80028c8:	4628      	mov	r0, r5
 80028ca:	681b      	ldr	r3, [r3, #0]
 80028cc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80028ce:	4621      	mov	r1, r4
 80028d0:	4630      	mov	r0, r6
 80028d2:	f010 f993 	bl	8012bfc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80028d6:	6823      	ldr	r3, [r4, #0]
 80028d8:	4620      	mov	r0, r4
 80028da:	691b      	ldr	r3, [r3, #16]
 80028dc:	4798      	blx	r3
    newTransition->invalidate();
 80028de:	6823      	ldr	r3, [r4, #0]
 80028e0:	695b      	ldr	r3, [r3, #20]
 80028e2:	4620      	mov	r0, r4
}
 80028e4:	b003      	add	sp, #12
 80028e6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028ea:	4718      	bx	r3
    model->bind(newPresenter);
 80028ec:	462b      	mov	r3, r5
 80028ee:	e7e1      	b.n	80028b4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 80028f0:	0802246c 	.word	0x0802246c
 80028f4:	0802278b 	.word	0x0802278b
 80028f8:	080225fe 	.word	0x080225fe
 80028fc:	08022645 	.word	0x08022645
 8002900:	080226e8 	.word	0x080226e8
 8002904:	080229a4 	.word	0x080229a4
 8002908:	0802293c 	.word	0x0802293c
 800290c:	200157e8 	.word	0x200157e8
 8002910:	200157ea 	.word	0x200157ea
 8002914:	2001583c 	.word	0x2001583c
 8002918:	20015838 	.word	0x20015838

0800291c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800291c:	4b04      	ldr	r3, [pc, #16]	; (8002930 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002924:	b10a      	cbz	r2, 800292a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002926:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002928:	b900      	cbnz	r0, 800292c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800292a:	6898      	ldr	r0, [r3, #8]
    }
 800292c:	4770      	bx	lr
 800292e:	bf00      	nop
 8002930:	200157f4 	.word	0x200157f4

08002934 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002934:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002936:	4604      	mov	r4, r0
        animationCounter++;
 8002938:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 800293a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800293c:	3001      	adds	r0, #1
 800293e:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002940:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 8002942:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002944:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002946:	d850      	bhi.n	80029ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002948:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800294c:	2100      	movs	r1, #0
 800294e:	f010 f95b 	bl	8012c08 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002952:	f010 0201 	ands.w	r2, r0, #1
 8002956:	b283      	uxth	r3, r0
 8002958:	d04d      	beq.n	80029f6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800295a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800295e:	2800      	cmp	r0, #0
 8002960:	bfd8      	it	le
 8002962:	460a      	movle	r2, r1
 8002964:	4413      	add	r3, r2
 8002966:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002968:	4e24      	ldr	r6, [pc, #144]	; (80029fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800296a:	4f25      	ldr	r7, [pc, #148]	; (8002a00 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800296c:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800296e:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002972:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002974:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002978:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800297c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800297e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002980:	4463      	add	r3, ip
 8002982:	1a5b      	subs	r3, r3, r1
 8002984:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002988:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800298a:	b212      	sxth	r2, r2
 800298c:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 800298e:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002990:	8322      	strh	r2, [r4, #24]
 8002992:	f8ad 2018 	strh.w	r2, [sp, #24]
 8002996:	f8ad 501a 	strh.w	r5, [sp, #26]
 800299a:	a906      	add	r1, sp, #24
 800299c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800299e:	7aa3      	ldrb	r3, [r4, #10]
 80029a0:	2b01      	cmp	r3, #1
 80029a2:	d126      	bne.n	80029f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 80029a4:	4b17      	ldr	r3, [pc, #92]	; (8002a04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 80029a6:	781b      	ldrb	r3, [r3, #0]
 80029a8:	b31b      	cbz	r3, 80029f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 80029aa:	69a1      	ldr	r1, [r4, #24]
 80029ac:	6960      	ldr	r0, [r4, #20]
 80029ae:	ab04      	add	r3, sp, #16
 80029b0:	c303      	stmia	r3!, {r0, r1}
        return instance;
 80029b2:	4b15      	ldr	r3, [pc, #84]	; (8002a08 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 80029b4:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80029b6:	6803      	ldr	r3, [r0, #0]
 80029b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029ba:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 80029bc:	8833      	ldrh	r3, [r6, #0]
 80029be:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 80029c2:	883b      	ldrh	r3, [r7, #0]
 80029c4:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80029c8:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 80029ca:	f8ad 5018 	strh.w	r5, [sp, #24]
 80029ce:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 80029d2:	f7ff ffa3 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 80029d6:	22ff      	movs	r2, #255	; 0xff
 80029d8:	6803      	ldr	r3, [r0, #0]
 80029da:	9200      	str	r2, [sp, #0]
 80029dc:	9501      	str	r5, [sp, #4]
 80029de:	68dc      	ldr	r4, [r3, #12]
 80029e0:	9903      	ldr	r1, [sp, #12]
 80029e2:	ab04      	add	r3, sp, #16
 80029e4:	aa06      	add	r2, sp, #24
 80029e6:	47a0      	blx	r4
 80029e8:	e003      	b.n	80029f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80029ea:	2301      	movs	r3, #1
 80029ec:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80029ee:	2300      	movs	r3, #0
 80029f0:	72a3      	strb	r3, [r4, #10]
    }
 80029f2:	b009      	add	sp, #36	; 0x24
 80029f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80029f6:	81e0      	strh	r0, [r4, #14]
 80029f8:	e7b6      	b.n	8002968 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80029fa:	bf00      	nop
 80029fc:	200157e8 	.word	0x200157e8
 8002a00:	200157ea 	.word	0x200157ea
 8002a04:	200157f2 	.word	0x200157f2
 8002a08:	200157f4 	.word	0x200157f4

08002a0c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a0e:	4604      	mov	r4, r0
 8002a10:	4617      	mov	r7, r2
 8002a12:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002a14:	f00e fc64 	bl	80112e0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002a18:	4b0e      	ldr	r3, [pc, #56]	; (8002a54 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 8002a1a:	601c      	str	r4, [r3, #0]
      model(m)
 8002a1c:	4b0e      	ldr	r3, [pc, #56]	; (8002a58 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 8002a1e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002a20:	4b0e      	ldr	r3, [pc, #56]	; (8002a5c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002a22:	2500      	movs	r5, #0
 8002a24:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002a28:	4b0d      	ldr	r3, [pc, #52]	; (8002a60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002a2a:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002a2e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002a30:	6803      	ldr	r3, [r0, #0]
 8002a32:	4629      	mov	r1, r5
 8002a34:	689b      	ldr	r3, [r3, #8]
 8002a36:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002a3a:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002a3e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002a40:	4628      	mov	r0, r5
 8002a42:	f002 fa97 	bl	8004f74 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002a46:	f7ff ff69 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 8002a4a:	f016 fd36 	bl	80194ba <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002a4e:	4620      	mov	r0, r4
 8002a50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a52:	bf00      	nop
 8002a54:	20015848 	.word	0x20015848
 8002a58:	080228cc 	.word	0x080228cc
 8002a5c:	080228b4 	.word	0x080228b4
 8002a60:	200157f4 	.word	0x200157f4

08002a64 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a64:	4b06      	ldr	r3, [pc, #24]	; (8002a80 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002a66:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002a6a:	2300      	movs	r3, #0
 8002a6c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002a70:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002a74:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002a78:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002a7c:	4770      	bx	lr
 8002a7e:	bf00      	nop
 8002a80:	08002629 	.word	0x08002629

08002a84 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002a84:	4b06      	ldr	r3, [pc, #24]	; (8002aa0 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 8002a86:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002a8a:	2300      	movs	r3, #0
 8002a8c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002a90:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002a94:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002a98:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002a9c:	4770      	bx	lr
 8002a9e:	bf00      	nop
 8002aa0:	08002779 	.word	0x08002779

08002aa4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002aa4:	6a00      	ldr	r0, [r0, #32]
 8002aa6:	4770      	bx	lr

08002aa8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002aa8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002aaa:	4770      	bx	lr

08002aac <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002aac:	4770      	bx	lr

08002aae <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002aae:	888b      	ldrh	r3, [r1, #4]
 8002ab0:	6980      	ldr	r0, [r0, #24]
 8002ab2:	680a      	ldr	r2, [r1, #0]
 8002ab4:	0adb      	lsrs	r3, r3, #11
 8002ab6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002aba:	4410      	add	r0, r2
 8002abc:	4770      	bx	lr

08002abe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002abe:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002ac0:	b1c2      	cbz	r2, 8002af4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002ac2:	7b13      	ldrb	r3, [r2, #12]
 8002ac4:	b1b3      	cbz	r3, 8002af4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002ac6:	7b54      	ldrb	r4, [r2, #13]
 8002ac8:	7ad2      	ldrb	r2, [r2, #11]
 8002aca:	0224      	lsls	r4, r4, #8
 8002acc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002ad0:	4314      	orrs	r4, r2
 8002ad2:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002ad4:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002ad6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002ada:	8813      	ldrh	r3, [r2, #0]
 8002adc:	428b      	cmp	r3, r1
 8002ade:	d102      	bne.n	8002ae6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002ae0:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002ae4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002ae6:	d805      	bhi.n	8002af4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002ae8:	3801      	subs	r0, #1
 8002aea:	b280      	uxth	r0, r0
 8002aec:	3204      	adds	r2, #4
 8002aee:	2800      	cmp	r0, #0
 8002af0:	d1f3      	bne.n	8002ada <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002af2:	e7f7      	b.n	8002ae4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002af4:	2000      	movs	r0, #0
 8002af6:	e7f5      	b.n	8002ae4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002af8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002af8:	b510      	push	{r4, lr}
 8002afa:	2128      	movs	r1, #40	; 0x28
 8002afc:	4604      	mov	r4, r0
 8002afe:	f01d feeb 	bl	80208d8 <_ZdlPvj>
 8002b02:	4620      	mov	r0, r4
 8002b04:	bd10      	pop	{r4, pc}
	...

08002b08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002b08:	b530      	push	{r4, r5, lr}
 8002b0a:	b089      	sub	sp, #36	; 0x24
 8002b0c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002b0e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002b12:	9506      	str	r5, [sp, #24]
 8002b14:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002b18:	9505      	str	r5, [sp, #20]
 8002b1a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002b1e:	9504      	str	r5, [sp, #16]
 8002b20:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002b24:	9503      	str	r5, [sp, #12]
 8002b26:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002b2a:	9502      	str	r5, [sp, #8]
 8002b2c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002b30:	9501      	str	r5, [sp, #4]
 8002b32:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002b36:	9500      	str	r5, [sp, #0]
 8002b38:	f00f fbf6 	bl	8012328 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002b3c:	4b06      	ldr	r3, [pc, #24]	; (8002b58 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002b3e:	6023      	str	r3, [r4, #0]
 8002b40:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002b42:	61a3      	str	r3, [r4, #24]
 8002b44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002b46:	61e3      	str	r3, [r4, #28]
 8002b48:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002b4a:	6223      	str	r3, [r4, #32]
 8002b4c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002b4e:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002b50:	4620      	mov	r0, r4
 8002b52:	b009      	add	sp, #36	; 0x24
 8002b54:	bd30      	pop	{r4, r5, pc}
 8002b56:	bf00      	nop
 8002b58:	080229c8 	.word	0x080229c8

08002b5c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002b5c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002b5e:	4770      	bx	lr

08002b60 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002b60:	4770      	bx	lr

08002b62 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002b62:	4770      	bx	lr

08002b64 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002b64:	4770      	bx	lr

08002b66 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002b66:	4770      	bx	lr

08002b68 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002b68:	4770      	bx	lr

08002b6a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002b6a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002b6c:	6803      	ldr	r3, [r0, #0]
 8002b6e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002b70:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002b72:	466d      	mov	r5, sp
 8002b74:	4601      	mov	r1, r0
 8002b76:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002b7a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002b7c:	4628      	mov	r0, r5
 8002b7e:	4798      	blx	r3
 8002b80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b84:	343c      	adds	r4, #60	; 0x3c
 8002b86:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002b8a:	b005      	add	sp, #20
 8002b8c:	bd30      	pop	{r4, r5, pc}

08002b8e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002b8e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002b90:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002b92:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002b94:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002b96:	466d      	mov	r5, sp
 8002b98:	4601      	mov	r1, r0
 8002b9a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002b9e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002ba0:	4628      	mov	r0, r5
 8002ba2:	4798      	blx	r3
 8002ba4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ba8:	343c      	adds	r4, #60	; 0x3c
 8002baa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002bae:	b005      	add	sp, #20
 8002bb0:	bd30      	pop	{r4, r5, pc}

08002bb2 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002bb2:	2200      	movs	r2, #0
 8002bb4:	8002      	strh	r2, [r0, #0]
 8002bb6:	8042      	strh	r2, [r0, #2]
 8002bb8:	8082      	strh	r2, [r0, #4]
 8002bba:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002bbc:	4770      	bx	lr

08002bbe <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002bbe:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002bc2:	4770      	bx	lr

08002bc4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002bc4:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002bc6:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002bc8:	4604      	mov	r4, r0
        setX(x);
 8002bca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002bcc:	4615      	mov	r5, r2
        setX(x);
 8002bce:	4798      	blx	r3
        setBaselineY(baselineY);
 8002bd0:	6823      	ldr	r3, [r4, #0]
 8002bd2:	4629      	mov	r1, r5
 8002bd4:	4620      	mov	r0, r4
 8002bd6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002bd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002bdc:	4718      	bx	r3

08002bde <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002bde:	2000      	movs	r0, #0
 8002be0:	4770      	bx	lr

08002be2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002be2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002be4:	4770      	bx	lr

08002be6 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002be6:	4770      	bx	lr

08002be8 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 8002be8:	4770      	bx	lr

08002bea <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 8002bea:	4770      	bx	lr

08002bec <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 8002bec:	4770      	bx	lr

08002bee <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002bee:	4770      	bx	lr

08002bf0 <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002bf0:	4770      	bx	lr

08002bf2 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002bf2:	4770      	bx	lr

08002bf4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002bf4:	4770      	bx	lr

08002bf6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002bf6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002bfa:	b14b      	cbz	r3, 8002c10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002bfc:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8002c00:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002c02:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002c04:	b13b      	cbz	r3, 8002c16 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002c06:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002c0a:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002c0c:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002c0e:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002c10:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002c14:	e7f4      	b.n	8002c00 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002c16:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002c1a:	e7f6      	b.n	8002c0a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002c1c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002c1c:	4770      	bx	lr

08002c1e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002c1e:	4770      	bx	lr

08002c20 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002c20:	4770      	bx	lr

08002c22 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002c22:	4770      	bx	lr

08002c24 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002c24:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002c26:	68c2      	ldr	r2, [r0, #12]
 8002c28:	6844      	ldr	r4, [r0, #4]
 8002c2a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002c2c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002c2e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002c32:	07d2      	lsls	r2, r2, #31
 8002c34:	bf48      	it	mi
 8002c36:	5962      	ldrmi	r2, [r4, r5]
 8002c38:	689b      	ldr	r3, [r3, #8]
    }
 8002c3a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002c3c:	bf48      	it	mi
 8002c3e:	58d3      	ldrmi	r3, [r2, r3]
 8002c40:	4718      	bx	r3

08002c42 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002c42:	6843      	ldr	r3, [r0, #4]
 8002c44:	b12b      	cbz	r3, 8002c52 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002c46:	6883      	ldr	r3, [r0, #8]
 8002c48:	b92b      	cbnz	r3, 8002c56 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002c4a:	68c0      	ldr	r0, [r0, #12]
 8002c4c:	f000 0001 	and.w	r0, r0, #1
 8002c50:	4770      	bx	lr
 8002c52:	4618      	mov	r0, r3
 8002c54:	4770      	bx	lr
 8002c56:	2001      	movs	r0, #1
    }
 8002c58:	4770      	bx	lr

08002c5a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002c5a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002c5c:	68c2      	ldr	r2, [r0, #12]
 8002c5e:	6844      	ldr	r4, [r0, #4]
 8002c60:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002c62:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002c64:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002c68:	07d2      	lsls	r2, r2, #31
 8002c6a:	bf48      	it	mi
 8002c6c:	5962      	ldrmi	r2, [r4, r5]
 8002c6e:	689b      	ldr	r3, [r3, #8]
    }
 8002c70:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002c72:	bf48      	it	mi
 8002c74:	58d3      	ldrmi	r3, [r2, r3]
 8002c76:	4718      	bx	r3

08002c78 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002c78:	6843      	ldr	r3, [r0, #4]
 8002c7a:	b12b      	cbz	r3, 8002c88 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002c7c:	6883      	ldr	r3, [r0, #8]
 8002c7e:	b92b      	cbnz	r3, 8002c8c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002c80:	68c0      	ldr	r0, [r0, #12]
 8002c82:	f000 0001 	and.w	r0, r0, #1
 8002c86:	4770      	bx	lr
 8002c88:	4618      	mov	r0, r3
 8002c8a:	4770      	bx	lr
 8002c8c:	2001      	movs	r0, #1
    }
 8002c8e:	4770      	bx	lr

08002c90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002c90:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002c94:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002c98:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002c9c:	4770      	bx	lr

08002c9e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002c9e:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002ca2:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002ca6:	4770      	bx	lr

08002ca8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002ca8:	b510      	push	{r4, lr}
 8002caa:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002cac:	307c      	adds	r0, #124	; 0x7c
 8002cae:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002cb2:	b13b      	cbz	r3, 8002cc4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002cb4:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002cb8:	f00b fe44 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002cbc:	4620      	mov	r0, r4
 8002cbe:	f7ff ff9a 	bl	8002bf6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002cc2:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002cc4:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002cc8:	e7f6      	b.n	8002cb8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002cca <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002cca:	b510      	push	{r4, lr}
 8002ccc:	214c      	movs	r1, #76	; 0x4c
 8002cce:	4604      	mov	r4, r0
 8002cd0:	f01d fe02 	bl	80208d8 <_ZdlPvj>
 8002cd4:	4620      	mov	r0, r4
 8002cd6:	bd10      	pop	{r4, pc}

08002cd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002cd8:	b510      	push	{r4, lr}
 8002cda:	2178      	movs	r1, #120	; 0x78
 8002cdc:	4604      	mov	r4, r0
 8002cde:	f01d fdfb 	bl	80208d8 <_ZdlPvj>
 8002ce2:	4620      	mov	r0, r4
 8002ce4:	bd10      	pop	{r4, pc}

08002ce6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002ce6:	b510      	push	{r4, lr}
 8002ce8:	21a8      	movs	r1, #168	; 0xa8
 8002cea:	4604      	mov	r4, r0
 8002cec:	f01d fdf4 	bl	80208d8 <_ZdlPvj>
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	bd10      	pop	{r4, pc}

08002cf4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002cf4:	b510      	push	{r4, lr}
 8002cf6:	2110      	movs	r1, #16
 8002cf8:	4604      	mov	r4, r0
 8002cfa:	f01d fded 	bl	80208d8 <_ZdlPvj>
 8002cfe:	4620      	mov	r0, r4
 8002d00:	bd10      	pop	{r4, pc}

08002d02 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002d02:	b510      	push	{r4, lr}
 8002d04:	2110      	movs	r1, #16
 8002d06:	4604      	mov	r4, r0
 8002d08:	f01d fde6 	bl	80208d8 <_ZdlPvj>
 8002d0c:	4620      	mov	r0, r4
 8002d0e:	bd10      	pop	{r4, pc}

08002d10 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002d10:	b510      	push	{r4, lr}
 8002d12:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002d16:	4604      	mov	r4, r0
 8002d18:	f01d fdde 	bl	80208d8 <_ZdlPvj>
 8002d1c:	4620      	mov	r0, r4
 8002d1e:	bd10      	pop	{r4, pc}

08002d20 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002d20:	b510      	push	{r4, lr}
 8002d22:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002d24:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002d26:	b150      	cbz	r0, 8002d3e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002d28:	6803      	ldr	r3, [r0, #0]
 8002d2a:	68db      	ldr	r3, [r3, #12]
 8002d2c:	4798      	blx	r3
 8002d2e:	b130      	cbz	r0, 8002d3e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002d30:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002d32:	6803      	ldr	r3, [r0, #0]
 8002d34:	4621      	mov	r1, r4
 8002d36:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002d38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002d3c:	4718      	bx	r3
    }
 8002d3e:	bd10      	pop	{r4, pc}

08002d40 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002d40:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002d44:	4291      	cmp	r1, r2
 8002d46:	d102      	bne.n	8002d4e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002d48:	6803      	ldr	r3, [r0, #0]
 8002d4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002d4c:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002d4e:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002d52:	4291      	cmp	r1, r2
 8002d54:	d102      	bne.n	8002d5c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002d56:	6803      	ldr	r3, [r0, #0]
 8002d58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d5a:	e7f7      	b.n	8002d4c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002d5c:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002d60:	4291      	cmp	r1, r2
 8002d62:	d102      	bne.n	8002d6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002d64:	6803      	ldr	r3, [r0, #0]
 8002d66:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002d68:	e7f0      	b.n	8002d4c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002d6a:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002d6e:	4291      	cmp	r1, r2
 8002d70:	d102      	bne.n	8002d78 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002d72:	6803      	ldr	r3, [r0, #0]
 8002d74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d76:	e7e9      	b.n	8002d4c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002d78:	4770      	bx	lr

08002d7a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002d7a:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002d7c:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002d7e:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002d82:	4604      	mov	r4, r0
 8002d84:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002d86:	b99b      	cbnz	r3, 8002db0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002d88:	b98e      	cbnz	r6, 8002dae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002d8a:	fab3 f383 	clz	r3, r3
 8002d8e:	095b      	lsrs	r3, r3, #5
 8002d90:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002d94:	6823      	ldr	r3, [r4, #0]
 8002d96:	4620      	mov	r0, r4
 8002d98:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002d9c:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002d9e:	6823      	ldr	r3, [r4, #0]
 8002da0:	4620      	mov	r0, r4
 8002da2:	695b      	ldr	r3, [r3, #20]
 8002da4:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002da6:	b116      	cbz	r6, 8002dae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002da8:	792b      	ldrb	r3, [r5, #4]
 8002daa:	2b01      	cmp	r3, #1
 8002dac:	d003      	beq.n	8002db6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002dae:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002db0:	2e00      	cmp	r6, #0
 8002db2:	d0fc      	beq.n	8002dae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002db4:	e7e9      	b.n	8002d8a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002db6:	6823      	ldr	r3, [r4, #0]
 8002db8:	4620      	mov	r0, r4
 8002dba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002dbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002dc2:	4718      	bx	r3

08002dc4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002dc4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002dc6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002dc8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002dca:	4b12      	ldr	r3, [pc, #72]	; (8002e14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002dcc:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002dce:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002dd0:	b28d      	uxth	r5, r1
 8002dd2:	b92b      	cbnz	r3, 8002de0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002dd4:	4b10      	ldr	r3, [pc, #64]	; (8002e18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002dd6:	4a11      	ldr	r2, [pc, #68]	; (8002e1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002dd8:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002dda:	4811      	ldr	r0, [pc, #68]	; (8002e20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002ddc:	f01d fe30 	bl	8020a40 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002de0:	4910      	ldr	r1, [pc, #64]	; (8002e24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002de2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002de4:	8809      	ldrh	r1, [r1, #0]
 8002de6:	4291      	cmp	r1, r2
 8002de8:	d803      	bhi.n	8002df2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002dea:	4b0f      	ldr	r3, [pc, #60]	; (8002e28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002dec:	4a0b      	ldr	r2, [pc, #44]	; (8002e1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002dee:	216d      	movs	r1, #109	; 0x6d
 8002df0:	e7f3      	b.n	8002dda <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002df2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002df6:	4b0d      	ldr	r3, [pc, #52]	; (8002e2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002dfe:	6803      	ldr	r3, [r0, #0]
 8002e00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e02:	4798      	blx	r3
 8002e04:	1a28      	subs	r0, r5, r0
 8002e06:	b201      	sxth	r1, r0
 8002e08:	4633      	mov	r3, r6
 8002e0a:	4620      	mov	r0, r4
    }
 8002e0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002e10:	4718      	bx	r3
 8002e12:	bf00      	nop
 8002e14:	2001584c 	.word	0x2001584c
 8002e18:	08022a18 	.word	0x08022a18
 8002e1c:	08022a5a 	.word	0x08022a5a
 8002e20:	08022a95 	.word	0x08022a95
 8002e24:	20015850 	.word	0x20015850
 8002e28:	08022adc 	.word	0x08022adc
 8002e2c:	20015854 	.word	0x20015854

08002e30 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002e30:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002e34:	428b      	cmp	r3, r1
{
 8002e36:	b510      	push	{r4, lr}
 8002e38:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002e3a:	d109      	bne.n	8002e50 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002e3c:	f00e fa30 	bl	80112a0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002e40:	f7ff fe20 	bl	8002a84 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002e44:	6823      	ldr	r3, [r4, #0]
 8002e46:	4620      	mov	r0, r4
 8002e48:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002e4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002e4e:	4718      	bx	r3
}
 8002e50:	bd10      	pop	{r4, pc}

08002e52 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002e52:	2200      	movs	r2, #0
 8002e54:	f04f 31ff 	mov.w	r1, #4294967295
 8002e58:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002e5c:	6082      	str	r2, [r0, #8]
    }
 8002e5e:	4770      	bx	lr

08002e60 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002e60:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002e62:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002e64:	4604      	mov	r4, r0
        setX(x);
 8002e66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002e68:	4615      	mov	r5, r2
        setX(x);
 8002e6a:	4798      	blx	r3
        setY(y);
 8002e6c:	6823      	ldr	r3, [r4, #0]
 8002e6e:	4629      	mov	r1, r5
 8002e70:	4620      	mov	r0, r4
 8002e72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002e74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002e78:	4718      	bx	r3

08002e7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002e7a:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002e7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002e80:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002e84:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002e86:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002e8a:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002e8e:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002e90:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002e92:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002e94:	f011 fc34 	bl	8014700 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002e98:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002e9c:	4607      	mov	r7, r0
 8002e9e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002ea2:	4640      	mov	r0, r8
 8002ea4:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002ea8:	f011 fc5e 	bl	8014768 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002eac:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002eb0:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002eb4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002eb8:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002ebc:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002ec0:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002ec4:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002ec8:	b239      	sxth	r1, r7
 8002eca:	b212      	sxth	r2, r2
 8002ecc:	f7ff ffc8 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002ed0:	6823      	ldr	r3, [r4, #0]
 8002ed2:	4620      	mov	r0, r4
 8002ed4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002ed8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002edc:	4718      	bx	r3

08002ede <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002ede:	b570      	push	{r4, r5, r6, lr}
 8002ee0:	4604      	mov	r4, r0
 8002ee2:	461d      	mov	r5, r3
 8002ee4:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002ee8:	f7ff ffba 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002eec:	6823      	ldr	r3, [r4, #0]
 8002eee:	4629      	mov	r1, r5
 8002ef0:	4620      	mov	r0, r4
 8002ef2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ef4:	4798      	blx	r3
        setHeight(height);
 8002ef6:	6823      	ldr	r3, [r4, #0]
 8002ef8:	4631      	mov	r1, r6
 8002efa:	4620      	mov	r0, r4
 8002efc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002efe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002f02:	4718      	bx	r3

08002f04 <_ZN8touchgfx6WidgetC1Ev>:
 8002f04:	2200      	movs	r2, #0
 8002f06:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002f0a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002f0e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002f12:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002f16:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002f1a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002f1c:	4a01      	ldr	r2, [pc, #4]	; (8002f24 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002f1e:	6002      	str	r2, [r0, #0]
 8002f20:	4770      	bx	lr
 8002f22:	bf00      	nop
 8002f24:	08022b60 	.word	0x08022b60

08002f28 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002f28:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002f2a:	2226      	movs	r2, #38	; 0x26
    Box()
 8002f2c:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002f2e:	2100      	movs	r1, #0
 8002f30:	f01d ff0c 	bl	8020d4c <memset>
 8002f34:	4620      	mov	r0, r4
 8002f36:	f7ff ffe5 	bl	8002f04 <_ZN8touchgfx6WidgetC1Ev>
 8002f3a:	4b04      	ldr	r3, [pc, #16]	; (8002f4c <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002f3c:	6023      	str	r3, [r4, #0]
 8002f3e:	23ff      	movs	r3, #255	; 0xff
 8002f40:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002f44:	2300      	movs	r3, #0
 8002f46:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002f48:	4620      	mov	r0, r4
 8002f4a:	bd10      	pop	{r4, pc}
 8002f4c:	080242b4 	.word	0x080242b4

08002f50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002f50:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002f52:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002f54:	4604      	mov	r4, r0
 8002f56:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002f58:	2100      	movs	r1, #0
 8002f5a:	f01d fef7 	bl	8020d4c <memset>
 8002f5e:	4620      	mov	r0, r4
 8002f60:	f7ff ffd0 	bl	8002f04 <_ZN8touchgfx6WidgetC1Ev>
 8002f64:	4b06      	ldr	r3, [pc, #24]	; (8002f80 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002f66:	6023      	str	r3, [r4, #0]
 8002f68:	882b      	ldrh	r3, [r5, #0]
 8002f6a:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002f6c:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002f6e:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002f70:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002f74:	4629      	mov	r1, r5
 8002f76:	f00b fce5 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002f7a:	4620      	mov	r0, r4
 8002f7c:	bd38      	pop	{r3, r4, r5, pc}
 8002f7e:	bf00      	nop
 8002f80:	080243f8 	.word	0x080243f8

08002f84 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002f84:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002f86:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002f88:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002f8a:	2100      	movs	r1, #0
 8002f8c:	f01d fede 	bl	8020d4c <memset>
 8002f90:	4620      	mov	r0, r4
 8002f92:	f7ff ffb7 	bl	8002f04 <_ZN8touchgfx6WidgetC1Ev>
 8002f96:	4b0a      	ldr	r3, [pc, #40]	; (8002fc0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002f98:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002f9a:	4b0a      	ldr	r3, [pc, #40]	; (8002fc4 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002f9c:	62a3      	str	r3, [r4, #40]	; 0x28
 8002f9e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002fa2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002fa4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002fa8:	2300      	movs	r3, #0
 8002faa:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002fae:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002fb2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002fb6:	8723      	strh	r3, [r4, #56]	; 0x38
 8002fb8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002fba:	4620      	mov	r0, r4
 8002fbc:	bd10      	pop	{r4, pc}
 8002fbe:	bf00      	nop
 8002fc0:	08024224 	.word	0x08024224
 8002fc4:	08022464 	.word	0x08022464

08002fc8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002fc8:	4b1b      	ldr	r3, [pc, #108]	; (8003038 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002fca:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002fcc:	881b      	ldrh	r3, [r3, #0]
 8002fce:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002fd0:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002fd2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002fd4:	d92b      	bls.n	800302e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002fd6:	4b19      	ldr	r3, [pc, #100]	; (800303c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	b92b      	cbnz	r3, 8002fe8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002fdc:	4b18      	ldr	r3, [pc, #96]	; (8003040 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002fde:	4a19      	ldr	r2, [pc, #100]	; (8003044 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002fe0:	4819      	ldr	r0, [pc, #100]	; (8003048 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002fe2:	216c      	movs	r1, #108	; 0x6c
 8002fe4:	f01d fd2c 	bl	8020a40 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002fe8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002fec:	4b17      	ldr	r3, [pc, #92]	; (800304c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002ff4:	4b16      	ldr	r3, [pc, #88]	; (8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002ff6:	6818      	ldr	r0, [r3, #0]
 8002ff8:	f001 fff8 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002ffc:	682b      	ldr	r3, [r5, #0]
 8002ffe:	9001      	str	r0, [sp, #4]
 8003000:	4601      	mov	r1, r0
 8003002:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003004:	4628      	mov	r0, r5
 8003006:	4798      	blx	r3
 8003008:	682b      	ldr	r3, [r5, #0]
 800300a:	9901      	ldr	r1, [sp, #4]
 800300c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800300e:	4604      	mov	r4, r0
 8003010:	4628      	mov	r0, r5
 8003012:	4798      	blx	r3
 8003014:	682b      	ldr	r3, [r5, #0]
 8003016:	9901      	ldr	r1, [sp, #4]
 8003018:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800301a:	fb14 f400 	smulbb	r4, r4, r0
 800301e:	4628      	mov	r0, r5
 8003020:	4798      	blx	r3
 8003022:	b2e4      	uxtb	r4, r4
 8003024:	4404      	add	r4, r0
 8003026:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800302a:	b002      	add	sp, #8
 800302c:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 800302e:	2300      	movs	r3, #0
 8003030:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8003034:	e7f9      	b.n	800302a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8003036:	bf00      	nop
 8003038:	20015850 	.word	0x20015850
 800303c:	2001584c 	.word	0x2001584c
 8003040:	08022a18 	.word	0x08022a18
 8003044:	08022a5a 	.word	0x08022a5a
 8003048:	08022a95 	.word	0x08022a95
 800304c:	20015854 	.word	0x20015854
 8003050:	20015858 	.word	0x20015858

08003054 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8003054:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8003058:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 800305a:	4606      	mov	r6, r0
 800305c:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 800305e:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8003062:	2500      	movs	r5, #0
 8003064:	8483      	strh	r3, [r0, #36]	; 0x24
 8003066:	4b1d      	ldr	r3, [pc, #116]	; (80030dc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8003068:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 800306a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800306e:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8003072:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8003076:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800307a:	6305      	str	r5, [r0, #48]	; 0x30
 800307c:	f846 3b34 	str.w	r3, [r6], #52
 8003080:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8003082:	4630      	mov	r0, r6
 8003084:	f7ff ff50 	bl	8002f28 <_ZN8touchgfx3BoxC1Ev>
 8003088:	4b15      	ldr	r3, [pc, #84]	; (80030e0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 800308a:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 800308c:	462a      	mov	r2, r5
        : color(0)
 800308e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8003092:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8003096:	6625      	str	r5, [r4, #96]	; 0x60
 8003098:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 800309c:	4629      	mov	r1, r5
 800309e:	4630      	mov	r0, r6
 80030a0:	f7ff fede 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80030a4:	4631      	mov	r1, r6
 80030a6:	4620      	mov	r0, r4
 80030a8:	f007 fdd8 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 80030ac:	4b0d      	ldr	r3, [pc, #52]	; (80030e4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 80030ae:	6023      	str	r3, [r4, #0]
 80030b0:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80030b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80030b8:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 80030bc:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 80030c0:	a901      	add	r1, sp, #4
 80030c2:	4628      	mov	r0, r5
 80030c4:	f8ad 3004 	strh.w	r3, [sp, #4]
 80030c8:	f7ff ff42 	bl	8002f50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 80030cc:	4620      	mov	r0, r4
 80030ce:	4629      	mov	r1, r5
 80030d0:	f007 fdc4 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80030d4:	4620      	mov	r0, r4
 80030d6:	b002      	add	sp, #8
 80030d8:	bd70      	pop	{r4, r5, r6, pc}
 80030da:	bf00      	nop
 80030dc:	08022c58 	.word	0x08022c58
 80030e0:	08024390 	.word	0x08024390
 80030e4:	08022cf4 	.word	0x08022cf4

080030e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 80030e8:	b410      	push	{r4}
        borderUp = borderColorReleased;
 80030ea:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 80030ec:	9b01      	ldr	r3, [sp, #4]
 80030ee:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 80030f0:	6803      	ldr	r3, [r0, #0]
    }
 80030f2:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 80030f6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 80030fa:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 80030fe:	4718      	bx	r3

08003100 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8003100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003104:	ed2d 8b0c 	vpush	{d8-d13}
 8003108:	4604      	mov	r4, r0
 800310a:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 800310c:	f00f fbca 	bl	80128a4 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8003110:	4622      	mov	r2, r4
 8003112:	2500      	movs	r5, #0
 8003114:	4be5      	ldr	r3, [pc, #916]	; (80034ac <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8003116:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003118:	f842 3b40 	str.w	r3, [r2], #64
 800311c:	4610      	mov	r0, r2
 800311e:	ee08 2a10 	vmov	s16, r2
 8003122:	f7ff ff01 	bl	8002f28 <_ZN8touchgfx3BoxC1Ev>
 8003126:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800312a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800312e:	a90a      	add	r1, sp, #40	; 0x28
 8003130:	4618      	mov	r0, r3
 8003132:	ee0c 3a10 	vmov	s24, r3
 8003136:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800313a:	f7ff ff09 	bl	8002f50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800313e:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8003142:	a90a      	add	r1, sp, #40	; 0x28
 8003144:	4618      	mov	r0, r3
 8003146:	ee0c 3a90 	vmov	s25, r3
 800314a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800314e:	f7ff feff 	bl	8002f50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003152:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8003156:	4618      	mov	r0, r3
 8003158:	ee08 3a90 	vmov	s17, r3
 800315c:	f7ff ff7a 	bl	8003054 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003160:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003164:	4618      	mov	r0, r3
 8003166:	ee09 3a10 	vmov	s18, r3
 800316a:	f7ff ff73 	bl	8003054 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800316e:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8003172:	4618      	mov	r0, r3
 8003174:	ee09 3a90 	vmov	s19, r3
 8003178:	f7ff ff04 	bl	8002f84 <_ZN8touchgfx8TextAreaC1Ev>
 800317c:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 8003180:	4618      	mov	r0, r3
 8003182:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003186:	4fca      	ldr	r7, [pc, #808]	; (80034b0 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8003188:	f7ff fefc 	bl	8002f84 <_ZN8touchgfx8TextAreaC1Ev>
 800318c:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 8003190:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8003194:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8003198:	4618      	mov	r0, r3
 800319a:	ee0a 3a90 	vmov	s21, r3
 800319e:	f00b fd03 	bl	800eba8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80031a2:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 80031a6:	a90a      	add	r1, sp, #40	; 0x28
 80031a8:	4618      	mov	r0, r3
 80031aa:	ee0d 3a10 	vmov	s26, r3
 80031ae:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 80031b2:	f7ff fecd 	bl	8002f50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80031b6:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 80031ba:	4618      	mov	r0, r3
 80031bc:	ee0b 3a10 	vmov	s22, r3
 80031c0:	f7ff fee0 	bl	8002f84 <_ZN8touchgfx8TextAreaC1Ev>
 80031c4:	f504 7359 	add.w	r3, r4, #868	; 0x364
 80031c8:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 80031cc:	4618      	mov	r0, r3
 80031ce:	ee0b 3a90 	vmov	s23, r3
 80031d2:	f7ff fed7 	bl	8002f84 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80031d6:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 80031da:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 80031de:	4658      	mov	r0, fp
 80031e0:	f7ff fed0 	bl	8002f84 <_ZN8touchgfx8TextAreaC1Ev>
 80031e4:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 80031e8:	a90a      	add	r1, sp, #40	; 0x28
 80031ea:	4618      	mov	r0, r3
 80031ec:	f204 4924 	addw	r9, r4, #1060	; 0x424
 80031f0:	ee0d 3a90 	vmov	s27, r3
 80031f4:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 80031f8:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 80031fc:	f7ff fea8 	bl	8002f50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003200:	4648      	mov	r0, r9
 8003202:	f7ff ff27 	bl	8003054 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003206:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 800320a:	4640      	mov	r0, r8
 800320c:	f7ff ff22 	bl	8003054 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 8003210:	4650      	mov	r0, sl
 8003212:	f7ff feb7 	bl	8002f84 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003216:	4ba7      	ldr	r3, [pc, #668]	; (80034b4 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8003218:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 800321c:	4ba6      	ldr	r3, [pc, #664]	; (80034b8 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 800321e:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 8003222:	4ba6      	ldr	r3, [pc, #664]	; (80034bc <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8003224:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 8003228:	4ba5      	ldr	r3, [pc, #660]	; (80034c0 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 800322a:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 800322e:	23f0      	movs	r3, #240	; 0xf0
 8003230:	462a      	mov	r2, r5
 8003232:	4629      	mov	r1, r5
 8003234:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 8003238:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 800323c:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003240:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 8003244:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8003248:	9300      	str	r3, [sp, #0]
 800324a:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 800324e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003252:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 8003256:	f7ff fe42 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800325a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800325e:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8003260:	462a      	mov	r2, r5
 8003262:	4629      	mov	r1, r5
 8003264:	ee1c 0a10 	vmov	r0, s24
 8003268:	f7ff fdfa 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 800326c:	ee1c 0a10 	vmov	r0, s24
 8003270:	a90a      	add	r1, sp, #40	; 0x28
 8003272:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8003276:	f00b fb65 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 800327a:	ee1c 0a90 	vmov	r0, s25
 800327e:	2219      	movs	r2, #25
 8003280:	2176      	movs	r1, #118	; 0x76
 8003282:	f7ff fded 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003286:	aa0a      	add	r2, sp, #40	; 0x28
 8003288:	f04f 0303 	mov.w	r3, #3
 800328c:	4611      	mov	r1, r2
 800328e:	ee1c 0a90 	vmov	r0, s25
 8003292:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003296:	f00b fb55 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 800329a:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800329c:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800329e:	4e89      	ldr	r6, [pc, #548]	; (80034c4 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 80032a0:	9300      	str	r3, [sp, #0]
 80032a2:	462a      	mov	r2, r5
 80032a4:	4629      	mov	r1, r5
 80032a6:	232b      	movs	r3, #43	; 0x2b
 80032a8:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 80032ac:	f7ff fe17 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 80032b0:	4b85      	ldr	r3, [pc, #532]	; (80034c8 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80032b2:	4a86      	ldr	r2, [pc, #536]	; (80034cc <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80032b4:	4986      	ldr	r1, [pc, #536]	; (80034d0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80032b6:	9600      	str	r6, [sp, #0]
 80032b8:	ee18 0a90 	vmov	r0, s17
 80032bc:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 80032c0:	f7ff ff12 	bl	80030e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80032c4:	ee18 0a90 	vmov	r0, s17
 80032c8:	aa0a      	add	r2, sp, #40	; 0x28
 80032ca:	a909      	add	r1, sp, #36	; 0x24
 80032cc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80032d0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80032d4:	f7ff fdd1 	bl	8002e7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 80032d8:	2317      	movs	r3, #23
 80032da:	ee18 0a90 	vmov	r0, s17
 80032de:	9300      	str	r3, [sp, #0]
 80032e0:	2231      	movs	r2, #49	; 0x31
 80032e2:	232b      	movs	r3, #43	; 0x2b
 80032e4:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 80032e8:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 80032ec:	f7ff fdf7 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 80032f0:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80032f4:	9303      	str	r3, [sp, #12]
        action = &callback;
 80032f6:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80032fa:	2317      	movs	r3, #23
 80032fc:	462a      	mov	r2, r5
 80032fe:	4629      	mov	r1, r5
 8003300:	9300      	str	r3, [sp, #0]
 8003302:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 8003306:	232b      	movs	r3, #43	; 0x2b
 8003308:	f7ff fde9 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800330c:	4b6e      	ldr	r3, [pc, #440]	; (80034c8 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 800330e:	4a6f      	ldr	r2, [pc, #444]	; (80034cc <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003310:	496f      	ldr	r1, [pc, #444]	; (80034d0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8003312:	9600      	str	r6, [sp, #0]
 8003314:	ee19 0a10 	vmov	r0, s18
 8003318:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 800331c:	f7ff fee4 	bl	80030e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003320:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003324:	a80a      	add	r0, sp, #40	; 0x28
 8003326:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800332a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800332e:	a909      	add	r1, sp, #36	; 0x24
 8003330:	4602      	mov	r2, r0
 8003332:	ee19 0a10 	vmov	r0, s18
 8003336:	f7ff fda0 	bl	8002e7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800333a:	2006      	movs	r0, #6
 800333c:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 8003340:	2017      	movs	r0, #23
 8003342:	232b      	movs	r3, #43	; 0x2b
 8003344:	9000      	str	r0, [sp, #0]
 8003346:	2219      	movs	r2, #25
 8003348:	ee19 0a10 	vmov	r0, s18
 800334c:	f240 1111 	movw	r1, #273	; 0x111
 8003350:	f7ff fdc5 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 8003354:	9a03      	ldr	r2, [sp, #12]
 8003356:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 800335a:	ee19 0a90 	vmov	r0, s19
 800335e:	221c      	movs	r2, #28
 8003360:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 8003362:	ae04      	add	r6, sp, #16
 8003364:	f7ff fd7c 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003368:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800336c:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8003370:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 8003374:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003378:	4630      	mov	r0, r6
 800337a:	f00a fde3 	bl	800df44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800337e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003382:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003386:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800338a:	4b52      	ldr	r3, [pc, #328]	; (80034d4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 800338c:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 800338e:	ee19 0a90 	vmov	r0, s19
 8003392:	2314      	movs	r3, #20
 8003394:	a90a      	add	r1, sp, #40	; 0x28
 8003396:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800339a:	f00b f855 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 800339e:	2018      	movs	r0, #24
 80033a0:	2224      	movs	r2, #36	; 0x24
 80033a2:	9000      	str	r0, [sp, #0]
 80033a4:	237c      	movs	r3, #124	; 0x7c
 80033a6:	ee1a 0a10 	vmov	r0, s20
 80033aa:	218f      	movs	r1, #143	; 0x8f
 80033ac:	f7ff fd97 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 80033b0:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 80033b4:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 80033b8:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80033bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80033c0:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 80033c4:	ee1a 1a10 	vmov	r1, s20
 80033c8:	4630      	mov	r0, r6
 80033ca:	4798      	blx	r3
 80033cc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80033d0:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80033d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 80033d8:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 80033dc:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 80033e0:	4b3c      	ldr	r3, [pc, #240]	; (80034d4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 80033e2:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80033e6:	ee1a 0a10 	vmov	r0, s20
 80033ea:	930a      	str	r3, [sp, #40]	; 0x28
 80033ec:	a90a      	add	r1, sp, #40	; 0x28
 80033ee:	2313      	movs	r3, #19
 80033f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80033f4:	f00b f828 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80033f8:	ee1a 0a90 	vmov	r0, s21
 80033fc:	22b4      	movs	r2, #180	; 0xb4
 80033fe:	214e      	movs	r1, #78	; 0x4e
 8003400:	f7ff fd2e 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 8003404:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8003406:	a80a      	add	r0, sp, #40	; 0x28
 8003408:	4602      	mov	r2, r0
 800340a:	a909      	add	r1, sp, #36	; 0x24
 800340c:	ee1a 0a90 	vmov	r0, s21
 8003410:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003414:	2302      	movs	r3, #2
 8003416:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800341a:	f00b f870 	bl	800e4fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800341e:	2312      	movs	r3, #18
        updateTextPosition();
 8003420:	ee1a 0a90 	vmov	r0, s21
 8003424:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 8003428:	f7ff fdce 	bl	8002fc8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 800342c:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 8003430:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003434:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 8003438:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 800343a:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 800343e:	2176      	movs	r1, #118	; 0x76
 8003440:	ee1d 0a10 	vmov	r0, s26
 8003444:	f7ff fd0c 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 8003448:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800344c:	a80a      	add	r0, sp, #40	; 0x28
 800344e:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003452:	4601      	mov	r1, r0
 8003454:	ee1d 0a10 	vmov	r0, s26
 8003458:	f00b fa74 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 800345c:	228d      	movs	r2, #141	; 0x8d
 800345e:	ee1b 0a10 	vmov	r0, s22
 8003462:	2129      	movs	r1, #41	; 0x29
 8003464:	f7ff fcfc 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003468:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800346c:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8003470:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 8003474:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 8003478:	4630      	mov	r0, r6
 800347a:	f00a fd63 	bl	800df44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800347e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003482:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003486:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800348a:	4b12      	ldr	r3, [pc, #72]	; (80034d4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 800348c:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 800348e:	a80a      	add	r0, sp, #40	; 0x28
 8003490:	2311      	movs	r3, #17
 8003492:	4601      	mov	r1, r0
 8003494:	ee1b 0a10 	vmov	r0, s22
 8003498:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800349c:	f00a ffd4 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 80034a0:	2018      	movs	r0, #24
 80034a2:	2293      	movs	r2, #147	; 0x93
 80034a4:	9000      	str	r0, [sp, #0]
 80034a6:	237c      	movs	r3, #124	; 0x7c
 80034a8:	e016      	b.n	80034d8 <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 80034aa:	bf00      	nop
 80034ac:	08022dc4 	.word	0x08022dc4
 80034b0:	08022bc8 	.word	0x08022bc8
 80034b4:	08022d94 	.word	0x08022d94
 80034b8:	08002e31 	.word	0x08002e31
 80034bc:	08022dac 	.word	0x08022dac
 80034c0:	08002d41 	.word	0x08002d41
 80034c4:	ff336699 	.word	0xff336699
 80034c8:	ff003366 	.word	0xff003366
 80034cc:	ff0099cc 	.word	0xff0099cc
 80034d0:	ff006699 	.word	0xff006699
 80034d4:	08022464 	.word	0x08022464
 80034d8:	ee1b 0a90 	vmov	r0, s23
 80034dc:	218f      	movs	r1, #143	; 0x8f
 80034de:	f7ff fcfe 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 80034e2:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80034e6:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80034ea:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80034ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80034f2:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80034f6:	ee1b 1a90 	vmov	r1, s23
 80034fa:	4630      	mov	r0, r6
 80034fc:	4798      	blx	r3
 80034fe:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003502:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8003506:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 800350a:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 800350e:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 8003512:	a80a      	add	r0, sp, #40	; 0x28
 8003514:	4b96      	ldr	r3, [pc, #600]	; (8003770 <_ZN15Screen1ViewBaseC1Ev+0x670>)
    txtNapiecieBateriiBuffer[0] = 0;
 8003516:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 800351a:	4601      	mov	r1, r0
 800351c:	930a      	str	r3, [sp, #40]	; 0x28
 800351e:	ee1b 0a90 	vmov	r0, s23
 8003522:	2310      	movs	r3, #16
 8003524:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003528:	f00a ff8e 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 800352c:	2256      	movs	r2, #86	; 0x56
 800352e:	2106      	movs	r1, #6
 8003530:	4658      	mov	r0, fp
 8003532:	f7ff fc95 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003536:	f04f 30ff 	mov.w	r0, #4294967295
 800353a:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 800353e:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 8003542:	4659      	mov	r1, fp
 8003544:	4630      	mov	r0, r6
 8003546:	f00a fcfd 	bl	800df44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800354a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800354e:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 8003552:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 8003556:	a80a      	add	r0, sp, #40	; 0x28
 8003558:	4b85      	ldr	r3, [pc, #532]	; (8003770 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 800355a:	930a      	str	r3, [sp, #40]	; 0x28
 800355c:	4601      	mov	r1, r0
 800355e:	4658      	mov	r0, fp
 8003560:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8003564:	f00a ff70 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 8003568:	2253      	movs	r2, #83	; 0x53
 800356a:	ee1d 0a90 	vmov	r0, s27
 800356e:	2176      	movs	r1, #118	; 0x76
 8003570:	f7ff fc76 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 8003574:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003578:	ee1d 0a90 	vmov	r0, s27
 800357c:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003580:	a90a      	add	r1, sp, #40	; 0x28
 8003582:	f00b f9df 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003586:	2117      	movs	r1, #23
 8003588:	462a      	mov	r2, r5
 800358a:	9100      	str	r1, [sp, #0]
 800358c:	232b      	movs	r3, #43	; 0x2b
 800358e:	4629      	mov	r1, r5
 8003590:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003594:	f7ff fca3 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003598:	4b76      	ldr	r3, [pc, #472]	; (8003774 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 800359a:	9300      	str	r3, [sp, #0]
 800359c:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80035a0:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80035a4:	4a74      	ldr	r2, [pc, #464]	; (8003778 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 80035a6:	4975      	ldr	r1, [pc, #468]	; (800377c <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80035a8:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 80035ac:	4648      	mov	r0, r9
 80035ae:	f7ff fd9b 	bl	80030e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80035b2:	a90a      	add	r1, sp, #40	; 0x28
 80035b4:	460a      	mov	r2, r1
 80035b6:	4648      	mov	r0, r9
 80035b8:	a909      	add	r1, sp, #36	; 0x24
 80035ba:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80035be:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80035c2:	f7ff fc5a 	bl	8002e7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 80035c6:	2117      	movs	r1, #23
 80035c8:	9100      	str	r1, [sp, #0]
 80035ca:	232b      	movs	r3, #43	; 0x2b
 80035cc:	2269      	movs	r2, #105	; 0x69
 80035ce:	f240 1111 	movw	r1, #273	; 0x111
 80035d2:	4648      	mov	r0, r9
 80035d4:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 80035d8:	f7ff fc81 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 80035dc:	9a03      	ldr	r2, [sp, #12]
 80035de:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 80035e2:	2117      	movs	r1, #23
 80035e4:	462a      	mov	r2, r5
 80035e6:	9100      	str	r1, [sp, #0]
 80035e8:	232b      	movs	r3, #43	; 0x2b
 80035ea:	4629      	mov	r1, r5
 80035ec:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 80035f0:	f7ff fc75 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80035f4:	4b5f      	ldr	r3, [pc, #380]	; (8003774 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 80035f6:	9300      	str	r3, [sp, #0]
 80035f8:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80035fc:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003600:	4a5d      	ldr	r2, [pc, #372]	; (8003778 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 8003602:	495e      	ldr	r1, [pc, #376]	; (800377c <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 8003604:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 8003608:	4640      	mov	r0, r8
 800360a:	f7ff fd6d 	bl	80030e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 800360e:	f04f 0206 	mov.w	r2, #6
 8003612:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8003616:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 800361a:	a909      	add	r1, sp, #36	; 0x24
 800361c:	aa0a      	add	r2, sp, #40	; 0x28
 800361e:	4640      	mov	r0, r8
 8003620:	f7ff fc2b 	bl	8002e7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003624:	2306      	movs	r3, #6
 8003626:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 800362a:	2317      	movs	r3, #23
 800362c:	9300      	str	r3, [sp, #0]
 800362e:	2251      	movs	r2, #81	; 0x51
 8003630:	232b      	movs	r3, #43	; 0x2b
 8003632:	f240 1111 	movw	r1, #273	; 0x111
 8003636:	4640      	mov	r0, r8
 8003638:	f7ff fc51 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800363c:	9b03      	ldr	r3, [sp, #12]
 800363e:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 8003642:	2318      	movs	r3, #24
 8003644:	225d      	movs	r2, #93	; 0x5d
 8003646:	9300      	str	r3, [sp, #0]
 8003648:	218f      	movs	r1, #143	; 0x8f
 800364a:	237c      	movs	r3, #124	; 0x7c
 800364c:	4650      	mov	r0, sl
 800364e:	f7ff fc46 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003652:	f04f 33ff 	mov.w	r3, #4294967295
 8003656:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 800365a:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 800365e:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 8003662:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003666:	4651      	mov	r1, sl
 8003668:	4630      	mov	r0, r6
 800366a:	4798      	blx	r3
 800366c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003670:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003674:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003678:	4b41      	ldr	r3, [pc, #260]	; (8003780 <_ZN15Screen1ViewBaseC1Ev+0x680>)
 800367a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 800367c:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 8003680:	b92b      	cbnz	r3, 800368e <_ZN15Screen1ViewBaseC1Ev+0x58e>
 8003682:	4b40      	ldr	r3, [pc, #256]	; (8003784 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003684:	4a40      	ldr	r2, [pc, #256]	; (8003788 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003686:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003688:	4840      	ldr	r0, [pc, #256]	; (800378c <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 800368a:	f01d f9d9 	bl	8020a40 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800368e:	4b40      	ldr	r3, [pc, #256]	; (8003790 <_ZN15Screen1ViewBaseC1Ev+0x690>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003690:	881b      	ldrh	r3, [r3, #0]
 8003692:	2b03      	cmp	r3, #3
 8003694:	d803      	bhi.n	800369e <_ZN15Screen1ViewBaseC1Ev+0x59e>
 8003696:	4b3f      	ldr	r3, [pc, #252]	; (8003794 <_ZN15Screen1ViewBaseC1Ev+0x694>)
 8003698:	4a3b      	ldr	r2, [pc, #236]	; (8003788 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 800369a:	2161      	movs	r1, #97	; 0x61
 800369c:	e7f4      	b.n	8003688 <_ZN15Screen1ViewBaseC1Ev+0x588>
        return texts->getText(typedTextId);
 800369e:	4b3e      	ldr	r3, [pc, #248]	; (8003798 <_ZN15Screen1ViewBaseC1Ev+0x698>)
 80036a0:	2103      	movs	r1, #3
 80036a2:	6818      	ldr	r0, [r3, #0]
 80036a4:	f001 fca2 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 80036a8:	4a3c      	ldr	r2, [pc, #240]	; (800379c <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 80036aa:	4603      	mov	r3, r0
 80036ac:	2103      	movs	r1, #3
 80036ae:	4628      	mov	r0, r5
 80036b0:	f010 fdb4 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80036b4:	4b2e      	ldr	r3, [pc, #184]	; (8003770 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 80036b6:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 80036ba:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80036bc:	1d25      	adds	r5, r4, #4
 80036be:	2304      	movs	r3, #4
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 80036c0:	a90a      	add	r1, sp, #40	; 0x28
 80036c2:	4650      	mov	r0, sl
 80036c4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80036c8:	f00a febe 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80036cc:	ee18 1a10 	vmov	r1, s16
 80036d0:	4628      	mov	r0, r5
 80036d2:	f007 fac3 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036d6:	ee1c 1a10 	vmov	r1, s24
 80036da:	4628      	mov	r0, r5
 80036dc:	f007 fabe 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036e0:	ee1c 1a90 	vmov	r1, s25
 80036e4:	4628      	mov	r0, r5
 80036e6:	f007 fab9 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036ea:	ee18 1a90 	vmov	r1, s17
 80036ee:	4628      	mov	r0, r5
 80036f0:	f007 fab4 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036f4:	ee19 1a10 	vmov	r1, s18
 80036f8:	4628      	mov	r0, r5
 80036fa:	f007 faaf 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036fe:	ee19 1a90 	vmov	r1, s19
 8003702:	4628      	mov	r0, r5
 8003704:	f007 faaa 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003708:	ee1a 1a10 	vmov	r1, s20
 800370c:	4628      	mov	r0, r5
 800370e:	f007 faa5 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003712:	ee1a 1a90 	vmov	r1, s21
 8003716:	4628      	mov	r0, r5
 8003718:	f007 faa0 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800371c:	ee1d 1a10 	vmov	r1, s26
 8003720:	4628      	mov	r0, r5
 8003722:	f007 fa9b 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003726:	ee1b 1a10 	vmov	r1, s22
 800372a:	4628      	mov	r0, r5
 800372c:	f007 fa96 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003730:	ee1b 1a90 	vmov	r1, s23
 8003734:	4628      	mov	r0, r5
 8003736:	f007 fa91 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800373a:	4659      	mov	r1, fp
 800373c:	4628      	mov	r0, r5
 800373e:	f007 fa8d 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003742:	ee1d 1a90 	vmov	r1, s27
 8003746:	4628      	mov	r0, r5
 8003748:	f007 fa88 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800374c:	4649      	mov	r1, r9
 800374e:	4628      	mov	r0, r5
 8003750:	f007 fa84 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003754:	4641      	mov	r1, r8
 8003756:	4628      	mov	r0, r5
 8003758:	f007 fa80 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800375c:	4628      	mov	r0, r5
 800375e:	4651      	mov	r1, sl
 8003760:	f007 fa7c 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003764:	4620      	mov	r0, r4
 8003766:	b00d      	add	sp, #52	; 0x34
 8003768:	ecbd 8b0c 	vpop	{d8-d13}
 800376c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003770:	08022464 	.word	0x08022464
 8003774:	ff336699 	.word	0xff336699
 8003778:	ff0099cc 	.word	0xff0099cc
 800377c:	ff006699 	.word	0xff006699
 8003780:	2001584c 	.word	0x2001584c
 8003784:	08022a18 	.word	0x08022a18
 8003788:	08022b1a 	.word	0x08022b1a
 800378c:	08022a95 	.word	0x08022a95
 8003790:	20015850 	.word	0x20015850
 8003794:	08022adc 	.word	0x08022adc
 8003798:	20015858 	.word	0x20015858
 800379c:	08022b52 	.word	0x08022b52

080037a0 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80037a0:	2000      	movs	r0, #0
 80037a2:	4770      	bx	lr

080037a4 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80037a4:	888b      	ldrh	r3, [r1, #4]
 80037a6:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80037a8:	2001      	movs	r0, #1
 80037aa:	4770      	bx	lr

080037ac <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80037ac:	4770      	bx	lr

080037ae <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80037ae:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80037b2:	4770      	bx	lr

080037b4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80037b4:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80037b6:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80037b8:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80037ba:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80037be:	4362      	muls	r2, r4
 80037c0:	4361      	muls	r1, r4
    }
 80037c2:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80037c6:	4718      	bx	r3

080037c8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80037c8:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80037cc:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80037ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80037d2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80037d6:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80037da:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80037de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037e2:	db17      	blt.n	8003814 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80037e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80037e8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037ec:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80037f0:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80037f4:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80037f8:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80037fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003800:	db1c      	blt.n	800383c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 8003802:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003806:	ee70 0aa7 	vadd.f32	s1, s1, s15
 800380a:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800380e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003812:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003814:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003818:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800381c:	ee17 2a10 	vmov	r2, s14
 8003820:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003824:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003828:	ee30 0a26 	vadd.f32	s0, s0, s13
 800382c:	1e51      	subs	r1, r2, #1
 800382e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003832:	ee10 2a10 	vmov	r2, s0
 8003836:	440a      	add	r2, r1
 8003838:	4611      	mov	r1, r2
 800383a:	e7db      	b.n	80037f4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 800383c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003840:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003844:	ee17 2a90 	vmov	r2, s15
 8003848:	ee70 0ac7 	vsub.f32	s1, s1, s14
 800384c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003850:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003854:	3a01      	subs	r2, #1
 8003856:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800385a:	ee10 ca90 	vmov	ip, s1
 800385e:	4494      	add	ip, r2
 8003860:	4662      	mov	r2, ip
 8003862:	e7d6      	b.n	8003812 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003864 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003864:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003866:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003868:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800386a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800386e:	4362      	muls	r2, r4
    }
 8003870:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003874:	4718      	bx	r3

08003876 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003876:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800387a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800387c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003880:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003884:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003888:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800388c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003890:	db08      	blt.n	80038a4 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003892:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003896:	ee30 0a27 	vadd.f32	s0, s0, s15
 800389a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800389e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80038a2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80038a4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80038a8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80038ac:	ee17 2a90 	vmov	r2, s15
 80038b0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80038b4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80038b8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80038bc:	3a01      	subs	r2, #1
 80038be:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80038c2:	ee10 ca10 	vmov	ip, s0
 80038c6:	4494      	add	ip, r2
 80038c8:	4662      	mov	r2, ip
 80038ca:	e7ea      	b.n	80038a2 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080038cc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80038cc:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80038ce:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80038d0:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80038d2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80038d6:	4362      	muls	r2, r4
 80038d8:	4361      	muls	r1, r4
    }
 80038da:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80038de:	4718      	bx	r3

080038e0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80038e0:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80038e4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80038e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80038ea:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80038ee:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80038f2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80038f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038fa:	db17      	blt.n	800392c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80038fc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003900:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003904:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003908:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 800390c:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003910:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003914:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003918:	db1c      	blt.n	8003954 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 800391a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800391e:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003922:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003926:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800392a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800392c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003930:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003934:	ee17 2a10 	vmov	r2, s14
 8003938:	ee30 0a66 	vsub.f32	s0, s0, s13
 800393c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003940:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003944:	1e51      	subs	r1, r2, #1
 8003946:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800394a:	ee10 2a10 	vmov	r2, s0
 800394e:	440a      	add	r2, r1
 8003950:	4611      	mov	r1, r2
 8003952:	e7db      	b.n	800390c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003954:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003958:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800395c:	ee17 2a90 	vmov	r2, s15
 8003960:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003964:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003968:	ee70 0a87 	vadd.f32	s1, s1, s14
 800396c:	3a01      	subs	r2, #1
 800396e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003972:	ee10 ca90 	vmov	ip, s1
 8003976:	4494      	add	ip, r2
 8003978:	4662      	mov	r2, ip
 800397a:	e7d6      	b.n	800392a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

0800397c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800397c:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800397e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003980:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003982:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003986:	4362      	muls	r2, r4
    }
 8003988:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800398c:	4718      	bx	r3

0800398e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800398e:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003992:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003994:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003998:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 800399c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80039a0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80039a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80039a8:	db08      	blt.n	80039bc <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80039aa:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80039ae:	ee30 0a27 	vadd.f32	s0, s0, s15
 80039b2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039b6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80039ba:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80039bc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039c0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80039c4:	ee17 2a90 	vmov	r2, s15
 80039c8:	ee30 0a47 	vsub.f32	s0, s0, s14
 80039cc:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80039d0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80039d4:	3a01      	subs	r2, #1
 80039d6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80039da:	ee10 ca10 	vmov	ip, s0
 80039de:	4494      	add	ip, r2
 80039e0:	4662      	mov	r2, ip
 80039e2:	e7ea      	b.n	80039ba <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080039e4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80039e4:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80039e8:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	db07      	blt.n	80039fe <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80039ee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80039f2:	fb93 f0f2 	sdiv	r0, r3, r2
 80039f6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039fa:	1040      	asrs	r0, r0, #1
 80039fc:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80039fe:	f06f 0001 	mvn.w	r0, #1
 8003a02:	fb00 2003 	mla	r0, r0, r3, r2
 8003a06:	3801      	subs	r0, #1
 8003a08:	fb90 f0f2 	sdiv	r0, r0, r2
 8003a0c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a10:	1040      	asrs	r0, r0, #1
 8003a12:	4240      	negs	r0, r0
    }
 8003a14:	4770      	bx	lr

08003a16 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 8003a16:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 8003a1a:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003a1e:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003a22:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003a26:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003a2a:	4770      	bx	lr

08003a2c <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8003a2c:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003a30:	4770      	bx	lr

08003a32 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8003a32:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 8003a36:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	db07      	blt.n	8003a4c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003a3c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003a40:	fb93 f0f2 	sdiv	r0, r3, r2
 8003a44:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a48:	1040      	asrs	r0, r0, #1
 8003a4a:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003a4c:	f06f 0001 	mvn.w	r0, #1
 8003a50:	fb00 2003 	mla	r0, r0, r3, r2
 8003a54:	3801      	subs	r0, #1
 8003a56:	fb90 f0f2 	sdiv	r0, r0, r2
 8003a5a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a5e:	1040      	asrs	r0, r0, #1
 8003a60:	4240      	negs	r0, r0
    }
 8003a62:	4770      	bx	lr

08003a64 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003a64:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003a68:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003a6c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003a70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003a74:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003a78:	4770      	bx	lr

08003a7a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8003a7a:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8003a7e:	4770      	bx	lr

08003a80 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003a80:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003a84:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003a86:	2b00      	cmp	r3, #0
 8003a88:	db07      	blt.n	8003a9a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003a8a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003a8e:	fb93 f0f2 	sdiv	r0, r3, r2
 8003a92:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a96:	1040      	asrs	r0, r0, #1
 8003a98:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003a9a:	f06f 0001 	mvn.w	r0, #1
 8003a9e:	fb00 2003 	mla	r0, r0, r3, r2
 8003aa2:	3801      	subs	r0, #1
 8003aa4:	fb90 f0f2 	sdiv	r0, r0, r2
 8003aa8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003aac:	1040      	asrs	r0, r0, #1
 8003aae:	4240      	negs	r0, r0
    }
 8003ab0:	4770      	bx	lr

08003ab2 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8003ab2:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003ab6:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003aba:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003abe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003ac2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003ac6:	4770      	bx	lr

08003ac8 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8003ac8:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 8003acc:	4770      	bx	lr

08003ace <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 8003ace:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 8003ad2:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003ad4:	2b00      	cmp	r3, #0
 8003ad6:	db07      	blt.n	8003ae8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003ad8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003adc:	fb93 f0f2 	sdiv	r0, r3, r2
 8003ae0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003ae4:	1040      	asrs	r0, r0, #1
 8003ae6:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003ae8:	f06f 0001 	mvn.w	r0, #1
 8003aec:	fb00 2003 	mla	r0, r0, r3, r2
 8003af0:	3801      	subs	r0, #1
 8003af2:	fb90 f0f2 	sdiv	r0, r0, r2
 8003af6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003afa:	1040      	asrs	r0, r0, #1
 8003afc:	4240      	negs	r0, r0
    }
 8003afe:	4770      	bx	lr

08003b00 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003b00:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 8003b04:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003b08:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003b0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003b10:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b14:	4770      	bx	lr

08003b16 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 8003b16:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8003b1a:	4770      	bx	lr

08003b1c <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 8003b1c:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 8003b1e:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003b20:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8003b22:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 8003b26:	460d      	mov	r5, r1
 8003b28:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 8003b2a:	4798      	blx	r3
        setScaleY(scale, updateData);
 8003b2c:	6823      	ldr	r3, [r4, #0]
 8003b2e:	4632      	mov	r2, r6
 8003b30:	4629      	mov	r1, r5
 8003b32:	4620      	mov	r0, r4
 8003b34:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003b38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003b3c:	4718      	bx	r3

08003b3e <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8003b3e:	6803      	ldr	r3, [r0, #0]
 8003b40:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003b44:	4718      	bx	r3

08003b46 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003b46:	6803      	ldr	r3, [r0, #0]
 8003b48:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003b4c:	4718      	bx	r3

08003b4e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8003b4e:	6803      	ldr	r3, [r0, #0]
 8003b50:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003b54:	4718      	bx	r3

08003b56 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003b56:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003b58:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003b5a:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003b5c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003b60:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003b62:	db0e      	blt.n	8003b82 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003b64:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003b68:	fb92 f1f4 	sdiv	r1, r2, r4
 8003b6c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b70:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003b72:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003b76:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003b7a:	3a01      	subs	r2, #1
 8003b7c:	440a      	add	r2, r1
 8003b7e:	4249      	negs	r1, r1
 8003b80:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b82:	f06f 0101 	mvn.w	r1, #1
 8003b86:	fb01 4102 	mla	r1, r1, r2, r4
 8003b8a:	3901      	subs	r1, #1
 8003b8c:	fb91 f1f4 	sdiv	r1, r1, r4
 8003b90:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b94:	1049      	asrs	r1, r1, #1
 8003b96:	4249      	negs	r1, r1
 8003b98:	e7eb      	b.n	8003b72 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08003b9a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8003b9a:	6803      	ldr	r3, [r0, #0]
 8003b9c:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003ba0:	4718      	bx	r3

08003ba2 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003ba2:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003ba4:	6803      	ldr	r3, [r0, #0]
 8003ba6:	4351      	muls	r1, r2
 8003ba8:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003bac:	4718      	bx	r3

08003bae <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 8003bae:	6803      	ldr	r3, [r0, #0]
 8003bb0:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003bb4:	4718      	bx	r3

08003bb6 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003bb6:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8003bba:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003bbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003bc0:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003bc4:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003bc8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003bcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003bd0:	db08      	blt.n	8003be4 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8003bd2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003bd6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003bda:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003bde:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003be2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003be4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003be8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003bec:	ee17 2a90 	vmov	r2, s15
 8003bf0:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003bf4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003bf8:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003bfc:	1e51      	subs	r1, r2, #1
 8003bfe:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003c02:	ee10 2a10 	vmov	r2, s0
 8003c06:	440a      	add	r2, r1
 8003c08:	4611      	mov	r1, r2
 8003c0a:	e7ea      	b.n	8003be2 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003c0c <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003c0c:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003c10:	4770      	bx	lr

08003c12 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8003c12:	6803      	ldr	r3, [r0, #0]
 8003c14:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003c18:	4718      	bx	r3

08003c1a <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003c1a:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003c1c:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003c1e:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003c22:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003c24:	4798      	blx	r3
        if (i >= 0)
 8003c26:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003c28:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003c2a:	db07      	blt.n	8003c3c <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003c2c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003c30:	fb90 f0f3 	sdiv	r0, r0, r3
 8003c34:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003c38:	1040      	asrs	r0, r0, #1
    }
 8003c3a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003c3c:	f06f 0201 	mvn.w	r2, #1
 8003c40:	fb02 3000 	mla	r0, r2, r0, r3
 8003c44:	3801      	subs	r0, #1
 8003c46:	fb90 f0f3 	sdiv	r0, r0, r3
 8003c4a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003c4e:	1040      	asrs	r0, r0, #1
 8003c50:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003c52:	e7f2      	b.n	8003c3a <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003c54 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003c54:	6803      	ldr	r3, [r0, #0]
 8003c56:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003c5a:	4718      	bx	r3

08003c5c <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003c5c:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003c5e:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003c60:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003c64:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003c66:	4798      	blx	r3
        return (float)i / (float)scale;
 8003c68:	ee07 0a90 	vmov	s15, r0
 8003c6c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003c70:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003c74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003c78:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003c7c:	bd10      	pop	{r4, pc}

08003c7e <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003c7e:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003c82:	4770      	bx	lr

08003c84 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003c84:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003c86:	6803      	ldr	r3, [r0, #0]
 8003c88:	4351      	muls	r1, r2
 8003c8a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003c8e:	4718      	bx	r3

08003c90 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003c90:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003c94:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003c96:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003c9a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003c9e:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003ca2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003ca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003caa:	db08      	blt.n	8003cbe <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003cac:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003cb0:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003cb4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003cb8:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003cbc:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003cbe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003cc2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003cc6:	ee17 2a90 	vmov	r2, s15
 8003cca:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003cce:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003cd2:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003cd6:	1e51      	subs	r1, r2, #1
 8003cd8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003cdc:	ee10 2a10 	vmov	r2, s0
 8003ce0:	440a      	add	r2, r1
 8003ce2:	4611      	mov	r1, r2
 8003ce4:	e7ea      	b.n	8003cbc <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003ce6 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003ce6:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003cea:	4770      	bx	lr

08003cec <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003cec:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003cee:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003cf0:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003cf4:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003cf6:	4798      	blx	r3
        if (i >= 0)
 8003cf8:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003cfa:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003cfc:	db07      	blt.n	8003d0e <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003cfe:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003d02:	fb90 f0f3 	sdiv	r0, r0, r3
 8003d06:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003d0a:	1040      	asrs	r0, r0, #1
    }
 8003d0c:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003d0e:	f06f 0201 	mvn.w	r2, #1
 8003d12:	fb02 3000 	mla	r0, r2, r0, r3
 8003d16:	3801      	subs	r0, #1
 8003d18:	fb90 f0f3 	sdiv	r0, r0, r3
 8003d1c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003d20:	1040      	asrs	r0, r0, #1
 8003d22:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003d24:	e7f2      	b.n	8003d0c <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003d26 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003d26:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003d28:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003d2a:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003d2e:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003d30:	4798      	blx	r3
        return (float)i / (float)scale;
 8003d32:	ee07 0a90 	vmov	s15, r0
 8003d36:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003d3a:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003d3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003d42:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003d46:	bd10      	pop	{r4, pc}

08003d48 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003d48:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003d4c:	4770      	bx	lr

08003d4e <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003d4e:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003d50:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003d52:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003d56:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003d58:	b510      	push	{r4, lr}
 8003d5a:	4604      	mov	r4, r0
        if (i >= 0)
 8003d5c:	db0e      	blt.n	8003d7c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003d5e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003d62:	fb91 f1f2 	sdiv	r1, r1, r2
 8003d66:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003d6a:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003d6c:	b209      	sxth	r1, r1
 8003d6e:	4620      	mov	r0, r4
 8003d70:	4798      	blx	r3
 8003d72:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003d76:	fb02 3000 	mla	r0, r2, r0, r3
 8003d7a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003d7c:	f06f 0001 	mvn.w	r0, #1
 8003d80:	fb00 2101 	mla	r1, r0, r1, r2
 8003d84:	3901      	subs	r1, #1
 8003d86:	fb91 f1f2 	sdiv	r1, r1, r2
 8003d8a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003d8e:	1049      	asrs	r1, r1, #1
 8003d90:	4249      	negs	r1, r1
 8003d92:	e7eb      	b.n	8003d6c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003d94 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003d94:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003d96:	4770      	bx	lr

08003d98 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003d98:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003d9a:	4770      	bx	lr

08003d9c <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003d9c:	6803      	ldr	r3, [r0, #0]
 8003d9e:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003da2:	4718      	bx	r3

08003da4 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003da4:	6803      	ldr	r3, [r0, #0]
 8003da6:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003daa:	4718      	bx	r3

08003dac <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003dac:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003dae:	6803      	ldr	r3, [r0, #0]
 8003db0:	4351      	muls	r1, r2
 8003db2:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003db6:	4718      	bx	r3

08003db8 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003db8:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003dba:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003dbc:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003dc0:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003dc4:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003dc8:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003dca:	4798      	blx	r3
 8003dcc:	462b      	mov	r3, r5
 8003dce:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003dd2:	4620      	mov	r0, r4
    }
 8003dd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003dd8:	4718      	bx	r3

08003dda <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003dda:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003dde:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003de2:	4293      	cmp	r3, r2
 8003de4:	db07      	blt.n	8003df6 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003de6:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003dea:	4419      	add	r1, r3
 8003dec:	fb91 f0f2 	sdiv	r0, r1, r2
 8003df0:	fb02 1110 	mls	r1, r2, r0, r1
 8003df4:	b209      	sxth	r1, r1
    }
 8003df6:	4608      	mov	r0, r1
 8003df8:	4770      	bx	lr

08003dfa <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003dfa:	0148      	lsls	r0, r1, #5
 8003dfc:	4770      	bx	lr

08003dfe <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003dfe:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003e02:	4770      	bx	lr

08003e04 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003e04:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003e08:	4770      	bx	lr

08003e0a <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003e0a:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003e0c:	2200      	movs	r2, #0
        return rect.width;
 8003e0e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003e12:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003e16:	8002      	strh	r2, [r0, #0]
 8003e18:	8042      	strh	r2, [r0, #2]
 8003e1a:	8084      	strh	r4, [r0, #4]
 8003e1c:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003e1e:	bd10      	pop	{r4, pc}

08003e20 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003e20:	2200      	movs	r2, #0
 8003e22:	8002      	strh	r2, [r0, #0]
 8003e24:	8042      	strh	r2, [r0, #2]
 8003e26:	8082      	strh	r2, [r0, #4]
 8003e28:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003e2a:	4770      	bx	lr

08003e2c <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003e2c:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003e2e:	4770      	bx	lr

08003e30 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003e30:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003e32:	4770      	bx	lr

08003e34 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003e34:	2001      	movs	r0, #1
 8003e36:	4770      	bx	lr

08003e38 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003e38:	4770      	bx	lr

08003e3a <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003e3a:	4770      	bx	lr

08003e3c <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003e3c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003e3e:	b118      	cbz	r0, 8003e48 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003e40:	6803      	ldr	r3, [r0, #0]
 8003e42:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003e46:	4718      	bx	r3
    }
 8003e48:	4770      	bx	lr

08003e4a <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003e4a:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003e4c:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003e50:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003e54:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003e58:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003e5c:	8044      	strh	r4, [r0, #2]
 8003e5e:	4421      	add	r1, r4
 8003e60:	1a52      	subs	r2, r2, r1
 8003e62:	2100      	movs	r1, #0
 8003e64:	8001      	strh	r1, [r0, #0]
 8003e66:	8085      	strh	r5, [r0, #4]
 8003e68:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003e6a:	bd30      	pop	{r4, r5, pc}

08003e6c <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003e6c:	b510      	push	{r4, lr}
 8003e6e:	8042      	strh	r2, [r0, #2]
 8003e70:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003e74:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003e78:	8004      	strh	r4, [r0, #0]
 8003e7a:	8082      	strh	r2, [r0, #4]
 8003e7c:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003e7e:	bd10      	pop	{r4, pc}

08003e80 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003e80:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003e82:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003e84:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003e88:	4718      	bx	r3

08003e8a <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003e8a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003e8c:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003e8e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003e92:	4718      	bx	r3

08003e94 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003e94:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003e98:	4770      	bx	lr

08003e9a <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003e9a:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003e9e:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003ea2:	4403      	add	r3, r0
 8003ea4:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003ea8:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003eaa:	b200      	sxth	r0, r0
 8003eac:	4770      	bx	lr

08003eae <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003eae:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003eb2:	4770      	bx	lr

08003eb4 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003eb4:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003eb8:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003ebc:	4403      	add	r3, r0
 8003ebe:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003ec2:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003ec4:	b200      	sxth	r0, r0
 8003ec6:	4770      	bx	lr

08003ec8 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003ec8:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003eca:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003ecc:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003ed0:	4611      	mov	r1, r2
 8003ed2:	4718      	bx	r3

08003ed4 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003ed4:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003ed8:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003eda:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003ede:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003ee0:	186c      	adds	r4, r5, r1
 8003ee2:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003ee6:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003eea:	80c2      	strh	r2, [r0, #6]
 8003eec:	1b09      	subs	r1, r1, r4
 8003eee:	2400      	movs	r4, #0
 8003ef0:	8044      	strh	r4, [r0, #2]
 8003ef2:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003ef4:	bd30      	pop	{r4, r5, pc}

08003ef6 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003ef6:	8002      	strh	r2, [r0, #0]
 8003ef8:	8083      	strh	r3, [r0, #4]
 8003efa:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003efe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003f02:	8042      	strh	r2, [r0, #2]
 8003f04:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003f06:	4770      	bx	lr

08003f08 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003f08:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003f0a:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003f0c:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003f10:	4718      	bx	r3

08003f12 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003f12:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003f14:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003f16:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003f1a:	4718      	bx	r3

08003f1c <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003f1c:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003f20:	4770      	bx	lr

08003f22 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003f22:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003f26:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003f2a:	4403      	add	r3, r0
 8003f2c:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003f30:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003f32:	b200      	sxth	r0, r0
 8003f34:	4770      	bx	lr

08003f36 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003f36:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003f3a:	4770      	bx	lr

08003f3c <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003f3c:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003f40:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003f44:	4403      	add	r3, r0
 8003f46:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003f4a:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003f4c:	b200      	sxth	r0, r0
 8003f4e:	4770      	bx	lr

08003f50 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003f50:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003f52:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003f54:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003f58:	4611      	mov	r1, r2
 8003f5a:	4718      	bx	r3

08003f5c <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003f5c:	4770      	bx	lr

08003f5e <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003f5e:	4770      	bx	lr

08003f60 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003f60:	4770      	bx	lr

08003f62 <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003f62:	4770      	bx	lr

08003f64 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003f64:	4770      	bx	lr

08003f66 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003f66:	4770      	bx	lr

08003f68 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003f68:	4770      	bx	lr

08003f6a <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003f6a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003f6c:	68c2      	ldr	r2, [r0, #12]
 8003f6e:	6844      	ldr	r4, [r0, #4]
 8003f70:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003f72:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003f74:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003f78:	07d2      	lsls	r2, r2, #31
 8003f7a:	bf48      	it	mi
 8003f7c:	5962      	ldrmi	r2, [r4, r5]
 8003f7e:	689b      	ldr	r3, [r3, #8]
    }
 8003f80:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003f82:	bf48      	it	mi
 8003f84:	58d3      	ldrmi	r3, [r2, r3]
 8003f86:	4718      	bx	r3

08003f88 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003f88:	6843      	ldr	r3, [r0, #4]
 8003f8a:	b12b      	cbz	r3, 8003f98 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003f8c:	6883      	ldr	r3, [r0, #8]
 8003f8e:	b92b      	cbnz	r3, 8003f9c <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003f90:	68c0      	ldr	r0, [r0, #12]
 8003f92:	f000 0001 	and.w	r0, r0, #1
 8003f96:	4770      	bx	lr
 8003f98:	4618      	mov	r0, r3
 8003f9a:	4770      	bx	lr
 8003f9c:	2001      	movs	r0, #1
    }
 8003f9e:	4770      	bx	lr

08003fa0 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003fa0:	b510      	push	{r4, lr}
 8003fa2:	2140      	movs	r1, #64	; 0x40
 8003fa4:	4604      	mov	r4, r0
 8003fa6:	f01c fc97 	bl	80208d8 <_ZdlPvj>
 8003faa:	4620      	mov	r0, r4
 8003fac:	bd10      	pop	{r4, pc}

08003fae <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003fae:	b510      	push	{r4, lr}
 8003fb0:	2140      	movs	r1, #64	; 0x40
 8003fb2:	4604      	mov	r4, r0
 8003fb4:	f01c fc90 	bl	80208d8 <_ZdlPvj>
 8003fb8:	4620      	mov	r0, r4
 8003fba:	bd10      	pop	{r4, pc}

08003fbc <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003fbc:	b510      	push	{r4, lr}
 8003fbe:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003fc2:	4604      	mov	r4, r0
 8003fc4:	f01c fc88 	bl	80208d8 <_ZdlPvj>
 8003fc8:	4620      	mov	r0, r4
 8003fca:	bd10      	pop	{r4, pc}

08003fcc <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003fcc:	b510      	push	{r4, lr}
 8003fce:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003fd2:	4604      	mov	r4, r0
 8003fd4:	f01c fc80 	bl	80208d8 <_ZdlPvj>
 8003fd8:	4620      	mov	r0, r4
 8003fda:	bd10      	pop	{r4, pc}

08003fdc <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003fdc:	b510      	push	{r4, lr}
 8003fde:	2110      	movs	r1, #16
 8003fe0:	4604      	mov	r4, r0
 8003fe2:	f01c fc79 	bl	80208d8 <_ZdlPvj>
 8003fe6:	4620      	mov	r0, r4
 8003fe8:	bd10      	pop	{r4, pc}

08003fea <_ZN19ScreenGraphViewBaseD0Ev>:
 8003fea:	b510      	push	{r4, lr}
 8003fec:	f242 713c 	movw	r1, #10044	; 0x273c
 8003ff0:	4604      	mov	r4, r0
 8003ff2:	f01c fc71 	bl	80208d8 <_ZdlPvj>
 8003ff6:	4620      	mov	r0, r4
 8003ff8:	bd10      	pop	{r4, pc}

08003ffa <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003ffa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003ffe:	b10b      	cbz	r3, 8004004 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8004000:	f006 be65 	b.w	800acce <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8004004:	4770      	bx	lr

08004006 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8004006:	b513      	push	{r0, r1, r4, lr}
 8004008:	4603      	mov	r3, r0
 800400a:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 800400c:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8004010:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8004012:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8004014:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004018:	4798      	blx	r3
 800401a:	9901      	ldr	r1, [sp, #4]
 800401c:	4602      	mov	r2, r0
 800401e:	4620      	mov	r0, r4
    }
 8004020:	b002      	add	sp, #8
 8004022:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8004026:	f008 bc9b 	b.w	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800402a <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 800402a:	b513      	push	{r0, r1, r4, lr}
 800402c:	4603      	mov	r3, r0
 800402e:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8004030:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8004034:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8004036:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8004038:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800403c:	4798      	blx	r3
 800403e:	9901      	ldr	r1, [sp, #4]
 8004040:	4602      	mov	r2, r0
 8004042:	4620      	mov	r0, r4
    }
 8004044:	b002      	add	sp, #8
 8004046:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 800404a:	f008 bc89 	b.w	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08004050 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8004050:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8004052:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8004054:	db03      	blt.n	800405e <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8004056:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 800405a:	4294      	cmp	r4, r2
 800405c:	dc06      	bgt.n	800406c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 800405e:	4b08      	ldr	r3, [pc, #32]	; (8004080 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8004060:	4a08      	ldr	r2, [pc, #32]	; (8004084 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8004062:	4809      	ldr	r0, [pc, #36]	; (8004088 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8004064:	f240 6133 	movw	r1, #1587	; 0x633
 8004068:	f01c fcea 	bl	8020a40 <__assert_func>
        return yValues[dataIndex(index)];
 800406c:	6803      	ldr	r3, [r0, #0]
 800406e:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8004072:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8004076:	4798      	blx	r3
    }
 8004078:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 800407c:	bd10      	pop	{r4, pc}
 800407e:	bf00      	nop
 8004080:	08022e04 	.word	0x08022e04
 8004084:	08022e27 	.word	0x08022e27
 8004088:	08022e76 	.word	0x08022e76

0800408c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 800408c:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 800408e:	b510      	push	{r4, lr}
 8004090:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8004092:	db03      	blt.n	800409c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8004094:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8004098:	429a      	cmp	r2, r3
 800409a:	dc06      	bgt.n	80040aa <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 800409c:	4b07      	ldr	r3, [pc, #28]	; (80040bc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 800409e:	4a08      	ldr	r2, [pc, #32]	; (80040c0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 80040a0:	4808      	ldr	r0, [pc, #32]	; (80040c4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 80040a2:	f240 612d 	movw	r1, #1581	; 0x62d
 80040a6:	f01c fccb 	bl	8020a40 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 80040aa:	6803      	ldr	r3, [r0, #0]
 80040ac:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 80040b0:	4798      	blx	r3
 80040b2:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 80040b6:	fb02 3000 	mla	r0, r2, r0, r3
 80040ba:	bd10      	pop	{r4, pc}
 80040bc:	08022e04 	.word	0x08022e04
 80040c0:	08022ed3 	.word	0x08022ed3
 80040c4:	08022e76 	.word	0x08022e76

080040c8 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 80040c8:	f500 5389 	add.w	r3, r0, #4384	; 0x1120
 80040cc:	3308      	adds	r3, #8
 80040ce:	4299      	cmp	r1, r3
{
 80040d0:	b510      	push	{r4, lr}
 80040d2:	4604      	mov	r4, r0
    if (&src == &toggleButton1)
 80040d4:	d115      	bne.n	8004102 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction2
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 80040d6:	f890 3d7d 	ldrb.w	r3, [r0, #3453]	; 0xd7d
 80040da:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 80040de:	f880 3d7d 	strb.w	r3, [r0, #3453]	; 0xd7d
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 80040e2:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 80040e6:	f083 0301 	eor.w	r3, r3, #1
 80040ea:	f880 30f1 	strb.w	r3, [r0, #241]	; 0xf1
        dynamicGraph1.invalidate();
 80040ee:	f600 5058 	addw	r0, r0, #3416	; 0xd58
 80040f2:	f00e f86c 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 80040f6:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
        //When buttonCloseModal clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
    }
}
 80040fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        modalWindow1.invalidate();
 80040fe:	f00e b866 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
    else if (&src == &buttonCloseModal)
 8004102:	f500 539c 	add.w	r3, r0, #4992	; 0x1380
 8004106:	3308      	adds	r3, #8
 8004108:	4299      	cmp	r1, r3
 800410a:	d108      	bne.n	800411e <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
 800410c:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8004110:	2200      	movs	r2, #0
        modalWindow1.invalidate();
 8004112:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8004116:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 800411a:	3018      	adds	r0, #24
 800411c:	e7ed      	b.n	80040fa <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
}
 800411e:	bd10      	pop	{r4, pc}

08004120 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8004120:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8004122:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8004124:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8004126:	f00e f9f4 	bl	8012512 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 800412a:	2800      	cmp	r0, #0
 800412c:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004130:	9901      	ldr	r1, [sp, #4]
 8004132:	462a      	mov	r2, r5
 8004134:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8004138:	db04      	blt.n	8004144 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800413a:	f00e fa09 	bl	8012550 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 800413e:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8004140:	b003      	add	sp, #12
 8004142:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004144:	f00e fa04 	bl	8012550 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8004148:	1a20      	subs	r0, r4, r0
 800414a:	e7f9      	b.n	8004140 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

0800414c <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800414c:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800414e:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8004152:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8004156:	1963      	adds	r3, r4, r5
 8004158:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 800415c:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800415e:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8004162:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8004164:	b22d      	sxth	r5, r5
 8004166:	1ad2      	subs	r2, r2, r3
 8004168:	1e69      	subs	r1, r5, #1
 800416a:	1af0      	subs	r0, r6, r3
 800416c:	f7ff ffd8 	bl	8004120 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8004170:	442c      	add	r4, r5
 8004172:	3c01      	subs	r4, #1
    }
 8004174:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8004178:	bd70      	pop	{r4, r5, r6, pc}

0800417a <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 800417a:	b538      	push	{r3, r4, r5, lr}
 800417c:	4604      	mov	r4, r0
 800417e:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8004180:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8004184:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8004188:	440b      	add	r3, r1
 800418a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 800418e:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8004192:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8004194:	b209      	sxth	r1, r1
 8004196:	1b52      	subs	r2, r2, r5
 8004198:	3901      	subs	r1, #1
 800419a:	1b40      	subs	r0, r0, r5
 800419c:	f7ff ffc0 	bl	8004120 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 80041a0:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 80041a4:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80041a8:	bd38      	pop	{r3, r4, r5, pc}
	...

080041ac <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 80041ac:	b510      	push	{r4, lr}
 80041ae:	4604      	mov	r4, r0
        : CanvasWidget()
 80041b0:	f007 ffbe 	bl	800c130 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 80041b4:	4a06      	ldr	r2, [pc, #24]	; (80041d0 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 80041b6:	6022      	str	r2, [r4, #0]
        : color(col)
 80041b8:	2300      	movs	r3, #0
 80041ba:	2201      	movs	r2, #1
 80041bc:	210a      	movs	r1, #10
 80041be:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 80041c2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80041c4:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 80041c8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80041ca:	4620      	mov	r0, r4
 80041cc:	bd10      	pop	{r4, pc}
 80041ce:	bf00      	nop
 80041d0:	08023ea8 	.word	0x08023ea8

080041d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80041d4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80041d6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80041d8:	4e12      	ldr	r6, [pc, #72]	; (8004224 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80041da:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80041dc:	4b12      	ldr	r3, [pc, #72]	; (8004228 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80041de:	6003      	str	r3, [r0, #0]
 80041e0:	6833      	ldr	r3, [r6, #0]
 80041e2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 80041e6:	4605      	mov	r5, r0
 80041e8:	b10a      	cbz	r2, 80041ee <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80041ea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80041ec:	b900      	cbnz	r0, 80041f0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80041ee:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80041f0:	6803      	ldr	r3, [r0, #0]
 80041f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80041f4:	4798      	blx	r3
        return auxiliaryLCD;
 80041f6:	6833      	ldr	r3, [r6, #0]
 80041f8:	fab0 f480 	clz	r4, r0
 80041fc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80041fe:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8004200:	b130      	cbz	r0, 8004210 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8004202:	6803      	ldr	r3, [r0, #0]
 8004204:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004206:	4798      	blx	r3
 8004208:	2800      	cmp	r0, #0
 800420a:	bf08      	it	eq
 800420c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8004210:	b92c      	cbnz	r4, 800421e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8004212:	4b06      	ldr	r3, [pc, #24]	; (800422c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8004214:	4a06      	ldr	r2, [pc, #24]	; (8004230 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8004216:	4807      	ldr	r0, [pc, #28]	; (8004234 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8004218:	212c      	movs	r1, #44	; 0x2c
 800421a:	f01c fc11 	bl	8020a40 <__assert_func>
    }
 800421e:	4628      	mov	r0, r5
 8004220:	bd70      	pop	{r4, r5, r6, pc}
 8004222:	bf00      	nop
 8004224:	200157f4 	.word	0x200157f4
 8004228:	08023194 	.word	0x08023194
 800422c:	08022f22 	.word	0x08022f22
 8004230:	08022f80 	.word	0x08022f80
 8004234:	08022fb9 	.word	0x08022fb9

08004238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8004238:	b510      	push	{r4, lr}
 800423a:	4604      	mov	r4, r0
        : CanvasWidget()
 800423c:	f007 ff78 	bl	800c130 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8004240:	4a0a      	ldr	r2, [pc, #40]	; (800426c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8004242:	6022      	str	r2, [r4, #0]
 8004244:	2300      	movs	r3, #0
 8004246:	2201      	movs	r2, #1
 8004248:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 800424c:	4a08      	ldr	r2, [pc, #32]	; (8004270 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 800424e:	63a2      	str	r2, [r4, #56]	; 0x38
 8004250:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004254:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8004256:	222e      	movs	r2, #46	; 0x2e
 8004258:	62e3      	str	r3, [r4, #44]	; 0x2c
 800425a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800425e:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8004262:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8004266:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8004268:	4620      	mov	r0, r4
 800426a:	bd10      	pop	{r4, pc}
 800426c:	080240a0 	.word	0x080240a0
 8004270:	08022464 	.word	0x08022464

08004274 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8004274:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8004276:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8004278:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 800427a:	2100      	movs	r1, #0
 800427c:	f01c fd66 	bl	8020d4c <memset>
 8004280:	4620      	mov	r0, r4
 8004282:	f7fe fe3f 	bl	8002f04 <_ZN8touchgfx6WidgetC1Ev>
 8004286:	4b05      	ldr	r3, [pc, #20]	; (800429c <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8004288:	6023      	str	r3, [r4, #0]
 800428a:	2300      	movs	r3, #0
 800428c:	62a3      	str	r3, [r4, #40]	; 0x28
 800428e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8004292:	2301      	movs	r3, #1
 8004294:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8004298:	4620      	mov	r0, r4
 800429a:	bd10      	pop	{r4, pc}
 800429c:	08024140 	.word	0x08024140

080042a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 80042a0:	b510      	push	{r4, lr}
 80042a2:	4604      	mov	r4, r0
        : TextArea()
 80042a4:	f7fe fe6e 	bl	8002f84 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80042a8:	4b02      	ldr	r3, [pc, #8]	; (80042b4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 80042aa:	6023      	str	r3, [r4, #0]
 80042ac:	2300      	movs	r3, #0
 80042ae:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80042b0:	4620      	mov	r0, r4
 80042b2:	bd10      	pop	{r4, pc}
 80042b4:	08022bc8 	.word	0x08022bc8

080042b8 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 80042b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042bc:	ed2d 8b10 	vpush	{d8-d15}
 80042c0:	4604      	mov	r4, r0
 80042c2:	b097      	sub	sp, #92	; 0x5c
 80042c4:	f00e faee 	bl	80128a4 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 80042c8:	4622      	mov	r2, r4
 80042ca:	2500      	movs	r5, #0
 80042cc:	4beb      	ldr	r3, [pc, #940]	; (800467c <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 80042ce:	63e5      	str	r5, [r4, #60]	; 0x3c
 80042d0:	f842 3b40 	str.w	r3, [r2], #64
 80042d4:	4610      	mov	r0, r2
 80042d6:	ee0b 2a90 	vmov	s23, r2
 80042da:	f7fe fe25 	bl	8002f28 <_ZN8touchgfx3BoxC1Ev>
 80042de:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80042e2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80042e6:	a914      	add	r1, sp, #80	; 0x50
 80042e8:	4618      	mov	r0, r3
 80042ea:	ee0c 3a10 	vmov	s24, r3
 80042ee:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 80042f2:	f7fe fe2d 	bl	8002f50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80042f6:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 80042fa:	4618      	mov	r0, r3
 80042fc:	f104 0bcc 	add.w	fp, r4, #204	; 0xcc
 8004300:	ee0d 3a90 	vmov	s27, r3
 8004304:	f7fe fe10 	bl	8002f28 <_ZN8touchgfx3BoxC1Ev>
 8004308:	4bdd      	ldr	r3, [pc, #884]	; (8004680 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 800430a:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800430e:	f44f 7116 	mov.w	r1, #600	; 0x258
 8004312:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 8004316:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 800431a:	4658      	mov	r0, fp
 800431c:	f008 fabc 	bl	800c898 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004320:	4bd8      	ldr	r3, [pc, #864]	; (8004684 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8004322:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8004326:	f504 7207 	add.w	r2, r4, #540	; 0x21c
 800432a:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800432c:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800432e:	e9c4 3582 	strd	r3, r5, [r4, #520]	; 0x208
 8004332:	e9c4 2584 	strd	r2, r5, [r4, #528]	; 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004336:	4658      	mov	r0, fp
 8004338:	f240 2257 	movw	r2, #599	; 0x257
 800433c:	f7ff fa3a 	bl	80037b4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004340:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 8004344:	4ad0      	ldr	r2, [pc, #832]	; (8004688 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8004346:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 800434a:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 800434c:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
 8004350:	ee0f 3a10 	vmov	s30, r3
 8004354:	f007 feec 	bl	800c130 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8004358:	f04f 0202 	mov.w	r2, #2
 800435c:	4bcb      	ldr	r3, [pc, #812]	; (800468c <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800435e:	f8df 9350 	ldr.w	r9, [pc, #848]	; 80046b0 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 8004362:	f884 2ba8 	strb.w	r2, [r4, #2984]	; 0xba8
 8004366:	f604 32ac 	addw	r2, r4, #2988	; 0xbac
 800436a:	f8c4 3b7c 	str.w	r3, [r4, #2940]	; 0xb7c
 800436e:	4610      	mov	r0, r2
 8004370:	9207      	str	r2, [sp, #28]
 8004372:	f7ff ff2f 	bl	80041d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004376:	f109 0224 	add.w	r2, r9, #36	; 0x24
 800437a:	f504 613c 	add.w	r1, r4, #3008	; 0xbc0
 800437e:	f8c4 2bb4 	str.w	r2, [r4, #2996]	; 0xbb4
 8004382:	f8c4 9bac 	str.w	r9, [r4, #2988]	; 0xbac
class GraphElementGridX : public GraphElementGridBase
 8004386:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8004388:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
 800438c:	f8df a324 	ldr.w	sl, [pc, #804]	; 80046b4 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
class GraphElementGridY : public GraphElementGridBase
 8004390:	4fbf      	ldr	r7, [pc, #764]	; (8004690 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8004392:	ee0f 1a90 	vmov	s31, r1
class GraphElementGridX : public GraphElementGridBase
 8004396:	f7ff ff09 	bl	80041ac <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800439a:	f504 6140 	add.w	r1, r4, #3072	; 0xc00
 800439e:	f8c4 abc0 	str.w	sl, [r4, #3008]	; 0xbc0
class GraphElementGridY : public GraphElementGridBase
 80043a2:	4608      	mov	r0, r1
 80043a4:	9108      	str	r1, [sp, #32]
 80043a6:	f7ff ff01 	bl	80041ac <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80043aa:	f504 6144 	add.w	r1, r4, #3136	; 0xc40
 80043ae:	f8c4 7c00 	str.w	r7, [r4, #3072]	; 0xc00
class GraphElementGridX : public GraphElementGridBase
 80043b2:	4608      	mov	r0, r1
 80043b4:	ee0e 1a10 	vmov	s28, r1
 80043b8:	f7ff fef8 	bl	80041ac <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80043bc:	f504 6148 	add.w	r1, r4, #3200	; 0xc80
 80043c0:	f8c4 ac40 	str.w	sl, [r4, #3136]	; 0xc40
class GraphElementGridY : public GraphElementGridBase
 80043c4:	4608      	mov	r0, r1
 80043c6:	ee0e 1a90 	vmov	s29, r1
 80043ca:	f7ff feef 	bl	80041ac <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80043ce:	f504 614c 	add.w	r1, r4, #3264	; 0xcc0
 80043d2:	f8c4 7c80 	str.w	r7, [r4, #3200]	; 0xc80

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 80043d6:	4608      	mov	r0, r1
 80043d8:	9109      	str	r1, [sp, #36]	; 0x24
 80043da:	f7ff ff2d 	bl	8004238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80043de:	4aad      	ldr	r2, [pc, #692]	; (8004694 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 80043e0:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
 80043e4:	f604 510c 	addw	r1, r4, #3340	; 0xd0c

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 80043e8:	4608      	mov	r0, r1
 80043ea:	f604 5858 	addw	r8, r4, #3416	; 0xd58
 80043ee:	910a      	str	r1, [sp, #40]	; 0x28
 80043f0:	f7ff ff22 	bl	8004238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80043f4:	49a8      	ldr	r1, [pc, #672]	; (8004698 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80043f6:	f8c4 1d0c 	str.w	r1, [r4, #3340]	; 0xd0c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80043fa:	4640      	mov	r0, r8
 80043fc:	213c      	movs	r1, #60	; 0x3c
 80043fe:	f008 fa4b 	bl	800c898 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004402:	4ba0      	ldr	r3, [pc, #640]	; (8004684 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8004404:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 8004408:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 800440a:	f604 63a8 	addw	r3, r4, #3752	; 0xea8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800440e:	4629      	mov	r1, r5
 8004410:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004412:	f8c4 0e94 	str.w	r0, [r4, #3732]	; 0xe94
 8004416:	f8c4 3e9c 	str.w	r3, [r4, #3740]	; 0xe9c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800441a:	4640      	mov	r0, r8
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800441c:	f8c4 5e98 	str.w	r5, [r4, #3736]	; 0xe98
 8004420:	f8c4 5ea0 	str.w	r5, [r4, #3744]	; 0xea0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004424:	f7ff f9c6 	bl	80037b4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004428:	4b9c      	ldr	r3, [pc, #624]	; (800469c <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 800442a:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 800442e:	f604 7098 	addw	r0, r4, #3992	; 0xf98
        : DynamicDataGraph(capacity, values), current(0)
 8004432:	f8a4 5ea4 	strh.w	r5, [r4, #3748]	; 0xea4
 8004436:	900b      	str	r0, [sp, #44]	; 0x2c
        : CanvasWidget()
 8004438:	f007 fe7a 	bl	800c130 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 800443c:	4b93      	ldr	r3, [pc, #588]	; (800468c <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 800443e:	f8c4 3f98 	str.w	r3, [r4, #3992]	; 0xf98
 8004442:	f04f 0302 	mov.w	r3, #2
 8004446:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
 800444a:	f604 70c8 	addw	r0, r4, #4040	; 0xfc8
 800444e:	900c      	str	r0, [sp, #48]	; 0x30
 8004450:	f7ff fec0 	bl	80041d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004454:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004458:	f8c4 2fd0 	str.w	r2, [r4, #4048]	; 0xfd0
 800445c:	f8c4 9fc8 	str.w	r9, [r4, #4040]	; 0xfc8
 8004460:	f604 70dc 	addw	r0, r4, #4060	; 0xfdc
 8004464:	f8c4 5fd4 	str.w	r5, [r4, #4052]	; 0xfd4
 8004468:	900d      	str	r0, [sp, #52]	; 0x34
class GraphElementGridX : public GraphElementGridBase
 800446a:	f7ff fe9f 	bl	80041ac <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800446e:	f504 5080 	add.w	r0, r4, #4096	; 0x1000
class GraphElementGridY : public GraphElementGridBase
 8004472:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
class GraphElementGridX : public GraphElementGridBase
 8004476:	f8c4 afdc 	str.w	sl, [r4, #4060]	; 0xfdc
 800447a:	301c      	adds	r0, #28
 800447c:	9005      	str	r0, [sp, #20]
class GraphElementGridY : public GraphElementGridBase
 800447e:	f7ff fe95 	bl	80041ac <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004482:	f504 5082 	add.w	r0, r4, #4160	; 0x1040
 8004486:	f8c9 701c 	str.w	r7, [r9, #28]
 800448a:	301c      	adds	r0, #28
 800448c:	9003      	str	r0, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 800448e:	f7ff fe8d 	bl	80041ac <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004492:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 8004496:	f8c9 a05c 	str.w	sl, [r9, #92]	; 0x5c
 800449a:	301c      	adds	r0, #28
 800449c:	9004      	str	r0, [sp, #16]
class GraphElementGridY : public GraphElementGridBase
 800449e:	f7ff fe85 	bl	80041ac <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80044a2:	f504 5086 	add.w	r0, r4, #4288	; 0x10c0
 80044a6:	f8c9 709c 	str.w	r7, [r9, #156]	; 0x9c
 80044aa:	301c      	adds	r0, #28
 80044ac:	9006      	str	r0, [sp, #24]
 80044ae:	f7ff fec3 	bl	8004238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80044b2:	4979      	ldr	r1, [pc, #484]	; (8004698 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80044b4:	f8c9 10dc 	str.w	r1, [r9, #220]	; 0xdc
 80044b8:	f504 5189 	add.w	r1, r4, #4384	; 0x1120
 80044bc:	3108      	adds	r1, #8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80044be:	4608      	mov	r0, r1
 80044c0:	ee09 1a10 	vmov	s18, r1
 80044c4:	f7ff fed6 	bl	8004274 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80044c8:	4b75      	ldr	r3, [pc, #468]	; (80046a0 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 80044ca:	f8c9 3128 	str.w	r3, [r9, #296]	; 0x128
 80044ce:	f504 518b 	add.w	r1, r4, #4448	; 0x1160
 80044d2:	f8a9 6156 	strh.w	r6, [r9, #342]	; 0x156
 80044d6:	f8a9 6158 	strh.w	r6, [r9, #344]	; 0x158
 80044da:	f889 615a 	strb.w	r6, [r9, #346]	; 0x15a
 80044de:	f8a9 615c 	strh.w	r6, [r9, #348]	; 0x15c
 80044e2:	4608      	mov	r0, r1
 80044e4:	ee09 1a90 	vmov	s19, r1
 80044e8:	f7fe fd4c 	bl	8002f84 <_ZN8touchgfx8TextAreaC1Ev>
 80044ec:	f504 518d 	add.w	r1, r4, #4512	; 0x11a0
 80044f0:	3108      	adds	r1, #8
 80044f2:	4608      	mov	r0, r1
 80044f4:	ee08 1a10 	vmov	s16, r1
 80044f8:	f7ff fed2 	bl	80042a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80044fc:	f504 518f 	add.w	r1, r4, #4576	; 0x11e0
 8004500:	3114      	adds	r1, #20
 8004502:	4608      	mov	r0, r1
 8004504:	ee0a 1a10 	vmov	s20, r1
 8004508:	f7ff feca 	bl	80042a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800450c:	f504 5192 	add.w	r1, r4, #4672	; 0x1240
 8004510:	4608      	mov	r0, r1
 8004512:	ee0c 1a90 	vmov	s25, r1
 8004516:	f7ff fec3 	bl	80042a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800451a:	f504 5194 	add.w	r1, r4, #4736	; 0x1280
 800451e:	310c      	adds	r1, #12
 8004520:	f504 5a96 	add.w	sl, r4, #4800	; 0x12c0
 8004524:	4608      	mov	r0, r1
 8004526:	f10a 0a18 	add.w	sl, sl, #24
 800452a:	ee0a 1a90 	vmov	s21, r1
 800452e:	f7ff feb7 	bl	80042a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004532:	4650      	mov	r0, sl
 8004534:	f006 fb08 	bl	800ab48 <_ZN8touchgfx11ModalWindowC1Ev>
 8004538:	f504 519c 	add.w	r1, r4, #4992	; 0x1380
 800453c:	3108      	adds	r1, #8
 800453e:	4608      	mov	r0, r1
 8004540:	ee0d 1a10 	vmov	s26, r1
 8004544:	f7ff fe96 	bl	8004274 <_ZN8touchgfx14AbstractButtonC1Ev>
 8004548:	f504 519d 	add.w	r1, r4, #5024	; 0x13a0
 800454c:	311c      	adds	r1, #28
 800454e:	4b55      	ldr	r3, [pc, #340]	; (80046a4 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8004550:	f8c9 3388 	str.w	r3, [r9, #904]	; 0x388
 8004554:	460b      	mov	r3, r1
 8004556:	4618      	mov	r0, r3
 8004558:	f8a9 63b6 	strh.w	r6, [r9, #950]	; 0x3b6
 800455c:	f8a9 63b8 	strh.w	r6, [r9, #952]	; 0x3b8
 8004560:	f889 63ba 	strb.w	r6, [r9, #954]	; 0x3ba
 8004564:	ee0b 1a10 	vmov	s22, r1
 8004568:	a914      	add	r1, sp, #80	; 0x50
 800456a:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 800456e:	f7fe fcef 	bl	8002f50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004572:	f504 519f 	add.w	r1, r4, #5088	; 0x13e0
 8004576:	3108      	adds	r1, #8
 8004578:	4608      	mov	r0, r1
 800457a:	ee08 1a90 	vmov	s17, r1
 800457e:	f7fe fd01 	bl	8002f84 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004582:	4b49      	ldr	r3, [pc, #292]	; (80046a8 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8004584:	f8c9 346c 	str.w	r3, [r9, #1132]	; 0x46c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004588:	f504 50a3 	add.w	r0, r4, #5216	; 0x1460
 800458c:	4b47      	ldr	r3, [pc, #284]	; (80046ac <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 800458e:	f8c9 3474 	str.w	r3, [r9, #1140]	; 0x474
 8004592:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004596:	301c      	adds	r0, #28
 8004598:	f8c9 4470 	str.w	r4, [r9, #1136]	; 0x470
 800459c:	f8c9 5478 	str.w	r5, [r9, #1144]	; 0x478
 80045a0:	f00b f9be 	bl	800f920 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80045a4:	23f0      	movs	r3, #240	; 0xf0
 80045a6:	ee1b 0a90 	vmov	r0, s23
 80045aa:	9300      	str	r3, [sp, #0]
 80045ac:	462a      	mov	r2, r5
 80045ae:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80045b2:	4629      	mov	r1, r5
 80045b4:	f7fe fc93 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 80045b8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 80045bc:	f06f 0216 	mvn.w	r2, #22
 80045c0:	ee1c 0a10 	vmov	r0, s24
 80045c4:	66a1      	str	r1, [r4, #104]	; 0x68
 80045c6:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 80045ca:	f7fe fc49 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 80045ce:	f04f 0104 	mov.w	r1, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 80045d2:	ee1c 0a10 	vmov	r0, s24
 80045d6:	f8ad 1050 	strh.w	r1, [sp, #80]	; 0x50
 80045da:	a914      	add	r1, sp, #80	; 0x50
 80045dc:	f00a f9b2 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 80045e0:	21a6      	movs	r1, #166	; 0xa6
 80045e2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80045e6:	ee1d 0a90 	vmov	r0, s27
 80045ea:	9100      	str	r1, [sp, #0]
 80045ec:	462a      	mov	r2, r5
 80045ee:	4629      	mov	r1, r5
 80045f0:	f7fe fc75 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 80045f4:	f04f 31ff 	mov.w	r1, #4294967295
 80045f8:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
        borderColor = colorBorder;
 80045fc:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004600:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
        borderSize = size;
 8004604:	f04f 0101 	mov.w	r1, #1
 8004608:	f8a4 10c8 	strh.w	r1, [r4, #200]	; 0xc8
    dynamicGraph2.setScale(1000);
 800460c:	462a      	mov	r2, r5
 800460e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004612:	4658      	mov	r0, fp
 8004614:	f7ff fa82 	bl	8003b1c <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 8004618:	220a      	movs	r2, #10
 800461a:	4629      	mov	r1, r5
 800461c:	4658      	mov	r0, fp
 800461e:	f7ff f8c9 	bl	80037b4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 8004622:	21a6      	movs	r1, #166	; 0xa6
 8004624:	9100      	str	r1, [sp, #0]
 8004626:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800462a:	462a      	mov	r2, r5
 800462c:	4629      	mov	r1, r5
 800462e:	4658      	mov	r0, fp
 8004630:	f7fe fc55 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 8004634:	210f      	movs	r1, #15
 8004636:	9100      	str	r1, [sp, #0]
 8004638:	2305      	movs	r3, #5
 800463a:	2214      	movs	r2, #20
 800463c:	2106      	movs	r1, #6
 800463e:	4658      	mov	r0, fp
 8004640:	f008 f8dc 	bl	800c7fc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004644:	462b      	mov	r3, r5
 8004646:	462a      	mov	r2, r5
 8004648:	4629      	mov	r1, r5
 800464a:	4658      	mov	r0, fp
 800464c:	9500      	str	r5, [sp, #0]
 800464e:	f007 ffd8 	bl	800c602 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 8004652:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004656:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800465a:	4658      	mov	r0, fp
 800465c:	f7ff f940 	bl	80038e0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004660:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004664:	f8d4 1bf0 	ldr.w	r1, [r4, #3056]	; 0xbf0
 8004668:	f8d4 0bf4 	ldr.w	r0, [r4, #3060]	; 0xbf4
        visible = vis;
 800466c:	f884 50f1 	strb.w	r5, [r4, #241]	; 0xf1
 8004670:	f008 f976 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 8004674:	ee1e 3a10 	vmov	r3, s28
 8004678:	e01e      	b.n	80046b8 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 800467a:	bf00      	nop
 800467c:	08023504 	.word	0x08023504
 8004680:	08024390 	.word	0x08024390
 8004684:	08023b54 	.word	0x08023b54
 8004688:	080231b4 	.word	0x080231b4
 800468c:	08023e2c 	.word	0x08023e2c
 8004690:	080230dc 	.word	0x080230dc
 8004694:	08023f60 	.word	0x08023f60
 8004698:	08024000 	.word	0x08024000
 800469c:	08023350 	.word	0x08023350
 80046a0:	080241b0 	.word	0x080241b0
 80046a4:	0802431c 	.word	0x0802431c
 80046a8:	080234ec 	.word	0x080234ec
 80046ac:	080040c9 	.word	0x080040c9
 80046b0:	08023aa4 	.word	0x08023aa4
 80046b4:	08023024 	.word	0x08023024
        dataScale = scale;
 80046b8:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 80046bc:	4fd3      	ldr	r7, [pc, #844]	; (8004a0c <_ZN19ScreenGraphViewBaseC1Ev+0x754>)
        majorGrid = &major;
 80046be:	f8c4 3bfc 	str.w	r3, [r4, #3068]	; 0xbfc
        lineWidth = width;
 80046c2:	f04f 0101 	mov.w	r1, #1
        dataScale = scale;
 80046c6:	f8c4 6bf0 	str.w	r6, [r4, #3056]	; 0xbf0
        color = newColor;
 80046ca:	f8c4 7bec 	str.w	r7, [r4, #3052]	; 0xbec
        gridInterval = abs(interval);
 80046ce:	f8c4 6bf4 	str.w	r6, [r4, #3060]	; 0xbf4
        lineWidth = width;
 80046d2:	f884 1bf8 	strb.w	r1, [r4, #3064]	; 0xbf8
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 80046d6:	4658      	mov	r0, fp
 80046d8:	ee1f 1a90 	vmov	r1, s31
 80046dc:	f007 ff9c 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80046e0:	4632      	mov	r2, r6
 80046e2:	f8d4 1c30 	ldr.w	r1, [r4, #3120]	; 0xc30
 80046e6:	f8d4 0c34 	ldr.w	r0, [r4, #3124]	; 0xc34
 80046ea:	f008 f939 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 80046ee:	ee1e 3a90 	vmov	r3, s29
        gridInterval = abs(interval);
 80046f2:	204b      	movs	r0, #75	; 0x4b
        lineWidth = width;
 80046f4:	f04f 0101 	mov.w	r1, #1
        majorGrid = &major;
 80046f8:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
        dataScale = scale;
 80046fc:	f8c4 6c30 	str.w	r6, [r4, #3120]	; 0xc30
        color = newColor;
 8004700:	f8c4 7c2c 	str.w	r7, [r4, #3116]	; 0xc2c
        gridInterval = abs(interval);
 8004704:	f8c4 0c34 	str.w	r0, [r4, #3124]	; 0xc34
        lineWidth = width;
 8004708:	f884 1c38 	strb.w	r1, [r4, #3128]	; 0xc38
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 800470c:	4658      	mov	r0, fp
 800470e:	9908      	ldr	r1, [sp, #32]
 8004710:	f007 ff82 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004714:	4632      	mov	r2, r6
 8004716:	f8d4 1c70 	ldr.w	r1, [r4, #3184]	; 0xc70
 800471a:	f8d4 0c74 	ldr.w	r0, [r4, #3188]	; 0xc74
 800471e:	f008 f91f 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004722:	f04f 0302 	mov.w	r3, #2
 8004726:	f884 3c78 	strb.w	r3, [r4, #3192]	; 0xc78
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 800472a:	ee1e 1a10 	vmov	r1, s28
        dataScale = scale;
 800472e:	f8c4 6c70 	str.w	r6, [r4, #3184]	; 0xc70
        color = newColor;
 8004732:	f8c4 7c6c 	str.w	r7, [r4, #3180]	; 0xc6c
        gridInterval = abs(interval);
 8004736:	f8c4 6c74 	str.w	r6, [r4, #3188]	; 0xc74
 800473a:	4658      	mov	r0, fp
 800473c:	f007 ff6c 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004740:	4632      	mov	r2, r6
 8004742:	f8d4 1cb0 	ldr.w	r1, [r4, #3248]	; 0xcb0
 8004746:	f8d4 0cb4 	ldr.w	r0, [r4, #3252]	; 0xcb4
 800474a:	f008 f909 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800474e:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 8004752:	2196      	movs	r1, #150	; 0x96
        lineWidth = width;
 8004754:	f884 3cb8 	strb.w	r3, [r4, #3256]	; 0xcb8
        dataScale = scale;
 8004758:	f8c4 6cb0 	str.w	r6, [r4, #3248]	; 0xcb0
        color = newColor;
 800475c:	f8c4 7cac 	str.w	r7, [r4, #3244]	; 0xcac
        gridInterval = abs(interval);
 8004760:	f8c4 1cb4 	str.w	r1, [r4, #3252]	; 0xcb4
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 8004764:	4658      	mov	r0, fp
 8004766:	ee1e 1a90 	vmov	r1, s29
 800476a:	f007 ff55 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800476e:	4632      	mov	r2, r6
 8004770:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 8004774:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 8004778:	f008 f8f2 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 800477c:	f04f 0207 	mov.w	r2, #7
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 8004780:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 8004782:	f8c4 6cf0 	str.w	r6, [r4, #3312]	; 0xcf0
        labelInterval = abs(interval);
 8004786:	f8c4 6cf4 	str.w	r6, [r4, #3316]	; 0xcf4
 800478a:	f8a4 2cfc 	strh.w	r2, [r4, #3324]	; 0xcfc
        color = newColor;
 800478e:	f8c4 7cec 	str.w	r7, [r4, #3308]	; 0xcec
 8004792:	4658      	mov	r0, fp
 8004794:	f007 ff64 	bl	800c660 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004798:	4632      	mov	r2, r6
 800479a:	f8d4 1d3c 	ldr.w	r1, [r4, #3388]	; 0xd3c
 800479e:	f8d4 0d40 	ldr.w	r0, [r4, #3392]	; 0xd40
 80047a2:	f008 f8dd 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80047a6:	2296      	movs	r2, #150	; 0x96
 80047a8:	f8c4 2d40 	str.w	r2, [r4, #3392]	; 0xd40
 80047ac:	f04f 0206 	mov.w	r2, #6
 80047b0:	f8a4 2d48 	strh.w	r2, [r4, #3400]	; 0xd48
        labelDecimals = decimals;
 80047b4:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 80047b8:	990a      	ldr	r1, [sp, #40]	; 0x28
        dataScale = scale;
 80047ba:	f8c4 6d3c 	str.w	r6, [r4, #3388]	; 0xd3c
        labelDecimals = decimals;
 80047be:	f8a4 2d4e 	strh.w	r2, [r4, #3406]	; 0xd4e
 80047c2:	f8c4 7d38 	str.w	r7, [r4, #3384]	; 0xd38
 80047c6:	4658      	mov	r0, fp
 80047c8:	f007 ff38 	bl	800c63c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 80047cc:	9b07      	ldr	r3, [sp, #28]
 80047ce:	f8c4 3ba4 	str.w	r3, [r4, #2980]	; 0xba4
 80047d2:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80047d6:	f04f 0302 	mov.w	r3, #2
 80047da:	f884 3ba8 	strb.w	r3, [r4, #2984]	; 0xba8
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 80047de:	ee1f 1a10 	vmov	r1, s30
 80047e2:	f8c4 2bb8 	str.w	r2, [r4, #3000]	; 0xbb8
 80047e6:	4658      	mov	r0, fp
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80047e8:	f8a4 5bbc 	strh.w	r5, [r4, #3004]	; 0xbbc
 80047ec:	f007 ff14 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 80047f0:	4631      	mov	r1, r6
 80047f2:	462a      	mov	r2, r5
 80047f4:	4640      	mov	r0, r8
 80047f6:	f7ff f991 	bl	8003b1c <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 80047fa:	22a6      	movs	r2, #166	; 0xa6
 80047fc:	9200      	str	r2, [sp, #0]
 80047fe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004802:	462a      	mov	r2, r5
 8004804:	4629      	mov	r1, r5
 8004806:	4640      	mov	r0, r8
 8004808:	f7fe fb69 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 800480c:	220f      	movs	r2, #15
 800480e:	9200      	str	r2, [sp, #0]
 8004810:	462b      	mov	r3, r5
 8004812:	2218      	movs	r2, #24
 8004814:	2106      	movs	r1, #6
 8004816:	4640      	mov	r0, r8
 8004818:	f007 fff0 	bl	800c7fc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 800481c:	462b      	mov	r3, r5
 800481e:	462a      	mov	r2, r5
 8004820:	4629      	mov	r1, r5
 8004822:	4640      	mov	r0, r8
 8004824:	9500      	str	r5, [sp, #0]
 8004826:	f007 feec 	bl	800c602 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 800482a:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800482e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004832:	4640      	mov	r0, r8
 8004834:	f7ff f854 	bl	80038e0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004838:	4632      	mov	r2, r6
 800483a:	e9d9 1003 	ldrd	r1, r0, [r9, #12]
 800483e:	f008 f88f 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004842:	f241 3288 	movw	r2, #5000	; 0x1388
        majorGrid = &major;
 8004846:	9b03      	ldr	r3, [sp, #12]
        gridInterval = abs(interval);
 8004848:	f8c9 2010 	str.w	r2, [r9, #16]
        lineWidth = width;
 800484c:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 8004850:	e9c9 7602 	strd	r7, r6, [r9, #8]
        majorGrid = &major;
 8004854:	f8c9 3018 	str.w	r3, [r9, #24]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004858:	990d      	ldr	r1, [sp, #52]	; 0x34
        lineWidth = width;
 800485a:	f889 2014 	strb.w	r2, [r9, #20]
 800485e:	4640      	mov	r0, r8
 8004860:	f007 feda 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004864:	4632      	mov	r2, r6
 8004866:	e9d9 1013 	ldrd	r1, r0, [r9, #76]	; 0x4c
 800486a:	f008 f879 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800486e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 8004872:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004876:	f8c9 3050 	str.w	r3, [r9, #80]	; 0x50
        majorGrid = &major;
 800487a:	9b04      	ldr	r3, [sp, #16]
 800487c:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
        color = newColor;
 8004880:	e9c9 7612 	strd	r7, r6, [r9, #72]	; 0x48
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8004884:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 8004886:	f889 2054 	strb.w	r2, [r9, #84]	; 0x54
 800488a:	4640      	mov	r0, r8
 800488c:	f007 fec4 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004890:	4632      	mov	r2, r6
 8004892:	e9d9 1023 	ldrd	r1, r0, [r9, #140]	; 0x8c
 8004896:	f008 f863 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800489a:	f242 7310 	movw	r3, #10000	; 0x2710
 800489e:	f8c9 3090 	str.w	r3, [r9, #144]	; 0x90
        lineWidth = width;
 80048a2:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80048a6:	e9c9 7622 	strd	r7, r6, [r9, #136]	; 0x88
        lineWidth = width;
 80048aa:	f889 3094 	strb.w	r3, [r9, #148]	; 0x94
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 80048ae:	9903      	ldr	r1, [sp, #12]
 80048b0:	4640      	mov	r0, r8
 80048b2:	f007 feb1 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80048b6:	4632      	mov	r2, r6
 80048b8:	e9d9 1033 	ldrd	r1, r0, [r9, #204]	; 0xcc
 80048bc:	f008 f850 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80048c0:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80048c4:	e9c9 7632 	strd	r7, r6, [r9, #200]	; 0xc8
        lineWidth = width;
 80048c8:	f889 30d4 	strb.w	r3, [r9, #212]	; 0xd4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 80048cc:	9904      	ldr	r1, [sp, #16]
        gridInterval = abs(interval);
 80048ce:	f8c9 60d0 	str.w	r6, [r9, #208]	; 0xd0
 80048d2:	4640      	mov	r0, r8
 80048d4:	f007 fea0 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80048d8:	4632      	mov	r2, r6
 80048da:	e9d9 1043 	ldrd	r1, r0, [r9, #268]	; 0x10c
 80048de:	f008 f83f 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80048e2:	2396      	movs	r3, #150	; 0x96
 80048e4:	f8c9 3110 	str.w	r3, [r9, #272]	; 0x110
 80048e8:	f04f 030f 	mov.w	r3, #15
 80048ec:	f8a9 3118 	strh.w	r3, [r9, #280]	; 0x118
        labelDecimals = decimals;
 80048f0:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80048f4:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 80048f6:	f8c9 610c 	str.w	r6, [r9, #268]	; 0x10c
        labelDecimals = decimals;
 80048fa:	f8a9 311e 	strh.w	r3, [r9, #286]	; 0x11e
        color = newColor;
 80048fe:	f8c9 7108 	str.w	r7, [r9, #264]	; 0x108
 8004902:	4640      	mov	r0, r8
 8004904:	f007 fe9a 	bl	800c63c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 8004908:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800490c:	f8c4 3fd4 	str.w	r3, [r4, #4052]	; 0xfd4
 8004910:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004912:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        lineWidth = width;
 8004916:	f04f 0302 	mov.w	r3, #2
 800491a:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 800491e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004920:	f8a4 5fd8 	strh.w	r5, [r4, #4056]	; 0xfd8
 8004924:	4640      	mov	r0, r8
 8004926:	f007 fe77 	bl	800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(65, 211);
 800492a:	ee19 0a10 	vmov	r0, s18
 800492e:	22d3      	movs	r2, #211	; 0xd3
 8004930:	2141      	movs	r1, #65	; 0x41
 8004932:	f7fe fa95 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 8004936:	f04f 030b 	mov.w	r3, #11
 800493a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800493e:	f04f 030c 	mov.w	r3, #12
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004942:	ee19 0a10 	vmov	r0, s18
        originalPressed = bitmapPressed;
 8004946:	f8a9 315c 	strh.w	r3, [r9, #348]	; 0x15c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800494a:	aa14      	add	r2, sp, #80	; 0x50
 800494c:	a913      	add	r1, sp, #76	; 0x4c
 800494e:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004952:	f009 fdd4 	bl	800e4fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 8004956:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
 800495a:	330c      	adds	r3, #12
    txtShowWholeGraph.setXY(1, 219);
 800495c:	22db      	movs	r2, #219	; 0xdb
 800495e:	ee19 0a90 	vmov	r0, s19
        action = &callback;
 8004962:	f8c9 3150 	str.w	r3, [r9, #336]	; 0x150
 8004966:	2101      	movs	r1, #1
 8004968:	ae0e      	add	r6, sp, #56	; 0x38
    toggleButton1.setAction(buttonCallback);
 800496a:	9303      	str	r3, [sp, #12]
    txtShowWholeGraph.setXY(1, 219);
 800496c:	f7fe fa78 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004970:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004974:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8004978:	f8c9 3190 	str.w	r3, [r9, #400]	; 0x190
        boundingArea = calculateBoundingArea();
 800497c:	4630      	mov	r0, r6
        linespace = space;
 800497e:	f8a9 5194 	strh.w	r5, [r9, #404]	; 0x194
        boundingArea = calculateBoundingArea();
 8004982:	f009 fadf 	bl	800df44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004986:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800498a:	ee19 3a90 	vmov	r3, s19
 800498e:	333c      	adds	r3, #60	; 0x3c
 8004990:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004994:	4b1e      	ldr	r3, [pc, #120]	; (8004a10 <_ZN19ScreenGraphViewBaseC1Ev+0x758>)
 8004996:	9314      	str	r3, [sp, #80]	; 0x50
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 8004998:	ee19 0a90 	vmov	r0, s19
 800499c:	230e      	movs	r3, #14
 800499e:	a914      	add	r1, sp, #80	; 0x50
 80049a0:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 80049a4:	f009 fd50 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 80049a8:	230f      	movs	r3, #15
 80049aa:	22a8      	movs	r2, #168	; 0xa8
 80049ac:	ee18 0a10 	vmov	r0, s16
 80049b0:	9300      	str	r3, [sp, #0]
 80049b2:	2102      	movs	r1, #2
 80049b4:	2384      	movs	r3, #132	; 0x84
 80049b6:	f7fe fa92 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80049ba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80049be:	f8c9 31d8 	str.w	r3, [r9, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 80049c2:	f8d9 31a8 	ldr.w	r3, [r9, #424]	; 0x1a8
        linespace = space;
 80049c6:	f8a9 51dc 	strh.w	r5, [r9, #476]	; 0x1dc
        boundingArea = calculateBoundingArea();
 80049ca:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80049ce:	ee18 1a10 	vmov	r1, s16
 80049d2:	4630      	mov	r0, r6
 80049d4:	4798      	blx	r3
 80049d6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80049da:	ee18 3a10 	vmov	r3, s16
 80049de:	333c      	adds	r3, #60	; 0x3c
 80049e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049e4:	4b0b      	ldr	r3, [pc, #44]	; (8004a14 <_ZN19ScreenGraphViewBaseC1Ev+0x75c>)
 80049e6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 80049e8:	f504 57a1 	add.w	r7, r4, #5152	; 0x1420
 80049ec:	3710      	adds	r7, #16
 80049ee:	b92b      	cbnz	r3, 80049fc <_ZN19ScreenGraphViewBaseC1Ev+0x744>
 80049f0:	4b09      	ldr	r3, [pc, #36]	; (8004a18 <_ZN19ScreenGraphViewBaseC1Ev+0x760>)
 80049f2:	4a0a      	ldr	r2, [pc, #40]	; (8004a1c <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80049f4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049f6:	480a      	ldr	r0, [pc, #40]	; (8004a20 <_ZN19ScreenGraphViewBaseC1Ev+0x768>)
 80049f8:	f01c f822 	bl	8020a40 <__assert_func>
 80049fc:	4b09      	ldr	r3, [pc, #36]	; (8004a24 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>)
 80049fe:	881b      	ldrh	r3, [r3, #0]
 8004a00:	2b0b      	cmp	r3, #11
 8004a02:	d813      	bhi.n	8004a2c <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 8004a04:	4b08      	ldr	r3, [pc, #32]	; (8004a28 <_ZN19ScreenGraphViewBaseC1Ev+0x770>)
 8004a06:	4a05      	ldr	r2, [pc, #20]	; (8004a1c <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 8004a08:	2161      	movs	r1, #97	; 0x61
 8004a0a:	e7f4      	b.n	80049f6 <_ZN19ScreenGraphViewBaseC1Ev+0x73e>
 8004a0c:	ff1497c5 	.word	0xff1497c5
 8004a10:	08022464 	.word	0x08022464
 8004a14:	2001584c 	.word	0x2001584c
 8004a18:	08022a18 	.word	0x08022a18
 8004a1c:	08022b1a 	.word	0x08022b1a
 8004a20:	08022a95 	.word	0x08022a95
 8004a24:	20015850 	.word	0x20015850
 8004a28:	08022adc 	.word	0x08022adc
        return texts->getText(typedTextId);
 8004a2c:	4bb8      	ldr	r3, [pc, #736]	; (8004d10 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004a2e:	210b      	movs	r1, #11
 8004a30:	6818      	ldr	r0, [r3, #0]
 8004a32:	f000 fadb 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 8004a36:	4ab7      	ldr	r2, [pc, #732]	; (8004d14 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004a38:	4603      	mov	r3, r0
 8004a3a:	2108      	movs	r1, #8
 8004a3c:	4638      	mov	r0, r7
 8004a3e:	f00f fbed 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004a42:	4bb5      	ldr	r3, [pc, #724]	; (8004d18 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
        wc1 = value;
 8004a44:	f8c9 71f0 	str.w	r7, [r9, #496]	; 0x1f0
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 8004a48:	ee18 0a10 	vmov	r0, s16
 8004a4c:	9314      	str	r3, [sp, #80]	; 0x50
 8004a4e:	a914      	add	r1, sp, #80	; 0x50
 8004a50:	230d      	movs	r3, #13
 8004a52:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004a56:	f009 fcf7 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 8004a5a:	210f      	movs	r1, #15
 8004a5c:	9100      	str	r1, [sp, #0]
 8004a5e:	2384      	movs	r3, #132	; 0x84
 8004a60:	2102      	movs	r1, #2
 8004a62:	ee1a 0a10 	vmov	r0, s20
 8004a66:	22b7      	movs	r2, #183	; 0xb7
 8004a68:	f7fe fa39 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004a6c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004a70:	f8c9 1224 	str.w	r1, [r9, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 8004a74:	f04f 31ff 	mov.w	r1, #4294967295
 8004a78:	e9c9 158d 	strd	r1, r5, [r9, #564]	; 0x234
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a7c:	49a7      	ldr	r1, [pc, #668]	; (8004d1c <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004a7e:	f8a9 5228 	strh.w	r5, [r9, #552]	; 0x228
 8004a82:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004a84:	f8c9 5230 	str.w	r5, [r9, #560]	; 0x230
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004a88:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 8004a8c:	2b00      	cmp	r3, #0
 8004a8e:	d0af      	beq.n	80049f0 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a90:	48a3      	ldr	r0, [pc, #652]	; (8004d20 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004a92:	8803      	ldrh	r3, [r0, #0]
 8004a94:	2b0a      	cmp	r3, #10
 8004a96:	d9b5      	bls.n	8004a04 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004a98:	4a9d      	ldr	r2, [pc, #628]	; (8004d10 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004a9a:	210a      	movs	r1, #10
 8004a9c:	6810      	ldr	r0, [r2, #0]
 8004a9e:	f000 faa5 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 8004aa2:	4a9c      	ldr	r2, [pc, #624]	; (8004d14 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004aa4:	4603      	mov	r3, r0
 8004aa6:	2108      	movs	r1, #8
 8004aa8:	4638      	mov	r0, r7
 8004aaa:	f00f fbb7 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004aae:	f04f 0c0c 	mov.w	ip, #12
 8004ab2:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004ab6:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 8004aba:	4b97      	ldr	r3, [pc, #604]	; (8004d18 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004abc:	f8c9 723c 	str.w	r7, [r9, #572]	; 0x23c
 8004ac0:	4661      	mov	r1, ip
 8004ac2:	ee1a 0a10 	vmov	r0, s20
    textChargingTme.setPosition(2, 198, 132, 15);
 8004ac6:	270f      	movs	r7, #15
 8004ac8:	9314      	str	r3, [sp, #80]	; 0x50
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004aca:	f009 fcbd 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 8004ace:	9700      	str	r7, [sp, #0]
 8004ad0:	2384      	movs	r3, #132	; 0x84
 8004ad2:	2102      	movs	r1, #2
 8004ad4:	ee1c 0a90 	vmov	r0, s25
 8004ad8:	22c6      	movs	r2, #198	; 0xc6
 8004ada:	f7fe fa00 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004ade:	498f      	ldr	r1, [pc, #572]	; (8004d1c <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004ae0:	f8a9 5274 	strh.w	r5, [r9, #628]	; 0x274
        color = newColor;
 8004ae4:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
 8004ae8:	f8c9 7270 	str.w	r7, [r9, #624]	; 0x270
 8004aec:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004aee:	f8c9 527c 	str.w	r5, [r9, #636]	; 0x27c
 8004af2:	f04f 37ff 	mov.w	r7, #4294967295
 8004af6:	e9c9 75a0 	strd	r7, r5, [r9, #640]	; 0x280
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 8004afa:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 8004afe:	3710      	adds	r7, #16
 8004b00:	2b00      	cmp	r3, #0
 8004b02:	f43f af75 	beq.w	80049f0 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004b06:	4886      	ldr	r0, [pc, #536]	; (8004d20 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004b08:	8803      	ldrh	r3, [r0, #0]
 8004b0a:	2b08      	cmp	r3, #8
 8004b0c:	f67f af7a 	bls.w	8004a04 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004b10:	4a7f      	ldr	r2, [pc, #508]	; (8004d10 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004b12:	2108      	movs	r1, #8
 8004b14:	6810      	ldr	r0, [r2, #0]
 8004b16:	f000 fa69 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 8004b1a:	4a7e      	ldr	r2, [pc, #504]	; (8004d14 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004b1c:	4603      	mov	r3, r0
 8004b1e:	210a      	movs	r1, #10
 8004b20:	4638      	mov	r0, r7
 8004b22:	f00f fb7b 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 8004b26:	f10d 0e50 	add.w	lr, sp, #80	; 0x50
        : typedTextId(id)
 8004b2a:	4b7b      	ldr	r3, [pc, #492]	; (8004d18 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004b2c:	f8c9 7288 	str.w	r7, [r9, #648]	; 0x288
 8004b30:	f04f 0c09 	mov.w	ip, #9
 8004b34:	4671      	mov	r1, lr
 8004b36:	ee1c 0a90 	vmov	r0, s25
 8004b3a:	9314      	str	r3, [sp, #80]	; 0x50
 8004b3c:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
 8004b40:	f009 fc82 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 8004b44:	f04f 0e0f 	mov.w	lr, #15
 8004b48:	f8cd e000 	str.w	lr, [sp]
 8004b4c:	2399      	movs	r3, #153	; 0x99
 8004b4e:	21a0      	movs	r1, #160	; 0xa0
 8004b50:	ee1a 0a90 	vmov	r0, s21
 8004b54:	22a8      	movs	r2, #168	; 0xa8
 8004b56:	f7fe f9c2 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004b5a:	4970      	ldr	r1, [pc, #448]	; (8004d1c <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004b5c:	f8a9 52c0 	strh.w	r5, [r9, #704]	; 0x2c0
        color = newColor;
 8004b60:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8004b64:	680b      	ldr	r3, [r1, #0]
 8004b66:	f8c9 e2bc 	str.w	lr, [r9, #700]	; 0x2bc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 8004b6a:	f504 57a3 	add.w	r7, r4, #5216	; 0x1460
        boundingArea = calculateBoundingArea();
 8004b6e:	f04f 3eff 	mov.w	lr, #4294967295
 8004b72:	e9c9 e5b3 	strd	lr, r5, [r9, #716]	; 0x2cc
 8004b76:	f8c9 52c8 	str.w	r5, [r9, #712]	; 0x2c8
 8004b7a:	3704      	adds	r7, #4
 8004b7c:	2b00      	cmp	r3, #0
 8004b7e:	f43f af37 	beq.w	80049f0 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004b82:	4867      	ldr	r0, [pc, #412]	; (8004d20 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004b84:	8803      	ldrh	r3, [r0, #0]
 8004b86:	2b01      	cmp	r3, #1
 8004b88:	f67f af3c 	bls.w	8004a04 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004b8c:	4a60      	ldr	r2, [pc, #384]	; (8004d10 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004b8e:	2101      	movs	r1, #1
 8004b90:	6810      	ldr	r0, [r2, #0]
 8004b92:	f000 fa2b 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 8004b96:	4a5f      	ldr	r2, [pc, #380]	; (8004d14 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004b98:	4603      	mov	r3, r0
 8004b9a:	2104      	movs	r1, #4
 8004b9c:	4638      	mov	r0, r7
 8004b9e:	f00f fb3d 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 8004ba2:	ee1a 0a90 	vmov	r0, s21
 8004ba6:	f8c9 72d4 	str.w	r7, [r9, #724]	; 0x2d4
        : typedTextId(id)
 8004baa:	f04f 0302 	mov.w	r3, #2
 8004bae:	4f5a      	ldr	r7, [pc, #360]	; (8004d18 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004bb0:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004bb4:	a914      	add	r1, sp, #80	; 0x50
 8004bb6:	9714      	str	r7, [sp, #80]	; 0x50
 8004bb8:	f009 fc46 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_RSZ_MY_MODAL_BACKGROUND_ID), 75, 60);
 8004bbc:	230a      	movs	r3, #10
 8004bbe:	224b      	movs	r2, #75	; 0x4b
 8004bc0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004bc4:	a914      	add	r1, sp, #80	; 0x50
 8004bc6:	233c      	movs	r3, #60	; 0x3c
 8004bc8:	4650      	mov	r0, sl
 8004bca:	f005 ff6f 	bl	800aaac <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8004bce:	4650      	mov	r0, sl
 8004bd0:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004bd4:	f005 ff3e 	bl	800aa54 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8004bd8:	2196      	movs	r1, #150	; 0x96
 8004bda:	4650      	mov	r0, sl
 8004bdc:	f005 ff3e 	bl	800aa5c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 8004be0:	4650      	mov	r0, sl
 8004be2:	f005 ff2a 	bl	800aa3a <_ZN8touchgfx11ModalWindow4hideEv>
    buttonCloseModal.setXY(53, 87);
 8004be6:	ee1d 0a10 	vmov	r0, s26
 8004bea:	2257      	movs	r2, #87	; 0x57
 8004bec:	2135      	movs	r1, #53	; 0x35
 8004bee:	f7fe f937 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 8004bf2:	f04f 0307 	mov.w	r3, #7
    buttonCloseModal.setBitmaps(touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_ID), touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_PRESSED_ID));
 8004bf6:	aa14      	add	r2, sp, #80	; 0x50
 8004bf8:	ee1d 0a10 	vmov	r0, s26
 8004bfc:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004c00:	a913      	add	r1, sp, #76	; 0x4c
 8004c02:	2308      	movs	r3, #8
 8004c04:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004c08:	f009 fc79 	bl	800e4fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004c0c:	9b03      	ldr	r3, [sp, #12]
 8004c0e:	f8c9 33b0 	str.w	r3, [r9, #944]	; 0x3b0
    modalWindow1.add(buttonCloseModal);
 8004c12:	ee1d 1a10 	vmov	r1, s26
 8004c16:	4650      	mov	r0, sl
 8004c18:	f005 ff19 	bl	800aa4e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    image1.setXY(59, 3);
 8004c1c:	2203      	movs	r2, #3
 8004c1e:	ee1b 0a10 	vmov	r0, s22
 8004c22:	213b      	movs	r1, #59	; 0x3b
 8004c24:	f7fe f91c 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 8004c28:	f04f 0c09 	mov.w	ip, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RSZ_INFO_ICON_ID));
 8004c2c:	ee1b 0a10 	vmov	r0, s22
 8004c30:	a914      	add	r1, sp, #80	; 0x50
 8004c32:	f8ad c050 	strh.w	ip, [sp, #80]	; 0x50
 8004c36:	f009 fe85 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    modalWindow1.add(image1);
 8004c3a:	ee1b 1a10 	vmov	r1, s22
 8004c3e:	4650      	mov	r0, sl
 8004c40:	f005 ff05 	bl	800aa4e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textChargingCompleted.setXY(7, 60);
 8004c44:	ee18 0a90 	vmov	r0, s17
 8004c48:	223c      	movs	r2, #60	; 0x3c
 8004c4a:	2107      	movs	r1, #7
 8004c4c:	f7fe f908 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004c50:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004c54:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8004c58:	f8c9 3418 	str.w	r3, [r9, #1048]	; 0x418
        linespace = space;
 8004c5c:	f8a9 541c 	strh.w	r5, [r9, #1052]	; 0x41c
        boundingArea = calculateBoundingArea();
 8004c60:	4630      	mov	r0, r6
 8004c62:	f009 f96f 	bl	800df44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004c66:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004c6a:	ee18 3a90 	vmov	r3, s17
 8004c6e:	333c      	adds	r3, #60	; 0x3c
 8004c70:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textChargingCompleted.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86E1));
 8004c74:	ee18 0a90 	vmov	r0, s17
 8004c78:	a914      	add	r1, sp, #80	; 0x50
 8004c7a:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
 8004c7e:	9714      	str	r7, [sp, #80]	; 0x50
 8004c80:	1d25      	adds	r5, r4, #4
 8004c82:	f009 fbe1 	bl	800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textChargingCompleted);
 8004c86:	ee18 1a90 	vmov	r1, s17
 8004c8a:	4650      	mov	r0, sl
 8004c8c:	f005 fedf 	bl	800aa4e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8004c90:	ee1b 1a90 	vmov	r1, s23
 8004c94:	4628      	mov	r0, r5
 8004c96:	f005 ffe1 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004c9a:	ee1c 1a10 	vmov	r1, s24
 8004c9e:	4628      	mov	r0, r5
 8004ca0:	f005 ffdc 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ca4:	ee1d 1a90 	vmov	r1, s27
 8004ca8:	4628      	mov	r0, r5
 8004caa:	f005 ffd7 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cae:	4659      	mov	r1, fp
 8004cb0:	4628      	mov	r0, r5
 8004cb2:	f005 ffd3 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cb6:	4641      	mov	r1, r8
 8004cb8:	4628      	mov	r0, r5
 8004cba:	f005 ffcf 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cbe:	ee19 1a10 	vmov	r1, s18
 8004cc2:	4628      	mov	r0, r5
 8004cc4:	f005 ffca 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cc8:	ee19 1a90 	vmov	r1, s19
 8004ccc:	4628      	mov	r0, r5
 8004cce:	f005 ffc5 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cd2:	ee18 1a10 	vmov	r1, s16
 8004cd6:	4628      	mov	r0, r5
 8004cd8:	f005 ffc0 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cdc:	ee1a 1a10 	vmov	r1, s20
 8004ce0:	4628      	mov	r0, r5
 8004ce2:	f005 ffbb 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ce6:	ee1c 1a90 	vmov	r1, s25
 8004cea:	4628      	mov	r0, r5
 8004cec:	f005 ffb6 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cf0:	ee1a 1a90 	vmov	r1, s21
 8004cf4:	4628      	mov	r0, r5
 8004cf6:	f005 ffb1 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cfa:	4628      	mov	r0, r5
 8004cfc:	4651      	mov	r1, sl
 8004cfe:	f005 ffad 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004d02:	4620      	mov	r0, r4
 8004d04:	b017      	add	sp, #92	; 0x5c
 8004d06:	ecbd 8b10 	vpop	{d8-d15}
 8004d0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d0e:	bf00      	nop
 8004d10:	20015858 	.word	0x20015858
 8004d14:	08022b52 	.word	0x08022b52
 8004d18:	08022464 	.word	0x08022464
 8004d1c:	2001584c 	.word	0x2001584c
 8004d20:	20015850 	.word	0x20015850

08004d24 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004d24:	4770      	bx	lr
	...

08004d28 <_Z23getFont_verdana_10_4bppv>:
{
 8004d28:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004d2a:	4d16      	ldr	r5, [pc, #88]	; (8004d84 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004d2c:	782c      	ldrb	r4, [r5, #0]
 8004d2e:	f3bf 8f5b 	dmb	ish
 8004d32:	f014 0401 	ands.w	r4, r4, #1
{
 8004d36:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004d38:	d120      	bne.n	8004d7c <_Z23getFont_verdana_10_4bppv+0x54>
 8004d3a:	4628      	mov	r0, r5
 8004d3c:	f01b fdce 	bl	80208dc <__cxa_guard_acquire>
 8004d40:	b1e0      	cbz	r0, 8004d7c <_Z23getFont_verdana_10_4bppv+0x54>
 8004d42:	233f      	movs	r3, #63	; 0x3f
 8004d44:	9307      	str	r3, [sp, #28]
 8004d46:	4b10      	ldr	r3, [pc, #64]	; (8004d88 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004d48:	9306      	str	r3, [sp, #24]
 8004d4a:	4b10      	ldr	r3, [pc, #64]	; (8004d8c <_Z23getFont_verdana_10_4bppv+0x64>)
 8004d4c:	9305      	str	r3, [sp, #20]
 8004d4e:	2301      	movs	r3, #1
 8004d50:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004d54:	9302      	str	r3, [sp, #8]
 8004d56:	2204      	movs	r2, #4
 8004d58:	2302      	movs	r3, #2
 8004d5a:	e9cd 3200 	strd	r3, r2, [sp]
 8004d5e:	490c      	ldr	r1, [pc, #48]	; (8004d90 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004d60:	480c      	ldr	r0, [pc, #48]	; (8004d94 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004d62:	9408      	str	r4, [sp, #32]
 8004d64:	230a      	movs	r3, #10
 8004d66:	2228      	movs	r2, #40	; 0x28
 8004d68:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004d6c:	f7fd fecc 	bl	8002b08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004d70:	4809      	ldr	r0, [pc, #36]	; (8004d98 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004d72:	f01b fe83 	bl	8020a7c <atexit>
 8004d76:	4628      	mov	r0, r5
 8004d78:	f01b fdbc 	bl	80208f4 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004d7c:	4805      	ldr	r0, [pc, #20]	; (8004d94 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004d7e:	b00d      	add	sp, #52	; 0x34
 8004d80:	bd30      	pop	{r4, r5, pc}
 8004d82:	bf00      	nop
 8004d84:	20004930 	.word	0x20004930
 8004d88:	08025fec 	.word	0x08025fec
 8004d8c:	08026074 	.word	0x08026074
 8004d90:	08025b28 	.word	0x08025b28
 8004d94:	20004934 	.word	0x20004934
 8004d98:	08004d25 	.word	0x08004d25

08004d9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004d9c:	4770      	bx	lr
	...

08004da0 <_Z23getFont_verdana_15_4bppv>:
{
 8004da0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004da2:	4d16      	ldr	r5, [pc, #88]	; (8004dfc <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004da4:	782c      	ldrb	r4, [r5, #0]
 8004da6:	f3bf 8f5b 	dmb	ish
 8004daa:	f014 0401 	ands.w	r4, r4, #1
{
 8004dae:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004db0:	d120      	bne.n	8004df4 <_Z23getFont_verdana_15_4bppv+0x54>
 8004db2:	4628      	mov	r0, r5
 8004db4:	f01b fd92 	bl	80208dc <__cxa_guard_acquire>
 8004db8:	b1e0      	cbz	r0, 8004df4 <_Z23getFont_verdana_15_4bppv+0x54>
 8004dba:	233f      	movs	r3, #63	; 0x3f
 8004dbc:	9307      	str	r3, [sp, #28]
 8004dbe:	4b10      	ldr	r3, [pc, #64]	; (8004e00 <_Z23getFont_verdana_15_4bppv+0x60>)
 8004dc0:	9306      	str	r3, [sp, #24]
 8004dc2:	4b10      	ldr	r3, [pc, #64]	; (8004e04 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004dc4:	9305      	str	r3, [sp, #20]
 8004dc6:	2301      	movs	r3, #1
 8004dc8:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004dcc:	9302      	str	r3, [sp, #8]
 8004dce:	2204      	movs	r2, #4
 8004dd0:	2303      	movs	r3, #3
 8004dd2:	e9cd 3200 	strd	r3, r2, [sp]
 8004dd6:	490c      	ldr	r1, [pc, #48]	; (8004e08 <_Z23getFont_verdana_15_4bppv+0x68>)
 8004dd8:	480c      	ldr	r0, [pc, #48]	; (8004e0c <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004dda:	9408      	str	r4, [sp, #32]
 8004ddc:	230f      	movs	r3, #15
 8004dde:	222a      	movs	r2, #42	; 0x2a
 8004de0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004de4:	f7fd fe90 	bl	8002b08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004de8:	4809      	ldr	r0, [pc, #36]	; (8004e10 <_Z23getFont_verdana_15_4bppv+0x70>)
 8004dea:	f01b fe47 	bl	8020a7c <atexit>
 8004dee:	4628      	mov	r0, r5
 8004df0:	f01b fd80 	bl	80208f4 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004df4:	4805      	ldr	r0, [pc, #20]	; (8004e0c <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004df6:	b00d      	add	sp, #52	; 0x34
 8004df8:	bd30      	pop	{r4, r5, pc}
 8004dfa:	bf00      	nop
 8004dfc:	2000495c 	.word	0x2000495c
 8004e00:	08026008 	.word	0x08026008
 8004e04:	08026078 	.word	0x08026078
 8004e08:	08025d58 	.word	0x08025d58
 8004e0c:	20004960 	.word	0x20004960
 8004e10:	08004d9d 	.word	0x08004d9d

08004e14 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004e14:	4770      	bx	lr
	...

08004e18 <_Z23getFont_verdana_40_4bppv>:
{
 8004e18:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004e1a:	4d15      	ldr	r5, [pc, #84]	; (8004e70 <_Z23getFont_verdana_40_4bppv+0x58>)
 8004e1c:	782c      	ldrb	r4, [r5, #0]
 8004e1e:	f3bf 8f5b 	dmb	ish
 8004e22:	f014 0401 	ands.w	r4, r4, #1
{
 8004e26:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004e28:	d11f      	bne.n	8004e6a <_Z23getFont_verdana_40_4bppv+0x52>
 8004e2a:	4628      	mov	r0, r5
 8004e2c:	f01b fd56 	bl	80208dc <__cxa_guard_acquire>
 8004e30:	b1d8      	cbz	r0, 8004e6a <_Z23getFont_verdana_40_4bppv+0x52>
 8004e32:	233f      	movs	r3, #63	; 0x3f
 8004e34:	9307      	str	r3, [sp, #28]
 8004e36:	4b0f      	ldr	r3, [pc, #60]	; (8004e74 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004e38:	9306      	str	r3, [sp, #24]
 8004e3a:	4b0f      	ldr	r3, [pc, #60]	; (8004e78 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004e3c:	490f      	ldr	r1, [pc, #60]	; (8004e7c <_Z23getFont_verdana_40_4bppv+0x64>)
 8004e3e:	4810      	ldr	r0, [pc, #64]	; (8004e80 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004e40:	9408      	str	r4, [sp, #32]
 8004e42:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004e46:	2204      	movs	r2, #4
 8004e48:	2301      	movs	r3, #1
 8004e4a:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004e4e:	9300      	str	r3, [sp, #0]
 8004e50:	2205      	movs	r2, #5
 8004e52:	2328      	movs	r3, #40	; 0x28
 8004e54:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004e58:	9403      	str	r4, [sp, #12]
 8004e5a:	f7fd fe55 	bl	8002b08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004e5e:	4809      	ldr	r0, [pc, #36]	; (8004e84 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004e60:	f01b fe0c 	bl	8020a7c <atexit>
 8004e64:	4628      	mov	r0, r5
 8004e66:	f01b fd45 	bl	80208f4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004e6a:	4805      	ldr	r0, [pc, #20]	; (8004e80 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004e6c:	b00d      	add	sp, #52	; 0x34
 8004e6e:	bd30      	pop	{r4, r5, pc}
 8004e70:	20004988 	.word	0x20004988
 8004e74:	08026060 	.word	0x08026060
 8004e78:	0802607c 	.word	0x0802607c
 8004e7c:	08025fa4 	.word	0x08025fa4
 8004e80:	2000498c 	.word	0x2000498c
 8004e84:	08004e15 	.word	0x08004e15

08004e88 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004e88:	2000      	movs	r0, #0
 8004e8a:	4770      	bx	lr

08004e8c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004e8c:	2000      	movs	r0, #0
 8004e8e:	4770      	bx	lr

08004e90 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004e90:	b40e      	push	{r1, r2, r3}
 8004e92:	b503      	push	{r0, r1, lr}
 8004e94:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004e96:	2100      	movs	r1, #0
{
 8004e98:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004e9c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004e9e:	f00d f875 	bl	8011f8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004ea2:	b002      	add	sp, #8
 8004ea4:	f85d eb04 	ldr.w	lr, [sp], #4
 8004ea8:	b003      	add	sp, #12
 8004eaa:	4770      	bx	lr

08004eac <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004eac:	b40c      	push	{r2, r3}
 8004eae:	b507      	push	{r0, r1, r2, lr}
 8004eb0:	ab04      	add	r3, sp, #16
 8004eb2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004eb6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004eb8:	f00d f868 	bl	8011f8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004ebc:	b003      	add	sp, #12
 8004ebe:	f85d eb04 	ldr.w	lr, [sp], #4
 8004ec2:	b002      	add	sp, #8
 8004ec4:	4770      	bx	lr
	...

08004ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004ec8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004eca:	b510      	push	{r4, lr}
 8004ecc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004ece:	b373      	cbz	r3, 8004f2e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004ed0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004ed2:	b92b      	cbnz	r3, 8004ee0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004ed4:	4b18      	ldr	r3, [pc, #96]	; (8004f38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004ed6:	4a19      	ldr	r2, [pc, #100]	; (8004f3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004ed8:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004eda:	4819      	ldr	r0, [pc, #100]	; (8004f40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004edc:	f01b fdb0 	bl	8020a40 <__assert_func>
            return buffer[pos];
 8004ee0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004ee2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004ee6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004ee8:	b30b      	cbz	r3, 8004f2e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004eea:	f00e fbe8 	bl	80136be <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004eee:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004ef0:	2b01      	cmp	r3, #1
 8004ef2:	d803      	bhi.n	8004efc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004ef4:	4b13      	ldr	r3, [pc, #76]	; (8004f44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004ef6:	4a14      	ldr	r2, [pc, #80]	; (8004f48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004ef8:	21c5      	movs	r1, #197	; 0xc5
 8004efa:	e7ee      	b.n	8004eda <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004efc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004efe:	1c53      	adds	r3, r2, #1
 8004f00:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004f02:	2b09      	cmp	r3, #9
 8004f04:	4619      	mov	r1, r3
 8004f06:	bf88      	it	hi
 8004f08:	f1a3 010a 	subhi.w	r1, r3, #10
 8004f0c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004f10:	f640 103f 	movw	r0, #2367	; 0x93f
 8004f14:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004f16:	4281      	cmp	r1, r0
 8004f18:	d109      	bne.n	8004f2e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004f1a:	2b0a      	cmp	r3, #10
 8004f1c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004f20:	bf28      	it	cs
 8004f22:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004f24:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004f28:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004f2a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004f2c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004f2e:	4620      	mov	r0, r4
}
 8004f30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004f34:	f00e bac6 	b.w	80134c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004f38:	08023534 	.word	0x08023534
 8004f3c:	0802353d 	.word	0x0802353d
 8004f40:	080235e8 	.word	0x080235e8
 8004f44:	08023632 	.word	0x08023632
 8004f48:	08023640 	.word	0x08023640

08004f4c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004f4c:	f00e ba81 	b.w	8013452 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004f50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004f50:	b510      	push	{r4, lr}
 8004f52:	b086      	sub	sp, #24
 8004f54:	ac02      	add	r4, sp, #8
 8004f56:	e884 0006 	stmia.w	r4, {r1, r2}
 8004f5a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004f5c:	ab0a      	add	r3, sp, #40	; 0x28
 8004f5e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004f60:	9301      	str	r3, [sp, #4]
 8004f62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004f64:	9300      	str	r3, [sp, #0]
 8004f66:	4621      	mov	r1, r4
 8004f68:	9b08      	ldr	r3, [sp, #32]
 8004f6a:	f00b fd14 	bl	8010996 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004f6e:	b006      	add	sp, #24
 8004f70:	bd10      	pop	{r4, pc}
	...

08004f74 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004f74:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004f76:	bb18      	cbnz	r0, 8004fc0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004f78:	4b12      	ldr	r3, [pc, #72]	; (8004fc4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004f7a:	4813      	ldr	r0, [pc, #76]	; (8004fc8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	4913      	ldr	r1, [pc, #76]	; (8004fcc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004f80:	b1b3      	cbz	r3, 8004fb0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004f82:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004f84:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004f86:	441a      	add	r2, r3
 8004f88:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004f8a:	685a      	ldr	r2, [r3, #4]
 8004f8c:	441a      	add	r2, r3
 8004f8e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004f90:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004f92:	4b0f      	ldr	r3, [pc, #60]	; (8004fd0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004f94:	2200      	movs	r2, #0
 8004f96:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004f98:	f000 f838 	bl	800500c <_ZN17TypedTextDatabase8getFontsEv>
 8004f9c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004f9e:	f000 f833 	bl	8005008 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004fa2:	4b0c      	ldr	r3, [pc, #48]	; (8004fd4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004fa4:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004fa6:	4b0c      	ldr	r3, [pc, #48]	; (8004fd8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004fa8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004faa:	4b0c      	ldr	r3, [pc, #48]	; (8004fdc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004fac:	8018      	strh	r0, [r3, #0]
    }
}
 8004fae:	e007      	b.n	8004fc0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004fb0:	4b0b      	ldr	r3, [pc, #44]	; (8004fe0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004fb2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004fb4:	4b0b      	ldr	r3, [pc, #44]	; (8004fe4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004fb6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004fb8:	4b0b      	ldr	r3, [pc, #44]	; (8004fe8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004fba:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004fbc:	2c00      	cmp	r4, #0
 8004fbe:	d1e8      	bne.n	8004f92 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004fc0:	bd38      	pop	{r3, r4, r5, pc}
 8004fc2:	bf00      	nop
 8004fc4:	200049b4 	.word	0x200049b4
 8004fc8:	200049b8 	.word	0x200049b8
 8004fcc:	200049bc 	.word	0x200049bc
 8004fd0:	200049c0 	.word	0x200049c0
 8004fd4:	2001584c 	.word	0x2001584c
 8004fd8:	20015854 	.word	0x20015854
 8004fdc:	20015850 	.word	0x20015850
 8004fe0:	080260d4 	.word	0x080260d4
 8004fe4:	08026080 	.word	0x08026080
 8004fe8:	080262a0 	.word	0x080262a0

08004fec <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004fec:	4b04      	ldr	r3, [pc, #16]	; (8005000 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004ff4:	4b03      	ldr	r3, [pc, #12]	; (8005004 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004ff6:	681b      	ldr	r3, [r3, #0]
}
 8004ff8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004ffc:	4770      	bx	lr
 8004ffe:	bf00      	nop
 8005000:	200049bc 	.word	0x200049bc
 8005004:	200049b8 	.word	0x200049b8

08005008 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8005008:	2015      	movs	r0, #21
 800500a:	4770      	bx	lr

0800500c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800500c:	4800      	ldr	r0, [pc, #0]	; (8005010 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800500e:	4770      	bx	lr
 8005010:	200049c4 	.word	0x200049c4

08005014 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8005014:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8005016:	f7ff fec3 	bl	8004da0 <_Z23getFont_verdana_15_4bppv>
};
 800501a:	4c04      	ldr	r4, [pc, #16]	; (800502c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 800501c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800501e:	f7ff fefb 	bl	8004e18 <_Z23getFont_verdana_40_4bppv>
};
 8005022:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8005024:	f7ff fe80 	bl	8004d28 <_Z23getFont_verdana_10_4bppv>
};
 8005028:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800502a:	bd10      	pop	{r4, pc}
 800502c:	200049c4 	.word	0x200049c4

08005030 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8005030:	4770      	bx	lr

08005032 <_ZN19FrontendApplicationD0Ev>:
 8005032:	b510      	push	{r4, lr}
 8005034:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8005038:	4604      	mov	r4, r0
 800503a:	f01b fc4d 	bl	80208d8 <_ZdlPvj>
 800503e:	4620      	mov	r0, r4
 8005040:	bd10      	pop	{r4, pc}

08005042 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8005042:	b510      	push	{r4, lr}
 8005044:	4604      	mov	r4, r0
    {
        model.tick();
 8005046:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800504a:	f000 f813 	bl	8005074 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800504e:	4620      	mov	r0, r4
    }
 8005050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8005054:	f00c b818 	b.w	8011088 <_ZN8touchgfx11Application15handleTickEventEv>

08005058 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8005058:	b510      	push	{r4, lr}
 800505a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800505c:	f7fd fcd6 	bl	8002a0c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8005060:	4b01      	ldr	r3, [pc, #4]	; (8005068 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8005062:	6023      	str	r3, [r4, #0]
{

}
 8005064:	4620      	mov	r0, r4
 8005066:	bd10      	pop	{r4, pc}
 8005068:	0802371c 	.word	0x0802371c

0800506c <_ZN5ModelC1Ev>:
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
int ModalWindowShown=0;	//modal window not shown yet
Model::Model() : modelListener(0)
 800506c:	2200      	movs	r2, #0
 800506e:	6002      	str	r2, [r0, #0]
{

}
 8005070:	4770      	bx	lr
	...

08005074 <_ZN5Model4tickEv>:

void Model::tick()
{
 8005074:	b570      	push	{r4, r5, r6, lr}
 8005076:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8005078:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.PlotPointOnSecGraph){
 800507a:	4d1d      	ldr	r5, [pc, #116]	; (80050f0 <_ZN5Model4tickEv+0x7c>)
modelListener->UpdateBatteryVoltage();
 800507c:	6803      	ldr	r3, [r0, #0]
 800507e:	689b      	ldr	r3, [r3, #8]
 8005080:	4798      	blx	r3
if(ladowarka.PlotPointOnSecGraph){
 8005082:	f8d5 3c54 	ldr.w	r3, [r5, #3156]	; 0xc54
 8005086:	b173      	cbz	r3, 80050a6 <_ZN5Model4tickEv+0x32>
	if (ladowarka.ChargingTimeInSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8005088:	f8d5 3c5c 	ldr.w	r3, [r5, #3164]	; 0xc5c
 800508c:	2b01      	cmp	r3, #1
 800508e:	d103      	bne.n	8005098 <_ZN5Model4tickEv+0x24>
 8005090:	6820      	ldr	r0, [r4, #0]
 8005092:	6803      	ldr	r3, [r0, #0]
 8005094:	68db      	ldr	r3, [r3, #12]
 8005096:	4798      	blx	r3
	modelListener->DrawPoint();
 8005098:	6820      	ldr	r0, [r4, #0]
 800509a:	6803      	ldr	r3, [r0, #0]
 800509c:	68db      	ldr	r3, [r3, #12]
 800509e:	4798      	blx	r3
	ladowarka.PlotPointOnSecGraph=0;
 80050a0:	2300      	movs	r3, #0
 80050a2:	f8c5 3c54 	str.w	r3, [r5, #3156]	; 0xc54
}

if (ladowarka.PlotPointOnMinutesGraph){
 80050a6:	f8d5 3c58 	ldr.w	r3, [r5, #3160]	; 0xc58
 80050aa:	b133      	cbz	r3, 80050ba <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 80050ac:	6820      	ldr	r0, [r4, #0]
 80050ae:	6803      	ldr	r3, [r0, #0]
 80050b0:	691b      	ldr	r3, [r3, #16]
 80050b2:	4798      	blx	r3
	ladowarka.PlotPointOnMinutesGraph=0;
 80050b4:	2300      	movs	r3, #0
 80050b6:	f8c5 3c58 	str.w	r3, [r5, #3160]	; 0xc58

}


if(ladowarka.ChargingCompleted==1 && ModalWindowShown==0){
 80050ba:	f8d5 6c64 	ldr.w	r6, [r5, #3172]	; 0xc64
 80050be:	2e01      	cmp	r6, #1
 80050c0:	d107      	bne.n	80050d2 <_ZN5Model4tickEv+0x5e>
 80050c2:	4d0c      	ldr	r5, [pc, #48]	; (80050f4 <_ZN5Model4tickEv+0x80>)
 80050c4:	682b      	ldr	r3, [r5, #0]
 80050c6:	b923      	cbnz	r3, 80050d2 <_ZN5Model4tickEv+0x5e>
	modelListener->DisplayChargingFinished();
 80050c8:	6820      	ldr	r0, [r4, #0]
 80050ca:	6803      	ldr	r3, [r0, #0]
 80050cc:	6a1b      	ldr	r3, [r3, #32]
 80050ce:	4798      	blx	r3
	ModalWindowShown=1;
 80050d0:	602e      	str	r6, [r5, #0]

}
#endif

/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 80050d2:	6820      	ldr	r0, [r4, #0]
 80050d4:	6803      	ldr	r3, [r0, #0]
 80050d6:	695b      	ldr	r3, [r3, #20]
 80050d8:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 80050da:	6820      	ldr	r0, [r4, #0]
 80050dc:	6803      	ldr	r3, [r0, #0]
 80050de:	699b      	ldr	r3, [r3, #24]
 80050e0:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 80050e2:	6820      	ldr	r0, [r4, #0]
 80050e4:	6803      	ldr	r3, [r0, #0]
}
 80050e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 80050ea:	69db      	ldr	r3, [r3, #28]
 80050ec:	4718      	bx	r3
 80050ee:	bf00      	nop
 80050f0:	20003c5c 	.word	0x20003c5c
 80050f4:	200049d0 	.word	0x200049d0

080050f8 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 80050f8:	4770      	bx	lr

080050fa <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 80050fa:	4770      	bx	lr

080050fc <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 80050fc:	4770      	bx	lr

080050fe <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 80050fe:	4770      	bx	lr

08005100 <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8005100:	4770      	bx	lr

08005102 <_ZN13ModelListener23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished() {};
 8005102:	4770      	bx	lr

08005104 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8005104:	4770      	bx	lr

08005106 <_ZThn4_N16Screen1PresenterD1Ev>:
 8005106:	3804      	subs	r0, #4
 8005108:	4770      	bx	lr

0800510a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 800510a:	4770      	bx	lr

0800510c <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 800510c:	68c0      	ldr	r0, [r0, #12]
 800510e:	6803      	ldr	r3, [r0, #0]
 8005110:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005112:	4718      	bx	r3

08005114 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8005114:	f1a0 0004 	sub.w	r0, r0, #4
 8005118:	f7ff bff8 	b.w	800510c <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

0800511c <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 800511c:	b510      	push	{r4, lr}
 800511e:	2110      	movs	r1, #16
 8005120:	4604      	mov	r4, r0
 8005122:	f01b fbd9 	bl	80208d8 <_ZdlPvj>
 8005126:	4620      	mov	r0, r4
 8005128:	bd10      	pop	{r4, pc}

0800512a <_ZThn4_N16Screen1PresenterD0Ev>:
 800512a:	f1a0 0004 	sub.w	r0, r0, #4
 800512e:	e7f5      	b.n	800511c <_ZN16Screen1PresenterD0Ev>

08005130 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8005130:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8005132:	2200      	movs	r2, #0
 8005134:	6082      	str	r2, [r0, #8]
    : view(v)
 8005136:	4a04      	ldr	r2, [pc, #16]	; (8005148 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8005138:	60c1      	str	r1, [r0, #12]
 800513a:	f102 0408 	add.w	r4, r2, #8
 800513e:	3224      	adds	r2, #36	; 0x24
 8005140:	6004      	str	r4, [r0, #0]
 8005142:	6042      	str	r2, [r0, #4]
}
 8005144:	bd10      	pop	{r4, pc}
 8005146:	bf00      	nop
 8005148:	08023760 	.word	0x08023760

0800514c <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800514c:	4770      	bx	lr

0800514e <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800514e:	4770      	bx	lr

08005150 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8005150:	4b04      	ldr	r3, [pc, #16]	; (8005164 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8005152:	681a      	ldr	r2, [r3, #0]
 8005154:	4b04      	ldr	r3, [pc, #16]	; (8005168 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8005156:	60da      	str	r2, [r3, #12]
 ladowarka.ChargeStarted=1;
 8005158:	2201      	movs	r2, #1
 800515a:	615a      	str	r2, [r3, #20]
 ladowarka.ChargingTime=ChargingTime;
 800515c:	4a03      	ldr	r2, [pc, #12]	; (800516c <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 800515e:	6812      	ldr	r2, [r2, #0]
 8005160:	611a      	str	r2, [r3, #16]
#endif
}
 8005162:	4770      	bx	lr
 8005164:	20000018 	.word	0x20000018
 8005168:	20003c5c 	.word	0x20003c5c
 800516c:	20000014 	.word	0x20000014

08005170 <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+100;
 8005170:	4b0b      	ldr	r3, [pc, #44]	; (80051a0 <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8005172:	681a      	ldr	r2, [r3, #0]
{
 8005174:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+100;
 8005176:	3264      	adds	r2, #100	; 0x64
	if (PradLadowania >400){
 8005178:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 800517c:	bfc8      	it	gt
 800517e:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8005182:	601a      	str	r2, [r3, #0]
{
 8005184:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005186:	681b      	ldr	r3, [r3, #0]
 8005188:	4a06      	ldr	r2, [pc, #24]	; (80051a4 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 800518a:	210a      	movs	r1, #10
 800518c:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8005190:	f00f f844 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8005194:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8005198:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 800519c:	f00d b817 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 80051a0:	20000018 	.word	0x20000018
 80051a4:	080237a8 	.word	0x080237a8

080051a8 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-100;
 80051a8:	4b0a      	ldr	r3, [pc, #40]	; (80051d4 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 80051aa:	681a      	ldr	r2, [r3, #0]
{
 80051ac:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-100;
 80051ae:	3a64      	subs	r2, #100	; 0x64
    if (PradLadowania <100){
 80051b0:	2a63      	cmp	r2, #99	; 0x63
	PradLadowania=100;}
 80051b2:	bfd8      	it	le
 80051b4:	2264      	movle	r2, #100	; 0x64
 80051b6:	601a      	str	r2, [r3, #0]
{
 80051b8:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 80051ba:	681b      	ldr	r3, [r3, #0]
 80051bc:	4a06      	ldr	r2, [pc, #24]	; (80051d8 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 80051be:	210a      	movs	r1, #10
 80051c0:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 80051c4:	f00f f82a 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80051c8:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 80051cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 80051d0:	f00c bffd 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 80051d4:	20000018 	.word	0x20000018
 80051d8:	080237a8 	.word	0x080237a8

080051dc <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 80051dc:	4b0a      	ldr	r3, [pc, #40]	; (8005208 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 80051de:	681a      	ldr	r2, [r3, #0]
{
 80051e0:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 80051e2:	3201      	adds	r2, #1
	if (ChargingTime >MaxChargingTime){
 80051e4:	2a0c      	cmp	r2, #12
		ChargingTime=MaxChargingTime;}
 80051e6:	bfc8      	it	gt
 80051e8:	220c      	movgt	r2, #12
 80051ea:	601a      	str	r2, [r3, #0]
{
 80051ec:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	4a06      	ldr	r2, [pc, #24]	; (800520c <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 80051f2:	2103      	movs	r1, #3
 80051f4:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 80051f8:	f00f f810 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 80051fc:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005200:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005204:	f00c bfe3 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 8005208:	20000014 	.word	0x20000014
 800520c:	080237a8 	.word	0x080237a8

08005210 <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 8005210:	4b0a      	ldr	r3, [pc, #40]	; (800523c <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 8005212:	681a      	ldr	r2, [r3, #0]
{
 8005214:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 8005216:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 8005218:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 800521a:	bfd8      	it	le
 800521c:	2201      	movle	r2, #1
 800521e:	601a      	str	r2, [r3, #0]
{
 8005220:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8005222:	681b      	ldr	r3, [r3, #0]
 8005224:	4a06      	ldr	r2, [pc, #24]	; (8005240 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 8005226:	2103      	movs	r1, #3
 8005228:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 800522c:	f00e fff6 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8005230:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005234:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005238:	f00c bfc9 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800523c:	20000014 	.word	0x20000014
 8005240:	080237a8 	.word	0x080237a8

08005244 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8005244:	f7fd bcd5 	b.w	8002bf2 <_ZN15Screen1ViewBase11setupScreenEv>

08005248 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8005248:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 800524a:	4b09      	ldr	r3, [pc, #36]	; (8005270 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800524c:	4a09      	ldr	r2, [pc, #36]	; (8005274 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8005252:	4604      	mov	r4, r0
 8005254:	ab01      	add	r3, sp, #4
 8005256:	210a      	movs	r1, #10
 8005258:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 800525c:	f00f f99a 	bl	8014594 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8005260:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8005264:	b002      	add	sp, #8
 8005266:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 800526a:	f00c bfb0 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800526e:	bf00      	nop
 8005270:	20003c5c 	.word	0x20003c5c
 8005274:	080237ab 	.word	0x080237ab

08005278 <_ZN11Screen1ViewD0Ev>:
 8005278:	b510      	push	{r4, lr}
 800527a:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 800527e:	4604      	mov	r4, r0
 8005280:	f01b fb2a 	bl	80208d8 <_ZdlPvj>
 8005284:	4620      	mov	r0, r4
 8005286:	bd10      	pop	{r4, pc}

08005288 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8005288:	b510      	push	{r4, lr}
 800528a:	4604      	mov	r4, r0
 800528c:	f7fd ff38 	bl	8003100 <_ZN15Screen1ViewBaseC1Ev>
 8005290:	4b07      	ldr	r3, [pc, #28]	; (80052b0 <_ZN11Screen1ViewC1Ev+0x28>)
 8005292:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005294:	4b07      	ldr	r3, [pc, #28]	; (80052b4 <_ZN11Screen1ViewC1Ev+0x2c>)
 8005296:	4a08      	ldr	r2, [pc, #32]	; (80052b8 <_ZN11Screen1ViewC1Ev+0x30>)
 8005298:	681b      	ldr	r3, [r3, #0]
 800529a:	210a      	movs	r1, #10
 800529c:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80052a0:	f00e ffbc 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80052a4:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 80052a8:	f00c ff91 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80052ac:	4620      	mov	r0, r4
 80052ae:	bd10      	pop	{r4, pc}
 80052b0:	080237b8 	.word	0x080237b8
 80052b4:	20000018 	.word	0x20000018
 80052b8:	080237a8 	.word	0x080237a8

080052bc <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 80052bc:	4770      	bx	lr

080052be <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 80052be:	4770      	bx	lr

080052c0 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 80052c0:	3804      	subs	r0, #4
 80052c2:	4770      	bx	lr

080052c4 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 80052c4:	4770      	bx	lr

080052c6 <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 80052c6:	68c0      	ldr	r0, [r0, #12]
 80052c8:	6803      	ldr	r3, [r0, #0]
 80052ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80052cc:	4718      	bx	r3

080052ce <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 80052ce:	f1a0 0004 	sub.w	r0, r0, #4
 80052d2:	f7ff bff8 	b.w	80052c6 <_ZN20ScreenGraphPresenter9DrawPointEv>

080052d6 <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 80052d6:	68c0      	ldr	r0, [r0, #12]
 80052d8:	6803      	ldr	r3, [r0, #0]
 80052da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80052dc:	4718      	bx	r3

080052de <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 80052de:	f1a0 0004 	sub.w	r0, r0, #4
 80052e2:	f7ff bff8 	b.w	80052d6 <_ZN20ScreenGraphPresenter12DrawPointMinEv>

080052e6 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 80052e6:	68c0      	ldr	r0, [r0, #12]
 80052e8:	6803      	ldr	r3, [r0, #0]
 80052ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80052ec:	4718      	bx	r3

080052ee <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 80052ee:	f1a0 0004 	sub.w	r0, r0, #4
 80052f2:	f7ff bff8 	b.w	80052e6 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

080052f6 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 80052f6:	68c0      	ldr	r0, [r0, #12]
 80052f8:	6803      	ldr	r3, [r0, #0]
 80052fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052fc:	4718      	bx	r3

080052fe <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 80052fe:	f1a0 0004 	sub.w	r0, r0, #4
 8005302:	f7ff bff8 	b.w	80052f6 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

08005306 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 8005306:	68c0      	ldr	r0, [r0, #12]
 8005308:	6803      	ldr	r3, [r0, #0]
 800530a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800530c:	4718      	bx	r3

0800530e <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 800530e:	f1a0 0004 	sub.w	r0, r0, #4
 8005312:	f7ff bff8 	b.w	8005306 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

08005316 <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>:
}
void ScreenGraphPresenter::DisplayChargingFinished()
{
	view.DisplayChargingFinished2();
 8005316:	68c0      	ldr	r0, [r0, #12]
 8005318:	6803      	ldr	r3, [r0, #0]
 800531a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800531c:	4718      	bx	r3

0800531e <_ZThn4_N20ScreenGraphPresenter23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished();
 800531e:	f1a0 0004 	sub.w	r0, r0, #4
 8005322:	f7ff bff8 	b.w	8005316 <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>

08005326 <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 8005326:	b510      	push	{r4, lr}
 8005328:	2110      	movs	r1, #16
 800532a:	4604      	mov	r4, r0
 800532c:	f01b fad4 	bl	80208d8 <_ZdlPvj>
 8005330:	4620      	mov	r0, r4
 8005332:	bd10      	pop	{r4, pc}

08005334 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8005334:	f1a0 0004 	sub.w	r0, r0, #4
 8005338:	e7f5      	b.n	8005326 <_ZN20ScreenGraphPresenterD0Ev>
	...

0800533c <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 800533c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800533e:	2200      	movs	r2, #0
 8005340:	6082      	str	r2, [r0, #8]
    : view(v)
 8005342:	4a04      	ldr	r2, [pc, #16]	; (8005354 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8005344:	60c1      	str	r1, [r0, #12]
 8005346:	f102 0408 	add.w	r4, r2, #8
 800534a:	3238      	adds	r2, #56	; 0x38
 800534c:	6004      	str	r4, [r0, #0]
 800534e:	6042      	str	r2, [r0, #4]
}
 8005350:	bd10      	pop	{r4, pc}
 8005352:	bf00      	nop
 8005354:	080237fc 	.word	0x080237fc

08005358 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8005358:	4770      	bx	lr

0800535a <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 800535a:	4770      	bx	lr

0800535c <_ZN15ScreenGraphView24DisplayChargingFinished2Ev>:
 800535c:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8005360:	2201      	movs	r2, #1
#endif
}

void ScreenGraphView::DisplayChargingFinished2(){
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 8005362:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8005366:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 800536a:	3018      	adds	r0, #24
 800536c:	f00c bf2f 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>

08005370 <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 8005370:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.MeasurementsEverySec[0]; //domyslna wartocs
 8005372:	4915      	ldr	r1, [pc, #84]	; (80053c8 <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 8005374:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.MeasurementsEverySec[0]; //domyslna wartocs
 8005378:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 800537c:	2200      	movs	r2, #0
		if ((ladowarka.MeasurementsEverySec[i] < results) && ladowarka.MeasurementsEverySec[i]!=0)  results=ladowarka.MeasurementsEverySec[i];
 800537e:	f5a1 6136 	sub.w	r1, r1, #2912	; 0xb60
 8005382:	f502 7336 	add.w	r3, r2, #728	; 0x2d8
 8005386:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800538a:	edd3 7a00 	vldr	s15, [r3]
 800538e:	eef4 7ac0 	vcmpe.f32	s15, s0
 8005392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005396:	d508      	bpl.n	80053aa <_ZN15ScreenGraphView8countMinEv+0x3a>
 8005398:	edd3 7a00 	vldr	s15, [r3]
 800539c:	eef5 7a40 	vcmp.f32	s15, #0.0
 80053a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053a4:	bf18      	it	ne
 80053a6:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 80053aa:	3201      	adds	r2, #1
 80053ac:	2a3b      	cmp	r2, #59	; 0x3b
 80053ae:	d1e8      	bne.n	8005382 <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 80053b0:	ed9f 8a06 	vldr	s16, [pc, #24]	; 80053cc <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 80053b4:	ee20 0a08 	vmul.f32	s0, s0, s16
 80053b8:	f01b faf8 	bl	80209ac <floorf>
#else
	return 1.5;
#endif
}
 80053bc:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80053c0:	ecbd 8b02 	vpop	{d8}
 80053c4:	bd08      	pop	{r3, pc}
 80053c6:	bf00      	nop
 80053c8:	200047bc 	.word	0x200047bc
 80053cc:	42c80000 	.word	0x42c80000

080053d0 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 80053d0:	b508      	push	{r3, lr}
 80053d2:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 80053d6:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8005418 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.MeasurementsEverySec[i] > results)  results=ladowarka.MeasurementsEverySec[i];
 80053da:	4910      	ldr	r1, [pc, #64]	; (800541c <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 80053dc:	2300      	movs	r3, #0
		if (ladowarka.MeasurementsEverySec[i] > results)  results=ladowarka.MeasurementsEverySec[i];
 80053de:	f503 7236 	add.w	r2, r3, #728	; 0x2d8
 80053e2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80053e6:	edd2 7a00 	vldr	s15, [r2]
 80053ea:	eef4 7ac0 	vcmpe.f32	s15, s0
 80053ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 80053f2:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.MeasurementsEverySec[i] > results)  results=ladowarka.MeasurementsEverySec[i];
 80053f6:	bfc8      	it	gt
 80053f8:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 80053fc:	2b3b      	cmp	r3, #59	; 0x3b
 80053fe:	d1ee      	bne.n	80053de <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 8005400:	ed9f 8a07 	vldr	s16, [pc, #28]	; 8005420 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 8005404:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005408:	f01b fa8e 	bl	8020928 <ceilf>


#else
	return 1.5;
#endif
}
 800540c:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005410:	ecbd 8b02 	vpop	{d8}
 8005414:	bd08      	pop	{r3, pc}
 8005416:	bf00      	nop
 8005418:	00000000 	.word	0x00000000
 800541c:	20003c5c 	.word	0x20003c5c
 8005420:	42c80000 	.word	0x42c80000

08005424 <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.ChargingTimeInSec;
 8005424:	4b11      	ldr	r3, [pc, #68]	; (800546c <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 8005426:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.ChargingTimeInSec;
 8005428:	f8d3 2c5c 	ldr.w	r2, [r3, #3164]	; 0xc5c
	m = (sec -(3600*h))/60;
 800542c:	4910      	ldr	r1, [pc, #64]	; (8005470 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 800542e:	4604      	mov	r4, r0
	h = (sec/3600);
 8005430:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 8005434:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 8005438:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 800543c:	fb01 2203 	mla	r2, r1, r3, r2
 8005440:	213c      	movs	r1, #60	; 0x3c
 8005442:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 8005446:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 800544a:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 800544e:	e9cd 1200 	strd	r1, r2, [sp]
 8005452:	3010      	adds	r0, #16
 8005454:	4a07      	ldr	r2, [pc, #28]	; (8005474 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 8005456:	210a      	movs	r1, #10
 8005458:	f00e fee0 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 800545c:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
}
 8005460:	b002      	add	sp, #8
 8005462:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 8005466:	f00c beb2 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800546a:	bf00      	nop
 800546c:	20003c5c 	.word	0x20003c5c
 8005470:	fffff1f0 	.word	0xfffff1f0
 8005474:	08023858 	.word	0x08023858

08005478 <_ZN15ScreenGraphViewD0Ev>:
 8005478:	b510      	push	{r4, lr}
 800547a:	f242 713c 	movw	r1, #10044	; 0x273c
 800547e:	4604      	mov	r4, r0
 8005480:	f01b fa2a 	bl	80208d8 <_ZdlPvj>
 8005484:	4620      	mov	r0, r4
 8005486:	bd10      	pop	{r4, pc}

08005488 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8005488:	b510      	push	{r4, lr}
 800548a:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 800548c:	f7fe fd67 	bl	8003f5e <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8005490:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 8005494:	edd2 7a43 	vldr	s15, [r2, #268]	; 0x10c
 8005498:	ed9f 6a90 	vldr	s12, [pc, #576]	; 80056dc <_ZN15ScreenGraphView11setupScreenEv+0x254>
 800549c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80054a0:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 80054a4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80054a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054ac:	f2c0 809e 	blt.w	80055ec <_ZN15ScreenGraphView11setupScreenEv+0x164>
            return (int)(fs + 0.5f);
 80054b0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80054b4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80054b8:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80054bc:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80054c0:	edd2 7a33 	vldr	s15, [r2, #204]	; 0xcc
 80054c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 80054c8:	2b00      	cmp	r3, #0
 80054ca:	ee67 7a86 	vmul.f32	s15, s15, s12
 80054ce:	bfb8      	it	lt
 80054d0:	425b      	neglt	r3, r3
        if (fs >= 0)
 80054d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 80054da:	f8c2 3110 	str.w	r3, [r2, #272]	; 0x110
 80054de:	f2c0 8099 	blt.w	8005614 <_ZN15ScreenGraphView11setupScreenEv+0x18c>
            return (int)(fs + 0.5f);
 80054e2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80054e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80054ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054ee:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80054f2:	edd2 7a13 	vldr	s15, [r2, #76]	; 0x4c
 80054f6:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 80056e0 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 80054fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80054fe:	2b00      	cmp	r3, #0
 8005500:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005504:	bfb8      	it	lt
 8005506:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005508:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800550c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8005510:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
 8005514:	f2c0 8092 	blt.w	800563c <_ZN15ScreenGraphView11setupScreenEv+0x1b4>
            return (int)(fs + 0.5f);
 8005518:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800551c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005520:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005524:	ee17 3a90 	vmov	r3, s15
 8005528:	2b00      	cmp	r3, #0
 800552a:	bfb8      	it	lt
 800552c:	425b      	neglt	r3, r3
 800552e:	6513      	str	r3, [r2, #80]	; 0x50
        const float fs = f * (float)scale;
 8005530:	f8d4 3d3c 	ldr.w	r3, [r4, #3388]	; 0xd3c
 8005534:	ed9f 6a6b 	vldr	s12, [pc, #428]	; 80056e4 <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 8005538:	ee07 3a90 	vmov	s15, r3
 800553c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005540:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005544:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005548:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800554c:	f2c0 808a 	blt.w	8005664 <_ZN15ScreenGraphView11setupScreenEv+0x1dc>
            return (int)(fs + 0.5f);
 8005550:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005554:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005558:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 800555c:	ee17 3a90 	vmov	r3, s15
 8005560:	2b00      	cmp	r3, #0
 8005562:	bfb8      	it	lt
 8005564:	425b      	neglt	r3, r3
 8005566:	f8c4 3d40 	str.w	r3, [r4, #3392]	; 0xd40
        const float fs = f * (float)scale;
 800556a:	f8d4 3cb0 	ldr.w	r3, [r4, #3248]	; 0xcb0
 800556e:	ee07 3a90 	vmov	s15, r3
 8005572:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005576:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 800557a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800557e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005582:	f2c0 8083 	blt.w	800568c <_ZN15ScreenGraphView11setupScreenEv+0x204>
            return (int)(fs + 0.5f);
 8005586:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800558a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800558e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005592:	ee17 3a90 	vmov	r3, s15
 8005596:	2b00      	cmp	r3, #0
 8005598:	bfb8      	it	lt
 800559a:	425b      	neglt	r3, r3
 800559c:	f8c4 3cb4 	str.w	r3, [r4, #3252]	; 0xcb4
        const float fs = f * (float)scale;
 80055a0:	f8d4 3c30 	ldr.w	r3, [r4, #3120]	; 0xc30
 80055a4:	ed9f 7a50 	vldr	s14, [pc, #320]	; 80056e8 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 80055a8:	ee07 3a90 	vmov	s15, r3
 80055ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055b0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80055b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80055bc:	db7a      	blt.n	80056b4 <_ZN15ScreenGraphView11setupScreenEv+0x22c>
            return (int)(fs + 0.5f);
 80055be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80055c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80055c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055ca:	ee17 3a90 	vmov	r3, s15
 80055ce:	2b00      	cmp	r3, #0
 80055d0:	bfb8      	it	lt
 80055d2:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 80055d4:	f604 5058 	addw	r0, r4, #3416	; 0xd58
 80055d8:	f8c4 3c34 	str.w	r3, [r4, #3124]	; 0xc34
 80055dc:	f00c fdf7 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 80055e0:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 80055e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 80055e8:	f00c bdf1 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80055ec:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80055f0:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80055f4:	ee16 3a90 	vmov	r3, s13
 80055f8:	ee37 7a67 	vsub.f32	s14, s14, s15
 80055fc:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005600:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005604:	3b01      	subs	r3, #1
 8005606:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800560a:	ee17 1a10 	vmov	r1, s14
 800560e:	4419      	add	r1, r3
 8005610:	460b      	mov	r3, r1
 8005612:	e755      	b.n	80054c0 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 8005614:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005618:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800561c:	ee17 3a10 	vmov	r3, s14
 8005620:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005624:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005628:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800562c:	3b01      	subs	r3, #1
 800562e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005632:	ee17 1a90 	vmov	r1, s15
 8005636:	4419      	add	r1, r3
 8005638:	460b      	mov	r3, r1
 800563a:	e75a      	b.n	80054f2 <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 800563c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005640:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005644:	ee17 3a10 	vmov	r3, s14
 8005648:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800564c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005650:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005654:	3b01      	subs	r3, #1
 8005656:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800565a:	ee17 1a90 	vmov	r1, s15
 800565e:	4419      	add	r1, r3
 8005660:	460b      	mov	r3, r1
 8005662:	e761      	b.n	8005528 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 8005664:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005668:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 800566c:	ee16 3a90 	vmov	r3, s13
 8005670:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005674:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005678:	ee37 7a27 	vadd.f32	s14, s14, s15
 800567c:	3b01      	subs	r3, #1
 800567e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8005682:	ee17 2a10 	vmov	r2, s14
 8005686:	441a      	add	r2, r3
 8005688:	4613      	mov	r3, r2
 800568a:	e769      	b.n	8005560 <_ZN15ScreenGraphView11setupScreenEv+0xd8>
 800568c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005690:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005694:	ee17 3a10 	vmov	r3, s14
 8005698:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800569c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80056a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80056a4:	3b01      	subs	r3, #1
 80056a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056aa:	ee17 2a90 	vmov	r2, s15
 80056ae:	441a      	add	r2, r3
 80056b0:	4613      	mov	r3, r2
 80056b2:	e770      	b.n	8005596 <_ZN15ScreenGraphView11setupScreenEv+0x10e>
 80056b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80056b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80056bc:	ee17 3a10 	vmov	r3, s14
 80056c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80056c4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80056c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80056cc:	3b01      	subs	r3, #1
 80056ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056d2:	ee17 2a90 	vmov	r2, s15
 80056d6:	441a      	add	r2, r3
 80056d8:	4613      	mov	r3, r2
 80056da:	e778      	b.n	80055ce <_ZN15ScreenGraphView11setupScreenEv+0x146>
 80056dc:	3c23d70a 	.word	0x3c23d70a
 80056e0:	3ba3d70a 	.word	0x3ba3d70a
 80056e4:	3dcccccd 	.word	0x3dcccccd
 80056e8:	3d4ccccd 	.word	0x3d4ccccd

080056ec <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 80056ec:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 80056ee:	4b0a      	ldr	r3, [pc, #40]	; (8005718 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 80056f0:	4a0a      	ldr	r2, [pc, #40]	; (800571c <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x30>)
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 80056f6:	4604      	mov	r4, r0
 80056f8:	2104      	movs	r1, #4
 80056fa:	f500 50a3 	add.w	r0, r0, #5216	; 0x1460
 80056fe:	ab01      	add	r3, sp, #4
 8005700:	4408      	add	r0, r1
 8005702:	f00e ff47 	bl	8014594 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 8005706:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 800570a:	300c      	adds	r0, #12
}
 800570c:	b002      	add	sp, #8
 800570e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 8005712:	f00c bd5c 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 8005716:	bf00      	nop
 8005718:	200048bc 	.word	0x200048bc
 800571c:	08023868 	.word	0x08023868

08005720 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005720:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8005722:	4d11      	ldr	r5, [pc, #68]	; (8005768 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 8005724:	4a11      	ldr	r2, [pc, #68]	; (800576c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8005726:	682b      	ldr	r3, [r5, #0]
 8005728:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 800572a:	4604      	mov	r4, r0
 800572c:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8005730:	ab01      	add	r3, sp, #4
 8005732:	2108      	movs	r1, #8
 8005734:	3010      	adds	r0, #16
 8005736:	f00e ff2d 	bl	8014594 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 800573a:	686b      	ldr	r3, [r5, #4]
 800573c:	4a0b      	ldr	r2, [pc, #44]	; (800576c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 800573e:	9301      	str	r3, [sp, #4]
 8005740:	2108      	movs	r1, #8
 8005742:	ab01      	add	r3, sp, #4
 8005744:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005748:	f00e ff24 	bl	8014594 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 800574c:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 8005750:	3014      	adds	r0, #20
 8005752:	f00c fd3c 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 8005756:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 800575a:	3008      	adds	r0, #8
}
 800575c:	b003      	add	sp, #12
 800575e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 8005762:	f00c bd34 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 8005766:	bf00      	nop
 8005768:	20003c5c 	.word	0x20003c5c
 800576c:	080237ab 	.word	0x080237ab

08005770 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005770:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8005772:	4b24      	ldr	r3, [pc, #144]	; (8005804 <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 8005774:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 8005778:	f8d0 3d8c 	ldr.w	r3, [r0, #3468]	; 0xd8c
 800577c:	ee07 3a90 	vmov	s15, r3
 8005780:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 8005784:	ed2d 8b02 	vpush	{d8}
 8005788:	ee67 7a87 	vmul.f32	s15, s15, s14
 800578c:	4604      	mov	r4, r0
        if (fs >= 0)
 800578e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8005796:	f600 5558 	addw	r5, r0, #3416	; 0xd58
 800579a:	db1e      	blt.n	80057da <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 800579c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80057a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80057a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057a8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80057ac:	4628      	mov	r0, r5
 80057ae:	f007 f931 	bl	800ca14 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 80057b2:	6823      	ldr	r3, [r4, #0]
 80057b4:	4620      	mov	r0, r4
 80057b6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80057b8:	4798      	blx	r3
 80057ba:	6823      	ldr	r3, [r4, #0]
 80057bc:	4620      	mov	r0, r4
 80057be:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80057c0:	eeb0 8a40 	vmov.f32	s16, s0
 80057c4:	4798      	blx	r3
 80057c6:	4628      	mov	r0, r5
 80057c8:	eef0 0a40 	vmov.f32	s1, s0
 80057cc:	eeb0 0a48 	vmov.f32	s0, s16
 80057d0:	f7fe f886 	bl	80038e0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 80057d4:	ecbd 8b02 	vpop	{d8}
 80057d8:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80057da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80057de:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80057e2:	ee17 3a10 	vmov	r3, s14
 80057e6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80057ea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80057ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80057f2:	1e59      	subs	r1, r3, #1
 80057f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057f8:	ee17 3a90 	vmov	r3, s15
 80057fc:	440b      	add	r3, r1
 80057fe:	4619      	mov	r1, r3
 8005800:	e7d4      	b.n	80057ac <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 8005802:	bf00      	nop
 8005804:	20003c5c 	.word	0x20003c5c

08005808 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
	dynamicGraph2.addDataPoint(ladowarka.AverageFromLastMin);
 8005808:	4b52      	ldr	r3, [pc, #328]	; (8005954 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x14c>)
        const float fs = f * (float)scale;
 800580a:	edd0 7a40 	vldr	s15, [r0, #256]	; 0x100
 800580e:	ed93 7a00 	vldr	s14, [r3]
 8005812:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2Min(){
 8005816:	b570      	push	{r4, r5, r6, lr}
 8005818:	ee67 7a87 	vmul.f32	s15, s15, s14
 800581c:	ed2d 8b02 	vpush	{d8}
        if (fs >= 0)
 8005820:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005828:	4604      	mov	r4, r0
	dynamicGraph2.addDataPoint(ladowarka.AverageFromLastMin);
 800582a:	f100 06cc 	add.w	r6, r0, #204	; 0xcc
 800582e:	db4e      	blt.n	80058ce <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc6>
            return (int)(fs + 0.5f);
 8005830:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005834:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005838:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800583c:	ee17 1a90 	vmov	r1, s15
	 dynamicGraph2.setGraphRangeY((floor(ladowarka.MinBatteryVotage*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10));
 8005840:	4d45      	ldr	r5, [pc, #276]	; (8005958 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x150>)
        return addDataPointScaled(float2scaledY(y));
 8005842:	4630      	mov	r0, r6
 8005844:	f007 f8e6 	bl	800ca14 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
 8005848:	ed95 0a02 	vldr	s0, [r5, #8]
 800584c:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 8005850:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005854:	f01b f8aa 	bl	80209ac <floorf>
 8005858:	eef0 8a40 	vmov.f32	s17, s0
 800585c:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 8005860:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005864:	f01b f860 	bl	8020928 <ceilf>
 8005868:	4630      	mov	r0, r6
 800586a:	eec0 0a08 	vdiv.f32	s1, s0, s16
 800586e:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005872:	f7fe f835 	bl	80038e0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.ChargingTimeInSec>9*60 && ladowarka.ChargingTimeInSec <59*60){ //jesli czas jest >9min i <59 min
 8005876:	f8d5 3c5c 	ldr.w	r3, [r5, #3164]	; 0xc5c
 800587a:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 800587e:	dd3a      	ble.n	80058f6 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xee>
 8005880:	f8d5 2c5c 	ldr.w	r2, [r5, #3164]	; 0xc5c
 8005884:	f640 53d3 	movw	r3, #3539	; 0xdd3
 8005888:	429a      	cmp	r2, r3
 800588a:	dc34      	bgt.n	80058f6 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xee>
		dynamicGraph2.setGraphRangeX(0,60);
 800588c:	223c      	movs	r2, #60	; 0x3c
 800588e:	2100      	movs	r1, #0
 8005890:	4630      	mov	r0, r6
 8005892:	f7fd ff8f 	bl	80037b4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 8005896:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
        return i * scale;
 800589a:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 800589e:	210a      	movs	r1, #10
 80058a0:	434a      	muls	r2, r1
 80058a2:	2a00      	cmp	r2, #0
 80058a4:	bfb8      	it	lt
 80058a6:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80058a8:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 80058ac:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 80058b0:	0052      	lsls	r2, r2, #1
 80058b2:	2a00      	cmp	r2, #0
 80058b4:	bfb8      	it	lt
 80058b6:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80058b8:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 80058bc:	434b      	muls	r3, r1
 80058be:	2b00      	cmp	r3, #0
 80058c0:	bfb8      	it	lt
 80058c2:	425b      	neglt	r3, r3
 80058c4:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
}
 80058c8:	ecbd 8b02 	vpop	{d8}
 80058cc:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80058ce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80058d2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80058d6:	ee17 3a10 	vmov	r3, s14
 80058da:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80058de:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80058e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80058e6:	1e59      	subs	r1, r3, #1
 80058e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058ec:	ee17 3a90 	vmov	r3, s15
 80058f0:	440b      	add	r3, r1
 80058f2:	4619      	mov	r1, r3
 80058f4:	e7a4      	b.n	8005840 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x38>
	else if ((ladowarka.ChargingTimeInSec >59*60) && (ladowarka.ChargingCompleted==0) ){ //jesli czas jest >59 min
 80058f6:	f8d5 2c5c 	ldr.w	r2, [r5, #3164]	; 0xc5c
 80058fa:	f640 53d4 	movw	r3, #3540	; 0xdd4
 80058fe:	429a      	cmp	r2, r3
 8005900:	dd02      	ble.n	8005908 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x100>
 8005902:	f8d5 1c64 	ldr.w	r1, [r5, #3172]	; 0xc64
 8005906:	b151      	cbz	r1, 800591e <_ZN15ScreenGraphView13DrawPoint2MinEv+0x116>
	else if(ladowarka.ChargingCompleted) 	{//maksymalna wartosc graphu keidy skonczy sie ladowanie oraz ustaw plot X,Y
 8005908:	f8d5 3c64 	ldr.w	r3, [r5, #3172]	; 0xc64
 800590c:	2b00      	cmp	r3, #0
 800590e:	d0db      	beq.n	80058c8 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc0>
				dynamicGraph2.setGraphRangeX(0,600);
 8005910:	f44f 7216 	mov.w	r2, #600	; 0x258
 8005914:	2100      	movs	r1, #0
 8005916:	4630      	mov	r0, r6
 8005918:	f7fd ff4c 	bl	80037b4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
}
 800591c:	e7d4      	b.n	80058c8 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc0>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 800591e:	692a      	ldr	r2, [r5, #16]
 8005920:	253c      	movs	r5, #60	; 0x3c
 8005922:	436a      	muls	r2, r5
 8005924:	4630      	mov	r0, r6
 8005926:	f7fd ff45 	bl	80037b4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 800592a:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
 800592e:	436a      	muls	r2, r5
 8005930:	2a00      	cmp	r2, #0
 8005932:	bfb8      	it	lt
 8005934:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005936:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 800593a:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 800593e:	230a      	movs	r3, #10
 8005940:	435a      	muls	r2, r3
 8005942:	2a00      	cmp	r2, #0
        return i * scale;
 8005944:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 8005948:	bfb8      	it	lt
 800594a:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 800594c:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 8005950:	436b      	muls	r3, r5
 8005952:	e7b4      	b.n	80058be <_ZN15ScreenGraphView13DrawPoint2MinEv+0xb6>
 8005954:	200048c4 	.word	0x200048c4
 8005958:	20003c5c 	.word	0x20003c5c

0800595c <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 800595c:	b510      	push	{r4, lr}
 800595e:	4604      	mov	r4, r0
 8005960:	f7fe fcaa 	bl	80042b8 <_ZN19ScreenGraphViewBaseC1Ev>
 8005964:	4b01      	ldr	r3, [pc, #4]	; (800596c <_ZN15ScreenGraphViewC1Ev+0x10>)
 8005966:	6023      	str	r3, [r4, #0]
}
 8005968:	4620      	mov	r0, r4
 800596a:	bd10      	pop	{r4, pc}
 800596c:	08023874 	.word	0x08023874

08005970 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005970:	20f0      	movs	r0, #240	; 0xf0
 8005972:	4770      	bx	lr

08005974 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005974:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8005978:	4770      	bx	lr

0800597a <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800597a:	2029      	movs	r0, #41	; 0x29
 800597c:	f7fc b954 	b.w	8001c28 <LCD_IO_WriteReg>

08005980 <ili9341_DisplayOff>:
 8005980:	2028      	movs	r0, #40	; 0x28
 8005982:	f7fc b951 	b.w	8001c28 <LCD_IO_WriteReg>

08005986 <ili9341_Init>:
{
 8005986:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005988:	f7fc f922 	bl	8001bd0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800598c:	20ca      	movs	r0, #202	; 0xca
 800598e:	f7fc f94b 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005992:	20c3      	movs	r0, #195	; 0xc3
 8005994:	f7fc f92c 	bl	8001bf0 <LCD_IO_WriteData>
 8005998:	2008      	movs	r0, #8
 800599a:	f7fc f929 	bl	8001bf0 <LCD_IO_WriteData>
 800599e:	2050      	movs	r0, #80	; 0x50
 80059a0:	f7fc f926 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059a4:	20cf      	movs	r0, #207	; 0xcf
 80059a6:	f7fc f93f 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059aa:	2000      	movs	r0, #0
 80059ac:	f7fc f920 	bl	8001bf0 <LCD_IO_WriteData>
 80059b0:	20c1      	movs	r0, #193	; 0xc1
 80059b2:	f7fc f91d 	bl	8001bf0 <LCD_IO_WriteData>
 80059b6:	2030      	movs	r0, #48	; 0x30
 80059b8:	f7fc f91a 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059bc:	20ed      	movs	r0, #237	; 0xed
 80059be:	f7fc f933 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059c2:	2064      	movs	r0, #100	; 0x64
 80059c4:	f7fc f914 	bl	8001bf0 <LCD_IO_WriteData>
 80059c8:	2003      	movs	r0, #3
 80059ca:	f7fc f911 	bl	8001bf0 <LCD_IO_WriteData>
 80059ce:	2012      	movs	r0, #18
 80059d0:	f7fc f90e 	bl	8001bf0 <LCD_IO_WriteData>
 80059d4:	2081      	movs	r0, #129	; 0x81
 80059d6:	f7fc f90b 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059da:	20e8      	movs	r0, #232	; 0xe8
 80059dc:	f7fc f924 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059e0:	2085      	movs	r0, #133	; 0x85
 80059e2:	f7fc f905 	bl	8001bf0 <LCD_IO_WriteData>
 80059e6:	2000      	movs	r0, #0
 80059e8:	f7fc f902 	bl	8001bf0 <LCD_IO_WriteData>
 80059ec:	2078      	movs	r0, #120	; 0x78
 80059ee:	f7fc f8ff 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059f2:	20cb      	movs	r0, #203	; 0xcb
 80059f4:	f7fc f918 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059f8:	2039      	movs	r0, #57	; 0x39
 80059fa:	f7fc f8f9 	bl	8001bf0 <LCD_IO_WriteData>
 80059fe:	202c      	movs	r0, #44	; 0x2c
 8005a00:	f7fc f8f6 	bl	8001bf0 <LCD_IO_WriteData>
 8005a04:	2000      	movs	r0, #0
 8005a06:	f7fc f8f3 	bl	8001bf0 <LCD_IO_WriteData>
 8005a0a:	2034      	movs	r0, #52	; 0x34
 8005a0c:	f7fc f8f0 	bl	8001bf0 <LCD_IO_WriteData>
 8005a10:	2002      	movs	r0, #2
 8005a12:	f7fc f8ed 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a16:	20f7      	movs	r0, #247	; 0xf7
 8005a18:	f7fc f906 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a1c:	2020      	movs	r0, #32
 8005a1e:	f7fc f8e7 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a22:	20ea      	movs	r0, #234	; 0xea
 8005a24:	f7fc f900 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a28:	2000      	movs	r0, #0
 8005a2a:	f7fc f8e1 	bl	8001bf0 <LCD_IO_WriteData>
 8005a2e:	2000      	movs	r0, #0
 8005a30:	f7fc f8de 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a34:	20b1      	movs	r0, #177	; 0xb1
 8005a36:	f7fc f8f7 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a3a:	2000      	movs	r0, #0
 8005a3c:	f7fc f8d8 	bl	8001bf0 <LCD_IO_WriteData>
 8005a40:	201b      	movs	r0, #27
 8005a42:	f7fc f8d5 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a46:	20b6      	movs	r0, #182	; 0xb6
 8005a48:	f7fc f8ee 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a4c:	200a      	movs	r0, #10
 8005a4e:	f7fc f8cf 	bl	8001bf0 <LCD_IO_WriteData>
 8005a52:	20a2      	movs	r0, #162	; 0xa2
 8005a54:	f7fc f8cc 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a58:	20c0      	movs	r0, #192	; 0xc0
 8005a5a:	f7fc f8e5 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a5e:	2010      	movs	r0, #16
 8005a60:	f7fc f8c6 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a64:	20c1      	movs	r0, #193	; 0xc1
 8005a66:	f7fc f8df 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a6a:	2010      	movs	r0, #16
 8005a6c:	f7fc f8c0 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a70:	20c5      	movs	r0, #197	; 0xc5
 8005a72:	f7fc f8d9 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a76:	2045      	movs	r0, #69	; 0x45
 8005a78:	f7fc f8ba 	bl	8001bf0 <LCD_IO_WriteData>
 8005a7c:	2015      	movs	r0, #21
 8005a7e:	f7fc f8b7 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a82:	20c7      	movs	r0, #199	; 0xc7
 8005a84:	f7fc f8d0 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a88:	2090      	movs	r0, #144	; 0x90
 8005a8a:	f7fc f8b1 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a8e:	2036      	movs	r0, #54	; 0x36
 8005a90:	f7fc f8ca 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a94:	20c8      	movs	r0, #200	; 0xc8
 8005a96:	f7fc f8ab 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a9a:	20f2      	movs	r0, #242	; 0xf2
 8005a9c:	f7fc f8c4 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005aa0:	2000      	movs	r0, #0
 8005aa2:	f7fc f8a5 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005aa6:	20b0      	movs	r0, #176	; 0xb0
 8005aa8:	f7fc f8be 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005aac:	20c2      	movs	r0, #194	; 0xc2
 8005aae:	f7fc f89f 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005ab2:	20b6      	movs	r0, #182	; 0xb6
 8005ab4:	f7fc f8b8 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ab8:	200a      	movs	r0, #10
 8005aba:	f7fc f899 	bl	8001bf0 <LCD_IO_WriteData>
 8005abe:	20a7      	movs	r0, #167	; 0xa7
 8005ac0:	f7fc f896 	bl	8001bf0 <LCD_IO_WriteData>
 8005ac4:	2027      	movs	r0, #39	; 0x27
 8005ac6:	f7fc f893 	bl	8001bf0 <LCD_IO_WriteData>
 8005aca:	2004      	movs	r0, #4
 8005acc:	f7fc f890 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005ad0:	202a      	movs	r0, #42	; 0x2a
 8005ad2:	f7fc f8a9 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ad6:	2000      	movs	r0, #0
 8005ad8:	f7fc f88a 	bl	8001bf0 <LCD_IO_WriteData>
 8005adc:	2000      	movs	r0, #0
 8005ade:	f7fc f887 	bl	8001bf0 <LCD_IO_WriteData>
 8005ae2:	2000      	movs	r0, #0
 8005ae4:	f7fc f884 	bl	8001bf0 <LCD_IO_WriteData>
 8005ae8:	20ef      	movs	r0, #239	; 0xef
 8005aea:	f7fc f881 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005aee:	202b      	movs	r0, #43	; 0x2b
 8005af0:	f7fc f89a 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005af4:	2000      	movs	r0, #0
 8005af6:	f7fc f87b 	bl	8001bf0 <LCD_IO_WriteData>
 8005afa:	2000      	movs	r0, #0
 8005afc:	f7fc f878 	bl	8001bf0 <LCD_IO_WriteData>
 8005b00:	2001      	movs	r0, #1
 8005b02:	f7fc f875 	bl	8001bf0 <LCD_IO_WriteData>
 8005b06:	203f      	movs	r0, #63	; 0x3f
 8005b08:	f7fc f872 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005b0c:	20f6      	movs	r0, #246	; 0xf6
 8005b0e:	f7fc f88b 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005b12:	2001      	movs	r0, #1
 8005b14:	f7fc f86c 	bl	8001bf0 <LCD_IO_WriteData>
 8005b18:	2000      	movs	r0, #0
 8005b1a:	f7fc f869 	bl	8001bf0 <LCD_IO_WriteData>
 8005b1e:	2006      	movs	r0, #6
 8005b20:	f7fc f866 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005b24:	202c      	movs	r0, #44	; 0x2c
 8005b26:	f7fc f87f 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005b2a:	20c8      	movs	r0, #200	; 0xc8
 8005b2c:	f7fc f8ca 	bl	8001cc4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005b30:	2026      	movs	r0, #38	; 0x26
 8005b32:	f7fc f879 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005b36:	2001      	movs	r0, #1
 8005b38:	f7fc f85a 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005b3c:	20e0      	movs	r0, #224	; 0xe0
 8005b3e:	f7fc f873 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005b42:	200f      	movs	r0, #15
 8005b44:	f7fc f854 	bl	8001bf0 <LCD_IO_WriteData>
 8005b48:	2029      	movs	r0, #41	; 0x29
 8005b4a:	f7fc f851 	bl	8001bf0 <LCD_IO_WriteData>
 8005b4e:	2024      	movs	r0, #36	; 0x24
 8005b50:	f7fc f84e 	bl	8001bf0 <LCD_IO_WriteData>
 8005b54:	200c      	movs	r0, #12
 8005b56:	f7fc f84b 	bl	8001bf0 <LCD_IO_WriteData>
 8005b5a:	200e      	movs	r0, #14
 8005b5c:	f7fc f848 	bl	8001bf0 <LCD_IO_WriteData>
 8005b60:	2009      	movs	r0, #9
 8005b62:	f7fc f845 	bl	8001bf0 <LCD_IO_WriteData>
 8005b66:	204e      	movs	r0, #78	; 0x4e
 8005b68:	f7fc f842 	bl	8001bf0 <LCD_IO_WriteData>
 8005b6c:	2078      	movs	r0, #120	; 0x78
 8005b6e:	f7fc f83f 	bl	8001bf0 <LCD_IO_WriteData>
 8005b72:	203c      	movs	r0, #60	; 0x3c
 8005b74:	f7fc f83c 	bl	8001bf0 <LCD_IO_WriteData>
 8005b78:	2009      	movs	r0, #9
 8005b7a:	f7fc f839 	bl	8001bf0 <LCD_IO_WriteData>
 8005b7e:	2013      	movs	r0, #19
 8005b80:	f7fc f836 	bl	8001bf0 <LCD_IO_WriteData>
 8005b84:	2005      	movs	r0, #5
 8005b86:	f7fc f833 	bl	8001bf0 <LCD_IO_WriteData>
 8005b8a:	2017      	movs	r0, #23
 8005b8c:	f7fc f830 	bl	8001bf0 <LCD_IO_WriteData>
 8005b90:	2011      	movs	r0, #17
 8005b92:	f7fc f82d 	bl	8001bf0 <LCD_IO_WriteData>
 8005b96:	2000      	movs	r0, #0
 8005b98:	f7fc f82a 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005b9c:	20e1      	movs	r0, #225	; 0xe1
 8005b9e:	f7fc f843 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ba2:	2000      	movs	r0, #0
 8005ba4:	f7fc f824 	bl	8001bf0 <LCD_IO_WriteData>
 8005ba8:	2016      	movs	r0, #22
 8005baa:	f7fc f821 	bl	8001bf0 <LCD_IO_WriteData>
 8005bae:	201b      	movs	r0, #27
 8005bb0:	f7fc f81e 	bl	8001bf0 <LCD_IO_WriteData>
 8005bb4:	2004      	movs	r0, #4
 8005bb6:	f7fc f81b 	bl	8001bf0 <LCD_IO_WriteData>
 8005bba:	2011      	movs	r0, #17
 8005bbc:	f7fc f818 	bl	8001bf0 <LCD_IO_WriteData>
 8005bc0:	2007      	movs	r0, #7
 8005bc2:	f7fc f815 	bl	8001bf0 <LCD_IO_WriteData>
 8005bc6:	2031      	movs	r0, #49	; 0x31
 8005bc8:	f7fc f812 	bl	8001bf0 <LCD_IO_WriteData>
 8005bcc:	2033      	movs	r0, #51	; 0x33
 8005bce:	f7fc f80f 	bl	8001bf0 <LCD_IO_WriteData>
 8005bd2:	2042      	movs	r0, #66	; 0x42
 8005bd4:	f7fc f80c 	bl	8001bf0 <LCD_IO_WriteData>
 8005bd8:	2005      	movs	r0, #5
 8005bda:	f7fc f809 	bl	8001bf0 <LCD_IO_WriteData>
 8005bde:	200c      	movs	r0, #12
 8005be0:	f7fc f806 	bl	8001bf0 <LCD_IO_WriteData>
 8005be4:	200a      	movs	r0, #10
 8005be6:	f7fc f803 	bl	8001bf0 <LCD_IO_WriteData>
 8005bea:	2028      	movs	r0, #40	; 0x28
 8005bec:	f7fc f800 	bl	8001bf0 <LCD_IO_WriteData>
 8005bf0:	202f      	movs	r0, #47	; 0x2f
 8005bf2:	f7fb fffd 	bl	8001bf0 <LCD_IO_WriteData>
 8005bf6:	200f      	movs	r0, #15
 8005bf8:	f7fb fffa 	bl	8001bf0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005bfc:	2011      	movs	r0, #17
 8005bfe:	f7fc f813 	bl	8001c28 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005c02:	20c8      	movs	r0, #200	; 0xc8
 8005c04:	f7fc f85e 	bl	8001cc4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005c08:	2029      	movs	r0, #41	; 0x29
 8005c0a:	f7fc f80d 	bl	8001c28 <LCD_IO_WriteReg>
}
 8005c0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8005c12:	202c      	movs	r0, #44	; 0x2c
 8005c14:	f7fc b808 	b.w	8001c28 <LCD_IO_WriteReg>

08005c18 <ili9341_ReadID>:
{
 8005c18:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005c1a:	f7fb ffd9 	bl	8001bd0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005c1e:	2103      	movs	r1, #3
 8005c20:	20d3      	movs	r0, #211	; 0xd3
 8005c22:	f7fc f81d 	bl	8001c60 <LCD_IO_ReadData>
}
 8005c26:	b280      	uxth	r0, r0
 8005c28:	bd08      	pop	{r3, pc}

08005c2a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8005c2a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005c2c:	b2c4      	uxtb	r4, r0
 8005c2e:	2202      	movs	r2, #2
 8005c30:	2103      	movs	r1, #3
 8005c32:	4620      	mov	r0, r4
 8005c34:	f7fb ff82 	bl	8001b3c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005c38:	200a      	movs	r0, #10
 8005c3a:	f7fb ffc7 	bl	8001bcc <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005c3e:	4620      	mov	r0, r4
 8005c40:	2200      	movs	r2, #0
 8005c42:	2103      	movs	r1, #3
 8005c44:	f7fb ff7a 	bl	8001b3c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8005c48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005c4c:	2002      	movs	r0, #2
 8005c4e:	f7fb bfbd 	b.w	8001bcc <IOE_Delay>

08005c52 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005c52:	b538      	push	{r3, r4, r5, lr}
 8005c54:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005c56:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005c58:	f7fb ff6e 	bl	8001b38 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005c5c:	2100      	movs	r1, #0
 8005c5e:	4620      	mov	r0, r4
 8005c60:	f7fb ff84 	bl	8001b6c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005c64:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005c66:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005c68:	4620      	mov	r0, r4
 8005c6a:	f7fb ff7f 	bl	8001b6c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005c6e:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005c72:	b280      	uxth	r0, r0
 8005c74:	bd38      	pop	{r3, r4, r5, pc}

08005c76 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005c76:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005c78:	b2c4      	uxtb	r4, r0
 8005c7a:	2140      	movs	r1, #64	; 0x40
 8005c7c:	4620      	mov	r0, r4
 8005c7e:	f7fb ff75 	bl	8001b6c <IOE_Read>
  
  if(state > 0)
 8005c82:	0603      	lsls	r3, r0, #24
 8005c84:	d507      	bpl.n	8005c96 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005c86:	214c      	movs	r1, #76	; 0x4c
 8005c88:	4620      	mov	r0, r4
 8005c8a:	f7fb ff6f 	bl	8001b6c <IOE_Read>
    {
      ret = 1;
 8005c8e:	3800      	subs	r0, #0
 8005c90:	bf18      	it	ne
 8005c92:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005c94:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005c96:	2201      	movs	r2, #1
 8005c98:	214b      	movs	r1, #75	; 0x4b
 8005c9a:	4620      	mov	r0, r4
 8005c9c:	f7fb ff4e 	bl	8001b3c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005ca0:	4620      	mov	r0, r4
 8005ca2:	2200      	movs	r2, #0
 8005ca4:	214b      	movs	r1, #75	; 0x4b
 8005ca6:	f7fb ff49 	bl	8001b3c <IOE_Write>
  uint8_t ret = 0;
 8005caa:	2000      	movs	r0, #0
 8005cac:	e7f2      	b.n	8005c94 <stmpe811_TS_DetectTouch+0x1e>

08005cae <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005cae:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005cb0:	2304      	movs	r3, #4
 8005cb2:	b2c4      	uxtb	r4, r0
{
 8005cb4:	460e      	mov	r6, r1
 8005cb6:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005cb8:	21d7      	movs	r1, #215	; 0xd7
 8005cba:	eb0d 0203 	add.w	r2, sp, r3
 8005cbe:	4620      	mov	r0, r4
 8005cc0:	f7fb ff6e 	bl	8001ba0 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005cc4:	9b01      	ldr	r3, [sp, #4]
 8005cc6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005cc8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005cca:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005cce:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005cd0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005cd2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005cd4:	2201      	movs	r2, #1
 8005cd6:	214b      	movs	r1, #75	; 0x4b
 8005cd8:	f7fb ff30 	bl	8001b3c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005cdc:	2200      	movs	r2, #0
 8005cde:	214b      	movs	r1, #75	; 0x4b
 8005ce0:	4620      	mov	r0, r4
 8005ce2:	f7fb ff2b 	bl	8001b3c <IOE_Write>
}
 8005ce6:	b002      	add	sp, #8
 8005ce8:	bd70      	pop	{r4, r5, r6, pc}
	...

08005cec <stmpe811_Init>:
{
 8005cec:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005cee:	4b0a      	ldr	r3, [pc, #40]	; (8005d18 <stmpe811_Init+0x2c>)
 8005cf0:	781a      	ldrb	r2, [r3, #0]
 8005cf2:	4290      	cmp	r0, r2
{
 8005cf4:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005cf6:	d00d      	beq.n	8005d14 <stmpe811_Init+0x28>
 8005cf8:	7859      	ldrb	r1, [r3, #1]
 8005cfa:	4288      	cmp	r0, r1
 8005cfc:	d00a      	beq.n	8005d14 <stmpe811_Init+0x28>
 8005cfe:	b10a      	cbz	r2, 8005d04 <stmpe811_Init+0x18>
 8005d00:	b941      	cbnz	r1, 8005d14 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005d02:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005d04:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005d06:	f7fb ff17 	bl	8001b38 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005d0a:	4620      	mov	r0, r4
}
 8005d0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005d10:	f7ff bf8b 	b.w	8005c2a <stmpe811_Reset>
}
 8005d14:	bd10      	pop	{r4, pc}
 8005d16:	bf00      	nop
 8005d18:	200049d4 	.word	0x200049d4

08005d1c <stmpe811_EnableGlobalIT>:
{
 8005d1c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005d1e:	b2c4      	uxtb	r4, r0
 8005d20:	2109      	movs	r1, #9
 8005d22:	4620      	mov	r0, r4
 8005d24:	f7fb ff22 	bl	8001b6c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005d28:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005d2c:	b2c2      	uxtb	r2, r0
 8005d2e:	2109      	movs	r1, #9
 8005d30:	4620      	mov	r0, r4
}
 8005d32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005d36:	f7fb bf01 	b.w	8001b3c <IOE_Write>

08005d3a <stmpe811_DisableGlobalIT>:
{
 8005d3a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005d3c:	b2c4      	uxtb	r4, r0
 8005d3e:	2109      	movs	r1, #9
 8005d40:	4620      	mov	r0, r4
 8005d42:	f7fb ff13 	bl	8001b6c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005d46:	2109      	movs	r1, #9
 8005d48:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005d4c:	4620      	mov	r0, r4
}
 8005d4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005d52:	f7fb bef3 	b.w	8001b3c <IOE_Write>

08005d56 <stmpe811_EnableITSource>:
{
 8005d56:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005d58:	b2c4      	uxtb	r4, r0
{
 8005d5a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005d5c:	4620      	mov	r0, r4
 8005d5e:	210a      	movs	r1, #10
 8005d60:	f7fb ff04 	bl	8001b6c <IOE_Read>
  tmp |= Source; 
 8005d64:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005d66:	b2c2      	uxtb	r2, r0
 8005d68:	210a      	movs	r1, #10
 8005d6a:	4620      	mov	r0, r4
}
 8005d6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005d70:	f7fb bee4 	b.w	8001b3c <IOE_Write>

08005d74 <stmpe811_TS_EnableIT>:
{
 8005d74:	b507      	push	{r0, r1, r2, lr}
 8005d76:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005d78:	f7fb fedf 	bl	8001b3a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005d7c:	9801      	ldr	r0, [sp, #4]
 8005d7e:	211f      	movs	r1, #31
 8005d80:	f7ff ffe9 	bl	8005d56 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005d84:	9801      	ldr	r0, [sp, #4]
}
 8005d86:	b003      	add	sp, #12
 8005d88:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005d8c:	f7ff bfc6 	b.w	8005d1c <stmpe811_EnableGlobalIT>

08005d90 <stmpe811_DisableITSource>:
{
 8005d90:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005d92:	b2c4      	uxtb	r4, r0
{
 8005d94:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005d96:	4620      	mov	r0, r4
 8005d98:	210a      	movs	r1, #10
 8005d9a:	f7fb fee7 	bl	8001b6c <IOE_Read>
  tmp &= ~Source; 
 8005d9e:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005da2:	b2c2      	uxtb	r2, r0
 8005da4:	210a      	movs	r1, #10
 8005da6:	4620      	mov	r0, r4
}
 8005da8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005dac:	f7fb bec6 	b.w	8001b3c <IOE_Write>

08005db0 <stmpe811_TS_DisableIT>:
{
 8005db0:	b510      	push	{r4, lr}
 8005db2:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005db4:	f7ff ffc1 	bl	8005d3a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005db8:	4620      	mov	r0, r4
 8005dba:	211f      	movs	r1, #31
}
 8005dbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005dc0:	f7ff bfe6 	b.w	8005d90 <stmpe811_DisableITSource>

08005dc4 <stmpe811_ReadGITStatus>:
{
 8005dc4:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005dc6:	b2c0      	uxtb	r0, r0
{
 8005dc8:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005dca:	210b      	movs	r1, #11
 8005dcc:	f7fb fece 	bl	8001b6c <IOE_Read>
}
 8005dd0:	4020      	ands	r0, r4
 8005dd2:	bd10      	pop	{r4, pc}

08005dd4 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005dd4:	211f      	movs	r1, #31
 8005dd6:	f7ff bff5 	b.w	8005dc4 <stmpe811_ReadGITStatus>

08005dda <stmpe811_ClearGlobalIT>:
{
 8005dda:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005ddc:	b2c0      	uxtb	r0, r0
 8005dde:	210b      	movs	r1, #11
 8005de0:	f7fb beac 	b.w	8001b3c <IOE_Write>

08005de4 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005de4:	211f      	movs	r1, #31
 8005de6:	f7ff bff8 	b.w	8005dda <stmpe811_ClearGlobalIT>

08005dea <stmpe811_IO_EnableAF>:
{
 8005dea:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005dec:	b2c4      	uxtb	r4, r0
{
 8005dee:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005df0:	4620      	mov	r0, r4
 8005df2:	2117      	movs	r1, #23
 8005df4:	f7fb feba 	bl	8001b6c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005df8:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005dfc:	b2c2      	uxtb	r2, r0
 8005dfe:	2117      	movs	r1, #23
 8005e00:	4620      	mov	r0, r4
}
 8005e02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005e06:	f7fb be99 	b.w	8001b3c <IOE_Write>

08005e0a <stmpe811_TS_Start>:
{
 8005e0a:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005e0c:	b2c4      	uxtb	r4, r0
{
 8005e0e:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005e10:	2104      	movs	r1, #4
 8005e12:	4620      	mov	r0, r4
 8005e14:	f7fb feaa 	bl	8001b6c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005e18:	2104      	movs	r1, #4
 8005e1a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005e1e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005e20:	4620      	mov	r0, r4
 8005e22:	f7fb fe8b 	bl	8001b3c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005e26:	4630      	mov	r0, r6
 8005e28:	21f0      	movs	r1, #240	; 0xf0
 8005e2a:	f7ff ffde 	bl	8005dea <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005e2e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005e32:	4620      	mov	r0, r4
 8005e34:	2104      	movs	r1, #4
 8005e36:	f7fb fe81 	bl	8001b3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005e3a:	2249      	movs	r2, #73	; 0x49
 8005e3c:	2120      	movs	r1, #32
 8005e3e:	4620      	mov	r0, r4
 8005e40:	f7fb fe7c 	bl	8001b3c <IOE_Write>
  IOE_Delay(2); 
 8005e44:	2002      	movs	r0, #2
 8005e46:	f7fb fec1 	bl	8001bcc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005e4a:	4620      	mov	r0, r4
 8005e4c:	2201      	movs	r2, #1
 8005e4e:	2121      	movs	r1, #33	; 0x21
 8005e50:	f7fb fe74 	bl	8001b3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005e54:	4620      	mov	r0, r4
 8005e56:	229a      	movs	r2, #154	; 0x9a
 8005e58:	2141      	movs	r1, #65	; 0x41
 8005e5a:	f7fb fe6f 	bl	8001b3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005e5e:	4620      	mov	r0, r4
 8005e60:	2201      	movs	r2, #1
 8005e62:	214a      	movs	r1, #74	; 0x4a
 8005e64:	f7fb fe6a 	bl	8001b3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005e68:	4620      	mov	r0, r4
 8005e6a:	2201      	movs	r2, #1
 8005e6c:	214b      	movs	r1, #75	; 0x4b
 8005e6e:	f7fb fe65 	bl	8001b3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005e72:	4620      	mov	r0, r4
 8005e74:	2200      	movs	r2, #0
 8005e76:	214b      	movs	r1, #75	; 0x4b
 8005e78:	f7fb fe60 	bl	8001b3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005e7c:	4620      	mov	r0, r4
 8005e7e:	2201      	movs	r2, #1
 8005e80:	2156      	movs	r1, #86	; 0x56
 8005e82:	f7fb fe5b 	bl	8001b3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005e86:	4620      	mov	r0, r4
 8005e88:	2201      	movs	r2, #1
 8005e8a:	2158      	movs	r1, #88	; 0x58
 8005e8c:	f7fb fe56 	bl	8001b3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005e90:	4620      	mov	r0, r4
 8005e92:	2201      	movs	r2, #1
 8005e94:	2140      	movs	r1, #64	; 0x40
 8005e96:	f7fb fe51 	bl	8001b3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005e9a:	4620      	mov	r0, r4
 8005e9c:	22ff      	movs	r2, #255	; 0xff
 8005e9e:	210b      	movs	r1, #11
 8005ea0:	f7fb fe4c 	bl	8001b3c <IOE_Write>
}
 8005ea4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005ea8:	2002      	movs	r0, #2
 8005eaa:	f7fb be8f 	b.w	8001bcc <IOE_Delay>
	...

08005eb0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005eb0:	4b05      	ldr	r3, [pc, #20]	; (8005ec8 <SystemInit+0x18>)
 8005eb2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005eb6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005eba:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005ebe:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005ec2:	609a      	str	r2, [r3, #8]
#endif
}
 8005ec4:	4770      	bx	lr
 8005ec6:	bf00      	nop
 8005ec8:	e000ed00 	.word	0xe000ed00

08005ecc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005ecc:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005ece:	4b0b      	ldr	r3, [pc, #44]	; (8005efc <HAL_Init+0x30>)
 8005ed0:	681a      	ldr	r2, [r3, #0]
 8005ed2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005ed6:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005ed8:	681a      	ldr	r2, [r3, #0]
 8005eda:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005ede:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005ee0:	681a      	ldr	r2, [r3, #0]
 8005ee2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ee6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005ee8:	2003      	movs	r0, #3
 8005eea:	f000 f9e9 	bl	80062c0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005eee:	2000      	movs	r0, #0
 8005ef0:	f7fc f9d6 	bl	80022a0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005ef4:	f7fb ff00 	bl	8001cf8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005ef8:	2000      	movs	r0, #0
 8005efa:	bd08      	pop	{r3, pc}
 8005efc:	40023c00 	.word	0x40023c00

08005f00 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005f00:	4a03      	ldr	r2, [pc, #12]	; (8005f10 <HAL_IncTick+0x10>)
 8005f02:	4b04      	ldr	r3, [pc, #16]	; (8005f14 <HAL_IncTick+0x14>)
 8005f04:	6811      	ldr	r1, [r2, #0]
 8005f06:	781b      	ldrb	r3, [r3, #0]
 8005f08:	440b      	add	r3, r1
 8005f0a:	6013      	str	r3, [r2, #0]
}
 8005f0c:	4770      	bx	lr
 8005f0e:	bf00      	nop
 8005f10:	200049d8 	.word	0x200049d8
 8005f14:	20000080 	.word	0x20000080

08005f18 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005f18:	4b01      	ldr	r3, [pc, #4]	; (8005f20 <HAL_GetTick+0x8>)
 8005f1a:	6818      	ldr	r0, [r3, #0]
}
 8005f1c:	4770      	bx	lr
 8005f1e:	bf00      	nop
 8005f20:	200049d8 	.word	0x200049d8

08005f24 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005f24:	b538      	push	{r3, r4, r5, lr}
 8005f26:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005f28:	f7ff fff6 	bl	8005f18 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005f2c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005f2e:	bf1c      	itt	ne
 8005f30:	4b05      	ldrne	r3, [pc, #20]	; (8005f48 <HAL_Delay+0x24>)
 8005f32:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005f34:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005f36:	bf18      	it	ne
 8005f38:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005f3a:	f7ff ffed 	bl	8005f18 <HAL_GetTick>
 8005f3e:	1b43      	subs	r3, r0, r5
 8005f40:	42a3      	cmp	r3, r4
 8005f42:	d3fa      	bcc.n	8005f3a <HAL_Delay+0x16>
  {
  }
}
 8005f44:	bd38      	pop	{r3, r4, r5, pc}
 8005f46:	bf00      	nop
 8005f48:	20000080 	.word	0x20000080

08005f4c <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005f4c:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005f4e:	4604      	mov	r4, r0
 8005f50:	2800      	cmp	r0, #0
 8005f52:	f000 809b 	beq.w	800608c <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005f56:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005f58:	b925      	cbnz	r5, 8005f64 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005f5a:	f7fb feed 	bl	8001d38 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005f5e:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005f60:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005f64:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005f66:	06db      	lsls	r3, r3, #27
 8005f68:	f100 808e 	bmi.w	8006088 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005f6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005f6e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005f72:	f023 0302 	bic.w	r3, r3, #2
 8005f76:	f043 0302 	orr.w	r3, r3, #2
 8005f7a:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005f7c:	4b44      	ldr	r3, [pc, #272]	; (8006090 <HAL_ADC_Init+0x144>)
 8005f7e:	685a      	ldr	r2, [r3, #4]
 8005f80:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005f84:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005f86:	685a      	ldr	r2, [r3, #4]
 8005f88:	6861      	ldr	r1, [r4, #4]
 8005f8a:	430a      	orrs	r2, r1
 8005f8c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005f8e:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005f90:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005f92:	685a      	ldr	r2, [r3, #4]
 8005f94:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005f98:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005f9a:	685a      	ldr	r2, [r3, #4]
 8005f9c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005fa0:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005fa2:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005fa4:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005fa6:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005faa:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005fac:	685a      	ldr	r2, [r3, #4]
 8005fae:	430a      	orrs	r2, r1
 8005fb0:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005fb2:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005fb4:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005fb6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005fba:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005fbc:	689a      	ldr	r2, [r3, #8]
 8005fbe:	430a      	orrs	r2, r1
 8005fc0:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005fc2:	4934      	ldr	r1, [pc, #208]	; (8006094 <HAL_ADC_Init+0x148>)
 8005fc4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005fc6:	428a      	cmp	r2, r1
 8005fc8:	d052      	beq.n	8006070 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005fca:	6899      	ldr	r1, [r3, #8]
 8005fcc:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005fd0:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005fd2:	6899      	ldr	r1, [r3, #8]
 8005fd4:	430a      	orrs	r2, r1
 8005fd6:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005fd8:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005fda:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005fdc:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005fe0:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005fe2:	689a      	ldr	r2, [r3, #8]
 8005fe4:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005fe6:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005fe8:	689a      	ldr	r2, [r3, #8]
 8005fea:	f022 0202 	bic.w	r2, r2, #2
 8005fee:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005ff0:	689a      	ldr	r2, [r3, #8]
 8005ff2:	7e21      	ldrb	r1, [r4, #24]
 8005ff4:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005ff8:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005ffa:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005ffe:	2a00      	cmp	r2, #0
 8006000:	d03e      	beq.n	8006080 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8006002:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8006004:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8006006:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800600a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800600c:	685a      	ldr	r2, [r3, #4]
 800600e:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8006012:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8006014:	685a      	ldr	r2, [r3, #4]
 8006016:	3901      	subs	r1, #1
 8006018:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800601c:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800601e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8006020:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8006022:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8006026:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8006028:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800602a:	3901      	subs	r1, #1
 800602c:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8006030:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8006032:	689a      	ldr	r2, [r3, #8]
 8006034:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006038:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800603a:	689a      	ldr	r2, [r3, #8]
 800603c:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8006040:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8006044:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8006046:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8006048:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800604a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800604e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8006050:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8006052:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8006054:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8006058:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800605a:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 800605c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800605e:	f023 0303 	bic.w	r3, r3, #3
 8006062:	f043 0301 	orr.w	r3, r3, #1
 8006066:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8006068:	2300      	movs	r3, #0
 800606a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 800606e:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8006070:	689a      	ldr	r2, [r3, #8]
 8006072:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006076:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8006078:	689a      	ldr	r2, [r3, #8]
 800607a:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800607e:	e7b2      	b.n	8005fe6 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8006080:	685a      	ldr	r2, [r3, #4]
 8006082:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006086:	e7c9      	b.n	800601c <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8006088:	2001      	movs	r0, #1
 800608a:	e7ed      	b.n	8006068 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 800608c:	2001      	movs	r0, #1
 800608e:	e7ee      	b.n	800606e <HAL_ADC_Init+0x122>
 8006090:	40012300 	.word	0x40012300
 8006094:	0f000001 	.word	0x0f000001

08006098 <HAL_ADC_Start>:
{
 8006098:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 800609a:	2300      	movs	r3, #0
 800609c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800609e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80060a2:	2b01      	cmp	r3, #1
 80060a4:	d060      	beq.n	8006168 <HAL_ADC_Start+0xd0>
 80060a6:	2301      	movs	r3, #1
 80060a8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80060ac:	6803      	ldr	r3, [r0, #0]
 80060ae:	689a      	ldr	r2, [r3, #8]
 80060b0:	07d2      	lsls	r2, r2, #31
 80060b2:	d505      	bpl.n	80060c0 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80060b4:	689a      	ldr	r2, [r3, #8]
 80060b6:	07d1      	lsls	r1, r2, #31
 80060b8:	d414      	bmi.n	80060e4 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 80060ba:	2000      	movs	r0, #0
}
 80060bc:	b002      	add	sp, #8
 80060be:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 80060c0:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80060c2:	492a      	ldr	r1, [pc, #168]	; (800616c <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 80060c4:	f042 0201 	orr.w	r2, r2, #1
 80060c8:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80060ca:	4a29      	ldr	r2, [pc, #164]	; (8006170 <HAL_ADC_Start+0xd8>)
 80060cc:	6812      	ldr	r2, [r2, #0]
 80060ce:	fbb2 f2f1 	udiv	r2, r2, r1
 80060d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 80060d6:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 80060d8:	9a01      	ldr	r2, [sp, #4]
 80060da:	2a00      	cmp	r2, #0
 80060dc:	d0ea      	beq.n	80060b4 <HAL_ADC_Start+0x1c>
      counter--;
 80060de:	9a01      	ldr	r2, [sp, #4]
 80060e0:	3a01      	subs	r2, #1
 80060e2:	e7f8      	b.n	80060d6 <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 80060e4:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80060e6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80060ea:	f022 0201 	bic.w	r2, r2, #1
 80060ee:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80060f2:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 80060f4:	685a      	ldr	r2, [r3, #4]
 80060f6:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 80060f8:	bf41      	itttt	mi
 80060fa:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 80060fc:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8006100:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8006104:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8006106:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8006108:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 800610c:	bf1c      	itt	ne
 800610e:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8006110:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8006114:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8006116:	2200      	movs	r2, #0
 8006118:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800611c:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8006120:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8006122:	4a14      	ldr	r2, [pc, #80]	; (8006174 <HAL_ADC_Start+0xdc>)
 8006124:	6851      	ldr	r1, [r2, #4]
 8006126:	f011 0f1f 	tst.w	r1, #31
 800612a:	4913      	ldr	r1, [pc, #76]	; (8006178 <HAL_ADC_Start+0xe0>)
 800612c:	d119      	bne.n	8006162 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800612e:	428b      	cmp	r3, r1
 8006130:	d007      	beq.n	8006142 <HAL_ADC_Start+0xaa>
 8006132:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8006136:	428b      	cmp	r3, r1
 8006138:	d10c      	bne.n	8006154 <HAL_ADC_Start+0xbc>
 800613a:	6852      	ldr	r2, [r2, #4]
 800613c:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8006140:	d1bb      	bne.n	80060ba <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8006142:	6898      	ldr	r0, [r3, #8]
 8006144:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8006148:	d1b7      	bne.n	80060ba <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800614a:	689a      	ldr	r2, [r3, #8]
 800614c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8006150:	609a      	str	r2, [r3, #8]
 8006152:	e7b3      	b.n	80060bc <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8006154:	4909      	ldr	r1, [pc, #36]	; (800617c <HAL_ADC_Start+0xe4>)
 8006156:	428b      	cmp	r3, r1
 8006158:	d1af      	bne.n	80060ba <HAL_ADC_Start+0x22>
 800615a:	6852      	ldr	r2, [r2, #4]
 800615c:	f012 0f10 	tst.w	r2, #16
 8006160:	e7ee      	b.n	8006140 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8006162:	428b      	cmp	r3, r1
 8006164:	d1a9      	bne.n	80060ba <HAL_ADC_Start+0x22>
 8006166:	e7ec      	b.n	8006142 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8006168:	2002      	movs	r0, #2
 800616a:	e7a7      	b.n	80060bc <HAL_ADC_Start+0x24>
 800616c:	000f4240 	.word	0x000f4240
 8006170:	2000007c 	.word	0x2000007c
 8006174:	40012300 	.word	0x40012300
 8006178:	40012000 	.word	0x40012000
 800617c:	40012200 	.word	0x40012200

08006180 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8006180:	6803      	ldr	r3, [r0, #0]
 8006182:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8006184:	4770      	bx	lr
	...

08006188 <HAL_ADC_ConfigChannel>:
{
 8006188:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800618a:	2300      	movs	r3, #0
 800618c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800618e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8006192:	2b01      	cmp	r3, #1
 8006194:	d069      	beq.n	800626a <HAL_ADC_ConfigChannel+0xe2>
 8006196:	2301      	movs	r3, #1
 8006198:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 800619c:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800619e:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80061a0:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 80061a2:	2d09      	cmp	r5, #9
 80061a4:	b2ac      	uxth	r4, r5
 80061a6:	d934      	bls.n	8006212 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80061a8:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 80061ac:	68df      	ldr	r7, [r3, #12]
 80061ae:	3a1e      	subs	r2, #30
 80061b0:	f04f 0c07 	mov.w	ip, #7
 80061b4:	fa0c fc02 	lsl.w	ip, ip, r2
 80061b8:	ea27 070c 	bic.w	r7, r7, ip
 80061bc:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80061be:	68df      	ldr	r7, [r3, #12]
 80061c0:	fa06 f202 	lsl.w	r2, r6, r2
 80061c4:	433a      	orrs	r2, r7
 80061c6:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 80061c8:	6849      	ldr	r1, [r1, #4]
 80061ca:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80061cc:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 80061d0:	d82f      	bhi.n	8006232 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80061d2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80061d4:	3a05      	subs	r2, #5
 80061d6:	261f      	movs	r6, #31
 80061d8:	4096      	lsls	r6, r2
 80061da:	ea21 0106 	bic.w	r1, r1, r6
 80061de:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80061e0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80061e2:	fa04 f202 	lsl.w	r2, r4, r2
 80061e6:	430a      	orrs	r2, r1
 80061e8:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80061ea:	4a30      	ldr	r2, [pc, #192]	; (80062ac <HAL_ADC_ConfigChannel+0x124>)
 80061ec:	4293      	cmp	r3, r2
 80061ee:	d10a      	bne.n	8006206 <HAL_ADC_ConfigChannel+0x7e>
 80061f0:	2d12      	cmp	r5, #18
 80061f2:	d13c      	bne.n	800626e <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 80061f4:	4b2e      	ldr	r3, [pc, #184]	; (80062b0 <HAL_ADC_ConfigChannel+0x128>)
 80061f6:	685a      	ldr	r2, [r3, #4]
 80061f8:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80061fc:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80061fe:	685a      	ldr	r2, [r3, #4]
 8006200:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006204:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8006206:	2300      	movs	r3, #0
 8006208:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 800620c:	4618      	mov	r0, r3
}
 800620e:	b003      	add	sp, #12
 8006210:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8006212:	691f      	ldr	r7, [r3, #16]
 8006214:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8006218:	f04f 0c07 	mov.w	ip, #7
 800621c:	fa0c fc02 	lsl.w	ip, ip, r2
 8006220:	ea27 070c 	bic.w	r7, r7, ip
 8006224:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8006226:	691f      	ldr	r7, [r3, #16]
 8006228:	fa06 f202 	lsl.w	r2, r6, r2
 800622c:	433a      	orrs	r2, r7
 800622e:	611a      	str	r2, [r3, #16]
 8006230:	e7ca      	b.n	80061c8 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8006232:	290c      	cmp	r1, #12
 8006234:	f04f 011f 	mov.w	r1, #31
 8006238:	d80b      	bhi.n	8006252 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800623a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800623c:	3a23      	subs	r2, #35	; 0x23
 800623e:	4091      	lsls	r1, r2
 8006240:	ea26 0101 	bic.w	r1, r6, r1
 8006244:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8006246:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8006248:	fa04 f202 	lsl.w	r2, r4, r2
 800624c:	430a      	orrs	r2, r1
 800624e:	631a      	str	r2, [r3, #48]	; 0x30
 8006250:	e7cb      	b.n	80061ea <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8006252:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006254:	3a41      	subs	r2, #65	; 0x41
 8006256:	4091      	lsls	r1, r2
 8006258:	ea26 0101 	bic.w	r1, r6, r1
 800625c:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800625e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006260:	fa04 f202 	lsl.w	r2, r4, r2
 8006264:	430a      	orrs	r2, r1
 8006266:	62da      	str	r2, [r3, #44]	; 0x2c
 8006268:	e7bf      	b.n	80061ea <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800626a:	2002      	movs	r0, #2
 800626c:	e7cf      	b.n	800620e <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800626e:	4b11      	ldr	r3, [pc, #68]	; (80062b4 <HAL_ADC_ConfigChannel+0x12c>)
 8006270:	429d      	cmp	r5, r3
 8006272:	d001      	beq.n	8006278 <HAL_ADC_ConfigChannel+0xf0>
 8006274:	2d11      	cmp	r5, #17
 8006276:	d1c6      	bne.n	8006206 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8006278:	4b0d      	ldr	r3, [pc, #52]	; (80062b0 <HAL_ADC_ConfigChannel+0x128>)
 800627a:	685a      	ldr	r2, [r3, #4]
 800627c:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8006280:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8006282:	685a      	ldr	r2, [r3, #4]
 8006284:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8006288:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800628a:	4b0a      	ldr	r3, [pc, #40]	; (80062b4 <HAL_ADC_ConfigChannel+0x12c>)
 800628c:	429d      	cmp	r5, r3
 800628e:	d1ba      	bne.n	8006206 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8006290:	4b09      	ldr	r3, [pc, #36]	; (80062b8 <HAL_ADC_ConfigChannel+0x130>)
 8006292:	4a0a      	ldr	r2, [pc, #40]	; (80062bc <HAL_ADC_ConfigChannel+0x134>)
 8006294:	681b      	ldr	r3, [r3, #0]
 8006296:	fbb3 f3f2 	udiv	r3, r3, r2
 800629a:	220a      	movs	r2, #10
 800629c:	4353      	muls	r3, r2
        counter--;
 800629e:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 80062a0:	9b01      	ldr	r3, [sp, #4]
 80062a2:	2b00      	cmp	r3, #0
 80062a4:	d0af      	beq.n	8006206 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 80062a6:	9b01      	ldr	r3, [sp, #4]
 80062a8:	3b01      	subs	r3, #1
 80062aa:	e7f8      	b.n	800629e <HAL_ADC_ConfigChannel+0x116>
 80062ac:	40012000 	.word	0x40012000
 80062b0:	40012300 	.word	0x40012300
 80062b4:	10000012 	.word	0x10000012
 80062b8:	2000007c 	.word	0x2000007c
 80062bc:	000f4240 	.word	0x000f4240

080062c0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80062c0:	4907      	ldr	r1, [pc, #28]	; (80062e0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80062c2:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80062c4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80062c8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80062ca:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80062cc:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80062d0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80062d2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80062d4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80062d8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80062dc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80062de:	4770      	bx	lr
 80062e0:	e000ed00 	.word	0xe000ed00

080062e4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80062e4:	4b16      	ldr	r3, [pc, #88]	; (8006340 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80062e6:	b530      	push	{r4, r5, lr}
 80062e8:	68dc      	ldr	r4, [r3, #12]
 80062ea:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80062ee:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80062f2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80062f4:	2d04      	cmp	r5, #4
 80062f6:	bf28      	it	cs
 80062f8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80062fa:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80062fc:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006300:	bf8c      	ite	hi
 8006302:	3c03      	subhi	r4, #3
 8006304:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006306:	fa03 f505 	lsl.w	r5, r3, r5
 800630a:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800630e:	40a3      	lsls	r3, r4
 8006310:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006314:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8006316:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006318:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800631c:	bfac      	ite	ge
 800631e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006322:	4a08      	ldrlt	r2, [pc, #32]	; (8006344 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006324:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006328:	bfb8      	it	lt
 800632a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800632e:	b2db      	uxtb	r3, r3
 8006330:	bfaa      	itet	ge
 8006332:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006336:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006338:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800633c:	bd30      	pop	{r4, r5, pc}
 800633e:	bf00      	nop
 8006340:	e000ed00 	.word	0xe000ed00
 8006344:	e000ed14 	.word	0xe000ed14

08006348 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8006348:	2800      	cmp	r0, #0
 800634a:	db08      	blt.n	800635e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800634c:	0942      	lsrs	r2, r0, #5
 800634e:	2301      	movs	r3, #1
 8006350:	f000 001f 	and.w	r0, r0, #31
 8006354:	fa03 f000 	lsl.w	r0, r3, r0
 8006358:	4b01      	ldr	r3, [pc, #4]	; (8006360 <HAL_NVIC_EnableIRQ+0x18>)
 800635a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800635e:	4770      	bx	lr
 8006360:	e000e100 	.word	0xe000e100

08006364 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006364:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006366:	4604      	mov	r4, r0
 8006368:	b150      	cbz	r0, 8006380 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800636a:	7943      	ldrb	r3, [r0, #5]
 800636c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006370:	b913      	cbnz	r3, 8006378 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006372:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006374:	f7fb fd42 	bl	8001dfc <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8006378:	2301      	movs	r3, #1
 800637a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800637c:	2000      	movs	r0, #0
}
 800637e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006380:	2001      	movs	r0, #1
 8006382:	e7fc      	b.n	800637e <HAL_CRC_Init+0x1a>

08006384 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006384:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8006386:	4604      	mov	r4, r0
 8006388:	b168      	cbz	r0, 80063a6 <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800638a:	7903      	ldrb	r3, [r0, #4]
 800638c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006390:	b913      	cbnz	r3, 8006398 <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8006392:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006394:	f7fb fd4a 	bl	8001e2c <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8006398:	2302      	movs	r3, #2
 800639a:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800639c:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 800639e:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 80063a0:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 80063a2:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 80063a4:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80063a6:	2001      	movs	r0, #1
 80063a8:	e7fc      	b.n	80063a4 <HAL_DAC_Init+0x20>

080063aa <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 80063aa:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80063ac:	7943      	ldrb	r3, [r0, #5]
 80063ae:	2b01      	cmp	r3, #1
 80063b0:	f04f 0302 	mov.w	r3, #2
 80063b4:	d017      	beq.n	80063e6 <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 80063b6:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 80063b8:	6803      	ldr	r3, [r0, #0]
 80063ba:	2201      	movs	r2, #1
 80063bc:	681c      	ldr	r4, [r3, #0]
 80063be:	408a      	lsls	r2, r1
 80063c0:	4322      	orrs	r2, r4
 80063c2:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 80063c4:	b989      	cbnz	r1, 80063ea <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 80063c6:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80063c8:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80063ca:	074c      	lsls	r4, r1, #29
 80063cc:	d507      	bpl.n	80063de <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80063ce:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80063d2:	2a38      	cmp	r2, #56	; 0x38
 80063d4:	d103      	bne.n	80063de <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 80063d6:	685a      	ldr	r2, [r3, #4]
 80063d8:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80063dc:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80063de:	2301      	movs	r3, #1
 80063e0:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80063e2:	2300      	movs	r3, #0
 80063e4:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80063e6:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80063e8:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80063ea:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80063ec:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80063ee:	0349      	lsls	r1, r1, #13
 80063f0:	d5f5      	bpl.n	80063de <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80063f2:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80063f6:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80063fa:	d1f0      	bne.n	80063de <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80063fc:	685a      	ldr	r2, [r3, #4]
 80063fe:	f042 0202 	orr.w	r2, r2, #2
 8006402:	e7eb      	b.n	80063dc <HAL_DAC_Start+0x32>

08006404 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 8006404:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8006406:	7943      	ldrb	r3, [r0, #5]
 8006408:	2b01      	cmp	r3, #1
 800640a:	f04f 0302 	mov.w	r3, #2
 800640e:	d018      	beq.n	8006442 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 8006410:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 8006412:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 8006414:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 8006416:	f640 75fe 	movw	r5, #4094	; 0xffe
 800641a:	4095      	lsls	r5, r2
 800641c:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 8006420:	e9d1 3100 	ldrd	r3, r1, [r1]
 8006424:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 8006426:	4093      	lsls	r3, r2
 8006428:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 800642a:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 800642c:	6823      	ldr	r3, [r4, #0]
 800642e:	21c0      	movs	r1, #192	; 0xc0
 8006430:	fa01 f202 	lsl.w	r2, r1, r2
 8006434:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8006438:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 800643a:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 800643c:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 800643e:	2300      	movs	r3, #0
 8006440:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8006442:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8006444:	bd30      	pop	{r4, r5, pc}

08006446 <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8006446:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8006448:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 800644a:	2400      	movs	r4, #0
 800644c:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 800644e:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8006450:	b941      	cbnz	r1, 8006464 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8006452:	9901      	ldr	r1, [sp, #4]
 8006454:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006456:	440a      	add	r2, r1
 8006458:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800645a:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 800645c:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 800645e:	6013      	str	r3, [r2, #0]
}
 8006460:	b002      	add	sp, #8
 8006462:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006464:	9901      	ldr	r1, [sp, #4]
 8006466:	3114      	adds	r1, #20
 8006468:	e7f5      	b.n	8006456 <HAL_DAC_SetValue+0x10>

0800646a <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800646a:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800646c:	4604      	mov	r4, r0
 800646e:	b330      	cbz	r0, 80064be <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006470:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006474:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006478:	b91b      	cbnz	r3, 8006482 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800647a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800647e:	f7fb fd07 	bl	8001e90 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006482:	6822      	ldr	r2, [r4, #0]
 8006484:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006486:	2302      	movs	r3, #2
 8006488:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800648c:	6813      	ldr	r3, [r2, #0]
 800648e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006492:	430b      	orrs	r3, r1
 8006494:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8006496:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8006498:	68a1      	ldr	r1, [r4, #8]
 800649a:	f023 0307 	bic.w	r3, r3, #7
 800649e:	430b      	orrs	r3, r1
 80064a0:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80064a2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80064a4:	68e1      	ldr	r1, [r4, #12]
 80064a6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80064aa:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80064ae:	430b      	orrs	r3, r1
 80064b0:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80064b2:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80064b4:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80064b6:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80064b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80064bc:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80064be:	2001      	movs	r0, #1
 80064c0:	e7fc      	b.n	80064bc <HAL_DMA2D_Init+0x52>

080064c2 <HAL_DMA2D_LineEventCallback>:
 80064c2:	4770      	bx	lr

080064c4 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80064c4:	4770      	bx	lr

080064c6 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80064c6:	6803      	ldr	r3, [r0, #0]
{
 80064c8:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80064ca:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80064cc:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80064ce:	07f2      	lsls	r2, r6, #31
{
 80064d0:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80064d2:	d514      	bpl.n	80064fe <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80064d4:	05e9      	lsls	r1, r5, #23
 80064d6:	d512      	bpl.n	80064fe <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80064d8:	681a      	ldr	r2, [r3, #0]
 80064da:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80064de:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80064e0:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80064e2:	f042 0201 	orr.w	r2, r2, #1
 80064e6:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80064e8:	2201      	movs	r2, #1
 80064ea:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80064ec:	2304      	movs	r3, #4
 80064ee:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80064f2:	2300      	movs	r3, #0
 80064f4:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80064f8:	6943      	ldr	r3, [r0, #20]
 80064fa:	b103      	cbz	r3, 80064fe <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80064fc:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80064fe:	06b2      	lsls	r2, r6, #26
 8006500:	d516      	bpl.n	8006530 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8006502:	04ab      	lsls	r3, r5, #18
 8006504:	d514      	bpl.n	8006530 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8006506:	6823      	ldr	r3, [r4, #0]
 8006508:	681a      	ldr	r2, [r3, #0]
 800650a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800650e:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8006510:	2220      	movs	r2, #32
 8006512:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8006514:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006516:	f043 0302 	orr.w	r3, r3, #2
 800651a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800651c:	2304      	movs	r3, #4
 800651e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006522:	2300      	movs	r3, #0
 8006524:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8006528:	6963      	ldr	r3, [r4, #20]
 800652a:	b10b      	cbz	r3, 8006530 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800652c:	4620      	mov	r0, r4
 800652e:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8006530:	0730      	lsls	r0, r6, #28
 8006532:	d516      	bpl.n	8006562 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006534:	0529      	lsls	r1, r5, #20
 8006536:	d514      	bpl.n	8006562 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8006538:	6823      	ldr	r3, [r4, #0]
 800653a:	681a      	ldr	r2, [r3, #0]
 800653c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006540:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006542:	2208      	movs	r2, #8
 8006544:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006546:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006548:	f043 0304 	orr.w	r3, r3, #4
 800654c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800654e:	2304      	movs	r3, #4
 8006550:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006554:	2300      	movs	r3, #0
 8006556:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800655a:	6963      	ldr	r3, [r4, #20]
 800655c:	b10b      	cbz	r3, 8006562 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800655e:	4620      	mov	r0, r4
 8006560:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006562:	0772      	lsls	r2, r6, #29
 8006564:	d50b      	bpl.n	800657e <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006566:	056b      	lsls	r3, r5, #21
 8006568:	d509      	bpl.n	800657e <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800656a:	6823      	ldr	r3, [r4, #0]
 800656c:	681a      	ldr	r2, [r3, #0]
 800656e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006572:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006574:	2204      	movs	r2, #4
 8006576:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006578:	4620      	mov	r0, r4
 800657a:	f7ff ffa2 	bl	80064c2 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800657e:	07b0      	lsls	r0, r6, #30
 8006580:	d514      	bpl.n	80065ac <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006582:	05a9      	lsls	r1, r5, #22
 8006584:	d512      	bpl.n	80065ac <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006586:	6823      	ldr	r3, [r4, #0]
 8006588:	681a      	ldr	r2, [r3, #0]
 800658a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800658e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006590:	2202      	movs	r2, #2
 8006592:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006594:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006596:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006598:	2301      	movs	r3, #1
 800659a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800659e:	2300      	movs	r3, #0
 80065a0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 80065a4:	6923      	ldr	r3, [r4, #16]
 80065a6:	b10b      	cbz	r3, 80065ac <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80065a8:	4620      	mov	r0, r4
 80065aa:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80065ac:	06f2      	lsls	r2, r6, #27
 80065ae:	d513      	bpl.n	80065d8 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80065b0:	04eb      	lsls	r3, r5, #19
 80065b2:	d511      	bpl.n	80065d8 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80065b4:	6823      	ldr	r3, [r4, #0]
 80065b6:	681a      	ldr	r2, [r3, #0]
 80065b8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80065bc:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80065be:	2210      	movs	r2, #16
 80065c0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80065c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80065c4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80065c6:	2301      	movs	r3, #1
 80065c8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80065cc:	2300      	movs	r3, #0
 80065ce:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80065d2:	4620      	mov	r0, r4
 80065d4:	f7ff ff76 	bl	80064c4 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80065d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080065dc <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80065dc:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80065de:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80065e2:	2b01      	cmp	r3, #1
 80065e4:	f04f 0302 	mov.w	r3, #2
 80065e8:	d02b      	beq.n	8006642 <HAL_DMA2D_ConfigLayer+0x66>
 80065ea:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80065ec:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80065f0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80065f4:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80065f8:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80065fc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80065fe:	4f18      	ldr	r7, [pc, #96]	; (8006660 <HAL_DMA2D_ConfigLayer+0x84>)
 8006600:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006604:	3c09      	subs	r4, #9
 8006606:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8006608:	bf9c      	itt	ls
 800660a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800660e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006610:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006614:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8006616:	bf88      	it	hi
 8006618:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 800661c:	b999      	cbnz	r1, 8006646 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800661e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8006620:	4039      	ands	r1, r7
 8006622:	430a      	orrs	r2, r1
 8006624:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006626:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8006628:	6982      	ldr	r2, [r0, #24]
 800662a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800662c:	d803      	bhi.n	8006636 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800662e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8006630:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006634:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8006636:	2301      	movs	r3, #1
 8006638:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800663c:	2300      	movs	r3, #0
 800663e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006642:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006644:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006646:	69d9      	ldr	r1, [r3, #28]
 8006648:	4039      	ands	r1, r7
 800664a:	430a      	orrs	r2, r1
 800664c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800664e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006650:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006652:	6992      	ldr	r2, [r2, #24]
 8006654:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8006656:	bf9c      	itt	ls
 8006658:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800665c:	621d      	strls	r5, [r3, #32]
 800665e:	e7ea      	b.n	8006636 <HAL_DMA2D_ConfigLayer+0x5a>
 8006660:	00fcfff0 	.word	0x00fcfff0

08006664 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006664:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006668:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800682c <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800666c:	4a6d      	ldr	r2, [pc, #436]	; (8006824 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800666e:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006830 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006672:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006674:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8006676:	2401      	movs	r4, #1
 8006678:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800667a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800667e:	43ac      	bics	r4, r5
 8006680:	f040 80b7 	bne.w	80067f2 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006684:	684c      	ldr	r4, [r1, #4]
 8006686:	f024 0c10 	bic.w	ip, r4, #16
 800668a:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800668e:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006690:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006694:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006698:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800669a:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800669e:	d811      	bhi.n	80066c4 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 80066a0:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80066a2:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 80066a6:	68cf      	ldr	r7, [r1, #12]
 80066a8:	fa07 f70e 	lsl.w	r7, r7, lr
 80066ac:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80066b0:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80066b2:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80066b4:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80066b8:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80066bc:	409f      	lsls	r7, r3
 80066be:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80066c2:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80066c4:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80066c6:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80066ca:	688f      	ldr	r7, [r1, #8]
 80066cc:	fa07 f70e 	lsl.w	r7, r7, lr
 80066d0:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80066d4:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80066d8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80066da:	d116      	bne.n	800670a <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80066dc:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80066e0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80066e4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80066e8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80066ec:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80066f0:	f04f 0c0f 	mov.w	ip, #15
 80066f4:	fa0c fc0b 	lsl.w	ip, ip, fp
 80066f8:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80066fc:	690f      	ldr	r7, [r1, #16]
 80066fe:	fa07 f70b 	lsl.w	r7, r7, fp
 8006702:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8006706:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 800670a:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800670c:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800670e:	f004 0703 	and.w	r7, r4, #3
 8006712:	fa07 f70e 	lsl.w	r7, r7, lr
 8006716:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 8006718:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800671a:	00e5      	lsls	r5, r4, #3
 800671c:	d569      	bpl.n	80067f2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800671e:	f04f 0b00 	mov.w	fp, #0
 8006722:	f8cd b004 	str.w	fp, [sp, #4]
 8006726:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800672a:	4d3f      	ldr	r5, [pc, #252]	; (8006828 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800672c:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8006730:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8006734:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8006738:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 800673c:	9701      	str	r7, [sp, #4]
 800673e:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006740:	f023 0703 	bic.w	r7, r3, #3
 8006744:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8006748:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800674c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006750:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006754:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8006758:	f04f 0c0f 	mov.w	ip, #15
 800675c:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006760:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006762:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006766:	d04b      	beq.n	8006800 <HAL_GPIO_Init+0x19c>
 8006768:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800676c:	42a8      	cmp	r0, r5
 800676e:	d049      	beq.n	8006804 <HAL_GPIO_Init+0x1a0>
 8006770:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006774:	42a8      	cmp	r0, r5
 8006776:	d047      	beq.n	8006808 <HAL_GPIO_Init+0x1a4>
 8006778:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800677c:	42a8      	cmp	r0, r5
 800677e:	d045      	beq.n	800680c <HAL_GPIO_Init+0x1a8>
 8006780:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006784:	42a8      	cmp	r0, r5
 8006786:	d043      	beq.n	8006810 <HAL_GPIO_Init+0x1ac>
 8006788:	4548      	cmp	r0, r9
 800678a:	d043      	beq.n	8006814 <HAL_GPIO_Init+0x1b0>
 800678c:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006790:	42a8      	cmp	r0, r5
 8006792:	d041      	beq.n	8006818 <HAL_GPIO_Init+0x1b4>
 8006794:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006798:	42a8      	cmp	r0, r5
 800679a:	d03f      	beq.n	800681c <HAL_GPIO_Init+0x1b8>
 800679c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80067a0:	42a8      	cmp	r0, r5
 80067a2:	d03d      	beq.n	8006820 <HAL_GPIO_Init+0x1bc>
 80067a4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80067a8:	42a8      	cmp	r0, r5
 80067aa:	bf0c      	ite	eq
 80067ac:	2509      	moveq	r5, #9
 80067ae:	250a      	movne	r5, #10
 80067b0:	fa05 f50e 	lsl.w	r5, r5, lr
 80067b4:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80067b8:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 80067ba:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80067bc:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80067be:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80067c2:	bf0c      	ite	eq
 80067c4:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80067c6:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 80067c8:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 80067ca:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80067cc:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80067d0:	bf0c      	ite	eq
 80067d2:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80067d4:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80067d6:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80067d8:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80067da:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80067de:	bf0c      	ite	eq
 80067e0:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80067e2:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 80067e4:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 80067e6:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80067e8:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80067ea:	bf54      	ite	pl
 80067ec:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80067ee:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80067f0:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80067f2:	3301      	adds	r3, #1
 80067f4:	2b10      	cmp	r3, #16
 80067f6:	f47f af3d 	bne.w	8006674 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80067fa:	b003      	add	sp, #12
 80067fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006800:	465d      	mov	r5, fp
 8006802:	e7d5      	b.n	80067b0 <HAL_GPIO_Init+0x14c>
 8006804:	2501      	movs	r5, #1
 8006806:	e7d3      	b.n	80067b0 <HAL_GPIO_Init+0x14c>
 8006808:	2502      	movs	r5, #2
 800680a:	e7d1      	b.n	80067b0 <HAL_GPIO_Init+0x14c>
 800680c:	2503      	movs	r5, #3
 800680e:	e7cf      	b.n	80067b0 <HAL_GPIO_Init+0x14c>
 8006810:	2504      	movs	r5, #4
 8006812:	e7cd      	b.n	80067b0 <HAL_GPIO_Init+0x14c>
 8006814:	2505      	movs	r5, #5
 8006816:	e7cb      	b.n	80067b0 <HAL_GPIO_Init+0x14c>
 8006818:	2506      	movs	r5, #6
 800681a:	e7c9      	b.n	80067b0 <HAL_GPIO_Init+0x14c>
 800681c:	2507      	movs	r5, #7
 800681e:	e7c7      	b.n	80067b0 <HAL_GPIO_Init+0x14c>
 8006820:	2508      	movs	r5, #8
 8006822:	e7c5      	b.n	80067b0 <HAL_GPIO_Init+0x14c>
 8006824:	40013c00 	.word	0x40013c00
 8006828:	40020000 	.word	0x40020000
 800682c:	40023800 	.word	0x40023800
 8006830:	40021400 	.word	0x40021400

08006834 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006834:	b10a      	cbz	r2, 800683a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006836:	6181      	str	r1, [r0, #24]
  }
}
 8006838:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800683a:	0409      	lsls	r1, r1, #16
 800683c:	e7fb      	b.n	8006836 <HAL_GPIO_WritePin+0x2>

0800683e <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800683e:	6801      	ldr	r1, [r0, #0]
 8006840:	694b      	ldr	r3, [r1, #20]
 8006842:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006846:	f04f 0200 	mov.w	r2, #0
 800684a:	d010      	beq.n	800686e <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800684c:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006850:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006852:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006854:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006856:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800685a:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800685e:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006860:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006864:	f043 0304 	orr.w	r3, r3, #4
 8006868:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800686a:	2001      	movs	r0, #1
 800686c:	4770      	bx	lr
  }
  return HAL_OK;
 800686e:	4618      	mov	r0, r3
}
 8006870:	4770      	bx	lr

08006872 <I2C_WaitOnFlagUntilTimeout>:
{
 8006872:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006876:	4606      	mov	r6, r0
 8006878:	460f      	mov	r7, r1
 800687a:	4691      	mov	r9, r2
 800687c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800687e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006882:	6833      	ldr	r3, [r6, #0]
 8006884:	f1ba 0f01 	cmp.w	sl, #1
 8006888:	bf0c      	ite	eq
 800688a:	695c      	ldreq	r4, [r3, #20]
 800688c:	699c      	ldrne	r4, [r3, #24]
 800688e:	ea27 0404 	bic.w	r4, r7, r4
 8006892:	b2a4      	uxth	r4, r4
 8006894:	fab4 f484 	clz	r4, r4
 8006898:	0964      	lsrs	r4, r4, #5
 800689a:	45a1      	cmp	r9, r4
 800689c:	d001      	beq.n	80068a2 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800689e:	2000      	movs	r0, #0
 80068a0:	e017      	b.n	80068d2 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80068a2:	1c6a      	adds	r2, r5, #1
 80068a4:	d0ee      	beq.n	8006884 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80068a6:	f7ff fb37 	bl	8005f18 <HAL_GetTick>
 80068aa:	9b08      	ldr	r3, [sp, #32]
 80068ac:	1ac0      	subs	r0, r0, r3
 80068ae:	42a8      	cmp	r0, r5
 80068b0:	d801      	bhi.n	80068b6 <I2C_WaitOnFlagUntilTimeout+0x44>
 80068b2:	2d00      	cmp	r5, #0
 80068b4:	d1e5      	bne.n	8006882 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80068b6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80068b8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80068ba:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80068bc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80068c0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80068c4:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80068c6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80068ca:	f042 0220 	orr.w	r2, r2, #32
 80068ce:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 80068d0:	2001      	movs	r0, #1
}
 80068d2:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080068d6 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80068d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80068da:	4604      	mov	r4, r0
 80068dc:	460f      	mov	r7, r1
 80068de:	4616      	mov	r6, r2
 80068e0:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80068e2:	6825      	ldr	r5, [r4, #0]
 80068e4:	6968      	ldr	r0, [r5, #20]
 80068e6:	ea27 0000 	bic.w	r0, r7, r0
 80068ea:	b280      	uxth	r0, r0
 80068ec:	b1b8      	cbz	r0, 800691e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80068ee:	696b      	ldr	r3, [r5, #20]
 80068f0:	055a      	lsls	r2, r3, #21
 80068f2:	d516      	bpl.n	8006922 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068f4:	682b      	ldr	r3, [r5, #0]
 80068f6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80068fa:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80068fc:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006900:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006902:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006904:	2300      	movs	r3, #0
 8006906:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006908:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800690c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006910:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006912:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006916:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006918:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800691c:	2001      	movs	r0, #1
}
 800691e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006922:	1c73      	adds	r3, r6, #1
 8006924:	d0de      	beq.n	80068e4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006926:	f7ff faf7 	bl	8005f18 <HAL_GetTick>
 800692a:	eba0 0008 	sub.w	r0, r0, r8
 800692e:	42b0      	cmp	r0, r6
 8006930:	d801      	bhi.n	8006936 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006932:	2e00      	cmp	r6, #0
 8006934:	d1d5      	bne.n	80068e2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006936:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006938:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800693a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800693c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006940:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006944:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006946:	f042 0220 	orr.w	r2, r2, #32
 800694a:	e7e4      	b.n	8006916 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800694c <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800694c:	b570      	push	{r4, r5, r6, lr}
 800694e:	4604      	mov	r4, r0
 8006950:	460d      	mov	r5, r1
 8006952:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006954:	6821      	ldr	r1, [r4, #0]
 8006956:	694b      	ldr	r3, [r1, #20]
 8006958:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800695c:	d001      	beq.n	8006962 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800695e:	2000      	movs	r0, #0
 8006960:	e010      	b.n	8006984 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006962:	694a      	ldr	r2, [r1, #20]
 8006964:	06d2      	lsls	r2, r2, #27
 8006966:	d50e      	bpl.n	8006986 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006968:	f06f 0210 	mvn.w	r2, #16
 800696c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800696e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006970:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006972:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006976:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800697a:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800697c:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800697e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006982:	2001      	movs	r0, #1
}
 8006984:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006986:	f7ff fac7 	bl	8005f18 <HAL_GetTick>
 800698a:	1b80      	subs	r0, r0, r6
 800698c:	42a8      	cmp	r0, r5
 800698e:	d801      	bhi.n	8006994 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006990:	2d00      	cmp	r5, #0
 8006992:	d1df      	bne.n	8006954 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006994:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8006996:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006998:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800699a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800699e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80069a2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80069a4:	f042 0220 	orr.w	r2, r2, #32
 80069a8:	e7e8      	b.n	800697c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080069aa <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80069aa:	b570      	push	{r4, r5, r6, lr}
 80069ac:	4604      	mov	r4, r0
 80069ae:	460d      	mov	r5, r1
 80069b0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80069b2:	6823      	ldr	r3, [r4, #0]
 80069b4:	695b      	ldr	r3, [r3, #20]
 80069b6:	075b      	lsls	r3, r3, #29
 80069b8:	d501      	bpl.n	80069be <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80069ba:	2000      	movs	r0, #0
}
 80069bc:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80069be:	4620      	mov	r0, r4
 80069c0:	f7ff ff3d 	bl	800683e <I2C_IsAcknowledgeFailed>
 80069c4:	b9a8      	cbnz	r0, 80069f2 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80069c6:	1c6a      	adds	r2, r5, #1
 80069c8:	d0f3      	beq.n	80069b2 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80069ca:	f7ff faa5 	bl	8005f18 <HAL_GetTick>
 80069ce:	1b80      	subs	r0, r0, r6
 80069d0:	42a8      	cmp	r0, r5
 80069d2:	d801      	bhi.n	80069d8 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80069d4:	2d00      	cmp	r5, #0
 80069d6:	d1ec      	bne.n	80069b2 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80069d8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80069da:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80069dc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80069de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80069e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80069e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80069e8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80069ec:	f042 0220 	orr.w	r2, r2, #32
 80069f0:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80069f2:	2001      	movs	r0, #1
 80069f4:	e7e2      	b.n	80069bc <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080069f6 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80069f6:	b570      	push	{r4, r5, r6, lr}
 80069f8:	4604      	mov	r4, r0
 80069fa:	460d      	mov	r5, r1
 80069fc:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80069fe:	6823      	ldr	r3, [r4, #0]
 8006a00:	695b      	ldr	r3, [r3, #20]
 8006a02:	061b      	lsls	r3, r3, #24
 8006a04:	d501      	bpl.n	8006a0a <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006a06:	2000      	movs	r0, #0
}
 8006a08:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006a0a:	4620      	mov	r0, r4
 8006a0c:	f7ff ff17 	bl	800683e <I2C_IsAcknowledgeFailed>
 8006a10:	b9a8      	cbnz	r0, 8006a3e <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006a12:	1c6a      	adds	r2, r5, #1
 8006a14:	d0f3      	beq.n	80069fe <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006a16:	f7ff fa7f 	bl	8005f18 <HAL_GetTick>
 8006a1a:	1b80      	subs	r0, r0, r6
 8006a1c:	42a8      	cmp	r0, r5
 8006a1e:	d801      	bhi.n	8006a24 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006a20:	2d00      	cmp	r5, #0
 8006a22:	d1ec      	bne.n	80069fe <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006a24:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006a26:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006a28:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006a2a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006a2e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006a32:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006a34:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006a38:	f042 0220 	orr.w	r2, r2, #32
 8006a3c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006a3e:	2001      	movs	r0, #1
 8006a40:	e7e2      	b.n	8006a08 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006a44 <I2C_RequestMemoryWrite>:
{
 8006a44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006a48:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006a4a:	6802      	ldr	r2, [r0, #0]
{
 8006a4c:	b085      	sub	sp, #20
 8006a4e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006a52:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006a54:	6813      	ldr	r3, [r2, #0]
 8006a56:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006a5a:	6013      	str	r3, [r2, #0]
{
 8006a5c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006a5e:	463b      	mov	r3, r7
 8006a60:	f8cd 8000 	str.w	r8, [sp]
 8006a64:	2200      	movs	r2, #0
 8006a66:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006a6a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006a6c:	f7ff ff01 	bl	8006872 <I2C_WaitOnFlagUntilTimeout>
 8006a70:	6823      	ldr	r3, [r4, #0]
 8006a72:	b138      	cbz	r0, 8006a84 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006a74:	681b      	ldr	r3, [r3, #0]
 8006a76:	05db      	lsls	r3, r3, #23
 8006a78:	d502      	bpl.n	8006a80 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006a7a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006a7e:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006a80:	2003      	movs	r0, #3
 8006a82:	e00a      	b.n	8006a9a <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006a84:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006a88:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006a8a:	4919      	ldr	r1, [pc, #100]	; (8006af0 <I2C_RequestMemoryWrite+0xac>)
 8006a8c:	4643      	mov	r3, r8
 8006a8e:	463a      	mov	r2, r7
 8006a90:	4620      	mov	r0, r4
 8006a92:	f7ff ff20 	bl	80068d6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006a96:	b118      	cbz	r0, 8006aa0 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006a98:	2001      	movs	r0, #1
}
 8006a9a:	b005      	add	sp, #20
 8006a9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006aa0:	6823      	ldr	r3, [r4, #0]
 8006aa2:	9003      	str	r0, [sp, #12]
 8006aa4:	695a      	ldr	r2, [r3, #20]
 8006aa6:	9203      	str	r2, [sp, #12]
 8006aa8:	699b      	ldr	r3, [r3, #24]
 8006aaa:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006aac:	4642      	mov	r2, r8
 8006aae:	4639      	mov	r1, r7
 8006ab0:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006ab2:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006ab4:	f7ff ff9f 	bl	80069f6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006ab8:	b140      	cbz	r0, 8006acc <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006aba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006abc:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006abe:	bf01      	itttt	eq
 8006ac0:	6822      	ldreq	r2, [r4, #0]
 8006ac2:	6813      	ldreq	r3, [r2, #0]
 8006ac4:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006ac8:	6013      	streq	r3, [r2, #0]
 8006aca:	e7e5      	b.n	8006a98 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006acc:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006ad0:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006ad2:	d102      	bne.n	8006ada <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006ad4:	b2ed      	uxtb	r5, r5
 8006ad6:	611d      	str	r5, [r3, #16]
 8006ad8:	e7df      	b.n	8006a9a <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006ada:	0a2a      	lsrs	r2, r5, #8
 8006adc:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006ade:	4639      	mov	r1, r7
 8006ae0:	4642      	mov	r2, r8
 8006ae2:	4620      	mov	r0, r4
 8006ae4:	f7ff ff87 	bl	80069f6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006ae8:	2800      	cmp	r0, #0
 8006aea:	d1e6      	bne.n	8006aba <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006aec:	6823      	ldr	r3, [r4, #0]
 8006aee:	e7f1      	b.n	8006ad4 <I2C_RequestMemoryWrite+0x90>
 8006af0:	00010002 	.word	0x00010002

08006af4 <I2C_RequestMemoryRead>:
{
 8006af4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006af8:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006afa:	6803      	ldr	r3, [r0, #0]
{
 8006afc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006afe:	681a      	ldr	r2, [r3, #0]
 8006b00:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006b04:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006b06:	681a      	ldr	r2, [r3, #0]
{
 8006b08:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006b0c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006b10:	601a      	str	r2, [r3, #0]
{
 8006b12:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006b14:	463b      	mov	r3, r7
 8006b16:	f8cd 8000 	str.w	r8, [sp]
 8006b1a:	2200      	movs	r2, #0
 8006b1c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006b20:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006b22:	f7ff fea6 	bl	8006872 <I2C_WaitOnFlagUntilTimeout>
 8006b26:	6823      	ldr	r3, [r4, #0]
 8006b28:	b148      	cbz	r0, 8006b3e <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006b2a:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006b2c:	05db      	lsls	r3, r3, #23
 8006b2e:	d502      	bpl.n	8006b36 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006b30:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006b34:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006b36:	2003      	movs	r0, #3
}
 8006b38:	b004      	add	sp, #16
 8006b3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006b3e:	fa5f f986 	uxtb.w	r9, r6
 8006b42:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006b46:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006b48:	492a      	ldr	r1, [pc, #168]	; (8006bf4 <I2C_RequestMemoryRead+0x100>)
 8006b4a:	4643      	mov	r3, r8
 8006b4c:	463a      	mov	r2, r7
 8006b4e:	4620      	mov	r0, r4
 8006b50:	f7ff fec1 	bl	80068d6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006b54:	b108      	cbz	r0, 8006b5a <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006b56:	2001      	movs	r0, #1
 8006b58:	e7ee      	b.n	8006b38 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006b5a:	6823      	ldr	r3, [r4, #0]
 8006b5c:	9003      	str	r0, [sp, #12]
 8006b5e:	695a      	ldr	r2, [r3, #20]
 8006b60:	9203      	str	r2, [sp, #12]
 8006b62:	699b      	ldr	r3, [r3, #24]
 8006b64:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006b66:	4642      	mov	r2, r8
 8006b68:	4639      	mov	r1, r7
 8006b6a:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006b6c:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006b6e:	f7ff ff42 	bl	80069f6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006b72:	b140      	cbz	r0, 8006b86 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006b74:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006b76:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006b78:	bf01      	itttt	eq
 8006b7a:	6822      	ldreq	r2, [r4, #0]
 8006b7c:	6813      	ldreq	r3, [r2, #0]
 8006b7e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006b82:	6013      	streq	r3, [r2, #0]
 8006b84:	e7e7      	b.n	8006b56 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006b86:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006b8a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006b8c:	d11a      	bne.n	8006bc4 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006b8e:	b2ed      	uxtb	r5, r5
 8006b90:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006b92:	4642      	mov	r2, r8
 8006b94:	4639      	mov	r1, r7
 8006b96:	4620      	mov	r0, r4
 8006b98:	f7ff ff2d 	bl	80069f6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006b9c:	2800      	cmp	r0, #0
 8006b9e:	d1e9      	bne.n	8006b74 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006ba0:	6822      	ldr	r2, [r4, #0]
 8006ba2:	6813      	ldr	r3, [r2, #0]
 8006ba4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006ba8:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006baa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006bae:	4602      	mov	r2, r0
 8006bb0:	f8cd 8000 	str.w	r8, [sp]
 8006bb4:	463b      	mov	r3, r7
 8006bb6:	4620      	mov	r0, r4
 8006bb8:	f7ff fe5b 	bl	8006872 <I2C_WaitOnFlagUntilTimeout>
 8006bbc:	6822      	ldr	r2, [r4, #0]
 8006bbe:	b160      	cbz	r0, 8006bda <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006bc0:	6813      	ldr	r3, [r2, #0]
 8006bc2:	e7b3      	b.n	8006b2c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006bc4:	0a2a      	lsrs	r2, r5, #8
 8006bc6:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006bc8:	4639      	mov	r1, r7
 8006bca:	4642      	mov	r2, r8
 8006bcc:	4620      	mov	r0, r4
 8006bce:	f7ff ff12 	bl	80069f6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006bd2:	2800      	cmp	r0, #0
 8006bd4:	d1ce      	bne.n	8006b74 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006bd6:	6823      	ldr	r3, [r4, #0]
 8006bd8:	e7d9      	b.n	8006b8e <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006bda:	f049 0301 	orr.w	r3, r9, #1
 8006bde:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006be0:	4904      	ldr	r1, [pc, #16]	; (8006bf4 <I2C_RequestMemoryRead+0x100>)
 8006be2:	4643      	mov	r3, r8
 8006be4:	463a      	mov	r2, r7
 8006be6:	4620      	mov	r0, r4
 8006be8:	f7ff fe75 	bl	80068d6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8006bec:	3800      	subs	r0, #0
 8006bee:	bf18      	it	ne
 8006bf0:	2001      	movne	r0, #1
 8006bf2:	e7a1      	b.n	8006b38 <I2C_RequestMemoryRead+0x44>
 8006bf4:	00010002 	.word	0x00010002

08006bf8 <HAL_I2C_Init>:
{
 8006bf8:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8006bfa:	4604      	mov	r4, r0
 8006bfc:	b908      	cbnz	r0, 8006c02 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8006bfe:	2001      	movs	r0, #1
}
 8006c00:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006c02:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006c06:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006c0a:	b91b      	cbnz	r3, 8006c14 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006c0c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006c10:	f7fb f960 	bl	8001ed4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006c14:	2324      	movs	r3, #36	; 0x24
 8006c16:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006c1a:	6823      	ldr	r3, [r4, #0]
 8006c1c:	681a      	ldr	r2, [r3, #0]
 8006c1e:	f022 0201 	bic.w	r2, r2, #1
 8006c22:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006c24:	681a      	ldr	r2, [r3, #0]
 8006c26:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006c2a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006c2c:	681a      	ldr	r2, [r3, #0]
 8006c2e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006c32:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006c34:	f000 fe6e 	bl	8007914 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006c38:	4b3f      	ldr	r3, [pc, #252]	; (8006d38 <HAL_I2C_Init+0x140>)
 8006c3a:	6865      	ldr	r5, [r4, #4]
 8006c3c:	429d      	cmp	r5, r3
 8006c3e:	bf94      	ite	ls
 8006c40:	4b3e      	ldrls	r3, [pc, #248]	; (8006d3c <HAL_I2C_Init+0x144>)
 8006c42:	4b3f      	ldrhi	r3, [pc, #252]	; (8006d40 <HAL_I2C_Init+0x148>)
 8006c44:	4298      	cmp	r0, r3
 8006c46:	bf8c      	ite	hi
 8006c48:	2300      	movhi	r3, #0
 8006c4a:	2301      	movls	r3, #1
 8006c4c:	2b00      	cmp	r3, #0
 8006c4e:	d1d6      	bne.n	8006bfe <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006c50:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006c52:	4e39      	ldr	r6, [pc, #228]	; (8006d38 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006c54:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006c56:	493b      	ldr	r1, [pc, #236]	; (8006d44 <HAL_I2C_Init+0x14c>)
 8006c58:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006c5c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006c60:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006c62:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006c64:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006c66:	bf88      	it	hi
 8006c68:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006c6c:	6a13      	ldr	r3, [r2, #32]
 8006c6e:	bf88      	it	hi
 8006c70:	4371      	mulhi	r1, r6
 8006c72:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006c76:	bf84      	itt	hi
 8006c78:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006c7c:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006c80:	3101      	adds	r1, #1
 8006c82:	4319      	orrs	r1, r3
 8006c84:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006c86:	69d1      	ldr	r1, [r2, #28]
 8006c88:	1e43      	subs	r3, r0, #1
 8006c8a:	482b      	ldr	r0, [pc, #172]	; (8006d38 <HAL_I2C_Init+0x140>)
 8006c8c:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006c90:	4285      	cmp	r5, r0
 8006c92:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006c96:	d832      	bhi.n	8006cfe <HAL_I2C_Init+0x106>
 8006c98:	006d      	lsls	r5, r5, #1
 8006c9a:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006c9e:	fbb3 f3f5 	udiv	r3, r3, r5
 8006ca2:	3301      	adds	r3, #1
 8006ca4:	4203      	tst	r3, r0
 8006ca6:	d042      	beq.n	8006d2e <HAL_I2C_Init+0x136>
 8006ca8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006cac:	430b      	orrs	r3, r1
 8006cae:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006cb0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006cb4:	6811      	ldr	r1, [r2, #0]
 8006cb6:	4303      	orrs	r3, r0
 8006cb8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006cbc:	430b      	orrs	r3, r1
 8006cbe:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006cc0:	6891      	ldr	r1, [r2, #8]
 8006cc2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006cc6:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006cca:	4303      	orrs	r3, r0
 8006ccc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006cd0:	430b      	orrs	r3, r1
 8006cd2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006cd4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006cd8:	68d1      	ldr	r1, [r2, #12]
 8006cda:	4303      	orrs	r3, r0
 8006cdc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006ce0:	430b      	orrs	r3, r1
 8006ce2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006ce4:	6813      	ldr	r3, [r2, #0]
 8006ce6:	f043 0301 	orr.w	r3, r3, #1
 8006cea:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006cec:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006cee:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006cf0:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006cf2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006cf6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006cf8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006cfc:	e780      	b.n	8006c00 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006cfe:	68a0      	ldr	r0, [r4, #8]
 8006d00:	b950      	cbnz	r0, 8006d18 <HAL_I2C_Init+0x120>
 8006d02:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006d06:	fbb3 f3f5 	udiv	r3, r3, r5
 8006d0a:	3301      	adds	r3, #1
 8006d0c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006d10:	b17b      	cbz	r3, 8006d32 <HAL_I2C_Init+0x13a>
 8006d12:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006d16:	e7c9      	b.n	8006cac <HAL_I2C_Init+0xb4>
 8006d18:	2019      	movs	r0, #25
 8006d1a:	4345      	muls	r5, r0
 8006d1c:	fbb3 f3f5 	udiv	r3, r3, r5
 8006d20:	3301      	adds	r3, #1
 8006d22:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006d26:	b123      	cbz	r3, 8006d32 <HAL_I2C_Init+0x13a>
 8006d28:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006d2c:	e7be      	b.n	8006cac <HAL_I2C_Init+0xb4>
 8006d2e:	2304      	movs	r3, #4
 8006d30:	e7bc      	b.n	8006cac <HAL_I2C_Init+0xb4>
 8006d32:	2301      	movs	r3, #1
 8006d34:	e7ba      	b.n	8006cac <HAL_I2C_Init+0xb4>
 8006d36:	bf00      	nop
 8006d38:	000186a0 	.word	0x000186a0
 8006d3c:	001e847f 	.word	0x001e847f
 8006d40:	003d08ff 	.word	0x003d08ff
 8006d44:	000f4240 	.word	0x000f4240

08006d48 <HAL_I2C_Mem_Write>:
{
 8006d48:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006d4c:	4604      	mov	r4, r0
 8006d4e:	4699      	mov	r9, r3
 8006d50:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006d52:	460f      	mov	r7, r1
 8006d54:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006d56:	f7ff f8df 	bl	8005f18 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d5a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006d5e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006d60:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d62:	d003      	beq.n	8006d6c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006d64:	2002      	movs	r0, #2
}
 8006d66:	b003      	add	sp, #12
 8006d68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006d6c:	9000      	str	r0, [sp, #0]
 8006d6e:	493c      	ldr	r1, [pc, #240]	; (8006e60 <HAL_I2C_Mem_Write+0x118>)
 8006d70:	2319      	movs	r3, #25
 8006d72:	2201      	movs	r2, #1
 8006d74:	4620      	mov	r0, r4
 8006d76:	f7ff fd7c 	bl	8006872 <I2C_WaitOnFlagUntilTimeout>
 8006d7a:	2800      	cmp	r0, #0
 8006d7c:	d1f2      	bne.n	8006d64 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006d7e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006d82:	2b01      	cmp	r3, #1
 8006d84:	d0ee      	beq.n	8006d64 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006d86:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006d88:	2301      	movs	r3, #1
 8006d8a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006d8e:	6803      	ldr	r3, [r0, #0]
 8006d90:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006d92:	bf5e      	ittt	pl
 8006d94:	6803      	ldrpl	r3, [r0, #0]
 8006d96:	f043 0301 	orrpl.w	r3, r3, #1
 8006d9a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006d9c:	6803      	ldr	r3, [r0, #0]
 8006d9e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006da2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006da4:	2321      	movs	r3, #33	; 0x21
 8006da6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006daa:	2340      	movs	r3, #64	; 0x40
 8006dac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006db0:	2300      	movs	r3, #0
 8006db2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006db4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006db6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006db8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006dbc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006dbe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006dc0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006dc2:	4b28      	ldr	r3, [pc, #160]	; (8006e64 <HAL_I2C_Mem_Write+0x11c>)
 8006dc4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006dc6:	e9cd 6500 	strd	r6, r5, [sp]
 8006dca:	464b      	mov	r3, r9
 8006dcc:	4642      	mov	r2, r8
 8006dce:	4639      	mov	r1, r7
 8006dd0:	4620      	mov	r0, r4
 8006dd2:	f7ff fe37 	bl	8006a44 <I2C_RequestMemoryWrite>
 8006dd6:	2800      	cmp	r0, #0
 8006dd8:	d02a      	beq.n	8006e30 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006dda:	2001      	movs	r0, #1
 8006ddc:	e7c3      	b.n	8006d66 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006dde:	f7ff fe0a 	bl	80069f6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006de2:	b140      	cbz	r0, 8006df6 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006de4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006de6:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006de8:	bf01      	itttt	eq
 8006dea:	6822      	ldreq	r2, [r4, #0]
 8006dec:	6813      	ldreq	r3, [r2, #0]
 8006dee:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006df2:	6013      	streq	r3, [r2, #0]
 8006df4:	e7f1      	b.n	8006dda <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006df6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006df8:	6827      	ldr	r7, [r4, #0]
 8006dfa:	461a      	mov	r2, r3
 8006dfc:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006e00:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006e02:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006e04:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006e06:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006e08:	3a01      	subs	r2, #1
 8006e0a:	b292      	uxth	r2, r2
 8006e0c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006e0e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006e10:	1e48      	subs	r0, r1, #1
 8006e12:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006e14:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006e16:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006e18:	d50a      	bpl.n	8006e30 <HAL_I2C_Mem_Write+0xe8>
 8006e1a:	b148      	cbz	r0, 8006e30 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006e1c:	785a      	ldrb	r2, [r3, #1]
 8006e1e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006e20:	3302      	adds	r3, #2
 8006e22:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006e24:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e26:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006e28:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006e2a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006e2c:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006e2e:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006e30:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006e32:	462a      	mov	r2, r5
 8006e34:	4631      	mov	r1, r6
 8006e36:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006e38:	2b00      	cmp	r3, #0
 8006e3a:	d1d0      	bne.n	8006dde <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006e3c:	f7ff fdb5 	bl	80069aa <I2C_WaitOnBTFFlagUntilTimeout>
 8006e40:	2800      	cmp	r0, #0
 8006e42:	d1cf      	bne.n	8006de4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006e44:	6822      	ldr	r2, [r4, #0]
 8006e46:	6813      	ldr	r3, [r2, #0]
 8006e48:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006e4c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006e4e:	2320      	movs	r3, #32
 8006e50:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006e54:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006e58:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006e5c:	e783      	b.n	8006d66 <HAL_I2C_Mem_Write+0x1e>
 8006e5e:	bf00      	nop
 8006e60:	00100002 	.word	0x00100002
 8006e64:	ffff0000 	.word	0xffff0000

08006e68 <HAL_I2C_Mem_Read>:
{
 8006e68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006e6c:	4604      	mov	r4, r0
 8006e6e:	b087      	sub	sp, #28
 8006e70:	4699      	mov	r9, r3
 8006e72:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006e74:	460d      	mov	r5, r1
 8006e76:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006e78:	f7ff f84e 	bl	8005f18 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e7c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006e80:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006e82:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e84:	d004      	beq.n	8006e90 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006e86:	2502      	movs	r5, #2
}
 8006e88:	4628      	mov	r0, r5
 8006e8a:	b007      	add	sp, #28
 8006e8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006e90:	9000      	str	r0, [sp, #0]
 8006e92:	4976      	ldr	r1, [pc, #472]	; (800706c <HAL_I2C_Mem_Read+0x204>)
 8006e94:	2319      	movs	r3, #25
 8006e96:	2201      	movs	r2, #1
 8006e98:	4620      	mov	r0, r4
 8006e9a:	f7ff fcea 	bl	8006872 <I2C_WaitOnFlagUntilTimeout>
 8006e9e:	2800      	cmp	r0, #0
 8006ea0:	d1f1      	bne.n	8006e86 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006ea2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006ea6:	2b01      	cmp	r3, #1
 8006ea8:	d0ed      	beq.n	8006e86 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006eaa:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006eac:	2301      	movs	r3, #1
 8006eae:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006eb2:	6803      	ldr	r3, [r0, #0]
 8006eb4:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006eb6:	bf5e      	ittt	pl
 8006eb8:	6803      	ldrpl	r3, [r0, #0]
 8006eba:	f043 0301 	orrpl.w	r3, r3, #1
 8006ebe:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006ec0:	6803      	ldr	r3, [r0, #0]
 8006ec2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006ec6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006ec8:	2322      	movs	r3, #34	; 0x22
 8006eca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006ece:	2340      	movs	r3, #64	; 0x40
 8006ed0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006ed4:	2300      	movs	r3, #0
 8006ed6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006ed8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006eda:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006edc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006ee0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006ee2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006ee4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006ee6:	4b62      	ldr	r3, [pc, #392]	; (8007070 <HAL_I2C_Mem_Read+0x208>)
 8006ee8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006eea:	4629      	mov	r1, r5
 8006eec:	e9cd 7600 	strd	r7, r6, [sp]
 8006ef0:	464b      	mov	r3, r9
 8006ef2:	4642      	mov	r2, r8
 8006ef4:	4620      	mov	r0, r4
 8006ef6:	f7ff fdfd 	bl	8006af4 <I2C_RequestMemoryRead>
 8006efa:	4605      	mov	r5, r0
 8006efc:	b108      	cbz	r0, 8006f02 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006efe:	2501      	movs	r5, #1
 8006f00:	e7c2      	b.n	8006e88 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006f02:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f04:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006f06:	b9b2      	cbnz	r2, 8006f36 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f08:	9002      	str	r0, [sp, #8]
 8006f0a:	695a      	ldr	r2, [r3, #20]
 8006f0c:	9202      	str	r2, [sp, #8]
 8006f0e:	699a      	ldr	r2, [r3, #24]
 8006f10:	9202      	str	r2, [sp, #8]
 8006f12:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006f14:	681a      	ldr	r2, [r3, #0]
 8006f16:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006f1a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006f1c:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8007074 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006f20:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006f22:	2b00      	cmp	r3, #0
 8006f24:	d12c      	bne.n	8006f80 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006f26:	2220      	movs	r2, #32
 8006f28:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006f2c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006f30:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006f34:	e7a8      	b.n	8006e88 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006f36:	2a01      	cmp	r2, #1
 8006f38:	d10a      	bne.n	8006f50 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006f3a:	681a      	ldr	r2, [r3, #0]
 8006f3c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006f40:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f42:	9003      	str	r0, [sp, #12]
 8006f44:	695a      	ldr	r2, [r3, #20]
 8006f46:	9203      	str	r2, [sp, #12]
 8006f48:	699a      	ldr	r2, [r3, #24]
 8006f4a:	9203      	str	r2, [sp, #12]
 8006f4c:	9a03      	ldr	r2, [sp, #12]
 8006f4e:	e7e1      	b.n	8006f14 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006f50:	2a02      	cmp	r2, #2
 8006f52:	d10e      	bne.n	8006f72 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006f54:	681a      	ldr	r2, [r3, #0]
 8006f56:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006f5a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006f5c:	681a      	ldr	r2, [r3, #0]
 8006f5e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006f62:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f64:	9004      	str	r0, [sp, #16]
 8006f66:	695a      	ldr	r2, [r3, #20]
 8006f68:	9204      	str	r2, [sp, #16]
 8006f6a:	699b      	ldr	r3, [r3, #24]
 8006f6c:	9304      	str	r3, [sp, #16]
 8006f6e:	9b04      	ldr	r3, [sp, #16]
 8006f70:	e7d4      	b.n	8006f1c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f72:	9005      	str	r0, [sp, #20]
 8006f74:	695a      	ldr	r2, [r3, #20]
 8006f76:	9205      	str	r2, [sp, #20]
 8006f78:	699b      	ldr	r3, [r3, #24]
 8006f7a:	9305      	str	r3, [sp, #20]
 8006f7c:	9b05      	ldr	r3, [sp, #20]
 8006f7e:	e7cd      	b.n	8006f1c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006f80:	2b03      	cmp	r3, #3
 8006f82:	d856      	bhi.n	8007032 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006f84:	2b01      	cmp	r3, #1
 8006f86:	d115      	bne.n	8006fb4 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006f88:	4632      	mov	r2, r6
 8006f8a:	4639      	mov	r1, r7
 8006f8c:	4620      	mov	r0, r4
 8006f8e:	f7ff fcdd 	bl	800694c <I2C_WaitOnRXNEFlagUntilTimeout>
 8006f92:	2800      	cmp	r0, #0
 8006f94:	d1b3      	bne.n	8006efe <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006f96:	6823      	ldr	r3, [r4, #0]
 8006f98:	691a      	ldr	r2, [r3, #16]
 8006f9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f9c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006f9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006fa0:	3301      	adds	r3, #1
 8006fa2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006fa4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006fa6:	3b01      	subs	r3, #1
 8006fa8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006faa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006fac:	3b01      	subs	r3, #1
 8006fae:	b29b      	uxth	r3, r3
 8006fb0:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006fb2:	e7b5      	b.n	8006f20 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006fb4:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006fb6:	9600      	str	r6, [sp, #0]
 8006fb8:	463b      	mov	r3, r7
 8006fba:	f04f 0200 	mov.w	r2, #0
 8006fbe:	4641      	mov	r1, r8
 8006fc0:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006fc2:	d119      	bne.n	8006ff8 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006fc4:	f7ff fc55 	bl	8006872 <I2C_WaitOnFlagUntilTimeout>
 8006fc8:	2800      	cmp	r0, #0
 8006fca:	d198      	bne.n	8006efe <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006fcc:	6823      	ldr	r3, [r4, #0]
 8006fce:	681a      	ldr	r2, [r3, #0]
 8006fd0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006fd4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006fd6:	691a      	ldr	r2, [r3, #16]
 8006fd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006fda:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006fdc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006fde:	1c53      	adds	r3, r2, #1
 8006fe0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006fe2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006fe4:	3b01      	subs	r3, #1
 8006fe6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006fe8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006fea:	3b01      	subs	r3, #1
 8006fec:	b29b      	uxth	r3, r3
 8006fee:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ff0:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ff2:	691b      	ldr	r3, [r3, #16]
 8006ff4:	7053      	strb	r3, [r2, #1]
 8006ff6:	e7d2      	b.n	8006f9e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006ff8:	f7ff fc3b 	bl	8006872 <I2C_WaitOnFlagUntilTimeout>
 8006ffc:	2800      	cmp	r0, #0
 8006ffe:	f47f af7e 	bne.w	8006efe <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007002:	6823      	ldr	r3, [r4, #0]
 8007004:	681a      	ldr	r2, [r3, #0]
 8007006:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800700a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800700c:	691a      	ldr	r2, [r3, #16]
 800700e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007010:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007012:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007014:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8007016:	3301      	adds	r3, #1
 8007018:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800701a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800701c:	3b01      	subs	r3, #1
 800701e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007020:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007022:	3b01      	subs	r3, #1
 8007024:	b29b      	uxth	r3, r3
 8007026:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007028:	4602      	mov	r2, r0
 800702a:	463b      	mov	r3, r7
 800702c:	4641      	mov	r1, r8
 800702e:	4620      	mov	r0, r4
 8007030:	e7c8      	b.n	8006fc4 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007032:	4632      	mov	r2, r6
 8007034:	4639      	mov	r1, r7
 8007036:	4620      	mov	r0, r4
 8007038:	f7ff fc88 	bl	800694c <I2C_WaitOnRXNEFlagUntilTimeout>
 800703c:	2800      	cmp	r0, #0
 800703e:	f47f af5e 	bne.w	8006efe <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007042:	6823      	ldr	r3, [r4, #0]
 8007044:	691a      	ldr	r2, [r3, #16]
 8007046:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007048:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800704a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800704c:	1c53      	adds	r3, r2, #1
 800704e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8007050:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007052:	3b01      	subs	r3, #1
 8007054:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8007056:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007058:	3b01      	subs	r3, #1
 800705a:	b29b      	uxth	r3, r3
 800705c:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800705e:	6823      	ldr	r3, [r4, #0]
 8007060:	6959      	ldr	r1, [r3, #20]
 8007062:	0749      	lsls	r1, r1, #29
 8007064:	f57f af5c 	bpl.w	8006f20 <HAL_I2C_Mem_Read+0xb8>
 8007068:	e7c3      	b.n	8006ff2 <HAL_I2C_Mem_Read+0x18a>
 800706a:	bf00      	nop
 800706c:	00100002 	.word	0x00100002
 8007070:	ffff0000 	.word	0xffff0000
 8007074:	00010004 	.word	0x00010004

08007078 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8007078:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800707a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800707e:	2b20      	cmp	r3, #32
 8007080:	b2dc      	uxtb	r4, r3
 8007082:	d116      	bne.n	80070b2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8007084:	2324      	movs	r3, #36	; 0x24
 8007086:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800708a:	6803      	ldr	r3, [r0, #0]
 800708c:	681a      	ldr	r2, [r3, #0]
 800708e:	f022 0201 	bic.w	r2, r2, #1
 8007092:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8007094:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007096:	f022 0210 	bic.w	r2, r2, #16
 800709a:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 800709c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800709e:	4311      	orrs	r1, r2
 80070a0:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80070a2:	681a      	ldr	r2, [r3, #0]
 80070a4:	f042 0201 	orr.w	r2, r2, #1
 80070a8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80070aa:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80070ae:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80070b0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80070b2:	2002      	movs	r0, #2
 80070b4:	e7fc      	b.n	80070b0 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080070b6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80070b6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80070b8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80070bc:	2b20      	cmp	r3, #32
 80070be:	b2dc      	uxtb	r4, r3
 80070c0:	d116      	bne.n	80070f0 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80070c2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80070c4:	2324      	movs	r3, #36	; 0x24
 80070c6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80070ca:	6813      	ldr	r3, [r2, #0]
 80070cc:	f023 0301 	bic.w	r3, r3, #1
 80070d0:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80070d2:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80070d4:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 80070d8:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80070da:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80070dc:	b29b      	uxth	r3, r3
 80070de:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80070e0:	6813      	ldr	r3, [r2, #0]
 80070e2:	f043 0301 	orr.w	r3, r3, #1
 80070e6:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80070e8:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80070ec:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80070ee:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80070f0:	2002      	movs	r0, #2
 80070f2:	e7fc      	b.n	80070ee <HAL_I2CEx_ConfigDigitalFilter+0x38>

080070f4 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80070f4:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80070f6:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80070fa:	01d2      	lsls	r2, r2, #7
 80070fc:	3284      	adds	r2, #132	; 0x84
 80070fe:	1883      	adds	r3, r0, r2
{
 8007100:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007104:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007106:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007108:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800710a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800710e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007112:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007114:	68c5      	ldr	r5, [r0, #12]
 8007116:	f10c 0701 	add.w	r7, ip, #1
 800711a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800711e:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007122:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007124:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007126:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800712a:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800712c:	68c5      	ldr	r5, [r0, #12]
 800712e:	68ce      	ldr	r6, [r1, #12]
 8007130:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8007134:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8007136:	689d      	ldr	r5, [r3, #8]
 8007138:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800713c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800713e:	68c7      	ldr	r7, [r0, #12]
 8007140:	688d      	ldr	r5, [r1, #8]
 8007142:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8007146:	3501      	adds	r5, #1
 8007148:	443d      	add	r5, r7
 800714a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800714e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007150:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007152:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007154:	f025 0507 	bic.w	r5, r5, #7
 8007158:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800715a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800715e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8007160:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8007162:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8007166:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800716a:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800716e:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8007172:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8007176:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800717a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800717e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8007180:	695d      	ldr	r5, [r3, #20]
 8007182:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8007186:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8007188:	694d      	ldr	r5, [r1, #20]
 800718a:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800718c:	69dd      	ldr	r5, [r3, #28]
 800718e:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8007192:	f025 0507 	bic.w	r5, r5, #7
 8007196:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8007198:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800719c:	433d      	orrs	r5, r7
 800719e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80071a0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80071a2:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80071a4:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80071a8:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80071aa:	b31e      	cbz	r6, 80071f4 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80071ac:	2e01      	cmp	r6, #1
 80071ae:	d023      	beq.n	80071f8 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80071b0:	1eb5      	subs	r5, r6, #2
 80071b2:	2d02      	cmp	r5, #2
 80071b4:	d922      	bls.n	80071fc <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80071b6:	2e07      	cmp	r6, #7
 80071b8:	bf0c      	ite	eq
 80071ba:	2502      	moveq	r5, #2
 80071bc:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80071be:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 80071c0:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 80071c4:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80071c6:	eba4 040c 	sub.w	r4, r4, ip
 80071ca:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80071cc:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80071ce:	436c      	muls	r4, r5
 80071d0:	436e      	muls	r6, r5
 80071d2:	3403      	adds	r4, #3
 80071d4:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80071d8:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80071da:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80071dc:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80071e0:	f024 0407 	bic.w	r4, r4, #7
 80071e4:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80071e6:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80071e8:	5883      	ldr	r3, [r0, r2]
 80071ea:	f043 0301 	orr.w	r3, r3, #1
 80071ee:	5083      	str	r3, [r0, r2]
}
 80071f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80071f4:	2504      	movs	r5, #4
 80071f6:	e7e2      	b.n	80071be <LTDC_SetConfig+0xca>
    tmp = 3U;
 80071f8:	2503      	movs	r5, #3
 80071fa:	e7e0      	b.n	80071be <LTDC_SetConfig+0xca>
    tmp = 2U;
 80071fc:	2502      	movs	r5, #2
 80071fe:	e7de      	b.n	80071be <LTDC_SetConfig+0xca>

08007200 <HAL_LTDC_Init>:
{
 8007200:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8007202:	4604      	mov	r4, r0
 8007204:	2800      	cmp	r0, #0
 8007206:	d063      	beq.n	80072d0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8007208:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800720c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007210:	b91b      	cbnz	r3, 800721a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8007212:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8007216:	f7fa feb9 	bl	8001f8c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800721a:	2302      	movs	r3, #2
 800721c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8007220:	6823      	ldr	r3, [r4, #0]
 8007222:	699a      	ldr	r2, [r3, #24]
 8007224:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007228:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800722a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800722e:	4302      	orrs	r2, r0
 8007230:	68e0      	ldr	r0, [r4, #12]
 8007232:	6999      	ldr	r1, [r3, #24]
 8007234:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8007236:	6920      	ldr	r0, [r4, #16]
 8007238:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800723a:	430a      	orrs	r2, r1
 800723c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800723e:	689a      	ldr	r2, [r3, #8]
 8007240:	4924      	ldr	r1, [pc, #144]	; (80072d4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8007242:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007244:	400a      	ands	r2, r1
 8007246:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007248:	689a      	ldr	r2, [r3, #8]
 800724a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800724e:	69a0      	ldr	r0, [r4, #24]
 8007250:	4302      	orrs	r2, r0
 8007252:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007254:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8007256:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007258:	400a      	ands	r2, r1
 800725a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800725c:	68da      	ldr	r2, [r3, #12]
 800725e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007262:	6a20      	ldr	r0, [r4, #32]
 8007264:	4302      	orrs	r2, r0
 8007266:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007268:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800726a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800726c:	400a      	ands	r2, r1
 800726e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007270:	691a      	ldr	r2, [r3, #16]
 8007272:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007276:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007278:	4302      	orrs	r2, r0
 800727a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800727c:	695a      	ldr	r2, [r3, #20]
 800727e:	4011      	ands	r1, r2
 8007280:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007282:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007284:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007286:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800728a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800728c:	430a      	orrs	r2, r1
 800728e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007290:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007292:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8007296:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800729a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800729e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80072a0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80072a2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80072a6:	430a      	orrs	r2, r1
 80072a8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80072ac:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80072b0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80072b2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80072b4:	f042 0206 	orr.w	r2, r2, #6
 80072b8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80072ba:	699a      	ldr	r2, [r3, #24]
 80072bc:	f042 0201 	orr.w	r2, r2, #1
 80072c0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80072c2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80072c4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80072c6:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80072ca:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80072ce:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80072d0:	2001      	movs	r0, #1
 80072d2:	e7fc      	b.n	80072ce <HAL_LTDC_Init+0xce>
 80072d4:	f000f800 	.word	0xf000f800

080072d8 <HAL_LTDC_ErrorCallback>:
 80072d8:	4770      	bx	lr

080072da <HAL_LTDC_ReloadEventCallback>:
 80072da:	4770      	bx	lr

080072dc <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80072dc:	6803      	ldr	r3, [r0, #0]
{
 80072de:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80072e0:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80072e2:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80072e4:	0772      	lsls	r2, r6, #29
{
 80072e6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80072e8:	d514      	bpl.n	8007314 <HAL_LTDC_IRQHandler+0x38>
 80072ea:	0769      	lsls	r1, r5, #29
 80072ec:	d512      	bpl.n	8007314 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80072ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80072f0:	f022 0204 	bic.w	r2, r2, #4
 80072f4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80072f6:	2204      	movs	r2, #4
 80072f8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80072fa:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80072fe:	f043 0301 	orr.w	r3, r3, #1
 8007302:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8007306:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007308:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800730c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007310:	f7ff ffe2 	bl	80072d8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007314:	07b2      	lsls	r2, r6, #30
 8007316:	d516      	bpl.n	8007346 <HAL_LTDC_IRQHandler+0x6a>
 8007318:	07ab      	lsls	r3, r5, #30
 800731a:	d514      	bpl.n	8007346 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800731c:	6823      	ldr	r3, [r4, #0]
 800731e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007320:	f022 0202 	bic.w	r2, r2, #2
 8007324:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8007326:	2202      	movs	r2, #2
 8007328:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800732a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800732e:	4313      	orrs	r3, r2
 8007330:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007334:	2304      	movs	r3, #4
 8007336:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800733a:	2300      	movs	r3, #0
 800733c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007340:	4620      	mov	r0, r4
 8007342:	f7ff ffc9 	bl	80072d8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8007346:	07f0      	lsls	r0, r6, #31
 8007348:	d510      	bpl.n	800736c <HAL_LTDC_IRQHandler+0x90>
 800734a:	07e9      	lsls	r1, r5, #31
 800734c:	d50e      	bpl.n	800736c <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800734e:	6823      	ldr	r3, [r4, #0]
 8007350:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007352:	f022 0201 	bic.w	r2, r2, #1
 8007356:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8007358:	2201      	movs	r2, #1
 800735a:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800735c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800735e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007362:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007366:	4620      	mov	r0, r4
 8007368:	f7f9 fed4 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800736c:	0732      	lsls	r2, r6, #28
 800736e:	d511      	bpl.n	8007394 <HAL_LTDC_IRQHandler+0xb8>
 8007370:	072b      	lsls	r3, r5, #28
 8007372:	d50f      	bpl.n	8007394 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007374:	6823      	ldr	r3, [r4, #0]
 8007376:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007378:	f022 0208 	bic.w	r2, r2, #8
 800737c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800737e:	2208      	movs	r2, #8
 8007380:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007382:	2301      	movs	r3, #1
 8007384:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007388:	2300      	movs	r3, #0
 800738a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800738e:	4620      	mov	r0, r4
 8007390:	f7ff ffa3 	bl	80072da <HAL_LTDC_ReloadEventCallback>
}
 8007394:	bd70      	pop	{r4, r5, r6, pc}

08007396 <HAL_LTDC_ConfigLayer>:
{
 8007396:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800739a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800739e:	2b01      	cmp	r3, #1
{
 80073a0:	4606      	mov	r6, r0
 80073a2:	460f      	mov	r7, r1
 80073a4:	4694      	mov	ip, r2
 80073a6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80073aa:	d01f      	beq.n	80073ec <HAL_LTDC_ConfigLayer+0x56>
 80073ac:	f04f 0801 	mov.w	r8, #1
 80073b0:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80073b4:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80073b8:	2434      	movs	r4, #52	; 0x34
 80073ba:	460d      	mov	r5, r1
 80073bc:	fb04 6402 	mla	r4, r4, r2, r6
 80073c0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80073c2:	3438      	adds	r4, #56	; 0x38
 80073c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80073c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80073c8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80073ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80073cc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80073ce:	682b      	ldr	r3, [r5, #0]
 80073d0:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80073d2:	4630      	mov	r0, r6
 80073d4:	4662      	mov	r2, ip
 80073d6:	4639      	mov	r1, r7
 80073d8:	f7ff fe8c 	bl	80070f4 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80073dc:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80073de:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80073e0:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80073e4:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80073e8:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80073ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080073f0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80073f0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80073f4:	2b01      	cmp	r3, #1
 80073f6:	f04f 0302 	mov.w	r3, #2
 80073fa:	d012      	beq.n	8007422 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80073fc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007400:	6803      	ldr	r3, [r0, #0]
 8007402:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007404:	f022 0201 	bic.w	r2, r2, #1
 8007408:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800740a:	4a07      	ldr	r2, [pc, #28]	; (8007428 <HAL_LTDC_ProgramLineEvent+0x38>)
 800740c:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800740e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007410:	f042 0201 	orr.w	r2, r2, #1
 8007414:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8007416:	2301      	movs	r3, #1
 8007418:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800741c:	2300      	movs	r3, #0
 800741e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8007422:	4618      	mov	r0, r3
}
 8007424:	4770      	bx	lr
 8007426:	bf00      	nop
 8007428:	40016800 	.word	0x40016800

0800742c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800742c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007430:	4604      	mov	r4, r0
 8007432:	b340      	cbz	r0, 8007486 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007434:	6803      	ldr	r3, [r0, #0]
 8007436:	07dd      	lsls	r5, r3, #31
 8007438:	d410      	bmi.n	800745c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800743a:	6823      	ldr	r3, [r4, #0]
 800743c:	0798      	lsls	r0, r3, #30
 800743e:	d45e      	bmi.n	80074fe <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007440:	6823      	ldr	r3, [r4, #0]
 8007442:	071a      	lsls	r2, r3, #28
 8007444:	f100 80a0 	bmi.w	8007588 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007448:	6823      	ldr	r3, [r4, #0]
 800744a:	075b      	lsls	r3, r3, #29
 800744c:	f100 80c0 	bmi.w	80075d0 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007450:	69a0      	ldr	r0, [r4, #24]
 8007452:	2800      	cmp	r0, #0
 8007454:	f040 8128 	bne.w	80076a8 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8007458:	2000      	movs	r0, #0
 800745a:	e02b      	b.n	80074b4 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800745c:	4b8f      	ldr	r3, [pc, #572]	; (800769c <HAL_RCC_OscConfig+0x270>)
 800745e:	689a      	ldr	r2, [r3, #8]
 8007460:	f002 020c 	and.w	r2, r2, #12
 8007464:	2a04      	cmp	r2, #4
 8007466:	d007      	beq.n	8007478 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007468:	689a      	ldr	r2, [r3, #8]
 800746a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800746e:	2a08      	cmp	r2, #8
 8007470:	d10b      	bne.n	800748a <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007472:	685a      	ldr	r2, [r3, #4]
 8007474:	0251      	lsls	r1, r2, #9
 8007476:	d508      	bpl.n	800748a <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007478:	4b88      	ldr	r3, [pc, #544]	; (800769c <HAL_RCC_OscConfig+0x270>)
 800747a:	681b      	ldr	r3, [r3, #0]
 800747c:	039a      	lsls	r2, r3, #14
 800747e:	d5dc      	bpl.n	800743a <HAL_RCC_OscConfig+0xe>
 8007480:	6863      	ldr	r3, [r4, #4]
 8007482:	2b00      	cmp	r3, #0
 8007484:	d1d9      	bne.n	800743a <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8007486:	2001      	movs	r0, #1
 8007488:	e014      	b.n	80074b4 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800748a:	6862      	ldr	r2, [r4, #4]
 800748c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007490:	d113      	bne.n	80074ba <HAL_RCC_OscConfig+0x8e>
 8007492:	681a      	ldr	r2, [r3, #0]
 8007494:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007498:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800749a:	f7fe fd3d 	bl	8005f18 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800749e:	4e7f      	ldr	r6, [pc, #508]	; (800769c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80074a0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80074a2:	6833      	ldr	r3, [r6, #0]
 80074a4:	039b      	lsls	r3, r3, #14
 80074a6:	d4c8      	bmi.n	800743a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80074a8:	f7fe fd36 	bl	8005f18 <HAL_GetTick>
 80074ac:	1b40      	subs	r0, r0, r5
 80074ae:	2864      	cmp	r0, #100	; 0x64
 80074b0:	d9f7      	bls.n	80074a2 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80074b2:	2003      	movs	r0, #3
}
 80074b4:	b002      	add	sp, #8
 80074b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80074ba:	4d78      	ldr	r5, [pc, #480]	; (800769c <HAL_RCC_OscConfig+0x270>)
 80074bc:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80074c0:	682b      	ldr	r3, [r5, #0]
 80074c2:	d107      	bne.n	80074d4 <HAL_RCC_OscConfig+0xa8>
 80074c4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80074c8:	602b      	str	r3, [r5, #0]
 80074ca:	682b      	ldr	r3, [r5, #0]
 80074cc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80074d0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80074d2:	e7e2      	b.n	800749a <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80074d4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80074d8:	602b      	str	r3, [r5, #0]
 80074da:	682b      	ldr	r3, [r5, #0]
 80074dc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80074e0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80074e2:	2a00      	cmp	r2, #0
 80074e4:	d1d9      	bne.n	800749a <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80074e6:	f7fe fd17 	bl	8005f18 <HAL_GetTick>
 80074ea:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80074ec:	682b      	ldr	r3, [r5, #0]
 80074ee:	039f      	lsls	r7, r3, #14
 80074f0:	d5a3      	bpl.n	800743a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80074f2:	f7fe fd11 	bl	8005f18 <HAL_GetTick>
 80074f6:	1b80      	subs	r0, r0, r6
 80074f8:	2864      	cmp	r0, #100	; 0x64
 80074fa:	d9f7      	bls.n	80074ec <HAL_RCC_OscConfig+0xc0>
 80074fc:	e7d9      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80074fe:	4b67      	ldr	r3, [pc, #412]	; (800769c <HAL_RCC_OscConfig+0x270>)
 8007500:	689a      	ldr	r2, [r3, #8]
 8007502:	f012 0f0c 	tst.w	r2, #12
 8007506:	d007      	beq.n	8007518 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007508:	689a      	ldr	r2, [r3, #8]
 800750a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800750e:	2a08      	cmp	r2, #8
 8007510:	d111      	bne.n	8007536 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007512:	685b      	ldr	r3, [r3, #4]
 8007514:	025e      	lsls	r6, r3, #9
 8007516:	d40e      	bmi.n	8007536 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007518:	4a60      	ldr	r2, [pc, #384]	; (800769c <HAL_RCC_OscConfig+0x270>)
 800751a:	6813      	ldr	r3, [r2, #0]
 800751c:	079d      	lsls	r5, r3, #30
 800751e:	d502      	bpl.n	8007526 <HAL_RCC_OscConfig+0xfa>
 8007520:	68e3      	ldr	r3, [r4, #12]
 8007522:	2b01      	cmp	r3, #1
 8007524:	d1af      	bne.n	8007486 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007526:	6813      	ldr	r3, [r2, #0]
 8007528:	6921      	ldr	r1, [r4, #16]
 800752a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800752e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007532:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007534:	e784      	b.n	8007440 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007536:	68e2      	ldr	r2, [r4, #12]
 8007538:	4b59      	ldr	r3, [pc, #356]	; (80076a0 <HAL_RCC_OscConfig+0x274>)
 800753a:	b1b2      	cbz	r2, 800756a <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800753c:	2201      	movs	r2, #1
 800753e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007540:	f7fe fcea 	bl	8005f18 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007544:	4d55      	ldr	r5, [pc, #340]	; (800769c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007546:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007548:	682b      	ldr	r3, [r5, #0]
 800754a:	0798      	lsls	r0, r3, #30
 800754c:	d507      	bpl.n	800755e <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800754e:	682b      	ldr	r3, [r5, #0]
 8007550:	6922      	ldr	r2, [r4, #16]
 8007552:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007556:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800755a:	602b      	str	r3, [r5, #0]
 800755c:	e770      	b.n	8007440 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800755e:	f7fe fcdb 	bl	8005f18 <HAL_GetTick>
 8007562:	1b80      	subs	r0, r0, r6
 8007564:	2802      	cmp	r0, #2
 8007566:	d9ef      	bls.n	8007548 <HAL_RCC_OscConfig+0x11c>
 8007568:	e7a3      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800756a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800756c:	f7fe fcd4 	bl	8005f18 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007570:	4e4a      	ldr	r6, [pc, #296]	; (800769c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007572:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007574:	6833      	ldr	r3, [r6, #0]
 8007576:	0799      	lsls	r1, r3, #30
 8007578:	f57f af62 	bpl.w	8007440 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800757c:	f7fe fccc 	bl	8005f18 <HAL_GetTick>
 8007580:	1b40      	subs	r0, r0, r5
 8007582:	2802      	cmp	r0, #2
 8007584:	d9f6      	bls.n	8007574 <HAL_RCC_OscConfig+0x148>
 8007586:	e794      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007588:	6962      	ldr	r2, [r4, #20]
 800758a:	4b45      	ldr	r3, [pc, #276]	; (80076a0 <HAL_RCC_OscConfig+0x274>)
 800758c:	b182      	cbz	r2, 80075b0 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800758e:	2201      	movs	r2, #1
 8007590:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007594:	f7fe fcc0 	bl	8005f18 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007598:	4e40      	ldr	r6, [pc, #256]	; (800769c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800759a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800759c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800759e:	079f      	lsls	r7, r3, #30
 80075a0:	f53f af52 	bmi.w	8007448 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80075a4:	f7fe fcb8 	bl	8005f18 <HAL_GetTick>
 80075a8:	1b40      	subs	r0, r0, r5
 80075aa:	2802      	cmp	r0, #2
 80075ac:	d9f6      	bls.n	800759c <HAL_RCC_OscConfig+0x170>
 80075ae:	e780      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80075b0:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80075b4:	f7fe fcb0 	bl	8005f18 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80075b8:	4e38      	ldr	r6, [pc, #224]	; (800769c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80075ba:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80075bc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80075be:	0798      	lsls	r0, r3, #30
 80075c0:	f57f af42 	bpl.w	8007448 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80075c4:	f7fe fca8 	bl	8005f18 <HAL_GetTick>
 80075c8:	1b40      	subs	r0, r0, r5
 80075ca:	2802      	cmp	r0, #2
 80075cc:	d9f6      	bls.n	80075bc <HAL_RCC_OscConfig+0x190>
 80075ce:	e770      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80075d0:	4b32      	ldr	r3, [pc, #200]	; (800769c <HAL_RCC_OscConfig+0x270>)
 80075d2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80075d4:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80075d8:	d128      	bne.n	800762c <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80075da:	9201      	str	r2, [sp, #4]
 80075dc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80075de:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80075e2:	641a      	str	r2, [r3, #64]	; 0x40
 80075e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80075ea:	9301      	str	r3, [sp, #4]
 80075ec:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80075ee:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80075f0:	4d2c      	ldr	r5, [pc, #176]	; (80076a4 <HAL_RCC_OscConfig+0x278>)
 80075f2:	682b      	ldr	r3, [r5, #0]
 80075f4:	05d9      	lsls	r1, r3, #23
 80075f6:	d51b      	bpl.n	8007630 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80075f8:	68a3      	ldr	r3, [r4, #8]
 80075fa:	4d28      	ldr	r5, [pc, #160]	; (800769c <HAL_RCC_OscConfig+0x270>)
 80075fc:	2b01      	cmp	r3, #1
 80075fe:	d127      	bne.n	8007650 <HAL_RCC_OscConfig+0x224>
 8007600:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007602:	f043 0301 	orr.w	r3, r3, #1
 8007606:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8007608:	f7fe fc86 	bl	8005f18 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800760c:	4e23      	ldr	r6, [pc, #140]	; (800769c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800760e:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007610:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007614:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8007616:	079b      	lsls	r3, r3, #30
 8007618:	d539      	bpl.n	800768e <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800761a:	2f00      	cmp	r7, #0
 800761c:	f43f af18 	beq.w	8007450 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007620:	4a1e      	ldr	r2, [pc, #120]	; (800769c <HAL_RCC_OscConfig+0x270>)
 8007622:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007624:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007628:	6413      	str	r3, [r2, #64]	; 0x40
 800762a:	e711      	b.n	8007450 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800762c:	2700      	movs	r7, #0
 800762e:	e7df      	b.n	80075f0 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007630:	682b      	ldr	r3, [r5, #0]
 8007632:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007636:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007638:	f7fe fc6e 	bl	8005f18 <HAL_GetTick>
 800763c:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800763e:	682b      	ldr	r3, [r5, #0]
 8007640:	05da      	lsls	r2, r3, #23
 8007642:	d4d9      	bmi.n	80075f8 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007644:	f7fe fc68 	bl	8005f18 <HAL_GetTick>
 8007648:	1b80      	subs	r0, r0, r6
 800764a:	2802      	cmp	r0, #2
 800764c:	d9f7      	bls.n	800763e <HAL_RCC_OscConfig+0x212>
 800764e:	e730      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007650:	2b05      	cmp	r3, #5
 8007652:	d104      	bne.n	800765e <HAL_RCC_OscConfig+0x232>
 8007654:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007656:	f043 0304 	orr.w	r3, r3, #4
 800765a:	672b      	str	r3, [r5, #112]	; 0x70
 800765c:	e7d0      	b.n	8007600 <HAL_RCC_OscConfig+0x1d4>
 800765e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007660:	f022 0201 	bic.w	r2, r2, #1
 8007664:	672a      	str	r2, [r5, #112]	; 0x70
 8007666:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007668:	f022 0204 	bic.w	r2, r2, #4
 800766c:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800766e:	2b00      	cmp	r3, #0
 8007670:	d1ca      	bne.n	8007608 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007672:	f7fe fc51 	bl	8005f18 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007676:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800767a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800767c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800767e:	0798      	lsls	r0, r3, #30
 8007680:	d5cb      	bpl.n	800761a <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007682:	f7fe fc49 	bl	8005f18 <HAL_GetTick>
 8007686:	1b80      	subs	r0, r0, r6
 8007688:	4540      	cmp	r0, r8
 800768a:	d9f7      	bls.n	800767c <HAL_RCC_OscConfig+0x250>
 800768c:	e711      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800768e:	f7fe fc43 	bl	8005f18 <HAL_GetTick>
 8007692:	1b40      	subs	r0, r0, r5
 8007694:	4540      	cmp	r0, r8
 8007696:	d9bd      	bls.n	8007614 <HAL_RCC_OscConfig+0x1e8>
 8007698:	e70b      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
 800769a:	bf00      	nop
 800769c:	40023800 	.word	0x40023800
 80076a0:	42470000 	.word	0x42470000
 80076a4:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80076a8:	4d33      	ldr	r5, [pc, #204]	; (8007778 <HAL_RCC_OscConfig+0x34c>)
 80076aa:	68ab      	ldr	r3, [r5, #8]
 80076ac:	f003 030c 	and.w	r3, r3, #12
 80076b0:	2b08      	cmp	r3, #8
 80076b2:	d03d      	beq.n	8007730 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80076b4:	4b31      	ldr	r3, [pc, #196]	; (800777c <HAL_RCC_OscConfig+0x350>)
 80076b6:	2200      	movs	r2, #0
 80076b8:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80076ba:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80076bc:	d12b      	bne.n	8007716 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 80076be:	f7fe fc2b 	bl	8005f18 <HAL_GetTick>
 80076c2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80076c4:	682b      	ldr	r3, [r5, #0]
 80076c6:	0199      	lsls	r1, r3, #6
 80076c8:	d41f      	bmi.n	800770a <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80076ca:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80076ce:	4313      	orrs	r3, r2
 80076d0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80076d2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80076d6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80076d8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80076dc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80076de:	0852      	lsrs	r2, r2, #1
 80076e0:	3a01      	subs	r2, #1
 80076e2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80076e6:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80076e8:	4b24      	ldr	r3, [pc, #144]	; (800777c <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80076ea:	4d23      	ldr	r5, [pc, #140]	; (8007778 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80076ec:	2201      	movs	r2, #1
 80076ee:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80076f0:	f7fe fc12 	bl	8005f18 <HAL_GetTick>
 80076f4:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80076f6:	682b      	ldr	r3, [r5, #0]
 80076f8:	019a      	lsls	r2, r3, #6
 80076fa:	f53f aead 	bmi.w	8007458 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80076fe:	f7fe fc0b 	bl	8005f18 <HAL_GetTick>
 8007702:	1b00      	subs	r0, r0, r4
 8007704:	2802      	cmp	r0, #2
 8007706:	d9f6      	bls.n	80076f6 <HAL_RCC_OscConfig+0x2ca>
 8007708:	e6d3      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800770a:	f7fe fc05 	bl	8005f18 <HAL_GetTick>
 800770e:	1b80      	subs	r0, r0, r6
 8007710:	2802      	cmp	r0, #2
 8007712:	d9d7      	bls.n	80076c4 <HAL_RCC_OscConfig+0x298>
 8007714:	e6cd      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8007716:	f7fe fbff 	bl	8005f18 <HAL_GetTick>
 800771a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800771c:	682b      	ldr	r3, [r5, #0]
 800771e:	019b      	lsls	r3, r3, #6
 8007720:	f57f ae9a 	bpl.w	8007458 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007724:	f7fe fbf8 	bl	8005f18 <HAL_GetTick>
 8007728:	1b00      	subs	r0, r0, r4
 800772a:	2802      	cmp	r0, #2
 800772c:	d9f6      	bls.n	800771c <HAL_RCC_OscConfig+0x2f0>
 800772e:	e6c0      	b.n	80074b2 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8007730:	2801      	cmp	r0, #1
 8007732:	f43f aebf 	beq.w	80074b4 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8007736:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007738:	69e2      	ldr	r2, [r4, #28]
 800773a:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 800773e:	4291      	cmp	r1, r2
 8007740:	f47f aea1 	bne.w	8007486 <HAL_RCC_OscConfig+0x5a>
 8007744:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007746:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800774a:	428a      	cmp	r2, r1
 800774c:	f47f ae9b 	bne.w	8007486 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007750:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007752:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007756:	401a      	ands	r2, r3
 8007758:	428a      	cmp	r2, r1
 800775a:	f47f ae94 	bne.w	8007486 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800775e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007760:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007764:	428a      	cmp	r2, r1
 8007766:	f47f ae8e 	bne.w	8007486 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800776a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800776c:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007770:	4293      	cmp	r3, r2
 8007772:	f43f ae71 	beq.w	8007458 <HAL_RCC_OscConfig+0x2c>
 8007776:	e686      	b.n	8007486 <HAL_RCC_OscConfig+0x5a>
 8007778:	40023800 	.word	0x40023800
 800777c:	42470000 	.word	0x42470000

08007780 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007780:	4913      	ldr	r1, [pc, #76]	; (80077d0 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007782:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007784:	688b      	ldr	r3, [r1, #8]
 8007786:	f003 030c 	and.w	r3, r3, #12
 800778a:	2b04      	cmp	r3, #4
 800778c:	d01c      	beq.n	80077c8 <HAL_RCC_GetSysClockFreq+0x48>
 800778e:	2b08      	cmp	r3, #8
 8007790:	d11c      	bne.n	80077cc <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007792:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007794:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007796:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007798:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800779c:	bf14      	ite	ne
 800779e:	480d      	ldrne	r0, [pc, #52]	; (80077d4 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80077a0:	480d      	ldreq	r0, [pc, #52]	; (80077d8 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80077a2:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80077a6:	bf18      	it	ne
 80077a8:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80077aa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80077ae:	fba1 0100 	umull	r0, r1, r1, r0
 80077b2:	f7f8 fd6d 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80077b6:	4b06      	ldr	r3, [pc, #24]	; (80077d0 <HAL_RCC_GetSysClockFreq+0x50>)
 80077b8:	685b      	ldr	r3, [r3, #4]
 80077ba:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80077be:	3301      	adds	r3, #1
 80077c0:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80077c2:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80077c6:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80077c8:	4802      	ldr	r0, [pc, #8]	; (80077d4 <HAL_RCC_GetSysClockFreq+0x54>)
 80077ca:	e7fc      	b.n	80077c6 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80077cc:	4802      	ldr	r0, [pc, #8]	; (80077d8 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80077ce:	e7fa      	b.n	80077c6 <HAL_RCC_GetSysClockFreq+0x46>
 80077d0:	40023800 	.word	0x40023800
 80077d4:	007a1200 	.word	0x007a1200
 80077d8:	00f42400 	.word	0x00f42400

080077dc <HAL_RCC_ClockConfig>:
{
 80077dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80077e0:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80077e2:	4604      	mov	r4, r0
 80077e4:	b910      	cbnz	r0, 80077ec <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80077e6:	2001      	movs	r0, #1
}
 80077e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80077ec:	4b44      	ldr	r3, [pc, #272]	; (8007900 <HAL_RCC_ClockConfig+0x124>)
 80077ee:	681a      	ldr	r2, [r3, #0]
 80077f0:	f002 020f 	and.w	r2, r2, #15
 80077f4:	428a      	cmp	r2, r1
 80077f6:	d328      	bcc.n	800784a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80077f8:	6822      	ldr	r2, [r4, #0]
 80077fa:	0797      	lsls	r7, r2, #30
 80077fc:	d42d      	bmi.n	800785a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80077fe:	07d0      	lsls	r0, r2, #31
 8007800:	d441      	bmi.n	8007886 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007802:	4b3f      	ldr	r3, [pc, #252]	; (8007900 <HAL_RCC_ClockConfig+0x124>)
 8007804:	681a      	ldr	r2, [r3, #0]
 8007806:	f002 020f 	and.w	r2, r2, #15
 800780a:	42aa      	cmp	r2, r5
 800780c:	d866      	bhi.n	80078dc <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800780e:	6822      	ldr	r2, [r4, #0]
 8007810:	0751      	lsls	r1, r2, #29
 8007812:	d46c      	bmi.n	80078ee <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007814:	0713      	lsls	r3, r2, #28
 8007816:	d507      	bpl.n	8007828 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007818:	4a3a      	ldr	r2, [pc, #232]	; (8007904 <HAL_RCC_ClockConfig+0x128>)
 800781a:	6921      	ldr	r1, [r4, #16]
 800781c:	6893      	ldr	r3, [r2, #8]
 800781e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007822:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007826:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007828:	f7ff ffaa 	bl	8007780 <HAL_RCC_GetSysClockFreq>
 800782c:	4b35      	ldr	r3, [pc, #212]	; (8007904 <HAL_RCC_ClockConfig+0x128>)
 800782e:	4a36      	ldr	r2, [pc, #216]	; (8007908 <HAL_RCC_ClockConfig+0x12c>)
 8007830:	689b      	ldr	r3, [r3, #8]
 8007832:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007836:	5cd3      	ldrb	r3, [r2, r3]
 8007838:	40d8      	lsrs	r0, r3
 800783a:	4b34      	ldr	r3, [pc, #208]	; (800790c <HAL_RCC_ClockConfig+0x130>)
 800783c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800783e:	4b34      	ldr	r3, [pc, #208]	; (8007910 <HAL_RCC_ClockConfig+0x134>)
 8007840:	6818      	ldr	r0, [r3, #0]
 8007842:	f7fa fd2d 	bl	80022a0 <HAL_InitTick>
  return HAL_OK;
 8007846:	2000      	movs	r0, #0
 8007848:	e7ce      	b.n	80077e8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800784a:	b2ca      	uxtb	r2, r1
 800784c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800784e:	681b      	ldr	r3, [r3, #0]
 8007850:	f003 030f 	and.w	r3, r3, #15
 8007854:	428b      	cmp	r3, r1
 8007856:	d1c6      	bne.n	80077e6 <HAL_RCC_ClockConfig+0xa>
 8007858:	e7ce      	b.n	80077f8 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800785a:	4b2a      	ldr	r3, [pc, #168]	; (8007904 <HAL_RCC_ClockConfig+0x128>)
 800785c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007860:	bf1e      	ittt	ne
 8007862:	6899      	ldrne	r1, [r3, #8]
 8007864:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007868:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800786a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800786c:	bf42      	ittt	mi
 800786e:	6899      	ldrmi	r1, [r3, #8]
 8007870:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007874:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007876:	4923      	ldr	r1, [pc, #140]	; (8007904 <HAL_RCC_ClockConfig+0x128>)
 8007878:	68a0      	ldr	r0, [r4, #8]
 800787a:	688b      	ldr	r3, [r1, #8]
 800787c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007880:	4303      	orrs	r3, r0
 8007882:	608b      	str	r3, [r1, #8]
 8007884:	e7bb      	b.n	80077fe <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007886:	6862      	ldr	r2, [r4, #4]
 8007888:	4b1e      	ldr	r3, [pc, #120]	; (8007904 <HAL_RCC_ClockConfig+0x128>)
 800788a:	2a01      	cmp	r2, #1
 800788c:	d11c      	bne.n	80078c8 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800788e:	681b      	ldr	r3, [r3, #0]
 8007890:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007894:	d0a7      	beq.n	80077e6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007896:	4e1b      	ldr	r6, [pc, #108]	; (8007904 <HAL_RCC_ClockConfig+0x128>)
 8007898:	68b3      	ldr	r3, [r6, #8]
 800789a:	f023 0303 	bic.w	r3, r3, #3
 800789e:	4313      	orrs	r3, r2
 80078a0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80078a2:	f7fe fb39 	bl	8005f18 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80078a6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80078aa:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80078ac:	68b3      	ldr	r3, [r6, #8]
 80078ae:	6862      	ldr	r2, [r4, #4]
 80078b0:	f003 030c 	and.w	r3, r3, #12
 80078b4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80078b8:	d0a3      	beq.n	8007802 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80078ba:	f7fe fb2d 	bl	8005f18 <HAL_GetTick>
 80078be:	1bc0      	subs	r0, r0, r7
 80078c0:	4540      	cmp	r0, r8
 80078c2:	d9f3      	bls.n	80078ac <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80078c4:	2003      	movs	r0, #3
 80078c6:	e78f      	b.n	80077e8 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80078c8:	1e91      	subs	r1, r2, #2
 80078ca:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80078cc:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80078ce:	d802      	bhi.n	80078d6 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80078d0:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80078d4:	e7de      	b.n	8007894 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80078d6:	f013 0f02 	tst.w	r3, #2
 80078da:	e7db      	b.n	8007894 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80078dc:	b2ea      	uxtb	r2, r5
 80078de:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80078e0:	681b      	ldr	r3, [r3, #0]
 80078e2:	f003 030f 	and.w	r3, r3, #15
 80078e6:	42ab      	cmp	r3, r5
 80078e8:	f47f af7d 	bne.w	80077e6 <HAL_RCC_ClockConfig+0xa>
 80078ec:	e78f      	b.n	800780e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80078ee:	4905      	ldr	r1, [pc, #20]	; (8007904 <HAL_RCC_ClockConfig+0x128>)
 80078f0:	68e0      	ldr	r0, [r4, #12]
 80078f2:	688b      	ldr	r3, [r1, #8]
 80078f4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80078f8:	4303      	orrs	r3, r0
 80078fa:	608b      	str	r3, [r1, #8]
 80078fc:	e78a      	b.n	8007814 <HAL_RCC_ClockConfig+0x38>
 80078fe:	bf00      	nop
 8007900:	40023c00 	.word	0x40023c00
 8007904:	40023800 	.word	0x40023800
 8007908:	080238c4 	.word	0x080238c4
 800790c:	2000007c 	.word	0x2000007c
 8007910:	20000084 	.word	0x20000084

08007914 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007914:	4b04      	ldr	r3, [pc, #16]	; (8007928 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007916:	4a05      	ldr	r2, [pc, #20]	; (800792c <HAL_RCC_GetPCLK1Freq+0x18>)
 8007918:	689b      	ldr	r3, [r3, #8]
 800791a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800791e:	5cd3      	ldrb	r3, [r2, r3]
 8007920:	4a03      	ldr	r2, [pc, #12]	; (8007930 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007922:	6810      	ldr	r0, [r2, #0]
}
 8007924:	40d8      	lsrs	r0, r3
 8007926:	4770      	bx	lr
 8007928:	40023800 	.word	0x40023800
 800792c:	080238d4 	.word	0x080238d4
 8007930:	2000007c 	.word	0x2000007c

08007934 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8007934:	4b04      	ldr	r3, [pc, #16]	; (8007948 <HAL_RCC_GetPCLK2Freq+0x14>)
 8007936:	4a05      	ldr	r2, [pc, #20]	; (800794c <HAL_RCC_GetPCLK2Freq+0x18>)
 8007938:	689b      	ldr	r3, [r3, #8]
 800793a:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800793e:	5cd3      	ldrb	r3, [r2, r3]
 8007940:	4a03      	ldr	r2, [pc, #12]	; (8007950 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007942:	6810      	ldr	r0, [r2, #0]
}
 8007944:	40d8      	lsrs	r0, r3
 8007946:	4770      	bx	lr
 8007948:	40023800 	.word	0x40023800
 800794c:	080238d4 	.word	0x080238d4
 8007950:	2000007c 	.word	0x2000007c

08007954 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007954:	230f      	movs	r3, #15
 8007956:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007958:	4b0b      	ldr	r3, [pc, #44]	; (8007988 <HAL_RCC_GetClockConfig+0x34>)
 800795a:	689a      	ldr	r2, [r3, #8]
 800795c:	f002 0203 	and.w	r2, r2, #3
 8007960:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007962:	689a      	ldr	r2, [r3, #8]
 8007964:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007968:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800796a:	689a      	ldr	r2, [r3, #8]
 800796c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007970:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007972:	689b      	ldr	r3, [r3, #8]
 8007974:	08db      	lsrs	r3, r3, #3
 8007976:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800797a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800797c:	4b03      	ldr	r3, [pc, #12]	; (800798c <HAL_RCC_GetClockConfig+0x38>)
 800797e:	681b      	ldr	r3, [r3, #0]
 8007980:	f003 030f 	and.w	r3, r3, #15
 8007984:	600b      	str	r3, [r1, #0]
}
 8007986:	4770      	bx	lr
 8007988:	40023800 	.word	0x40023800
 800798c:	40023c00 	.word	0x40023c00

08007990 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007990:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007992:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007996:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007998:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800799a:	f040 808c 	bne.w	8007ab6 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800799e:	6823      	ldr	r3, [r4, #0]
 80079a0:	f013 0f0c 	tst.w	r3, #12
 80079a4:	d045      	beq.n	8007a32 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80079a6:	4b8b      	ldr	r3, [pc, #556]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80079a8:	4d8b      	ldr	r5, [pc, #556]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 80079aa:	2200      	movs	r2, #0
 80079ac:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80079ae:	f7fe fab3 	bl	8005f18 <HAL_GetTick>
 80079b2:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80079b4:	682b      	ldr	r3, [r5, #0]
 80079b6:	009f      	lsls	r7, r3, #2
 80079b8:	f100 80cf 	bmi.w	8007b5a <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80079bc:	6821      	ldr	r1, [r4, #0]
 80079be:	074e      	lsls	r6, r1, #29
 80079c0:	d515      	bpl.n	80079ee <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80079c2:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80079c6:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80079ca:	061b      	lsls	r3, r3, #24
 80079cc:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80079d0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80079d4:	4313      	orrs	r3, r2
 80079d6:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80079da:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 80079de:	6a22      	ldr	r2, [r4, #32]
 80079e0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80079e4:	3a01      	subs	r2, #1
 80079e6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80079ea:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80079ee:	070d      	lsls	r5, r1, #28
 80079f0:	d514      	bpl.n	8007a1c <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80079f2:	4a79      	ldr	r2, [pc, #484]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80079f4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80079f6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80079fa:	6920      	ldr	r0, [r4, #16]
 80079fc:	071b      	lsls	r3, r3, #28
 80079fe:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8007a02:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007a06:	430b      	orrs	r3, r1
 8007a08:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007a0c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007a10:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007a12:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007a16:	430b      	orrs	r3, r1
 8007a18:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007a1c:	4b6d      	ldr	r3, [pc, #436]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007a1e:	4e6e      	ldr	r6, [pc, #440]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8007a20:	2201      	movs	r2, #1
 8007a22:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007a24:	f7fe fa78 	bl	8005f18 <HAL_GetTick>
 8007a28:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007a2a:	6833      	ldr	r3, [r6, #0]
 8007a2c:	0098      	lsls	r0, r3, #2
 8007a2e:	f140 809b 	bpl.w	8007b68 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007a32:	6823      	ldr	r3, [r4, #0]
 8007a34:	069b      	lsls	r3, r3, #26
 8007a36:	d533      	bpl.n	8007aa0 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007a38:	2300      	movs	r3, #0
 8007a3a:	9301      	str	r3, [sp, #4]
 8007a3c:	4b66      	ldr	r3, [pc, #408]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8007a3e:	4d67      	ldr	r5, [pc, #412]	; (8007bdc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007a40:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007a42:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007a46:	641a      	str	r2, [r3, #64]	; 0x40
 8007a48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a4a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007a4e:	9301      	str	r3, [sp, #4]
 8007a50:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007a52:	682b      	ldr	r3, [r5, #0]
 8007a54:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007a58:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8007a5a:	f7fe fa5d 	bl	8005f18 <HAL_GetTick>
 8007a5e:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007a60:	682b      	ldr	r3, [r5, #0]
 8007a62:	05d9      	lsls	r1, r3, #23
 8007a64:	f140 8087 	bpl.w	8007b76 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007a68:	4d5b      	ldr	r5, [pc, #364]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007a6a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007a6c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007a70:	f040 8088 	bne.w	8007b84 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007a74:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007a76:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007a7a:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007a7e:	4a56      	ldr	r2, [pc, #344]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007a80:	f040 80a4 	bne.w	8007bcc <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007a84:	6891      	ldr	r1, [r2, #8]
 8007a86:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8007a8a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007a8e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007a92:	4301      	orrs	r1, r0
 8007a94:	6091      	str	r1, [r2, #8]
 8007a96:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007a98:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007a9c:	430b      	orrs	r3, r1
 8007a9e:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007aa0:	6820      	ldr	r0, [r4, #0]
 8007aa2:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007aa6:	bf1f      	itttt	ne
 8007aa8:	4b4d      	ldrne	r3, [pc, #308]	; (8007be0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8007aaa:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8007aae:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8007ab2:	2000      	movne	r0, #0
 8007ab4:	e04f      	b.n	8007b56 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8007ab6:	4b47      	ldr	r3, [pc, #284]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007ab8:	4e47      	ldr	r6, [pc, #284]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8007aba:	2200      	movs	r2, #0
 8007abc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007abe:	f7fe fa2b 	bl	8005f18 <HAL_GetTick>
 8007ac2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007ac4:	6833      	ldr	r3, [r6, #0]
 8007ac6:	011f      	lsls	r7, r3, #4
 8007ac8:	d43f      	bmi.n	8007b4a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8007aca:	6821      	ldr	r1, [r4, #0]
 8007acc:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8007ace:	bf41      	itttt	mi
 8007ad0:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007ad4:	071b      	lslmi	r3, r3, #28
 8007ad6:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8007ada:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8007ade:	0788      	lsls	r0, r1, #30
 8007ae0:	d515      	bpl.n	8007b0e <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007ae2:	4a3d      	ldr	r2, [pc, #244]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007ae4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007ae6:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007aea:	6865      	ldr	r5, [r4, #4]
 8007aec:	061b      	lsls	r3, r3, #24
 8007aee:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007af2:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8007af6:	4303      	orrs	r3, r0
 8007af8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007afc:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8007b00:	69e3      	ldr	r3, [r4, #28]
 8007b02:	f020 001f 	bic.w	r0, r0, #31
 8007b06:	3b01      	subs	r3, #1
 8007b08:	4303      	orrs	r3, r0
 8007b0a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007b0e:	0649      	lsls	r1, r1, #25
 8007b10:	d50a      	bpl.n	8007b28 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007b12:	68e3      	ldr	r3, [r4, #12]
 8007b14:	6862      	ldr	r2, [r4, #4]
 8007b16:	061b      	lsls	r3, r3, #24
 8007b18:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007b1c:	68a2      	ldr	r2, [r4, #8]
 8007b1e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007b22:	4a2d      	ldr	r2, [pc, #180]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007b24:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007b28:	4b2a      	ldr	r3, [pc, #168]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007b2a:	4e2b      	ldr	r6, [pc, #172]	; (8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007b2c:	2201      	movs	r2, #1
 8007b2e:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007b30:	f7fe f9f2 	bl	8005f18 <HAL_GetTick>
 8007b34:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007b36:	6833      	ldr	r3, [r6, #0]
 8007b38:	011a      	lsls	r2, r3, #4
 8007b3a:	f53f af30 	bmi.w	800799e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007b3e:	f7fe f9eb 	bl	8005f18 <HAL_GetTick>
 8007b42:	1b40      	subs	r0, r0, r5
 8007b44:	2802      	cmp	r0, #2
 8007b46:	d9f6      	bls.n	8007b36 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8007b48:	e004      	b.n	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007b4a:	f7fe f9e5 	bl	8005f18 <HAL_GetTick>
 8007b4e:	1b40      	subs	r0, r0, r5
 8007b50:	2802      	cmp	r0, #2
 8007b52:	d9b7      	bls.n	8007ac4 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007b54:	2003      	movs	r0, #3
}
 8007b56:	b003      	add	sp, #12
 8007b58:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007b5a:	f7fe f9dd 	bl	8005f18 <HAL_GetTick>
 8007b5e:	1b80      	subs	r0, r0, r6
 8007b60:	2802      	cmp	r0, #2
 8007b62:	f67f af27 	bls.w	80079b4 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007b66:	e7f5      	b.n	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007b68:	f7fe f9d6 	bl	8005f18 <HAL_GetTick>
 8007b6c:	1b40      	subs	r0, r0, r5
 8007b6e:	2802      	cmp	r0, #2
 8007b70:	f67f af5b 	bls.w	8007a2a <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007b74:	e7ee      	b.n	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007b76:	f7fe f9cf 	bl	8005f18 <HAL_GetTick>
 8007b7a:	1b80      	subs	r0, r0, r6
 8007b7c:	2802      	cmp	r0, #2
 8007b7e:	f67f af6f 	bls.w	8007a60 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007b82:	e7e7      	b.n	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007b84:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007b86:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007b8a:	4293      	cmp	r3, r2
 8007b8c:	f43f af72 	beq.w	8007a74 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007b90:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007b92:	4a10      	ldr	r2, [pc, #64]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007b94:	2101      	movs	r1, #1
 8007b96:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007b9a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007b9e:	2100      	movs	r1, #0
 8007ba0:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007ba4:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007ba6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007ba8:	07da      	lsls	r2, r3, #31
 8007baa:	f57f af63 	bpl.w	8007a74 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8007bae:	f7fe f9b3 	bl	8005f18 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007bb2:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007bb6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007bb8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007bba:	079b      	lsls	r3, r3, #30
 8007bbc:	f53f af5a 	bmi.w	8007a74 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007bc0:	f7fe f9aa 	bl	8005f18 <HAL_GetTick>
 8007bc4:	1b80      	subs	r0, r0, r6
 8007bc6:	42b8      	cmp	r0, r7
 8007bc8:	d9f6      	bls.n	8007bb8 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8007bca:	e7c3      	b.n	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007bcc:	6891      	ldr	r1, [r2, #8]
 8007bce:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007bd2:	e75f      	b.n	8007a94 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8007bd4:	42470000 	.word	0x42470000
 8007bd8:	40023800 	.word	0x40023800
 8007bdc:	40007000 	.word	0x40007000
 8007be0:	42471000 	.word	0x42471000

08007be4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8007be4:	b538      	push	{r3, r4, r5, lr}
 8007be6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8007be8:	4604      	mov	r4, r0
 8007bea:	b1c8      	cbz	r0, 8007c20 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8007bec:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007bf0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007bf4:	b91b      	cbnz	r3, 8007bfe <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007bf6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8007bfa:	f7fa fae5 	bl	80021c8 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007bfe:	2302      	movs	r3, #2
 8007c00:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007c04:	1d21      	adds	r1, r4, #4
 8007c06:	6820      	ldr	r0, [r4, #0]
 8007c08:	f000 fcba 	bl	8008580 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8007c0c:	6862      	ldr	r2, [r4, #4]
 8007c0e:	6820      	ldr	r0, [r4, #0]
 8007c10:	4629      	mov	r1, r5
 8007c12:	f000 fceb 	bl	80085ec <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007c16:	2301      	movs	r3, #1
 8007c18:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007c1c:	2000      	movs	r0, #0
}
 8007c1e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007c20:	2001      	movs	r0, #1
 8007c22:	e7fc      	b.n	8007c1e <HAL_SDRAM_Init+0x3a>

08007c24 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007c24:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007c26:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007c2a:	2b02      	cmp	r3, #2
{
 8007c2c:	4604      	mov	r4, r0
 8007c2e:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007c30:	b2d8      	uxtb	r0, r3
 8007c32:	d00d      	beq.n	8007c50 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007c34:	2302      	movs	r3, #2
 8007c36:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007c3a:	6820      	ldr	r0, [r4, #0]
 8007c3c:	f000 fd12 	bl	8008664 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007c40:	682b      	ldr	r3, [r5, #0]
 8007c42:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007c44:	bf0c      	ite	eq
 8007c46:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007c48:	2301      	movne	r3, #1
 8007c4a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007c4e:	2000      	movs	r0, #0
}
 8007c50:	bd38      	pop	{r3, r4, r5, pc}

08007c52 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007c52:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007c54:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007c58:	2b02      	cmp	r3, #2
{
 8007c5a:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007c5c:	b2d8      	uxtb	r0, r3
 8007c5e:	d009      	beq.n	8007c74 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007c60:	2302      	movs	r3, #2
 8007c62:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007c66:	6820      	ldr	r0, [r4, #0]
 8007c68:	f000 fd23 	bl	80086b2 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007c6c:	2301      	movs	r3, #1
 8007c6e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007c72:	2000      	movs	r0, #0
}
 8007c74:	bd10      	pop	{r4, pc}

08007c76 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007c76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c78:	4604      	mov	r4, r0
 8007c7a:	460e      	mov	r6, r1
 8007c7c:	4615      	mov	r5, r2
 8007c7e:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007c80:	6822      	ldr	r2, [r4, #0]
 8007c82:	6893      	ldr	r3, [r2, #8]
 8007c84:	ea36 0303 	bics.w	r3, r6, r3
 8007c88:	d001      	beq.n	8007c8e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007c8a:	2000      	movs	r0, #0
 8007c8c:	e02d      	b.n	8007cea <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007c8e:	1c6b      	adds	r3, r5, #1
 8007c90:	d0f7      	beq.n	8007c82 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007c92:	f7fe f941 	bl	8005f18 <HAL_GetTick>
 8007c96:	1bc0      	subs	r0, r0, r7
 8007c98:	4285      	cmp	r5, r0
 8007c9a:	d8f1      	bhi.n	8007c80 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007c9c:	6823      	ldr	r3, [r4, #0]
 8007c9e:	685a      	ldr	r2, [r3, #4]
 8007ca0:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007ca4:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007ca6:	6862      	ldr	r2, [r4, #4]
 8007ca8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007cac:	d10a      	bne.n	8007cc4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007cae:	68a2      	ldr	r2, [r4, #8]
 8007cb0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007cb4:	d002      	beq.n	8007cbc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007cb6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007cba:	d103      	bne.n	8007cc4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007cbc:	681a      	ldr	r2, [r3, #0]
 8007cbe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007cc2:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007cc4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007cc6:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007cca:	d107      	bne.n	8007cdc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007ccc:	681a      	ldr	r2, [r3, #0]
 8007cce:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007cd2:	601a      	str	r2, [r3, #0]
 8007cd4:	681a      	ldr	r2, [r3, #0]
 8007cd6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007cda:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007cdc:	2301      	movs	r3, #1
 8007cde:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007ce2:	2300      	movs	r3, #0
 8007ce4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007ce8:	2003      	movs	r0, #3
}
 8007cea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007cec <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007cec:	b538      	push	{r3, r4, r5, lr}
 8007cee:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007cf0:	6842      	ldr	r2, [r0, #4]
 8007cf2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007cf6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007cf8:	d11f      	bne.n	8007d3a <SPI_EndRxTransaction+0x4e>
 8007cfa:	6882      	ldr	r2, [r0, #8]
 8007cfc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007d00:	d002      	beq.n	8007d08 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007d02:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007d06:	d107      	bne.n	8007d18 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007d08:	6825      	ldr	r5, [r4, #0]
 8007d0a:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007d0c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007d10:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007d14:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007d16:	d007      	beq.n	8007d28 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007d18:	460a      	mov	r2, r1
 8007d1a:	2180      	movs	r1, #128	; 0x80
 8007d1c:	4620      	mov	r0, r4
 8007d1e:	f7ff ffaa 	bl	8007c76 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007d22:	b920      	cbnz	r0, 8007d2e <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007d24:	2000      	movs	r0, #0
}
 8007d26:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007d28:	460a      	mov	r2, r1
 8007d2a:	2101      	movs	r1, #1
 8007d2c:	e7f6      	b.n	8007d1c <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007d2e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007d30:	f043 0320 	orr.w	r3, r3, #32
 8007d34:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007d36:	2003      	movs	r0, #3
 8007d38:	e7f5      	b.n	8007d26 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007d3a:	460a      	mov	r2, r1
 8007d3c:	2101      	movs	r1, #1
 8007d3e:	e7ee      	b.n	8007d1e <SPI_EndRxTransaction+0x32>

08007d40 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007d40:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007d42:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007d44:	4a12      	ldr	r2, [pc, #72]	; (8007d90 <SPI_EndRxTxTransaction+0x50>)
 8007d46:	6815      	ldr	r5, [r2, #0]
 8007d48:	4a12      	ldr	r2, [pc, #72]	; (8007d94 <SPI_EndRxTxTransaction+0x54>)
 8007d4a:	fbb5 f5f2 	udiv	r5, r5, r2
 8007d4e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007d52:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007d54:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007d56:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007d58:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007d5c:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007d5e:	d10b      	bne.n	8007d78 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007d60:	460a      	mov	r2, r1
 8007d62:	2180      	movs	r1, #128	; 0x80
 8007d64:	f7ff ff87 	bl	8007c76 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007d68:	b178      	cbz	r0, 8007d8a <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007d6a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007d6c:	f043 0320 	orr.w	r3, r3, #32
 8007d70:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007d72:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007d74:	b003      	add	sp, #12
 8007d76:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007d78:	9b01      	ldr	r3, [sp, #4]
 8007d7a:	b133      	cbz	r3, 8007d8a <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007d7c:	9b01      	ldr	r3, [sp, #4]
 8007d7e:	3b01      	subs	r3, #1
 8007d80:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007d82:	6823      	ldr	r3, [r4, #0]
 8007d84:	689b      	ldr	r3, [r3, #8]
 8007d86:	061b      	lsls	r3, r3, #24
 8007d88:	d4f6      	bmi.n	8007d78 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007d8a:	2000      	movs	r0, #0
 8007d8c:	e7f2      	b.n	8007d74 <SPI_EndRxTxTransaction+0x34>
 8007d8e:	bf00      	nop
 8007d90:	2000007c 	.word	0x2000007c
 8007d94:	016e3600 	.word	0x016e3600

08007d98 <HAL_SPI_Init>:
{
 8007d98:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007d9a:	4604      	mov	r4, r0
 8007d9c:	2800      	cmp	r0, #0
 8007d9e:	d036      	beq.n	8007e0e <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007da0:	2300      	movs	r3, #0
 8007da2:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007da4:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007da8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007dac:	b91b      	cbnz	r3, 8007db6 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007dae:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007db2:	f7fa f9b1 	bl	8002118 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007db6:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007db8:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007dba:	2302      	movs	r3, #2
 8007dbc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007dc0:	680b      	ldr	r3, [r1, #0]
 8007dc2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007dc6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007dc8:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007dcc:	4303      	orrs	r3, r0
 8007dce:	68e0      	ldr	r0, [r4, #12]
 8007dd0:	4303      	orrs	r3, r0
 8007dd2:	6920      	ldr	r0, [r4, #16]
 8007dd4:	4303      	orrs	r3, r0
 8007dd6:	6960      	ldr	r0, [r4, #20]
 8007dd8:	4303      	orrs	r3, r0
 8007dda:	69e0      	ldr	r0, [r4, #28]
 8007ddc:	4303      	orrs	r3, r0
 8007dde:	6a20      	ldr	r0, [r4, #32]
 8007de0:	4303      	orrs	r3, r0
 8007de2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007de4:	4303      	orrs	r3, r0
 8007de6:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007dea:	4303      	orrs	r3, r0
 8007dec:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007dee:	0c12      	lsrs	r2, r2, #16
 8007df0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007df2:	f002 0204 	and.w	r2, r2, #4
 8007df6:	431a      	orrs	r2, r3
 8007df8:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007dfa:	69cb      	ldr	r3, [r1, #28]
 8007dfc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007e00:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007e02:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007e04:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007e06:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007e08:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007e0c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007e0e:	2001      	movs	r0, #1
 8007e10:	e7fc      	b.n	8007e0c <HAL_SPI_Init+0x74>

08007e12 <HAL_SPI_Transmit>:
{
 8007e12:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007e16:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007e18:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007e1c:	2b01      	cmp	r3, #1
{
 8007e1e:	4604      	mov	r4, r0
 8007e20:	460d      	mov	r5, r1
 8007e22:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007e24:	f000 809d 	beq.w	8007f62 <HAL_SPI_Transmit+0x150>
 8007e28:	2301      	movs	r3, #1
 8007e2a:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007e2e:	f7fe f873 	bl	8005f18 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007e32:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007e36:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007e38:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007e3a:	b2d8      	uxtb	r0, r3
 8007e3c:	f040 808f 	bne.w	8007f5e <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007e40:	2d00      	cmp	r5, #0
 8007e42:	d05a      	beq.n	8007efa <HAL_SPI_Transmit+0xe8>
 8007e44:	2f00      	cmp	r7, #0
 8007e46:	d058      	beq.n	8007efa <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007e48:	2303      	movs	r3, #3
 8007e4a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007e4e:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007e50:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007e52:	2300      	movs	r3, #0
 8007e54:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007e56:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007e5a:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007e5c:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007e5e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007e60:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007e62:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007e64:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007e66:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007e6a:	bf08      	it	eq
 8007e6c:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007e6e:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007e70:	bf04      	itt	eq
 8007e72:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007e76:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007e78:	681a      	ldr	r2, [r3, #0]
 8007e7a:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007e7c:	bf5e      	ittt	pl
 8007e7e:	681a      	ldrpl	r2, [r3, #0]
 8007e80:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007e84:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007e86:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007e8a:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007e8c:	d141      	bne.n	8007f12 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007e8e:	b10a      	cbz	r2, 8007e94 <HAL_SPI_Transmit+0x82>
 8007e90:	2f01      	cmp	r7, #1
 8007e92:	d107      	bne.n	8007ea4 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007e94:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007e98:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007e9a:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e9e:	3b01      	subs	r3, #1
 8007ea0:	b29b      	uxth	r3, r3
 8007ea2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007ea4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ea6:	b29b      	uxth	r3, r3
 8007ea8:	b9a3      	cbnz	r3, 8007ed4 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007eaa:	4642      	mov	r2, r8
 8007eac:	4631      	mov	r1, r6
 8007eae:	4620      	mov	r0, r4
 8007eb0:	f7ff ff46 	bl	8007d40 <SPI_EndRxTxTransaction>
 8007eb4:	2800      	cmp	r0, #0
 8007eb6:	d14f      	bne.n	8007f58 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007eb8:	68a3      	ldr	r3, [r4, #8]
 8007eba:	b933      	cbnz	r3, 8007eca <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007ebc:	9301      	str	r3, [sp, #4]
 8007ebe:	6823      	ldr	r3, [r4, #0]
 8007ec0:	68da      	ldr	r2, [r3, #12]
 8007ec2:	9201      	str	r2, [sp, #4]
 8007ec4:	689b      	ldr	r3, [r3, #8]
 8007ec6:	9301      	str	r3, [sp, #4]
 8007ec8:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007eca:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007ecc:	3800      	subs	r0, #0
 8007ece:	bf18      	it	ne
 8007ed0:	2001      	movne	r0, #1
error:
 8007ed2:	e012      	b.n	8007efa <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007ed4:	6822      	ldr	r2, [r4, #0]
 8007ed6:	6893      	ldr	r3, [r2, #8]
 8007ed8:	0798      	lsls	r0, r3, #30
 8007eda:	d505      	bpl.n	8007ee8 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007edc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007ede:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007ee2:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007ee4:	6323      	str	r3, [r4, #48]	; 0x30
 8007ee6:	e7d9      	b.n	8007e9c <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007ee8:	f7fe f816 	bl	8005f18 <HAL_GetTick>
 8007eec:	eba0 0008 	sub.w	r0, r0, r8
 8007ef0:	42b0      	cmp	r0, r6
 8007ef2:	d30b      	bcc.n	8007f0c <HAL_SPI_Transmit+0xfa>
 8007ef4:	1c71      	adds	r1, r6, #1
 8007ef6:	d0d5      	beq.n	8007ea4 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007ef8:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007efa:	2301      	movs	r3, #1
 8007efc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007f00:	2300      	movs	r3, #0
 8007f02:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007f06:	b002      	add	sp, #8
 8007f08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007f0c:	2e00      	cmp	r6, #0
 8007f0e:	d1c9      	bne.n	8007ea4 <HAL_SPI_Transmit+0x92>
 8007f10:	e7f2      	b.n	8007ef8 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007f12:	b10a      	cbz	r2, 8007f18 <HAL_SPI_Transmit+0x106>
 8007f14:	2f01      	cmp	r7, #1
 8007f16:	d108      	bne.n	8007f2a <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007f18:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007f1a:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007f1c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007f1e:	3301      	adds	r3, #1
 8007f20:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007f22:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f24:	3b01      	subs	r3, #1
 8007f26:	b29b      	uxth	r3, r3
 8007f28:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007f2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f2c:	b29b      	uxth	r3, r3
 8007f2e:	2b00      	cmp	r3, #0
 8007f30:	d0bb      	beq.n	8007eaa <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007f32:	6823      	ldr	r3, [r4, #0]
 8007f34:	689a      	ldr	r2, [r3, #8]
 8007f36:	0792      	lsls	r2, r2, #30
 8007f38:	d502      	bpl.n	8007f40 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007f3a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007f3c:	7812      	ldrb	r2, [r2, #0]
 8007f3e:	e7ec      	b.n	8007f1a <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007f40:	f7fd ffea 	bl	8005f18 <HAL_GetTick>
 8007f44:	eba0 0008 	sub.w	r0, r0, r8
 8007f48:	42b0      	cmp	r0, r6
 8007f4a:	d302      	bcc.n	8007f52 <HAL_SPI_Transmit+0x140>
 8007f4c:	1c73      	adds	r3, r6, #1
 8007f4e:	d0ec      	beq.n	8007f2a <HAL_SPI_Transmit+0x118>
 8007f50:	e7d2      	b.n	8007ef8 <HAL_SPI_Transmit+0xe6>
 8007f52:	2e00      	cmp	r6, #0
 8007f54:	d1e9      	bne.n	8007f2a <HAL_SPI_Transmit+0x118>
 8007f56:	e7cf      	b.n	8007ef8 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007f58:	2320      	movs	r3, #32
 8007f5a:	6563      	str	r3, [r4, #84]	; 0x54
 8007f5c:	e7ac      	b.n	8007eb8 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007f5e:	2002      	movs	r0, #2
 8007f60:	e7cb      	b.n	8007efa <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007f62:	2002      	movs	r0, #2
 8007f64:	e7cf      	b.n	8007f06 <HAL_SPI_Transmit+0xf4>

08007f66 <HAL_SPI_TransmitReceive>:
{
 8007f66:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f6a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007f6c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007f70:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007f72:	2b01      	cmp	r3, #1
{
 8007f74:	4604      	mov	r4, r0
 8007f76:	460d      	mov	r5, r1
 8007f78:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007f7a:	f000 80e6 	beq.w	800814a <HAL_SPI_TransmitReceive+0x1e4>
 8007f7e:	2301      	movs	r3, #1
 8007f80:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007f84:	f7fd ffc8 	bl	8005f18 <HAL_GetTick>
  tmp_state           = hspi->State;
 8007f88:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007f8c:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007f8e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007f90:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007f92:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007f94:	d00a      	beq.n	8007fac <HAL_SPI_TransmitReceive+0x46>
 8007f96:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007f9a:	f040 80d4 	bne.w	8008146 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007f9e:	68a3      	ldr	r3, [r4, #8]
 8007fa0:	2b00      	cmp	r3, #0
 8007fa2:	f040 80d0 	bne.w	8008146 <HAL_SPI_TransmitReceive+0x1e0>
 8007fa6:	2904      	cmp	r1, #4
 8007fa8:	f040 80cd 	bne.w	8008146 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007fac:	2d00      	cmp	r5, #0
 8007fae:	d040      	beq.n	8008032 <HAL_SPI_TransmitReceive+0xcc>
 8007fb0:	f1b9 0f00 	cmp.w	r9, #0
 8007fb4:	d03d      	beq.n	8008032 <HAL_SPI_TransmitReceive+0xcc>
 8007fb6:	2e00      	cmp	r6, #0
 8007fb8:	d03b      	beq.n	8008032 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007fba:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007fbe:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007fc2:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007fc4:	bf1c      	itt	ne
 8007fc6:	2305      	movne	r3, #5
 8007fc8:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007fcc:	2300      	movs	r3, #0
 8007fce:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007fd0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007fd4:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007fd6:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007fd8:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007fda:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007fdc:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007fde:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007fe0:	bf58      	it	pl
 8007fe2:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007fe4:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007fe6:	bf58      	it	pl
 8007fe8:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007fec:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007fee:	bf58      	it	pl
 8007ff0:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007ff2:	68e1      	ldr	r1, [r4, #12]
 8007ff4:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007ff8:	d152      	bne.n	80080a0 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007ffa:	b10a      	cbz	r2, 8008000 <HAL_SPI_TransmitReceive+0x9a>
 8007ffc:	2e01      	cmp	r6, #1
 8007ffe:	d107      	bne.n	8008010 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008000:	f835 2b02 	ldrh.w	r2, [r5], #2
 8008004:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8008006:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8008008:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800800a:	3b01      	subs	r3, #1
 800800c:	b29b      	uxth	r3, r3
 800800e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8008010:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8008012:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008014:	b29b      	uxth	r3, r3
 8008016:	b973      	cbnz	r3, 8008036 <HAL_SPI_TransmitReceive+0xd0>
 8008018:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800801a:	b29b      	uxth	r3, r3
 800801c:	b95b      	cbnz	r3, 8008036 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800801e:	4642      	mov	r2, r8
 8008020:	4639      	mov	r1, r7
 8008022:	4620      	mov	r0, r4
 8008024:	f7ff fe8c 	bl	8007d40 <SPI_EndRxTxTransaction>
 8008028:	2800      	cmp	r0, #0
 800802a:	f000 8081 	beq.w	8008130 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800802e:	2320      	movs	r3, #32
 8008030:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8008032:	2001      	movs	r0, #1
 8008034:	e02b      	b.n	800808e <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8008036:	6821      	ldr	r1, [r4, #0]
 8008038:	688b      	ldr	r3, [r1, #8]
 800803a:	079e      	lsls	r6, r3, #30
 800803c:	d50d      	bpl.n	800805a <HAL_SPI_TransmitReceive+0xf4>
 800803e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008040:	b29b      	uxth	r3, r3
 8008042:	b153      	cbz	r3, 800805a <HAL_SPI_TransmitReceive+0xf4>
 8008044:	b14d      	cbz	r5, 800805a <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008046:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008048:	f833 2b02 	ldrh.w	r2, [r3], #2
 800804c:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800804e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008050:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008052:	3b01      	subs	r3, #1
 8008054:	b29b      	uxth	r3, r3
 8008056:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8008058:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800805a:	688a      	ldr	r2, [r1, #8]
 800805c:	f012 0201 	ands.w	r2, r2, #1
 8008060:	d00c      	beq.n	800807c <HAL_SPI_TransmitReceive+0x116>
 8008062:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008064:	b29b      	uxth	r3, r3
 8008066:	b14b      	cbz	r3, 800807c <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8008068:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800806a:	68c9      	ldr	r1, [r1, #12]
 800806c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008070:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008072:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008074:	3b01      	subs	r3, #1
 8008076:	b29b      	uxth	r3, r3
 8008078:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800807a:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800807c:	f7fd ff4c 	bl	8005f18 <HAL_GetTick>
 8008080:	eba0 0008 	sub.w	r0, r0, r8
 8008084:	42b8      	cmp	r0, r7
 8008086:	d3c4      	bcc.n	8008012 <HAL_SPI_TransmitReceive+0xac>
 8008088:	1c78      	adds	r0, r7, #1
 800808a:	d0c2      	beq.n	8008012 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 800808c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800808e:	2301      	movs	r3, #1
 8008090:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008094:	2300      	movs	r3, #0
 8008096:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800809a:	b003      	add	sp, #12
 800809c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80080a0:	b10a      	cbz	r2, 80080a6 <HAL_SPI_TransmitReceive+0x140>
 80080a2:	2e01      	cmp	r6, #1
 80080a4:	d108      	bne.n	80080b8 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80080a6:	782a      	ldrb	r2, [r5, #0]
 80080a8:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80080aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80080ac:	3301      	adds	r3, #1
 80080ae:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80080b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80080b2:	3b01      	subs	r3, #1
 80080b4:	b29b      	uxth	r3, r3
 80080b6:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80080b8:	2501      	movs	r5, #1
 80080ba:	e02d      	b.n	8008118 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80080bc:	6822      	ldr	r2, [r4, #0]
 80080be:	6893      	ldr	r3, [r2, #8]
 80080c0:	0799      	lsls	r1, r3, #30
 80080c2:	d50e      	bpl.n	80080e2 <HAL_SPI_TransmitReceive+0x17c>
 80080c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80080c6:	b29b      	uxth	r3, r3
 80080c8:	b15b      	cbz	r3, 80080e2 <HAL_SPI_TransmitReceive+0x17c>
 80080ca:	b155      	cbz	r5, 80080e2 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80080cc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80080ce:	781b      	ldrb	r3, [r3, #0]
 80080d0:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 80080d2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80080d4:	3301      	adds	r3, #1
 80080d6:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80080d8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80080da:	3b01      	subs	r3, #1
 80080dc:	b29b      	uxth	r3, r3
 80080de:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80080e0:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80080e2:	6822      	ldr	r2, [r4, #0]
 80080e4:	6891      	ldr	r1, [r2, #8]
 80080e6:	f011 0101 	ands.w	r1, r1, #1
 80080ea:	d00d      	beq.n	8008108 <HAL_SPI_TransmitReceive+0x1a2>
 80080ec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080ee:	b29b      	uxth	r3, r3
 80080f0:	b153      	cbz	r3, 8008108 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80080f2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80080f4:	68d2      	ldr	r2, [r2, #12]
 80080f6:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80080f8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80080fa:	3301      	adds	r3, #1
 80080fc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80080fe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008100:	3b01      	subs	r3, #1
 8008102:	b29b      	uxth	r3, r3
 8008104:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8008106:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8008108:	f7fd ff06 	bl	8005f18 <HAL_GetTick>
 800810c:	eba0 0008 	sub.w	r0, r0, r8
 8008110:	42b8      	cmp	r0, r7
 8008112:	d30a      	bcc.n	800812a <HAL_SPI_TransmitReceive+0x1c4>
 8008114:	1c7b      	adds	r3, r7, #1
 8008116:	d1b9      	bne.n	800808c <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8008118:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800811a:	b29b      	uxth	r3, r3
 800811c:	2b00      	cmp	r3, #0
 800811e:	d1cd      	bne.n	80080bc <HAL_SPI_TransmitReceive+0x156>
 8008120:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008122:	b29b      	uxth	r3, r3
 8008124:	2b00      	cmp	r3, #0
 8008126:	d1c9      	bne.n	80080bc <HAL_SPI_TransmitReceive+0x156>
 8008128:	e779      	b.n	800801e <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800812a:	2f00      	cmp	r7, #0
 800812c:	d1f4      	bne.n	8008118 <HAL_SPI_TransmitReceive+0x1b2>
 800812e:	e7ad      	b.n	800808c <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8008130:	68a3      	ldr	r3, [r4, #8]
 8008132:	2b00      	cmp	r3, #0
 8008134:	d1ab      	bne.n	800808e <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8008136:	6823      	ldr	r3, [r4, #0]
 8008138:	9001      	str	r0, [sp, #4]
 800813a:	68da      	ldr	r2, [r3, #12]
 800813c:	9201      	str	r2, [sp, #4]
 800813e:	689b      	ldr	r3, [r3, #8]
 8008140:	9301      	str	r3, [sp, #4]
 8008142:	9b01      	ldr	r3, [sp, #4]
 8008144:	e7a3      	b.n	800808e <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8008146:	2002      	movs	r0, #2
 8008148:	e7a1      	b.n	800808e <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 800814a:	2002      	movs	r0, #2
 800814c:	e7a5      	b.n	800809a <HAL_SPI_TransmitReceive+0x134>

0800814e <HAL_SPI_Receive>:
{
 800814e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008152:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008154:	6843      	ldr	r3, [r0, #4]
 8008156:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800815a:	4604      	mov	r4, r0
 800815c:	4689      	mov	r9, r1
 800815e:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008160:	d10c      	bne.n	800817c <HAL_SPI_Receive+0x2e>
 8008162:	6883      	ldr	r3, [r0, #8]
 8008164:	b953      	cbnz	r3, 800817c <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8008166:	2304      	movs	r3, #4
 8008168:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800816c:	4613      	mov	r3, r2
 800816e:	9500      	str	r5, [sp, #0]
 8008170:	460a      	mov	r2, r1
 8008172:	f7ff fef8 	bl	8007f66 <HAL_SPI_TransmitReceive>
}
 8008176:	b003      	add	sp, #12
 8008178:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 800817c:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8008180:	2b01      	cmp	r3, #1
 8008182:	f000 8084 	beq.w	800828e <HAL_SPI_Receive+0x140>
 8008186:	2301      	movs	r3, #1
 8008188:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800818c:	f7fd fec4 	bl	8005f18 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8008190:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008194:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008196:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8008198:	b2d8      	uxtb	r0, r3
 800819a:	d176      	bne.n	800828a <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 800819c:	f1b9 0f00 	cmp.w	r9, #0
 80081a0:	d05a      	beq.n	8008258 <HAL_SPI_Receive+0x10a>
 80081a2:	2f00      	cmp	r7, #0
 80081a4:	d058      	beq.n	8008258 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80081a6:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80081a8:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80081ac:	2304      	movs	r3, #4
 80081ae:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80081b2:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 80081b4:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80081b6:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80081b8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 80081bc:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 80081be:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 80081c0:	bf08      	it	eq
 80081c2:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80081c4:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 80081c6:	bf08      	it	eq
 80081c8:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 80081cc:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 80081d0:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 80081d2:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 80081d4:	bf08      	it	eq
 80081d6:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80081d8:	681a      	ldr	r2, [r3, #0]
 80081da:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80081dc:	bf5e      	ittt	pl
 80081de:	681a      	ldrpl	r2, [r3, #0]
 80081e0:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80081e4:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80081e6:	68e3      	ldr	r3, [r4, #12]
 80081e8:	b1f3      	cbz	r3, 8008228 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 80081ea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80081ec:	b29b      	uxth	r3, r3
 80081ee:	b1fb      	cbz	r3, 8008230 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80081f0:	6823      	ldr	r3, [r4, #0]
 80081f2:	689a      	ldr	r2, [r3, #8]
 80081f4:	07d2      	lsls	r2, r2, #31
 80081f6:	d539      	bpl.n	800826c <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80081f8:	68da      	ldr	r2, [r3, #12]
 80081fa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80081fc:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008200:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008202:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008204:	3b01      	subs	r3, #1
 8008206:	b29b      	uxth	r3, r3
 8008208:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800820a:	e7ee      	b.n	80081ea <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800820c:	6823      	ldr	r3, [r4, #0]
 800820e:	689a      	ldr	r2, [r3, #8]
 8008210:	07d0      	lsls	r0, r2, #31
 8008212:	d518      	bpl.n	8008246 <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8008214:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008216:	7b1b      	ldrb	r3, [r3, #12]
 8008218:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800821a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800821c:	3301      	adds	r3, #1
 800821e:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008220:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008222:	3b01      	subs	r3, #1
 8008224:	b29b      	uxth	r3, r3
 8008226:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8008228:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800822a:	b29b      	uxth	r3, r3
 800822c:	2b00      	cmp	r3, #0
 800822e:	d1ed      	bne.n	800820c <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008230:	4642      	mov	r2, r8
 8008232:	4629      	mov	r1, r5
 8008234:	4620      	mov	r0, r4
 8008236:	f7ff fd59 	bl	8007cec <SPI_EndRxTransaction>
 800823a:	bb18      	cbnz	r0, 8008284 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800823c:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800823e:	3800      	subs	r0, #0
 8008240:	bf18      	it	ne
 8008242:	2001      	movne	r0, #1
error :
 8008244:	e008      	b.n	8008258 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008246:	f7fd fe67 	bl	8005f18 <HAL_GetTick>
 800824a:	eba0 0008 	sub.w	r0, r0, r8
 800824e:	42a8      	cmp	r0, r5
 8008250:	d309      	bcc.n	8008266 <HAL_SPI_Receive+0x118>
 8008252:	1c69      	adds	r1, r5, #1
 8008254:	d0e8      	beq.n	8008228 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 8008256:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008258:	2301      	movs	r3, #1
 800825a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800825e:	2300      	movs	r3, #0
 8008260:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008264:	e787      	b.n	8008176 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008266:	2d00      	cmp	r5, #0
 8008268:	d1de      	bne.n	8008228 <HAL_SPI_Receive+0xda>
 800826a:	e7f4      	b.n	8008256 <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800826c:	f7fd fe54 	bl	8005f18 <HAL_GetTick>
 8008270:	eba0 0008 	sub.w	r0, r0, r8
 8008274:	42a8      	cmp	r0, r5
 8008276:	d302      	bcc.n	800827e <HAL_SPI_Receive+0x130>
 8008278:	1c6b      	adds	r3, r5, #1
 800827a:	d0b6      	beq.n	80081ea <HAL_SPI_Receive+0x9c>
 800827c:	e7eb      	b.n	8008256 <HAL_SPI_Receive+0x108>
 800827e:	2d00      	cmp	r5, #0
 8008280:	d1b3      	bne.n	80081ea <HAL_SPI_Receive+0x9c>
 8008282:	e7e8      	b.n	8008256 <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008284:	2320      	movs	r3, #32
 8008286:	6563      	str	r3, [r4, #84]	; 0x54
 8008288:	e7d8      	b.n	800823c <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800828a:	2002      	movs	r0, #2
 800828c:	e7e4      	b.n	8008258 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 800828e:	2002      	movs	r0, #2
 8008290:	e771      	b.n	8008176 <HAL_SPI_Receive+0x28>

08008292 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008292:	6803      	ldr	r3, [r0, #0]
 8008294:	68da      	ldr	r2, [r3, #12]
 8008296:	f042 0201 	orr.w	r2, r2, #1
 800829a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800829c:	689a      	ldr	r2, [r3, #8]
 800829e:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80082a2:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 80082a4:	bf1e      	ittt	ne
 80082a6:	681a      	ldrne	r2, [r3, #0]
 80082a8:	f042 0201 	orrne.w	r2, r2, #1
 80082ac:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 80082ae:	2000      	movs	r0, #0
 80082b0:	4770      	bx	lr

080082b2 <HAL_TIM_OC_DelayElapsedCallback>:
 80082b2:	4770      	bx	lr

080082b4 <HAL_TIM_IC_CaptureCallback>:
 80082b4:	4770      	bx	lr

080082b6 <HAL_TIM_PWM_PulseFinishedCallback>:
 80082b6:	4770      	bx	lr

080082b8 <HAL_TIM_TriggerCallback>:
 80082b8:	4770      	bx	lr

080082ba <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80082ba:	6803      	ldr	r3, [r0, #0]
 80082bc:	691a      	ldr	r2, [r3, #16]
 80082be:	0791      	lsls	r1, r2, #30
{
 80082c0:	b510      	push	{r4, lr}
 80082c2:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80082c4:	d50e      	bpl.n	80082e4 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80082c6:	68da      	ldr	r2, [r3, #12]
 80082c8:	0792      	lsls	r2, r2, #30
 80082ca:	d50b      	bpl.n	80082e4 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80082cc:	f06f 0202 	mvn.w	r2, #2
 80082d0:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80082d2:	2201      	movs	r2, #1
 80082d4:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80082d6:	699b      	ldr	r3, [r3, #24]
 80082d8:	079b      	lsls	r3, r3, #30
 80082da:	d077      	beq.n	80083cc <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80082dc:	f7ff ffea 	bl	80082b4 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80082e0:	2300      	movs	r3, #0
 80082e2:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80082e4:	6823      	ldr	r3, [r4, #0]
 80082e6:	691a      	ldr	r2, [r3, #16]
 80082e8:	0750      	lsls	r0, r2, #29
 80082ea:	d510      	bpl.n	800830e <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80082ec:	68da      	ldr	r2, [r3, #12]
 80082ee:	0751      	lsls	r1, r2, #29
 80082f0:	d50d      	bpl.n	800830e <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80082f2:	f06f 0204 	mvn.w	r2, #4
 80082f6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80082f8:	2202      	movs	r2, #2
 80082fa:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80082fc:	699b      	ldr	r3, [r3, #24]
 80082fe:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008302:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008304:	d068      	beq.n	80083d8 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8008306:	f7ff ffd5 	bl	80082b4 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800830a:	2300      	movs	r3, #0
 800830c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800830e:	6823      	ldr	r3, [r4, #0]
 8008310:	691a      	ldr	r2, [r3, #16]
 8008312:	0712      	lsls	r2, r2, #28
 8008314:	d50f      	bpl.n	8008336 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8008316:	68da      	ldr	r2, [r3, #12]
 8008318:	0710      	lsls	r0, r2, #28
 800831a:	d50c      	bpl.n	8008336 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800831c:	f06f 0208 	mvn.w	r2, #8
 8008320:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8008322:	2204      	movs	r2, #4
 8008324:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008326:	69db      	ldr	r3, [r3, #28]
 8008328:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800832a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800832c:	d05a      	beq.n	80083e4 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800832e:	f7ff ffc1 	bl	80082b4 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008332:	2300      	movs	r3, #0
 8008334:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8008336:	6823      	ldr	r3, [r4, #0]
 8008338:	691a      	ldr	r2, [r3, #16]
 800833a:	06d2      	lsls	r2, r2, #27
 800833c:	d510      	bpl.n	8008360 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800833e:	68da      	ldr	r2, [r3, #12]
 8008340:	06d0      	lsls	r0, r2, #27
 8008342:	d50d      	bpl.n	8008360 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008344:	f06f 0210 	mvn.w	r2, #16
 8008348:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800834a:	2208      	movs	r2, #8
 800834c:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800834e:	69db      	ldr	r3, [r3, #28]
 8008350:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008354:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008356:	d04b      	beq.n	80083f0 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8008358:	f7ff ffac 	bl	80082b4 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800835c:	2300      	movs	r3, #0
 800835e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008360:	6823      	ldr	r3, [r4, #0]
 8008362:	691a      	ldr	r2, [r3, #16]
 8008364:	07d1      	lsls	r1, r2, #31
 8008366:	d508      	bpl.n	800837a <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008368:	68da      	ldr	r2, [r3, #12]
 800836a:	07d2      	lsls	r2, r2, #31
 800836c:	d505      	bpl.n	800837a <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800836e:	f06f 0201 	mvn.w	r2, #1
 8008372:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008374:	4620      	mov	r0, r4
 8008376:	f7f9 fca7 	bl	8001cc8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800837a:	6823      	ldr	r3, [r4, #0]
 800837c:	691a      	ldr	r2, [r3, #16]
 800837e:	0610      	lsls	r0, r2, #24
 8008380:	d508      	bpl.n	8008394 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008382:	68da      	ldr	r2, [r3, #12]
 8008384:	0611      	lsls	r1, r2, #24
 8008386:	d505      	bpl.n	8008394 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008388:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800838c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800838e:	4620      	mov	r0, r4
 8008390:	f000 f8f5 	bl	800857e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008394:	6823      	ldr	r3, [r4, #0]
 8008396:	691a      	ldr	r2, [r3, #16]
 8008398:	0652      	lsls	r2, r2, #25
 800839a:	d508      	bpl.n	80083ae <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800839c:	68da      	ldr	r2, [r3, #12]
 800839e:	0650      	lsls	r0, r2, #25
 80083a0:	d505      	bpl.n	80083ae <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80083a2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80083a6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80083a8:	4620      	mov	r0, r4
 80083aa:	f7ff ff85 	bl	80082b8 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80083ae:	6823      	ldr	r3, [r4, #0]
 80083b0:	691a      	ldr	r2, [r3, #16]
 80083b2:	0691      	lsls	r1, r2, #26
 80083b4:	d522      	bpl.n	80083fc <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80083b6:	68da      	ldr	r2, [r3, #12]
 80083b8:	0692      	lsls	r2, r2, #26
 80083ba:	d51f      	bpl.n	80083fc <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80083bc:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80083c0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80083c2:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80083c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80083c8:	f000 b8d8 	b.w	800857c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80083cc:	f7ff ff71 	bl	80082b2 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80083d0:	4620      	mov	r0, r4
 80083d2:	f7ff ff70 	bl	80082b6 <HAL_TIM_PWM_PulseFinishedCallback>
 80083d6:	e783      	b.n	80082e0 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80083d8:	f7ff ff6b 	bl	80082b2 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80083dc:	4620      	mov	r0, r4
 80083de:	f7ff ff6a 	bl	80082b6 <HAL_TIM_PWM_PulseFinishedCallback>
 80083e2:	e792      	b.n	800830a <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80083e4:	f7ff ff65 	bl	80082b2 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80083e8:	4620      	mov	r0, r4
 80083ea:	f7ff ff64 	bl	80082b6 <HAL_TIM_PWM_PulseFinishedCallback>
 80083ee:	e7a0      	b.n	8008332 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80083f0:	f7ff ff5f 	bl	80082b2 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80083f4:	4620      	mov	r0, r4
 80083f6:	f7ff ff5e 	bl	80082b6 <HAL_TIM_PWM_PulseFinishedCallback>
 80083fa:	e7af      	b.n	800835c <HAL_TIM_IRQHandler+0xa2>
}
 80083fc:	bd10      	pop	{r4, pc}
	...

08008400 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008400:	4a30      	ldr	r2, [pc, #192]	; (80084c4 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8008402:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008404:	4290      	cmp	r0, r2
 8008406:	d012      	beq.n	800842e <TIM_Base_SetConfig+0x2e>
 8008408:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800840c:	d00f      	beq.n	800842e <TIM_Base_SetConfig+0x2e>
 800840e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008412:	4290      	cmp	r0, r2
 8008414:	d00b      	beq.n	800842e <TIM_Base_SetConfig+0x2e>
 8008416:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800841a:	4290      	cmp	r0, r2
 800841c:	d007      	beq.n	800842e <TIM_Base_SetConfig+0x2e>
 800841e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008422:	4290      	cmp	r0, r2
 8008424:	d003      	beq.n	800842e <TIM_Base_SetConfig+0x2e>
 8008426:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800842a:	4290      	cmp	r0, r2
 800842c:	d119      	bne.n	8008462 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800842e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008430:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008434:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008436:	4a23      	ldr	r2, [pc, #140]	; (80084c4 <TIM_Base_SetConfig+0xc4>)
 8008438:	4290      	cmp	r0, r2
 800843a:	d029      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 800843c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008440:	d026      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 8008442:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008446:	4290      	cmp	r0, r2
 8008448:	d022      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 800844a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800844e:	4290      	cmp	r0, r2
 8008450:	d01e      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 8008452:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008456:	4290      	cmp	r0, r2
 8008458:	d01a      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 800845a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800845e:	4290      	cmp	r0, r2
 8008460:	d016      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 8008462:	4a19      	ldr	r2, [pc, #100]	; (80084c8 <TIM_Base_SetConfig+0xc8>)
 8008464:	4290      	cmp	r0, r2
 8008466:	d013      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 8008468:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800846c:	4290      	cmp	r0, r2
 800846e:	d00f      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 8008470:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008474:	4290      	cmp	r0, r2
 8008476:	d00b      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 8008478:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800847c:	4290      	cmp	r0, r2
 800847e:	d007      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 8008480:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008484:	4290      	cmp	r0, r2
 8008486:	d003      	beq.n	8008490 <TIM_Base_SetConfig+0x90>
 8008488:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800848c:	4290      	cmp	r0, r2
 800848e:	d103      	bne.n	8008498 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008490:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008492:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008496:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008498:	694a      	ldr	r2, [r1, #20]
 800849a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800849e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80084a0:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80084a2:	688b      	ldr	r3, [r1, #8]
 80084a4:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80084a6:	680b      	ldr	r3, [r1, #0]
 80084a8:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80084aa:	4b06      	ldr	r3, [pc, #24]	; (80084c4 <TIM_Base_SetConfig+0xc4>)
 80084ac:	4298      	cmp	r0, r3
 80084ae:	d003      	beq.n	80084b8 <TIM_Base_SetConfig+0xb8>
 80084b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80084b4:	4298      	cmp	r0, r3
 80084b6:	d101      	bne.n	80084bc <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80084b8:	690b      	ldr	r3, [r1, #16]
 80084ba:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80084bc:	2301      	movs	r3, #1
 80084be:	6143      	str	r3, [r0, #20]
}
 80084c0:	4770      	bx	lr
 80084c2:	bf00      	nop
 80084c4:	40010000 	.word	0x40010000
 80084c8:	40014000 	.word	0x40014000

080084cc <HAL_TIM_Base_Init>:
{
 80084cc:	b510      	push	{r4, lr}
  if (htim == NULL)
 80084ce:	4604      	mov	r4, r0
 80084d0:	b1a0      	cbz	r0, 80084fc <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80084d2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80084d6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80084da:	b91b      	cbnz	r3, 80084e4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80084dc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80084e0:	f7f9 fe50 	bl	8002184 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80084e4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80084e6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80084e8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80084ec:	1d21      	adds	r1, r4, #4
 80084ee:	f7ff ff87 	bl	8008400 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80084f2:	2301      	movs	r3, #1
 80084f4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80084f8:	2000      	movs	r0, #0
}
 80084fa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80084fc:	2001      	movs	r0, #1
 80084fe:	e7fc      	b.n	80084fa <HAL_TIM_Base_Init+0x2e>

08008500 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008500:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8008502:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8008506:	2b01      	cmp	r3, #1
 8008508:	f04f 0302 	mov.w	r3, #2
 800850c:	d032      	beq.n	8008574 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800850e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8008512:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008514:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8008516:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8008518:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800851a:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800851e:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008520:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008522:	4c15      	ldr	r4, [pc, #84]	; (8008578 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8008524:	42a3      	cmp	r3, r4
 8008526:	d01a      	beq.n	800855e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008528:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800852c:	d017      	beq.n	800855e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800852e:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8008532:	42a3      	cmp	r3, r4
 8008534:	d013      	beq.n	800855e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008536:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800853a:	42a3      	cmp	r3, r4
 800853c:	d00f      	beq.n	800855e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800853e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008542:	42a3      	cmp	r3, r4
 8008544:	d00b      	beq.n	800855e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008546:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800854a:	42a3      	cmp	r3, r4
 800854c:	d007      	beq.n	800855e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800854e:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008552:	42a3      	cmp	r3, r4
 8008554:	d003      	beq.n	800855e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008556:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800855a:	42a3      	cmp	r3, r4
 800855c:	d104      	bne.n	8008568 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800855e:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008560:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008564:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008566:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008568:	2301      	movs	r3, #1
 800856a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800856e:	2300      	movs	r3, #0
 8008570:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008574:	4618      	mov	r0, r3

  return HAL_OK;
}
 8008576:	bd30      	pop	{r4, r5, pc}
 8008578:	40010000 	.word	0x40010000

0800857c <HAL_TIMEx_CommutCallback>:
 800857c:	4770      	bx	lr

0800857e <HAL_TIMEx_BreakCallback>:
 800857e:	4770      	bx	lr

08008580 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008580:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008584:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8008586:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800858a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800858e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8008592:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008596:	6809      	ldr	r1, [r1, #0]
 8008598:	2901      	cmp	r1, #1
 800859a:	ea43 0304 	orr.w	r3, r3, r4
 800859e:	4912      	ldr	r1, [pc, #72]	; (80085e8 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80085a0:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80085a2:	d00f      	beq.n	80085c4 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80085a4:	431a      	orrs	r2, r3
 80085a6:	432a      	orrs	r2, r5
 80085a8:	ea42 0308 	orr.w	r3, r2, r8
 80085ac:	ea43 030e 	orr.w	r3, r3, lr
 80085b0:	ea43 030c 	orr.w	r3, r3, ip
 80085b4:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80085b6:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80085b8:	4333      	orrs	r3, r6
 80085ba:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80085bc:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80085be:	2000      	movs	r0, #0
 80085c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80085c4:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80085c6:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80085c8:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80085ca:	ea45 0208 	orr.w	r2, r5, r8
 80085ce:	ea42 020e 	orr.w	r2, r2, lr
 80085d2:	ea42 020c 	orr.w	r2, r2, ip
 80085d6:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80085d8:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80085dc:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80085de:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80085e0:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80085e2:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80085e4:	6042      	str	r2, [r0, #4]
 80085e6:	e7ea      	b.n	80085be <FMC_SDRAM_Init+0x3e>
 80085e8:	ffff8000 	.word	0xffff8000

080085ec <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80085ec:	68cb      	ldr	r3, [r1, #12]
{
 80085ee:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80085f0:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80085f2:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80085f4:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80085f6:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80085f8:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80085fa:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80085fe:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8008600:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8008602:	3b01      	subs	r3, #1
 8008604:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008606:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008608:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800860a:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 800860c:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 800860e:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008610:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008614:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008618:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 800861c:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8008620:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8008624:	d00c      	beq.n	8008640 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008626:	ea43 030c 	orr.w	r3, r3, ip
 800862a:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800862c:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800862e:	4333      	orrs	r3, r6
 8008630:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008632:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008636:	430b      	orrs	r3, r1
 8008638:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800863a:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 800863c:	2000      	movs	r0, #0
 800863e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008640:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008642:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8008646:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800864a:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800864c:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800864e:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008652:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008654:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008656:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008658:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800865c:	430a      	orrs	r2, r1
 800865e:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008660:	60c2      	str	r2, [r0, #12]
 8008662:	e7eb      	b.n	800863c <FMC_SDRAM_Timing_Init+0x50>

08008664 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008664:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8008666:	2300      	movs	r3, #0
 8008668:	9301      	str	r3, [sp, #4]
{
 800866a:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800866c:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008670:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008672:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008674:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8008678:	688a      	ldr	r2, [r1, #8]
 800867a:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800867c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008680:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008682:	9b01      	ldr	r3, [sp, #4]
 8008684:	6103      	str	r3, [r0, #16]
{
 8008686:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8008688:	f7fd fc46 	bl	8005f18 <HAL_GetTick>
 800868c:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800868e:	69a3      	ldr	r3, [r4, #24]
 8008690:	f013 0320 	ands.w	r3, r3, #32
 8008694:	d101      	bne.n	800869a <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8008696:	4618      	mov	r0, r3
 8008698:	e003      	b.n	80086a2 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800869a:	1c6b      	adds	r3, r5, #1
 800869c:	d0f7      	beq.n	800868e <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800869e:	b915      	cbnz	r5, 80086a6 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 80086a0:	2003      	movs	r0, #3
}
 80086a2:	b002      	add	sp, #8
 80086a4:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80086a6:	f7fd fc37 	bl	8005f18 <HAL_GetTick>
 80086aa:	1b80      	subs	r0, r0, r6
 80086ac:	42a8      	cmp	r0, r5
 80086ae:	d9ee      	bls.n	800868e <FMC_SDRAM_SendCommand+0x2a>
 80086b0:	e7f6      	b.n	80086a0 <FMC_SDRAM_SendCommand+0x3c>

080086b2 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80086b2:	6943      	ldr	r3, [r0, #20]
 80086b4:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80086b8:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80086ba:	2000      	movs	r0, #0
 80086bc:	4770      	bx	lr
	...

080086c0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086c0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80086c4:	b113      	cbz	r3, 80086cc <osKernelInitialize+0xc>
    stat = osErrorISR;
 80086c6:	f06f 0005 	mvn.w	r0, #5
 80086ca:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086cc:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80086d0:	4b07      	ldr	r3, [pc, #28]	; (80086f0 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80086d2:	b912      	cbnz	r2, 80086da <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086d4:	f3ef 8211 	mrs	r2, BASEPRI
 80086d8:	b112      	cbz	r2, 80086e0 <osKernelInitialize+0x20>
 80086da:	681a      	ldr	r2, [r3, #0]
 80086dc:	2a02      	cmp	r2, #2
 80086de:	d0f2      	beq.n	80086c6 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80086e0:	6818      	ldr	r0, [r3, #0]
 80086e2:	b910      	cbnz	r0, 80086ea <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80086e4:	2201      	movs	r2, #1
 80086e6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80086e8:	4770      	bx	lr
    } else {
      stat = osError;
 80086ea:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80086ee:	4770      	bx	lr
 80086f0:	20004c9c 	.word	0x20004c9c

080086f4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80086f4:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086f6:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80086fa:	b113      	cbz	r3, 8008702 <osKernelStart+0xe>
    stat = osErrorISR;
 80086fc:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8008700:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008702:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008706:	4b0a      	ldr	r3, [pc, #40]	; (8008730 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8008708:	b912      	cbnz	r2, 8008710 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800870a:	f3ef 8211 	mrs	r2, BASEPRI
 800870e:	b112      	cbz	r2, 8008716 <osKernelStart+0x22>
 8008710:	681a      	ldr	r2, [r3, #0]
 8008712:	2a02      	cmp	r2, #2
 8008714:	d0f2      	beq.n	80086fc <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8008716:	681a      	ldr	r2, [r3, #0]
 8008718:	2a01      	cmp	r2, #1
 800871a:	d105      	bne.n	8008728 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 800871c:	2202      	movs	r2, #2
 800871e:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8008720:	f001 fbd8 	bl	8009ed4 <vTaskStartScheduler>
      stat = osOK;
 8008724:	2000      	movs	r0, #0
 8008726:	e7eb      	b.n	8008700 <osKernelStart+0xc>
      stat = osError;
 8008728:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800872c:	e7e8      	b.n	8008700 <osKernelStart+0xc>
 800872e:	bf00      	nop
 8008730:	20004c9c 	.word	0x20004c9c

08008734 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008734:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008736:	b087      	sub	sp, #28
 8008738:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800873a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800873c:	460b      	mov	r3, r1
  hTask = NULL;
 800873e:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008740:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008744:	bb22      	cbnz	r2, 8008790 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008746:	f3ef 8210 	mrs	r2, PRIMASK
 800874a:	b912      	cbnz	r2, 8008752 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800874c:	f3ef 8211 	mrs	r2, BASEPRI
 8008750:	b11a      	cbz	r2, 800875a <osThreadNew+0x26>
 8008752:	4a22      	ldr	r2, [pc, #136]	; (80087dc <osThreadNew+0xa8>)
 8008754:	6812      	ldr	r2, [r2, #0]
 8008756:	2a02      	cmp	r2, #2
 8008758:	d01a      	beq.n	8008790 <osThreadNew+0x5c>
 800875a:	b1c8      	cbz	r0, 8008790 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800875c:	2c00      	cmp	r4, #0
 800875e:	d02f      	beq.n	80087c0 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008760:	69a5      	ldr	r5, [r4, #24]
 8008762:	2d00      	cmp	r5, #0
 8008764:	bf08      	it	eq
 8008766:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008768:	1e6a      	subs	r2, r5, #1
 800876a:	2a37      	cmp	r2, #55	; 0x37
 800876c:	46ac      	mov	ip, r5
 800876e:	d82b      	bhi.n	80087c8 <osThreadNew+0x94>
 8008770:	6862      	ldr	r2, [r4, #4]
 8008772:	07d2      	lsls	r2, r2, #31
 8008774:	d428      	bmi.n	80087c8 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008776:	6966      	ldr	r6, [r4, #20]
 8008778:	b16e      	cbz	r6, 8008796 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800877a:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800877c:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008780:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008782:	b157      	cbz	r7, 800879a <osThreadNew+0x66>
 8008784:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8008788:	d902      	bls.n	8008790 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800878a:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800878c:	b104      	cbz	r4, 8008790 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800878e:	b9ee      	cbnz	r6, 80087cc <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008790:	9805      	ldr	r0, [sp, #20]
}
 8008792:	b007      	add	sp, #28
 8008794:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008796:	2280      	movs	r2, #128	; 0x80
 8008798:	e7f0      	b.n	800877c <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800879a:	f1be 0f00 	cmp.w	lr, #0
 800879e:	d1f7      	bne.n	8008790 <osThreadNew+0x5c>
      if (mem == 0) {
 80087a0:	6924      	ldr	r4, [r4, #16]
 80087a2:	2c00      	cmp	r4, #0
 80087a4:	d1f4      	bne.n	8008790 <osThreadNew+0x5c>
 80087a6:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80087a8:	a905      	add	r1, sp, #20
 80087aa:	e9cd c100 	strd	ip, r1, [sp]
 80087ae:	b292      	uxth	r2, r2
 80087b0:	4621      	mov	r1, r4
 80087b2:	f001 fb61 	bl	8009e78 <xTaskCreate>
 80087b6:	2801      	cmp	r0, #1
          hTask = NULL;
 80087b8:	bf1c      	itt	ne
 80087ba:	2300      	movne	r3, #0
 80087bc:	9305      	strne	r3, [sp, #20]
 80087be:	e7e7      	b.n	8008790 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 80087c0:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80087c4:	2280      	movs	r2, #128	; 0x80
 80087c6:	e7ef      	b.n	80087a8 <osThreadNew+0x74>
        return (NULL);
 80087c8:	2000      	movs	r0, #0
 80087ca:	e7e2      	b.n	8008792 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80087cc:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80087d0:	9500      	str	r5, [sp, #0]
 80087d2:	f001 fb19 	bl	8009e08 <xTaskCreateStatic>
 80087d6:	9005      	str	r0, [sp, #20]
 80087d8:	e7da      	b.n	8008790 <osThreadNew+0x5c>
 80087da:	bf00      	nop
 80087dc:	20004c9c 	.word	0x20004c9c

080087e0 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 80087e0:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80087e2:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80087e6:	b113      	cbz	r3, 80087ee <osDelay+0xe>
    stat = osErrorISR;
 80087e8:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 80087ec:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80087ee:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80087f2:	b913      	cbnz	r3, 80087fa <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80087f4:	f3ef 8311 	mrs	r3, BASEPRI
 80087f8:	b11b      	cbz	r3, 8008802 <osDelay+0x22>
 80087fa:	4b05      	ldr	r3, [pc, #20]	; (8008810 <osDelay+0x30>)
 80087fc:	681b      	ldr	r3, [r3, #0]
 80087fe:	2b02      	cmp	r3, #2
 8008800:	d0f2      	beq.n	80087e8 <osDelay+0x8>
    if (ticks != 0U) {
 8008802:	2800      	cmp	r0, #0
 8008804:	d0f2      	beq.n	80087ec <osDelay+0xc>
      vTaskDelay(ticks);
 8008806:	f001 fccd 	bl	800a1a4 <vTaskDelay>
    stat = osOK;
 800880a:	2000      	movs	r0, #0
 800880c:	e7ee      	b.n	80087ec <osDelay+0xc>
 800880e:	bf00      	nop
 8008810:	20004c9c 	.word	0x20004c9c

08008814 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008814:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008816:	460e      	mov	r6, r1
 8008818:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800881a:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800881e:	b11b      	cbz	r3, 8008828 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008820:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008822:	4620      	mov	r0, r4
 8008824:	b002      	add	sp, #8
 8008826:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008828:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800882c:	b913      	cbnz	r3, 8008834 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800882e:	f3ef 8311 	mrs	r3, BASEPRI
 8008832:	b11b      	cbz	r3, 800883c <osSemaphoreNew+0x28>
 8008834:	4b21      	ldr	r3, [pc, #132]	; (80088bc <osSemaphoreNew+0xa8>)
 8008836:	681b      	ldr	r3, [r3, #0]
 8008838:	2b02      	cmp	r3, #2
 800883a:	d0f1      	beq.n	8008820 <osSemaphoreNew+0xc>
 800883c:	2800      	cmp	r0, #0
 800883e:	d0ef      	beq.n	8008820 <osSemaphoreNew+0xc>
 8008840:	42b0      	cmp	r0, r6
 8008842:	d3ed      	bcc.n	8008820 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008844:	b1ed      	cbz	r5, 8008882 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008846:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800884a:	b1c3      	cbz	r3, 800887e <osSemaphoreNew+0x6a>
 800884c:	2a4f      	cmp	r2, #79	; 0x4f
 800884e:	d9e7      	bls.n	8008820 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008850:	2801      	cmp	r0, #1
 8008852:	d129      	bne.n	80088a8 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008854:	2203      	movs	r2, #3
 8008856:	9200      	str	r2, [sp, #0]
 8008858:	2200      	movs	r2, #0
 800885a:	4611      	mov	r1, r2
 800885c:	f000 fd2b 	bl	80092b6 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008860:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008862:	2800      	cmp	r0, #0
 8008864:	d0dc      	beq.n	8008820 <osSemaphoreNew+0xc>
 8008866:	b1ce      	cbz	r6, 800889c <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008868:	2300      	movs	r3, #0
 800886a:	461a      	mov	r2, r3
 800886c:	4619      	mov	r1, r3
 800886e:	f000 fdd7 	bl	8009420 <xQueueGenericSend>
 8008872:	2801      	cmp	r0, #1
 8008874:	d012      	beq.n	800889c <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8008876:	4620      	mov	r0, r4
 8008878:	f001 f912 	bl	8009aa0 <vQueueDelete>
 800887c:	e7d0      	b.n	8008820 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800887e:	2a00      	cmp	r2, #0
 8008880:	d1ce      	bne.n	8008820 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008882:	2801      	cmp	r0, #1
 8008884:	d104      	bne.n	8008890 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8008886:	2203      	movs	r2, #3
 8008888:	2100      	movs	r1, #0
 800888a:	f000 fd62 	bl	8009352 <xQueueGenericCreate>
 800888e:	e7e7      	b.n	8008860 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008890:	4631      	mov	r1, r6
 8008892:	f000 fda7 	bl	80093e4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008896:	4604      	mov	r4, r0
 8008898:	2800      	cmp	r0, #0
 800889a:	d0c1      	beq.n	8008820 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 800889c:	b95d      	cbnz	r5, 80088b6 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800889e:	4629      	mov	r1, r5
 80088a0:	4620      	mov	r0, r4
 80088a2:	f001 f8d7 	bl	8009a54 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80088a6:	e7bc      	b.n	8008822 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80088a8:	461a      	mov	r2, r3
 80088aa:	4631      	mov	r1, r6
 80088ac:	f000 fd78 	bl	80093a0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80088b0:	4604      	mov	r4, r0
 80088b2:	2800      	cmp	r0, #0
 80088b4:	d0b4      	beq.n	8008820 <osSemaphoreNew+0xc>
          name = attr->name;
 80088b6:	682d      	ldr	r5, [r5, #0]
 80088b8:	e7f1      	b.n	800889e <osSemaphoreNew+0x8a>
 80088ba:	bf00      	nop
 80088bc:	20004c9c 	.word	0x20004c9c

080088c0 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80088c0:	b513      	push	{r0, r1, r4, lr}
 80088c2:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80088c4:	b918      	cbnz	r0, 80088ce <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 80088c6:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80088ca:	b002      	add	sp, #8
 80088cc:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80088ce:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 80088d2:	b163      	cbz	r3, 80088ee <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 80088d4:	2c00      	cmp	r4, #0
 80088d6:	d1f6      	bne.n	80088c6 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80088d8:	aa01      	add	r2, sp, #4
 80088da:	4621      	mov	r1, r4
      yield = pdFALSE;
 80088dc:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80088de:	f001 f869 	bl	80099b4 <xQueueReceiveFromISR>
 80088e2:	2801      	cmp	r0, #1
 80088e4:	d113      	bne.n	800890e <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 80088e6:	9b01      	ldr	r3, [sp, #4]
 80088e8:	b9a3      	cbnz	r3, 8008914 <osSemaphoreAcquire+0x54>
  stat = osOK;
 80088ea:	2000      	movs	r0, #0
 80088ec:	e7ed      	b.n	80088ca <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80088ee:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80088f2:	b913      	cbnz	r3, 80088fa <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80088f4:	f3ef 8311 	mrs	r3, BASEPRI
 80088f8:	b11b      	cbz	r3, 8008902 <osSemaphoreAcquire+0x42>
 80088fa:	4b0d      	ldr	r3, [pc, #52]	; (8008930 <osSemaphoreAcquire+0x70>)
 80088fc:	681b      	ldr	r3, [r3, #0]
 80088fe:	2b02      	cmp	r3, #2
 8008900:	d0e8      	beq.n	80088d4 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008902:	4621      	mov	r1, r4
 8008904:	f000 ff93 	bl	800982e <xQueueSemaphoreTake>
 8008908:	2801      	cmp	r0, #1
 800890a:	d0ee      	beq.n	80088ea <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 800890c:	b96c      	cbnz	r4, 800892a <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 800890e:	f06f 0002 	mvn.w	r0, #2
 8008912:	e7da      	b.n	80088ca <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008914:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008918:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800891c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008920:	f3bf 8f4f 	dsb	sy
 8008924:	f3bf 8f6f 	isb	sy
 8008928:	e7df      	b.n	80088ea <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800892a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800892e:	e7cc      	b.n	80088ca <osSemaphoreAcquire+0xa>
 8008930:	20004c9c 	.word	0x20004c9c

08008934 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008934:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008936:	b370      	cbz	r0, 8008996 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008938:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800893c:	b14b      	cbz	r3, 8008952 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 800893e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008940:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008942:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008944:	f000 fe80 	bl	8009648 <xQueueGiveFromISR>
 8008948:	2801      	cmp	r0, #1
 800894a:	d014      	beq.n	8008976 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800894c:	f06f 0002 	mvn.w	r0, #2
 8008950:	e014      	b.n	800897c <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008952:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008956:	b913      	cbnz	r3, 800895e <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008958:	f3ef 8311 	mrs	r3, BASEPRI
 800895c:	b11b      	cbz	r3, 8008966 <osSemaphoreRelease+0x32>
 800895e:	4b0f      	ldr	r3, [pc, #60]	; (800899c <osSemaphoreRelease+0x68>)
 8008960:	681b      	ldr	r3, [r3, #0]
 8008962:	2b02      	cmp	r3, #2
 8008964:	d0eb      	beq.n	800893e <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008966:	2300      	movs	r3, #0
 8008968:	461a      	mov	r2, r3
 800896a:	4619      	mov	r1, r3
 800896c:	f000 fd58 	bl	8009420 <xQueueGenericSend>
 8008970:	2801      	cmp	r0, #1
 8008972:	d002      	beq.n	800897a <osSemaphoreRelease+0x46>
 8008974:	e7ea      	b.n	800894c <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008976:	9b01      	ldr	r3, [sp, #4]
 8008978:	b913      	cbnz	r3, 8008980 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800897a:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800897c:	b002      	add	sp, #8
 800897e:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008980:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008984:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008988:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800898c:	f3bf 8f4f 	dsb	sy
 8008990:	f3bf 8f6f 	isb	sy
 8008994:	e7f1      	b.n	800897a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8008996:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800899a:	e7ef      	b.n	800897c <osSemaphoreRelease+0x48>
 800899c:	20004c9c 	.word	0x20004c9c

080089a0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80089a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80089a2:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80089a4:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80089a8:	b11b      	cbz	r3, 80089b2 <osMessageQueueNew+0x12>
  hQueue = NULL;
 80089aa:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80089ac:	4628      	mov	r0, r5
 80089ae:	b002      	add	sp, #8
 80089b0:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80089b2:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80089b6:	b913      	cbnz	r3, 80089be <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80089b8:	f3ef 8311 	mrs	r3, BASEPRI
 80089bc:	b11b      	cbz	r3, 80089c6 <osMessageQueueNew+0x26>
 80089be:	4b1a      	ldr	r3, [pc, #104]	; (8008a28 <osMessageQueueNew+0x88>)
 80089c0:	681b      	ldr	r3, [r3, #0]
 80089c2:	2b02      	cmp	r3, #2
 80089c4:	d0f1      	beq.n	80089aa <osMessageQueueNew+0xa>
 80089c6:	2800      	cmp	r0, #0
 80089c8:	d0ef      	beq.n	80089aa <osMessageQueueNew+0xa>
 80089ca:	2900      	cmp	r1, #0
 80089cc:	d0ed      	beq.n	80089aa <osMessageQueueNew+0xa>
    if (attr != NULL) {
 80089ce:	b1ec      	cbz	r4, 8008a0c <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80089d0:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 80089d4:	b193      	cbz	r3, 80089fc <osMessageQueueNew+0x5c>
 80089d6:	2a4f      	cmp	r2, #79	; 0x4f
 80089d8:	d9e7      	bls.n	80089aa <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80089da:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80089dc:	2a00      	cmp	r2, #0
 80089de:	d0e4      	beq.n	80089aa <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80089e0:	6966      	ldr	r6, [r4, #20]
 80089e2:	fb01 f500 	mul.w	r5, r1, r0
 80089e6:	42ae      	cmp	r6, r5
 80089e8:	d3df      	bcc.n	80089aa <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80089ea:	2500      	movs	r5, #0
 80089ec:	9500      	str	r5, [sp, #0]
 80089ee:	f000 fc62 	bl	80092b6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80089f2:	4605      	mov	r5, r0
 80089f4:	2800      	cmp	r0, #0
 80089f6:	d0d8      	beq.n	80089aa <osMessageQueueNew+0xa>
        name = attr->name;
 80089f8:	6824      	ldr	r4, [r4, #0]
 80089fa:	e00f      	b.n	8008a1c <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80089fc:	2a00      	cmp	r2, #0
 80089fe:	d1d4      	bne.n	80089aa <osMessageQueueNew+0xa>
 8008a00:	6923      	ldr	r3, [r4, #16]
 8008a02:	2b00      	cmp	r3, #0
 8008a04:	d1d1      	bne.n	80089aa <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008a06:	6963      	ldr	r3, [r4, #20]
 8008a08:	2b00      	cmp	r3, #0
 8008a0a:	d1ce      	bne.n	80089aa <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8008a0c:	2200      	movs	r2, #0
 8008a0e:	f000 fca0 	bl	8009352 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008a12:	4605      	mov	r5, r0
 8008a14:	2800      	cmp	r0, #0
 8008a16:	d0c8      	beq.n	80089aa <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8008a18:	2c00      	cmp	r4, #0
 8008a1a:	d1ed      	bne.n	80089f8 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8008a1c:	4621      	mov	r1, r4
 8008a1e:	4628      	mov	r0, r5
 8008a20:	f001 f818 	bl	8009a54 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008a24:	e7c2      	b.n	80089ac <osMessageQueueNew+0xc>
 8008a26:	bf00      	nop
 8008a28:	20004c9c 	.word	0x20004c9c

08008a2c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008a2c:	b513      	push	{r0, r1, r4, lr}
 8008a2e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008a30:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008a34:	b123      	cbz	r3, 8008a40 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008a36:	b9d8      	cbnz	r0, 8008a70 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8008a38:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008a3c:	b002      	add	sp, #8
 8008a3e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008a40:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008a44:	b913      	cbnz	r3, 8008a4c <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008a46:	f3ef 8311 	mrs	r3, BASEPRI
 8008a4a:	b11b      	cbz	r3, 8008a54 <osMessageQueuePut+0x28>
 8008a4c:	4b17      	ldr	r3, [pc, #92]	; (8008aac <osMessageQueuePut+0x80>)
 8008a4e:	681b      	ldr	r3, [r3, #0]
 8008a50:	2b02      	cmp	r3, #2
 8008a52:	d0f0      	beq.n	8008a36 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008a54:	2800      	cmp	r0, #0
 8008a56:	d0ef      	beq.n	8008a38 <osMessageQueuePut+0xc>
 8008a58:	2900      	cmp	r1, #0
 8008a5a:	d0ed      	beq.n	8008a38 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008a5c:	2300      	movs	r3, #0
 8008a5e:	4622      	mov	r2, r4
 8008a60:	f000 fcde 	bl	8009420 <xQueueGenericSend>
 8008a64:	2801      	cmp	r0, #1
 8008a66:	d010      	beq.n	8008a8a <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008a68:	b9e4      	cbnz	r4, 8008aa4 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 8008a6a:	f06f 0002 	mvn.w	r0, #2
 8008a6e:	e7e5      	b.n	8008a3c <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008a70:	2900      	cmp	r1, #0
 8008a72:	d0e1      	beq.n	8008a38 <osMessageQueuePut+0xc>
 8008a74:	2c00      	cmp	r4, #0
 8008a76:	d1df      	bne.n	8008a38 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008a78:	4623      	mov	r3, r4
 8008a7a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008a7c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008a7e:	f000 fd82 	bl	8009586 <xQueueGenericSendFromISR>
 8008a82:	2801      	cmp	r0, #1
 8008a84:	d1f1      	bne.n	8008a6a <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008a86:	9b01      	ldr	r3, [sp, #4]
 8008a88:	b90b      	cbnz	r3, 8008a8e <osMessageQueuePut+0x62>
  stat = osOK;
 8008a8a:	2000      	movs	r0, #0
 8008a8c:	e7d6      	b.n	8008a3c <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008a8e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008a92:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a96:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008a9a:	f3bf 8f4f 	dsb	sy
 8008a9e:	f3bf 8f6f 	isb	sy
 8008aa2:	e7f2      	b.n	8008a8a <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008aa4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008aa8:	e7c8      	b.n	8008a3c <osMessageQueuePut+0x10>
 8008aaa:	bf00      	nop
 8008aac:	20004c9c 	.word	0x20004c9c

08008ab0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008ab0:	b513      	push	{r0, r1, r4, lr}
 8008ab2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008ab4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008ab8:	b123      	cbz	r3, 8008ac4 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008aba:	b9d0      	cbnz	r0, 8008af2 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8008abc:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008ac0:	b002      	add	sp, #8
 8008ac2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008ac4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008ac8:	b913      	cbnz	r3, 8008ad0 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008aca:	f3ef 8311 	mrs	r3, BASEPRI
 8008ace:	b11b      	cbz	r3, 8008ad8 <osMessageQueueGet+0x28>
 8008ad0:	4b16      	ldr	r3, [pc, #88]	; (8008b2c <osMessageQueueGet+0x7c>)
 8008ad2:	681b      	ldr	r3, [r3, #0]
 8008ad4:	2b02      	cmp	r3, #2
 8008ad6:	d0f0      	beq.n	8008aba <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008ad8:	2800      	cmp	r0, #0
 8008ada:	d0ef      	beq.n	8008abc <osMessageQueueGet+0xc>
 8008adc:	2900      	cmp	r1, #0
 8008ade:	d0ed      	beq.n	8008abc <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008ae0:	4622      	mov	r2, r4
 8008ae2:	f000 fe05 	bl	80096f0 <xQueueReceive>
 8008ae6:	2801      	cmp	r0, #1
 8008ae8:	d00f      	beq.n	8008b0a <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 8008aea:	b9dc      	cbnz	r4, 8008b24 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 8008aec:	f06f 0002 	mvn.w	r0, #2
 8008af0:	e7e6      	b.n	8008ac0 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008af2:	2900      	cmp	r1, #0
 8008af4:	d0e2      	beq.n	8008abc <osMessageQueueGet+0xc>
 8008af6:	2c00      	cmp	r4, #0
 8008af8:	d1e0      	bne.n	8008abc <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008afa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008afc:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008afe:	f000 ff59 	bl	80099b4 <xQueueReceiveFromISR>
 8008b02:	2801      	cmp	r0, #1
 8008b04:	d1f2      	bne.n	8008aec <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8008b06:	9b01      	ldr	r3, [sp, #4]
 8008b08:	b90b      	cbnz	r3, 8008b0e <osMessageQueueGet+0x5e>
  stat = osOK;
 8008b0a:	2000      	movs	r0, #0
 8008b0c:	e7d8      	b.n	8008ac0 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8008b0e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b12:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b16:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008b1a:	f3bf 8f4f 	dsb	sy
 8008b1e:	f3bf 8f6f 	isb	sy
 8008b22:	e7f2      	b.n	8008b0a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008b24:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008b28:	e7ca      	b.n	8008ac0 <osMessageQueueGet+0x10>
 8008b2a:	bf00      	nop
 8008b2c:	20004c9c 	.word	0x20004c9c

08008b30 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008b30:	4b03      	ldr	r3, [pc, #12]	; (8008b40 <vApplicationGetIdleTaskMemory+0x10>)
 8008b32:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008b34:	4b03      	ldr	r3, [pc, #12]	; (8008b44 <vApplicationGetIdleTaskMemory+0x14>)
 8008b36:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008b38:	2380      	movs	r3, #128	; 0x80
 8008b3a:	6013      	str	r3, [r2, #0]
}
 8008b3c:	4770      	bx	lr
 8008b3e:	bf00      	nop
 8008b40:	20004bdc 	.word	0x20004bdc
 8008b44:	200049dc 	.word	0x200049dc

08008b48 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008b48:	4b03      	ldr	r3, [pc, #12]	; (8008b58 <vApplicationGetTimerTaskMemory+0x10>)
 8008b4a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008b4c:	4b03      	ldr	r3, [pc, #12]	; (8008b5c <vApplicationGetTimerTaskMemory+0x14>)
 8008b4e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008b50:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008b54:	6013      	str	r3, [r2, #0]
}
 8008b56:	4770      	bx	lr
 8008b58:	200050a0 	.word	0x200050a0
 8008b5c:	20004ca0 	.word	0x20004ca0

08008b60 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008b60:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008b62:	4b0f      	ldr	r3, [pc, #60]	; (8008ba0 <prvInsertBlockIntoFreeList+0x40>)
 8008b64:	461a      	mov	r2, r3
 8008b66:	681b      	ldr	r3, [r3, #0]
 8008b68:	4283      	cmp	r3, r0
 8008b6a:	d3fb      	bcc.n	8008b64 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008b6c:	6854      	ldr	r4, [r2, #4]
 8008b6e:	1911      	adds	r1, r2, r4
 8008b70:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008b72:	bf01      	itttt	eq
 8008b74:	6841      	ldreq	r1, [r0, #4]
 8008b76:	4610      	moveq	r0, r2
 8008b78:	1909      	addeq	r1, r1, r4
 8008b7a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008b7c:	6844      	ldr	r4, [r0, #4]
 8008b7e:	1901      	adds	r1, r0, r4
 8008b80:	428b      	cmp	r3, r1
 8008b82:	d107      	bne.n	8008b94 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008b84:	4907      	ldr	r1, [pc, #28]	; (8008ba4 <prvInsertBlockIntoFreeList+0x44>)
 8008b86:	6809      	ldr	r1, [r1, #0]
 8008b88:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008b8a:	bf1f      	itttt	ne
 8008b8c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008b8e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008b90:	1909      	addne	r1, r1, r4
 8008b92:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008b94:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008b96:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008b98:	bf18      	it	ne
 8008b9a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008b9c:	bd10      	pop	{r4, pc}
 8008b9e:	bf00      	nop
 8008ba0:	20015170 	.word	0x20015170
 8008ba4:	20005160 	.word	0x20005160

08008ba8 <pvPortMalloc>:
{
 8008ba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008bac:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008bae:	f001 f9e1 	bl	8009f74 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008bb2:	4840      	ldr	r0, [pc, #256]	; (8008cb4 <pvPortMalloc+0x10c>)
 8008bb4:	4d40      	ldr	r5, [pc, #256]	; (8008cb8 <pvPortMalloc+0x110>)
 8008bb6:	6803      	ldr	r3, [r0, #0]
 8008bb8:	bb0b      	cbnz	r3, 8008bfe <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008bba:	4940      	ldr	r1, [pc, #256]	; (8008cbc <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008bbc:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008bbe:	bf1f      	itttt	ne
 8008bc0:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008bc2:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008bc6:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 8008bca:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008bcc:	bf14      	ite	ne
 8008bce:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008bd0:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008bd4:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008bd6:	4e3a      	ldr	r6, [pc, #232]	; (8008cc0 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8008bd8:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008bda:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008bde:	2300      	movs	r3, #0
 8008be0:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008be2:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008be4:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008be8:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008bea:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8008bee:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008bf0:	4a34      	ldr	r2, [pc, #208]	; (8008cc4 <pvPortMalloc+0x11c>)
 8008bf2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008bf4:	4a34      	ldr	r2, [pc, #208]	; (8008cc8 <pvPortMalloc+0x120>)
 8008bf6:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008bf8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008bfc:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008bfe:	682f      	ldr	r7, [r5, #0]
 8008c00:	4227      	tst	r7, r4
 8008c02:	d151      	bne.n	8008ca8 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8008c04:	2c00      	cmp	r4, #0
 8008c06:	d042      	beq.n	8008c8e <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8008c08:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008c0c:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008c0e:	bf1c      	itt	ne
 8008c10:	f023 0307 	bicne.w	r3, r3, #7
 8008c14:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008c16:	2b00      	cmp	r3, #0
 8008c18:	d046      	beq.n	8008ca8 <pvPortMalloc+0x100>
 8008c1a:	4c2b      	ldr	r4, [pc, #172]	; (8008cc8 <pvPortMalloc+0x120>)
 8008c1c:	6826      	ldr	r6, [r4, #0]
 8008c1e:	429e      	cmp	r6, r3
 8008c20:	d342      	bcc.n	8008ca8 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8008c22:	4a27      	ldr	r2, [pc, #156]	; (8008cc0 <pvPortMalloc+0x118>)
 8008c24:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008c26:	6869      	ldr	r1, [r5, #4]
 8008c28:	4299      	cmp	r1, r3
 8008c2a:	d204      	bcs.n	8008c36 <pvPortMalloc+0x8e>
 8008c2c:	f8d5 c000 	ldr.w	ip, [r5]
 8008c30:	f1bc 0f00 	cmp.w	ip, #0
 8008c34:	d115      	bne.n	8008c62 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008c36:	6800      	ldr	r0, [r0, #0]
 8008c38:	42a8      	cmp	r0, r5
 8008c3a:	d035      	beq.n	8008ca8 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008c3c:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008c3e:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008c40:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008c44:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008c46:	2910      	cmp	r1, #16
 8008c48:	d912      	bls.n	8008c70 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008c4a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008c4c:	0742      	lsls	r2, r0, #29
 8008c4e:	d00b      	beq.n	8008c68 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008c50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c54:	f383 8811 	msr	BASEPRI, r3
 8008c58:	f3bf 8f6f 	isb	sy
 8008c5c:	f3bf 8f4f 	dsb	sy
 8008c60:	e7fe      	b.n	8008c60 <pvPortMalloc+0xb8>
 8008c62:	462a      	mov	r2, r5
 8008c64:	4665      	mov	r5, ip
 8008c66:	e7de      	b.n	8008c26 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008c68:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008c6a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008c6c:	f7ff ff78 	bl	8008b60 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008c70:	4914      	ldr	r1, [pc, #80]	; (8008cc4 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008c72:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008c74:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008c76:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008c78:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008c7a:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008c7c:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008c80:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008c82:	bf38      	it	cc
 8008c84:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008c86:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008c8a:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008c8c:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008c8e:	f001 fa15 	bl	800a0bc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008c92:	0763      	lsls	r3, r4, #29
 8008c94:	d00a      	beq.n	8008cac <pvPortMalloc+0x104>
 8008c96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c9a:	f383 8811 	msr	BASEPRI, r3
 8008c9e:	f3bf 8f6f 	isb	sy
 8008ca2:	f3bf 8f4f 	dsb	sy
 8008ca6:	e7fe      	b.n	8008ca6 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008ca8:	2400      	movs	r4, #0
 8008caa:	e7f0      	b.n	8008c8e <pvPortMalloc+0xe6>
}
 8008cac:	4620      	mov	r0, r4
 8008cae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008cb2:	bf00      	nop
 8008cb4:	20005160 	.word	0x20005160
 8008cb8:	20015164 	.word	0x20015164
 8008cbc:	20005164 	.word	0x20005164
 8008cc0:	20015170 	.word	0x20015170
 8008cc4:	2001516c 	.word	0x2001516c
 8008cc8:	20015168 	.word	0x20015168

08008ccc <vPortFree>:
{
 8008ccc:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008cce:	4604      	mov	r4, r0
 8008cd0:	b370      	cbz	r0, 8008d30 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008cd2:	4a18      	ldr	r2, [pc, #96]	; (8008d34 <vPortFree+0x68>)
 8008cd4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008cd8:	6812      	ldr	r2, [r2, #0]
 8008cda:	4213      	tst	r3, r2
 8008cdc:	d108      	bne.n	8008cf0 <vPortFree+0x24>
 8008cde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ce2:	f383 8811 	msr	BASEPRI, r3
 8008ce6:	f3bf 8f6f 	isb	sy
 8008cea:	f3bf 8f4f 	dsb	sy
 8008cee:	e7fe      	b.n	8008cee <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008cf0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008cf4:	b141      	cbz	r1, 8008d08 <vPortFree+0x3c>
 8008cf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cfa:	f383 8811 	msr	BASEPRI, r3
 8008cfe:	f3bf 8f6f 	isb	sy
 8008d02:	f3bf 8f4f 	dsb	sy
 8008d06:	e7fe      	b.n	8008d06 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008d08:	ea23 0302 	bic.w	r3, r3, r2
 8008d0c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008d10:	f001 f930 	bl	8009f74 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008d14:	4a08      	ldr	r2, [pc, #32]	; (8008d38 <vPortFree+0x6c>)
 8008d16:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008d1a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008d1c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008d20:	440b      	add	r3, r1
 8008d22:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008d24:	f7ff ff1c 	bl	8008b60 <prvInsertBlockIntoFreeList>
}
 8008d28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008d2c:	f001 b9c6 	b.w	800a0bc <xTaskResumeAll>
}
 8008d30:	bd10      	pop	{r4, pc}
 8008d32:	bf00      	nop
 8008d34:	20015164 	.word	0x20015164
 8008d38:	20015168 	.word	0x20015168

08008d3c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d3c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008d40:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d44:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d48:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d4a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008d4c:	2300      	movs	r3, #0
 8008d4e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008d50:	4770      	bx	lr

08008d52 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008d52:	2300      	movs	r3, #0
 8008d54:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008d56:	4770      	bx	lr

08008d58 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008d58:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008d5a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008d5c:	689a      	ldr	r2, [r3, #8]
 8008d5e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008d60:	689a      	ldr	r2, [r3, #8]
 8008d62:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008d64:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008d66:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008d68:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008d6a:	3301      	adds	r3, #1
 8008d6c:	6003      	str	r3, [r0, #0]
}
 8008d6e:	4770      	bx	lr

08008d70 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008d70:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008d72:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008d74:	1c63      	adds	r3, r4, #1
 8008d76:	d10a      	bne.n	8008d8e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008d78:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008d7a:	685a      	ldr	r2, [r3, #4]
 8008d7c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008d7e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008d80:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008d82:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008d84:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008d86:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008d88:	3301      	adds	r3, #1
 8008d8a:	6003      	str	r3, [r0, #0]
}
 8008d8c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008d8e:	f100 0208 	add.w	r2, r0, #8
 8008d92:	4613      	mov	r3, r2
 8008d94:	6852      	ldr	r2, [r2, #4]
 8008d96:	6815      	ldr	r5, [r2, #0]
 8008d98:	42a5      	cmp	r5, r4
 8008d9a:	d9fa      	bls.n	8008d92 <vListInsert+0x22>
 8008d9c:	e7ed      	b.n	8008d7a <vListInsert+0xa>

08008d9e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008d9e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008da2:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008da4:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008da6:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008da8:	6859      	ldr	r1, [r3, #4]
 8008daa:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008dac:	bf08      	it	eq
 8008dae:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008db0:	2200      	movs	r2, #0
 8008db2:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008db4:	681a      	ldr	r2, [r3, #0]
 8008db6:	3a01      	subs	r2, #1
 8008db8:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008dba:	6818      	ldr	r0, [r3, #0]
}
 8008dbc:	4770      	bx	lr
	...

08008dc0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008dc0:	4808      	ldr	r0, [pc, #32]	; (8008de4 <prvPortStartFirstTask+0x24>)
 8008dc2:	6800      	ldr	r0, [r0, #0]
 8008dc4:	6800      	ldr	r0, [r0, #0]
 8008dc6:	f380 8808 	msr	MSP, r0
 8008dca:	f04f 0000 	mov.w	r0, #0
 8008dce:	f380 8814 	msr	CONTROL, r0
 8008dd2:	b662      	cpsie	i
 8008dd4:	b661      	cpsie	f
 8008dd6:	f3bf 8f4f 	dsb	sy
 8008dda:	f3bf 8f6f 	isb	sy
 8008dde:	df00      	svc	0
 8008de0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008de2:	0000      	.short	0x0000
 8008de4:	e000ed08 	.word	0xe000ed08

08008de8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008de8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008df8 <vPortEnableVFP+0x10>
 8008dec:	6801      	ldr	r1, [r0, #0]
 8008dee:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008df2:	6001      	str	r1, [r0, #0]
 8008df4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008df6:	0000      	.short	0x0000
 8008df8:	e000ed88 	.word	0xe000ed88

08008dfc <prvTaskExitError>:
{
 8008dfc:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008dfe:	2300      	movs	r3, #0
 8008e00:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008e02:	4b0d      	ldr	r3, [pc, #52]	; (8008e38 <prvTaskExitError+0x3c>)
 8008e04:	681b      	ldr	r3, [r3, #0]
 8008e06:	3301      	adds	r3, #1
 8008e08:	d008      	beq.n	8008e1c <prvTaskExitError+0x20>
 8008e0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e0e:	f383 8811 	msr	BASEPRI, r3
 8008e12:	f3bf 8f6f 	isb	sy
 8008e16:	f3bf 8f4f 	dsb	sy
 8008e1a:	e7fe      	b.n	8008e1a <prvTaskExitError+0x1e>
 8008e1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e20:	f383 8811 	msr	BASEPRI, r3
 8008e24:	f3bf 8f6f 	isb	sy
 8008e28:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008e2c:	9b01      	ldr	r3, [sp, #4]
 8008e2e:	2b00      	cmp	r3, #0
 8008e30:	d0fc      	beq.n	8008e2c <prvTaskExitError+0x30>
}
 8008e32:	b002      	add	sp, #8
 8008e34:	4770      	bx	lr
 8008e36:	bf00      	nop
 8008e38:	20000088 	.word	0x20000088

08008e3c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008e3c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008e40:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008e44:	4b07      	ldr	r3, [pc, #28]	; (8008e64 <pxPortInitialiseStack+0x28>)
 8008e46:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008e4a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008e4e:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008e52:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008e56:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008e5a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008e5e:	3844      	subs	r0, #68	; 0x44
 8008e60:	4770      	bx	lr
 8008e62:	bf00      	nop
 8008e64:	08008dfd 	.word	0x08008dfd
	...

08008e70 <SVC_Handler>:
	__asm volatile (
 8008e70:	4b07      	ldr	r3, [pc, #28]	; (8008e90 <pxCurrentTCBConst2>)
 8008e72:	6819      	ldr	r1, [r3, #0]
 8008e74:	6808      	ldr	r0, [r1, #0]
 8008e76:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e7a:	f380 8809 	msr	PSP, r0
 8008e7e:	f3bf 8f6f 	isb	sy
 8008e82:	f04f 0000 	mov.w	r0, #0
 8008e86:	f380 8811 	msr	BASEPRI, r0
 8008e8a:	4770      	bx	lr
 8008e8c:	f3af 8000 	nop.w

08008e90 <pxCurrentTCBConst2>:
 8008e90:	200151c0 	.word	0x200151c0

08008e94 <vPortEnterCritical>:
 8008e94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e98:	f383 8811 	msr	BASEPRI, r3
 8008e9c:	f3bf 8f6f 	isb	sy
 8008ea0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008ea4:	4a0a      	ldr	r2, [pc, #40]	; (8008ed0 <vPortEnterCritical+0x3c>)
 8008ea6:	6813      	ldr	r3, [r2, #0]
 8008ea8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008eaa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008eac:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008eae:	d10e      	bne.n	8008ece <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008eb0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008eb4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008eb8:	b2db      	uxtb	r3, r3
 8008eba:	b143      	cbz	r3, 8008ece <vPortEnterCritical+0x3a>
 8008ebc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ec0:	f383 8811 	msr	BASEPRI, r3
 8008ec4:	f3bf 8f6f 	isb	sy
 8008ec8:	f3bf 8f4f 	dsb	sy
 8008ecc:	e7fe      	b.n	8008ecc <vPortEnterCritical+0x38>
}
 8008ece:	4770      	bx	lr
 8008ed0:	20000088 	.word	0x20000088

08008ed4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008ed4:	4a08      	ldr	r2, [pc, #32]	; (8008ef8 <vPortExitCritical+0x24>)
 8008ed6:	6813      	ldr	r3, [r2, #0]
 8008ed8:	b943      	cbnz	r3, 8008eec <vPortExitCritical+0x18>
 8008eda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ede:	f383 8811 	msr	BASEPRI, r3
 8008ee2:	f3bf 8f6f 	isb	sy
 8008ee6:	f3bf 8f4f 	dsb	sy
 8008eea:	e7fe      	b.n	8008eea <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008eec:	3b01      	subs	r3, #1
 8008eee:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008ef0:	b90b      	cbnz	r3, 8008ef6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008ef2:	f383 8811 	msr	BASEPRI, r3
}
 8008ef6:	4770      	bx	lr
 8008ef8:	20000088 	.word	0x20000088
 8008efc:	00000000 	.word	0x00000000

08008f00 <PendSV_Handler>:
	__asm volatile
 8008f00:	f3ef 8009 	mrs	r0, PSP
 8008f04:	f3bf 8f6f 	isb	sy
 8008f08:	4b15      	ldr	r3, [pc, #84]	; (8008f60 <pxCurrentTCBConst>)
 8008f0a:	681a      	ldr	r2, [r3, #0]
 8008f0c:	f01e 0f10 	tst.w	lr, #16
 8008f10:	bf08      	it	eq
 8008f12:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008f16:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f1a:	6010      	str	r0, [r2, #0]
 8008f1c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008f20:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008f24:	f380 8811 	msr	BASEPRI, r0
 8008f28:	f3bf 8f4f 	dsb	sy
 8008f2c:	f3bf 8f6f 	isb	sy
 8008f30:	f001 f95c 	bl	800a1ec <vTaskSwitchContext>
 8008f34:	f04f 0000 	mov.w	r0, #0
 8008f38:	f380 8811 	msr	BASEPRI, r0
 8008f3c:	bc09      	pop	{r0, r3}
 8008f3e:	6819      	ldr	r1, [r3, #0]
 8008f40:	6808      	ldr	r0, [r1, #0]
 8008f42:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f46:	f01e 0f10 	tst.w	lr, #16
 8008f4a:	bf08      	it	eq
 8008f4c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008f50:	f380 8809 	msr	PSP, r0
 8008f54:	f3bf 8f6f 	isb	sy
 8008f58:	4770      	bx	lr
 8008f5a:	bf00      	nop
 8008f5c:	f3af 8000 	nop.w

08008f60 <pxCurrentTCBConst>:
 8008f60:	200151c0 	.word	0x200151c0

08008f64 <SysTick_Handler>:
{
 8008f64:	b508      	push	{r3, lr}
	__asm volatile
 8008f66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f6a:	f383 8811 	msr	BASEPRI, r3
 8008f6e:	f3bf 8f6f 	isb	sy
 8008f72:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008f76:	f001 f80b 	bl	8009f90 <xTaskIncrementTick>
 8008f7a:	b128      	cbz	r0, 8008f88 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008f7c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008f80:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f84:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008f88:	2300      	movs	r3, #0
 8008f8a:	f383 8811 	msr	BASEPRI, r3
}
 8008f8e:	bd08      	pop	{r3, pc}

08008f90 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008f90:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008f94:	2300      	movs	r3, #0
 8008f96:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008f98:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008f9a:	4b05      	ldr	r3, [pc, #20]	; (8008fb0 <vPortSetupTimerInterrupt+0x20>)
 8008f9c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008fa0:	681b      	ldr	r3, [r3, #0]
 8008fa2:	fbb3 f3f1 	udiv	r3, r3, r1
 8008fa6:	3b01      	subs	r3, #1
 8008fa8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008faa:	2307      	movs	r3, #7
 8008fac:	6113      	str	r3, [r2, #16]
}
 8008fae:	4770      	bx	lr
 8008fb0:	2000007c 	.word	0x2000007c

08008fb4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008fb4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008fb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008fba:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008fbe:	4a3a      	ldr	r2, [pc, #232]	; (80090a8 <xPortStartScheduler+0xf4>)
 8008fc0:	4291      	cmp	r1, r2
 8008fc2:	d108      	bne.n	8008fd6 <xPortStartScheduler+0x22>
	__asm volatile
 8008fc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fc8:	f383 8811 	msr	BASEPRI, r3
 8008fcc:	f3bf 8f6f 	isb	sy
 8008fd0:	f3bf 8f4f 	dsb	sy
 8008fd4:	e7fe      	b.n	8008fd4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008fd6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008fda:	4b34      	ldr	r3, [pc, #208]	; (80090ac <xPortStartScheduler+0xf8>)
 8008fdc:	429a      	cmp	r2, r3
 8008fde:	d108      	bne.n	8008ff2 <xPortStartScheduler+0x3e>
 8008fe0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fe4:	f383 8811 	msr	BASEPRI, r3
 8008fe8:	f3bf 8f6f 	isb	sy
 8008fec:	f3bf 8f4f 	dsb	sy
 8008ff0:	e7fe      	b.n	8008ff0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008ff2:	4b2f      	ldr	r3, [pc, #188]	; (80090b0 <xPortStartScheduler+0xfc>)
 8008ff4:	781a      	ldrb	r2, [r3, #0]
 8008ff6:	b2d2      	uxtb	r2, r2
 8008ff8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008ffa:	22ff      	movs	r2, #255	; 0xff
 8008ffc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008ffe:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8009000:	4a2c      	ldr	r2, [pc, #176]	; (80090b4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8009002:	b2db      	uxtb	r3, r3
 8009004:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8009008:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800900c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8009010:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8009012:	4a29      	ldr	r2, [pc, #164]	; (80090b8 <xPortStartScheduler+0x104>)
 8009014:	2307      	movs	r3, #7
 8009016:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8009018:	2100      	movs	r1, #0
 800901a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800901e:	0600      	lsls	r0, r0, #24
 8009020:	f103 34ff 	add.w	r4, r3, #4294967295
 8009024:	d40c      	bmi.n	8009040 <xPortStartScheduler+0x8c>
 8009026:	b111      	cbz	r1, 800902e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8009028:	2b03      	cmp	r3, #3
 800902a:	6013      	str	r3, [r2, #0]
 800902c:	d011      	beq.n	8009052 <xPortStartScheduler+0x9e>
 800902e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009032:	f383 8811 	msr	BASEPRI, r3
 8009036:	f3bf 8f6f 	isb	sy
 800903a:	f3bf 8f4f 	dsb	sy
 800903e:	e7fe      	b.n	800903e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8009040:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009044:	005b      	lsls	r3, r3, #1
 8009046:	b2db      	uxtb	r3, r3
 8009048:	f88d 3003 	strb.w	r3, [sp, #3]
 800904c:	2101      	movs	r1, #1
 800904e:	4623      	mov	r3, r4
 8009050:	e7e3      	b.n	800901a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8009052:	f44f 7340 	mov.w	r3, #768	; 0x300
 8009056:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009058:	9b01      	ldr	r3, [sp, #4]
 800905a:	4a15      	ldr	r2, [pc, #84]	; (80090b0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800905c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009060:	b2db      	uxtb	r3, r3
 8009062:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8009064:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009068:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800906c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8009070:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009074:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8009078:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800907c:	f7ff ff88 	bl	8008f90 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8009080:	4b0e      	ldr	r3, [pc, #56]	; (80090bc <xPortStartScheduler+0x108>)
 8009082:	2500      	movs	r5, #0
 8009084:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8009086:	f7ff feaf 	bl	8008de8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800908a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800908e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8009092:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8009096:	f7ff fe93 	bl	8008dc0 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800909a:	f001 f8a7 	bl	800a1ec <vTaskSwitchContext>
	prvTaskExitError();
 800909e:	f7ff fead 	bl	8008dfc <prvTaskExitError>
}
 80090a2:	4628      	mov	r0, r5
 80090a4:	b003      	add	sp, #12
 80090a6:	bd30      	pop	{r4, r5, pc}
 80090a8:	410fc271 	.word	0x410fc271
 80090ac:	410fc270 	.word	0x410fc270
 80090b0:	e000e400 	.word	0xe000e400
 80090b4:	20015178 	.word	0x20015178
 80090b8:	2001517c 	.word	0x2001517c
 80090bc:	20000088 	.word	0x20000088

080090c0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80090c0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80090c4:	2b0f      	cmp	r3, #15
 80090c6:	d90e      	bls.n	80090e6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80090c8:	4a11      	ldr	r2, [pc, #68]	; (8009110 <vPortValidateInterruptPriority+0x50>)
 80090ca:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80090cc:	4a11      	ldr	r2, [pc, #68]	; (8009114 <vPortValidateInterruptPriority+0x54>)
 80090ce:	7812      	ldrb	r2, [r2, #0]
 80090d0:	429a      	cmp	r2, r3
 80090d2:	d908      	bls.n	80090e6 <vPortValidateInterruptPriority+0x26>
 80090d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090d8:	f383 8811 	msr	BASEPRI, r3
 80090dc:	f3bf 8f6f 	isb	sy
 80090e0:	f3bf 8f4f 	dsb	sy
 80090e4:	e7fe      	b.n	80090e4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80090e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80090ea:	4a0b      	ldr	r2, [pc, #44]	; (8009118 <vPortValidateInterruptPriority+0x58>)
 80090ec:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80090f0:	6812      	ldr	r2, [r2, #0]
 80090f2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80090f6:	4293      	cmp	r3, r2
 80090f8:	d908      	bls.n	800910c <vPortValidateInterruptPriority+0x4c>
 80090fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090fe:	f383 8811 	msr	BASEPRI, r3
 8009102:	f3bf 8f6f 	isb	sy
 8009106:	f3bf 8f4f 	dsb	sy
 800910a:	e7fe      	b.n	800910a <vPortValidateInterruptPriority+0x4a>
	}
 800910c:	4770      	bx	lr
 800910e:	bf00      	nop
 8009110:	e000e3f0 	.word	0xe000e3f0
 8009114:	20015178 	.word	0x20015178
 8009118:	2001517c 	.word	0x2001517c

0800911c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800911c:	b510      	push	{r4, lr}
 800911e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009120:	f7ff feb8 	bl	8008e94 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8009124:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009126:	f7ff fed5 	bl	8008ed4 <vPortExitCritical>

	return xReturn;
}
 800912a:	fab4 f084 	clz	r0, r4
 800912e:	0940      	lsrs	r0, r0, #5
 8009130:	bd10      	pop	{r4, pc}

08009132 <prvCopyDataToQueue>:
{
 8009132:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009134:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009136:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009138:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800913a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800913c:	b952      	cbnz	r2, 8009154 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800913e:	6807      	ldr	r7, [r0, #0]
 8009140:	bb47      	cbnz	r7, 8009194 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009142:	6880      	ldr	r0, [r0, #8]
 8009144:	f001 f9ae 	bl	800a4a4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009148:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800914a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800914c:	3601      	adds	r6, #1
 800914e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8009150:	4628      	mov	r0, r5
 8009152:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8009154:	b965      	cbnz	r5, 8009170 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009156:	6840      	ldr	r0, [r0, #4]
 8009158:	f017 fdea 	bl	8020d30 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800915c:	6863      	ldr	r3, [r4, #4]
 800915e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009160:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009162:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009164:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009166:	4293      	cmp	r3, r2
 8009168:	d3f0      	bcc.n	800914c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800916a:	6823      	ldr	r3, [r4, #0]
 800916c:	6063      	str	r3, [r4, #4]
 800916e:	e7ed      	b.n	800914c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009170:	68c0      	ldr	r0, [r0, #12]
 8009172:	f017 fddd 	bl	8020d30 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009176:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009178:	68e3      	ldr	r3, [r4, #12]
 800917a:	4251      	negs	r1, r2
 800917c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800917e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009180:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009182:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009184:	bf3e      	ittt	cc
 8009186:	68a3      	ldrcc	r3, [r4, #8]
 8009188:	185b      	addcc	r3, r3, r1
 800918a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800918c:	2d02      	cmp	r5, #2
 800918e:	d101      	bne.n	8009194 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009190:	b116      	cbz	r6, 8009198 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8009192:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8009194:	2500      	movs	r5, #0
 8009196:	e7d9      	b.n	800914c <prvCopyDataToQueue+0x1a>
 8009198:	4635      	mov	r5, r6
 800919a:	e7d7      	b.n	800914c <prvCopyDataToQueue+0x1a>

0800919c <prvCopyDataFromQueue>:
{
 800919c:	4603      	mov	r3, r0
 800919e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80091a0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 80091a2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80091a4:	b16a      	cbz	r2, 80091c2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80091a6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80091a8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80091aa:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80091ac:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80091ae:	bf28      	it	cs
 80091b0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80091b2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80091b4:	bf28      	it	cs
 80091b6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80091b8:	68d9      	ldr	r1, [r3, #12]
}
 80091ba:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80091be:	f017 bdb7 	b.w	8020d30 <memcpy>
}
 80091c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80091c6:	4770      	bx	lr

080091c8 <prvUnlockQueue>:
{
 80091c8:	b570      	push	{r4, r5, r6, lr}
 80091ca:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80091cc:	f7ff fe62 	bl	8008e94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80091d0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80091d4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80091d8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80091da:	2d00      	cmp	r5, #0
 80091dc:	dc14      	bgt.n	8009208 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80091de:	23ff      	movs	r3, #255	; 0xff
 80091e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80091e4:	f7ff fe76 	bl	8008ed4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80091e8:	f7ff fe54 	bl	8008e94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80091ec:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091f0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80091f4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80091f6:	2d00      	cmp	r5, #0
 80091f8:	dc12      	bgt.n	8009220 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80091fa:	23ff      	movs	r3, #255	; 0xff
 80091fc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8009200:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8009204:	f7ff be66 	b.w	8008ed4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009208:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800920a:	2b00      	cmp	r3, #0
 800920c:	d0e7      	beq.n	80091de <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800920e:	4630      	mov	r0, r6
 8009210:	f001 f864 	bl	800a2dc <xTaskRemoveFromEventList>
 8009214:	b108      	cbz	r0, 800921a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8009216:	f001 f8ed 	bl	800a3f4 <vTaskMissedYield>
			--cTxLock;
 800921a:	3d01      	subs	r5, #1
 800921c:	b26d      	sxtb	r5, r5
 800921e:	e7dc      	b.n	80091da <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009220:	6923      	ldr	r3, [r4, #16]
 8009222:	2b00      	cmp	r3, #0
 8009224:	d0e9      	beq.n	80091fa <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009226:	4630      	mov	r0, r6
 8009228:	f001 f858 	bl	800a2dc <xTaskRemoveFromEventList>
 800922c:	b108      	cbz	r0, 8009232 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800922e:	f001 f8e1 	bl	800a3f4 <vTaskMissedYield>
				--cRxLock;
 8009232:	3d01      	subs	r5, #1
 8009234:	b26d      	sxtb	r5, r5
 8009236:	e7de      	b.n	80091f6 <prvUnlockQueue+0x2e>

08009238 <xQueueGenericReset>:
{
 8009238:	b538      	push	{r3, r4, r5, lr}
 800923a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800923c:	4604      	mov	r4, r0
 800923e:	b940      	cbnz	r0, 8009252 <xQueueGenericReset+0x1a>
 8009240:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009244:	f383 8811 	msr	BASEPRI, r3
 8009248:	f3bf 8f6f 	isb	sy
 800924c:	f3bf 8f4f 	dsb	sy
 8009250:	e7fe      	b.n	8009250 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009252:	f7ff fe1f 	bl	8008e94 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009256:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800925a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800925c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800925e:	434b      	muls	r3, r1
 8009260:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009262:	1a5b      	subs	r3, r3, r1
 8009264:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009266:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009268:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800926a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800926c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800926e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009270:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009274:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009278:	b9a5      	cbnz	r5, 80092a4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800927a:	6923      	ldr	r3, [r4, #16]
 800927c:	b173      	cbz	r3, 800929c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800927e:	f104 0010 	add.w	r0, r4, #16
 8009282:	f001 f82b 	bl	800a2dc <xTaskRemoveFromEventList>
 8009286:	b148      	cbz	r0, 800929c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009288:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800928c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009290:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009294:	f3bf 8f4f 	dsb	sy
 8009298:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800929c:	f7ff fe1a 	bl	8008ed4 <vPortExitCritical>
}
 80092a0:	2001      	movs	r0, #1
 80092a2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80092a4:	f104 0010 	add.w	r0, r4, #16
 80092a8:	f7ff fd48 	bl	8008d3c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80092ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80092b0:	f7ff fd44 	bl	8008d3c <vListInitialise>
 80092b4:	e7f2      	b.n	800929c <xQueueGenericReset+0x64>

080092b6 <xQueueGenericCreateStatic>:
	{
 80092b6:	b513      	push	{r0, r1, r4, lr}
 80092b8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80092ba:	b940      	cbnz	r0, 80092ce <xQueueGenericCreateStatic+0x18>
 80092bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092c0:	f383 8811 	msr	BASEPRI, r3
 80092c4:	f3bf 8f6f 	isb	sy
 80092c8:	f3bf 8f4f 	dsb	sy
 80092cc:	e7fe      	b.n	80092cc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80092ce:	b943      	cbnz	r3, 80092e2 <xQueueGenericCreateStatic+0x2c>
 80092d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092d4:	f383 8811 	msr	BASEPRI, r3
 80092d8:	f3bf 8f6f 	isb	sy
 80092dc:	f3bf 8f4f 	dsb	sy
 80092e0:	e7fe      	b.n	80092e0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80092e2:	b14a      	cbz	r2, 80092f8 <xQueueGenericCreateStatic+0x42>
 80092e4:	b991      	cbnz	r1, 800930c <xQueueGenericCreateStatic+0x56>
 80092e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092ea:	f383 8811 	msr	BASEPRI, r3
 80092ee:	f3bf 8f6f 	isb	sy
 80092f2:	f3bf 8f4f 	dsb	sy
 80092f6:	e7fe      	b.n	80092f6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80092f8:	b141      	cbz	r1, 800930c <xQueueGenericCreateStatic+0x56>
 80092fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092fe:	f383 8811 	msr	BASEPRI, r3
 8009302:	f3bf 8f6f 	isb	sy
 8009306:	f3bf 8f4f 	dsb	sy
 800930a:	e7fe      	b.n	800930a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800930c:	2350      	movs	r3, #80	; 0x50
 800930e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8009310:	9b01      	ldr	r3, [sp, #4]
 8009312:	2b50      	cmp	r3, #80	; 0x50
 8009314:	d008      	beq.n	8009328 <xQueueGenericCreateStatic+0x72>
 8009316:	f04f 0350 	mov.w	r3, #80	; 0x50
 800931a:	f383 8811 	msr	BASEPRI, r3
 800931e:	f3bf 8f6f 	isb	sy
 8009322:	f3bf 8f4f 	dsb	sy
 8009326:	e7fe      	b.n	8009326 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009328:	2900      	cmp	r1, #0
 800932a:	bf08      	it	eq
 800932c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800932e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009330:	6022      	str	r2, [r4, #0]
 8009332:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009334:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009338:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800933c:	4619      	mov	r1, r3
 800933e:	4620      	mov	r0, r4
 8009340:	f7ff ff7a 	bl	8009238 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009344:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009348:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800934c:	4620      	mov	r0, r4
 800934e:	b002      	add	sp, #8
 8009350:	bd10      	pop	{r4, pc}

08009352 <xQueueGenericCreate>:
	{
 8009352:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009354:	460d      	mov	r5, r1
 8009356:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009358:	4606      	mov	r6, r0
 800935a:	b940      	cbnz	r0, 800936e <xQueueGenericCreate+0x1c>
 800935c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009360:	f383 8811 	msr	BASEPRI, r3
 8009364:	f3bf 8f6f 	isb	sy
 8009368:	f3bf 8f4f 	dsb	sy
 800936c:	e7fe      	b.n	800936c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800936e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009370:	3050      	adds	r0, #80	; 0x50
 8009372:	f7ff fc19 	bl	8008ba8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009376:	4604      	mov	r4, r0
 8009378:	b170      	cbz	r0, 8009398 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800937a:	2300      	movs	r3, #0
 800937c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009380:	b165      	cbz	r5, 800939c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009382:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009386:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800938a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800938c:	2101      	movs	r1, #1
 800938e:	4620      	mov	r0, r4
 8009390:	f7ff ff52 	bl	8009238 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009394:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009398:	4620      	mov	r0, r4
 800939a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800939c:	4603      	mov	r3, r0
 800939e:	e7f2      	b.n	8009386 <xQueueGenericCreate+0x34>

080093a0 <xQueueCreateCountingSemaphoreStatic>:
	{
 80093a0:	b513      	push	{r0, r1, r4, lr}
 80093a2:	4613      	mov	r3, r2
 80093a4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80093a6:	b940      	cbnz	r0, 80093ba <xQueueCreateCountingSemaphoreStatic+0x1a>
 80093a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093ac:	f383 8811 	msr	BASEPRI, r3
 80093b0:	f3bf 8f6f 	isb	sy
 80093b4:	f3bf 8f4f 	dsb	sy
 80093b8:	e7fe      	b.n	80093b8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80093ba:	4288      	cmp	r0, r1
 80093bc:	d208      	bcs.n	80093d0 <xQueueCreateCountingSemaphoreStatic+0x30>
 80093be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093c2:	f383 8811 	msr	BASEPRI, r3
 80093c6:	f3bf 8f6f 	isb	sy
 80093ca:	f3bf 8f4f 	dsb	sy
 80093ce:	e7fe      	b.n	80093ce <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80093d0:	2202      	movs	r2, #2
 80093d2:	9200      	str	r2, [sp, #0]
 80093d4:	2200      	movs	r2, #0
 80093d6:	4611      	mov	r1, r2
 80093d8:	f7ff ff6d 	bl	80092b6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80093dc:	b100      	cbz	r0, 80093e0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80093de:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80093e0:	b002      	add	sp, #8
 80093e2:	bd10      	pop	{r4, pc}

080093e4 <xQueueCreateCountingSemaphore>:
	{
 80093e4:	b510      	push	{r4, lr}
 80093e6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80093e8:	b940      	cbnz	r0, 80093fc <xQueueCreateCountingSemaphore+0x18>
 80093ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093ee:	f383 8811 	msr	BASEPRI, r3
 80093f2:	f3bf 8f6f 	isb	sy
 80093f6:	f3bf 8f4f 	dsb	sy
 80093fa:	e7fe      	b.n	80093fa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80093fc:	4288      	cmp	r0, r1
 80093fe:	d208      	bcs.n	8009412 <xQueueCreateCountingSemaphore+0x2e>
 8009400:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009404:	f383 8811 	msr	BASEPRI, r3
 8009408:	f3bf 8f6f 	isb	sy
 800940c:	f3bf 8f4f 	dsb	sy
 8009410:	e7fe      	b.n	8009410 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009412:	2202      	movs	r2, #2
 8009414:	2100      	movs	r1, #0
 8009416:	f7ff ff9c 	bl	8009352 <xQueueGenericCreate>
		if( xHandle != NULL )
 800941a:	b100      	cbz	r0, 800941e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800941c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800941e:	bd10      	pop	{r4, pc}

08009420 <xQueueGenericSend>:
{
 8009420:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009424:	b085      	sub	sp, #20
 8009426:	4688      	mov	r8, r1
 8009428:	9201      	str	r2, [sp, #4]
 800942a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800942c:	4604      	mov	r4, r0
 800942e:	b940      	cbnz	r0, 8009442 <xQueueGenericSend+0x22>
 8009430:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009434:	f383 8811 	msr	BASEPRI, r3
 8009438:	f3bf 8f6f 	isb	sy
 800943c:	f3bf 8f4f 	dsb	sy
 8009440:	e7fe      	b.n	8009440 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009442:	b951      	cbnz	r1, 800945a <xQueueGenericSend+0x3a>
 8009444:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009446:	b143      	cbz	r3, 800945a <xQueueGenericSend+0x3a>
 8009448:	f04f 0350 	mov.w	r3, #80	; 0x50
 800944c:	f383 8811 	msr	BASEPRI, r3
 8009450:	f3bf 8f6f 	isb	sy
 8009454:	f3bf 8f4f 	dsb	sy
 8009458:	e7fe      	b.n	8009458 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800945a:	2f02      	cmp	r7, #2
 800945c:	d10b      	bne.n	8009476 <xQueueGenericSend+0x56>
 800945e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009460:	2b01      	cmp	r3, #1
 8009462:	d008      	beq.n	8009476 <xQueueGenericSend+0x56>
 8009464:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009468:	f383 8811 	msr	BASEPRI, r3
 800946c:	f3bf 8f6f 	isb	sy
 8009470:	f3bf 8f4f 	dsb	sy
 8009474:	e7fe      	b.n	8009474 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009476:	f000 ffc3 	bl	800a400 <xTaskGetSchedulerState>
 800947a:	4606      	mov	r6, r0
 800947c:	b950      	cbnz	r0, 8009494 <xQueueGenericSend+0x74>
 800947e:	9b01      	ldr	r3, [sp, #4]
 8009480:	b14b      	cbz	r3, 8009496 <xQueueGenericSend+0x76>
 8009482:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009486:	f383 8811 	msr	BASEPRI, r3
 800948a:	f3bf 8f6f 	isb	sy
 800948e:	f3bf 8f4f 	dsb	sy
 8009492:	e7fe      	b.n	8009492 <xQueueGenericSend+0x72>
 8009494:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009496:	f04f 0900 	mov.w	r9, #0
 800949a:	e037      	b.n	800950c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800949c:	9d01      	ldr	r5, [sp, #4]
 800949e:	b91d      	cbnz	r5, 80094a8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 80094a0:	f7ff fd18 	bl	8008ed4 <vPortExitCritical>
			return errQUEUE_FULL;
 80094a4:	2000      	movs	r0, #0
 80094a6:	e052      	b.n	800954e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 80094a8:	b916      	cbnz	r6, 80094b0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80094aa:	a802      	add	r0, sp, #8
 80094ac:	f000 ff5a 	bl	800a364 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80094b0:	f7ff fd10 	bl	8008ed4 <vPortExitCritical>
		vTaskSuspendAll();
 80094b4:	f000 fd5e 	bl	8009f74 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80094b8:	f7ff fcec 	bl	8008e94 <vPortEnterCritical>
 80094bc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80094c0:	2bff      	cmp	r3, #255	; 0xff
 80094c2:	bf08      	it	eq
 80094c4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80094c8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80094cc:	2bff      	cmp	r3, #255	; 0xff
 80094ce:	bf08      	it	eq
 80094d0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80094d4:	f7ff fcfe 	bl	8008ed4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80094d8:	a901      	add	r1, sp, #4
 80094da:	a802      	add	r0, sp, #8
 80094dc:	f000 ff4e 	bl	800a37c <xTaskCheckForTimeOut>
 80094e0:	2800      	cmp	r0, #0
 80094e2:	d14a      	bne.n	800957a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80094e4:	f7ff fcd6 	bl	8008e94 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80094e8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80094ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80094ec:	429a      	cmp	r2, r3
 80094ee:	d131      	bne.n	8009554 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80094f0:	f7ff fcf0 	bl	8008ed4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80094f4:	9901      	ldr	r1, [sp, #4]
 80094f6:	f104 0010 	add.w	r0, r4, #16
 80094fa:	f000 feb7 	bl	800a26c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80094fe:	4620      	mov	r0, r4
 8009500:	f7ff fe62 	bl	80091c8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009504:	f000 fdda 	bl	800a0bc <xTaskResumeAll>
 8009508:	b360      	cbz	r0, 8009564 <xQueueGenericSend+0x144>
 800950a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800950c:	f7ff fcc2 	bl	8008e94 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009510:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009512:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009514:	429a      	cmp	r2, r3
 8009516:	d301      	bcc.n	800951c <xQueueGenericSend+0xfc>
 8009518:	2f02      	cmp	r7, #2
 800951a:	d1bf      	bne.n	800949c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800951c:	463a      	mov	r2, r7
 800951e:	4641      	mov	r1, r8
 8009520:	4620      	mov	r0, r4
 8009522:	f7ff fe06 	bl	8009132 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009526:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009528:	b11b      	cbz	r3, 8009532 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800952a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800952e:	f000 fed5 	bl	800a2dc <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009532:	b148      	cbz	r0, 8009548 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009534:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009538:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800953c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009540:	f3bf 8f4f 	dsb	sy
 8009544:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009548:	f7ff fcc4 	bl	8008ed4 <vPortExitCritical>
				return pdPASS;
 800954c:	2001      	movs	r0, #1
}
 800954e:	b005      	add	sp, #20
 8009550:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009554:	f7ff fcbe 	bl	8008ed4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009558:	4620      	mov	r0, r4
 800955a:	f7ff fe35 	bl	80091c8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800955e:	f000 fdad 	bl	800a0bc <xTaskResumeAll>
 8009562:	e7d2      	b.n	800950a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009564:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009568:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800956c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009570:	f3bf 8f4f 	dsb	sy
 8009574:	f3bf 8f6f 	isb	sy
 8009578:	e7c7      	b.n	800950a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800957a:	4620      	mov	r0, r4
 800957c:	f7ff fe24 	bl	80091c8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009580:	f000 fd9c 	bl	800a0bc <xTaskResumeAll>
 8009584:	e78e      	b.n	80094a4 <xQueueGenericSend+0x84>

08009586 <xQueueGenericSendFromISR>:
{
 8009586:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800958a:	4689      	mov	r9, r1
 800958c:	4690      	mov	r8, r2
 800958e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009590:	4604      	mov	r4, r0
 8009592:	b940      	cbnz	r0, 80095a6 <xQueueGenericSendFromISR+0x20>
 8009594:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009598:	f383 8811 	msr	BASEPRI, r3
 800959c:	f3bf 8f6f 	isb	sy
 80095a0:	f3bf 8f4f 	dsb	sy
 80095a4:	e7fe      	b.n	80095a4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80095a6:	b951      	cbnz	r1, 80095be <xQueueGenericSendFromISR+0x38>
 80095a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80095aa:	b143      	cbz	r3, 80095be <xQueueGenericSendFromISR+0x38>
 80095ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095b0:	f383 8811 	msr	BASEPRI, r3
 80095b4:	f3bf 8f6f 	isb	sy
 80095b8:	f3bf 8f4f 	dsb	sy
 80095bc:	e7fe      	b.n	80095bc <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80095be:	2f02      	cmp	r7, #2
 80095c0:	d10b      	bne.n	80095da <xQueueGenericSendFromISR+0x54>
 80095c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80095c4:	2b01      	cmp	r3, #1
 80095c6:	d008      	beq.n	80095da <xQueueGenericSendFromISR+0x54>
 80095c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095cc:	f383 8811 	msr	BASEPRI, r3
 80095d0:	f3bf 8f6f 	isb	sy
 80095d4:	f3bf 8f4f 	dsb	sy
 80095d8:	e7fe      	b.n	80095d8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80095da:	f7ff fd71 	bl	80090c0 <vPortValidateInterruptPriority>
	__asm volatile
 80095de:	f3ef 8611 	mrs	r6, BASEPRI
 80095e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095e6:	f383 8811 	msr	BASEPRI, r3
 80095ea:	f3bf 8f6f 	isb	sy
 80095ee:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80095f2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80095f4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80095f6:	429a      	cmp	r2, r3
 80095f8:	d301      	bcc.n	80095fe <xQueueGenericSendFromISR+0x78>
 80095fa:	2f02      	cmp	r7, #2
 80095fc:	d122      	bne.n	8009644 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80095fe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009602:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8009604:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009606:	4649      	mov	r1, r9
 8009608:	4620      	mov	r0, r4
 800960a:	f7ff fd92 	bl	8009132 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800960e:	1c6b      	adds	r3, r5, #1
 8009610:	d113      	bne.n	800963a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009612:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009614:	b90b      	cbnz	r3, 800961a <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8009616:	2001      	movs	r0, #1
 8009618:	e00b      	b.n	8009632 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800961a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800961e:	f000 fe5d 	bl	800a2dc <xTaskRemoveFromEventList>
 8009622:	2800      	cmp	r0, #0
 8009624:	d0f7      	beq.n	8009616 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8009626:	f1b8 0f00 	cmp.w	r8, #0
 800962a:	d0f4      	beq.n	8009616 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800962c:	2001      	movs	r0, #1
 800962e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009632:	f386 8811 	msr	BASEPRI, r6
}
 8009636:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800963a:	3501      	adds	r5, #1
 800963c:	b26d      	sxtb	r5, r5
 800963e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009642:	e7e8      	b.n	8009616 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009644:	2000      	movs	r0, #0
 8009646:	e7f4      	b.n	8009632 <xQueueGenericSendFromISR+0xac>

08009648 <xQueueGiveFromISR>:
{
 8009648:	b570      	push	{r4, r5, r6, lr}
 800964a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800964c:	4604      	mov	r4, r0
 800964e:	b940      	cbnz	r0, 8009662 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009650:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009654:	f383 8811 	msr	BASEPRI, r3
 8009658:	f3bf 8f6f 	isb	sy
 800965c:	f3bf 8f4f 	dsb	sy
 8009660:	e7fe      	b.n	8009660 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009662:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009664:	b143      	cbz	r3, 8009678 <xQueueGiveFromISR+0x30>
 8009666:	f04f 0350 	mov.w	r3, #80	; 0x50
 800966a:	f383 8811 	msr	BASEPRI, r3
 800966e:	f3bf 8f6f 	isb	sy
 8009672:	f3bf 8f4f 	dsb	sy
 8009676:	e7fe      	b.n	8009676 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009678:	6803      	ldr	r3, [r0, #0]
 800967a:	b953      	cbnz	r3, 8009692 <xQueueGiveFromISR+0x4a>
 800967c:	6883      	ldr	r3, [r0, #8]
 800967e:	b143      	cbz	r3, 8009692 <xQueueGiveFromISR+0x4a>
 8009680:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009684:	f383 8811 	msr	BASEPRI, r3
 8009688:	f3bf 8f6f 	isb	sy
 800968c:	f3bf 8f4f 	dsb	sy
 8009690:	e7fe      	b.n	8009690 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009692:	f7ff fd15 	bl	80090c0 <vPortValidateInterruptPriority>
	__asm volatile
 8009696:	f3ef 8611 	mrs	r6, BASEPRI
 800969a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800969e:	f383 8811 	msr	BASEPRI, r3
 80096a2:	f3bf 8f6f 	isb	sy
 80096a6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80096aa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80096ac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80096ae:	4293      	cmp	r3, r2
 80096b0:	d91c      	bls.n	80096ec <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80096b2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80096b6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80096b8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80096ba:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80096bc:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80096be:	d110      	bne.n	80096e2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80096c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80096c2:	b90b      	cbnz	r3, 80096c8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80096c4:	2001      	movs	r0, #1
 80096c6:	e009      	b.n	80096dc <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80096c8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80096cc:	f000 fe06 	bl	800a2dc <xTaskRemoveFromEventList>
 80096d0:	2800      	cmp	r0, #0
 80096d2:	d0f7      	beq.n	80096c4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80096d4:	2d00      	cmp	r5, #0
 80096d6:	d0f5      	beq.n	80096c4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80096d8:	2001      	movs	r0, #1
 80096da:	6028      	str	r0, [r5, #0]
	__asm volatile
 80096dc:	f386 8811 	msr	BASEPRI, r6
}
 80096e0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80096e2:	3301      	adds	r3, #1
 80096e4:	b25b      	sxtb	r3, r3
 80096e6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80096ea:	e7eb      	b.n	80096c4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80096ec:	2000      	movs	r0, #0
 80096ee:	e7f5      	b.n	80096dc <xQueueGiveFromISR+0x94>

080096f0 <xQueueReceive>:
{
 80096f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80096f4:	460f      	mov	r7, r1
 80096f6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80096f8:	4604      	mov	r4, r0
 80096fa:	b940      	cbnz	r0, 800970e <xQueueReceive+0x1e>
	__asm volatile
 80096fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009700:	f383 8811 	msr	BASEPRI, r3
 8009704:	f3bf 8f6f 	isb	sy
 8009708:	f3bf 8f4f 	dsb	sy
 800970c:	e7fe      	b.n	800970c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800970e:	b951      	cbnz	r1, 8009726 <xQueueReceive+0x36>
 8009710:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009712:	b143      	cbz	r3, 8009726 <xQueueReceive+0x36>
 8009714:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009718:	f383 8811 	msr	BASEPRI, r3
 800971c:	f3bf 8f6f 	isb	sy
 8009720:	f3bf 8f4f 	dsb	sy
 8009724:	e7fe      	b.n	8009724 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009726:	f000 fe6b 	bl	800a400 <xTaskGetSchedulerState>
 800972a:	4606      	mov	r6, r0
 800972c:	b950      	cbnz	r0, 8009744 <xQueueReceive+0x54>
 800972e:	9b01      	ldr	r3, [sp, #4]
 8009730:	b14b      	cbz	r3, 8009746 <xQueueReceive+0x56>
 8009732:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009736:	f383 8811 	msr	BASEPRI, r3
 800973a:	f3bf 8f6f 	isb	sy
 800973e:	f3bf 8f4f 	dsb	sy
 8009742:	e7fe      	b.n	8009742 <xQueueReceive+0x52>
 8009744:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009746:	f04f 0800 	mov.w	r8, #0
 800974a:	e03d      	b.n	80097c8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800974c:	9d01      	ldr	r5, [sp, #4]
 800974e:	b91d      	cbnz	r5, 8009758 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009750:	f7ff fbc0 	bl	8008ed4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009754:	2000      	movs	r0, #0
 8009756:	e056      	b.n	8009806 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009758:	b916      	cbnz	r6, 8009760 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800975a:	a802      	add	r0, sp, #8
 800975c:	f000 fe02 	bl	800a364 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009760:	f7ff fbb8 	bl	8008ed4 <vPortExitCritical>
		vTaskSuspendAll();
 8009764:	f000 fc06 	bl	8009f74 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009768:	f7ff fb94 	bl	8008e94 <vPortEnterCritical>
 800976c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009770:	2bff      	cmp	r3, #255	; 0xff
 8009772:	bf08      	it	eq
 8009774:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009778:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800977c:	2bff      	cmp	r3, #255	; 0xff
 800977e:	bf08      	it	eq
 8009780:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009784:	f7ff fba6 	bl	8008ed4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009788:	a901      	add	r1, sp, #4
 800978a:	a802      	add	r0, sp, #8
 800978c:	f000 fdf6 	bl	800a37c <xTaskCheckForTimeOut>
 8009790:	2800      	cmp	r0, #0
 8009792:	d141      	bne.n	8009818 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009794:	4620      	mov	r0, r4
 8009796:	f7ff fcc1 	bl	800911c <prvIsQueueEmpty>
 800979a:	b3b8      	cbz	r0, 800980c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800979c:	9901      	ldr	r1, [sp, #4]
 800979e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80097a2:	f000 fd63 	bl	800a26c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80097a6:	4620      	mov	r0, r4
 80097a8:	f7ff fd0e 	bl	80091c8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80097ac:	f000 fc86 	bl	800a0bc <xTaskResumeAll>
 80097b0:	b948      	cbnz	r0, 80097c6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80097b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80097b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80097ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80097be:	f3bf 8f4f 	dsb	sy
 80097c2:	f3bf 8f6f 	isb	sy
 80097c6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80097c8:	f7ff fb64 	bl	8008e94 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097cc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80097ce:	2d00      	cmp	r5, #0
 80097d0:	d0bc      	beq.n	800974c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097d2:	4639      	mov	r1, r7
 80097d4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097d6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097d8:	f7ff fce0 	bl	800919c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097dc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80097de:	6923      	ldr	r3, [r4, #16]
 80097e0:	b173      	cbz	r3, 8009800 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80097e2:	f104 0010 	add.w	r0, r4, #16
 80097e6:	f000 fd79 	bl	800a2dc <xTaskRemoveFromEventList>
 80097ea:	b148      	cbz	r0, 8009800 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80097ec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80097f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80097f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80097f8:	f3bf 8f4f 	dsb	sy
 80097fc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009800:	f7ff fb68 	bl	8008ed4 <vPortExitCritical>
				return pdPASS;
 8009804:	2001      	movs	r0, #1
}
 8009806:	b004      	add	sp, #16
 8009808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800980c:	4620      	mov	r0, r4
 800980e:	f7ff fcdb 	bl	80091c8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009812:	f000 fc53 	bl	800a0bc <xTaskResumeAll>
 8009816:	e7d6      	b.n	80097c6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009818:	4620      	mov	r0, r4
 800981a:	f7ff fcd5 	bl	80091c8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800981e:	f000 fc4d 	bl	800a0bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009822:	4620      	mov	r0, r4
 8009824:	f7ff fc7a 	bl	800911c <prvIsQueueEmpty>
 8009828:	2800      	cmp	r0, #0
 800982a:	d0cc      	beq.n	80097c6 <xQueueReceive+0xd6>
 800982c:	e792      	b.n	8009754 <xQueueReceive+0x64>

0800982e <xQueueSemaphoreTake>:
{
 800982e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009830:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009832:	4604      	mov	r4, r0
{
 8009834:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009836:	b940      	cbnz	r0, 800984a <xQueueSemaphoreTake+0x1c>
 8009838:	f04f 0350 	mov.w	r3, #80	; 0x50
 800983c:	f383 8811 	msr	BASEPRI, r3
 8009840:	f3bf 8f6f 	isb	sy
 8009844:	f3bf 8f4f 	dsb	sy
 8009848:	e7fe      	b.n	8009848 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800984a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800984c:	b145      	cbz	r5, 8009860 <xQueueSemaphoreTake+0x32>
 800984e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009852:	f383 8811 	msr	BASEPRI, r3
 8009856:	f3bf 8f6f 	isb	sy
 800985a:	f3bf 8f4f 	dsb	sy
 800985e:	e7fe      	b.n	800985e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009860:	f000 fdce 	bl	800a400 <xTaskGetSchedulerState>
 8009864:	4606      	mov	r6, r0
 8009866:	b950      	cbnz	r0, 800987e <xQueueSemaphoreTake+0x50>
 8009868:	9b01      	ldr	r3, [sp, #4]
 800986a:	b15b      	cbz	r3, 8009884 <xQueueSemaphoreTake+0x56>
 800986c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009870:	f383 8811 	msr	BASEPRI, r3
 8009874:	f3bf 8f6f 	isb	sy
 8009878:	f3bf 8f4f 	dsb	sy
 800987c:	e7fe      	b.n	800987c <xQueueSemaphoreTake+0x4e>
 800987e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009880:	2700      	movs	r7, #0
 8009882:	e053      	b.n	800992c <xQueueSemaphoreTake+0xfe>
 8009884:	4605      	mov	r5, r0
 8009886:	e7fb      	b.n	8009880 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009888:	9b01      	ldr	r3, [sp, #4]
 800988a:	b963      	cbnz	r3, 80098a6 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800988c:	b145      	cbz	r5, 80098a0 <xQueueSemaphoreTake+0x72>
 800988e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009892:	f383 8811 	msr	BASEPRI, r3
 8009896:	f3bf 8f6f 	isb	sy
 800989a:	f3bf 8f4f 	dsb	sy
 800989e:	e7fe      	b.n	800989e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 80098a0:	f7ff fb18 	bl	8008ed4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80098a4:	e062      	b.n	800996c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 80098a6:	b916      	cbnz	r6, 80098ae <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80098a8:	a802      	add	r0, sp, #8
 80098aa:	f000 fd5b 	bl	800a364 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80098ae:	f7ff fb11 	bl	8008ed4 <vPortExitCritical>
		vTaskSuspendAll();
 80098b2:	f000 fb5f 	bl	8009f74 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80098b6:	f7ff faed 	bl	8008e94 <vPortEnterCritical>
 80098ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80098be:	2bff      	cmp	r3, #255	; 0xff
 80098c0:	bf08      	it	eq
 80098c2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80098c6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80098ca:	2bff      	cmp	r3, #255	; 0xff
 80098cc:	bf08      	it	eq
 80098ce:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80098d2:	f7ff faff 	bl	8008ed4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80098d6:	a901      	add	r1, sp, #4
 80098d8:	a802      	add	r0, sp, #8
 80098da:	f000 fd4f 	bl	800a37c <xTaskCheckForTimeOut>
 80098de:	2800      	cmp	r0, #0
 80098e0:	d14d      	bne.n	800997e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80098e2:	4620      	mov	r0, r4
 80098e4:	f7ff fc1a 	bl	800911c <prvIsQueueEmpty>
 80098e8:	2800      	cmp	r0, #0
 80098ea:	d042      	beq.n	8009972 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80098ec:	6823      	ldr	r3, [r4, #0]
 80098ee:	b93b      	cbnz	r3, 8009900 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80098f0:	f7ff fad0 	bl	8008e94 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80098f4:	68a0      	ldr	r0, [r4, #8]
 80098f6:	f000 fd93 	bl	800a420 <xTaskPriorityInherit>
 80098fa:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80098fc:	f7ff faea 	bl	8008ed4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009900:	9901      	ldr	r1, [sp, #4]
 8009902:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009906:	f000 fcb1 	bl	800a26c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800990a:	4620      	mov	r0, r4
 800990c:	f7ff fc5c 	bl	80091c8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009910:	f000 fbd4 	bl	800a0bc <xTaskResumeAll>
 8009914:	b948      	cbnz	r0, 800992a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009916:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800991a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800991e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009922:	f3bf 8f4f 	dsb	sy
 8009926:	f3bf 8f6f 	isb	sy
 800992a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800992c:	f7ff fab2 	bl	8008e94 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009930:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009932:	2b00      	cmp	r3, #0
 8009934:	d0a8      	beq.n	8009888 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009936:	3b01      	subs	r3, #1
 8009938:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800993a:	6823      	ldr	r3, [r4, #0]
 800993c:	b913      	cbnz	r3, 8009944 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800993e:	f000 fe47 	bl	800a5d0 <pvTaskIncrementMutexHeldCount>
 8009942:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009944:	6923      	ldr	r3, [r4, #16]
 8009946:	b173      	cbz	r3, 8009966 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009948:	f104 0010 	add.w	r0, r4, #16
 800994c:	f000 fcc6 	bl	800a2dc <xTaskRemoveFromEventList>
 8009950:	b148      	cbz	r0, 8009966 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009952:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009956:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800995a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800995e:	f3bf 8f4f 	dsb	sy
 8009962:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009966:	f7ff fab5 	bl	8008ed4 <vPortExitCritical>
				return pdPASS;
 800996a:	2501      	movs	r5, #1
}
 800996c:	4628      	mov	r0, r5
 800996e:	b005      	add	sp, #20
 8009970:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009972:	4620      	mov	r0, r4
 8009974:	f7ff fc28 	bl	80091c8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009978:	f000 fba0 	bl	800a0bc <xTaskResumeAll>
 800997c:	e7d5      	b.n	800992a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800997e:	4620      	mov	r0, r4
 8009980:	f7ff fc22 	bl	80091c8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009984:	f000 fb9a 	bl	800a0bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009988:	4620      	mov	r0, r4
 800998a:	f7ff fbc7 	bl	800911c <prvIsQueueEmpty>
 800998e:	2800      	cmp	r0, #0
 8009990:	d0cb      	beq.n	800992a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009992:	2d00      	cmp	r5, #0
 8009994:	d0ea      	beq.n	800996c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009996:	f7ff fa7d 	bl	8008e94 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800999a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800999c:	b119      	cbz	r1, 80099a6 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800999e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80099a0:	6819      	ldr	r1, [r3, #0]
 80099a2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80099a6:	68a0      	ldr	r0, [r4, #8]
 80099a8:	f000 fdc0 	bl	800a52c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 80099ac:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 80099ae:	f7ff fa91 	bl	8008ed4 <vPortExitCritical>
 80099b2:	e7db      	b.n	800996c <xQueueSemaphoreTake+0x13e>

080099b4 <xQueueReceiveFromISR>:
{
 80099b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80099b8:	4689      	mov	r9, r1
 80099ba:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80099bc:	4605      	mov	r5, r0
 80099be:	b940      	cbnz	r0, 80099d2 <xQueueReceiveFromISR+0x1e>
 80099c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099c4:	f383 8811 	msr	BASEPRI, r3
 80099c8:	f3bf 8f6f 	isb	sy
 80099cc:	f3bf 8f4f 	dsb	sy
 80099d0:	e7fe      	b.n	80099d0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80099d2:	b951      	cbnz	r1, 80099ea <xQueueReceiveFromISR+0x36>
 80099d4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80099d6:	b143      	cbz	r3, 80099ea <xQueueReceiveFromISR+0x36>
 80099d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099dc:	f383 8811 	msr	BASEPRI, r3
 80099e0:	f3bf 8f6f 	isb	sy
 80099e4:	f3bf 8f4f 	dsb	sy
 80099e8:	e7fe      	b.n	80099e8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80099ea:	f7ff fb69 	bl	80090c0 <vPortValidateInterruptPriority>
	__asm volatile
 80099ee:	f3ef 8711 	mrs	r7, BASEPRI
 80099f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099f6:	f383 8811 	msr	BASEPRI, r3
 80099fa:	f3bf 8f6f 	isb	sy
 80099fe:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009a02:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009a04:	b31c      	cbz	r4, 8009a4e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009a06:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009a0a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8009a0c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009a0e:	4628      	mov	r0, r5
 8009a10:	f7ff fbc4 	bl	800919c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009a14:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009a16:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009a18:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8009a1a:	d113      	bne.n	8009a44 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009a1c:	692b      	ldr	r3, [r5, #16]
 8009a1e:	b90b      	cbnz	r3, 8009a24 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009a20:	2001      	movs	r0, #1
 8009a22:	e00b      	b.n	8009a3c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009a24:	f105 0010 	add.w	r0, r5, #16
 8009a28:	f000 fc58 	bl	800a2dc <xTaskRemoveFromEventList>
 8009a2c:	2800      	cmp	r0, #0
 8009a2e:	d0f7      	beq.n	8009a20 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009a30:	f1b8 0f00 	cmp.w	r8, #0
 8009a34:	d0f4      	beq.n	8009a20 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009a36:	2001      	movs	r0, #1
 8009a38:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009a3c:	f387 8811 	msr	BASEPRI, r7
}
 8009a40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009a44:	3601      	adds	r6, #1
 8009a46:	b276      	sxtb	r6, r6
 8009a48:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8009a4c:	e7e8      	b.n	8009a20 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8009a4e:	4620      	mov	r0, r4
 8009a50:	e7f4      	b.n	8009a3c <xQueueReceiveFromISR+0x88>
	...

08009a54 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009a54:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009a56:	4a07      	ldr	r2, [pc, #28]	; (8009a74 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009a58:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009a5a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8009a5e:	b92c      	cbnz	r4, 8009a6c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009a60:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009a64:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009a68:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8009a6a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009a6c:	3301      	adds	r3, #1
 8009a6e:	2b08      	cmp	r3, #8
 8009a70:	d1f3      	bne.n	8009a5a <vQueueAddToRegistry+0x6>
 8009a72:	e7fa      	b.n	8009a6a <vQueueAddToRegistry+0x16>
 8009a74:	20015180 	.word	0x20015180

08009a78 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009a78:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009a7a:	4a08      	ldr	r2, [pc, #32]	; (8009a9c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009a7c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009a7e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009a82:	684c      	ldr	r4, [r1, #4]
 8009a84:	4284      	cmp	r4, r0
 8009a86:	d104      	bne.n	8009a92 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009a88:	2000      	movs	r0, #0
 8009a8a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009a8e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009a90:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009a92:	3301      	adds	r3, #1
 8009a94:	2b08      	cmp	r3, #8
 8009a96:	d1f2      	bne.n	8009a7e <vQueueUnregisterQueue+0x6>
 8009a98:	e7fa      	b.n	8009a90 <vQueueUnregisterQueue+0x18>
 8009a9a:	bf00      	nop
 8009a9c:	20015180 	.word	0x20015180

08009aa0 <vQueueDelete>:
{
 8009aa0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009aa2:	4604      	mov	r4, r0
 8009aa4:	b940      	cbnz	r0, 8009ab8 <vQueueDelete+0x18>
	__asm volatile
 8009aa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009aaa:	f383 8811 	msr	BASEPRI, r3
 8009aae:	f3bf 8f6f 	isb	sy
 8009ab2:	f3bf 8f4f 	dsb	sy
 8009ab6:	e7fe      	b.n	8009ab6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009ab8:	f7ff ffde 	bl	8009a78 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009abc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009ac0:	b923      	cbnz	r3, 8009acc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009ac2:	4620      	mov	r0, r4
}
 8009ac4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009ac8:	f7ff b900 	b.w	8008ccc <vPortFree>
}
 8009acc:	bd10      	pop	{r4, pc}

08009ace <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8009ace:	b570      	push	{r4, r5, r6, lr}
 8009ad0:	4604      	mov	r4, r0
 8009ad2:	460d      	mov	r5, r1
 8009ad4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009ad6:	f7ff f9dd 	bl	8008e94 <vPortEnterCritical>
 8009ada:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009ade:	2bff      	cmp	r3, #255	; 0xff
 8009ae0:	bf04      	itt	eq
 8009ae2:	2300      	moveq	r3, #0
 8009ae4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009ae8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009aec:	2bff      	cmp	r3, #255	; 0xff
 8009aee:	bf04      	itt	eq
 8009af0:	2300      	moveq	r3, #0
 8009af2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009af6:	f7ff f9ed 	bl	8008ed4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009afa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009afc:	b92b      	cbnz	r3, 8009b0a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009afe:	4632      	mov	r2, r6
 8009b00:	4629      	mov	r1, r5
 8009b02:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009b06:	f000 fbcb 	bl	800a2a0 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8009b0a:	4620      	mov	r0, r4
	}
 8009b0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009b10:	f7ff bb5a 	b.w	80091c8 <prvUnlockQueue>

08009b14 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b18:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8009b1a:	f7ff f9bb 	bl	8008e94 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8009b1e:	4b30      	ldr	r3, [pc, #192]	; (8009be0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009b20:	4e30      	ldr	r6, [pc, #192]	; (8009be4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009b22:	681a      	ldr	r2, [r3, #0]
 8009b24:	4f30      	ldr	r7, [pc, #192]	; (8009be8 <prvAddNewTaskToReadyList+0xd4>)
 8009b26:	3201      	adds	r2, #1
 8009b28:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8009b2a:	6835      	ldr	r5, [r6, #0]
 8009b2c:	2d00      	cmp	r5, #0
 8009b2e:	d14b      	bne.n	8009bc8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009b30:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009b32:	681b      	ldr	r3, [r3, #0]
 8009b34:	2b01      	cmp	r3, #1
 8009b36:	d11f      	bne.n	8009b78 <prvAddNewTaskToReadyList+0x64>
 8009b38:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009b3a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009b3c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009b3e:	f7ff f8fd 	bl	8008d3c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009b42:	2d38      	cmp	r5, #56	; 0x38
 8009b44:	f108 0814 	add.w	r8, r8, #20
 8009b48:	d1f7      	bne.n	8009b3a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009b4a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009c10 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8009b4e:	4d27      	ldr	r5, [pc, #156]	; (8009bec <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009b50:	4640      	mov	r0, r8
 8009b52:	f7ff f8f3 	bl	8008d3c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009b56:	4628      	mov	r0, r5
 8009b58:	f7ff f8f0 	bl	8008d3c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009b5c:	4824      	ldr	r0, [pc, #144]	; (8009bf0 <prvAddNewTaskToReadyList+0xdc>)
 8009b5e:	f7ff f8ed 	bl	8008d3c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009b62:	4824      	ldr	r0, [pc, #144]	; (8009bf4 <prvAddNewTaskToReadyList+0xe0>)
 8009b64:	f7ff f8ea 	bl	8008d3c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009b68:	4823      	ldr	r0, [pc, #140]	; (8009bf8 <prvAddNewTaskToReadyList+0xe4>)
 8009b6a:	f7ff f8e7 	bl	8008d3c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009b6e:	4b23      	ldr	r3, [pc, #140]	; (8009bfc <prvAddNewTaskToReadyList+0xe8>)
 8009b70:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009b74:	4b22      	ldr	r3, [pc, #136]	; (8009c00 <prvAddNewTaskToReadyList+0xec>)
 8009b76:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009b78:	4a22      	ldr	r2, [pc, #136]	; (8009c04 <prvAddNewTaskToReadyList+0xf0>)
 8009b7a:	6813      	ldr	r3, [r2, #0]
 8009b7c:	3301      	adds	r3, #1
 8009b7e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009b80:	4a21      	ldr	r2, [pc, #132]	; (8009c08 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009b82:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009b84:	6811      	ldr	r1, [r2, #0]
 8009b86:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009b88:	2014      	movs	r0, #20
 8009b8a:	428b      	cmp	r3, r1
 8009b8c:	fb00 7003 	mla	r0, r0, r3, r7
 8009b90:	f104 0104 	add.w	r1, r4, #4
 8009b94:	bf88      	it	hi
 8009b96:	6013      	strhi	r3, [r2, #0]
 8009b98:	f7ff f8de 	bl	8008d58 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8009b9c:	f7ff f99a 	bl	8008ed4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009ba0:	4b1a      	ldr	r3, [pc, #104]	; (8009c0c <prvAddNewTaskToReadyList+0xf8>)
 8009ba2:	681b      	ldr	r3, [r3, #0]
 8009ba4:	b173      	cbz	r3, 8009bc4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009ba6:	6833      	ldr	r3, [r6, #0]
 8009ba8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009baa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009bac:	429a      	cmp	r2, r3
 8009bae:	d209      	bcs.n	8009bc4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009bb0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009bb4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009bb8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009bbc:	f3bf 8f4f 	dsb	sy
 8009bc0:	f3bf 8f6f 	isb	sy
}
 8009bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009bc8:	4b10      	ldr	r3, [pc, #64]	; (8009c0c <prvAddNewTaskToReadyList+0xf8>)
 8009bca:	681b      	ldr	r3, [r3, #0]
 8009bcc:	2b00      	cmp	r3, #0
 8009bce:	d1d3      	bne.n	8009b78 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009bd0:	6833      	ldr	r3, [r6, #0]
 8009bd2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009bd4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009bd6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009bd8:	bf98      	it	ls
 8009bda:	6034      	strls	r4, [r6, #0]
 8009bdc:	e7cc      	b.n	8009b78 <prvAddNewTaskToReadyList+0x64>
 8009bde:	bf00      	nop
 8009be0:	2001562c 	.word	0x2001562c
 8009be4:	200151c0 	.word	0x200151c0
 8009be8:	200151cc 	.word	0x200151cc
 8009bec:	20015658 	.word	0x20015658
 8009bf0:	20015674 	.word	0x20015674
 8009bf4:	200156a0 	.word	0x200156a0
 8009bf8:	2001568c 	.word	0x2001568c
 8009bfc:	200151c4 	.word	0x200151c4
 8009c00:	200151c8 	.word	0x200151c8
 8009c04:	2001563c 	.word	0x2001563c
 8009c08:	20015640 	.word	0x20015640
 8009c0c:	20015688 	.word	0x20015688
 8009c10:	20015644 	.word	0x20015644

08009c14 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009c14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009c16:	4b15      	ldr	r3, [pc, #84]	; (8009c6c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009c18:	4e15      	ldr	r6, [pc, #84]	; (8009c70 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8009c1a:	681d      	ldr	r5, [r3, #0]
{
 8009c1c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009c1e:	6830      	ldr	r0, [r6, #0]
 8009c20:	3004      	adds	r0, #4
{
 8009c22:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009c24:	f7ff f8bb 	bl	8008d9e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009c28:	1c63      	adds	r3, r4, #1
 8009c2a:	d107      	bne.n	8009c3c <prvAddCurrentTaskToDelayedList+0x28>
 8009c2c:	b137      	cbz	r7, 8009c3c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009c2e:	6831      	ldr	r1, [r6, #0]
 8009c30:	4810      	ldr	r0, [pc, #64]	; (8009c74 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009c32:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009c36:	3104      	adds	r1, #4
 8009c38:	f7ff b88e 	b.w	8008d58 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009c3c:	6833      	ldr	r3, [r6, #0]
 8009c3e:	192c      	adds	r4, r5, r4
 8009c40:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009c42:	d307      	bcc.n	8009c54 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009c44:	4b0c      	ldr	r3, [pc, #48]	; (8009c78 <prvAddCurrentTaskToDelayedList+0x64>)
 8009c46:	6818      	ldr	r0, [r3, #0]
 8009c48:	6831      	ldr	r1, [r6, #0]
}
 8009c4a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009c4e:	3104      	adds	r1, #4
 8009c50:	f7ff b88e 	b.w	8008d70 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009c54:	4b09      	ldr	r3, [pc, #36]	; (8009c7c <prvAddCurrentTaskToDelayedList+0x68>)
 8009c56:	6818      	ldr	r0, [r3, #0]
 8009c58:	6831      	ldr	r1, [r6, #0]
 8009c5a:	3104      	adds	r1, #4
 8009c5c:	f7ff f888 	bl	8008d70 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009c60:	4b07      	ldr	r3, [pc, #28]	; (8009c80 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009c62:	681a      	ldr	r2, [r3, #0]
 8009c64:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009c66:	bf88      	it	hi
 8009c68:	601c      	strhi	r4, [r3, #0]
}
 8009c6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009c6c:	200156b4 	.word	0x200156b4
 8009c70:	200151c0 	.word	0x200151c0
 8009c74:	2001568c 	.word	0x2001568c
 8009c78:	200151c8 	.word	0x200151c8
 8009c7c:	200151c4 	.word	0x200151c4
 8009c80:	2001566c 	.word	0x2001566c

08009c84 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009c84:	4a06      	ldr	r2, [pc, #24]	; (8009ca0 <prvResetNextTaskUnblockTime+0x1c>)
 8009c86:	6813      	ldr	r3, [r2, #0]
 8009c88:	6819      	ldr	r1, [r3, #0]
 8009c8a:	4b06      	ldr	r3, [pc, #24]	; (8009ca4 <prvResetNextTaskUnblockTime+0x20>)
 8009c8c:	b919      	cbnz	r1, 8009c96 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009c8e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009c92:	601a      	str	r2, [r3, #0]
}
 8009c94:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c96:	6812      	ldr	r2, [r2, #0]
 8009c98:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009c9a:	68d2      	ldr	r2, [r2, #12]
 8009c9c:	6852      	ldr	r2, [r2, #4]
 8009c9e:	e7f8      	b.n	8009c92 <prvResetNextTaskUnblockTime+0xe>
 8009ca0:	200151c4 	.word	0x200151c4
 8009ca4:	2001566c 	.word	0x2001566c

08009ca8 <prvDeleteTCB>:
	{
 8009ca8:	b510      	push	{r4, lr}
 8009caa:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009cac:	3058      	adds	r0, #88	; 0x58
 8009cae:	f017 fc31 	bl	8021514 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009cb2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009cb6:	b93b      	cbnz	r3, 8009cc8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009cb8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009cba:	f7ff f807 	bl	8008ccc <vPortFree>
				vPortFree( pxTCB );
 8009cbe:	4620      	mov	r0, r4
	}
 8009cc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009cc4:	f7ff b802 	b.w	8008ccc <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009cc8:	2b01      	cmp	r3, #1
 8009cca:	d0f8      	beq.n	8009cbe <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009ccc:	2b02      	cmp	r3, #2
 8009cce:	d008      	beq.n	8009ce2 <prvDeleteTCB+0x3a>
 8009cd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cd4:	f383 8811 	msr	BASEPRI, r3
 8009cd8:	f3bf 8f6f 	isb	sy
 8009cdc:	f3bf 8f4f 	dsb	sy
 8009ce0:	e7fe      	b.n	8009ce0 <prvDeleteTCB+0x38>
	}
 8009ce2:	bd10      	pop	{r4, pc}

08009ce4 <prvIdleTask>:
{
 8009ce4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009ce6:	4c13      	ldr	r4, [pc, #76]	; (8009d34 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ce8:	4f13      	ldr	r7, [pc, #76]	; (8009d38 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009cea:	4d14      	ldr	r5, [pc, #80]	; (8009d3c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009cec:	6823      	ldr	r3, [r4, #0]
 8009cee:	b973      	cbnz	r3, 8009d0e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009cf0:	4b13      	ldr	r3, [pc, #76]	; (8009d40 <prvIdleTask+0x5c>)
 8009cf2:	681b      	ldr	r3, [r3, #0]
 8009cf4:	2b01      	cmp	r3, #1
 8009cf6:	d9f8      	bls.n	8009cea <prvIdleTask+0x6>
				taskYIELD();
 8009cf8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009cfc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009d00:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009d04:	f3bf 8f4f 	dsb	sy
 8009d08:	f3bf 8f6f 	isb	sy
 8009d0c:	e7ed      	b.n	8009cea <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009d0e:	f7ff f8c1 	bl	8008e94 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d12:	68fb      	ldr	r3, [r7, #12]
 8009d14:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009d16:	1d30      	adds	r0, r6, #4
 8009d18:	f7ff f841 	bl	8008d9e <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009d1c:	682b      	ldr	r3, [r5, #0]
 8009d1e:	3b01      	subs	r3, #1
 8009d20:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009d22:	6823      	ldr	r3, [r4, #0]
 8009d24:	3b01      	subs	r3, #1
 8009d26:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009d28:	f7ff f8d4 	bl	8008ed4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009d2c:	4630      	mov	r0, r6
 8009d2e:	f7ff ffbb 	bl	8009ca8 <prvDeleteTCB>
 8009d32:	e7db      	b.n	8009cec <prvIdleTask+0x8>
 8009d34:	20015630 	.word	0x20015630
 8009d38:	200156a0 	.word	0x200156a0
 8009d3c:	2001562c 	.word	0x2001562c
 8009d40:	200151cc 	.word	0x200151cc

08009d44 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009d44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009d48:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009d4c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009d50:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009d52:	4606      	mov	r6, r0
 8009d54:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009d56:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009d58:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009d5a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009d5c:	f016 fff6 	bl	8020d4c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009d60:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009d62:	f1a9 0904 	sub.w	r9, r9, #4
 8009d66:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009d68:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009d6c:	2d00      	cmp	r5, #0
 8009d6e:	d042      	beq.n	8009df6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009d70:	1e6b      	subs	r3, r5, #1
 8009d72:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009d76:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009d78:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009d7c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009d80:	b108      	cbz	r0, 8009d86 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009d82:	42ab      	cmp	r3, r5
 8009d84:	d1f8      	bne.n	8009d78 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009d86:	2300      	movs	r3, #0
 8009d88:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009d8c:	9d08      	ldr	r5, [sp, #32]
 8009d8e:	2d37      	cmp	r5, #55	; 0x37
 8009d90:	bf28      	it	cs
 8009d92:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009d94:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009d98:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009d9a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009d9c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009d9e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009da2:	f7fe ffd6 	bl	8008d52 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009da6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009daa:	f104 0018 	add.w	r0, r4, #24
 8009dae:	f7fe ffd0 	bl	8008d52 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009db2:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009db6:	2260      	movs	r2, #96	; 0x60
 8009db8:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009dba:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009dbc:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009dbe:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009dc0:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009dc4:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009dc8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009dcc:	f016 ffbe 	bl	8020d4c <memset>
 8009dd0:	4b0a      	ldr	r3, [pc, #40]	; (8009dfc <prvInitialiseNewTask.constprop.0+0xb8>)
 8009dd2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009dd4:	4b0a      	ldr	r3, [pc, #40]	; (8009e00 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009dd6:	6623      	str	r3, [r4, #96]	; 0x60
 8009dd8:	4b0a      	ldr	r3, [pc, #40]	; (8009e04 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009dda:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009ddc:	463a      	mov	r2, r7
 8009dde:	4631      	mov	r1, r6
 8009de0:	4648      	mov	r0, r9
 8009de2:	f7ff f82b 	bl	8008e3c <pxPortInitialiseStack>
 8009de6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009de8:	f1b8 0f00 	cmp.w	r8, #0
 8009dec:	d001      	beq.n	8009df2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009dee:	f8c8 4000 	str.w	r4, [r8]
}
 8009df2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009df6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009dfa:	e7c7      	b.n	8009d8c <prvInitialiseNewTask.constprop.0+0x48>
 8009dfc:	08024940 	.word	0x08024940
 8009e00:	08024960 	.word	0x08024960
 8009e04:	08024920 	.word	0x08024920

08009e08 <xTaskCreateStatic>:
	{
 8009e08:	b570      	push	{r4, r5, r6, lr}
 8009e0a:	b086      	sub	sp, #24
 8009e0c:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009e10:	b945      	cbnz	r5, 8009e24 <xTaskCreateStatic+0x1c>
 8009e12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e16:	f383 8811 	msr	BASEPRI, r3
 8009e1a:	f3bf 8f6f 	isb	sy
 8009e1e:	f3bf 8f4f 	dsb	sy
 8009e22:	e7fe      	b.n	8009e22 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009e24:	b944      	cbnz	r4, 8009e38 <xTaskCreateStatic+0x30>
 8009e26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e2a:	f383 8811 	msr	BASEPRI, r3
 8009e2e:	f3bf 8f6f 	isb	sy
 8009e32:	f3bf 8f4f 	dsb	sy
 8009e36:	e7fe      	b.n	8009e36 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009e38:	26c0      	movs	r6, #192	; 0xc0
 8009e3a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009e3c:	9e05      	ldr	r6, [sp, #20]
 8009e3e:	2ec0      	cmp	r6, #192	; 0xc0
 8009e40:	d008      	beq.n	8009e54 <xTaskCreateStatic+0x4c>
 8009e42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e46:	f383 8811 	msr	BASEPRI, r3
 8009e4a:	f3bf 8f6f 	isb	sy
 8009e4e:	f3bf 8f4f 	dsb	sy
 8009e52:	e7fe      	b.n	8009e52 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009e54:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009e56:	2502      	movs	r5, #2
 8009e58:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009e5c:	ad04      	add	r5, sp, #16
 8009e5e:	9501      	str	r5, [sp, #4]
 8009e60:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009e62:	9402      	str	r4, [sp, #8]
 8009e64:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009e66:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009e68:	f7ff ff6c 	bl	8009d44 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009e6c:	4620      	mov	r0, r4
 8009e6e:	f7ff fe51 	bl	8009b14 <prvAddNewTaskToReadyList>
	}
 8009e72:	9804      	ldr	r0, [sp, #16]
 8009e74:	b006      	add	sp, #24
 8009e76:	bd70      	pop	{r4, r5, r6, pc}

08009e78 <xTaskCreate>:
	{
 8009e78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e7c:	4607      	mov	r7, r0
 8009e7e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009e80:	0090      	lsls	r0, r2, #2
	{
 8009e82:	4688      	mov	r8, r1
 8009e84:	4616      	mov	r6, r2
 8009e86:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009e88:	f7fe fe8e 	bl	8008ba8 <pvPortMalloc>
			if( pxStack != NULL )
 8009e8c:	4605      	mov	r5, r0
 8009e8e:	b1e8      	cbz	r0, 8009ecc <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009e90:	20c0      	movs	r0, #192	; 0xc0
 8009e92:	f7fe fe89 	bl	8008ba8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009e96:	4604      	mov	r4, r0
 8009e98:	b1a8      	cbz	r0, 8009ec6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009e9a:	2300      	movs	r3, #0
 8009e9c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009ea0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009ea2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009ea4:	9301      	str	r3, [sp, #4]
 8009ea6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009ea8:	9002      	str	r0, [sp, #8]
 8009eaa:	9300      	str	r3, [sp, #0]
 8009eac:	4632      	mov	r2, r6
 8009eae:	464b      	mov	r3, r9
 8009eb0:	4641      	mov	r1, r8
 8009eb2:	4638      	mov	r0, r7
 8009eb4:	f7ff ff46 	bl	8009d44 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009eb8:	4620      	mov	r0, r4
 8009eba:	f7ff fe2b 	bl	8009b14 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009ebe:	2001      	movs	r0, #1
	}
 8009ec0:	b005      	add	sp, #20
 8009ec2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009ec6:	4628      	mov	r0, r5
 8009ec8:	f7fe ff00 	bl	8008ccc <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009ecc:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009ed0:	e7f6      	b.n	8009ec0 <xTaskCreate+0x48>
	...

08009ed4 <vTaskStartScheduler>:
{
 8009ed4:	b510      	push	{r4, lr}
 8009ed6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009ed8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009eda:	aa07      	add	r2, sp, #28
 8009edc:	a906      	add	r1, sp, #24
 8009ede:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009ee0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009ee4:	f7fe fe24 	bl	8008b30 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009ee8:	9b05      	ldr	r3, [sp, #20]
 8009eea:	9302      	str	r3, [sp, #8]
 8009eec:	9b06      	ldr	r3, [sp, #24]
 8009eee:	9a07      	ldr	r2, [sp, #28]
 8009ef0:	4919      	ldr	r1, [pc, #100]	; (8009f58 <vTaskStartScheduler+0x84>)
 8009ef2:	481a      	ldr	r0, [pc, #104]	; (8009f5c <vTaskStartScheduler+0x88>)
 8009ef4:	e9cd 4300 	strd	r4, r3, [sp]
 8009ef8:	4623      	mov	r3, r4
 8009efa:	f7ff ff85 	bl	8009e08 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009efe:	b340      	cbz	r0, 8009f52 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009f00:	f000 fbc4 	bl	800a68c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009f04:	2801      	cmp	r0, #1
 8009f06:	d119      	bne.n	8009f3c <vTaskStartScheduler+0x68>
 8009f08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f0c:	f383 8811 	msr	BASEPRI, r3
 8009f10:	f3bf 8f6f 	isb	sy
 8009f14:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009f18:	4b11      	ldr	r3, [pc, #68]	; (8009f60 <vTaskStartScheduler+0x8c>)
 8009f1a:	4a12      	ldr	r2, [pc, #72]	; (8009f64 <vTaskStartScheduler+0x90>)
 8009f1c:	681b      	ldr	r3, [r3, #0]
 8009f1e:	3358      	adds	r3, #88	; 0x58
 8009f20:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009f22:	4b11      	ldr	r3, [pc, #68]	; (8009f68 <vTaskStartScheduler+0x94>)
 8009f24:	f04f 32ff 	mov.w	r2, #4294967295
 8009f28:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009f2a:	4b10      	ldr	r3, [pc, #64]	; (8009f6c <vTaskStartScheduler+0x98>)
 8009f2c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009f2e:	4b10      	ldr	r3, [pc, #64]	; (8009f70 <vTaskStartScheduler+0x9c>)
 8009f30:	601c      	str	r4, [r3, #0]
}
 8009f32:	b008      	add	sp, #32
 8009f34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009f38:	f7ff b83c 	b.w	8008fb4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009f3c:	3001      	adds	r0, #1
 8009f3e:	d108      	bne.n	8009f52 <vTaskStartScheduler+0x7e>
 8009f40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f44:	f383 8811 	msr	BASEPRI, r3
 8009f48:	f3bf 8f6f 	isb	sy
 8009f4c:	f3bf 8f4f 	dsb	sy
 8009f50:	e7fe      	b.n	8009f50 <vTaskStartScheduler+0x7c>
}
 8009f52:	b008      	add	sp, #32
 8009f54:	bd10      	pop	{r4, pc}
 8009f56:	bf00      	nop
 8009f58:	080238dc 	.word	0x080238dc
 8009f5c:	08009ce5 	.word	0x08009ce5
 8009f60:	200151c0 	.word	0x200151c0
 8009f64:	20000104 	.word	0x20000104
 8009f68:	2001566c 	.word	0x2001566c
 8009f6c:	20015688 	.word	0x20015688
 8009f70:	200156b4 	.word	0x200156b4

08009f74 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009f74:	4a02      	ldr	r2, [pc, #8]	; (8009f80 <vTaskSuspendAll+0xc>)
 8009f76:	6813      	ldr	r3, [r2, #0]
 8009f78:	3301      	adds	r3, #1
 8009f7a:	6013      	str	r3, [r2, #0]
}
 8009f7c:	4770      	bx	lr
 8009f7e:	bf00      	nop
 8009f80:	20015638 	.word	0x20015638

08009f84 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009f84:	4b01      	ldr	r3, [pc, #4]	; (8009f8c <xTaskGetTickCount+0x8>)
 8009f86:	6818      	ldr	r0, [r3, #0]
}
 8009f88:	4770      	bx	lr
 8009f8a:	bf00      	nop
 8009f8c:	200156b4 	.word	0x200156b4

08009f90 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009f90:	4b3f      	ldr	r3, [pc, #252]	; (800a090 <xTaskIncrementTick+0x100>)
 8009f92:	681b      	ldr	r3, [r3, #0]
{
 8009f94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009f98:	2b00      	cmp	r3, #0
 8009f9a:	d173      	bne.n	800a084 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009f9c:	4b3d      	ldr	r3, [pc, #244]	; (800a094 <xTaskIncrementTick+0x104>)
 8009f9e:	681d      	ldr	r5, [r3, #0]
 8009fa0:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009fa2:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009fa4:	b9bd      	cbnz	r5, 8009fd6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009fa6:	4b3c      	ldr	r3, [pc, #240]	; (800a098 <xTaskIncrementTick+0x108>)
 8009fa8:	681a      	ldr	r2, [r3, #0]
 8009faa:	6812      	ldr	r2, [r2, #0]
 8009fac:	b142      	cbz	r2, 8009fc0 <xTaskIncrementTick+0x30>
 8009fae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fb2:	f383 8811 	msr	BASEPRI, r3
 8009fb6:	f3bf 8f6f 	isb	sy
 8009fba:	f3bf 8f4f 	dsb	sy
 8009fbe:	e7fe      	b.n	8009fbe <xTaskIncrementTick+0x2e>
 8009fc0:	4a36      	ldr	r2, [pc, #216]	; (800a09c <xTaskIncrementTick+0x10c>)
 8009fc2:	6819      	ldr	r1, [r3, #0]
 8009fc4:	6810      	ldr	r0, [r2, #0]
 8009fc6:	6018      	str	r0, [r3, #0]
 8009fc8:	6011      	str	r1, [r2, #0]
 8009fca:	4a35      	ldr	r2, [pc, #212]	; (800a0a0 <xTaskIncrementTick+0x110>)
 8009fcc:	6813      	ldr	r3, [r2, #0]
 8009fce:	3301      	adds	r3, #1
 8009fd0:	6013      	str	r3, [r2, #0]
 8009fd2:	f7ff fe57 	bl	8009c84 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009fd6:	4e33      	ldr	r6, [pc, #204]	; (800a0a4 <xTaskIncrementTick+0x114>)
 8009fd8:	4f33      	ldr	r7, [pc, #204]	; (800a0a8 <xTaskIncrementTick+0x118>)
 8009fda:	6833      	ldr	r3, [r6, #0]
 8009fdc:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800a0b4 <xTaskIncrementTick+0x124>
 8009fe0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009fe2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009fe6:	d911      	bls.n	800a00c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009fe8:	f8d8 3000 	ldr.w	r3, [r8]
 8009fec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009fee:	2214      	movs	r2, #20
 8009ff0:	4353      	muls	r3, r2
 8009ff2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009ff4:	2b02      	cmp	r3, #2
 8009ff6:	bf28      	it	cs
 8009ff8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009ffa:	4b2c      	ldr	r3, [pc, #176]	; (800a0ac <xTaskIncrementTick+0x11c>)
 8009ffc:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009ffe:	2b00      	cmp	r3, #0
}
 800a000:	bf0c      	ite	eq
 800a002:	4620      	moveq	r0, r4
 800a004:	2001      	movne	r0, #1
 800a006:	b003      	add	sp, #12
 800a008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a00c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800a098 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800a010:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800a0b8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a014:	f8d9 3000 	ldr.w	r3, [r9]
 800a018:	681b      	ldr	r3, [r3, #0]
 800a01a:	b91b      	cbnz	r3, 800a024 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a01c:	f04f 33ff 	mov.w	r3, #4294967295
 800a020:	6033      	str	r3, [r6, #0]
					break;
 800a022:	e7e1      	b.n	8009fe8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a024:	f8d9 3000 	ldr.w	r3, [r9]
 800a028:	68db      	ldr	r3, [r3, #12]
 800a02a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800a02e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800a032:	4295      	cmp	r5, r2
 800a034:	d201      	bcs.n	800a03a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800a036:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800a038:	e7d6      	b.n	8009fe8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a03a:	f10b 0104 	add.w	r1, fp, #4
 800a03e:	4608      	mov	r0, r1
 800a040:	9101      	str	r1, [sp, #4]
 800a042:	f7fe feac 	bl	8008d9e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800a046:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800a04a:	9901      	ldr	r1, [sp, #4]
 800a04c:	b122      	cbz	r2, 800a058 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a04e:	f10b 0018 	add.w	r0, fp, #24
 800a052:	f7fe fea4 	bl	8008d9e <uxListRemove>
 800a056:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800a058:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800a05c:	f8da 2000 	ldr.w	r2, [sl]
 800a060:	2314      	movs	r3, #20
 800a062:	4290      	cmp	r0, r2
 800a064:	bf88      	it	hi
 800a066:	f8ca 0000 	strhi.w	r0, [sl]
 800a06a:	fb03 7000 	mla	r0, r3, r0, r7
 800a06e:	f7fe fe73 	bl	8008d58 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a072:	f8d8 1000 	ldr.w	r1, [r8]
 800a076:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800a07a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800a07c:	429a      	cmp	r2, r3
 800a07e:	bf28      	it	cs
 800a080:	2401      	movcs	r4, #1
 800a082:	e7c7      	b.n	800a014 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 800a084:	4a0a      	ldr	r2, [pc, #40]	; (800a0b0 <xTaskIncrementTick+0x120>)
 800a086:	6813      	ldr	r3, [r2, #0]
 800a088:	3301      	adds	r3, #1
 800a08a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800a08c:	2400      	movs	r4, #0
 800a08e:	e7b4      	b.n	8009ffa <xTaskIncrementTick+0x6a>
 800a090:	20015638 	.word	0x20015638
 800a094:	200156b4 	.word	0x200156b4
 800a098:	200151c4 	.word	0x200151c4
 800a09c:	200151c8 	.word	0x200151c8
 800a0a0:	20015670 	.word	0x20015670
 800a0a4:	2001566c 	.word	0x2001566c
 800a0a8:	200151cc 	.word	0x200151cc
 800a0ac:	200156b8 	.word	0x200156b8
 800a0b0:	20015634 	.word	0x20015634
 800a0b4:	200151c0 	.word	0x200151c0
 800a0b8:	20015640 	.word	0x20015640

0800a0bc <xTaskResumeAll>:
{
 800a0bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800a0be:	4c31      	ldr	r4, [pc, #196]	; (800a184 <xTaskResumeAll+0xc8>)
 800a0c0:	6823      	ldr	r3, [r4, #0]
 800a0c2:	b943      	cbnz	r3, 800a0d6 <xTaskResumeAll+0x1a>
 800a0c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0c8:	f383 8811 	msr	BASEPRI, r3
 800a0cc:	f3bf 8f6f 	isb	sy
 800a0d0:	f3bf 8f4f 	dsb	sy
 800a0d4:	e7fe      	b.n	800a0d4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800a0d6:	f7fe fedd 	bl	8008e94 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800a0da:	6823      	ldr	r3, [r4, #0]
 800a0dc:	3b01      	subs	r3, #1
 800a0de:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a0e0:	6824      	ldr	r4, [r4, #0]
 800a0e2:	b12c      	cbz	r4, 800a0f0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800a0e4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a0e6:	f7fe fef5 	bl	8008ed4 <vPortExitCritical>
}
 800a0ea:	4620      	mov	r0, r4
 800a0ec:	b003      	add	sp, #12
 800a0ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a0f0:	4b25      	ldr	r3, [pc, #148]	; (800a188 <xTaskResumeAll+0xcc>)
 800a0f2:	681b      	ldr	r3, [r3, #0]
 800a0f4:	2b00      	cmp	r3, #0
 800a0f6:	d0f5      	beq.n	800a0e4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a0f8:	4d24      	ldr	r5, [pc, #144]	; (800a18c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800a0fa:	4e25      	ldr	r6, [pc, #148]	; (800a190 <xTaskResumeAll+0xd4>)
 800a0fc:	4f25      	ldr	r7, [pc, #148]	; (800a194 <xTaskResumeAll+0xd8>)
 800a0fe:	e01e      	b.n	800a13e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a100:	68eb      	ldr	r3, [r5, #12]
 800a102:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a104:	f104 0018 	add.w	r0, r4, #24
 800a108:	f7fe fe49 	bl	8008d9e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a10c:	1d21      	adds	r1, r4, #4
 800a10e:	4608      	mov	r0, r1
 800a110:	9101      	str	r1, [sp, #4]
 800a112:	f7fe fe44 	bl	8008d9e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a116:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a118:	6832      	ldr	r2, [r6, #0]
 800a11a:	9901      	ldr	r1, [sp, #4]
 800a11c:	2014      	movs	r0, #20
 800a11e:	4293      	cmp	r3, r2
 800a120:	fb00 7003 	mla	r0, r0, r3, r7
 800a124:	bf88      	it	hi
 800a126:	6033      	strhi	r3, [r6, #0]
 800a128:	f7fe fe16 	bl	8008d58 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a12c:	4b1a      	ldr	r3, [pc, #104]	; (800a198 <xTaskResumeAll+0xdc>)
 800a12e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a130:	681b      	ldr	r3, [r3, #0]
 800a132:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a134:	429a      	cmp	r2, r3
 800a136:	d302      	bcc.n	800a13e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800a138:	4b18      	ldr	r3, [pc, #96]	; (800a19c <xTaskResumeAll+0xe0>)
 800a13a:	2201      	movs	r2, #1
 800a13c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a13e:	682b      	ldr	r3, [r5, #0]
 800a140:	2b00      	cmp	r3, #0
 800a142:	d1dd      	bne.n	800a100 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800a144:	b10c      	cbz	r4, 800a14a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800a146:	f7ff fd9d 	bl	8009c84 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800a14a:	4d15      	ldr	r5, [pc, #84]	; (800a1a0 <xTaskResumeAll+0xe4>)
 800a14c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800a14e:	b144      	cbz	r4, 800a162 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800a150:	4e12      	ldr	r6, [pc, #72]	; (800a19c <xTaskResumeAll+0xe0>)
 800a152:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800a154:	f7ff ff1c 	bl	8009f90 <xTaskIncrementTick>
 800a158:	b100      	cbz	r0, 800a15c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800a15a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800a15c:	3c01      	subs	r4, #1
 800a15e:	d1f9      	bne.n	800a154 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 800a160:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800a162:	4b0e      	ldr	r3, [pc, #56]	; (800a19c <xTaskResumeAll+0xe0>)
 800a164:	681b      	ldr	r3, [r3, #0]
 800a166:	2b00      	cmp	r3, #0
 800a168:	d0bc      	beq.n	800a0e4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800a16a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a16e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a172:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a176:	f3bf 8f4f 	dsb	sy
 800a17a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800a17e:	2401      	movs	r4, #1
 800a180:	e7b1      	b.n	800a0e6 <xTaskResumeAll+0x2a>
 800a182:	bf00      	nop
 800a184:	20015638 	.word	0x20015638
 800a188:	2001562c 	.word	0x2001562c
 800a18c:	20015674 	.word	0x20015674
 800a190:	20015640 	.word	0x20015640
 800a194:	200151cc 	.word	0x200151cc
 800a198:	200151c0 	.word	0x200151c0
 800a19c:	200156b8 	.word	0x200156b8
 800a1a0:	20015634 	.word	0x20015634

0800a1a4 <vTaskDelay>:
	{
 800a1a4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a1a6:	b950      	cbnz	r0, 800a1be <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800a1a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a1ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a1b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a1b4:	f3bf 8f4f 	dsb	sy
 800a1b8:	f3bf 8f6f 	isb	sy
	}
 800a1bc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800a1be:	4b0a      	ldr	r3, [pc, #40]	; (800a1e8 <vTaskDelay+0x44>)
 800a1c0:	6819      	ldr	r1, [r3, #0]
 800a1c2:	b141      	cbz	r1, 800a1d6 <vTaskDelay+0x32>
 800a1c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1c8:	f383 8811 	msr	BASEPRI, r3
 800a1cc:	f3bf 8f6f 	isb	sy
 800a1d0:	f3bf 8f4f 	dsb	sy
 800a1d4:	e7fe      	b.n	800a1d4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800a1d6:	f7ff fecd 	bl	8009f74 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a1da:	f7ff fd1b 	bl	8009c14 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800a1de:	f7ff ff6d 	bl	800a0bc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800a1e2:	2800      	cmp	r0, #0
 800a1e4:	d0e0      	beq.n	800a1a8 <vTaskDelay+0x4>
 800a1e6:	e7e9      	b.n	800a1bc <vTaskDelay+0x18>
 800a1e8:	20015638 	.word	0x20015638

0800a1ec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a1ec:	4b19      	ldr	r3, [pc, #100]	; (800a254 <vTaskSwitchContext+0x68>)
 800a1ee:	681a      	ldr	r2, [r3, #0]
 800a1f0:	4b19      	ldr	r3, [pc, #100]	; (800a258 <vTaskSwitchContext+0x6c>)
{
 800a1f2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a1f4:	b112      	cbz	r2, 800a1fc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a1f6:	2201      	movs	r2, #1
 800a1f8:	601a      	str	r2, [r3, #0]
}
 800a1fa:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a1fc:	4d17      	ldr	r5, [pc, #92]	; (800a25c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800a1fe:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a200:	682a      	ldr	r2, [r5, #0]
 800a202:	4917      	ldr	r1, [pc, #92]	; (800a260 <vTaskSwitchContext+0x74>)
 800a204:	2614      	movs	r6, #20
 800a206:	fb06 f302 	mul.w	r3, r6, r2
 800a20a:	18c8      	adds	r0, r1, r3
 800a20c:	58cc      	ldr	r4, [r1, r3]
 800a20e:	b1ac      	cbz	r4, 800a23c <vTaskSwitchContext+0x50>
 800a210:	6844      	ldr	r4, [r0, #4]
 800a212:	3308      	adds	r3, #8
 800a214:	6864      	ldr	r4, [r4, #4]
 800a216:	6044      	str	r4, [r0, #4]
 800a218:	440b      	add	r3, r1
 800a21a:	429c      	cmp	r4, r3
 800a21c:	bf04      	itt	eq
 800a21e:	6863      	ldreq	r3, [r4, #4]
 800a220:	6043      	streq	r3, [r0, #4]
 800a222:	2314      	movs	r3, #20
 800a224:	fb03 1102 	mla	r1, r3, r2, r1
 800a228:	684b      	ldr	r3, [r1, #4]
 800a22a:	68d9      	ldr	r1, [r3, #12]
 800a22c:	4b0d      	ldr	r3, [pc, #52]	; (800a264 <vTaskSwitchContext+0x78>)
 800a22e:	6019      	str	r1, [r3, #0]
 800a230:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a232:	681b      	ldr	r3, [r3, #0]
 800a234:	4a0c      	ldr	r2, [pc, #48]	; (800a268 <vTaskSwitchContext+0x7c>)
 800a236:	3358      	adds	r3, #88	; 0x58
 800a238:	6013      	str	r3, [r2, #0]
}
 800a23a:	e7de      	b.n	800a1fa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a23c:	b942      	cbnz	r2, 800a250 <vTaskSwitchContext+0x64>
 800a23e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a242:	f383 8811 	msr	BASEPRI, r3
 800a246:	f3bf 8f6f 	isb	sy
 800a24a:	f3bf 8f4f 	dsb	sy
 800a24e:	e7fe      	b.n	800a24e <vTaskSwitchContext+0x62>
 800a250:	3a01      	subs	r2, #1
 800a252:	e7d8      	b.n	800a206 <vTaskSwitchContext+0x1a>
 800a254:	20015638 	.word	0x20015638
 800a258:	200156b8 	.word	0x200156b8
 800a25c:	20015640 	.word	0x20015640
 800a260:	200151cc 	.word	0x200151cc
 800a264:	200151c0 	.word	0x200151c0
 800a268:	20000104 	.word	0x20000104

0800a26c <vTaskPlaceOnEventList>:
{
 800a26c:	b510      	push	{r4, lr}
 800a26e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a270:	b940      	cbnz	r0, 800a284 <vTaskPlaceOnEventList+0x18>
 800a272:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a276:	f383 8811 	msr	BASEPRI, r3
 800a27a:	f3bf 8f6f 	isb	sy
 800a27e:	f3bf 8f4f 	dsb	sy
 800a282:	e7fe      	b.n	800a282 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a284:	4b05      	ldr	r3, [pc, #20]	; (800a29c <vTaskPlaceOnEventList+0x30>)
 800a286:	6819      	ldr	r1, [r3, #0]
 800a288:	3118      	adds	r1, #24
 800a28a:	f7fe fd71 	bl	8008d70 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a28e:	4620      	mov	r0, r4
 800a290:	2101      	movs	r1, #1
}
 800a292:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a296:	f7ff bcbd 	b.w	8009c14 <prvAddCurrentTaskToDelayedList>
 800a29a:	bf00      	nop
 800a29c:	200151c0 	.word	0x200151c0

0800a2a0 <vTaskPlaceOnEventListRestricted>:
	{
 800a2a0:	b538      	push	{r3, r4, r5, lr}
 800a2a2:	460d      	mov	r5, r1
 800a2a4:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a2a6:	b940      	cbnz	r0, 800a2ba <vTaskPlaceOnEventListRestricted+0x1a>
 800a2a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ac:	f383 8811 	msr	BASEPRI, r3
 800a2b0:	f3bf 8f6f 	isb	sy
 800a2b4:	f3bf 8f4f 	dsb	sy
 800a2b8:	e7fe      	b.n	800a2b8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a2ba:	4b07      	ldr	r3, [pc, #28]	; (800a2d8 <vTaskPlaceOnEventListRestricted+0x38>)
 800a2bc:	6819      	ldr	r1, [r3, #0]
 800a2be:	3118      	adds	r1, #24
 800a2c0:	f7fe fd4a 	bl	8008d58 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a2c4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a2c6:	4621      	mov	r1, r4
 800a2c8:	bf0c      	ite	eq
 800a2ca:	4628      	moveq	r0, r5
 800a2cc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a2d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a2d4:	f7ff bc9e 	b.w	8009c14 <prvAddCurrentTaskToDelayedList>
 800a2d8:	200151c0 	.word	0x200151c0

0800a2dc <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a2dc:	68c3      	ldr	r3, [r0, #12]
{
 800a2de:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a2e0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a2e2:	b944      	cbnz	r4, 800a2f6 <xTaskRemoveFromEventList+0x1a>
 800a2e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2e8:	f383 8811 	msr	BASEPRI, r3
 800a2ec:	f3bf 8f6f 	isb	sy
 800a2f0:	f3bf 8f4f 	dsb	sy
 800a2f4:	e7fe      	b.n	800a2f4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a2f6:	f104 0118 	add.w	r1, r4, #24
 800a2fa:	4608      	mov	r0, r1
 800a2fc:	9101      	str	r1, [sp, #4]
 800a2fe:	f7fe fd4e 	bl	8008d9e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a302:	4b12      	ldr	r3, [pc, #72]	; (800a34c <xTaskRemoveFromEventList+0x70>)
 800a304:	9901      	ldr	r1, [sp, #4]
 800a306:	681b      	ldr	r3, [r3, #0]
 800a308:	b9eb      	cbnz	r3, 800a346 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a30a:	1d21      	adds	r1, r4, #4
 800a30c:	4608      	mov	r0, r1
 800a30e:	9101      	str	r1, [sp, #4]
 800a310:	f7fe fd45 	bl	8008d9e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a314:	4a0e      	ldr	r2, [pc, #56]	; (800a350 <xTaskRemoveFromEventList+0x74>)
 800a316:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a318:	6810      	ldr	r0, [r2, #0]
 800a31a:	9901      	ldr	r1, [sp, #4]
 800a31c:	4283      	cmp	r3, r0
 800a31e:	bf88      	it	hi
 800a320:	6013      	strhi	r3, [r2, #0]
 800a322:	4a0c      	ldr	r2, [pc, #48]	; (800a354 <xTaskRemoveFromEventList+0x78>)
 800a324:	2014      	movs	r0, #20
 800a326:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a32a:	f7fe fd15 	bl	8008d58 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a32e:	4b0a      	ldr	r3, [pc, #40]	; (800a358 <xTaskRemoveFromEventList+0x7c>)
 800a330:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a332:	681b      	ldr	r3, [r3, #0]
 800a334:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a336:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a338:	bf85      	ittet	hi
 800a33a:	4b08      	ldrhi	r3, [pc, #32]	; (800a35c <xTaskRemoveFromEventList+0x80>)
 800a33c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a33e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a340:	6018      	strhi	r0, [r3, #0]
}
 800a342:	b002      	add	sp, #8
 800a344:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a346:	4806      	ldr	r0, [pc, #24]	; (800a360 <xTaskRemoveFromEventList+0x84>)
 800a348:	e7ef      	b.n	800a32a <xTaskRemoveFromEventList+0x4e>
 800a34a:	bf00      	nop
 800a34c:	20015638 	.word	0x20015638
 800a350:	20015640 	.word	0x20015640
 800a354:	200151cc 	.word	0x200151cc
 800a358:	200151c0 	.word	0x200151c0
 800a35c:	200156b8 	.word	0x200156b8
 800a360:	20015674 	.word	0x20015674

0800a364 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a364:	4b03      	ldr	r3, [pc, #12]	; (800a374 <vTaskInternalSetTimeOutState+0x10>)
 800a366:	681b      	ldr	r3, [r3, #0]
 800a368:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a36a:	4b03      	ldr	r3, [pc, #12]	; (800a378 <vTaskInternalSetTimeOutState+0x14>)
 800a36c:	681b      	ldr	r3, [r3, #0]
 800a36e:	6043      	str	r3, [r0, #4]
}
 800a370:	4770      	bx	lr
 800a372:	bf00      	nop
 800a374:	20015670 	.word	0x20015670
 800a378:	200156b4 	.word	0x200156b4

0800a37c <xTaskCheckForTimeOut>:
{
 800a37c:	b570      	push	{r4, r5, r6, lr}
 800a37e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a380:	4605      	mov	r5, r0
 800a382:	b940      	cbnz	r0, 800a396 <xTaskCheckForTimeOut+0x1a>
 800a384:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a388:	f383 8811 	msr	BASEPRI, r3
 800a38c:	f3bf 8f6f 	isb	sy
 800a390:	f3bf 8f4f 	dsb	sy
 800a394:	e7fe      	b.n	800a394 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a396:	b941      	cbnz	r1, 800a3aa <xTaskCheckForTimeOut+0x2e>
 800a398:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a39c:	f383 8811 	msr	BASEPRI, r3
 800a3a0:	f3bf 8f6f 	isb	sy
 800a3a4:	f3bf 8f4f 	dsb	sy
 800a3a8:	e7fe      	b.n	800a3a8 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a3aa:	f7fe fd73 	bl	8008e94 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a3ae:	4b0f      	ldr	r3, [pc, #60]	; (800a3ec <xTaskCheckForTimeOut+0x70>)
 800a3b0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a3b2:	6823      	ldr	r3, [r4, #0]
 800a3b4:	1c5a      	adds	r2, r3, #1
 800a3b6:	d010      	beq.n	800a3da <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a3b8:	480d      	ldr	r0, [pc, #52]	; (800a3f0 <xTaskCheckForTimeOut+0x74>)
 800a3ba:	682e      	ldr	r6, [r5, #0]
 800a3bc:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a3be:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a3c0:	4286      	cmp	r6, r0
 800a3c2:	d001      	beq.n	800a3c8 <xTaskCheckForTimeOut+0x4c>
 800a3c4:	428a      	cmp	r2, r1
 800a3c6:	d90f      	bls.n	800a3e8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a3c8:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a3ca:	4283      	cmp	r3, r0
 800a3cc:	d90a      	bls.n	800a3e4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a3ce:	1a5b      	subs	r3, r3, r1
 800a3d0:	4413      	add	r3, r2
 800a3d2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a3d4:	4628      	mov	r0, r5
 800a3d6:	f7ff ffc5 	bl	800a364 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a3da:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a3dc:	f7fe fd7a 	bl	8008ed4 <vPortExitCritical>
}
 800a3e0:	4620      	mov	r0, r4
 800a3e2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a3e4:	2300      	movs	r3, #0
 800a3e6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a3e8:	2401      	movs	r4, #1
 800a3ea:	e7f7      	b.n	800a3dc <xTaskCheckForTimeOut+0x60>
 800a3ec:	200156b4 	.word	0x200156b4
 800a3f0:	20015670 	.word	0x20015670

0800a3f4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a3f4:	4b01      	ldr	r3, [pc, #4]	; (800a3fc <vTaskMissedYield+0x8>)
 800a3f6:	2201      	movs	r2, #1
 800a3f8:	601a      	str	r2, [r3, #0]
}
 800a3fa:	4770      	bx	lr
 800a3fc:	200156b8 	.word	0x200156b8

0800a400 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a400:	4b05      	ldr	r3, [pc, #20]	; (800a418 <xTaskGetSchedulerState+0x18>)
 800a402:	681b      	ldr	r3, [r3, #0]
 800a404:	b133      	cbz	r3, 800a414 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a406:	4b05      	ldr	r3, [pc, #20]	; (800a41c <xTaskGetSchedulerState+0x1c>)
 800a408:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a40a:	2b00      	cmp	r3, #0
 800a40c:	bf0c      	ite	eq
 800a40e:	2002      	moveq	r0, #2
 800a410:	2000      	movne	r0, #0
 800a412:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a414:	2001      	movs	r0, #1
	}
 800a416:	4770      	bx	lr
 800a418:	20015688 	.word	0x20015688
 800a41c:	20015638 	.word	0x20015638

0800a420 <xTaskPriorityInherit>:
	{
 800a420:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a422:	4604      	mov	r4, r0
 800a424:	b348      	cbz	r0, 800a47a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a426:	4d1c      	ldr	r5, [pc, #112]	; (800a498 <xTaskPriorityInherit+0x78>)
 800a428:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a42a:	682a      	ldr	r2, [r5, #0]
 800a42c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a42e:	4293      	cmp	r3, r2
 800a430:	d229      	bcs.n	800a486 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a432:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a434:	4e19      	ldr	r6, [pc, #100]	; (800a49c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a436:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a438:	bfa1      	itttt	ge
 800a43a:	682a      	ldrge	r2, [r5, #0]
 800a43c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a43e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a442:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a444:	2214      	movs	r2, #20
 800a446:	fb02 6303 	mla	r3, r2, r3, r6
 800a44a:	6942      	ldr	r2, [r0, #20]
 800a44c:	429a      	cmp	r2, r3
 800a44e:	d116      	bne.n	800a47e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a450:	1d01      	adds	r1, r0, #4
 800a452:	4608      	mov	r0, r1
 800a454:	9101      	str	r1, [sp, #4]
 800a456:	f7fe fca2 	bl	8008d9e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a45a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a45c:	4a10      	ldr	r2, [pc, #64]	; (800a4a0 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a45e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a460:	6810      	ldr	r0, [r2, #0]
 800a462:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a464:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a466:	4283      	cmp	r3, r0
 800a468:	f04f 0014 	mov.w	r0, #20
 800a46c:	fb00 6003 	mla	r0, r0, r3, r6
 800a470:	bf88      	it	hi
 800a472:	6013      	strhi	r3, [r2, #0]
 800a474:	f7fe fc70 	bl	8008d58 <vListInsertEnd>
				xReturn = pdTRUE;
 800a478:	2001      	movs	r0, #1
	}
 800a47a:	b002      	add	sp, #8
 800a47c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a47e:	682b      	ldr	r3, [r5, #0]
 800a480:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a482:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a484:	e7f8      	b.n	800a478 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a486:	682b      	ldr	r3, [r5, #0]
 800a488:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a48a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a48c:	42a0      	cmp	r0, r4
 800a48e:	bf2c      	ite	cs
 800a490:	2000      	movcs	r0, #0
 800a492:	2001      	movcc	r0, #1
 800a494:	e7f1      	b.n	800a47a <xTaskPriorityInherit+0x5a>
 800a496:	bf00      	nop
 800a498:	200151c0 	.word	0x200151c0
 800a49c:	200151cc 	.word	0x200151cc
 800a4a0:	20015640 	.word	0x20015640

0800a4a4 <xTaskPriorityDisinherit>:
	{
 800a4a4:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a4a6:	b910      	cbnz	r0, 800a4ae <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a4a8:	2000      	movs	r0, #0
	}
 800a4aa:	b002      	add	sp, #8
 800a4ac:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a4ae:	4b1c      	ldr	r3, [pc, #112]	; (800a520 <xTaskPriorityDisinherit+0x7c>)
 800a4b0:	681c      	ldr	r4, [r3, #0]
 800a4b2:	4284      	cmp	r4, r0
 800a4b4:	d008      	beq.n	800a4c8 <xTaskPriorityDisinherit+0x24>
 800a4b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4ba:	f383 8811 	msr	BASEPRI, r3
 800a4be:	f3bf 8f6f 	isb	sy
 800a4c2:	f3bf 8f4f 	dsb	sy
 800a4c6:	e7fe      	b.n	800a4c6 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a4c8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a4ca:	b943      	cbnz	r3, 800a4de <xTaskPriorityDisinherit+0x3a>
 800a4cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4d0:	f383 8811 	msr	BASEPRI, r3
 800a4d4:	f3bf 8f6f 	isb	sy
 800a4d8:	f3bf 8f4f 	dsb	sy
 800a4dc:	e7fe      	b.n	800a4dc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a4de:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a4e0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a4e2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a4e4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a4e6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a4e8:	d0de      	beq.n	800a4a8 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a4ea:	2b00      	cmp	r3, #0
 800a4ec:	d1dc      	bne.n	800a4a8 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a4ee:	1d21      	adds	r1, r4, #4
 800a4f0:	4608      	mov	r0, r1
 800a4f2:	9101      	str	r1, [sp, #4]
 800a4f4:	f7fe fc53 	bl	8008d9e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a4f8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a4fa:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a4fc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a4fe:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a502:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a504:	4a07      	ldr	r2, [pc, #28]	; (800a524 <xTaskPriorityDisinherit+0x80>)
 800a506:	6810      	ldr	r0, [r2, #0]
 800a508:	4283      	cmp	r3, r0
 800a50a:	bf88      	it	hi
 800a50c:	6013      	strhi	r3, [r2, #0]
 800a50e:	4a06      	ldr	r2, [pc, #24]	; (800a528 <xTaskPriorityDisinherit+0x84>)
 800a510:	2014      	movs	r0, #20
 800a512:	fb00 2003 	mla	r0, r0, r3, r2
 800a516:	f7fe fc1f 	bl	8008d58 <vListInsertEnd>
					xReturn = pdTRUE;
 800a51a:	2001      	movs	r0, #1
		return xReturn;
 800a51c:	e7c5      	b.n	800a4aa <xTaskPriorityDisinherit+0x6>
 800a51e:	bf00      	nop
 800a520:	200151c0 	.word	0x200151c0
 800a524:	20015640 	.word	0x20015640
 800a528:	200151cc 	.word	0x200151cc

0800a52c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a52c:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a52e:	4604      	mov	r4, r0
 800a530:	2800      	cmp	r0, #0
 800a532:	d044      	beq.n	800a5be <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a534:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a536:	b942      	cbnz	r2, 800a54a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a538:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a53c:	f383 8811 	msr	BASEPRI, r3
 800a540:	f3bf 8f6f 	isb	sy
 800a544:	f3bf 8f4f 	dsb	sy
 800a548:	e7fe      	b.n	800a548 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a54a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a54c:	4299      	cmp	r1, r3
 800a54e:	bf38      	it	cc
 800a550:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a552:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a554:	428b      	cmp	r3, r1
 800a556:	d032      	beq.n	800a5be <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a558:	2a01      	cmp	r2, #1
 800a55a:	d130      	bne.n	800a5be <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a55c:	4a19      	ldr	r2, [pc, #100]	; (800a5c4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a55e:	6812      	ldr	r2, [r2, #0]
 800a560:	4282      	cmp	r2, r0
 800a562:	d108      	bne.n	800a576 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a564:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a568:	f383 8811 	msr	BASEPRI, r3
 800a56c:	f3bf 8f6f 	isb	sy
 800a570:	f3bf 8f4f 	dsb	sy
 800a574:	e7fe      	b.n	800a574 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a576:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a578:	4d13      	ldr	r5, [pc, #76]	; (800a5c8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a57a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a57c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a57e:	f04f 0214 	mov.w	r2, #20
 800a582:	fb02 5303 	mla	r3, r2, r3, r5
 800a586:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a588:	bfa4      	itt	ge
 800a58a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a58e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a590:	429a      	cmp	r2, r3
 800a592:	d114      	bne.n	800a5be <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a594:	1d01      	adds	r1, r0, #4
 800a596:	4608      	mov	r0, r1
 800a598:	9101      	str	r1, [sp, #4]
 800a59a:	f7fe fc00 	bl	8008d9e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a59e:	4a0b      	ldr	r2, [pc, #44]	; (800a5cc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a5a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a5a2:	6810      	ldr	r0, [r2, #0]
 800a5a4:	9901      	ldr	r1, [sp, #4]
 800a5a6:	4283      	cmp	r3, r0
 800a5a8:	f04f 0014 	mov.w	r0, #20
 800a5ac:	fb00 5003 	mla	r0, r0, r3, r5
 800a5b0:	bf88      	it	hi
 800a5b2:	6013      	strhi	r3, [r2, #0]
	}
 800a5b4:	b003      	add	sp, #12
 800a5b6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a5ba:	f7fe bbcd 	b.w	8008d58 <vListInsertEnd>
	}
 800a5be:	b003      	add	sp, #12
 800a5c0:	bd30      	pop	{r4, r5, pc}
 800a5c2:	bf00      	nop
 800a5c4:	200151c0 	.word	0x200151c0
 800a5c8:	200151cc 	.word	0x200151cc
 800a5cc:	20015640 	.word	0x20015640

0800a5d0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a5d0:	4b04      	ldr	r3, [pc, #16]	; (800a5e4 <pvTaskIncrementMutexHeldCount+0x14>)
 800a5d2:	681a      	ldr	r2, [r3, #0]
 800a5d4:	b11a      	cbz	r2, 800a5de <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a5d6:	6819      	ldr	r1, [r3, #0]
 800a5d8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a5da:	3201      	adds	r2, #1
 800a5dc:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a5de:	6818      	ldr	r0, [r3, #0]
	}
 800a5e0:	4770      	bx	lr
 800a5e2:	bf00      	nop
 800a5e4:	200151c0 	.word	0x200151c0

0800a5e8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a5e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a5ea:	4c11      	ldr	r4, [pc, #68]	; (800a630 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a5ec:	f7fe fc52 	bl	8008e94 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a5f0:	6825      	ldr	r5, [r4, #0]
 800a5f2:	b9bd      	cbnz	r5, 800a624 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a5f4:	4f0f      	ldr	r7, [pc, #60]	; (800a634 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a5f6:	4e10      	ldr	r6, [pc, #64]	; (800a638 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a5f8:	4638      	mov	r0, r7
 800a5fa:	f7fe fb9f 	bl	8008d3c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a5fe:	4630      	mov	r0, r6
 800a600:	f7fe fb9c 	bl	8008d3c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a604:	4b0d      	ldr	r3, [pc, #52]	; (800a63c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a606:	4a0e      	ldr	r2, [pc, #56]	; (800a640 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a608:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a60a:	4b0e      	ldr	r3, [pc, #56]	; (800a644 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a60c:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a60e:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a610:	200a      	movs	r0, #10
 800a612:	4b0d      	ldr	r3, [pc, #52]	; (800a648 <prvCheckForValidListAndQueue+0x60>)
 800a614:	9500      	str	r5, [sp, #0]
 800a616:	f7fe fe4e 	bl	80092b6 <xQueueGenericCreateStatic>
 800a61a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a61c:	b110      	cbz	r0, 800a624 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a61e:	490b      	ldr	r1, [pc, #44]	; (800a64c <prvCheckForValidListAndQueue+0x64>)
 800a620:	f7ff fa18 	bl	8009a54 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a624:	b003      	add	sp, #12
 800a626:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a62a:	f7fe bc53 	b.w	8008ed4 <vPortExitCritical>
 800a62e:	bf00      	nop
 800a630:	200157e0 	.word	0x200157e0
 800a634:	20015764 	.word	0x20015764
 800a638:	20015778 	.word	0x20015778
 800a63c:	200156bc 	.word	0x200156bc
 800a640:	200156c4 	.word	0x200156c4
 800a644:	200156c0 	.word	0x200156c0
 800a648:	20015790 	.word	0x20015790
 800a64c:	080238e1 	.word	0x080238e1

0800a650 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a650:	4291      	cmp	r1, r2
{
 800a652:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a654:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a656:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a658:	d80a      	bhi.n	800a670 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a65a:	1ad2      	subs	r2, r2, r3
 800a65c:	6983      	ldr	r3, [r0, #24]
 800a65e:	429a      	cmp	r2, r3
 800a660:	d20d      	bcs.n	800a67e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a662:	4b08      	ldr	r3, [pc, #32]	; (800a684 <prvInsertTimerInActiveList+0x34>)
 800a664:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a666:	6818      	ldr	r0, [r3, #0]
 800a668:	f7fe fb82 	bl	8008d70 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a66c:	2000      	movs	r0, #0
}
 800a66e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a670:	429a      	cmp	r2, r3
 800a672:	d201      	bcs.n	800a678 <prvInsertTimerInActiveList+0x28>
 800a674:	4299      	cmp	r1, r3
 800a676:	d202      	bcs.n	800a67e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a678:	4b03      	ldr	r3, [pc, #12]	; (800a688 <prvInsertTimerInActiveList+0x38>)
 800a67a:	1d01      	adds	r1, r0, #4
 800a67c:	e7f3      	b.n	800a666 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a67e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a680:	e7f5      	b.n	800a66e <prvInsertTimerInActiveList+0x1e>
 800a682:	bf00      	nop
 800a684:	200156c0 	.word	0x200156c0
 800a688:	200156bc 	.word	0x200156bc

0800a68c <xTimerCreateTimerTask>:
{
 800a68c:	b510      	push	{r4, lr}
 800a68e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a690:	f7ff ffaa 	bl	800a5e8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a694:	4b12      	ldr	r3, [pc, #72]	; (800a6e0 <xTimerCreateTimerTask+0x54>)
 800a696:	681b      	ldr	r3, [r3, #0]
 800a698:	b1b3      	cbz	r3, 800a6c8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a69a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a69c:	aa07      	add	r2, sp, #28
 800a69e:	a906      	add	r1, sp, #24
 800a6a0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a6a2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a6a6:	f7fe fa4f 	bl	8008b48 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a6aa:	9b05      	ldr	r3, [sp, #20]
 800a6ac:	9302      	str	r3, [sp, #8]
 800a6ae:	9b06      	ldr	r3, [sp, #24]
 800a6b0:	9301      	str	r3, [sp, #4]
 800a6b2:	2302      	movs	r3, #2
 800a6b4:	9300      	str	r3, [sp, #0]
 800a6b6:	9a07      	ldr	r2, [sp, #28]
 800a6b8:	490a      	ldr	r1, [pc, #40]	; (800a6e4 <xTimerCreateTimerTask+0x58>)
 800a6ba:	480b      	ldr	r0, [pc, #44]	; (800a6e8 <xTimerCreateTimerTask+0x5c>)
 800a6bc:	4623      	mov	r3, r4
 800a6be:	f7ff fba3 	bl	8009e08 <xTaskCreateStatic>
 800a6c2:	4b0a      	ldr	r3, [pc, #40]	; (800a6ec <xTimerCreateTimerTask+0x60>)
 800a6c4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a6c6:	b940      	cbnz	r0, 800a6da <xTimerCreateTimerTask+0x4e>
 800a6c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6cc:	f383 8811 	msr	BASEPRI, r3
 800a6d0:	f3bf 8f6f 	isb	sy
 800a6d4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a6d8:	e7fe      	b.n	800a6d8 <xTimerCreateTimerTask+0x4c>
}
 800a6da:	2001      	movs	r0, #1
 800a6dc:	b008      	add	sp, #32
 800a6de:	bd10      	pop	{r4, pc}
 800a6e0:	200157e0 	.word	0x200157e0
 800a6e4:	080238e6 	.word	0x080238e6
 800a6e8:	0800a7f5 	.word	0x0800a7f5
 800a6ec:	200157e4 	.word	0x200157e4

0800a6f0 <xTimerGenericCommand>:
{
 800a6f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a6f2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a6f4:	4604      	mov	r4, r0
{
 800a6f6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a6f8:	b940      	cbnz	r0, 800a70c <xTimerGenericCommand+0x1c>
 800a6fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6fe:	f383 8811 	msr	BASEPRI, r3
 800a702:	f3bf 8f6f 	isb	sy
 800a706:	f3bf 8f4f 	dsb	sy
 800a70a:	e7fe      	b.n	800a70a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a70c:	4d0d      	ldr	r5, [pc, #52]	; (800a744 <xTimerGenericCommand+0x54>)
 800a70e:	6828      	ldr	r0, [r5, #0]
 800a710:	b180      	cbz	r0, 800a734 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a712:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a714:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a718:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a71a:	dc0d      	bgt.n	800a738 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a71c:	f7ff fe70 	bl	800a400 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a720:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a722:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a724:	bf08      	it	eq
 800a726:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a728:	6828      	ldr	r0, [r5, #0]
 800a72a:	bf18      	it	ne
 800a72c:	461a      	movne	r2, r3
 800a72e:	4669      	mov	r1, sp
 800a730:	f7fe fe76 	bl	8009420 <xQueueGenericSend>
}
 800a734:	b004      	add	sp, #16
 800a736:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a738:	2300      	movs	r3, #0
 800a73a:	4669      	mov	r1, sp
 800a73c:	f7fe ff23 	bl	8009586 <xQueueGenericSendFromISR>
 800a740:	e7f8      	b.n	800a734 <xTimerGenericCommand+0x44>
 800a742:	bf00      	nop
 800a744:	200157e0 	.word	0x200157e0

0800a748 <prvSampleTimeNow>:
{
 800a748:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a74c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a7f0 <prvSampleTimeNow+0xa8>
{
 800a750:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a752:	f7ff fc17 	bl	8009f84 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a756:	f8d8 3000 	ldr.w	r3, [r8]
 800a75a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a75c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a75e:	d940      	bls.n	800a7e2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a760:	4f21      	ldr	r7, [pc, #132]	; (800a7e8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a762:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a766:	683b      	ldr	r3, [r7, #0]
 800a768:	681a      	ldr	r2, [r3, #0]
 800a76a:	b95a      	cbnz	r2, 800a784 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a76c:	4a1f      	ldr	r2, [pc, #124]	; (800a7ec <prvSampleTimeNow+0xa4>)
 800a76e:	6811      	ldr	r1, [r2, #0]
 800a770:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a772:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a774:	2301      	movs	r3, #1
}
 800a776:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a778:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a77a:	f8c8 5000 	str.w	r5, [r8]
}
 800a77e:	b004      	add	sp, #16
 800a780:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a784:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a786:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a788:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a78c:	1d21      	adds	r1, r4, #4
 800a78e:	4608      	mov	r0, r1
 800a790:	9103      	str	r1, [sp, #12]
 800a792:	f7fe fb04 	bl	8008d9e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a796:	6a23      	ldr	r3, [r4, #32]
 800a798:	4620      	mov	r0, r4
 800a79a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a79c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a7a0:	9903      	ldr	r1, [sp, #12]
 800a7a2:	f013 0f04 	tst.w	r3, #4
 800a7a6:	d0de      	beq.n	800a766 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a7a8:	69a3      	ldr	r3, [r4, #24]
 800a7aa:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a7ac:	459a      	cmp	sl, r3
 800a7ae:	d205      	bcs.n	800a7bc <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a7b0:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a7b2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a7b4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a7b6:	f7fe fadb 	bl	8008d70 <vListInsert>
 800a7ba:	e7d4      	b.n	800a766 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a7bc:	2300      	movs	r3, #0
 800a7be:	f8cd 9000 	str.w	r9, [sp]
 800a7c2:	4652      	mov	r2, sl
 800a7c4:	4619      	mov	r1, r3
 800a7c6:	4620      	mov	r0, r4
 800a7c8:	f7ff ff92 	bl	800a6f0 <xTimerGenericCommand>
				configASSERT( xResult );
 800a7cc:	2800      	cmp	r0, #0
 800a7ce:	d1ca      	bne.n	800a766 <prvSampleTimeNow+0x1e>
 800a7d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7d4:	f383 8811 	msr	BASEPRI, r3
 800a7d8:	f3bf 8f6f 	isb	sy
 800a7dc:	f3bf 8f4f 	dsb	sy
 800a7e0:	e7fe      	b.n	800a7e0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a7e2:	2300      	movs	r3, #0
 800a7e4:	e7c7      	b.n	800a776 <prvSampleTimeNow+0x2e>
 800a7e6:	bf00      	nop
 800a7e8:	200156bc 	.word	0x200156bc
 800a7ec:	200156c0 	.word	0x200156c0
 800a7f0:	2001578c 	.word	0x2001578c

0800a7f4 <prvTimerTask>:
{
 800a7f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a7f8:	4d6e      	ldr	r5, [pc, #440]	; (800a9b4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a7fa:	4e6f      	ldr	r6, [pc, #444]	; (800a9b8 <prvTimerTask+0x1c4>)
{
 800a7fc:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a7fe:	682b      	ldr	r3, [r5, #0]
 800a800:	f8d3 8000 	ldr.w	r8, [r3]
 800a804:	f1b8 0f00 	cmp.w	r8, #0
 800a808:	d035      	beq.n	800a876 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a80a:	68db      	ldr	r3, [r3, #12]
 800a80c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a810:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a812:	f7ff fbaf 	bl	8009f74 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a816:	a804      	add	r0, sp, #16
 800a818:	f7ff ff96 	bl	800a748 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a81c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a81e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a820:	2b00      	cmp	r3, #0
 800a822:	d169      	bne.n	800a8f8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a824:	2c00      	cmp	r4, #0
 800a826:	d14c      	bne.n	800a8c2 <prvTimerTask+0xce>
 800a828:	4540      	cmp	r0, r8
 800a82a:	d350      	bcc.n	800a8ce <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a82c:	f7ff fc46 	bl	800a0bc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a830:	682b      	ldr	r3, [r5, #0]
 800a832:	68db      	ldr	r3, [r3, #12]
 800a834:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a836:	1d38      	adds	r0, r7, #4
 800a838:	f7fe fab1 	bl	8008d9e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a83c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a840:	0758      	lsls	r0, r3, #29
 800a842:	d51a      	bpl.n	800a87a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a844:	69b9      	ldr	r1, [r7, #24]
 800a846:	4643      	mov	r3, r8
 800a848:	464a      	mov	r2, r9
 800a84a:	4441      	add	r1, r8
 800a84c:	4638      	mov	r0, r7
 800a84e:	f7ff feff 	bl	800a650 <prvInsertTimerInActiveList>
 800a852:	b1b0      	cbz	r0, 800a882 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a854:	9400      	str	r4, [sp, #0]
 800a856:	4623      	mov	r3, r4
 800a858:	4642      	mov	r2, r8
 800a85a:	4621      	mov	r1, r4
 800a85c:	4638      	mov	r0, r7
 800a85e:	f7ff ff47 	bl	800a6f0 <xTimerGenericCommand>
			configASSERT( xResult );
 800a862:	b970      	cbnz	r0, 800a882 <prvTimerTask+0x8e>
 800a864:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a868:	f383 8811 	msr	BASEPRI, r3
 800a86c:	f3bf 8f6f 	isb	sy
 800a870:	f3bf 8f4f 	dsb	sy
 800a874:	e7fe      	b.n	800a874 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a876:	2401      	movs	r4, #1
 800a878:	e7cb      	b.n	800a812 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a87a:	f023 0301 	bic.w	r3, r3, #1
 800a87e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a882:	6a3b      	ldr	r3, [r7, #32]
 800a884:	4638      	mov	r0, r7
 800a886:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a888:	6830      	ldr	r0, [r6, #0]
 800a88a:	2200      	movs	r2, #0
 800a88c:	a904      	add	r1, sp, #16
 800a88e:	f7fe ff2f 	bl	80096f0 <xQueueReceive>
 800a892:	2800      	cmp	r0, #0
 800a894:	d0b3      	beq.n	800a7fe <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a896:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a898:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a89a:	2b00      	cmp	r3, #0
 800a89c:	db2f      	blt.n	800a8fe <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a89e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a8a0:	6963      	ldr	r3, [r4, #20]
 800a8a2:	2b00      	cmp	r3, #0
 800a8a4:	d132      	bne.n	800a90c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a8a6:	a803      	add	r0, sp, #12
 800a8a8:	f7ff ff4e 	bl	800a748 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a8ac:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a8ae:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a8b0:	2b09      	cmp	r3, #9
 800a8b2:	d8e9      	bhi.n	800a888 <prvTimerTask+0x94>
 800a8b4:	e8df f003 	tbb	[pc, r3]
 800a8b8:	572e2e2e 	.word	0x572e2e2e
 800a8bc:	2e2e765e 	.word	0x2e2e765e
 800a8c0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a8c2:	4b3e      	ldr	r3, [pc, #248]	; (800a9bc <prvTimerTask+0x1c8>)
 800a8c4:	681b      	ldr	r3, [r3, #0]
 800a8c6:	681c      	ldr	r4, [r3, #0]
 800a8c8:	fab4 f484 	clz	r4, r4
 800a8cc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a8ce:	6830      	ldr	r0, [r6, #0]
 800a8d0:	4622      	mov	r2, r4
 800a8d2:	eba8 0109 	sub.w	r1, r8, r9
 800a8d6:	f7ff f8fa 	bl	8009ace <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a8da:	f7ff fbef 	bl	800a0bc <xTaskResumeAll>
 800a8de:	2800      	cmp	r0, #0
 800a8e0:	d1d2      	bne.n	800a888 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a8e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a8e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a8ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a8ee:	f3bf 8f4f 	dsb	sy
 800a8f2:	f3bf 8f6f 	isb	sy
 800a8f6:	e7c7      	b.n	800a888 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a8f8:	f7ff fbe0 	bl	800a0bc <xTaskResumeAll>
}
 800a8fc:	e7c4      	b.n	800a888 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a8fe:	9b05      	ldr	r3, [sp, #20]
 800a900:	9907      	ldr	r1, [sp, #28]
 800a902:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a904:	9b04      	ldr	r3, [sp, #16]
 800a906:	2b00      	cmp	r3, #0
 800a908:	dbbe      	blt.n	800a888 <prvTimerTask+0x94>
 800a90a:	e7c8      	b.n	800a89e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a90c:	1d20      	adds	r0, r4, #4
 800a90e:	f7fe fa46 	bl	8008d9e <uxListRemove>
 800a912:	e7c8      	b.n	800a8a6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a914:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a918:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a91a:	f043 0301 	orr.w	r3, r3, #1
 800a91e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a922:	9b05      	ldr	r3, [sp, #20]
 800a924:	4620      	mov	r0, r4
 800a926:	4419      	add	r1, r3
 800a928:	f7ff fe92 	bl	800a650 <prvInsertTimerInActiveList>
 800a92c:	2800      	cmp	r0, #0
 800a92e:	d0ab      	beq.n	800a888 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a930:	6a23      	ldr	r3, [r4, #32]
 800a932:	4620      	mov	r0, r4
 800a934:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a936:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a93a:	0759      	lsls	r1, r3, #29
 800a93c:	d5a4      	bpl.n	800a888 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a93e:	69a2      	ldr	r2, [r4, #24]
 800a940:	9905      	ldr	r1, [sp, #20]
 800a942:	2300      	movs	r3, #0
 800a944:	440a      	add	r2, r1
 800a946:	9300      	str	r3, [sp, #0]
 800a948:	4619      	mov	r1, r3
 800a94a:	4620      	mov	r0, r4
 800a94c:	f7ff fed0 	bl	800a6f0 <xTimerGenericCommand>
							configASSERT( xResult );
 800a950:	2800      	cmp	r0, #0
 800a952:	d199      	bne.n	800a888 <prvTimerTask+0x94>
 800a954:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a958:	f383 8811 	msr	BASEPRI, r3
 800a95c:	f3bf 8f6f 	isb	sy
 800a960:	f3bf 8f4f 	dsb	sy
 800a964:	e7fe      	b.n	800a964 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a966:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a96a:	f023 0301 	bic.w	r3, r3, #1
 800a96e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a972:	e789      	b.n	800a888 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a974:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a978:	f043 0301 	orr.w	r3, r3, #1
 800a97c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a980:	9905      	ldr	r1, [sp, #20]
 800a982:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a984:	b941      	cbnz	r1, 800a998 <prvTimerTask+0x1a4>
 800a986:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a98a:	f383 8811 	msr	BASEPRI, r3
 800a98e:	f3bf 8f6f 	isb	sy
 800a992:	f3bf 8f4f 	dsb	sy
 800a996:	e7fe      	b.n	800a996 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a998:	4603      	mov	r3, r0
 800a99a:	4401      	add	r1, r0
 800a99c:	4620      	mov	r0, r4
 800a99e:	f7ff fe57 	bl	800a650 <prvInsertTimerInActiveList>
					break;
 800a9a2:	e771      	b.n	800a888 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a9a4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a9a8:	079a      	lsls	r2, r3, #30
 800a9aa:	d4de      	bmi.n	800a96a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a9ac:	4620      	mov	r0, r4
 800a9ae:	f7fe f98d 	bl	8008ccc <vPortFree>
 800a9b2:	e769      	b.n	800a888 <prvTimerTask+0x94>
 800a9b4:	200156bc 	.word	0x200156bc
 800a9b8:	200157e0 	.word	0x200157e0
 800a9bc:	200156c0 	.word	0x200156c0

0800a9c0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a9c0:	8880      	ldrh	r0, [r0, #4]
 800a9c2:	4770      	bx	lr

0800a9c4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a9c4:	b570      	push	{r4, r5, r6, lr}
 800a9c6:	6803      	ldr	r3, [r0, #0]
 800a9c8:	4605      	mov	r5, r0
 800a9ca:	460c      	mov	r4, r1
 800a9cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a9ce:	2100      	movs	r1, #0
 800a9d0:	4798      	blx	r3
 800a9d2:	682b      	ldr	r3, [r5, #0]
 800a9d4:	4606      	mov	r6, r0
 800a9d6:	6a1b      	ldr	r3, [r3, #32]
 800a9d8:	4628      	mov	r0, r5
 800a9da:	4798      	blx	r3
 800a9dc:	1ba4      	subs	r4, r4, r6
 800a9de:	b2a4      	uxth	r4, r4
 800a9e0:	fbb4 f0f0 	udiv	r0, r4, r0
 800a9e4:	bd70      	pop	{r4, r5, r6, pc}

0800a9e6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a9e6:	2300      	movs	r3, #0
 800a9e8:	8083      	strh	r3, [r0, #4]
 800a9ea:	4770      	bx	lr

0800a9ec <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a9ec:	b510      	push	{r4, lr}
 800a9ee:	6803      	ldr	r3, [r0, #0]
 800a9f0:	8881      	ldrh	r1, [r0, #4]
 800a9f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a9f4:	4604      	mov	r4, r0
 800a9f6:	4798      	blx	r3
 800a9f8:	88a3      	ldrh	r3, [r4, #4]
 800a9fa:	3301      	adds	r3, #1
 800a9fc:	80a3      	strh	r3, [r4, #4]
 800a9fe:	bd10      	pop	{r4, pc}

0800aa00 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800aa00:	6803      	ldr	r3, [r0, #0]
 800aa02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa04:	4718      	bx	r3

0800aa06 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800aa06:	4770      	bx	lr

0800aa08 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800aa08:	4a02      	ldr	r2, [pc, #8]	; (800aa14 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800aa0a:	6002      	str	r2, [r0, #0]
 800aa0c:	2200      	movs	r2, #0
 800aa0e:	8082      	strh	r2, [r0, #4]
 800aa10:	4770      	bx	lr
 800aa12:	bf00      	nop
 800aa14:	080238f8 	.word	0x080238f8

0800aa18 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800aa18:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800aa1c:	4770      	bx	lr

0800aa1e <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800aa1e:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800aa22:	4770      	bx	lr

0800aa24 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800aa24:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800aa28:	4770      	bx	lr

0800aa2a <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800aa2a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800aa2c:	4770      	bx	lr

0800aa2e <_ZN8touchgfx11ModalWindow4showEv>:
 800aa2e:	2201      	movs	r2, #1
 800aa30:	6803      	ldr	r3, [r0, #0]
 800aa32:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800aa36:	695b      	ldr	r3, [r3, #20]
 800aa38:	4718      	bx	r3

0800aa3a <_ZN8touchgfx11ModalWindow4hideEv>:
 800aa3a:	b510      	push	{r4, lr}
 800aa3c:	6803      	ldr	r3, [r0, #0]
 800aa3e:	4604      	mov	r4, r0
 800aa40:	695b      	ldr	r3, [r3, #20]
 800aa42:	4798      	blx	r3
 800aa44:	2300      	movs	r3, #0
 800aa46:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800aa4a:	bd10      	pop	{r4, pc}

0800aa4c <_ZN8touchgfx11ModalWindowD1Ev>:
 800aa4c:	4770      	bx	lr

0800aa4e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800aa4e:	3058      	adds	r0, #88	; 0x58
 800aa50:	f000 b904 	b.w	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800aa54 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800aa54:	6541      	str	r1, [r0, #84]	; 0x54
 800aa56:	302c      	adds	r0, #44	; 0x2c
 800aa58:	f007 bbb9 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>

0800aa5c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800aa5c:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800aa60:	302c      	adds	r0, #44	; 0x2c
 800aa62:	f007 bbb4 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>

0800aa66 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800aa66:	3058      	adds	r0, #88	; 0x58
 800aa68:	f000 b943 	b.w	800acf2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800aa6c <_ZN8touchgfx11ModalWindowD0Ev>:
 800aa6c:	b510      	push	{r4, lr}
 800aa6e:	21b0      	movs	r1, #176	; 0xb0
 800aa70:	4604      	mov	r4, r0
 800aa72:	f015 ff31 	bl	80208d8 <_ZdlPvj>
 800aa76:	4620      	mov	r0, r4
 800aa78:	bd10      	pop	{r4, pc}
	...

0800aa7c <_ZN8touchgfx8DrawableC1Ev>:
 800aa7c:	4a0a      	ldr	r2, [pc, #40]	; (800aaa8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800aa7e:	6002      	str	r2, [r0, #0]
 800aa80:	2200      	movs	r2, #0
 800aa82:	8082      	strh	r2, [r0, #4]
 800aa84:	80c2      	strh	r2, [r0, #6]
 800aa86:	8102      	strh	r2, [r0, #8]
 800aa88:	8142      	strh	r2, [r0, #10]
 800aa8a:	8182      	strh	r2, [r0, #12]
 800aa8c:	81c2      	strh	r2, [r0, #14]
 800aa8e:	8202      	strh	r2, [r0, #16]
 800aa90:	8242      	strh	r2, [r0, #18]
 800aa92:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800aa96:	61c2      	str	r2, [r0, #28]
 800aa98:	8402      	strh	r2, [r0, #32]
 800aa9a:	8442      	strh	r2, [r0, #34]	; 0x22
 800aa9c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800aaa0:	2201      	movs	r2, #1
 800aaa2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800aaa6:	4770      	bx	lr
 800aaa8:	08024534 	.word	0x08024534

0800aaac <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800aaac:	b570      	push	{r4, r5, r6, lr}
 800aaae:	4604      	mov	r4, r0
 800aab0:	461e      	mov	r6, r3
 800aab2:	f854 3b58 	ldr.w	r3, [r4], #88
 800aab6:	4615      	mov	r5, r2
 800aab8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800aabc:	4798      	blx	r3
 800aabe:	4632      	mov	r2, r6
 800aac0:	4629      	mov	r1, r5
 800aac2:	4620      	mov	r0, r4
 800aac4:	f7f8 f9cc 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 800aac8:	bd70      	pop	{r4, r5, r6, pc}

0800aaca <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800aaca:	b570      	push	{r4, r5, r6, lr}
 800aacc:	6803      	ldr	r3, [r0, #0]
 800aace:	4604      	mov	r4, r0
 800aad0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aad2:	4615      	mov	r5, r2
 800aad4:	4798      	blx	r3
 800aad6:	6823      	ldr	r3, [r4, #0]
 800aad8:	4629      	mov	r1, r5
 800aada:	4620      	mov	r0, r4
 800aadc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aade:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aae2:	4718      	bx	r3

0800aae4 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800aae4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aae6:	880b      	ldrh	r3, [r1, #0]
 800aae8:	a902      	add	r1, sp, #8
 800aaea:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800aaee:	4604      	mov	r4, r0
 800aaf0:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800aaf4:	4628      	mov	r0, r5
 800aaf6:	f003 ff25 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800aafa:	2200      	movs	r2, #0
 800aafc:	4611      	mov	r1, r2
 800aafe:	4628      	mov	r0, r5
 800ab00:	f7f8 f9ae 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 800ab04:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800ab08:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800ab0c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800ab10:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800ab14:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800ab18:	2302      	movs	r3, #2
 800ab1a:	4628      	mov	r0, r5
 800ab1c:	1bd2      	subs	r2, r2, r7
 800ab1e:	1b89      	subs	r1, r1, r6
 800ab20:	fb92 f2f3 	sdiv	r2, r2, r3
 800ab24:	fb91 f1f3 	sdiv	r1, r1, r3
 800ab28:	b212      	sxth	r2, r2
 800ab2a:	b209      	sxth	r1, r1
 800ab2c:	f7f8 f998 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 800ab30:	463a      	mov	r2, r7
 800ab32:	4631      	mov	r1, r6
 800ab34:	4628      	mov	r0, r5
 800ab36:	f7ff ffc8 	bl	800aaca <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ab3a:	6823      	ldr	r3, [r4, #0]
 800ab3c:	4620      	mov	r0, r4
 800ab3e:	695b      	ldr	r3, [r3, #20]
 800ab40:	4798      	blx	r3
 800ab42:	b003      	add	sp, #12
 800ab44:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800ab48 <_ZN8touchgfx11ModalWindowC1Ev>:
 800ab48:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ab4c:	4604      	mov	r4, r0
 800ab4e:	4625      	mov	r5, r4
 800ab50:	f7ff ff94 	bl	800aa7c <_ZN8touchgfx8DrawableC1Ev>
 800ab54:	2600      	movs	r6, #0
 800ab56:	4b36      	ldr	r3, [pc, #216]	; (800ac30 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800ab58:	62a6      	str	r6, [r4, #40]	; 0x28
 800ab5a:	f845 3b2c 	str.w	r3, [r5], #44
 800ab5e:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800ab62:	4652      	mov	r2, sl
 800ab64:	4631      	mov	r1, r6
 800ab66:	4628      	mov	r0, r5
 800ab68:	f016 f8f0 	bl	8020d4c <memset>
 800ab6c:	4628      	mov	r0, r5
 800ab6e:	f7ff ff85 	bl	800aa7c <_ZN8touchgfx8DrawableC1Ev>
 800ab72:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800ab76:	4b2f      	ldr	r3, [pc, #188]	; (800ac34 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800ab78:	62e3      	str	r3, [r4, #44]	; 0x2c
 800ab7a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800ab7e:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800ab82:	6566      	str	r6, [r4, #84]	; 0x54
 800ab84:	4640      	mov	r0, r8
 800ab86:	f7ff ff79 	bl	800aa7c <_ZN8touchgfx8DrawableC1Ev>
 800ab8a:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800ab8e:	4b2a      	ldr	r3, [pc, #168]	; (800ac38 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800ab90:	65a3      	str	r3, [r4, #88]	; 0x58
 800ab92:	4652      	mov	r2, sl
 800ab94:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ab98:	4631      	mov	r1, r6
 800ab9a:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800ab9e:	4638      	mov	r0, r7
 800aba0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800aba4:	f016 f8d2 	bl	8020d4c <memset>
 800aba8:	4638      	mov	r0, r7
 800abaa:	f7ff ff67 	bl	800aa7c <_ZN8touchgfx8DrawableC1Ev>
 800abae:	a902      	add	r1, sp, #8
 800abb0:	4b22      	ldr	r3, [pc, #136]	; (800ac3c <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800abb2:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800abb6:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800abba:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800abbe:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800abc2:	4638      	mov	r0, r7
 800abc4:	f003 febe 	bl	800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800abc8:	4b1d      	ldr	r3, [pc, #116]	; (800ac40 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800abca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800abce:	4b1d      	ldr	r3, [pc, #116]	; (800ac44 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800abd0:	4620      	mov	r0, r4
 800abd2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800abd6:	f7ff ff78 	bl	800aaca <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800abda:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800abde:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800abe2:	4632      	mov	r2, r6
 800abe4:	4631      	mov	r1, r6
 800abe6:	4628      	mov	r0, r5
 800abe8:	f7f8 f93a 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 800abec:	4652      	mov	r2, sl
 800abee:	4649      	mov	r1, r9
 800abf0:	4628      	mov	r0, r5
 800abf2:	f7ff ff6a 	bl	800aaca <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800abf6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800abfa:	6563      	str	r3, [r4, #84]	; 0x54
 800abfc:	2301      	movs	r3, #1
 800abfe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800ac02:	2360      	movs	r3, #96	; 0x60
 800ac04:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800ac08:	4628      	mov	r0, r5
 800ac0a:	f007 fae0 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800ac0e:	4629      	mov	r1, r5
 800ac10:	4620      	mov	r0, r4
 800ac12:	f000 f823 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ac16:	4641      	mov	r1, r8
 800ac18:	4620      	mov	r0, r4
 800ac1a:	f000 f81f 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ac1e:	4640      	mov	r0, r8
 800ac20:	4639      	mov	r1, r7
 800ac22:	f000 f81b 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ac26:	4620      	mov	r0, r4
 800ac28:	b002      	add	sp, #8
 800ac2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ac2e:	bf00      	nop
 800ac30:	0802392c 	.word	0x0802392c
 800ac34:	080242b4 	.word	0x080242b4
 800ac38:	080239e4 	.word	0x080239e4
 800ac3c:	080243f8 	.word	0x080243f8
 800ac40:	200157ea 	.word	0x200157ea
 800ac44:	200157e8 	.word	0x200157e8

0800ac48 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800ac48:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ac4a:	2000      	movs	r0, #0
 800ac4c:	b12b      	cbz	r3, 800ac5a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ac4e:	b920      	cbnz	r0, 800ac5a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ac50:	1a5a      	subs	r2, r3, r1
 800ac52:	4250      	negs	r0, r2
 800ac54:	4150      	adcs	r0, r2
 800ac56:	699b      	ldr	r3, [r3, #24]
 800ac58:	e7f8      	b.n	800ac4c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800ac5a:	4770      	bx	lr

0800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800ac5c:	2300      	movs	r3, #0
 800ac5e:	6148      	str	r0, [r1, #20]
 800ac60:	618b      	str	r3, [r1, #24]
 800ac62:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ac64:	b913      	cbnz	r3, 800ac6c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800ac66:	6281      	str	r1, [r0, #40]	; 0x28
 800ac68:	4770      	bx	lr
 800ac6a:	4613      	mov	r3, r2
 800ac6c:	699a      	ldr	r2, [r3, #24]
 800ac6e:	2a00      	cmp	r2, #0
 800ac70:	d1fb      	bne.n	800ac6a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800ac72:	6199      	str	r1, [r3, #24]
 800ac74:	4770      	bx	lr

0800ac76 <_ZN8touchgfx9Container9removeAllEv>:
 800ac76:	2200      	movs	r2, #0
 800ac78:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ac7a:	b123      	cbz	r3, 800ac86 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800ac7c:	6999      	ldr	r1, [r3, #24]
 800ac7e:	6281      	str	r1, [r0, #40]	; 0x28
 800ac80:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800ac84:	e7f8      	b.n	800ac78 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800ac86:	4770      	bx	lr

0800ac88 <_ZN8touchgfx9Container6unlinkEv>:
 800ac88:	2300      	movs	r3, #0
 800ac8a:	6283      	str	r3, [r0, #40]	; 0x28
 800ac8c:	4770      	bx	lr

0800ac8e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800ac8e:	2200      	movs	r2, #0
 800ac90:	8002      	strh	r2, [r0, #0]
 800ac92:	8042      	strh	r2, [r0, #2]
 800ac94:	8082      	strh	r2, [r0, #4]
 800ac96:	80c2      	strh	r2, [r0, #6]
 800ac98:	4770      	bx	lr

0800ac9a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800ac9a:	b570      	push	{r4, r5, r6, lr}
 800ac9c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac9e:	460d      	mov	r5, r1
 800aca0:	4616      	mov	r6, r2
 800aca2:	b13c      	cbz	r4, 800acb4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800aca4:	6823      	ldr	r3, [r4, #0]
 800aca6:	4620      	mov	r0, r4
 800aca8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800acaa:	4632      	mov	r2, r6
 800acac:	4629      	mov	r1, r5
 800acae:	4798      	blx	r3
 800acb0:	69a4      	ldr	r4, [r4, #24]
 800acb2:	e7f6      	b.n	800aca2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800acb4:	bd70      	pop	{r4, r5, r6, pc}

0800acb6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800acb6:	b538      	push	{r3, r4, r5, lr}
 800acb8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800acba:	460d      	mov	r5, r1
 800acbc:	b134      	cbz	r4, 800accc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800acbe:	682b      	ldr	r3, [r5, #0]
 800acc0:	4621      	mov	r1, r4
 800acc2:	689b      	ldr	r3, [r3, #8]
 800acc4:	4628      	mov	r0, r5
 800acc6:	4798      	blx	r3
 800acc8:	69a4      	ldr	r4, [r4, #24]
 800acca:	e7f7      	b.n	800acbc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800accc:	bd38      	pop	{r3, r4, r5, pc}

0800acce <_ZNK8touchgfx9Container17invalidateContentEv>:
 800acce:	b510      	push	{r4, lr}
 800acd0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800acd2:	b12c      	cbz	r4, 800ace0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800acd4:	6823      	ldr	r3, [r4, #0]
 800acd6:	4620      	mov	r0, r4
 800acd8:	699b      	ldr	r3, [r3, #24]
 800acda:	4798      	blx	r3
 800acdc:	69a4      	ldr	r4, [r4, #24]
 800acde:	e7f8      	b.n	800acd2 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800ace0:	bd10      	pop	{r4, pc}

0800ace2 <_ZN8touchgfx9ContainerD1Ev>:
 800ace2:	4770      	bx	lr

0800ace4 <_ZN8touchgfx9ContainerD0Ev>:
 800ace4:	b510      	push	{r4, lr}
 800ace6:	212c      	movs	r1, #44	; 0x2c
 800ace8:	4604      	mov	r4, r0
 800acea:	f015 fdf5 	bl	80208d8 <_ZdlPvj>
 800acee:	4620      	mov	r0, r4
 800acf0:	bd10      	pop	{r4, pc}

0800acf2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800acf2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800acf4:	b19b      	cbz	r3, 800ad1e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800acf6:	428b      	cmp	r3, r1
 800acf8:	d109      	bne.n	800ad0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800acfa:	699a      	ldr	r2, [r3, #24]
 800acfc:	2100      	movs	r1, #0
 800acfe:	6159      	str	r1, [r3, #20]
 800ad00:	6282      	str	r2, [r0, #40]	; 0x28
 800ad02:	b902      	cbnz	r2, 800ad06 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800ad04:	4770      	bx	lr
 800ad06:	6199      	str	r1, [r3, #24]
 800ad08:	4770      	bx	lr
 800ad0a:	4613      	mov	r3, r2
 800ad0c:	b13a      	cbz	r2, 800ad1e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ad0e:	699a      	ldr	r2, [r3, #24]
 800ad10:	428a      	cmp	r2, r1
 800ad12:	d1fa      	bne.n	800ad0a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800ad14:	698a      	ldr	r2, [r1, #24]
 800ad16:	619a      	str	r2, [r3, #24]
 800ad18:	2300      	movs	r3, #0
 800ad1a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800ad1e:	4770      	bx	lr

0800ad20 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800ad20:	b410      	push	{r4}
 800ad22:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ad24:	4604      	mov	r4, r0
 800ad26:	b92b      	cbnz	r3, 800ad34 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800ad28:	6803      	ldr	r3, [r0, #0]
 800ad2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ad2e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ad30:	4611      	mov	r1, r2
 800ad32:	4718      	bx	r3
 800ad34:	b941      	cbnz	r1, 800ad48 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800ad36:	6193      	str	r3, [r2, #24]
 800ad38:	6282      	str	r2, [r0, #40]	; 0x28
 800ad3a:	6154      	str	r4, [r2, #20]
 800ad3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ad40:	4770      	bx	lr
 800ad42:	4603      	mov	r3, r0
 800ad44:	2800      	cmp	r0, #0
 800ad46:	d0f9      	beq.n	800ad3c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800ad48:	4299      	cmp	r1, r3
 800ad4a:	6998      	ldr	r0, [r3, #24]
 800ad4c:	d1f9      	bne.n	800ad42 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ad4e:	6190      	str	r0, [r2, #24]
 800ad50:	618a      	str	r2, [r1, #24]
 800ad52:	e7f2      	b.n	800ad3a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ad54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ad54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad58:	461f      	mov	r7, r3
 800ad5a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800ad5e:	460d      	mov	r5, r1
 800ad60:	4616      	mov	r6, r2
 800ad62:	b103      	cbz	r3, 800ad66 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ad64:	6038      	str	r0, [r7, #0]
 800ad66:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ad68:	b314      	cbz	r4, 800adb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ad6a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ad6e:	b1eb      	cbz	r3, 800adac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ad70:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ad74:	428d      	cmp	r5, r1
 800ad76:	db19      	blt.n	800adac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ad78:	8923      	ldrh	r3, [r4, #8]
 800ad7a:	b289      	uxth	r1, r1
 800ad7c:	440b      	add	r3, r1
 800ad7e:	b21b      	sxth	r3, r3
 800ad80:	429d      	cmp	r5, r3
 800ad82:	da13      	bge.n	800adac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ad84:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ad88:	4296      	cmp	r6, r2
 800ad8a:	db0f      	blt.n	800adac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ad8c:	8963      	ldrh	r3, [r4, #10]
 800ad8e:	b292      	uxth	r2, r2
 800ad90:	4413      	add	r3, r2
 800ad92:	b21b      	sxth	r3, r3
 800ad94:	429e      	cmp	r6, r3
 800ad96:	da09      	bge.n	800adac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ad98:	6823      	ldr	r3, [r4, #0]
 800ad9a:	1ab2      	subs	r2, r6, r2
 800ad9c:	1a69      	subs	r1, r5, r1
 800ad9e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800ada2:	b212      	sxth	r2, r2
 800ada4:	463b      	mov	r3, r7
 800ada6:	b209      	sxth	r1, r1
 800ada8:	4620      	mov	r0, r4
 800adaa:	47c0      	blx	r8
 800adac:	69a4      	ldr	r4, [r4, #24]
 800adae:	e7db      	b.n	800ad68 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800adb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800adb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800adb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adb8:	4c6e      	ldr	r4, [pc, #440]	; (800af74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800adba:	b0a1      	sub	sp, #132	; 0x84
 800adbc:	6824      	ldr	r4, [r4, #0]
 800adbe:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800adc0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800adc4:	9303      	str	r3, [sp, #12]
 800adc6:	2400      	movs	r4, #0
 800adc8:	802c      	strh	r4, [r5, #0]
 800adca:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800adcc:	802c      	strh	r4, [r5, #0]
 800adce:	601c      	str	r4, [r3, #0]
 800add0:	4606      	mov	r6, r0
 800add2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800add6:	f7ff ffbd 	bl	800ad54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800adda:	f1b9 0f03 	cmp.w	r9, #3
 800adde:	f340 80c2 	ble.w	800af66 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ade2:	4631      	mov	r1, r6
 800ade4:	a80c      	add	r0, sp, #48	; 0x30
 800ade6:	f007 fa8d 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800adea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800adee:	9306      	str	r3, [sp, #24]
 800adf0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800adf4:	9307      	str	r3, [sp, #28]
 800adf6:	9b03      	ldr	r3, [sp, #12]
 800adf8:	f8d3 a000 	ldr.w	sl, [r3]
 800adfc:	f1ba 0f00 	cmp.w	sl, #0
 800ae00:	f000 80b4 	beq.w	800af6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800ae04:	4651      	mov	r1, sl
 800ae06:	a810      	add	r0, sp, #64	; 0x40
 800ae08:	f007 fa7c 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae0c:	9b01      	ldr	r3, [sp, #4]
 800ae0e:	9a06      	ldr	r2, [sp, #24]
 800ae10:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800ae14:	189d      	adds	r5, r3, r2
 800ae16:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800ae1a:	9a07      	ldr	r2, [sp, #28]
 800ae1c:	2002      	movs	r0, #2
 800ae1e:	fb91 f1f0 	sdiv	r1, r1, r0
 800ae22:	4419      	add	r1, r3
 800ae24:	1a6d      	subs	r5, r5, r1
 800ae26:	9b02      	ldr	r3, [sp, #8]
 800ae28:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ae2c:	4413      	add	r3, r2
 800ae2e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ae32:	fb92 f2f0 	sdiv	r2, r2, r0
 800ae36:	440a      	add	r2, r1
 800ae38:	1a9b      	subs	r3, r3, r2
 800ae3a:	435b      	muls	r3, r3
 800ae3c:	fb05 3505 	mla	r5, r5, r5, r3
 800ae40:	4f4d      	ldr	r7, [pc, #308]	; (800af78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ae42:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ae44:	ac10      	add	r4, sp, #64	; 0x40
 800ae46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ae48:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ae4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ae4c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ae4e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ae50:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ae54:	f1b9 0f0c 	cmp.w	r9, #12
 800ae58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ae5c:	f04f 0303 	mov.w	r3, #3
 800ae60:	bfc8      	it	gt
 800ae62:	4698      	movgt	r8, r3
 800ae64:	f8cd 9000 	str.w	r9, [sp]
 800ae68:	f04f 0400 	mov.w	r4, #0
 800ae6c:	bfdc      	itt	le
 800ae6e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ae72:	fb92 f8f3 	sdivle	r8, r2, r3
 800ae76:	1c63      	adds	r3, r4, #1
 800ae78:	aa10      	add	r2, sp, #64	; 0x40
 800ae7a:	f004 0401 	and.w	r4, r4, #1
 800ae7e:	9308      	str	r3, [sp, #32]
 800ae80:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ae84:	9b00      	ldr	r3, [sp, #0]
 800ae86:	fb93 f3f8 	sdiv	r3, r3, r8
 800ae8a:	b29b      	uxth	r3, r3
 800ae8c:	3404      	adds	r4, #4
 800ae8e:	f04f 0b00 	mov.w	fp, #0
 800ae92:	9304      	str	r3, [sp, #16]
 800ae94:	9a04      	ldr	r2, [sp, #16]
 800ae96:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ae9a:	fb13 f302 	smulbb	r3, r3, r2
 800ae9e:	9a01      	ldr	r2, [sp, #4]
 800aea0:	b29b      	uxth	r3, r3
 800aea2:	1899      	adds	r1, r3, r2
 800aea4:	9305      	str	r3, [sp, #20]
 800aea6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800aeaa:	b209      	sxth	r1, r1
 800aeac:	4299      	cmp	r1, r3
 800aeae:	db4d      	blt.n	800af4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aeb0:	8932      	ldrh	r2, [r6, #8]
 800aeb2:	4413      	add	r3, r2
 800aeb4:	b21b      	sxth	r3, r3
 800aeb6:	4299      	cmp	r1, r3
 800aeb8:	da48      	bge.n	800af4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aeba:	9b04      	ldr	r3, [sp, #16]
 800aebc:	6827      	ldr	r7, [r4, #0]
 800aebe:	fb17 f703 	smulbb	r7, r7, r3
 800aec2:	9b02      	ldr	r3, [sp, #8]
 800aec4:	b2bf      	uxth	r7, r7
 800aec6:	18fa      	adds	r2, r7, r3
 800aec8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800aecc:	b212      	sxth	r2, r2
 800aece:	429a      	cmp	r2, r3
 800aed0:	db3c      	blt.n	800af4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aed2:	8970      	ldrh	r0, [r6, #10]
 800aed4:	4403      	add	r3, r0
 800aed6:	b21b      	sxth	r3, r3
 800aed8:	429a      	cmp	r2, r3
 800aeda:	da37      	bge.n	800af4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aedc:	2300      	movs	r3, #0
 800aede:	930b      	str	r3, [sp, #44]	; 0x2c
 800aee0:	4630      	mov	r0, r6
 800aee2:	ab0b      	add	r3, sp, #44	; 0x2c
 800aee4:	f7ff ff36 	bl	800ad54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aee8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aeea:	b37a      	cbz	r2, 800af4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aeec:	4552      	cmp	r2, sl
 800aeee:	d02d      	beq.n	800af4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aef0:	4611      	mov	r1, r2
 800aef2:	a80e      	add	r0, sp, #56	; 0x38
 800aef4:	9209      	str	r2, [sp, #36]	; 0x24
 800aef6:	f007 fa05 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aefa:	9a06      	ldr	r2, [sp, #24]
 800aefc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800af00:	9b01      	ldr	r3, [sp, #4]
 800af02:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800af06:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800af0a:	4413      	add	r3, r2
 800af0c:	f04f 0e02 	mov.w	lr, #2
 800af10:	fb91 f1fe 	sdiv	r1, r1, lr
 800af14:	4401      	add	r1, r0
 800af16:	1a58      	subs	r0, r3, r1
 800af18:	9a07      	ldr	r2, [sp, #28]
 800af1a:	9b02      	ldr	r3, [sp, #8]
 800af1c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800af20:	fb9c fcfe 	sdiv	ip, ip, lr
 800af24:	4413      	add	r3, r2
 800af26:	448c      	add	ip, r1
 800af28:	eba3 030c 	sub.w	r3, r3, ip
 800af2c:	435b      	muls	r3, r3
 800af2e:	fb00 3300 	mla	r3, r0, r0, r3
 800af32:	42ab      	cmp	r3, r5
 800af34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800af36:	d208      	bcs.n	800af4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800af38:	9803      	ldr	r0, [sp, #12]
 800af3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800af3c:	6001      	str	r1, [r0, #0]
 800af3e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800af40:	9805      	ldr	r0, [sp, #20]
 800af42:	8008      	strh	r0, [r1, #0]
 800af44:	992b      	ldr	r1, [sp, #172]	; 0xac
 800af46:	461d      	mov	r5, r3
 800af48:	800f      	strh	r7, [r1, #0]
 800af4a:	4692      	mov	sl, r2
 800af4c:	f10b 0b01 	add.w	fp, fp, #1
 800af50:	f1bb 0f04 	cmp.w	fp, #4
 800af54:	f104 0408 	add.w	r4, r4, #8
 800af58:	d19c      	bne.n	800ae94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800af5a:	9b00      	ldr	r3, [sp, #0]
 800af5c:	9c08      	ldr	r4, [sp, #32]
 800af5e:	444b      	add	r3, r9
 800af60:	4544      	cmp	r4, r8
 800af62:	9300      	str	r3, [sp, #0]
 800af64:	d187      	bne.n	800ae76 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800af66:	b021      	add	sp, #132	; 0x84
 800af68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af6c:	f04f 35ff 	mov.w	r5, #4294967295
 800af70:	e766      	b.n	800ae40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800af72:	bf00      	nop
 800af74:	200157f4 	.word	0x200157f4
 800af78:	08021c90 	.word	0x08021c90

0800af7c <_ZN8touchgfx4RectaNERKS0_>:
 800af7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af80:	f9b1 7000 	ldrsh.w	r7, [r1]
 800af84:	888c      	ldrh	r4, [r1, #4]
 800af86:	f9b0 9000 	ldrsh.w	r9, [r0]
 800af8a:	443c      	add	r4, r7
 800af8c:	b2a4      	uxth	r4, r4
 800af8e:	fa0f f884 	sxth.w	r8, r4
 800af92:	45c1      	cmp	r9, r8
 800af94:	da2f      	bge.n	800aff6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800af96:	8882      	ldrh	r2, [r0, #4]
 800af98:	444a      	add	r2, r9
 800af9a:	b292      	uxth	r2, r2
 800af9c:	fa0f fe82 	sxth.w	lr, r2
 800afa0:	4577      	cmp	r7, lr
 800afa2:	da28      	bge.n	800aff6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800afa4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800afa8:	88cb      	ldrh	r3, [r1, #6]
 800afaa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800afae:	442b      	add	r3, r5
 800afb0:	b21b      	sxth	r3, r3
 800afb2:	429e      	cmp	r6, r3
 800afb4:	da1f      	bge.n	800aff6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800afb6:	88c3      	ldrh	r3, [r0, #6]
 800afb8:	4433      	add	r3, r6
 800afba:	b29b      	uxth	r3, r3
 800afbc:	fa0f fc83 	sxth.w	ip, r3
 800afc0:	4565      	cmp	r5, ip
 800afc2:	da18      	bge.n	800aff6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800afc4:	454f      	cmp	r7, r9
 800afc6:	bfb8      	it	lt
 800afc8:	464f      	movlt	r7, r9
 800afca:	42b5      	cmp	r5, r6
 800afcc:	bfb8      	it	lt
 800afce:	4635      	movlt	r5, r6
 800afd0:	45f0      	cmp	r8, lr
 800afd2:	bfd8      	it	le
 800afd4:	4622      	movle	r2, r4
 800afd6:	1bd2      	subs	r2, r2, r7
 800afd8:	8082      	strh	r2, [r0, #4]
 800afda:	884a      	ldrh	r2, [r1, #2]
 800afdc:	88c9      	ldrh	r1, [r1, #6]
 800afde:	8007      	strh	r7, [r0, #0]
 800afe0:	440a      	add	r2, r1
 800afe2:	b292      	uxth	r2, r2
 800afe4:	b211      	sxth	r1, r2
 800afe6:	458c      	cmp	ip, r1
 800afe8:	bfa8      	it	ge
 800afea:	4613      	movge	r3, r2
 800afec:	1b5b      	subs	r3, r3, r5
 800afee:	80c3      	strh	r3, [r0, #6]
 800aff0:	8045      	strh	r5, [r0, #2]
 800aff2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aff6:	2300      	movs	r3, #0
 800aff8:	8003      	strh	r3, [r0, #0]
 800affa:	8043      	strh	r3, [r0, #2]
 800affc:	8083      	strh	r3, [r0, #4]
 800affe:	80c3      	strh	r3, [r0, #6]
 800b000:	e7f7      	b.n	800aff2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800b002 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800b002:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b006:	2b00      	cmp	r3, #0
 800b008:	dd06      	ble.n	800b018 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800b00a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800b00e:	2800      	cmp	r0, #0
 800b010:	bfcc      	ite	gt
 800b012:	2000      	movgt	r0, #0
 800b014:	2001      	movle	r0, #1
 800b016:	4770      	bx	lr
 800b018:	2001      	movs	r0, #1
 800b01a:	4770      	bx	lr

0800b01c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800b01c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b020:	2300      	movs	r3, #0
 800b022:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800b024:	8003      	strh	r3, [r0, #0]
 800b026:	4604      	mov	r4, r0
 800b028:	8043      	strh	r3, [r0, #2]
 800b02a:	8083      	strh	r3, [r0, #4]
 800b02c:	80c3      	strh	r3, [r0, #6]
 800b02e:	2d00      	cmp	r5, #0
 800b030:	d040      	beq.n	800b0b4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800b032:	1d28      	adds	r0, r5, #4
 800b034:	f7ff ffe5 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b038:	b988      	cbnz	r0, 800b05e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b03a:	4620      	mov	r0, r4
 800b03c:	f7ff ffe1 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b040:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b044:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b048:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800b04c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800b050:	b138      	cbz	r0, 800b062 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800b052:	8022      	strh	r2, [r4, #0]
 800b054:	8063      	strh	r3, [r4, #2]
 800b056:	f8a4 e004 	strh.w	lr, [r4, #4]
 800b05a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800b05e:	69ad      	ldr	r5, [r5, #24]
 800b060:	e7e5      	b.n	800b02e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800b062:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b066:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b06a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800b06e:	4290      	cmp	r0, r2
 800b070:	4607      	mov	r7, r0
 800b072:	bfa8      	it	ge
 800b074:	4617      	movge	r7, r2
 800b076:	4472      	add	r2, lr
 800b078:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800b07c:	8027      	strh	r7, [r4, #0]
 800b07e:	4299      	cmp	r1, r3
 800b080:	460e      	mov	r6, r1
 800b082:	4440      	add	r0, r8
 800b084:	bfa8      	it	ge
 800b086:	461e      	movge	r6, r3
 800b088:	4471      	add	r1, lr
 800b08a:	4463      	add	r3, ip
 800b08c:	b200      	sxth	r0, r0
 800b08e:	b212      	sxth	r2, r2
 800b090:	b209      	sxth	r1, r1
 800b092:	b21b      	sxth	r3, r3
 800b094:	4290      	cmp	r0, r2
 800b096:	bfac      	ite	ge
 800b098:	ebc7 0200 	rsbge	r2, r7, r0
 800b09c:	ebc7 0202 	rsblt	r2, r7, r2
 800b0a0:	4299      	cmp	r1, r3
 800b0a2:	bfac      	ite	ge
 800b0a4:	ebc6 0301 	rsbge	r3, r6, r1
 800b0a8:	ebc6 0303 	rsblt	r3, r6, r3
 800b0ac:	8066      	strh	r6, [r4, #2]
 800b0ae:	80a2      	strh	r2, [r4, #4]
 800b0b0:	80e3      	strh	r3, [r4, #6]
 800b0b2:	e7d4      	b.n	800b05e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b0b4:	4620      	mov	r0, r4
 800b0b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b0ba <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b0ba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b0be:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b0c2:	b383      	cbz	r3, 800b126 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b0c4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b0c6:	b374      	cbz	r4, 800b126 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b0c8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b0cc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b0d0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b0d4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b0d8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b0dc:	b303      	cbz	r3, 800b120 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b0de:	4668      	mov	r0, sp
 800b0e0:	1d21      	adds	r1, r4, #4
 800b0e2:	f8ad 5000 	strh.w	r5, [sp]
 800b0e6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b0ea:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b0ee:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b0f2:	f7ff ff43 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800b0f6:	4668      	mov	r0, sp
 800b0f8:	f7ff ff83 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b0fc:	b980      	cbnz	r0, 800b120 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b0fe:	f8bd 3000 	ldrh.w	r3, [sp]
 800b102:	88a2      	ldrh	r2, [r4, #4]
 800b104:	1a9b      	subs	r3, r3, r2
 800b106:	f8ad 3000 	strh.w	r3, [sp]
 800b10a:	88e2      	ldrh	r2, [r4, #6]
 800b10c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b110:	1a9b      	subs	r3, r3, r2
 800b112:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b116:	6823      	ldr	r3, [r4, #0]
 800b118:	4669      	mov	r1, sp
 800b11a:	689b      	ldr	r3, [r3, #8]
 800b11c:	4620      	mov	r0, r4
 800b11e:	4798      	blx	r3
 800b120:	69a4      	ldr	r4, [r4, #24]
 800b122:	2c00      	cmp	r4, #0
 800b124:	d1d8      	bne.n	800b0d8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b126:	b002      	add	sp, #8
 800b128:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b12c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b12c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b12e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b132:	460d      	mov	r5, r1
 800b134:	4616      	mov	r6, r2
 800b136:	b323      	cbz	r3, 800b182 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b138:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b13a:	b314      	cbz	r4, 800b182 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b13c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b140:	b1eb      	cbz	r3, 800b17e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b142:	6828      	ldr	r0, [r5, #0]
 800b144:	6869      	ldr	r1, [r5, #4]
 800b146:	466b      	mov	r3, sp
 800b148:	c303      	stmia	r3!, {r0, r1}
 800b14a:	4668      	mov	r0, sp
 800b14c:	1d21      	adds	r1, r4, #4
 800b14e:	f7ff ff15 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800b152:	4668      	mov	r0, sp
 800b154:	f7ff ff55 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b158:	b988      	cbnz	r0, 800b17e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b15a:	f8bd 3000 	ldrh.w	r3, [sp]
 800b15e:	88a2      	ldrh	r2, [r4, #4]
 800b160:	1a9b      	subs	r3, r3, r2
 800b162:	f8ad 3000 	strh.w	r3, [sp]
 800b166:	88e2      	ldrh	r2, [r4, #6]
 800b168:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b16c:	1a9b      	subs	r3, r3, r2
 800b16e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b172:	6823      	ldr	r3, [r4, #0]
 800b174:	4632      	mov	r2, r6
 800b176:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b178:	4669      	mov	r1, sp
 800b17a:	4620      	mov	r0, r4
 800b17c:	4798      	blx	r3
 800b17e:	69a4      	ldr	r4, [r4, #24]
 800b180:	e7db      	b.n	800b13a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b182:	b002      	add	sp, #8
 800b184:	bd70      	pop	{r4, r5, r6, pc}

0800b186 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b186:	b513      	push	{r0, r1, r4, lr}
 800b188:	6803      	ldr	r3, [r0, #0]
 800b18a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800b18e:	2300      	movs	r3, #0
 800b190:	e9cd 3300 	strd	r3, r3, [sp]
 800b194:	466b      	mov	r3, sp
 800b196:	47a0      	blx	r4
 800b198:	b002      	add	sp, #8
 800b19a:	bd10      	pop	{r4, pc}

0800b19c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b19c:	2301      	movs	r3, #1
 800b19e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b1a2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b1a6:	4770      	bx	lr

0800b1a8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b1a8:	2301      	movs	r3, #1
 800b1aa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b1ae:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b1b2:	4770      	bx	lr

0800b1b4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b1b4:	6843      	ldr	r3, [r0, #4]
 800b1b6:	2201      	movs	r2, #1
 800b1b8:	725a      	strb	r2, [r3, #9]
 800b1ba:	6840      	ldr	r0, [r0, #4]
 800b1bc:	6803      	ldr	r3, [r0, #0]
 800b1be:	691b      	ldr	r3, [r3, #16]
 800b1c0:	4718      	bx	r3

0800b1c2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800b1c2:	6840      	ldr	r0, [r0, #4]
 800b1c4:	6803      	ldr	r3, [r0, #0]
 800b1c6:	689b      	ldr	r3, [r3, #8]
 800b1c8:	4718      	bx	r3

0800b1ca <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b1ca:	b530      	push	{r4, r5, lr}
 800b1cc:	b08b      	sub	sp, #44	; 0x2c
 800b1ce:	6804      	ldr	r4, [r0, #0]
 800b1d0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800b1d4:	9509      	str	r5, [sp, #36]	; 0x24
 800b1d6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800b1da:	9508      	str	r5, [sp, #32]
 800b1dc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800b1e0:	9507      	str	r5, [sp, #28]
 800b1e2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800b1e6:	9506      	str	r5, [sp, #24]
 800b1e8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800b1ec:	9505      	str	r5, [sp, #20]
 800b1ee:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800b1f2:	9504      	str	r5, [sp, #16]
 800b1f4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800b1f8:	9503      	str	r5, [sp, #12]
 800b1fa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b1fe:	9502      	str	r5, [sp, #8]
 800b200:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800b204:	e9cd 3500 	strd	r3, r5, [sp]
 800b208:	4613      	mov	r3, r2
 800b20a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800b20c:	2200      	movs	r2, #0
 800b20e:	47a0      	blx	r4
 800b210:	b00b      	add	sp, #44	; 0x2c
 800b212:	bd30      	pop	{r4, r5, pc}

0800b214 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b214:	4b04      	ldr	r3, [pc, #16]	; (800b228 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b216:	781b      	ldrb	r3, [r3, #0]
 800b218:	b123      	cbz	r3, 800b224 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b21a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b21e:	f080 0001 	eor.w	r0, r0, #1
 800b222:	4770      	bx	lr
 800b224:	2001      	movs	r0, #1
 800b226:	4770      	bx	lr
 800b228:	200157f2 	.word	0x200157f2

0800b22c <_ZN8touchgfx3HAL8endFrameEv>:
 800b22c:	b510      	push	{r4, lr}
 800b22e:	4604      	mov	r4, r0
 800b230:	6840      	ldr	r0, [r0, #4]
 800b232:	6803      	ldr	r3, [r0, #0]
 800b234:	689b      	ldr	r3, [r3, #8]
 800b236:	4798      	blx	r3
 800b238:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b23c:	b113      	cbz	r3, 800b244 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b23e:	2301      	movs	r3, #1
 800b240:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b244:	bd10      	pop	{r4, pc}

0800b246 <_ZN8touchgfx3HAL10initializeEv>:
 800b246:	b510      	push	{r4, lr}
 800b248:	4604      	mov	r4, r0
 800b24a:	f7f5 fb4d 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b24e:	6860      	ldr	r0, [r4, #4]
 800b250:	6803      	ldr	r3, [r0, #0]
 800b252:	68db      	ldr	r3, [r3, #12]
 800b254:	4798      	blx	r3
 800b256:	68e0      	ldr	r0, [r4, #12]
 800b258:	6803      	ldr	r3, [r0, #0]
 800b25a:	689b      	ldr	r3, [r3, #8]
 800b25c:	4798      	blx	r3
 800b25e:	6823      	ldr	r3, [r4, #0]
 800b260:	4620      	mov	r0, r4
 800b262:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b264:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b268:	4718      	bx	r3
	...

0800b26c <_ZN8touchgfx3HAL4tickEv>:
 800b26c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b26e:	6803      	ldr	r3, [r0, #0]
 800b270:	4d5b      	ldr	r5, [pc, #364]	; (800b3e0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b272:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b276:	4604      	mov	r4, r0
 800b278:	4798      	blx	r3
 800b27a:	2800      	cmp	r0, #0
 800b27c:	f000 8095 	beq.w	800b3aa <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b280:	2001      	movs	r0, #1
 800b282:	f7f5 fa5d 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b286:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b28a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b28e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b292:	2600      	movs	r6, #0
 800b294:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b298:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b29c:	b133      	cbz	r3, 800b2ac <_ZN8touchgfx3HAL4tickEv+0x40>
 800b29e:	6823      	ldr	r3, [r4, #0]
 800b2a0:	4620      	mov	r0, r4
 800b2a2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b2a6:	4798      	blx	r3
 800b2a8:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b2ac:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b2b0:	6862      	ldr	r2, [r4, #4]
 800b2b2:	f083 0301 	eor.w	r3, r3, #1
 800b2b6:	7253      	strb	r3, [r2, #9]
 800b2b8:	2601      	movs	r6, #1
 800b2ba:	702e      	strb	r6, [r5, #0]
 800b2bc:	f005 fff0 	bl	80112a0 <_ZN8touchgfx11Application11getInstanceEv>
 800b2c0:	6803      	ldr	r3, [r0, #0]
 800b2c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b2c4:	4798      	blx	r3
 800b2c6:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b2ca:	b90b      	cbnz	r3, 800b2d0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b2cc:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b2d0:	f005 ffe6 	bl	80112a0 <_ZN8touchgfx11Application11getInstanceEv>
 800b2d4:	6803      	ldr	r3, [r0, #0]
 800b2d6:	695b      	ldr	r3, [r3, #20]
 800b2d8:	4798      	blx	r3
 800b2da:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b2dc:	6803      	ldr	r3, [r0, #0]
 800b2de:	691b      	ldr	r3, [r3, #16]
 800b2e0:	4798      	blx	r3
 800b2e2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b2e6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b2ea:	3b01      	subs	r3, #1
 800b2ec:	b2db      	uxtb	r3, r3
 800b2ee:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b2f2:	b10a      	cbz	r2, 800b2f8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b2f4:	2b00      	cmp	r3, #0
 800b2f6:	d1eb      	bne.n	800b2d0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b2f8:	4a3a      	ldr	r2, [pc, #232]	; (800b3e4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b2fa:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b2fe:	7813      	ldrb	r3, [r2, #0]
 800b300:	3301      	adds	r3, #1
 800b302:	b25b      	sxtb	r3, r3
 800b304:	4299      	cmp	r1, r3
 800b306:	7013      	strb	r3, [r2, #0]
 800b308:	dc10      	bgt.n	800b32c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b30a:	68e0      	ldr	r0, [r4, #12]
 800b30c:	2300      	movs	r3, #0
 800b30e:	7013      	strb	r3, [r2, #0]
 800b310:	6803      	ldr	r3, [r0, #0]
 800b312:	aa03      	add	r2, sp, #12
 800b314:	68db      	ldr	r3, [r3, #12]
 800b316:	a902      	add	r1, sp, #8
 800b318:	4798      	blx	r3
 800b31a:	6823      	ldr	r3, [r4, #0]
 800b31c:	2800      	cmp	r0, #0
 800b31e:	d050      	beq.n	800b3c2 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b320:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b324:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b328:	4620      	mov	r0, r4
 800b32a:	4798      	blx	r3
 800b32c:	6960      	ldr	r0, [r4, #20]
 800b32e:	2300      	movs	r3, #0
 800b330:	f88d 3007 	strb.w	r3, [sp, #7]
 800b334:	b158      	cbz	r0, 800b34e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b336:	6803      	ldr	r3, [r0, #0]
 800b338:	f10d 0107 	add.w	r1, sp, #7
 800b33c:	68db      	ldr	r3, [r3, #12]
 800b33e:	4798      	blx	r3
 800b340:	b128      	cbz	r0, 800b34e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b342:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b344:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b348:	6803      	ldr	r3, [r0, #0]
 800b34a:	68db      	ldr	r3, [r3, #12]
 800b34c:	4798      	blx	r3
 800b34e:	f104 001c 	add.w	r0, r4, #28
 800b352:	f014 fef9 	bl	8020148 <_ZN8touchgfx8Gestures4tickEv>
 800b356:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b35a:	b30b      	cbz	r3, 800b3a0 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b35c:	6920      	ldr	r0, [r4, #16]
 800b35e:	6803      	ldr	r3, [r0, #0]
 800b360:	691b      	ldr	r3, [r3, #16]
 800b362:	4798      	blx	r3
 800b364:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b366:	4606      	mov	r6, r0
 800b368:	b903      	cbnz	r3, 800b36c <_ZN8touchgfx3HAL4tickEv+0x100>
 800b36a:	6720      	str	r0, [r4, #112]	; 0x70
 800b36c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b36e:	4a1e      	ldr	r2, [pc, #120]	; (800b3e8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b370:	1af3      	subs	r3, r6, r3
 800b372:	4293      	cmp	r3, r2
 800b374:	d914      	bls.n	800b3a0 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b376:	6920      	ldr	r0, [r4, #16]
 800b378:	6803      	ldr	r3, [r0, #0]
 800b37a:	699b      	ldr	r3, [r3, #24]
 800b37c:	4798      	blx	r3
 800b37e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b380:	2264      	movs	r2, #100	; 0x64
 800b382:	1af3      	subs	r3, r6, r3
 800b384:	fbb3 f3f2 	udiv	r3, r3, r2
 800b388:	fbb0 f0f3 	udiv	r0, r0, r3
 800b38c:	2800      	cmp	r0, #0
 800b38e:	dc1d      	bgt.n	800b3cc <_ZN8touchgfx3HAL4tickEv+0x160>
 800b390:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b394:	6920      	ldr	r0, [r4, #16]
 800b396:	6803      	ldr	r3, [r0, #0]
 800b398:	2100      	movs	r1, #0
 800b39a:	69db      	ldr	r3, [r3, #28]
 800b39c:	4798      	blx	r3
 800b39e:	6726      	str	r6, [r4, #112]	; 0x70
 800b3a0:	f005 ff7e 	bl	80112a0 <_ZN8touchgfx11Application11getInstanceEv>
 800b3a4:	6803      	ldr	r3, [r0, #0]
 800b3a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b3a8:	4798      	blx	r3
 800b3aa:	6823      	ldr	r3, [r4, #0]
 800b3ac:	4620      	mov	r0, r4
 800b3ae:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b3b2:	4798      	blx	r3
 800b3b4:	2001      	movs	r0, #1
 800b3b6:	f7f5 f9c4 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b3ba:	2300      	movs	r3, #0
 800b3bc:	702b      	strb	r3, [r5, #0]
 800b3be:	b004      	add	sp, #16
 800b3c0:	bd70      	pop	{r4, r5, r6, pc}
 800b3c2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b3c6:	4620      	mov	r0, r4
 800b3c8:	4798      	blx	r3
 800b3ca:	e7af      	b.n	800b32c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b3cc:	2863      	cmp	r0, #99	; 0x63
 800b3ce:	bfcb      	itete	gt
 800b3d0:	2300      	movgt	r3, #0
 800b3d2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b3d6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b3da:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b3de:	e7d9      	b.n	800b394 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b3e0:	200157f8 	.word	0x200157f8
 800b3e4:	200157f9 	.word	0x200157f9
 800b3e8:	05f5e100 	.word	0x05f5e100

0800b3ec <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b3ec:	f7f5 baac 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b3f0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b3f0:	6581      	str	r1, [r0, #88]	; 0x58
 800b3f2:	301c      	adds	r0, #28
 800b3f4:	f014 bea6 	b.w	8020144 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b3f8 <_ZN8touchgfx3HAL5touchEll>:
 800b3f8:	b530      	push	{r4, r5, lr}
 800b3fa:	b087      	sub	sp, #28
 800b3fc:	4604      	mov	r4, r0
 800b3fe:	a804      	add	r0, sp, #16
 800b400:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b404:	f005 fd0e 	bl	8010e24 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b408:	9b04      	ldr	r3, [sp, #16]
 800b40a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b40e:	a906      	add	r1, sp, #24
 800b410:	9b05      	ldr	r3, [sp, #20]
 800b412:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b416:	a803      	add	r0, sp, #12
 800b418:	f005 fd56 	bl	8010ec8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b41c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b420:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b424:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b428:	f104 001c 	add.w	r0, r4, #28
 800b42c:	b189      	cbz	r1, 800b452 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b42e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b432:	9300      	str	r3, [sp, #0]
 800b434:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b438:	4613      	mov	r3, r2
 800b43a:	462a      	mov	r2, r5
 800b43c:	f014 fe92 	bl	8020164 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b440:	b128      	cbz	r0, 800b44e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b442:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b446:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b448:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b44c:	6623      	str	r3, [r4, #96]	; 0x60
 800b44e:	b007      	add	sp, #28
 800b450:	bd30      	pop	{r4, r5, pc}
 800b452:	f014 fec7 	bl	80201e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b456:	2301      	movs	r3, #1
 800b458:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b45c:	e7f1      	b.n	800b442 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b45e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b45e:	b510      	push	{r4, lr}
 800b460:	2b00      	cmp	r3, #0
 800b462:	d046      	beq.n	800b4f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b464:	ea81 0002 	eor.w	r0, r1, r2
 800b468:	07c4      	lsls	r4, r0, #31
 800b46a:	d508      	bpl.n	800b47e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b46c:	440b      	add	r3, r1
 800b46e:	3a01      	subs	r2, #1
 800b470:	428b      	cmp	r3, r1
 800b472:	d93e      	bls.n	800b4f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b474:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b478:	f801 0b01 	strb.w	r0, [r1], #1
 800b47c:	e7f8      	b.n	800b470 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b47e:	07d0      	lsls	r0, r2, #31
 800b480:	bf42      	ittt	mi
 800b482:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b486:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b48a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b48e:	2b01      	cmp	r3, #1
 800b490:	d911      	bls.n	800b4b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b492:	ea81 0402 	eor.w	r4, r1, r2
 800b496:	07a4      	lsls	r4, r4, #30
 800b498:	4610      	mov	r0, r2
 800b49a:	d022      	beq.n	800b4e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b49c:	f023 0401 	bic.w	r4, r3, #1
 800b4a0:	440c      	add	r4, r1
 800b4a2:	428c      	cmp	r4, r1
 800b4a4:	4602      	mov	r2, r0
 800b4a6:	d904      	bls.n	800b4b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b4a8:	8812      	ldrh	r2, [r2, #0]
 800b4aa:	f821 2b02 	strh.w	r2, [r1], #2
 800b4ae:	3002      	adds	r0, #2
 800b4b0:	e7f7      	b.n	800b4a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b4b2:	f003 0301 	and.w	r3, r3, #1
 800b4b6:	f023 0003 	bic.w	r0, r3, #3
 800b4ba:	4408      	add	r0, r1
 800b4bc:	4288      	cmp	r0, r1
 800b4be:	4614      	mov	r4, r2
 800b4c0:	d904      	bls.n	800b4cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b4c2:	6824      	ldr	r4, [r4, #0]
 800b4c4:	f841 4b04 	str.w	r4, [r1], #4
 800b4c8:	3204      	adds	r2, #4
 800b4ca:	e7f7      	b.n	800b4bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b4cc:	f003 0303 	and.w	r3, r3, #3
 800b4d0:	440b      	add	r3, r1
 800b4d2:	3a01      	subs	r2, #1
 800b4d4:	428b      	cmp	r3, r1
 800b4d6:	d90c      	bls.n	800b4f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b4d8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b4dc:	f801 0b01 	strb.w	r0, [r1], #1
 800b4e0:	e7f8      	b.n	800b4d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b4e2:	0790      	lsls	r0, r2, #30
 800b4e4:	d0e7      	beq.n	800b4b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b4e6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b4ea:	f821 0b02 	strh.w	r0, [r1], #2
 800b4ee:	3b02      	subs	r3, #2
 800b4f0:	e7e1      	b.n	800b4b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b4f2:	2001      	movs	r0, #1
 800b4f4:	bd10      	pop	{r4, pc}

0800b4f6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b4f6:	b510      	push	{r4, lr}
 800b4f8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b4fc:	4604      	mov	r4, r0
 800b4fe:	b153      	cbz	r3, 800b516 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b500:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b504:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b508:	2101      	movs	r1, #1
 800b50a:	301c      	adds	r0, #28
 800b50c:	f014 fe6a 	bl	80201e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b510:	2300      	movs	r3, #0
 800b512:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b516:	bd10      	pop	{r4, pc}

0800b518 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b518:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b51c:	b085      	sub	sp, #20
 800b51e:	ad04      	add	r5, sp, #16
 800b520:	4604      	mov	r4, r0
 800b522:	2000      	movs	r0, #0
 800b524:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b528:	69a0      	ldr	r0, [r4, #24]
 800b52a:	6806      	ldr	r6, [r0, #0]
 800b52c:	9501      	str	r5, [sp, #4]
 800b52e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b532:	9500      	str	r5, [sp, #0]
 800b534:	6835      	ldr	r5, [r6, #0]
 800b536:	4699      	mov	r9, r3
 800b538:	460f      	mov	r7, r1
 800b53a:	4690      	mov	r8, r2
 800b53c:	47a8      	blx	r5
 800b53e:	4d10      	ldr	r5, [pc, #64]	; (800b580 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b540:	4606      	mov	r6, r0
 800b542:	f8a5 9000 	strh.w	r9, [r5]
 800b546:	f7f7 f9e9 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800b54a:	6803      	ldr	r3, [r0, #0]
 800b54c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b54e:	4798      	blx	r3
 800b550:	b128      	cbz	r0, 800b55e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b552:	2801      	cmp	r0, #1
 800b554:	d00b      	beq.n	800b56e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b556:	4630      	mov	r0, r6
 800b558:	b005      	add	sp, #20
 800b55a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b55e:	882b      	ldrh	r3, [r5, #0]
 800b560:	fb08 7203 	mla	r2, r8, r3, r7
 800b564:	9b03      	ldr	r3, [sp, #12]
 800b566:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b56a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b56c:	e7f3      	b.n	800b556 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b56e:	882a      	ldrh	r2, [r5, #0]
 800b570:	9b03      	ldr	r3, [sp, #12]
 800b572:	fb08 7202 	mla	r2, r8, r2, r7
 800b576:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b57a:	1a9a      	subs	r2, r3, r2
 800b57c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b57e:	e7ea      	b.n	800b556 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b580:	200157ee 	.word	0x200157ee

0800b584 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b584:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b586:	b08b      	sub	sp, #44	; 0x2c
 800b588:	4617      	mov	r7, r2
 800b58a:	4604      	mov	r4, r0
 800b58c:	460e      	mov	r6, r1
 800b58e:	461d      	mov	r5, r3
 800b590:	f7f7 f9c4 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800b594:	6803      	ldr	r3, [r0, #0]
 800b596:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b598:	4798      	blx	r3
 800b59a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b59e:	9007      	str	r0, [sp, #28]
 800b5a0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b5a4:	4b0d      	ldr	r3, [pc, #52]	; (800b5dc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b5a6:	6822      	ldr	r2, [r4, #0]
 800b5a8:	881b      	ldrh	r3, [r3, #0]
 800b5aa:	9306      	str	r3, [sp, #24]
 800b5ac:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b5b0:	9305      	str	r3, [sp, #20]
 800b5b2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b5b6:	9304      	str	r3, [sp, #16]
 800b5b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b5bc:	9303      	str	r3, [sp, #12]
 800b5be:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b5c2:	9302      	str	r3, [sp, #8]
 800b5c4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b5c8:	e9cd 5300 	strd	r5, r3, [sp]
 800b5cc:	4631      	mov	r1, r6
 800b5ce:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b5d0:	463b      	mov	r3, r7
 800b5d2:	2200      	movs	r2, #0
 800b5d4:	4620      	mov	r0, r4
 800b5d6:	47a8      	blx	r5
 800b5d8:	b00b      	add	sp, #44	; 0x2c
 800b5da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b5dc:	200157ee 	.word	0x200157ee

0800b5e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b5e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b5e4:	4698      	mov	r8, r3
 800b5e6:	6803      	ldr	r3, [r0, #0]
 800b5e8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b5ea:	4b15      	ldr	r3, [pc, #84]	; (800b640 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b5ec:	b08b      	sub	sp, #44	; 0x2c
 800b5ee:	4617      	mov	r7, r2
 800b5f0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b5f4:	460e      	mov	r6, r1
 800b5f6:	4604      	mov	r4, r0
 800b5f8:	f7f7 f990 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800b5fc:	6803      	ldr	r3, [r0, #0]
 800b5fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b600:	4798      	blx	r3
 800b602:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b606:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b60a:	2302      	movs	r3, #2
 800b60c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b610:	2301      	movs	r3, #1
 800b612:	9305      	str	r3, [sp, #20]
 800b614:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b618:	9304      	str	r3, [sp, #16]
 800b61a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b61e:	9303      	str	r3, [sp, #12]
 800b620:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b624:	9302      	str	r3, [sp, #8]
 800b626:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b62a:	2200      	movs	r2, #0
 800b62c:	e9cd 8300 	strd	r8, r3, [sp]
 800b630:	4631      	mov	r1, r6
 800b632:	463b      	mov	r3, r7
 800b634:	4620      	mov	r0, r4
 800b636:	47a8      	blx	r5
 800b638:	b00b      	add	sp, #44	; 0x2c
 800b63a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b63e:	bf00      	nop
 800b640:	200157ee 	.word	0x200157ee

0800b644 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b644:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b648:	4698      	mov	r8, r3
 800b64a:	6803      	ldr	r3, [r0, #0]
 800b64c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b64e:	4b11      	ldr	r3, [pc, #68]	; (800b694 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b650:	b087      	sub	sp, #28
 800b652:	f8b3 9000 	ldrh.w	r9, [r3]
 800b656:	460e      	mov	r6, r1
 800b658:	4617      	mov	r7, r2
 800b65a:	4604      	mov	r4, r0
 800b65c:	f7f7 f95e 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800b660:	6803      	ldr	r3, [r0, #0]
 800b662:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b664:	4798      	blx	r3
 800b666:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b66a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b66e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b672:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b676:	9302      	str	r3, [sp, #8]
 800b678:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b67c:	9301      	str	r3, [sp, #4]
 800b67e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b682:	9300      	str	r3, [sp, #0]
 800b684:	463a      	mov	r2, r7
 800b686:	4643      	mov	r3, r8
 800b688:	4631      	mov	r1, r6
 800b68a:	4620      	mov	r0, r4
 800b68c:	47a8      	blx	r5
 800b68e:	b007      	add	sp, #28
 800b690:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b694:	200157ee 	.word	0x200157ee

0800b698 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b69c:	4604      	mov	r4, r0
 800b69e:	b08f      	sub	sp, #60	; 0x3c
 800b6a0:	4610      	mov	r0, r2
 800b6a2:	460d      	mov	r5, r1
 800b6a4:	4691      	mov	r9, r2
 800b6a6:	461e      	mov	r6, r3
 800b6a8:	f008 ff96 	bl	80145d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b6ac:	2800      	cmp	r0, #0
 800b6ae:	f000 809d 	beq.w	800b7ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b6b2:	6823      	ldr	r3, [r4, #0]
 800b6b4:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b850 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b6b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b6ba:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b854 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b6be:	4f61      	ldr	r7, [pc, #388]	; (800b844 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b6c0:	4620      	mov	r0, r4
 800b6c2:	4798      	blx	r3
 800b6c4:	6823      	ldr	r3, [r4, #0]
 800b6c6:	4620      	mov	r0, r4
 800b6c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6ca:	4798      	blx	r3
 800b6cc:	f8bb 3000 	ldrh.w	r3, [fp]
 800b6d0:	9301      	str	r3, [sp, #4]
 800b6d2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b6d6:	f8ba 3000 	ldrh.w	r3, [sl]
 800b6da:	9302      	str	r3, [sp, #8]
 800b6dc:	883b      	ldrh	r3, [r7, #0]
 800b6de:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b6e2:	9303      	str	r3, [sp, #12]
 800b6e4:	4b58      	ldr	r3, [pc, #352]	; (800b848 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b6e6:	9305      	str	r3, [sp, #20]
 800b6e8:	881a      	ldrh	r2, [r3, #0]
 800b6ea:	9204      	str	r2, [sp, #16]
 800b6ec:	4640      	mov	r0, r8
 800b6ee:	f009 f807 	bl	8014700 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b6f2:	8038      	strh	r0, [r7, #0]
 800b6f4:	4640      	mov	r0, r8
 800b6f6:	f009 f837 	bl	8014768 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b6fa:	9b05      	ldr	r3, [sp, #20]
 800b6fc:	b280      	uxth	r0, r0
 800b6fe:	8018      	strh	r0, [r3, #0]
 800b700:	4b52      	ldr	r3, [pc, #328]	; (800b84c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b702:	781b      	ldrb	r3, [r3, #0]
 800b704:	2b00      	cmp	r3, #0
 800b706:	d174      	bne.n	800b7f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b708:	883b      	ldrh	r3, [r7, #0]
 800b70a:	f8ab 3000 	strh.w	r3, [fp]
 800b70e:	f8aa 0000 	strh.w	r0, [sl]
 800b712:	4648      	mov	r0, r9
 800b714:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b718:	f008 ff5e 	bl	80145d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b71c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b720:	2200      	movs	r2, #0
 800b722:	4611      	mov	r1, r2
 800b724:	4628      	mov	r0, r5
 800b726:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b72a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b72e:	f7f7 fb97 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 800b732:	2301      	movs	r3, #1
 800b734:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b738:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b73c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b740:	2b00      	cmp	r3, #0
 800b742:	dd5c      	ble.n	800b7fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b744:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b748:	2b00      	cmp	r3, #0
 800b74a:	dd58      	ble.n	800b7fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b74c:	462a      	mov	r2, r5
 800b74e:	ab0a      	add	r3, sp, #40	; 0x28
 800b750:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b754:	6851      	ldr	r1, [r2, #4]
 800b756:	c303      	stmia	r3!, {r0, r1}
 800b758:	4631      	mov	r1, r6
 800b75a:	a80a      	add	r0, sp, #40	; 0x28
 800b75c:	f7ff fc0e 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800b760:	4b38      	ldr	r3, [pc, #224]	; (800b844 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b762:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b766:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b76a:	2100      	movs	r1, #0
 800b76c:	aa0a      	add	r2, sp, #40	; 0x28
 800b76e:	4b36      	ldr	r3, [pc, #216]	; (800b848 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b770:	910c      	str	r1, [sp, #48]	; 0x30
 800b772:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b776:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b77a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b77e:	ab08      	add	r3, sp, #32
 800b780:	e883 0003 	stmia.w	r3, {r0, r1}
 800b784:	4618      	mov	r0, r3
 800b786:	a90c      	add	r1, sp, #48	; 0x30
 800b788:	f7ff fbf8 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800b78c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b78e:	2b00      	cmp	r3, #0
 800b790:	d13c      	bne.n	800b80c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b792:	2000      	movs	r0, #0
 800b794:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b798:	2600      	movs	r6, #0
 800b79a:	682a      	ldr	r2, [r5, #0]
 800b79c:	696b      	ldr	r3, [r5, #20]
 800b79e:	616e      	str	r6, [r5, #20]
 800b7a0:	9305      	str	r3, [sp, #20]
 800b7a2:	6892      	ldr	r2, [r2, #8]
 800b7a4:	a908      	add	r1, sp, #32
 800b7a6:	4628      	mov	r0, r5
 800b7a8:	4790      	blx	r2
 800b7aa:	9b05      	ldr	r3, [sp, #20]
 800b7ac:	616b      	str	r3, [r5, #20]
 800b7ae:	4652      	mov	r2, sl
 800b7b0:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b7b4:	4649      	mov	r1, r9
 800b7b6:	4628      	mov	r0, r5
 800b7b8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b7bc:	f7f7 fb50 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 800b7c0:	4b23      	ldr	r3, [pc, #140]	; (800b850 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b7c2:	9a01      	ldr	r2, [sp, #4]
 800b7c4:	801a      	strh	r2, [r3, #0]
 800b7c6:	4b23      	ldr	r3, [pc, #140]	; (800b854 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b7c8:	9a02      	ldr	r2, [sp, #8]
 800b7ca:	801a      	strh	r2, [r3, #0]
 800b7cc:	4b1d      	ldr	r3, [pc, #116]	; (800b844 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b7ce:	9a03      	ldr	r2, [sp, #12]
 800b7d0:	801a      	strh	r2, [r3, #0]
 800b7d2:	4b1d      	ldr	r3, [pc, #116]	; (800b848 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b7d4:	9a04      	ldr	r2, [sp, #16]
 800b7d6:	801a      	strh	r2, [r3, #0]
 800b7d8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b7dc:	6823      	ldr	r3, [r4, #0]
 800b7de:	4620      	mov	r0, r4
 800b7e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b7e2:	4798      	blx	r3
 800b7e4:	6823      	ldr	r3, [r4, #0]
 800b7e6:	4620      	mov	r0, r4
 800b7e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b7ea:	4798      	blx	r3
 800b7ec:	b00f      	add	sp, #60	; 0x3c
 800b7ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b7f2:	883b      	ldrh	r3, [r7, #0]
 800b7f4:	f8ab 0000 	strh.w	r0, [fp]
 800b7f8:	f8aa 3000 	strh.w	r3, [sl]
 800b7fc:	e789      	b.n	800b712 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b7fe:	462a      	mov	r2, r5
 800b800:	ab0a      	add	r3, sp, #40	; 0x28
 800b802:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b806:	6851      	ldr	r1, [r2, #4]
 800b808:	c303      	stmia	r3!, {r0, r1}
 800b80a:	e7a9      	b.n	800b760 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b80c:	a807      	add	r0, sp, #28
 800b80e:	f009 f8e7 	bl	80149e0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b812:	4606      	mov	r6, r0
 800b814:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b816:	6803      	ldr	r3, [r0, #0]
 800b818:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b81a:	4798      	blx	r3
 800b81c:	4286      	cmp	r6, r0
 800b81e:	d1b8      	bne.n	800b792 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b820:	f7f7 f87c 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800b824:	6803      	ldr	r3, [r0, #0]
 800b826:	4606      	mov	r6, r0
 800b828:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b82a:	9305      	str	r3, [sp, #20]
 800b82c:	a807      	add	r0, sp, #28
 800b82e:	f009 f8d7 	bl	80149e0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b832:	9b05      	ldr	r3, [sp, #20]
 800b834:	4601      	mov	r1, r0
 800b836:	4630      	mov	r0, r6
 800b838:	4798      	blx	r3
 800b83a:	f080 0001 	eor.w	r0, r0, #1
 800b83e:	b2c0      	uxtb	r0, r0
 800b840:	e7a8      	b.n	800b794 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b842:	bf00      	nop
 800b844:	200157e8 	.word	0x200157e8
 800b848:	200157ea 	.word	0x200157ea
 800b84c:	200157ec 	.word	0x200157ec
 800b850:	200157ee 	.word	0x200157ee
 800b854:	200157f0 	.word	0x200157f0

0800b858 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b858:	b510      	push	{r4, lr}
 800b85a:	4b07      	ldr	r3, [pc, #28]	; (800b878 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b85c:	781b      	ldrb	r3, [r3, #0]
 800b85e:	4604      	mov	r4, r0
 800b860:	b13b      	cbz	r3, 800b872 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b862:	6803      	ldr	r3, [r0, #0]
 800b864:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b866:	4798      	blx	r3
 800b868:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b86a:	4283      	cmp	r3, r0
 800b86c:	d101      	bne.n	800b872 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b86e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b870:	bd10      	pop	{r4, pc}
 800b872:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b874:	e7fc      	b.n	800b870 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b876:	bf00      	nop
 800b878:	200157f2 	.word	0x200157f2

0800b87c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b87c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b880:	b08a      	sub	sp, #40	; 0x28
 800b882:	461d      	mov	r5, r3
 800b884:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b888:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b88c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b890:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b894:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b898:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b89c:	2400      	movs	r4, #0
 800b89e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b8a2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b8a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b8aa:	4690      	mov	r8, r2
 800b8ac:	4607      	mov	r7, r0
 800b8ae:	9404      	str	r4, [sp, #16]
 800b8b0:	f88d 4020 	strb.w	r4, [sp, #32]
 800b8b4:	f7ff ffd0 	bl	800b858 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b8b8:	fb06 8505 	mla	r5, r6, r5, r8
 800b8bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b8c0:	6878      	ldr	r0, [r7, #4]
 800b8c2:	9505      	str	r5, [sp, #20]
 800b8c4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b8c8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b8cc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b8d0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b8d4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b8d8:	6803      	ldr	r3, [r0, #0]
 800b8da:	a901      	add	r1, sp, #4
 800b8dc:	685b      	ldr	r3, [r3, #4]
 800b8de:	4798      	blx	r3
 800b8e0:	b00a      	add	sp, #40	; 0x28
 800b8e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b8e6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b8e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b8ea:	b08b      	sub	sp, #44	; 0x2c
 800b8ec:	2400      	movs	r4, #0
 800b8ee:	461d      	mov	r5, r3
 800b8f0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b8f4:	4688      	mov	r8, r1
 800b8f6:	4691      	mov	r9, r2
 800b8f8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b8fc:	9404      	str	r4, [sp, #16]
 800b8fe:	4607      	mov	r7, r0
 800b900:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b904:	f7ff ffa8 	bl	800b858 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b908:	fb06 9505 	mla	r5, r6, r5, r9
 800b90c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b910:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b914:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b918:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b91c:	6878      	ldr	r0, [r7, #4]
 800b91e:	9505      	str	r5, [sp, #20]
 800b920:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b924:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b928:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b92c:	f8cd 8010 	str.w	r8, [sp, #16]
 800b930:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b934:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b938:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b93c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b940:	6803      	ldr	r3, [r0, #0]
 800b942:	a901      	add	r1, sp, #4
 800b944:	685b      	ldr	r3, [r3, #4]
 800b946:	4798      	blx	r3
 800b948:	b00b      	add	sp, #44	; 0x2c
 800b94a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b950 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b950:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b954:	b08a      	sub	sp, #40	; 0x28
 800b956:	4698      	mov	r8, r3
 800b958:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b95c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b960:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b964:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b968:	2300      	movs	r3, #0
 800b96a:	2d0b      	cmp	r5, #11
 800b96c:	4606      	mov	r6, r0
 800b96e:	9304      	str	r3, [sp, #16]
 800b970:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b974:	d138      	bne.n	800b9e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b976:	2380      	movs	r3, #128	; 0x80
 800b978:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b97c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b980:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b984:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b988:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b98c:	f88d 0020 	strb.w	r0, [sp, #32]
 800b990:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b994:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b998:	4630      	mov	r0, r6
 800b99a:	9203      	str	r2, [sp, #12]
 800b99c:	f7ff ff5c 	bl	800b858 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9a0:	2c0b      	cmp	r4, #11
 800b9a2:	bf98      	it	ls
 800b9a4:	4b1b      	ldrls	r3, [pc, #108]	; (800ba14 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b9a6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b9aa:	bf98      	it	ls
 800b9ac:	5d19      	ldrbls	r1, [r3, r4]
 800b9ae:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b9b2:	bf88      	it	hi
 800b9b4:	2100      	movhi	r1, #0
 800b9b6:	fb02 8307 	mla	r3, r2, r7, r8
 800b9ba:	10c9      	asrs	r1, r1, #3
 800b9bc:	fb01 0003 	mla	r0, r1, r3, r0
 800b9c0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b9c4:	9005      	str	r0, [sp, #20]
 800b9c6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b9ca:	6870      	ldr	r0, [r6, #4]
 800b9cc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b9d0:	2300      	movs	r3, #0
 800b9d2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b9d6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b9da:	6803      	ldr	r3, [r0, #0]
 800b9dc:	a901      	add	r1, sp, #4
 800b9de:	685b      	ldr	r3, [r3, #4]
 800b9e0:	4798      	blx	r3
 800b9e2:	b00a      	add	sp, #40	; 0x28
 800b9e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9e8:	2d02      	cmp	r5, #2
 800b9ea:	d109      	bne.n	800ba00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b9ec:	28ff      	cmp	r0, #255	; 0xff
 800b9ee:	d105      	bne.n	800b9fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b9f0:	f1bc 0f00 	cmp.w	ip, #0
 800b9f4:	bf14      	ite	ne
 800b9f6:	2340      	movne	r3, #64	; 0x40
 800b9f8:	2320      	moveq	r3, #32
 800b9fa:	e7bd      	b.n	800b978 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b9fc:	2340      	movs	r3, #64	; 0x40
 800b9fe:	e7bb      	b.n	800b978 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ba00:	28ff      	cmp	r0, #255	; 0xff
 800ba02:	d105      	bne.n	800ba10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800ba04:	f1bc 0f00 	cmp.w	ip, #0
 800ba08:	bf14      	ite	ne
 800ba0a:	2304      	movne	r3, #4
 800ba0c:	2301      	moveq	r3, #1
 800ba0e:	e7b3      	b.n	800b978 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ba10:	2304      	movs	r3, #4
 800ba12:	e7b1      	b.n	800b978 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ba14:	08023a6c 	.word	0x08023a6c

0800ba18 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800ba18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba1c:	b08b      	sub	sp, #44	; 0x2c
 800ba1e:	461d      	mov	r5, r3
 800ba20:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800ba24:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800ba28:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800ba2c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800ba30:	bf14      	ite	ne
 800ba32:	2308      	movne	r3, #8
 800ba34:	2302      	moveq	r3, #2
 800ba36:	2400      	movs	r4, #0
 800ba38:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ba3c:	4688      	mov	r8, r1
 800ba3e:	4693      	mov	fp, r2
 800ba40:	9404      	str	r4, [sp, #16]
 800ba42:	4607      	mov	r7, r0
 800ba44:	f7ff ff08 	bl	800b858 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba48:	2e0b      	cmp	r6, #11
 800ba4a:	bf98      	it	ls
 800ba4c:	4b15      	ldrls	r3, [pc, #84]	; (800baa4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800ba4e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800ba52:	bf98      	it	ls
 800ba54:	5d9c      	ldrbls	r4, [r3, r6]
 800ba56:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ba5a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ba5e:	fb05 b50a 	mla	r5, r5, sl, fp
 800ba62:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800ba66:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ba6a:	10e4      	asrs	r4, r4, #3
 800ba6c:	fb04 0405 	mla	r4, r4, r5, r0
 800ba70:	2300      	movs	r3, #0
 800ba72:	6878      	ldr	r0, [r7, #4]
 800ba74:	9405      	str	r4, [sp, #20]
 800ba76:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ba7a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800ba7e:	f8cd 8010 	str.w	r8, [sp, #16]
 800ba82:	f88d 9020 	strb.w	r9, [sp, #32]
 800ba86:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800ba8a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800ba8e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800ba92:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800ba96:	6803      	ldr	r3, [r0, #0]
 800ba98:	a901      	add	r1, sp, #4
 800ba9a:	685b      	ldr	r3, [r3, #4]
 800ba9c:	4798      	blx	r3
 800ba9e:	b00b      	add	sp, #44	; 0x2c
 800baa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800baa4:	08023a6c 	.word	0x08023a6c

0800baa8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800baa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800baac:	461e      	mov	r6, r3
 800baae:	4b0a      	ldr	r3, [pc, #40]	; (800bad8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800bab0:	460f      	mov	r7, r1
 800bab2:	881d      	ldrh	r5, [r3, #0]
 800bab4:	4690      	mov	r8, r2
 800bab6:	f7f6 ff31 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800baba:	6803      	ldr	r3, [r0, #0]
 800babc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800babe:	4798      	blx	r3
 800bac0:	280b      	cmp	r0, #11
 800bac2:	bf9a      	itte	ls
 800bac4:	4b05      	ldrls	r3, [pc, #20]	; (800badc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800bac6:	5c1c      	ldrbls	r4, [r3, r0]
 800bac8:	2400      	movhi	r4, #0
 800baca:	fb08 7005 	mla	r0, r8, r5, r7
 800bace:	10e4      	asrs	r4, r4, #3
 800bad0:	fb04 6000 	mla	r0, r4, r0, r6
 800bad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bad8:	200157ee 	.word	0x200157ee
 800badc:	08023a6c 	.word	0x08023a6c

0800bae0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800bae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bae2:	b08b      	sub	sp, #44	; 0x2c
 800bae4:	461f      	mov	r7, r3
 800bae6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800baea:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800baee:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800baf2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800baf6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bafa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bafe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bb02:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bb06:	2500      	movs	r5, #0
 800bb08:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800bb0c:	f88d 3020 	strb.w	r3, [sp, #32]
 800bb10:	4604      	mov	r4, r0
 800bb12:	4616      	mov	r6, r2
 800bb14:	9504      	str	r5, [sp, #16]
 800bb16:	f7ff fe9f 	bl	800b858 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb1a:	463a      	mov	r2, r7
 800bb1c:	4631      	mov	r1, r6
 800bb1e:	4603      	mov	r3, r0
 800bb20:	4620      	mov	r0, r4
 800bb22:	f7ff ffc1 	bl	800baa8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bb26:	4b0e      	ldr	r3, [pc, #56]	; (800bb60 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800bb28:	9005      	str	r0, [sp, #20]
 800bb2a:	881b      	ldrh	r3, [r3, #0]
 800bb2c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bb30:	f7f6 fef4 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800bb34:	6803      	ldr	r3, [r0, #0]
 800bb36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bb38:	4798      	blx	r3
 800bb3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800bb3c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800bb40:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800bb44:	9304      	str	r3, [sp, #16]
 800bb46:	6860      	ldr	r0, [r4, #4]
 800bb48:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800bb4c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800bb50:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800bb54:	6803      	ldr	r3, [r0, #0]
 800bb56:	a901      	add	r1, sp, #4
 800bb58:	685b      	ldr	r3, [r3, #4]
 800bb5a:	4798      	blx	r3
 800bb5c:	b00b      	add	sp, #44	; 0x2c
 800bb5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb60:	200157ee 	.word	0x200157ee

0800bb64 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800bb64:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb66:	b08d      	sub	sp, #52	; 0x34
 800bb68:	466b      	mov	r3, sp
 800bb6a:	e883 0006 	stmia.w	r3, {r1, r2}
 800bb6e:	2300      	movs	r3, #0
 800bb70:	9306      	str	r3, [sp, #24]
 800bb72:	6803      	ldr	r3, [r0, #0]
 800bb74:	f8bd 6000 	ldrh.w	r6, [sp]
 800bb78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bb7a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800bb7e:	2501      	movs	r5, #1
 800bb80:	9503      	str	r5, [sp, #12]
 800bb82:	4604      	mov	r4, r0
 800bb84:	4798      	blx	r3
 800bb86:	463a      	mov	r2, r7
 800bb88:	4631      	mov	r1, r6
 800bb8a:	4603      	mov	r3, r0
 800bb8c:	4620      	mov	r0, r4
 800bb8e:	f7ff ff8b 	bl	800baa8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bb92:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800bb94:	9307      	str	r3, [sp, #28]
 800bb96:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bb9a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bb9e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bba2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bba6:	4b0f      	ldr	r3, [pc, #60]	; (800bbe4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800bba8:	9004      	str	r0, [sp, #16]
 800bbaa:	881b      	ldrh	r3, [r3, #0]
 800bbac:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800bbb0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800bbb4:	f7f6 feb2 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800bbb8:	6803      	ldr	r3, [r0, #0]
 800bbba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bbbc:	4798      	blx	r3
 800bbbe:	23ff      	movs	r3, #255	; 0xff
 800bbc0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800bbc4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800bbc8:	6860      	ldr	r0, [r4, #4]
 800bbca:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800bbce:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800bbd2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800bbd6:	6803      	ldr	r3, [r0, #0]
 800bbd8:	a903      	add	r1, sp, #12
 800bbda:	685b      	ldr	r3, [r3, #4]
 800bbdc:	4798      	blx	r3
 800bbde:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800bbe0:	b00d      	add	sp, #52	; 0x34
 800bbe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bbe4:	200157ee 	.word	0x200157ee

0800bbe8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800bbe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbec:	b08c      	sub	sp, #48	; 0x30
 800bbee:	461e      	mov	r6, r3
 800bbf0:	466d      	mov	r5, sp
 800bbf2:	2300      	movs	r3, #0
 800bbf4:	e885 0006 	stmia.w	r5, {r1, r2}
 800bbf8:	9306      	str	r3, [sp, #24]
 800bbfa:	6803      	ldr	r3, [r0, #0]
 800bbfc:	f8bd 7000 	ldrh.w	r7, [sp]
 800bc00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bc02:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800bc06:	2501      	movs	r5, #1
 800bc08:	9503      	str	r5, [sp, #12]
 800bc0a:	4604      	mov	r4, r0
 800bc0c:	4798      	blx	r3
 800bc0e:	4642      	mov	r2, r8
 800bc10:	4639      	mov	r1, r7
 800bc12:	4603      	mov	r3, r0
 800bc14:	4620      	mov	r0, r4
 800bc16:	f7ff ff47 	bl	800baa8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bc1a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bc1e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bc22:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bc26:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bc2a:	4b11      	ldr	r3, [pc, #68]	; (800bc70 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800bc2c:	9004      	str	r0, [sp, #16]
 800bc2e:	881b      	ldrh	r3, [r3, #0]
 800bc30:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800bc34:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bc36:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800bc3a:	9607      	str	r6, [sp, #28]
 800bc3c:	f7f6 fe6e 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800bc40:	6803      	ldr	r3, [r0, #0]
 800bc42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bc44:	4798      	blx	r3
 800bc46:	23ff      	movs	r3, #255	; 0xff
 800bc48:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800bc4c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800bc50:	6860      	ldr	r0, [r4, #4]
 800bc52:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800bc56:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800bc5a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800bc5e:	6803      	ldr	r3, [r0, #0]
 800bc60:	a903      	add	r1, sp, #12
 800bc62:	685b      	ldr	r3, [r3, #4]
 800bc64:	4798      	blx	r3
 800bc66:	4630      	mov	r0, r6
 800bc68:	b00c      	add	sp, #48	; 0x30
 800bc6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc6e:	bf00      	nop
 800bc70:	200157ee 	.word	0x200157ee

0800bc74 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bc74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc76:	b085      	sub	sp, #20
 800bc78:	ac02      	add	r4, sp, #8
 800bc7a:	e884 0006 	stmia.w	r4, {r1, r2}
 800bc7e:	4605      	mov	r5, r0
 800bc80:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bc84:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bc88:	f7ff fde6 	bl	800b858 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc8c:	463a      	mov	r2, r7
 800bc8e:	4603      	mov	r3, r0
 800bc90:	4631      	mov	r1, r6
 800bc92:	4628      	mov	r0, r5
 800bc94:	f7ff ff08 	bl	800baa8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bc98:	4a05      	ldr	r2, [pc, #20]	; (800bcb0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bc9a:	682b      	ldr	r3, [r5, #0]
 800bc9c:	8812      	ldrh	r2, [r2, #0]
 800bc9e:	9200      	str	r2, [sp, #0]
 800bca0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800bca2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bca6:	4603      	mov	r3, r0
 800bca8:	4628      	mov	r0, r5
 800bcaa:	47b0      	blx	r6
 800bcac:	b005      	add	sp, #20
 800bcae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bcb0:	200157ee 	.word	0x200157ee

0800bcb4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bcb4:	b570      	push	{r4, r5, r6, lr}
 800bcb6:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800bcba:	4604      	mov	r4, r0
 800bcbc:	b19b      	cbz	r3, 800bce6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bcbe:	2002      	movs	r0, #2
 800bcc0:	f7f4 fd40 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bcc4:	2300      	movs	r3, #0
 800bcc6:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800bcca:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800bcce:	6823      	ldr	r3, [r4, #0]
 800bcd0:	4620      	mov	r0, r4
 800bcd2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800bcd6:	f7ff fdbf 	bl	800b858 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bcda:	462b      	mov	r3, r5
 800bcdc:	4601      	mov	r1, r0
 800bcde:	4620      	mov	r0, r4
 800bce0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bce4:	4718      	bx	r3
 800bce6:	bd70      	pop	{r4, r5, r6, pc}

0800bce8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bce8:	b538      	push	{r3, r4, r5, lr}
 800bcea:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800bcee:	428b      	cmp	r3, r1
 800bcf0:	4604      	mov	r4, r0
 800bcf2:	460d      	mov	r5, r1
 800bcf4:	d006      	beq.n	800bd04 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bcf6:	6803      	ldr	r3, [r0, #0]
 800bcf8:	b929      	cbnz	r1, 800bd06 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bcfa:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800bcfe:	4798      	blx	r3
 800bd00:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800bd04:	bd38      	pop	{r3, r4, r5, pc}
 800bd06:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800bd0a:	e7f8      	b.n	800bcfe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bd0c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bd0c:	b510      	push	{r4, lr}
 800bd0e:	4b0d      	ldr	r3, [pc, #52]	; (800bd44 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bd10:	781b      	ldrb	r3, [r3, #0]
 800bd12:	4604      	mov	r4, r0
 800bd14:	b95b      	cbnz	r3, 800bd2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bd16:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bd1a:	2b02      	cmp	r3, #2
 800bd1c:	d007      	beq.n	800bd2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bd1e:	6840      	ldr	r0, [r0, #4]
 800bd20:	f000 f92a 	bl	800bf78 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bd24:	b118      	cbz	r0, 800bd2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bd26:	6862      	ldr	r2, [r4, #4]
 800bd28:	7a53      	ldrb	r3, [r2, #9]
 800bd2a:	2b00      	cmp	r3, #0
 800bd2c:	d0fc      	beq.n	800bd28 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bd2e:	f7f4 fe03 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bd32:	4620      	mov	r0, r4
 800bd34:	2100      	movs	r1, #0
 800bd36:	f7ff ffd7 	bl	800bce8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bd3a:	4620      	mov	r0, r4
 800bd3c:	f7ff fd8c 	bl	800b858 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bd40:	bd10      	pop	{r4, pc}
 800bd42:	bf00      	nop
 800bd44:	200157f2 	.word	0x200157f2

0800bd48 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bd48:	b570      	push	{r4, r5, r6, lr}
 800bd4a:	4604      	mov	r4, r0
 800bd4c:	6803      	ldr	r3, [r0, #0]
 800bd4e:	b919      	cbnz	r1, 800bd58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bd50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bd52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd56:	4718      	bx	r3
 800bd58:	2200      	movs	r2, #0
 800bd5a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800bd5e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800bd62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bd64:	4798      	blx	r3
 800bd66:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800bd6a:	4605      	mov	r5, r0
 800bd6c:	2101      	movs	r1, #1
 800bd6e:	4620      	mov	r0, r4
 800bd70:	f7ff ffba 	bl	800bce8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bd74:	4628      	mov	r0, r5
 800bd76:	bd70      	pop	{r4, r5, r6, pc}

0800bd78 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bd78:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bd7c:	1a13      	subs	r3, r2, r0
 800bd7e:	4258      	negs	r0, r3
 800bd80:	4158      	adcs	r0, r3
 800bd82:	4770      	bx	lr

0800bd84 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bd84:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bd88:	1a9b      	subs	r3, r3, r2
 800bd8a:	2b00      	cmp	r3, #0
 800bd8c:	bfdc      	itt	le
 800bd8e:	6882      	ldrle	r2, [r0, #8]
 800bd90:	189b      	addle	r3, r3, r2
 800bd92:	2b01      	cmp	r3, #1
 800bd94:	bfcc      	ite	gt
 800bd96:	2000      	movgt	r0, #0
 800bd98:	2001      	movle	r0, #1
 800bd9a:	4770      	bx	lr

0800bd9c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bd9c:	6902      	ldr	r2, [r0, #16]
 800bd9e:	6843      	ldr	r3, [r0, #4]
 800bda0:	2024      	movs	r0, #36	; 0x24
 800bda2:	fb00 3002 	mla	r0, r0, r2, r3
 800bda6:	4770      	bx	lr

0800bda8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bda8:	6803      	ldr	r3, [r0, #0]
 800bdaa:	691b      	ldr	r3, [r3, #16]
 800bdac:	4718      	bx	r3

0800bdae <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bdae:	b570      	push	{r4, r5, r6, lr}
 800bdb0:	2301      	movs	r3, #1
 800bdb2:	7203      	strb	r3, [r0, #8]
 800bdb4:	4604      	mov	r4, r0
 800bdb6:	6840      	ldr	r0, [r0, #4]
 800bdb8:	6803      	ldr	r3, [r0, #0]
 800bdba:	699b      	ldr	r3, [r3, #24]
 800bdbc:	4798      	blx	r3
 800bdbe:	6803      	ldr	r3, [r0, #0]
 800bdc0:	2b40      	cmp	r3, #64	; 0x40
 800bdc2:	4605      	mov	r5, r0
 800bdc4:	d00c      	beq.n	800bde0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bdc6:	d810      	bhi.n	800bdea <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bdc8:	2b04      	cmp	r3, #4
 800bdca:	d01d      	beq.n	800be08 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bdcc:	d804      	bhi.n	800bdd8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bdce:	2b01      	cmp	r3, #1
 800bdd0:	d006      	beq.n	800bde0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bdd2:	2b02      	cmp	r3, #2
 800bdd4:	d02c      	beq.n	800be30 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bdd6:	bd70      	pop	{r4, r5, r6, pc}
 800bdd8:	2b08      	cmp	r3, #8
 800bdda:	d01d      	beq.n	800be18 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bddc:	2b20      	cmp	r3, #32
 800bdde:	d1fa      	bne.n	800bdd6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bde0:	6823      	ldr	r3, [r4, #0]
 800bde2:	4620      	mov	r0, r4
 800bde4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bde6:	4798      	blx	r3
 800bde8:	e013      	b.n	800be12 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bdea:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bdee:	d0f7      	beq.n	800bde0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bdf0:	d804      	bhi.n	800bdfc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bdf2:	2b80      	cmp	r3, #128	; 0x80
 800bdf4:	d0f4      	beq.n	800bde0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bdf6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bdfa:	e7f0      	b.n	800bdde <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bdfc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800be00:	d0ee      	beq.n	800bde0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800be02:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800be06:	e7e5      	b.n	800bdd4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800be08:	6823      	ldr	r3, [r4, #0]
 800be0a:	7f01      	ldrb	r1, [r0, #28]
 800be0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800be0e:	4620      	mov	r0, r4
 800be10:	4798      	blx	r3
 800be12:	6823      	ldr	r3, [r4, #0]
 800be14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800be16:	e006      	b.n	800be26 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800be18:	6823      	ldr	r3, [r4, #0]
 800be1a:	7f01      	ldrb	r1, [r0, #28]
 800be1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800be1e:	4620      	mov	r0, r4
 800be20:	4798      	blx	r3
 800be22:	6823      	ldr	r3, [r4, #0]
 800be24:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800be26:	4629      	mov	r1, r5
 800be28:	4620      	mov	r0, r4
 800be2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be2e:	4718      	bx	r3
 800be30:	6823      	ldr	r3, [r4, #0]
 800be32:	4620      	mov	r0, r4
 800be34:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be36:	4798      	blx	r3
 800be38:	e7f3      	b.n	800be22 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800be3a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800be3a:	4770      	bx	lr

0800be3c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800be3c:	4770      	bx	lr

0800be3e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800be3e:	4770      	bx	lr

0800be40 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800be40:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800be44:	1ad2      	subs	r2, r2, r3
 800be46:	2a00      	cmp	r2, #0
 800be48:	b510      	push	{r4, lr}
 800be4a:	bfdc      	itt	le
 800be4c:	6884      	ldrle	r4, [r0, #8]
 800be4e:	1912      	addle	r2, r2, r4
 800be50:	2a01      	cmp	r2, #1
 800be52:	dd16      	ble.n	800be82 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800be54:	6842      	ldr	r2, [r0, #4]
 800be56:	2424      	movs	r4, #36	; 0x24
 800be58:	fb04 2303 	mla	r3, r4, r3, r2
 800be5c:	f101 0220 	add.w	r2, r1, #32
 800be60:	f851 4b04 	ldr.w	r4, [r1], #4
 800be64:	f843 4b04 	str.w	r4, [r3], #4
 800be68:	4291      	cmp	r1, r2
 800be6a:	d1f9      	bne.n	800be60 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800be6c:	780a      	ldrb	r2, [r1, #0]
 800be6e:	701a      	strb	r2, [r3, #0]
 800be70:	68c3      	ldr	r3, [r0, #12]
 800be72:	6882      	ldr	r2, [r0, #8]
 800be74:	f3bf 8f5b 	dmb	ish
 800be78:	3301      	adds	r3, #1
 800be7a:	429a      	cmp	r2, r3
 800be7c:	bfd8      	it	le
 800be7e:	1a9b      	suble	r3, r3, r2
 800be80:	60c3      	str	r3, [r0, #12]
 800be82:	bd10      	pop	{r4, pc}

0800be84 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800be84:	6903      	ldr	r3, [r0, #16]
 800be86:	6882      	ldr	r2, [r0, #8]
 800be88:	f3bf 8f5b 	dmb	ish
 800be8c:	3301      	adds	r3, #1
 800be8e:	429a      	cmp	r2, r3
 800be90:	bfd8      	it	le
 800be92:	1a9b      	suble	r3, r3, r2
 800be94:	6103      	str	r3, [r0, #16]
 800be96:	4770      	bx	lr

0800be98 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800be98:	b570      	push	{r4, r5, r6, lr}
 800be9a:	4604      	mov	r4, r0
 800be9c:	460e      	mov	r6, r1
 800be9e:	6860      	ldr	r0, [r4, #4]
 800bea0:	6803      	ldr	r3, [r0, #0]
 800bea2:	685b      	ldr	r3, [r3, #4]
 800bea4:	4798      	blx	r3
 800bea6:	2800      	cmp	r0, #0
 800bea8:	d1f9      	bne.n	800be9e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800beaa:	4d0d      	ldr	r5, [pc, #52]	; (800bee0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800beac:	6828      	ldr	r0, [r5, #0]
 800beae:	6803      	ldr	r3, [r0, #0]
 800beb0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800beb2:	4798      	blx	r3
 800beb4:	f7f4 fd4e 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800beb8:	6828      	ldr	r0, [r5, #0]
 800beba:	2101      	movs	r1, #1
 800bebc:	f7ff ff14 	bl	800bce8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bec0:	6860      	ldr	r0, [r4, #4]
 800bec2:	6803      	ldr	r3, [r0, #0]
 800bec4:	4631      	mov	r1, r6
 800bec6:	689b      	ldr	r3, [r3, #8]
 800bec8:	4798      	blx	r3
 800beca:	6823      	ldr	r3, [r4, #0]
 800becc:	4620      	mov	r0, r4
 800bece:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bed0:	4798      	blx	r3
 800bed2:	6828      	ldr	r0, [r5, #0]
 800bed4:	6803      	ldr	r3, [r0, #0]
 800bed6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800beda:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bedc:	4718      	bx	r3
 800bede:	bf00      	nop
 800bee0:	200157f4 	.word	0x200157f4

0800bee4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bee4:	b508      	push	{r3, lr}
 800bee6:	f7f4 fd27 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800beea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800beee:	f7f4 bd2b 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bef2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bef2:	b510      	push	{r4, lr}
 800bef4:	2114      	movs	r1, #20
 800bef6:	4604      	mov	r4, r0
 800bef8:	f014 fcee 	bl	80208d8 <_ZdlPvj>
 800befc:	4620      	mov	r0, r4
 800befe:	bd10      	pop	{r4, pc}

0800bf00 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bf00:	b510      	push	{r4, lr}
 800bf02:	4604      	mov	r4, r0
 800bf04:	6840      	ldr	r0, [r0, #4]
 800bf06:	6803      	ldr	r3, [r0, #0]
 800bf08:	681b      	ldr	r3, [r3, #0]
 800bf0a:	4798      	blx	r3
 800bf0c:	b948      	cbnz	r0, 800bf22 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bf0e:	7a63      	ldrb	r3, [r4, #9]
 800bf10:	b13b      	cbz	r3, 800bf22 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bf12:	7a23      	ldrb	r3, [r4, #8]
 800bf14:	b92b      	cbnz	r3, 800bf22 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bf16:	6823      	ldr	r3, [r4, #0]
 800bf18:	4620      	mov	r0, r4
 800bf1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bf1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf20:	4718      	bx	r3
 800bf22:	bd10      	pop	{r4, pc}

0800bf24 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bf24:	b570      	push	{r4, r5, r6, lr}
 800bf26:	4604      	mov	r4, r0
 800bf28:	6840      	ldr	r0, [r0, #4]
 800bf2a:	6803      	ldr	r3, [r0, #0]
 800bf2c:	681b      	ldr	r3, [r3, #0]
 800bf2e:	4798      	blx	r3
 800bf30:	4605      	mov	r5, r0
 800bf32:	b930      	cbnz	r0, 800bf42 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bf34:	7a23      	ldrb	r3, [r4, #8]
 800bf36:	b123      	cbz	r3, 800bf42 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bf38:	6860      	ldr	r0, [r4, #4]
 800bf3a:	6803      	ldr	r3, [r0, #0]
 800bf3c:	695b      	ldr	r3, [r3, #20]
 800bf3e:	4798      	blx	r3
 800bf40:	7225      	strb	r5, [r4, #8]
 800bf42:	6860      	ldr	r0, [r4, #4]
 800bf44:	6803      	ldr	r3, [r0, #0]
 800bf46:	681b      	ldr	r3, [r3, #0]
 800bf48:	4798      	blx	r3
 800bf4a:	b928      	cbnz	r0, 800bf58 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bf4c:	6823      	ldr	r3, [r4, #0]
 800bf4e:	4620      	mov	r0, r4
 800bf50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bf52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf56:	4718      	bx	r3
 800bf58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf5c:	f7f4 bd02 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bf60 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bf60:	b510      	push	{r4, lr}
 800bf62:	4c04      	ldr	r4, [pc, #16]	; (800bf74 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bf64:	6082      	str	r2, [r0, #8]
 800bf66:	2200      	movs	r2, #0
 800bf68:	e9c0 4100 	strd	r4, r1, [r0]
 800bf6c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bf70:	bd10      	pop	{r4, pc}
 800bf72:	bf00      	nop
 800bf74:	08023a80 	.word	0x08023a80

0800bf78 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bf78:	6840      	ldr	r0, [r0, #4]
 800bf7a:	6803      	ldr	r3, [r0, #0]
 800bf7c:	681b      	ldr	r3, [r3, #0]
 800bf7e:	4718      	bx	r3

0800bf80 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bf80:	4b06      	ldr	r3, [pc, #24]	; (800bf9c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800bf82:	60c1      	str	r1, [r0, #12]
 800bf84:	094a      	lsrs	r2, r1, #5
 800bf86:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800bf8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bf8e:	4313      	orrs	r3, r2
 800bf90:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800bf94:	4319      	orrs	r1, r3
 800bf96:	8201      	strh	r1, [r0, #16]
 800bf98:	4770      	bx	lr
 800bf9a:	bf00      	nop
 800bf9c:	fffff800 	.word	0xfffff800

0800bfa0 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bfa0:	f1a0 0008 	sub.w	r0, r0, #8
 800bfa4:	e7ec      	b.n	800bf80 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800bfa6:	bf00      	nop

0800bfa8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bfa8:	b508      	push	{r3, lr}
 800bfaa:	4b05      	ldr	r3, [pc, #20]	; (800bfc0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800bfac:	6818      	ldr	r0, [r3, #0]
 800bfae:	6803      	ldr	r3, [r0, #0]
 800bfb0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bfb4:	4798      	blx	r3
 800bfb6:	1e43      	subs	r3, r0, #1
 800bfb8:	4258      	negs	r0, r3
 800bfba:	4158      	adcs	r0, r3
 800bfbc:	bd08      	pop	{r3, pc}
 800bfbe:	bf00      	nop
 800bfc0:	200157f4 	.word	0x200157f4

0800bfc4 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bfc4:	4770      	bx	lr

0800bfc6 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bfc6:	3808      	subs	r0, #8
 800bfc8:	4770      	bx	lr

0800bfca <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bfca:	b430      	push	{r4, r5}
 800bfcc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bfd0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bfd4:	8a02      	ldrh	r2, [r0, #16]
 800bfd6:	9202      	str	r2, [sp, #8]
 800bfd8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800bfdc:	68c2      	ldr	r2, [r0, #12]
 800bfde:	4629      	mov	r1, r5
 800bfe0:	4620      	mov	r0, r4
 800bfe2:	bc30      	pop	{r4, r5}
 800bfe4:	f7f4 be7c 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bfe8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bfe8:	f7f4 be70 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800bfec <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bfec:	b510      	push	{r4, lr}
 800bfee:	2114      	movs	r1, #20
 800bff0:	4604      	mov	r4, r0
 800bff2:	f014 fc71 	bl	80208d8 <_ZdlPvj>
 800bff6:	4620      	mov	r0, r4
 800bff8:	bd10      	pop	{r4, pc}

0800bffa <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800bffa:	f1a0 0008 	sub.w	r0, r0, #8
 800bffe:	e7f5      	b.n	800bfec <_ZN8touchgfx13PainterRGB565D0Ev>

0800c000 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800c000:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c002:	6803      	ldr	r3, [r0, #0]
 800c004:	460d      	mov	r5, r1
 800c006:	4604      	mov	r4, r0
 800c008:	4601      	mov	r1, r0
 800c00a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c00c:	a802      	add	r0, sp, #8
 800c00e:	4798      	blx	r3
 800c010:	6828      	ldr	r0, [r5, #0]
 800c012:	6869      	ldr	r1, [r5, #4]
 800c014:	466b      	mov	r3, sp
 800c016:	c303      	stmia	r3!, {r0, r1}
 800c018:	4668      	mov	r0, sp
 800c01a:	4619      	mov	r1, r3
 800c01c:	f7fe ffae 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800c020:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c022:	b1a8      	cbz	r0, 800c050 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c024:	6803      	ldr	r3, [r0, #0]
 800c026:	1d21      	adds	r1, r4, #4
 800c028:	68db      	ldr	r3, [r3, #12]
 800c02a:	4798      	blx	r3
 800c02c:	b180      	cbz	r0, 800c050 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c02e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c032:	2b00      	cmp	r3, #0
 800c034:	dd0c      	ble.n	800c050 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c036:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800c03a:	2d00      	cmp	r5, #0
 800c03c:	dd08      	ble.n	800c050 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c03e:	4a2d      	ldr	r2, [pc, #180]	; (800c0f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800c040:	7812      	ldrb	r2, [r2, #0]
 800c042:	b13a      	cbz	r2, 800c054 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800c044:	2a01      	cmp	r2, #1
 800c046:	d02d      	beq.n	800c0a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800c048:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c04a:	6803      	ldr	r3, [r0, #0]
 800c04c:	691b      	ldr	r3, [r3, #16]
 800c04e:	4798      	blx	r3
 800c050:	b004      	add	sp, #16
 800c052:	bd70      	pop	{r4, r5, r6, pc}
 800c054:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c058:	441d      	add	r5, r3
 800c05a:	b2ad      	uxth	r5, r5
 800c05c:	b22e      	sxth	r6, r5
 800c05e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800c062:	42b3      	cmp	r3, r6
 800c064:	daf0      	bge.n	800c048 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c066:	6823      	ldr	r3, [r4, #0]
 800c068:	4669      	mov	r1, sp
 800c06a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c06c:	4620      	mov	r0, r4
 800c06e:	4798      	blx	r3
 800c070:	b940      	cbnz	r0, 800c084 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800c072:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c076:	2b01      	cmp	r3, #1
 800c078:	d004      	beq.n	800c084 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800c07a:	3301      	adds	r3, #1
 800c07c:	105b      	asrs	r3, r3, #1
 800c07e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c082:	e7f0      	b.n	800c066 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800c084:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c088:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c08c:	4413      	add	r3, r2
 800c08e:	b29b      	uxth	r3, r3
 800c090:	441a      	add	r2, r3
 800c092:	b212      	sxth	r2, r2
 800c094:	4296      	cmp	r6, r2
 800c096:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c09a:	dae0      	bge.n	800c05e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c09c:	1aeb      	subs	r3, r5, r3
 800c09e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c0a2:	e7dc      	b.n	800c05e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c0a4:	f8bd 5000 	ldrh.w	r5, [sp]
 800c0a8:	441d      	add	r5, r3
 800c0aa:	b2ad      	uxth	r5, r5
 800c0ac:	b22e      	sxth	r6, r5
 800c0ae:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c0b2:	42b3      	cmp	r3, r6
 800c0b4:	dac8      	bge.n	800c048 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c0b6:	6823      	ldr	r3, [r4, #0]
 800c0b8:	4669      	mov	r1, sp
 800c0ba:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c0bc:	4620      	mov	r0, r4
 800c0be:	4798      	blx	r3
 800c0c0:	b940      	cbnz	r0, 800c0d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800c0c2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c0c6:	2b01      	cmp	r3, #1
 800c0c8:	d004      	beq.n	800c0d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800c0ca:	3301      	adds	r3, #1
 800c0cc:	105b      	asrs	r3, r3, #1
 800c0ce:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c0d2:	e7f0      	b.n	800c0b6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800c0d4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800c0d8:	f8bd 3000 	ldrh.w	r3, [sp]
 800c0dc:	4413      	add	r3, r2
 800c0de:	b29b      	uxth	r3, r3
 800c0e0:	441a      	add	r2, r3
 800c0e2:	b212      	sxth	r2, r2
 800c0e4:	4296      	cmp	r6, r2
 800c0e6:	f8ad 3000 	strh.w	r3, [sp]
 800c0ea:	dae0      	bge.n	800c0ae <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c0ec:	1aeb      	subs	r3, r5, r3
 800c0ee:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c0f2:	e7dc      	b.n	800c0ae <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c0f4:	200157ec 	.word	0x200157ec

0800c0f8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800c0f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c0fa:	6803      	ldr	r3, [r0, #0]
 800c0fc:	4604      	mov	r4, r0
 800c0fe:	4601      	mov	r1, r0
 800c100:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c102:	4668      	mov	r0, sp
 800c104:	4798      	blx	r3
 800c106:	2100      	movs	r1, #0
 800c108:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c10c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c110:	9102      	str	r1, [sp, #8]
 800c112:	4668      	mov	r0, sp
 800c114:	a902      	add	r1, sp, #8
 800c116:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c11a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c11e:	f7fe ff2d 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800c122:	6823      	ldr	r3, [r4, #0]
 800c124:	4669      	mov	r1, sp
 800c126:	691b      	ldr	r3, [r3, #16]
 800c128:	4620      	mov	r0, r4
 800c12a:	4798      	blx	r3
 800c12c:	b004      	add	sp, #16
 800c12e:	bd10      	pop	{r4, pc}

0800c130 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c130:	2101      	movs	r1, #1
 800c132:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c136:	490b      	ldr	r1, [pc, #44]	; (800c164 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800c138:	6001      	str	r1, [r0, #0]
 800c13a:	2200      	movs	r2, #0
 800c13c:	21ff      	movs	r1, #255	; 0xff
 800c13e:	8082      	strh	r2, [r0, #4]
 800c140:	80c2      	strh	r2, [r0, #6]
 800c142:	8102      	strh	r2, [r0, #8]
 800c144:	8142      	strh	r2, [r0, #10]
 800c146:	8182      	strh	r2, [r0, #12]
 800c148:	81c2      	strh	r2, [r0, #14]
 800c14a:	8202      	strh	r2, [r0, #16]
 800c14c:	8242      	strh	r2, [r0, #18]
 800c14e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c152:	61c2      	str	r2, [r0, #28]
 800c154:	8402      	strh	r2, [r0, #32]
 800c156:	8442      	strh	r2, [r0, #34]	; 0x22
 800c158:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c15c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800c160:	6282      	str	r2, [r0, #40]	; 0x28
 800c162:	4770      	bx	lr
 800c164:	08023adc 	.word	0x08023adc

0800c168 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800c168:	6301      	str	r1, [r0, #48]	; 0x30
 800c16a:	4770      	bx	lr

0800c16c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800c16c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800c16e:	4770      	bx	lr

0800c170 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800c170:	6341      	str	r1, [r0, #52]	; 0x34
 800c172:	4770      	bx	lr

0800c174 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800c174:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800c176:	4770      	bx	lr

0800c178 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800c178:	4770      	bx	lr

0800c17a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800c17a:	4608      	mov	r0, r1
 800c17c:	4770      	bx	lr

0800c17e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800c17e:	4608      	mov	r0, r1
 800c180:	4770      	bx	lr

0800c182 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800c182:	b530      	push	{r4, r5, lr}
 800c184:	460d      	mov	r5, r1
 800c186:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c188:	8949      	ldrh	r1, [r1, #10]
 800c18a:	1ac9      	subs	r1, r1, r3
 800c18c:	6803      	ldr	r3, [r0, #0]
 800c18e:	b085      	sub	sp, #20
 800c190:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c194:	f10d 0206 	add.w	r2, sp, #6
 800c198:	b209      	sxth	r1, r1
 800c19a:	4604      	mov	r4, r0
 800c19c:	4798      	blx	r3
 800c19e:	b1a0      	cbz	r0, 800c1ca <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c1a0:	792b      	ldrb	r3, [r5, #4]
 800c1a2:	b993      	cbnz	r3, 800c1ca <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c1a4:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c1a8:	b178      	cbz	r0, 800c1ca <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c1aa:	6803      	ldr	r3, [r0, #0]
 800c1ac:	68db      	ldr	r3, [r3, #12]
 800c1ae:	4798      	blx	r3
 800c1b0:	b158      	cbz	r0, 800c1ca <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c1b2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c1b6:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c1ba:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c1be:	9503      	str	r5, [sp, #12]
 800c1c0:	6803      	ldr	r3, [r0, #0]
 800c1c2:	aa02      	add	r2, sp, #8
 800c1c4:	689b      	ldr	r3, [r3, #8]
 800c1c6:	4621      	mov	r1, r4
 800c1c8:	4798      	blx	r3
 800c1ca:	b005      	add	sp, #20
 800c1cc:	bd30      	pop	{r4, r5, pc}

0800c1ce <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800c1ce:	b510      	push	{r4, lr}
 800c1d0:	428a      	cmp	r2, r1
 800c1d2:	bfbe      	ittt	lt
 800c1d4:	460b      	movlt	r3, r1
 800c1d6:	4611      	movlt	r1, r2
 800c1d8:	461a      	movlt	r2, r3
 800c1da:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800c1de:	428b      	cmp	r3, r1
 800c1e0:	4604      	mov	r4, r0
 800c1e2:	d103      	bne.n	800c1ec <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800c1e4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800c1e8:	4293      	cmp	r3, r2
 800c1ea:	d011      	beq.n	800c210 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800c1ec:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800c1f0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800c1f4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c1f8:	f005 ffe9 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c1fc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c200:	f005 ffe5 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c204:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c208:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c20c:	f005 bfdf 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c210:	bd10      	pop	{r4, pc}

0800c212 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800c212:	b510      	push	{r4, lr}
 800c214:	428a      	cmp	r2, r1
 800c216:	bfbe      	ittt	lt
 800c218:	460b      	movlt	r3, r1
 800c21a:	4611      	movlt	r1, r2
 800c21c:	461a      	movlt	r2, r3
 800c21e:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800c222:	428b      	cmp	r3, r1
 800c224:	4604      	mov	r4, r0
 800c226:	d103      	bne.n	800c230 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800c228:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800c22c:	4293      	cmp	r3, r2
 800c22e:	d011      	beq.n	800c254 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800c230:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800c234:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800c238:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c23c:	f005 ffc7 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c240:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c244:	f005 ffc3 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c248:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c24c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c250:	f005 bfbd 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c254:	bd10      	pop	{r4, pc}

0800c256 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c256:	2300      	movs	r3, #0
 800c258:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800c25c:	3038      	adds	r0, #56	; 0x38
 800c25e:	f005 bfb6 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>

0800c262 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800c262:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c266:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c26a:	4605      	mov	r5, r0
 800c26c:	4688      	mov	r8, r1
 800c26e:	4617      	mov	r7, r2
 800c270:	2b00      	cmp	r3, #0
 800c272:	d03f      	beq.n	800c2f4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c274:	6803      	ldr	r3, [r0, #0]
 800c276:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800c27a:	4798      	blx	r3
 800c27c:	682b      	ldr	r3, [r5, #0]
 800c27e:	4604      	mov	r4, r0
 800c280:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800c284:	4628      	mov	r0, r5
 800c286:	4798      	blx	r3
 800c288:	4284      	cmp	r4, r0
 800c28a:	bfc8      	it	gt
 800c28c:	4623      	movgt	r3, r4
 800c28e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800c292:	bfc4      	itt	gt
 800c294:	4604      	movgt	r4, r0
 800c296:	4618      	movgt	r0, r3
 800c298:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800c29c:	42b3      	cmp	r3, r6
 800c29e:	da29      	bge.n	800c2f4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c2a0:	42b0      	cmp	r0, r6
 800c2a2:	bfa8      	it	ge
 800c2a4:	4630      	movge	r0, r6
 800c2a6:	2800      	cmp	r0, #0
 800c2a8:	db24      	blt.n	800c2f4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c2aa:	f1b8 0f00 	cmp.w	r8, #0
 800c2ae:	d11e      	bne.n	800c2ee <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800c2b0:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800c2b4:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c2b8:	460c      	mov	r4, r1
 800c2ba:	009a      	lsls	r2, r3, #2
 800c2bc:	4298      	cmp	r0, r3
 800c2be:	dd0b      	ble.n	800c2d8 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800c2c0:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800c2c4:	58b6      	ldr	r6, [r6, r2]
 800c2c6:	42b1      	cmp	r1, r6
 800c2c8:	bfa8      	it	ge
 800c2ca:	4631      	movge	r1, r6
 800c2cc:	42b4      	cmp	r4, r6
 800c2ce:	bfb8      	it	lt
 800c2d0:	4634      	movlt	r4, r6
 800c2d2:	3301      	adds	r3, #1
 800c2d4:	3204      	adds	r2, #4
 800c2d6:	e7f1      	b.n	800c2bc <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800c2d8:	1bc9      	subs	r1, r1, r7
 800c2da:	193a      	adds	r2, r7, r4
 800c2dc:	4291      	cmp	r1, r2
 800c2de:	d009      	beq.n	800c2f4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c2e0:	682b      	ldr	r3, [r5, #0]
 800c2e2:	4628      	mov	r0, r5
 800c2e4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c2e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c2ec:	4718      	bx	r3
 800c2ee:	427c      	negs	r4, r7
 800c2f0:	4639      	mov	r1, r7
 800c2f2:	e7e2      	b.n	800c2ba <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800c2f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c2f8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c2f8:	b530      	push	{r4, r5, lr}
 800c2fa:	790b      	ldrb	r3, [r1, #4]
 800c2fc:	2b02      	cmp	r3, #2
 800c2fe:	b085      	sub	sp, #20
 800c300:	4604      	mov	r4, r0
 800c302:	460d      	mov	r5, r1
 800c304:	d020      	beq.n	800c348 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c306:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c308:	88c9      	ldrh	r1, [r1, #6]
 800c30a:	1ac9      	subs	r1, r1, r3
 800c30c:	6803      	ldr	r3, [r0, #0]
 800c30e:	f10d 0206 	add.w	r2, sp, #6
 800c312:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c316:	b209      	sxth	r1, r1
 800c318:	4798      	blx	r3
 800c31a:	b1a8      	cbz	r0, 800c348 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c31c:	792b      	ldrb	r3, [r5, #4]
 800c31e:	2b01      	cmp	r3, #1
 800c320:	d812      	bhi.n	800c348 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c322:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c326:	b178      	cbz	r0, 800c348 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c328:	6803      	ldr	r3, [r0, #0]
 800c32a:	68db      	ldr	r3, [r3, #12]
 800c32c:	4798      	blx	r3
 800c32e:	b158      	cbz	r0, 800c348 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c330:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c334:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c338:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c33c:	9503      	str	r5, [sp, #12]
 800c33e:	6803      	ldr	r3, [r0, #0]
 800c340:	aa02      	add	r2, sp, #8
 800c342:	689b      	ldr	r3, [r3, #8]
 800c344:	4621      	mov	r1, r4
 800c346:	4798      	blx	r3
 800c348:	b005      	add	sp, #20
 800c34a:	bd30      	pop	{r4, r5, pc}

0800c34c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800c34c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c350:	4604      	mov	r4, r0
 800c352:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c356:	9e06      	ldr	r6, [sp, #24]
 800c358:	4690      	mov	r8, r2
 800c35a:	461f      	mov	r7, r3
 800c35c:	b928      	cbnz	r0, 800c36a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800c35e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c362:	8033      	strh	r3, [r6, #0]
 800c364:	803b      	strh	r3, [r7, #0]
 800c366:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c36a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c36e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800c372:	1883      	adds	r3, r0, r2
 800c374:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c378:	1ad2      	subs	r2, r2, r3
 800c37a:	b212      	sxth	r2, r2
 800c37c:	2a01      	cmp	r2, #1
 800c37e:	dc07      	bgt.n	800c390 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800c380:	2300      	movs	r3, #0
 800c382:	803b      	strh	r3, [r7, #0]
 800c384:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800c388:	3b01      	subs	r3, #1
 800c38a:	8033      	strh	r3, [r6, #0]
 800c38c:	2001      	movs	r0, #1
 800c38e:	e7ea      	b.n	800c366 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c390:	1a08      	subs	r0, r1, r0
 800c392:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c396:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c39a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c39c:	1a5b      	subs	r3, r3, r1
 800c39e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c3a2:	d45b      	bmi.n	800c45c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800c3a4:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800c3a8:	fb93 f1f5 	sdiv	r1, r3, r5
 800c3ac:	2302      	movs	r3, #2
 800c3ae:	fb91 f1f3 	sdiv	r1, r1, r3
 800c3b2:	3a01      	subs	r2, #1
 800c3b4:	f006 f8cc 	bl	8012550 <_ZN8touchgfx6muldivElll>
 800c3b8:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c3bc:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800c3c0:	2900      	cmp	r1, #0
 800c3c2:	db57      	blt.n	800c474 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800c3c4:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800c3c8:	2502      	movs	r5, #2
 800c3ca:	fb93 f3fc 	sdiv	r3, r3, ip
 800c3ce:	fb93 f3f5 	sdiv	r3, r3, r5
 800c3d2:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800c3d6:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800c3da:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800c3de:	1a52      	subs	r2, r2, r1
 800c3e0:	eba8 0003 	sub.w	r0, r8, r3
 800c3e4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c3e8:	d450      	bmi.n	800c48c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800c3ea:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800c3ee:	fb92 f1fc 	sdiv	r1, r2, ip
 800c3f2:	2202      	movs	r2, #2
 800c3f4:	fb91 f1f2 	sdiv	r1, r1, r2
 800c3f8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c3fc:	4413      	add	r3, r2
 800c3fe:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c402:	1ad2      	subs	r2, r2, r3
 800c404:	b212      	sxth	r2, r2
 800c406:	3a01      	subs	r2, #1
 800c408:	f006 f8a2 	bl	8012550 <_ZN8touchgfx6muldivElll>
 800c40c:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c410:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c412:	2b00      	cmp	r3, #0
 800c414:	db46      	blt.n	800c4a4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800c416:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800c41a:	fb93 f3f2 	sdiv	r3, r3, r2
 800c41e:	2202      	movs	r2, #2
 800c420:	fb93 f3f2 	sdiv	r3, r3, r2
 800c424:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800c428:	429d      	cmp	r5, r3
 800c42a:	bfde      	ittt	le
 800c42c:	461a      	movle	r2, r3
 800c42e:	462b      	movle	r3, r5
 800c430:	4615      	movle	r5, r2
 800c432:	2d00      	cmp	r5, #0
 800c434:	bfa4      	itt	ge
 800c436:	351f      	addge	r5, #31
 800c438:	116d      	asrge	r5, r5, #5
 800c43a:	f04f 0020 	mov.w	r0, #32
 800c43e:	bfb8      	it	lt
 800c440:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c444:	b22d      	sxth	r5, r5
 800c446:	2d00      	cmp	r5, #0
 800c448:	b21b      	sxth	r3, r3
 800c44a:	fb93 f3f0 	sdiv	r3, r3, r0
 800c44e:	803b      	strh	r3, [r7, #0]
 800c450:	8035      	strh	r5, [r6, #0]
 800c452:	da33      	bge.n	800c4bc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c454:	2000      	movs	r0, #0
 800c456:	8030      	strh	r0, [r6, #0]
 800c458:	8038      	strh	r0, [r7, #0]
 800c45a:	e784      	b.n	800c366 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c45c:	f06f 0101 	mvn.w	r1, #1
 800c460:	fb01 5303 	mla	r3, r1, r3, r5
 800c464:	1e59      	subs	r1, r3, #1
 800c466:	2302      	movs	r3, #2
 800c468:	fb91 f1f5 	sdiv	r1, r1, r5
 800c46c:	fb91 f1f3 	sdiv	r1, r1, r3
 800c470:	4249      	negs	r1, r1
 800c472:	e79e      	b.n	800c3b2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c474:	f06f 0301 	mvn.w	r3, #1
 800c478:	fb03 c301 	mla	r3, r3, r1, ip
 800c47c:	3b01      	subs	r3, #1
 800c47e:	2502      	movs	r5, #2
 800c480:	fb93 f3fc 	sdiv	r3, r3, ip
 800c484:	fb93 f3f5 	sdiv	r3, r3, r5
 800c488:	425b      	negs	r3, r3
 800c48a:	e7a2      	b.n	800c3d2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c48c:	f06f 0101 	mvn.w	r1, #1
 800c490:	fb01 c202 	mla	r2, r1, r2, ip
 800c494:	1e51      	subs	r1, r2, #1
 800c496:	2202      	movs	r2, #2
 800c498:	fb91 f1fc 	sdiv	r1, r1, ip
 800c49c:	fb91 f1f2 	sdiv	r1, r1, r2
 800c4a0:	4249      	negs	r1, r1
 800c4a2:	e7a9      	b.n	800c3f8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c4a4:	f06f 0101 	mvn.w	r1, #1
 800c4a8:	fb01 2303 	mla	r3, r1, r3, r2
 800c4ac:	3b01      	subs	r3, #1
 800c4ae:	fb93 f3f2 	sdiv	r3, r3, r2
 800c4b2:	2202      	movs	r2, #2
 800c4b4:	fb93 f3f2 	sdiv	r3, r3, r2
 800c4b8:	425b      	negs	r3, r3
 800c4ba:	e7b3      	b.n	800c424 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c4bc:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c4c0:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c4c4:	4293      	cmp	r3, r2
 800c4c6:	dc05      	bgt.n	800c4d4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c4c8:	3b01      	subs	r3, #1
 800c4ca:	b21b      	sxth	r3, r3
 800c4cc:	8033      	strh	r3, [r6, #0]
 800c4ce:	2000      	movs	r0, #0
 800c4d0:	803b      	strh	r3, [r7, #0]
 800c4d2:	e748      	b.n	800c366 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c4d4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c4d8:	803a      	strh	r2, [r7, #0]
 800c4da:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c4de:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c4e2:	4293      	cmp	r3, r2
 800c4e4:	bfdc      	itt	le
 800c4e6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c4ea:	b21a      	sxthle	r2, r3
 800c4ec:	8032      	strh	r2, [r6, #0]
 800c4ee:	e74d      	b.n	800c38c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c4f0 <_ZN8touchgfx9ContainerC1Ev>:
 800c4f0:	2101      	movs	r1, #1
 800c4f2:	2200      	movs	r2, #0
 800c4f4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c4f8:	4909      	ldr	r1, [pc, #36]	; (800c520 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c4fa:	8082      	strh	r2, [r0, #4]
 800c4fc:	80c2      	strh	r2, [r0, #6]
 800c4fe:	8102      	strh	r2, [r0, #8]
 800c500:	8142      	strh	r2, [r0, #10]
 800c502:	8182      	strh	r2, [r0, #12]
 800c504:	81c2      	strh	r2, [r0, #14]
 800c506:	8202      	strh	r2, [r0, #16]
 800c508:	8242      	strh	r2, [r0, #18]
 800c50a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c50e:	61c2      	str	r2, [r0, #28]
 800c510:	8402      	strh	r2, [r0, #32]
 800c512:	8442      	strh	r2, [r0, #34]	; 0x22
 800c514:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c518:	6001      	str	r1, [r0, #0]
 800c51a:	6282      	str	r2, [r0, #40]	; 0x28
 800c51c:	4770      	bx	lr
 800c51e:	bf00      	nop
 800c520:	080239e4 	.word	0x080239e4

0800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c524:	6800      	ldr	r0, [r0, #0]
 800c526:	2800      	cmp	r0, #0
 800c528:	bfbd      	ittte	lt
 800c52a:	380f      	sublt	r0, #15
 800c52c:	2320      	movlt	r3, #32
 800c52e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c532:	3010      	addge	r0, #16
 800c534:	bfa8      	it	ge
 800c536:	1140      	asrge	r0, r0, #5
 800c538:	4770      	bx	lr

0800c53a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c53a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c53e:	4605      	mov	r5, r0
 800c540:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c544:	4688      	mov	r8, r1
 800c546:	4691      	mov	r9, r2
 800c548:	469a      	mov	sl, r3
 800c54a:	b360      	cbz	r0, 800c5a6 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c54c:	2700      	movs	r7, #0
 800c54e:	f04f 3bff 	mov.w	fp, #4294967295
 800c552:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c556:	b23e      	sxth	r6, r7
 800c558:	42b3      	cmp	r3, r6
 800c55a:	dd23      	ble.n	800c5a4 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c55c:	682b      	ldr	r3, [r5, #0]
 800c55e:	4631      	mov	r1, r6
 800c560:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c564:	4628      	mov	r0, r5
 800c566:	4798      	blx	r3
 800c568:	9001      	str	r0, [sp, #4]
 800c56a:	a801      	add	r0, sp, #4
 800c56c:	f7ff ffda 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c570:	682b      	ldr	r3, [r5, #0]
 800c572:	eba0 0008 	sub.w	r0, r0, r8
 800c576:	b204      	sxth	r4, r0
 800c578:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c57c:	4631      	mov	r1, r6
 800c57e:	4628      	mov	r0, r5
 800c580:	4798      	blx	r3
 800c582:	9001      	str	r0, [sp, #4]
 800c584:	a801      	add	r0, sp, #4
 800c586:	f7ff ffcd 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c58a:	eba0 0009 	sub.w	r0, r0, r9
 800c58e:	fb10 f000 	smulbb	r0, r0, r0
 800c592:	fb04 0404 	mla	r4, r4, r4, r0
 800c596:	455c      	cmp	r4, fp
 800c598:	bf3c      	itt	cc
 800c59a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c59e:	46a3      	movcc	fp, r4
 800c5a0:	3701      	adds	r7, #1
 800c5a2:	e7d6      	b.n	800c552 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c5a4:	2001      	movs	r0, #1
 800c5a6:	b003      	add	sp, #12
 800c5a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c5ac <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c5ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c5b0:	4604      	mov	r4, r0
 800c5b2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c5b6:	4688      	mov	r8, r1
 800c5b8:	4691      	mov	r9, r2
 800c5ba:	b1f8      	cbz	r0, 800c5fc <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c5bc:	2500      	movs	r5, #0
 800c5be:	f04f 37ff 	mov.w	r7, #4294967295
 800c5c2:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c5c6:	b22e      	sxth	r6, r5
 800c5c8:	42b3      	cmp	r3, r6
 800c5ca:	dd16      	ble.n	800c5fa <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c5cc:	6823      	ldr	r3, [r4, #0]
 800c5ce:	4631      	mov	r1, r6
 800c5d0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c5d4:	4620      	mov	r0, r4
 800c5d6:	4798      	blx	r3
 800c5d8:	9001      	str	r0, [sp, #4]
 800c5da:	a801      	add	r0, sp, #4
 800c5dc:	f7ff ffa2 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c5e0:	b200      	sxth	r0, r0
 800c5e2:	eba0 0008 	sub.w	r0, r0, r8
 800c5e6:	2800      	cmp	r0, #0
 800c5e8:	bfb8      	it	lt
 800c5ea:	4240      	neglt	r0, r0
 800c5ec:	42b8      	cmp	r0, r7
 800c5ee:	bf3c      	itt	cc
 800c5f0:	f8a9 6000 	strhcc.w	r6, [r9]
 800c5f4:	4607      	movcc	r7, r0
 800c5f6:	3501      	adds	r5, #1
 800c5f8:	e7e3      	b.n	800c5c2 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c5fa:	2001      	movs	r0, #1
 800c5fc:	b003      	add	sp, #12
 800c5fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c602 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c602:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c606:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c60a:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c60e:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c612:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c616:	4770      	bx	lr

0800c618 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c618:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c61a:	4604      	mov	r4, r0
 800c61c:	3038      	adds	r0, #56	; 0x38
 800c61e:	460d      	mov	r5, r1
 800c620:	f7fe fb1c 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c624:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c628:	9200      	str	r2, [sp, #0]
 800c62a:	2200      	movs	r2, #0
 800c62c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c630:	4611      	mov	r1, r2
 800c632:	4628      	mov	r0, r5
 800c634:	f7f6 fc53 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c638:	b003      	add	sp, #12
 800c63a:	bd30      	pop	{r4, r5, pc}

0800c63c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c63c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c63e:	4604      	mov	r4, r0
 800c640:	3064      	adds	r0, #100	; 0x64
 800c642:	460d      	mov	r5, r1
 800c644:	f7fe fb0a 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c648:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c64c:	9200      	str	r2, [sp, #0]
 800c64e:	2200      	movs	r2, #0
 800c650:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c654:	4611      	mov	r1, r2
 800c656:	4628      	mov	r0, r5
 800c658:	f7f6 fc41 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c65c:	b003      	add	sp, #12
 800c65e:	bd30      	pop	{r4, r5, pc}

0800c660 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c660:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c662:	4604      	mov	r4, r0
 800c664:	30e8      	adds	r0, #232	; 0xe8
 800c666:	460d      	mov	r5, r1
 800c668:	f7fe faf8 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c66c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c670:	9200      	str	r2, [sp, #0]
 800c672:	2200      	movs	r2, #0
 800c674:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c678:	4611      	mov	r1, r2
 800c67a:	4628      	mov	r0, r5
 800c67c:	f7f6 fc2f 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c680:	b003      	add	sp, #12
 800c682:	bd30      	pop	{r4, r5, pc}

0800c684 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c684:	b538      	push	{r3, r4, r5, lr}
 800c686:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c68a:	428b      	cmp	r3, r1
 800c68c:	460d      	mov	r5, r1
 800c68e:	dd08      	ble.n	800c6a2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c690:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c692:	b134      	cbz	r4, 800c6a2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c694:	6823      	ldr	r3, [r4, #0]
 800c696:	4620      	mov	r0, r4
 800c698:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c69a:	4629      	mov	r1, r5
 800c69c:	4798      	blx	r3
 800c69e:	69a4      	ldr	r4, [r4, #24]
 800c6a0:	e7f7      	b.n	800c692 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c6a2:	bd38      	pop	{r3, r4, r5, pc}

0800c6a4 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c6a4:	b570      	push	{r4, r5, r6, lr}
 800c6a6:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c6aa:	4606      	mov	r6, r0
 800c6ac:	460d      	mov	r5, r1
 800c6ae:	b134      	cbz	r4, 800c6be <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c6b0:	6823      	ldr	r3, [r4, #0]
 800c6b2:	4620      	mov	r0, r4
 800c6b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c6b6:	4629      	mov	r1, r5
 800c6b8:	4798      	blx	r3
 800c6ba:	69a4      	ldr	r4, [r4, #24]
 800c6bc:	e7f7      	b.n	800c6ae <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c6be:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c6c2:	b134      	cbz	r4, 800c6d2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c6c4:	6823      	ldr	r3, [r4, #0]
 800c6c6:	4620      	mov	r0, r4
 800c6c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c6ca:	4629      	mov	r1, r5
 800c6cc:	4798      	blx	r3
 800c6ce:	69a4      	ldr	r4, [r4, #24]
 800c6d0:	e7f7      	b.n	800c6c2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c6d2:	bd70      	pop	{r4, r5, r6, pc}

0800c6d4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c6d4:	b538      	push	{r3, r4, r5, lr}
 800c6d6:	4604      	mov	r4, r0
 800c6d8:	2500      	movs	r5, #0
 800c6da:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c6de:	42ab      	cmp	r3, r5
 800c6e0:	db05      	blt.n	800c6ee <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c6e2:	b229      	sxth	r1, r5
 800c6e4:	4620      	mov	r0, r4
 800c6e6:	f7ff ffdd 	bl	800c6a4 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c6ea:	3501      	adds	r5, #1
 800c6ec:	e7f5      	b.n	800c6da <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c6ee:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c6f2:	f005 fd6c 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c6f6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c6fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c6fe:	f005 bd66 	b.w	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>

0800c702 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c702:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c704:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c706:	4604      	mov	r4, r0
 800c708:	b15d      	cbz	r5, 800c722 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c70a:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c70e:	9200      	str	r2, [sp, #0]
 800c710:	2200      	movs	r2, #0
 800c712:	4628      	mov	r0, r5
 800c714:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c718:	4611      	mov	r1, r2
 800c71a:	f7f6 fbe0 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c71e:	69ad      	ldr	r5, [r5, #24]
 800c720:	e7f2      	b.n	800c708 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c722:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c726:	b15d      	cbz	r5, 800c740 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c728:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c72c:	9200      	str	r2, [sp, #0]
 800c72e:	2200      	movs	r2, #0
 800c730:	4628      	mov	r0, r5
 800c732:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c736:	4611      	mov	r1, r2
 800c738:	f7f6 fbd1 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c73c:	69ad      	ldr	r5, [r5, #24]
 800c73e:	e7f2      	b.n	800c726 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c740:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c744:	b15d      	cbz	r5, 800c75e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c746:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c74a:	9200      	str	r2, [sp, #0]
 800c74c:	2200      	movs	r2, #0
 800c74e:	4628      	mov	r0, r5
 800c750:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c754:	4611      	mov	r1, r2
 800c756:	f7f6 fbc2 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c75a:	69ad      	ldr	r5, [r5, #24]
 800c75c:	e7f2      	b.n	800c744 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c75e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c762:	b15d      	cbz	r5, 800c77c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c764:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c768:	9200      	str	r2, [sp, #0]
 800c76a:	2200      	movs	r2, #0
 800c76c:	4628      	mov	r0, r5
 800c76e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c772:	4611      	mov	r1, r2
 800c774:	f7f6 fbb3 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c778:	69ad      	ldr	r5, [r5, #24]
 800c77a:	e7f2      	b.n	800c762 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c77c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c780:	b15d      	cbz	r5, 800c79a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c782:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c786:	9200      	str	r2, [sp, #0]
 800c788:	2200      	movs	r2, #0
 800c78a:	4628      	mov	r0, r5
 800c78c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c790:	4611      	mov	r1, r2
 800c792:	f7f6 fba4 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c796:	69ad      	ldr	r5, [r5, #24]
 800c798:	e7f2      	b.n	800c780 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c79a:	6823      	ldr	r3, [r4, #0]
 800c79c:	695b      	ldr	r3, [r3, #20]
 800c79e:	4620      	mov	r0, r4
 800c7a0:	b003      	add	sp, #12
 800c7a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c7a6:	4718      	bx	r3

0800c7a8 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c7a8:	b430      	push	{r4, r5}
 800c7aa:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c7ae:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c7b2:	b28a      	uxth	r2, r1
 800c7b4:	1b15      	subs	r5, r2, r4
 800c7b6:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c7ba:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c7be:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c7c2:	442c      	add	r4, r5
 800c7c4:	1b12      	subs	r2, r2, r4
 800c7c6:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c7ca:	8101      	strh	r1, [r0, #8]
 800c7cc:	bc30      	pop	{r4, r5}
 800c7ce:	f7ff bf98 	b.w	800c702 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c7d2 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c7d2:	b430      	push	{r4, r5}
 800c7d4:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c7d8:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c7dc:	b28a      	uxth	r2, r1
 800c7de:	1b15      	subs	r5, r2, r4
 800c7e0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c7e4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c7e8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c7ec:	442c      	add	r4, r5
 800c7ee:	1b12      	subs	r2, r2, r4
 800c7f0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c7f4:	8141      	strh	r1, [r0, #10]
 800c7f6:	bc30      	pop	{r4, r5}
 800c7f8:	f7ff bf83 	b.w	800c702 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c7fc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c7fc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c800:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c804:	fa1f fa83 	uxth.w	sl, r3
 800c808:	4699      	mov	r9, r3
 800c80a:	8903      	ldrh	r3, [r0, #8]
 800c80c:	4604      	mov	r4, r0
 800c80e:	4615      	mov	r5, r2
 800c810:	fa1f f887 	uxth.w	r8, r7
 800c814:	4452      	add	r2, sl
 800c816:	8940      	ldrh	r0, [r0, #10]
 800c818:	1a9b      	subs	r3, r3, r2
 800c81a:	eb08 0201 	add.w	r2, r8, r1
 800c81e:	1a80      	subs	r0, r0, r2
 800c820:	b200      	sxth	r0, r0
 800c822:	460e      	mov	r6, r1
 800c824:	9000      	str	r0, [sp, #0]
 800c826:	460a      	mov	r2, r1
 800c828:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c82c:	4629      	mov	r1, r5
 800c82e:	b21b      	sxth	r3, r3
 800c830:	f7f6 fb55 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c834:	2200      	movs	r2, #0
 800c836:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c83a:	9600      	str	r6, [sp, #0]
 800c83c:	4611      	mov	r1, r2
 800c83e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c842:	f7f6 fb4c 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c846:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c84a:	9300      	str	r3, [sp, #0]
 800c84c:	2200      	movs	r2, #0
 800c84e:	462b      	mov	r3, r5
 800c850:	4611      	mov	r1, r2
 800c852:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c856:	f7f6 fb42 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c85a:	8921      	ldrh	r1, [r4, #8]
 800c85c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c860:	9300      	str	r3, [sp, #0]
 800c862:	eba1 010a 	sub.w	r1, r1, sl
 800c866:	464b      	mov	r3, r9
 800c868:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c86c:	2200      	movs	r2, #0
 800c86e:	b209      	sxth	r1, r1
 800c870:	f7f6 fb35 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c874:	8962      	ldrh	r2, [r4, #10]
 800c876:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c87a:	9700      	str	r7, [sp, #0]
 800c87c:	eba2 0208 	sub.w	r2, r2, r8
 800c880:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c884:	b212      	sxth	r2, r2
 800c886:	2100      	movs	r1, #0
 800c888:	f7f6 fb29 	bl	8002ede <_ZN8touchgfx8Drawable11setPositionEssss>
 800c88c:	4620      	mov	r0, r4
 800c88e:	b002      	add	sp, #8
 800c890:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c894:	f7ff bf35 	b.w	800c702 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c898 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c89c:	b085      	sub	sp, #20
 800c89e:	4604      	mov	r4, r0
 800c8a0:	9103      	str	r1, [sp, #12]
 800c8a2:	f7ff fe25 	bl	800c4f0 <_ZN8touchgfx9ContainerC1Ev>
 800c8a6:	4b2d      	ldr	r3, [pc, #180]	; (800c95c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c8a8:	6023      	str	r3, [r4, #0]
 800c8aa:	2601      	movs	r6, #1
 800c8ac:	23ff      	movs	r3, #255	; 0xff
 800c8ae:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c8b2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c8b6:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c8ba:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c8be:	4658      	mov	r0, fp
 800c8c0:	f7ff fe16 	bl	800c4f0 <_ZN8touchgfx9ContainerC1Ev>
 800c8c4:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c8c8:	4648      	mov	r0, r9
 800c8ca:	f7ff fe11 	bl	800c4f0 <_ZN8touchgfx9ContainerC1Ev>
 800c8ce:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c8d2:	4640      	mov	r0, r8
 800c8d4:	f7ff fe0c 	bl	800c4f0 <_ZN8touchgfx9ContainerC1Ev>
 800c8d8:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c8dc:	4650      	mov	r0, sl
 800c8de:	f7ff fe07 	bl	800c4f0 <_ZN8touchgfx9ContainerC1Ev>
 800c8e2:	4638      	mov	r0, r7
 800c8e4:	f7ff fe04 	bl	800c4f0 <_ZN8touchgfx9ContainerC1Ev>
 800c8e8:	2500      	movs	r5, #0
 800c8ea:	9903      	ldr	r1, [sp, #12]
 800c8ec:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c8f0:	4620      	mov	r0, r4
 800c8f2:	4659      	mov	r1, fp
 800c8f4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c8f8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c8fc:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c900:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c904:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c908:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c90c:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c910:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c914:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c918:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c91c:	f7fe f99e 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c920:	4651      	mov	r1, sl
 800c922:	4620      	mov	r0, r4
 800c924:	f7fe f99a 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c928:	4649      	mov	r1, r9
 800c92a:	4620      	mov	r0, r4
 800c92c:	f7fe f996 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c930:	4641      	mov	r1, r8
 800c932:	4620      	mov	r0, r4
 800c934:	f7fe f992 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c938:	4639      	mov	r1, r7
 800c93a:	4620      	mov	r0, r4
 800c93c:	f7fe f98e 	bl	800ac5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c940:	4620      	mov	r0, r4
 800c942:	9500      	str	r5, [sp, #0]
 800c944:	462b      	mov	r3, r5
 800c946:	462a      	mov	r2, r5
 800c948:	4629      	mov	r1, r5
 800c94a:	f7ff ff57 	bl	800c7fc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c94e:	4620      	mov	r0, r4
 800c950:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c954:	b005      	add	sp, #20
 800c956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c95a:	bf00      	nop
 800c95c:	08023cec 	.word	0x08023cec

0800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c960:	4291      	cmp	r1, r2
 800c962:	4613      	mov	r3, r2
 800c964:	d003      	beq.n	800c96e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c966:	460a      	mov	r2, r1
 800c968:	4619      	mov	r1, r3
 800c96a:	f005 bdf1 	b.w	8012550 <_ZN8touchgfx6muldivElll>
 800c96e:	4770      	bx	lr

0800c970 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c970:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c974:	6803      	ldr	r3, [r0, #0]
 800c976:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c97a:	460d      	mov	r5, r1
 800c97c:	4604      	mov	r4, r0
 800c97e:	4798      	blx	r3
 800c980:	42a8      	cmp	r0, r5
 800c982:	4606      	mov	r6, r0
 800c984:	d024      	beq.n	800c9d0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c986:	6823      	ldr	r3, [r4, #0]
 800c988:	4601      	mov	r1, r0
 800c98a:	462a      	mov	r2, r5
 800c98c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c990:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c994:	f7ff ffe4 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c998:	462a      	mov	r2, r5
 800c99a:	4680      	mov	r8, r0
 800c99c:	4631      	mov	r1, r6
 800c99e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c9a2:	f7ff ffdd 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c9a6:	4641      	mov	r1, r8
 800c9a8:	4602      	mov	r2, r0
 800c9aa:	4620      	mov	r0, r4
 800c9ac:	47b8      	blx	r7
 800c9ae:	462a      	mov	r2, r5
 800c9b0:	4631      	mov	r1, r6
 800c9b2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c9b6:	f7ff ffd3 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c9ba:	462a      	mov	r2, r5
 800c9bc:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c9c0:	4631      	mov	r1, r6
 800c9c2:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c9c6:	f7ff ffcb 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c9ca:	6325      	str	r5, [r4, #48]	; 0x30
 800c9cc:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c9d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c9d4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c9d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c9d8:	4604      	mov	r4, r0
 800c9da:	460f      	mov	r7, r1
 800c9dc:	b1ba      	cbz	r2, 800ca0e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c9de:	6803      	ldr	r3, [r0, #0]
 800c9e0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c9e4:	4798      	blx	r3
 800c9e6:	2600      	movs	r6, #0
 800c9e8:	4681      	mov	r9, r0
 800c9ea:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c9ee:	b235      	sxth	r5, r6
 800c9f0:	42ab      	cmp	r3, r5
 800c9f2:	f106 0601 	add.w	r6, r6, #1
 800c9f6:	dd0a      	ble.n	800ca0e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c9f8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c9fc:	463a      	mov	r2, r7
 800c9fe:	4649      	mov	r1, r9
 800ca00:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800ca04:	f7ff ffac 	bl	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800ca08:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800ca0c:	e7ed      	b.n	800c9ea <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800ca0e:	6367      	str	r7, [r4, #52]	; 0x34
 800ca10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800ca14 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800ca14:	b570      	push	{r4, r5, r6, lr}
 800ca16:	6803      	ldr	r3, [r0, #0]
 800ca18:	4604      	mov	r4, r0
 800ca1a:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800ca1e:	460d      	mov	r5, r1
 800ca20:	4798      	blx	r3
 800ca22:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800ca26:	3301      	adds	r3, #1
 800ca28:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800ca2c:	6823      	ldr	r3, [r4, #0]
 800ca2e:	4629      	mov	r1, r5
 800ca30:	4620      	mov	r0, r4
 800ca32:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800ca36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ca3a:	4718      	bx	r3

0800ca3c <_ZN8touchgfx16GraphElementLineD1Ev>:
 800ca3c:	4770      	bx	lr

0800ca3e <_ZN8touchgfx16GraphElementLineD0Ev>:
 800ca3e:	b510      	push	{r4, lr}
 800ca40:	2130      	movs	r1, #48	; 0x30
 800ca42:	4604      	mov	r4, r0
 800ca44:	f013 ff48 	bl	80208d8 <_ZdlPvj>
 800ca48:	4620      	mov	r0, r4
 800ca4a:	bd10      	pop	{r4, pc}

0800ca4c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800ca4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca4e:	4604      	mov	r4, r0
 800ca50:	4608      	mov	r0, r1
 800ca52:	460d      	mov	r5, r1
 800ca54:	f7fe fad5 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ca58:	b978      	cbnz	r0, 800ca7a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800ca5a:	4620      	mov	r0, r4
 800ca5c:	f7fe fad1 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ca60:	f9b5 6000 	ldrsh.w	r6, [r5]
 800ca64:	b150      	cbz	r0, 800ca7c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800ca66:	8026      	strh	r6, [r4, #0]
 800ca68:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ca6c:	8063      	strh	r3, [r4, #2]
 800ca6e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800ca72:	80a3      	strh	r3, [r4, #4]
 800ca74:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ca78:	80e3      	strh	r3, [r4, #6]
 800ca7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca7c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ca80:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ca84:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800ca88:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800ca8c:	88ed      	ldrh	r5, [r5, #6]
 800ca8e:	42b1      	cmp	r1, r6
 800ca90:	460f      	mov	r7, r1
 800ca92:	bfa8      	it	ge
 800ca94:	4637      	movge	r7, r6
 800ca96:	4293      	cmp	r3, r2
 800ca98:	4618      	mov	r0, r3
 800ca9a:	4466      	add	r6, ip
 800ca9c:	bfa8      	it	ge
 800ca9e:	4610      	movge	r0, r2
 800caa0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800caa4:	8027      	strh	r7, [r4, #0]
 800caa6:	442a      	add	r2, r5
 800caa8:	88e5      	ldrh	r5, [r4, #6]
 800caaa:	8060      	strh	r0, [r4, #2]
 800caac:	4461      	add	r1, ip
 800caae:	442b      	add	r3, r5
 800cab0:	b236      	sxth	r6, r6
 800cab2:	b209      	sxth	r1, r1
 800cab4:	b212      	sxth	r2, r2
 800cab6:	b21b      	sxth	r3, r3
 800cab8:	428e      	cmp	r6, r1
 800caba:	bfac      	ite	ge
 800cabc:	ebc7 0106 	rsbge	r1, r7, r6
 800cac0:	ebc7 0101 	rsblt	r1, r7, r1
 800cac4:	429a      	cmp	r2, r3
 800cac6:	bfac      	ite	ge
 800cac8:	ebc0 0202 	rsbge	r2, r0, r2
 800cacc:	ebc0 0203 	rsblt	r2, r0, r3
 800cad0:	80a1      	strh	r1, [r4, #4]
 800cad2:	80e2      	strh	r2, [r4, #6]
 800cad4:	e7d1      	b.n	800ca7a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800cad6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800cad6:	6800      	ldr	r0, [r0, #0]
 800cad8:	2800      	cmp	r0, #0
 800cada:	bfb9      	ittee	lt
 800cadc:	2320      	movlt	r3, #32
 800cade:	fb90 f0f3 	sdivlt	r0, r0, r3
 800cae2:	301f      	addge	r0, #31
 800cae4:	1140      	asrge	r0, r0, #5
 800cae6:	4770      	bx	lr

0800cae8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800cae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800caec:	6803      	ldr	r3, [r0, #0]
 800caee:	6945      	ldr	r5, [r0, #20]
 800caf0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800caf2:	b093      	sub	sp, #76	; 0x4c
 800caf4:	4604      	mov	r4, r0
 800caf6:	460f      	mov	r7, r1
 800caf8:	2d00      	cmp	r5, #0
 800cafa:	f000 81ad 	beq.w	800ce58 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800cafe:	696d      	ldr	r5, [r5, #20]
 800cb00:	4798      	blx	r3
 800cb02:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cb06:	2b00      	cmp	r3, #0
 800cb08:	d077      	beq.n	800cbfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cb0a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cb0e:	fb13 f000 	smulbb	r0, r3, r0
 800cb12:	b283      	uxth	r3, r0
 800cb14:	1c58      	adds	r0, r3, #1
 800cb16:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800cb1a:	1200      	asrs	r0, r0, #8
 800cb1c:	d06d      	beq.n	800cbfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cb1e:	b2c3      	uxtb	r3, r0
 800cb20:	9308      	str	r3, [sp, #32]
 800cb22:	6823      	ldr	r3, [r4, #0]
 800cb24:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800cb28:	462a      	mov	r2, r5
 800cb2a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800cb2e:	4621      	mov	r1, r4
 800cb30:	4640      	mov	r0, r8
 800cb32:	4798      	blx	r3
 800cb34:	e898 0003 	ldmia.w	r8, {r0, r1}
 800cb38:	ae0e      	add	r6, sp, #56	; 0x38
 800cb3a:	e886 0003 	stmia.w	r6, {r0, r1}
 800cb3e:	4639      	mov	r1, r7
 800cb40:	4630      	mov	r0, r6
 800cb42:	f7fe fa1b 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800cb46:	6823      	ldr	r3, [r4, #0]
 800cb48:	4629      	mov	r1, r5
 800cb4a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cb4e:	4620      	mov	r0, r4
 800cb50:	4798      	blx	r3
 800cb52:	6823      	ldr	r3, [r4, #0]
 800cb54:	4607      	mov	r7, r0
 800cb56:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800cb5a:	4629      	mov	r1, r5
 800cb5c:	4620      	mov	r0, r4
 800cb5e:	4798      	blx	r3
 800cb60:	4681      	mov	r9, r0
 800cb62:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800cb66:	0103      	lsls	r3, r0, #4
 800cb68:	9309      	str	r3, [sp, #36]	; 0x24
 800cb6a:	6823      	ldr	r3, [r4, #0]
 800cb6c:	4629      	mov	r1, r5
 800cb6e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800cb72:	4620      	mov	r0, r4
 800cb74:	4798      	blx	r3
 800cb76:	b203      	sxth	r3, r0
 800cb78:	9306      	str	r3, [sp, #24]
 800cb7a:	6823      	ldr	r3, [r4, #0]
 800cb7c:	4629      	mov	r1, r5
 800cb7e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800cb82:	4620      	mov	r0, r4
 800cb84:	4798      	blx	r3
 800cb86:	2f00      	cmp	r7, #0
 800cb88:	b203      	sxth	r3, r0
 800cb8a:	9307      	str	r3, [sp, #28]
 800cb8c:	d138      	bne.n	800cc00 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800cb8e:	f1b9 0f00 	cmp.w	r9, #0
 800cb92:	d132      	bne.n	800cbfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cb94:	6823      	ldr	r3, [r4, #0]
 800cb96:	464a      	mov	r2, r9
 800cb98:	4629      	mov	r1, r5
 800cb9a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb9e:	4620      	mov	r0, r4
 800cba0:	4798      	blx	r3
 800cba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cba4:	1ac0      	subs	r0, r0, r3
 800cba6:	9010      	str	r0, [sp, #64]	; 0x40
 800cba8:	4640      	mov	r0, r8
 800cbaa:	f7ff fcbb 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cbae:	6823      	ldr	r3, [r4, #0]
 800cbb0:	4607      	mov	r7, r0
 800cbb2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cbb6:	4629      	mov	r1, r5
 800cbb8:	4620      	mov	r0, r4
 800cbba:	4798      	blx	r3
 800cbbc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cbc0:	1a38      	subs	r0, r7, r0
 800cbc2:	fa0f f880 	sxth.w	r8, r0
 800cbc6:	eb13 0f08 	cmn.w	r3, r8
 800cbca:	d416      	bmi.n	800cbfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cbcc:	6823      	ldr	r3, [r4, #0]
 800cbce:	4629      	mov	r1, r5
 800cbd0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800cbd4:	4620      	mov	r0, r4
 800cbd6:	4798      	blx	r3
 800cbd8:	4580      	cmp	r8, r0
 800cbda:	da0e      	bge.n	800cbfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cbdc:	9a08      	ldr	r2, [sp, #32]
 800cbde:	6823      	ldr	r3, [r4, #0]
 800cbe0:	9202      	str	r2, [sp, #8]
 800cbe2:	b23f      	sxth	r7, r7
 800cbe4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cbe8:	9201      	str	r2, [sp, #4]
 800cbea:	9700      	str	r7, [sp, #0]
 800cbec:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800cbf0:	4631      	mov	r1, r6
 800cbf2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cbf6:	4620      	mov	r0, r4
 800cbf8:	47a8      	blx	r5
 800cbfa:	b013      	add	sp, #76	; 0x4c
 800cbfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc00:	ddfb      	ble.n	800cbfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cc02:	6823      	ldr	r3, [r4, #0]
 800cc04:	4629      	mov	r1, r5
 800cc06:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800cc0a:	4620      	mov	r0, r4
 800cc0c:	4798      	blx	r3
 800cc0e:	6823      	ldr	r3, [r4, #0]
 800cc10:	4683      	mov	fp, r0
 800cc12:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800cc16:	4629      	mov	r1, r5
 800cc18:	4620      	mov	r0, r4
 800cc1a:	4798      	blx	r3
 800cc1c:	eba0 030b 	sub.w	r3, r0, fp
 800cc20:	2b00      	cmp	r3, #0
 800cc22:	bfb8      	it	lt
 800cc24:	425b      	neglt	r3, r3
 800cc26:	fb93 f3f7 	sdiv	r3, r3, r7
 800cc2a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800cc2e:	4680      	mov	r8, r0
 800cc30:	dce3      	bgt.n	800cbfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cc32:	6823      	ldr	r3, [r4, #0]
 800cc34:	465a      	mov	r2, fp
 800cc36:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc3a:	4629      	mov	r1, r5
 800cc3c:	4620      	mov	r0, r4
 800cc3e:	4798      	blx	r3
 800cc40:	6823      	ldr	r3, [r4, #0]
 800cc42:	4606      	mov	r6, r0
 800cc44:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc48:	4642      	mov	r2, r8
 800cc4a:	4629      	mov	r1, r5
 800cc4c:	4620      	mov	r0, r4
 800cc4e:	4798      	blx	r3
 800cc50:	42b0      	cmp	r0, r6
 800cc52:	bfa2      	ittt	ge
 800cc54:	4643      	movge	r3, r8
 800cc56:	46d8      	movge	r8, fp
 800cc58:	469b      	movge	fp, r3
 800cc5a:	45d8      	cmp	r8, fp
 800cc5c:	bfac      	ite	ge
 800cc5e:	f04f 33ff 	movge.w	r3, #4294967295
 800cc62:	2301      	movlt	r3, #1
 800cc64:	fb98 f6f7 	sdiv	r6, r8, r7
 800cc68:	fb9b f2f7 	sdiv	r2, fp, r7
 800cc6c:	1af6      	subs	r6, r6, r3
 800cc6e:	441a      	add	r2, r3
 800cc70:	4296      	cmp	r6, r2
 800cc72:	bfac      	ite	ge
 800cc74:	f04f 3aff 	movge.w	sl, #4294967295
 800cc78:	f04f 0a01 	movlt.w	sl, #1
 800cc7c:	f1b9 0f00 	cmp.w	r9, #0
 800cc80:	d13e      	bne.n	800cd00 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800cc82:	fb07 fb0a 	mul.w	fp, r7, sl
 800cc86:	eb0a 0802 	add.w	r8, sl, r2
 800cc8a:	4377      	muls	r7, r6
 800cc8c:	45b0      	cmp	r8, r6
 800cc8e:	d0b4      	beq.n	800cbfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cc90:	6823      	ldr	r3, [r4, #0]
 800cc92:	463a      	mov	r2, r7
 800cc94:	4629      	mov	r1, r5
 800cc96:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc9a:	4620      	mov	r0, r4
 800cc9c:	4798      	blx	r3
 800cc9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cca0:	1ac0      	subs	r0, r0, r3
 800cca2:	9010      	str	r0, [sp, #64]	; 0x40
 800cca4:	a810      	add	r0, sp, #64	; 0x40
 800cca6:	f7ff fc3d 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ccaa:	6823      	ldr	r3, [r4, #0]
 800ccac:	4681      	mov	r9, r0
 800ccae:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800ccb2:	4629      	mov	r1, r5
 800ccb4:	4620      	mov	r0, r4
 800ccb6:	4798      	blx	r3
 800ccb8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800ccbc:	eba9 0000 	sub.w	r0, r9, r0
 800ccc0:	b203      	sxth	r3, r0
 800ccc2:	42da      	cmn	r2, r3
 800ccc4:	9304      	str	r3, [sp, #16]
 800ccc6:	d418      	bmi.n	800ccfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800ccc8:	6822      	ldr	r2, [r4, #0]
 800ccca:	4629      	mov	r1, r5
 800cccc:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800ccd0:	4620      	mov	r0, r4
 800ccd2:	4790      	blx	r2
 800ccd4:	9b04      	ldr	r3, [sp, #16]
 800ccd6:	4283      	cmp	r3, r0
 800ccd8:	da0f      	bge.n	800ccfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800ccda:	9b08      	ldr	r3, [sp, #32]
 800ccdc:	9302      	str	r3, [sp, #8]
 800ccde:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cce2:	6822      	ldr	r2, [r4, #0]
 800cce4:	9301      	str	r3, [sp, #4]
 800cce6:	fa0f f389 	sxth.w	r3, r9
 800ccea:	9300      	str	r3, [sp, #0]
 800ccec:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800ccf0:	a90e      	add	r1, sp, #56	; 0x38
 800ccf2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ccf6:	4620      	mov	r0, r4
 800ccf8:	47c8      	blx	r9
 800ccfa:	4456      	add	r6, sl
 800ccfc:	445f      	add	r7, fp
 800ccfe:	e7c5      	b.n	800cc8c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800cd00:	fb98 f8f9 	sdiv	r8, r8, r9
 800cd04:	eba8 0203 	sub.w	r2, r8, r3
 800cd08:	fb9b f8f9 	sdiv	r8, fp, r9
 800cd0c:	4498      	add	r8, r3
 800cd0e:	4542      	cmp	r2, r8
 800cd10:	bfac      	ite	ge
 800cd12:	f04f 33ff 	movge.w	r3, #4294967295
 800cd16:	2301      	movlt	r3, #1
 800cd18:	930a      	str	r3, [sp, #40]	; 0x28
 800cd1a:	6823      	ldr	r3, [r4, #0]
 800cd1c:	9204      	str	r2, [sp, #16]
 800cd1e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cd22:	fb02 f209 	mul.w	r2, r2, r9
 800cd26:	4629      	mov	r1, r5
 800cd28:	4620      	mov	r0, r4
 800cd2a:	4798      	blx	r3
 800cd2c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800cd30:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800cd34:	4658      	mov	r0, fp
 800cd36:	f7ff fbf5 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cd3a:	b203      	sxth	r3, r0
 800cd3c:	9305      	str	r3, [sp, #20]
 800cd3e:	6823      	ldr	r3, [r4, #0]
 800cd40:	fb06 f207 	mul.w	r2, r6, r7
 800cd44:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cd48:	4629      	mov	r1, r5
 800cd4a:	4620      	mov	r0, r4
 800cd4c:	4798      	blx	r3
 800cd4e:	9010      	str	r0, [sp, #64]	; 0x40
 800cd50:	4658      	mov	r0, fp
 800cd52:	f7ff fbe7 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cd56:	fb07 f20a 	mul.w	r2, r7, sl
 800cd5a:	920b      	str	r2, [sp, #44]	; 0x2c
 800cd5c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cd5e:	4442      	add	r2, r8
 800cd60:	b203      	sxth	r3, r0
 800cd62:	920c      	str	r2, [sp, #48]	; 0x30
 800cd64:	9a05      	ldr	r2, [sp, #20]
 800cd66:	429a      	cmp	r2, r3
 800cd68:	dc16      	bgt.n	800cd98 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800cd6a:	eb06 080a 	add.w	r8, r6, sl
 800cd6e:	fb07 f808 	mul.w	r8, r7, r8
 800cd72:	9a05      	ldr	r2, [sp, #20]
 800cd74:	429a      	cmp	r2, r3
 800cd76:	db54      	blt.n	800ce22 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800cd78:	6823      	ldr	r3, [r4, #0]
 800cd7a:	4642      	mov	r2, r8
 800cd7c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cd80:	4629      	mov	r1, r5
 800cd82:	4620      	mov	r0, r4
 800cd84:	4798      	blx	r3
 800cd86:	9010      	str	r0, [sp, #64]	; 0x40
 800cd88:	4658      	mov	r0, fp
 800cd8a:	f7ff fbcb 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cd8e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cd90:	4456      	add	r6, sl
 800cd92:	b203      	sxth	r3, r0
 800cd94:	4490      	add	r8, r2
 800cd96:	e7ec      	b.n	800cd72 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800cd98:	6823      	ldr	r3, [r4, #0]
 800cd9a:	fb07 f206 	mul.w	r2, r7, r6
 800cd9e:	4629      	mov	r1, r5
 800cda0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cda4:	4620      	mov	r0, r4
 800cda6:	4798      	blx	r3
 800cda8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cdaa:	1ac0      	subs	r0, r0, r3
 800cdac:	9010      	str	r0, [sp, #64]	; 0x40
 800cdae:	4658      	mov	r0, fp
 800cdb0:	f7ff fbb8 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cdb4:	6823      	ldr	r3, [r4, #0]
 800cdb6:	4680      	mov	r8, r0
 800cdb8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cdbc:	4629      	mov	r1, r5
 800cdbe:	4620      	mov	r0, r4
 800cdc0:	4798      	blx	r3
 800cdc2:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cdc6:	eba8 0000 	sub.w	r0, r8, r0
 800cdca:	b203      	sxth	r3, r0
 800cdcc:	42da      	cmn	r2, r3
 800cdce:	930d      	str	r3, [sp, #52]	; 0x34
 800cdd0:	d418      	bmi.n	800ce04 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cdd2:	6822      	ldr	r2, [r4, #0]
 800cdd4:	4629      	mov	r1, r5
 800cdd6:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cdda:	4620      	mov	r0, r4
 800cddc:	4790      	blx	r2
 800cdde:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cde0:	4283      	cmp	r3, r0
 800cde2:	da0f      	bge.n	800ce04 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cde4:	9b08      	ldr	r3, [sp, #32]
 800cde6:	9302      	str	r3, [sp, #8]
 800cde8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cdec:	6822      	ldr	r2, [r4, #0]
 800cdee:	9301      	str	r3, [sp, #4]
 800cdf0:	fa0f f388 	sxth.w	r3, r8
 800cdf4:	9300      	str	r3, [sp, #0]
 800cdf6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800cdfa:	a90e      	add	r1, sp, #56	; 0x38
 800cdfc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ce00:	4620      	mov	r0, r4
 800ce02:	47c0      	blx	r8
 800ce04:	6823      	ldr	r3, [r4, #0]
 800ce06:	4456      	add	r6, sl
 800ce08:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ce0c:	fb06 f207 	mul.w	r2, r6, r7
 800ce10:	4629      	mov	r1, r5
 800ce12:	4620      	mov	r0, r4
 800ce14:	4798      	blx	r3
 800ce16:	9010      	str	r0, [sp, #64]	; 0x40
 800ce18:	4658      	mov	r0, fp
 800ce1a:	f7ff fb83 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ce1e:	b203      	sxth	r3, r0
 800ce20:	e7a0      	b.n	800cd64 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800ce22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ce24:	930d      	str	r3, [sp, #52]	; 0x34
 800ce26:	9b04      	ldr	r3, [sp, #16]
 800ce28:	4413      	add	r3, r2
 800ce2a:	9304      	str	r3, [sp, #16]
 800ce2c:	9a04      	ldr	r2, [sp, #16]
 800ce2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ce30:	4293      	cmp	r3, r2
 800ce32:	f43f aee2 	beq.w	800cbfa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ce36:	9b04      	ldr	r3, [sp, #16]
 800ce38:	6822      	ldr	r2, [r4, #0]
 800ce3a:	4629      	mov	r1, r5
 800ce3c:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800ce40:	4620      	mov	r0, r4
 800ce42:	fb03 f209 	mul.w	r2, r3, r9
 800ce46:	47c0      	blx	r8
 800ce48:	9010      	str	r0, [sp, #64]	; 0x40
 800ce4a:	4658      	mov	r0, fp
 800ce4c:	f7ff fb6a 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ce50:	b203      	sxth	r3, r0
 800ce52:	9305      	str	r3, [sp, #20]
 800ce54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ce56:	e785      	b.n	800cd64 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800ce58:	4798      	blx	r3
 800ce5a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800ce5e:	deff      	udf	#255	; 0xff

0800ce60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800ce60:	b510      	push	{r4, lr}
 800ce62:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800ce66:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800ce6a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800ce6e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800ce72:	13a4      	asrs	r4, r4, #14
 800ce74:	139b      	asrs	r3, r3, #14
 800ce76:	429c      	cmp	r4, r3
 800ce78:	bfb8      	it	lt
 800ce7a:	461c      	movlt	r4, r3
 800ce7c:	2c01      	cmp	r4, #1
 800ce7e:	dd07      	ble.n	800ce90 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800ce80:	fb91 f1f4 	sdiv	r1, r1, r4
 800ce84:	fb90 f0f4 	sdiv	r0, r0, r4
 800ce88:	f7ff ffea 	bl	800ce60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800ce8c:	4360      	muls	r0, r4
 800ce8e:	bd10      	pop	{r4, pc}
 800ce90:	4340      	muls	r0, r0
 800ce92:	fb01 0101 	mla	r1, r1, r1, r0
 800ce96:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800ce9a:	bfb4      	ite	lt
 800ce9c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800cea0:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800cea4:	2000      	movs	r0, #0
 800cea6:	18c2      	adds	r2, r0, r3
 800cea8:	428a      	cmp	r2, r1
 800ceaa:	bf9c      	itt	ls
 800ceac:	1898      	addls	r0, r3, r2
 800ceae:	1a89      	subls	r1, r1, r2
 800ceb0:	089b      	lsrs	r3, r3, #2
 800ceb2:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800ceb6:	d1f6      	bne.n	800cea6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800ceb8:	e7e9      	b.n	800ce8e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800ceba <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800ceba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cebc:	9906      	ldr	r1, [sp, #24]
 800cebe:	4291      	cmp	r1, r2
 800cec0:	bfbc      	itt	lt
 800cec2:	9206      	strlt	r2, [sp, #24]
 800cec4:	460a      	movlt	r2, r1
 800cec6:	9907      	ldr	r1, [sp, #28]
 800cec8:	428b      	cmp	r3, r1
 800ceca:	4606      	mov	r6, r0
 800cecc:	461c      	mov	r4, r3
 800cece:	f04f 0020 	mov.w	r0, #32
 800ced2:	bfc8      	it	gt
 800ced4:	460c      	movgt	r4, r1
 800ced6:	fb92 f5f0 	sdiv	r5, r2, r0
 800ceda:	fb94 f4f0 	sdiv	r4, r4, r0
 800cede:	a806      	add	r0, sp, #24
 800cee0:	bfc8      	it	gt
 800cee2:	9307      	strgt	r3, [sp, #28]
 800cee4:	f7ff fdf7 	bl	800cad6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cee8:	4607      	mov	r7, r0
 800ceea:	a807      	add	r0, sp, #28
 800ceec:	f7ff fdf3 	bl	800cad6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cef0:	1b7a      	subs	r2, r7, r5
 800cef2:	1b00      	subs	r0, r0, r4
 800cef4:	80f0      	strh	r0, [r6, #6]
 800cef6:	8035      	strh	r5, [r6, #0]
 800cef8:	8074      	strh	r4, [r6, #2]
 800cefa:	80b2      	strh	r2, [r6, #4]
 800cefc:	4630      	mov	r0, r6
 800cefe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cf00 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800cf00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cf02:	9c08      	ldr	r4, [sp, #32]
 800cf04:	2602      	movs	r6, #2
 800cf06:	3401      	adds	r4, #1
 800cf08:	fb94 f4f6 	sdiv	r4, r4, r6
 800cf0c:	18a6      	adds	r6, r4, r2
 800cf0e:	191f      	adds	r7, r3, r4
 800cf10:	e9cd 6700 	strd	r6, r7, [sp]
 800cf14:	1b1b      	subs	r3, r3, r4
 800cf16:	1b12      	subs	r2, r2, r4
 800cf18:	4605      	mov	r5, r0
 800cf1a:	f7ff ffce 	bl	800ceba <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800cf1e:	4628      	mov	r0, r5
 800cf20:	b003      	add	sp, #12
 800cf22:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cf24 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800cf24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cf28:	6943      	ldr	r3, [r0, #20]
 800cf2a:	b087      	sub	sp, #28
 800cf2c:	4606      	mov	r6, r0
 800cf2e:	460d      	mov	r5, r1
 800cf30:	2b00      	cmp	r3, #0
 800cf32:	d072      	beq.n	800d01a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800cf34:	695c      	ldr	r4, [r3, #20]
 800cf36:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800cf3a:	6823      	ldr	r3, [r4, #0]
 800cf3c:	4620      	mov	r0, r4
 800cf3e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cf42:	4798      	blx	r3
 800cf44:	6823      	ldr	r3, [r4, #0]
 800cf46:	4680      	mov	r8, r0
 800cf48:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cf4c:	4629      	mov	r1, r5
 800cf4e:	4620      	mov	r0, r4
 800cf50:	4798      	blx	r3
 800cf52:	017f      	lsls	r7, r7, #5
 800cf54:	4603      	mov	r3, r0
 800cf56:	9700      	str	r7, [sp, #0]
 800cf58:	4642      	mov	r2, r8
 800cf5a:	4631      	mov	r1, r6
 800cf5c:	a802      	add	r0, sp, #8
 800cf5e:	f7ff ffcf 	bl	800cf00 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cf62:	2d00      	cmp	r5, #0
 800cf64:	dd1b      	ble.n	800cf9e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800cf66:	6823      	ldr	r3, [r4, #0]
 800cf68:	f105 38ff 	add.w	r8, r5, #4294967295
 800cf6c:	fa0f f888 	sxth.w	r8, r8
 800cf70:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cf74:	4641      	mov	r1, r8
 800cf76:	4620      	mov	r0, r4
 800cf78:	4798      	blx	r3
 800cf7a:	6823      	ldr	r3, [r4, #0]
 800cf7c:	4681      	mov	r9, r0
 800cf7e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cf82:	4641      	mov	r1, r8
 800cf84:	4620      	mov	r0, r4
 800cf86:	4798      	blx	r3
 800cf88:	4631      	mov	r1, r6
 800cf8a:	4603      	mov	r3, r0
 800cf8c:	9700      	str	r7, [sp, #0]
 800cf8e:	a804      	add	r0, sp, #16
 800cf90:	464a      	mov	r2, r9
 800cf92:	f7ff ffb5 	bl	800cf00 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cf96:	a904      	add	r1, sp, #16
 800cf98:	a802      	add	r0, sp, #8
 800cf9a:	f7ff fd57 	bl	800ca4c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cf9e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cfa2:	3b01      	subs	r3, #1
 800cfa4:	429d      	cmp	r5, r3
 800cfa6:	da19      	bge.n	800cfdc <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800cfa8:	6823      	ldr	r3, [r4, #0]
 800cfaa:	3501      	adds	r5, #1
 800cfac:	b22d      	sxth	r5, r5
 800cfae:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cfb2:	4629      	mov	r1, r5
 800cfb4:	4620      	mov	r0, r4
 800cfb6:	4798      	blx	r3
 800cfb8:	6823      	ldr	r3, [r4, #0]
 800cfba:	4680      	mov	r8, r0
 800cfbc:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cfc0:	4629      	mov	r1, r5
 800cfc2:	4620      	mov	r0, r4
 800cfc4:	4798      	blx	r3
 800cfc6:	4631      	mov	r1, r6
 800cfc8:	4603      	mov	r3, r0
 800cfca:	9700      	str	r7, [sp, #0]
 800cfcc:	a804      	add	r0, sp, #16
 800cfce:	4642      	mov	r2, r8
 800cfd0:	f7ff ff96 	bl	800cf00 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cfd4:	a904      	add	r1, sp, #16
 800cfd6:	a802      	add	r0, sp, #8
 800cfd8:	f7ff fd38 	bl	800ca4c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cfdc:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cfe0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cfe4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800cfe8:	18ca      	adds	r2, r1, r3
 800cfea:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cfee:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cff2:	1a9b      	subs	r3, r3, r2
 800cff4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cff8:	2200      	movs	r2, #0
 800cffa:	a904      	add	r1, sp, #16
 800cffc:	a802      	add	r0, sp, #8
 800cffe:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d002:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d006:	f7fd ffb9 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800d00a:	6833      	ldr	r3, [r6, #0]
 800d00c:	a902      	add	r1, sp, #8
 800d00e:	691b      	ldr	r3, [r3, #16]
 800d010:	4630      	mov	r0, r6
 800d012:	4798      	blx	r3
 800d014:	b007      	add	sp, #28
 800d016:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d01a:	681b      	ldr	r3, [r3, #0]
 800d01c:	deff      	udf	#255	; 0xff

0800d01e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800d01e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800d022:	2b00      	cmp	r3, #0
 800d024:	da05      	bge.n	800d032 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800d026:	880a      	ldrh	r2, [r1, #0]
 800d028:	b29b      	uxth	r3, r3
 800d02a:	441a      	add	r2, r3
 800d02c:	425b      	negs	r3, r3
 800d02e:	800a      	strh	r2, [r1, #0]
 800d030:	808b      	strh	r3, [r1, #4]
 800d032:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800d036:	2b00      	cmp	r3, #0
 800d038:	da05      	bge.n	800d046 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800d03a:	884a      	ldrh	r2, [r1, #2]
 800d03c:	b29b      	uxth	r3, r3
 800d03e:	441a      	add	r2, r3
 800d040:	425b      	negs	r3, r3
 800d042:	804a      	strh	r2, [r1, #2]
 800d044:	80cb      	strh	r3, [r1, #6]
 800d046:	4770      	bx	lr

0800d048 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800d048:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d04a:	4604      	mov	r4, r0
 800d04c:	460d      	mov	r5, r1
 800d04e:	6801      	ldr	r1, [r0, #0]
 800d050:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800d054:	9001      	str	r0, [sp, #4]
 800d056:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800d05a:	9000      	str	r0, [sp, #0]
 800d05c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800d060:	a802      	add	r0, sp, #8
 800d062:	4621      	mov	r1, r4
 800d064:	47b0      	blx	r6
 800d066:	a902      	add	r1, sp, #8
 800d068:	4620      	mov	r0, r4
 800d06a:	f7ff ffd8 	bl	800d01e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800d06e:	a802      	add	r0, sp, #8
 800d070:	4629      	mov	r1, r5
 800d072:	f7fd ff83 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800d076:	a802      	add	r0, sp, #8
 800d078:	f7fd ffc3 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d07c:	b968      	cbnz	r0, 800d09a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800d07e:	6823      	ldr	r3, [r4, #0]
 800d080:	a902      	add	r1, sp, #8
 800d082:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d084:	4620      	mov	r0, r4
 800d086:	4798      	blx	r3
 800d088:	f7f5 fc48 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800d08c:	6803      	ldr	r3, [r0, #0]
 800d08e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d090:	6a1d      	ldr	r5, [r3, #32]
 800d092:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800d096:	a902      	add	r1, sp, #8
 800d098:	47a8      	blx	r5
 800d09a:	b004      	add	sp, #16
 800d09c:	bd70      	pop	{r4, r5, r6, pc}

0800d09e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800d09e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0a2:	b08b      	sub	sp, #44	; 0x2c
 800d0a4:	461e      	mov	r6, r3
 800d0a6:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800d0aa:	9304      	str	r3, [sp, #16]
 800d0ac:	429e      	cmp	r6, r3
 800d0ae:	4689      	mov	r9, r1
 800d0b0:	4615      	mov	r5, r2
 800d0b2:	d072      	beq.n	800d19a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800d0b4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d0b8:	015b      	lsls	r3, r3, #5
 800d0ba:	9303      	str	r3, [sp, #12]
 800d0bc:	6813      	ldr	r3, [r2, #0]
 800d0be:	4610      	mov	r0, r2
 800d0c0:	4631      	mov	r1, r6
 800d0c2:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d0c6:	4798      	blx	r3
 800d0c8:	ab0a      	add	r3, sp, #40	; 0x28
 800d0ca:	4634      	mov	r4, r6
 800d0cc:	f843 0d10 	str.w	r0, [r3, #-16]!
 800d0d0:	4618      	mov	r0, r3
 800d0d2:	f7ff fa27 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d0d6:	682b      	ldr	r3, [r5, #0]
 800d0d8:	4631      	mov	r1, r6
 800d0da:	0147      	lsls	r7, r0, #5
 800d0dc:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d0e0:	4628      	mov	r0, r5
 800d0e2:	4798      	blx	r3
 800d0e4:	ab0a      	add	r3, sp, #40	; 0x28
 800d0e6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800d0ea:	4618      	mov	r0, r3
 800d0ec:	f7ff fa1a 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d0f0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800d0f4:	4642      	mov	r2, r8
 800d0f6:	4639      	mov	r1, r7
 800d0f8:	4648      	mov	r0, r9
 800d0fa:	f013 fb9b 	bl	8020834 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d0fe:	2301      	movs	r3, #1
 800d100:	9300      	str	r3, [sp, #0]
 800d102:	9b00      	ldr	r3, [sp, #0]
 800d104:	441c      	add	r4, r3
 800d106:	682b      	ldr	r3, [r5, #0]
 800d108:	b224      	sxth	r4, r4
 800d10a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d10e:	4621      	mov	r1, r4
 800d110:	4628      	mov	r0, r5
 800d112:	4798      	blx	r3
 800d114:	9008      	str	r0, [sp, #32]
 800d116:	a808      	add	r0, sp, #32
 800d118:	f7ff fa04 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d11c:	0143      	lsls	r3, r0, #5
 800d11e:	9301      	str	r3, [sp, #4]
 800d120:	682b      	ldr	r3, [r5, #0]
 800d122:	4621      	mov	r1, r4
 800d124:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d128:	4628      	mov	r0, r5
 800d12a:	4798      	blx	r3
 800d12c:	9009      	str	r0, [sp, #36]	; 0x24
 800d12e:	a809      	add	r0, sp, #36	; 0x24
 800d130:	f7ff f9f8 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d134:	0143      	lsls	r3, r0, #5
 800d136:	9302      	str	r3, [sp, #8]
 800d138:	9b01      	ldr	r3, [sp, #4]
 800d13a:	eba3 0b07 	sub.w	fp, r3, r7
 800d13e:	9b02      	ldr	r3, [sp, #8]
 800d140:	eba3 0a08 	sub.w	sl, r3, r8
 800d144:	4651      	mov	r1, sl
 800d146:	4658      	mov	r0, fp
 800d148:	f7ff fe8a 	bl	800ce60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800d14c:	b318      	cbz	r0, 800d196 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800d14e:	4602      	mov	r2, r0
 800d150:	4651      	mov	r1, sl
 800d152:	9005      	str	r0, [sp, #20]
 800d154:	9803      	ldr	r0, [sp, #12]
 800d156:	f005 f9fb 	bl	8012550 <_ZN8touchgfx6muldivElll>
 800d15a:	2302      	movs	r3, #2
 800d15c:	fb90 faf3 	sdiv	sl, r0, r3
 800d160:	9b05      	ldr	r3, [sp, #20]
 800d162:	9803      	ldr	r0, [sp, #12]
 800d164:	461a      	mov	r2, r3
 800d166:	4659      	mov	r1, fp
 800d168:	f005 f9f2 	bl	8012550 <_ZN8touchgfx6muldivElll>
 800d16c:	2302      	movs	r3, #2
 800d16e:	eba7 010a 	sub.w	r1, r7, sl
 800d172:	fb90 fbf3 	sdiv	fp, r0, r3
 800d176:	4648      	mov	r0, r9
 800d178:	eb0b 0208 	add.w	r2, fp, r8
 800d17c:	f013 fa30 	bl	80205e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d180:	9b02      	ldr	r3, [sp, #8]
 800d182:	eb03 020b 	add.w	r2, r3, fp
 800d186:	9b01      	ldr	r3, [sp, #4]
 800d188:	4648      	mov	r0, r9
 800d18a:	eba3 010a 	sub.w	r1, r3, sl
 800d18e:	f013 fa27 	bl	80205e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d192:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800d196:	42a6      	cmp	r6, r4
 800d198:	db02      	blt.n	800d1a0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800d19a:	b00b      	add	sp, #44	; 0x2c
 800d19c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1a0:	9b00      	ldr	r3, [sp, #0]
 800d1a2:	9a04      	ldr	r2, [sp, #16]
 800d1a4:	42a2      	cmp	r2, r4
 800d1a6:	bf08      	it	eq
 800d1a8:	f04f 33ff 	moveq.w	r3, #4294967295
 800d1ac:	e7a8      	b.n	800d100 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800d1b0 <_ZN8touchgfx6CanvasD1Ev>:
 800d1b0:	b510      	push	{r4, lr}
 800d1b2:	4b04      	ldr	r3, [pc, #16]	; (800d1c4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800d1b4:	4604      	mov	r4, r0
 800d1b6:	f840 3b20 	str.w	r3, [r0], #32
 800d1ba:	f001 fd23 	bl	800ec04 <_ZN8touchgfx7OutlineD1Ev>
 800d1be:	4620      	mov	r0, r4
 800d1c0:	bd10      	pop	{r4, pc}
 800d1c2:	bf00      	nop
 800d1c4:	08023e1c 	.word	0x08023e1c

0800d1c8 <_ZN8touchgfx6CanvasD0Ev>:
 800d1c8:	b510      	push	{r4, lr}
 800d1ca:	4604      	mov	r4, r0
 800d1cc:	f7ff fff0 	bl	800d1b0 <_ZN8touchgfx6CanvasD1Ev>
 800d1d0:	4620      	mov	r0, r4
 800d1d2:	2170      	movs	r1, #112	; 0x70
 800d1d4:	f013 fb80 	bl	80208d8 <_ZdlPvj>
 800d1d8:	4620      	mov	r0, r4
 800d1da:	bd10      	pop	{r4, pc}

0800d1dc <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800d1dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d1e0:	6943      	ldr	r3, [r0, #20]
 800d1e2:	b0a2      	sub	sp, #136	; 0x88
 800d1e4:	4606      	mov	r6, r0
 800d1e6:	460f      	mov	r7, r1
 800d1e8:	2b00      	cmp	r3, #0
 800d1ea:	d06a      	beq.n	800d2c2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800d1ec:	695c      	ldr	r4, [r3, #20]
 800d1ee:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d1f2:	2b01      	cmp	r3, #1
 800d1f4:	dc04      	bgt.n	800d200 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800d1f6:	2401      	movs	r4, #1
 800d1f8:	4620      	mov	r0, r4
 800d1fa:	b022      	add	sp, #136	; 0x88
 800d1fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d200:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d204:	ad22      	add	r5, sp, #136	; 0x88
 800d206:	011b      	lsls	r3, r3, #4
 800d208:	f845 3d70 	str.w	r3, [r5, #-112]!
 800d20c:	4628      	mov	r0, r5
 800d20e:	f7ff fc62 	bl	800cad6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d212:	8839      	ldrh	r1, [r7, #0]
 800d214:	88ba      	ldrh	r2, [r7, #4]
 800d216:	6823      	ldr	r3, [r4, #0]
 800d218:	b280      	uxth	r0, r0
 800d21a:	440a      	add	r2, r1
 800d21c:	4402      	add	r2, r0
 800d21e:	1a09      	subs	r1, r1, r0
 800d220:	f10d 000e 	add.w	r0, sp, #14
 800d224:	9000      	str	r0, [sp, #0]
 800d226:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800d22a:	b212      	sxth	r2, r2
 800d22c:	ab03      	add	r3, sp, #12
 800d22e:	b209      	sxth	r1, r1
 800d230:	4620      	mov	r0, r4
 800d232:	47c0      	blx	r8
 800d234:	2800      	cmp	r0, #0
 800d236:	d0de      	beq.n	800d1f6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800d238:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800d23c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d240:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d244:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d248:	18ca      	adds	r2, r1, r3
 800d24a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d24e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d252:	1a9b      	subs	r3, r3, r2
 800d254:	4639      	mov	r1, r7
 800d256:	2200      	movs	r2, #0
 800d258:	a804      	add	r0, sp, #16
 800d25a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d25e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d262:	f7fd fe8b 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800d266:	aa04      	add	r2, sp, #16
 800d268:	4631      	mov	r1, r6
 800d26a:	4628      	mov	r0, r5
 800d26c:	f013 f90a 	bl	8020484 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d270:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800d274:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d278:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800d27c:	2f00      	cmp	r7, #0
 800d27e:	dd03      	ble.n	800d288 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d280:	42bb      	cmp	r3, r7
 800d282:	da01      	bge.n	800d288 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d284:	42ba      	cmp	r2, r7
 800d286:	da0f      	bge.n	800d2a8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800d288:	9200      	str	r2, [sp, #0]
 800d28a:	4622      	mov	r2, r4
 800d28c:	4629      	mov	r1, r5
 800d28e:	4630      	mov	r0, r6
 800d290:	f7ff ff05 	bl	800d09e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d294:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800d298:	4628      	mov	r0, r5
 800d29a:	f013 fa1d 	bl	80206d8 <_ZN8touchgfx6Canvas6renderEh>
 800d29e:	4604      	mov	r4, r0
 800d2a0:	4628      	mov	r0, r5
 800d2a2:	f7ff ff85 	bl	800d1b0 <_ZN8touchgfx6CanvasD1Ev>
 800d2a6:	e7a7      	b.n	800d1f8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800d2a8:	1e7a      	subs	r2, r7, #1
 800d2aa:	b212      	sxth	r2, r2
 800d2ac:	9200      	str	r2, [sp, #0]
 800d2ae:	4629      	mov	r1, r5
 800d2b0:	4622      	mov	r2, r4
 800d2b2:	4630      	mov	r0, r6
 800d2b4:	f7ff fef3 	bl	800d09e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d2b8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d2bc:	9300      	str	r3, [sp, #0]
 800d2be:	463b      	mov	r3, r7
 800d2c0:	e7e3      	b.n	800d28a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800d2c2:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800d2c6:	deff      	udf	#255	; 0xff

0800d2c8 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800d2c8:	4770      	bx	lr

0800d2ca <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d2ca:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d2cc:	b118      	cbz	r0, 800d2d6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800d2ce:	6803      	ldr	r3, [r0, #0]
 800d2d0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d2d4:	4718      	bx	r3
 800d2d6:	4770      	bx	lr

0800d2d8 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d2d8:	680b      	ldr	r3, [r1, #0]
 800d2da:	4608      	mov	r0, r1
 800d2dc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d2e0:	4718      	bx	r3

0800d2e2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d2e2:	680b      	ldr	r3, [r1, #0]
 800d2e4:	4608      	mov	r0, r1
 800d2e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d2ea:	4718      	bx	r3

0800d2ec <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d2ec:	680b      	ldr	r3, [r1, #0]
 800d2ee:	4608      	mov	r0, r1
 800d2f0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800d2f4:	4718      	bx	r3

0800d2f6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d2f6:	680b      	ldr	r3, [r1, #0]
 800d2f8:	4608      	mov	r0, r1
 800d2fa:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800d2fe:	4718      	bx	r3

0800d300 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800d300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d304:	4a37      	ldr	r2, [pc, #220]	; (800d3e4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800d306:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d308:	8812      	ldrh	r2, [r2, #0]
 800d30a:	429a      	cmp	r2, r3
 800d30c:	b087      	sub	sp, #28
 800d30e:	4604      	mov	r4, r0
 800d310:	4689      	mov	r9, r1
 800d312:	d937      	bls.n	800d384 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d314:	4a34      	ldr	r2, [pc, #208]	; (800d3e8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800d316:	6812      	ldr	r2, [r2, #0]
 800d318:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d31c:	4b33      	ldr	r3, [pc, #204]	; (800d3ec <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800d31e:	681b      	ldr	r3, [r3, #0]
 800d320:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d324:	f1b8 0f00 	cmp.w	r8, #0
 800d328:	d02c      	beq.n	800d384 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d32a:	6803      	ldr	r3, [r0, #0]
 800d32c:	6945      	ldr	r5, [r0, #20]
 800d32e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d330:	2d00      	cmp	r5, #0
 800d332:	d052      	beq.n	800d3da <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800d334:	696f      	ldr	r7, [r5, #20]
 800d336:	4798      	blx	r3
 800d338:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800d33c:	fb15 f000 	smulbb	r0, r5, r0
 800d340:	b280      	uxth	r0, r0
 800d342:	1c45      	adds	r5, r0, #1
 800d344:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800d348:	122d      	asrs	r5, r5, #8
 800d34a:	d01b      	beq.n	800d384 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d34c:	6823      	ldr	r3, [r4, #0]
 800d34e:	4639      	mov	r1, r7
 800d350:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d354:	4620      	mov	r0, r4
 800d356:	4798      	blx	r3
 800d358:	6823      	ldr	r3, [r4, #0]
 800d35a:	4606      	mov	r6, r0
 800d35c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d360:	4639      	mov	r1, r7
 800d362:	4620      	mov	r0, r4
 800d364:	4798      	blx	r3
 800d366:	b2ed      	uxtb	r5, r5
 800d368:	4683      	mov	fp, r0
 800d36a:	b970      	cbnz	r0, 800d38a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d36c:	b96e      	cbnz	r6, 800d38a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d36e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800d372:	6823      	ldr	r3, [r4, #0]
 800d374:	9600      	str	r6, [sp, #0]
 800d376:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800d37a:	4642      	mov	r2, r8
 800d37c:	463b      	mov	r3, r7
 800d37e:	4649      	mov	r1, r9
 800d380:	4620      	mov	r0, r4
 800d382:	47a8      	blx	r5
 800d384:	b007      	add	sp, #28
 800d386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d38a:	2e00      	cmp	r6, #0
 800d38c:	ddfa      	ble.n	800d384 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d38e:	6823      	ldr	r3, [r4, #0]
 800d390:	4639      	mov	r1, r7
 800d392:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d396:	4620      	mov	r0, r4
 800d398:	4798      	blx	r3
 800d39a:	6823      	ldr	r3, [r4, #0]
 800d39c:	4682      	mov	sl, r0
 800d39e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d3a2:	4639      	mov	r1, r7
 800d3a4:	4620      	mov	r0, r4
 800d3a6:	4798      	blx	r3
 800d3a8:	4582      	cmp	sl, r0
 800d3aa:	bfde      	ittt	le
 800d3ac:	4603      	movle	r3, r0
 800d3ae:	4650      	movle	r0, sl
 800d3b0:	469a      	movle	sl, r3
 800d3b2:	ebaa 0300 	sub.w	r3, sl, r0
 800d3b6:	fb93 f3f6 	sdiv	r3, r3, r6
 800d3ba:	2b64      	cmp	r3, #100	; 0x64
 800d3bc:	dce2      	bgt.n	800d384 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d3be:	e9cd b503 	strd	fp, r5, [sp, #12]
 800d3c2:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d3c6:	6823      	ldr	r3, [r4, #0]
 800d3c8:	9000      	str	r0, [sp, #0]
 800d3ca:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800d3ce:	4642      	mov	r2, r8
 800d3d0:	463b      	mov	r3, r7
 800d3d2:	4649      	mov	r1, r9
 800d3d4:	4620      	mov	r0, r4
 800d3d6:	47a8      	blx	r5
 800d3d8:	e7d4      	b.n	800d384 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d3da:	4798      	blx	r3
 800d3dc:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d3e0:	deff      	udf	#255	; 0xff
 800d3e2:	bf00      	nop
 800d3e4:	20015850 	.word	0x20015850
 800d3e8:	2001584c 	.word	0x2001584c
 800d3ec:	20015854 	.word	0x20015854

0800d3f0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800d3f0:	4770      	bx	lr

0800d3f2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800d3f2:	4770      	bx	lr

0800d3f4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d3f4:	b538      	push	{r3, r4, r5, lr}
 800d3f6:	680a      	ldr	r2, [r1, #0]
 800d3f8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d3fc:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800d400:	4608      	mov	r0, r1
 800d402:	4790      	blx	r2
 800d404:	4629      	mov	r1, r5
 800d406:	4602      	mov	r2, r0
 800d408:	4620      	mov	r0, r4
 800d40a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d40e:	f7ff baa7 	b.w	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d412 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d412:	b538      	push	{r3, r4, r5, lr}
 800d414:	680a      	ldr	r2, [r1, #0]
 800d416:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d41a:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800d41e:	4608      	mov	r0, r1
 800d420:	4790      	blx	r2
 800d422:	4629      	mov	r1, r5
 800d424:	4602      	mov	r2, r0
 800d426:	4620      	mov	r0, r4
 800d428:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d42c:	f7ff ba98 	b.w	800c960 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d430 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800d430:	b510      	push	{r4, lr}
 800d432:	214c      	movs	r1, #76	; 0x4c
 800d434:	4604      	mov	r4, r0
 800d436:	f013 fa4f 	bl	80208d8 <_ZdlPvj>
 800d43a:	4620      	mov	r0, r4
 800d43c:	bd10      	pop	{r4, pc}

0800d43e <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800d43e:	b510      	push	{r4, lr}
 800d440:	214c      	movs	r1, #76	; 0x4c
 800d442:	4604      	mov	r4, r0
 800d444:	f013 fa48 	bl	80208d8 <_ZdlPvj>
 800d448:	4620      	mov	r0, r4
 800d44a:	bd10      	pop	{r4, pc}

0800d44c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d450:	b08d      	sub	sp, #52	; 0x34
 800d452:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d456:	9309      	str	r3, [sp, #36]	; 0x24
 800d458:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d45c:	930a      	str	r3, [sp, #40]	; 0x28
 800d45e:	4606      	mov	r6, r0
 800d460:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d464:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d468:	f1b9 0f00 	cmp.w	r9, #0
 800d46c:	d117      	bne.n	800d49e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d46e:	2f00      	cmp	r7, #0
 800d470:	dc7c      	bgt.n	800d56c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d472:	f1b8 0f00 	cmp.w	r8, #0
 800d476:	da01      	bge.n	800d47c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d478:	2f00      	cmp	r7, #0
 800d47a:	d17a      	bne.n	800d572 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d47c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d47e:	9318      	str	r3, [sp, #96]	; 0x60
 800d480:	2300      	movs	r3, #0
 800d482:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d486:	6832      	ldr	r2, [r6, #0]
 800d488:	9907      	ldr	r1, [sp, #28]
 800d48a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d48e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d492:	4630      	mov	r0, r6
 800d494:	46a4      	mov	ip, r4
 800d496:	b00d      	add	sp, #52	; 0x34
 800d498:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d49c:	4760      	bx	ip
 800d49e:	fb97 f4f9 	sdiv	r4, r7, r9
 800d4a2:	1e63      	subs	r3, r4, #1
 800d4a4:	9305      	str	r3, [sp, #20]
 800d4a6:	f1ba 0f00 	cmp.w	sl, #0
 800d4aa:	d122      	bne.n	800d4f2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d4ac:	fb98 faf9 	sdiv	sl, r8, r9
 800d4b0:	fb03 f509 	mul.w	r5, r3, r9
 800d4b4:	f10a 0a02 	add.w	sl, sl, #2
 800d4b8:	9b05      	ldr	r3, [sp, #20]
 800d4ba:	459a      	cmp	sl, r3
 800d4bc:	d059      	beq.n	800d572 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d4be:	42af      	cmp	r7, r5
 800d4c0:	dc5a      	bgt.n	800d578 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d4c2:	45a8      	cmp	r8, r5
 800d4c4:	da01      	bge.n	800d4ca <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d4c6:	42af      	cmp	r7, r5
 800d4c8:	db0e      	blt.n	800d4e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d4ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d4cc:	9302      	str	r3, [sp, #8]
 800d4ce:	9905      	ldr	r1, [sp, #20]
 800d4d0:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d4d2:	6832      	ldr	r2, [r6, #0]
 800d4d4:	434b      	muls	r3, r1
 800d4d6:	e9cd 5300 	strd	r5, r3, [sp]
 800d4da:	9907      	ldr	r1, [sp, #28]
 800d4dc:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d4e0:	4630      	mov	r0, r6
 800d4e2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d4e6:	47d8      	blx	fp
 800d4e8:	9b05      	ldr	r3, [sp, #20]
 800d4ea:	3301      	adds	r3, #1
 800d4ec:	9305      	str	r3, [sp, #20]
 800d4ee:	444d      	add	r5, r9
 800d4f0:	e7e2      	b.n	800d4b8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d4f2:	fb97 f3fa 	sdiv	r3, r7, sl
 800d4f6:	3b01      	subs	r3, #1
 800d4f8:	9306      	str	r3, [sp, #24]
 800d4fa:	9a06      	ldr	r2, [sp, #24]
 800d4fc:	fb98 f3fa 	sdiv	r3, r8, sl
 800d500:	fb02 fb0a 	mul.w	fp, r2, sl
 800d504:	9a05      	ldr	r2, [sp, #20]
 800d506:	3302      	adds	r3, #2
 800d508:	fb02 f509 	mul.w	r5, r2, r9
 800d50c:	930b      	str	r3, [sp, #44]	; 0x2c
 800d50e:	45ab      	cmp	fp, r5
 800d510:	dd1d      	ble.n	800d54e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d512:	42af      	cmp	r7, r5
 800d514:	dc08      	bgt.n	800d528 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d516:	45a8      	cmp	r8, r5
 800d518:	da08      	bge.n	800d52c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d51a:	42af      	cmp	r7, r5
 800d51c:	da06      	bge.n	800d52c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d51e:	9b05      	ldr	r3, [sp, #20]
 800d520:	3301      	adds	r3, #1
 800d522:	9305      	str	r3, [sp, #20]
 800d524:	444d      	add	r5, r9
 800d526:	e7f2      	b.n	800d50e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d528:	45a8      	cmp	r8, r5
 800d52a:	dcf8      	bgt.n	800d51e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d52c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d52e:	9302      	str	r3, [sp, #8]
 800d530:	9905      	ldr	r1, [sp, #20]
 800d532:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d534:	6832      	ldr	r2, [r6, #0]
 800d536:	434b      	muls	r3, r1
 800d538:	e9cd 5300 	strd	r5, r3, [sp]
 800d53c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d540:	9907      	ldr	r1, [sp, #28]
 800d542:	461c      	mov	r4, r3
 800d544:	4630      	mov	r0, r6
 800d546:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d54a:	47a0      	blx	r4
 800d54c:	e7e7      	b.n	800d51e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d54e:	45ab      	cmp	fp, r5
 800d550:	db04      	blt.n	800d55c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d552:	9b05      	ldr	r3, [sp, #20]
 800d554:	3301      	adds	r3, #1
 800d556:	9305      	str	r3, [sp, #20]
 800d558:	444d      	add	r5, r9
 800d55a:	e7f8      	b.n	800d54e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d55c:	9b06      	ldr	r3, [sp, #24]
 800d55e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d560:	3301      	adds	r3, #1
 800d562:	4293      	cmp	r3, r2
 800d564:	9306      	str	r3, [sp, #24]
 800d566:	d004      	beq.n	800d572 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d568:	44d3      	add	fp, sl
 800d56a:	e7d0      	b.n	800d50e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d56c:	f1b8 0f00 	cmp.w	r8, #0
 800d570:	dd84      	ble.n	800d47c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d572:	b00d      	add	sp, #52	; 0x34
 800d574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d578:	45a8      	cmp	r8, r5
 800d57a:	dcb5      	bgt.n	800d4e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d57c:	e7a5      	b.n	800d4ca <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d57e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d57e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d582:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d586:	b089      	sub	sp, #36	; 0x24
 800d588:	2c00      	cmp	r4, #0
 800d58a:	9007      	str	r0, [sp, #28]
 800d58c:	468a      	mov	sl, r1
 800d58e:	4693      	mov	fp, r2
 800d590:	461d      	mov	r5, r3
 800d592:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d596:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d59a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d59e:	dd03      	ble.n	800d5a8 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d5a0:	4564      	cmp	r4, ip
 800d5a2:	dd01      	ble.n	800d5a8 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d5a4:	42b4      	cmp	r4, r6
 800d5a6:	dd0e      	ble.n	800d5c6 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d5a8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d5ac:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d5b0:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d5b4:	9807      	ldr	r0, [sp, #28]
 800d5b6:	462b      	mov	r3, r5
 800d5b8:	465a      	mov	r2, fp
 800d5ba:	4651      	mov	r1, sl
 800d5bc:	b009      	add	sp, #36	; 0x24
 800d5be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5c2:	f7ff bf43 	b.w	800d44c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d5c6:	f104 3eff 	add.w	lr, r4, #4294967295
 800d5ca:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d5ce:	9702      	str	r7, [sp, #8]
 800d5d0:	e9cd ce00 	strd	ip, lr, [sp]
 800d5d4:	f7ff ff3a 	bl	800d44c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d5d8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d5dc:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d5e0:	9412      	str	r4, [sp, #72]	; 0x48
 800d5e2:	e7e7      	b.n	800d5b4 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d5e4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d5e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d5e8:	f1b3 0900 	subs.w	r9, r3, #0
 800d5ec:	460d      	mov	r5, r1
 800d5ee:	4690      	mov	r8, r2
 800d5f0:	9f08      	ldr	r7, [sp, #32]
 800d5f2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d5f6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d5f8:	da18      	bge.n	800d62c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d5fa:	2a01      	cmp	r2, #1
 800d5fc:	dd16      	ble.n	800d62c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d5fe:	232d      	movs	r3, #45	; 0x2d
 800d600:	800b      	strh	r3, [r1, #0]
 800d602:	f1c9 0900 	rsb	r9, r9, #0
 800d606:	2001      	movs	r0, #1
 800d608:	2f00      	cmp	r7, #0
 800d60a:	d111      	bne.n	800d630 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d60c:	eba8 0100 	sub.w	r1, r8, r0
 800d610:	2302      	movs	r3, #2
 800d612:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d616:	fb96 f3f3 	sdiv	r3, r6, r3
 800d61a:	4a24      	ldr	r2, [pc, #144]	; (800d6ac <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d61c:	444b      	add	r3, r9
 800d61e:	b289      	uxth	r1, r1
 800d620:	fb93 f3f6 	sdiv	r3, r3, r6
 800d624:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d628:	f006 bdf8 	b.w	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d62c:	2000      	movs	r0, #0
 800d62e:	e7eb      	b.n	800d608 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d630:	dd39      	ble.n	800d6a6 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d632:	fb99 f4f6 	sdiv	r4, r9, r6
 800d636:	eba8 0100 	sub.w	r1, r8, r0
 800d63a:	4623      	mov	r3, r4
 800d63c:	4a1b      	ldr	r2, [pc, #108]	; (800d6ac <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d63e:	b289      	uxth	r1, r1
 800d640:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d644:	f006 fdea 	bl	801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d648:	4628      	mov	r0, r5
 800d64a:	f006 fa73 	bl	8013b34 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d64e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d652:	4580      	cmp	r8, r0
 800d654:	dd27      	ble.n	800d6a6 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d656:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d65a:	fb06 9314 	mls	r3, r6, r4, r9
 800d65e:	3001      	adds	r0, #1
 800d660:	2200      	movs	r2, #0
 800d662:	f04f 090a 	mov.w	r9, #10
 800d666:	f107 3aff 	add.w	sl, r7, #4294967295
 800d66a:	f04f 0e02 	mov.w	lr, #2
 800d66e:	fb96 fefe 	sdiv	lr, r6, lr
 800d672:	4580      	cmp	r8, r0
 800d674:	4684      	mov	ip, r0
 800d676:	dd13      	ble.n	800d6a0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d678:	fb09 f303 	mul.w	r3, r9, r3
 800d67c:	4592      	cmp	sl, r2
 800d67e:	f102 0201 	add.w	r2, r2, #1
 800d682:	bf08      	it	eq
 800d684:	4473      	addeq	r3, lr
 800d686:	f100 0c01 	add.w	ip, r0, #1
 800d68a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d68e:	4297      	cmp	r7, r2
 800d690:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d694:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d698:	fb06 3314 	mls	r3, r6, r4, r3
 800d69c:	4660      	mov	r0, ip
 800d69e:	d1e8      	bne.n	800d672 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d6a0:	2300      	movs	r3, #0
 800d6a2:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d6a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d6aa:	bf00      	nop
 800d6ac:	080237a8 	.word	0x080237a8

0800d6b0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d6b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d6b4:	4a6b      	ldr	r2, [pc, #428]	; (800d864 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d6b6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d6b8:	8812      	ldrh	r2, [r2, #0]
 800d6ba:	429a      	cmp	r2, r3
 800d6bc:	b092      	sub	sp, #72	; 0x48
 800d6be:	4604      	mov	r4, r0
 800d6c0:	460e      	mov	r6, r1
 800d6c2:	d93a      	bls.n	800d73a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d6c4:	4a68      	ldr	r2, [pc, #416]	; (800d868 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d6c6:	6812      	ldr	r2, [r2, #0]
 800d6c8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d6cc:	4b67      	ldr	r3, [pc, #412]	; (800d86c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d6ce:	681b      	ldr	r3, [r3, #0]
 800d6d0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d6d4:	f1b8 0f00 	cmp.w	r8, #0
 800d6d8:	d02f      	beq.n	800d73a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d6da:	6803      	ldr	r3, [r0, #0]
 800d6dc:	6945      	ldr	r5, [r0, #20]
 800d6de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d6e0:	2d00      	cmp	r5, #0
 800d6e2:	f000 80ba 	beq.w	800d85a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d6e6:	696f      	ldr	r7, [r5, #20]
 800d6e8:	4798      	blx	r3
 800d6ea:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d6ee:	fb13 f000 	smulbb	r0, r3, r0
 800d6f2:	b280      	uxth	r0, r0
 800d6f4:	1c43      	adds	r3, r0, #1
 800d6f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d6fa:	0a03      	lsrs	r3, r0, #8
 800d6fc:	d01d      	beq.n	800d73a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d6fe:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d700:	6823      	ldr	r3, [r4, #0]
 800d702:	434e      	muls	r6, r1
 800d704:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d708:	4639      	mov	r1, r7
 800d70a:	4620      	mov	r0, r4
 800d70c:	4798      	blx	r3
 800d70e:	6823      	ldr	r3, [r4, #0]
 800d710:	4605      	mov	r5, r0
 800d712:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d716:	4639      	mov	r1, r7
 800d718:	4620      	mov	r0, r4
 800d71a:	4798      	blx	r3
 800d71c:	2d00      	cmp	r5, #0
 800d71e:	dd0f      	ble.n	800d740 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d720:	fb96 f3f5 	sdiv	r3, r6, r5
 800d724:	436b      	muls	r3, r5
 800d726:	1b9a      	subs	r2, r3, r6
 800d728:	4253      	negs	r3, r2
 800d72a:	4153      	adcs	r3, r2
 800d72c:	2800      	cmp	r0, #0
 800d72e:	dd09      	ble.n	800d744 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d730:	fb96 f2f0 	sdiv	r2, r6, r0
 800d734:	4350      	muls	r0, r2
 800d736:	42b0      	cmp	r0, r6
 800d738:	d10e      	bne.n	800d758 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d73a:	b012      	add	sp, #72	; 0x48
 800d73c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d740:	2300      	movs	r3, #0
 800d742:	e7f3      	b.n	800d72c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d744:	d108      	bne.n	800d758 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d746:	2d00      	cmp	r5, #0
 800d748:	f040 8084 	bne.w	800d854 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d74c:	2e00      	cmp	r6, #0
 800d74e:	d055      	beq.n	800d7fc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d750:	2b00      	cmp	r3, #0
 800d752:	d0f2      	beq.n	800d73a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d754:	462a      	mov	r2, r5
 800d756:	e007      	b.n	800d768 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d758:	2b00      	cmp	r3, #0
 800d75a:	d0ee      	beq.n	800d73a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d75c:	2d00      	cmp	r5, #0
 800d75e:	d0f9      	beq.n	800d754 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d760:	fb96 f2f5 	sdiv	r2, r6, r5
 800d764:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d766:	436a      	muls	r2, r5
 800d768:	683b      	ldr	r3, [r7, #0]
 800d76a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d870 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d76e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d772:	4631      	mov	r1, r6
 800d774:	4638      	mov	r0, r7
 800d776:	4798      	blx	r3
 800d778:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d77a:	9302      	str	r3, [sp, #8]
 800d77c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d780:	9301      	str	r3, [sp, #4]
 800d782:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d786:	9300      	str	r3, [sp, #0]
 800d788:	a908      	add	r1, sp, #32
 800d78a:	4603      	mov	r3, r0
 800d78c:	2214      	movs	r2, #20
 800d78e:	4620      	mov	r0, r4
 800d790:	f7ff ff28 	bl	800d5e4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d794:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d798:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d79a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d79e:	f8d8 3000 	ldr.w	r3, [r8]
 800d7a2:	d12d      	bne.n	800d800 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d7a4:	f8d9 0000 	ldr.w	r0, [r9]
 800d7a8:	699d      	ldr	r5, [r3, #24]
 800d7aa:	f7f7 fc1f 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800d7ae:	aa08      	add	r2, sp, #32
 800d7b0:	4601      	mov	r1, r0
 800d7b2:	4640      	mov	r0, r8
 800d7b4:	47a8      	blx	r5
 800d7b6:	4605      	mov	r5, r0
 800d7b8:	683b      	ldr	r3, [r7, #0]
 800d7ba:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d7be:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d7c2:	4631      	mov	r1, r6
 800d7c4:	4638      	mov	r0, r7
 800d7c6:	4798      	blx	r3
 800d7c8:	ab12      	add	r3, sp, #72	; 0x48
 800d7ca:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d7ce:	4618      	mov	r0, r3
 800d7d0:	f7fe fea8 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d7d4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d7d8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d7dc:	4440      	add	r0, r8
 800d7de:	6823      	ldr	r3, [r4, #0]
 800d7e0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d7e4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d7e8:	2200      	movs	r2, #0
 800d7ea:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d7ee:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d7f2:	691b      	ldr	r3, [r3, #16]
 800d7f4:	a906      	add	r1, sp, #24
 800d7f6:	4620      	mov	r0, r4
 800d7f8:	4798      	blx	r3
 800d7fa:	e79e      	b.n	800d73a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d7fc:	4632      	mov	r2, r6
 800d7fe:	e7b3      	b.n	800d768 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d800:	f8d9 0000 	ldr.w	r0, [r9]
 800d804:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d806:	f7f7 fbf1 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800d80a:	aa08      	add	r2, sp, #32
 800d80c:	4601      	mov	r1, r0
 800d80e:	4640      	mov	r0, r8
 800d810:	47a8      	blx	r5
 800d812:	f8d8 3000 	ldr.w	r3, [r8]
 800d816:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d818:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d81c:	4605      	mov	r5, r0
 800d81e:	f8d9 0000 	ldr.w	r0, [r9]
 800d822:	f7f7 fbe3 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800d826:	aa08      	add	r2, sp, #32
 800d828:	4601      	mov	r1, r0
 800d82a:	4640      	mov	r0, r8
 800d82c:	47d0      	blx	sl
 800d82e:	f8d8 3000 	ldr.w	r3, [r8]
 800d832:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d834:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d838:	fb15 f500 	smulbb	r5, r5, r0
 800d83c:	f8d9 0000 	ldr.w	r0, [r9]
 800d840:	f7f7 fbd4 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800d844:	aa08      	add	r2, sp, #32
 800d846:	4601      	mov	r1, r0
 800d848:	4640      	mov	r0, r8
 800d84a:	47d0      	blx	sl
 800d84c:	b2ad      	uxth	r5, r5
 800d84e:	4405      	add	r5, r0
 800d850:	b2ad      	uxth	r5, r5
 800d852:	e7b1      	b.n	800d7b8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d854:	2b00      	cmp	r3, #0
 800d856:	d183      	bne.n	800d760 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d858:	e76f      	b.n	800d73a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d85a:	4798      	blx	r3
 800d85c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d860:	deff      	udf	#255	; 0xff
 800d862:	bf00      	nop
 800d864:	20015850 	.word	0x20015850
 800d868:	2001584c 	.word	0x2001584c
 800d86c:	20015854 	.word	0x20015854
 800d870:	20015858 	.word	0x20015858

0800d874 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d878:	461d      	mov	r5, r3
 800d87a:	b099      	sub	sp, #100	; 0x64
 800d87c:	681b      	ldr	r3, [r3, #0]
 800d87e:	4604      	mov	r4, r0
 800d880:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d884:	4689      	mov	r9, r1
 800d886:	4628      	mov	r0, r5
 800d888:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d88a:	4690      	mov	r8, r2
 800d88c:	4798      	blx	r3
 800d88e:	af18      	add	r7, sp, #96	; 0x60
 800d890:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d894:	4638      	mov	r0, r7
 800d896:	f7fe fe45 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d89a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d89e:	1ac0      	subs	r0, r0, r3
 800d8a0:	b200      	sxth	r0, r0
 800d8a2:	2800      	cmp	r0, #0
 800d8a4:	f2c0 80b0 	blt.w	800da08 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d8a8:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d8ac:	441a      	add	r2, r3
 800d8ae:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d8b2:	1a9b      	subs	r3, r3, r2
 800d8b4:	b21b      	sxth	r3, r3
 800d8b6:	4298      	cmp	r0, r3
 800d8b8:	f280 80a6 	bge.w	800da08 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d8bc:	682b      	ldr	r3, [r5, #0]
 800d8be:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d8c2:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d8c6:	4628      	mov	r0, r5
 800d8c8:	4798      	blx	r3
 800d8ca:	682b      	ldr	r3, [r5, #0]
 800d8cc:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d8d0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d8d4:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d8d8:	4606      	mov	r6, r0
 800d8da:	4628      	mov	r0, r5
 800d8dc:	4798      	blx	r3
 800d8de:	f8cd a000 	str.w	sl, [sp]
 800d8e2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d8e6:	4633      	mov	r3, r6
 800d8e8:	4639      	mov	r1, r7
 800d8ea:	2214      	movs	r2, #20
 800d8ec:	4620      	mov	r0, r4
 800d8ee:	f7ff fe79 	bl	800d5e4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d8f2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d8f6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d8f8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800da68 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d8fc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d900:	f8d8 3000 	ldr.w	r3, [r8]
 800d904:	f040 8083 	bne.w	800da0e <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d908:	f8da 0000 	ldr.w	r0, [sl]
 800d90c:	699e      	ldr	r6, [r3, #24]
 800d90e:	f7f7 fb6d 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800d912:	463a      	mov	r2, r7
 800d914:	4601      	mov	r1, r0
 800d916:	4640      	mov	r0, r8
 800d918:	47b0      	blx	r6
 800d91a:	4606      	mov	r6, r0
 800d91c:	682b      	ldr	r3, [r5, #0]
 800d91e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d920:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d924:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d928:	4628      	mov	r0, r5
 800d92a:	4798      	blx	r3
 800d92c:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d930:	ad05      	add	r5, sp, #20
 800d932:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d936:	4658      	mov	r0, fp
 800d938:	f7fe fdf4 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d93c:	4450      	add	r0, sl
 800d93e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d942:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d946:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d94a:	f04f 0a00 	mov.w	sl, #0
 800d94e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d952:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d956:	f8ad a016 	strh.w	sl, [sp, #22]
 800d95a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d95e:	ae07      	add	r6, sp, #28
 800d960:	e886 0003 	stmia.w	r6, {r0, r1}
 800d964:	4649      	mov	r1, r9
 800d966:	4630      	mov	r0, r6
 800d968:	f7fd fb08 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800d96c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d970:	4553      	cmp	r3, sl
 800d972:	dd49      	ble.n	800da08 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d974:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d978:	4553      	cmp	r3, sl
 800d97a:	dd45      	ble.n	800da08 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d97c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d980:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d984:	1a9b      	subs	r3, r3, r2
 800d986:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d98a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d98e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d992:	1a9b      	subs	r3, r3, r2
 800d994:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d998:	6823      	ldr	r3, [r4, #0]
 800d99a:	4620      	mov	r0, r4
 800d99c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d99e:	4629      	mov	r1, r5
 800d9a0:	4798      	blx	r3
 800d9a2:	4b30      	ldr	r3, [pc, #192]	; (800da64 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d9a4:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d9a8:	681b      	ldr	r3, [r3, #0]
 800d9aa:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d9ae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d9b0:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d9b4:	785b      	ldrb	r3, [r3, #1]
 800d9b6:	920b      	str	r2, [sp, #44]	; 0x2c
 800d9b8:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d9bc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d9c0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d9c4:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d9c8:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d9cc:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d9d0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d9d4:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d9d8:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d9dc:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d9e0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d9e4:	f7f4 ff9a 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800d9e8:	4b1f      	ldr	r3, [pc, #124]	; (800da68 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d9ea:	4604      	mov	r4, r0
 800d9ec:	4649      	mov	r1, r9
 800d9ee:	6818      	ldr	r0, [r3, #0]
 800d9f0:	f7f7 fafc 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800d9f4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d9f8:	e9cd b000 	strd	fp, r0, [sp]
 800d9fc:	4633      	mov	r3, r6
 800d9fe:	e895 0006 	ldmia.w	r5, {r1, r2}
 800da02:	4620      	mov	r0, r4
 800da04:	f7f7 faa4 	bl	8004f50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800da08:	b019      	add	sp, #100	; 0x64
 800da0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da0e:	f8da 0000 	ldr.w	r0, [sl]
 800da12:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800da14:	f7f7 faea 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800da18:	463a      	mov	r2, r7
 800da1a:	4601      	mov	r1, r0
 800da1c:	4640      	mov	r0, r8
 800da1e:	47b0      	blx	r6
 800da20:	f8d8 3000 	ldr.w	r3, [r8]
 800da24:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800da26:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800da2a:	4606      	mov	r6, r0
 800da2c:	f8da 0000 	ldr.w	r0, [sl]
 800da30:	f7f7 fadc 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800da34:	463a      	mov	r2, r7
 800da36:	4601      	mov	r1, r0
 800da38:	4640      	mov	r0, r8
 800da3a:	47d8      	blx	fp
 800da3c:	f8d8 3000 	ldr.w	r3, [r8]
 800da40:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800da42:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800da46:	fb16 f600 	smulbb	r6, r6, r0
 800da4a:	f8da 0000 	ldr.w	r0, [sl]
 800da4e:	f7f7 facd 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800da52:	463a      	mov	r2, r7
 800da54:	4601      	mov	r1, r0
 800da56:	4640      	mov	r0, r8
 800da58:	47d8      	blx	fp
 800da5a:	b2b6      	uxth	r6, r6
 800da5c:	4406      	add	r6, r0
 800da5e:	b2b6      	uxth	r6, r6
 800da60:	e75c      	b.n	800d91c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800da62:	bf00      	nop
 800da64:	2001584c 	.word	0x2001584c
 800da68:	20015858 	.word	0x20015858

0800da6c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800da6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da70:	4698      	mov	r8, r3
 800da72:	b099      	sub	sp, #100	; 0x64
 800da74:	681b      	ldr	r3, [r3, #0]
 800da76:	4604      	mov	r4, r0
 800da78:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800da7c:	4689      	mov	r9, r1
 800da7e:	4640      	mov	r0, r8
 800da80:	9922      	ldr	r1, [sp, #136]	; 0x88
 800da82:	4617      	mov	r7, r2
 800da84:	4798      	blx	r3
 800da86:	ae18      	add	r6, sp, #96	; 0x60
 800da88:	f846 0d28 	str.w	r0, [r6, #-40]!
 800da8c:	4630      	mov	r0, r6
 800da8e:	f7fe fd49 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800da92:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800da96:	1ac0      	subs	r0, r0, r3
 800da98:	b200      	sxth	r0, r0
 800da9a:	2800      	cmp	r0, #0
 800da9c:	f2c0 80c0 	blt.w	800dc20 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800daa0:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800daa4:	441a      	add	r2, r3
 800daa6:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800daaa:	1a9b      	subs	r3, r3, r2
 800daac:	b21b      	sxth	r3, r3
 800daae:	4298      	cmp	r0, r3
 800dab0:	f280 80b6 	bge.w	800dc20 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800dab4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dab6:	9302      	str	r3, [sp, #8]
 800dab8:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800dabc:	9301      	str	r3, [sp, #4]
 800dabe:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800dac2:	9300      	str	r3, [sp, #0]
 800dac4:	4631      	mov	r1, r6
 800dac6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800dac8:	f8df a174 	ldr.w	sl, [pc, #372]	; 800dc40 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800dacc:	2214      	movs	r2, #20
 800dace:	4620      	mov	r0, r4
 800dad0:	f7ff fd88 	bl	800d5e4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800dad4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800dad8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dada:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dade:	683b      	ldr	r3, [r7, #0]
 800dae0:	f040 80a1 	bne.w	800dc26 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800dae4:	f8da 0000 	ldr.w	r0, [sl]
 800dae8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800daea:	f7f7 fa7f 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800daee:	4632      	mov	r2, r6
 800daf0:	4601      	mov	r1, r0
 800daf2:	4638      	mov	r0, r7
 800daf4:	47a8      	blx	r5
 800daf6:	683b      	ldr	r3, [r7, #0]
 800daf8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dafa:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800dafe:	4605      	mov	r5, r0
 800db00:	f8da 0000 	ldr.w	r0, [sl]
 800db04:	f7f7 fa72 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800db08:	4632      	mov	r2, r6
 800db0a:	4601      	mov	r1, r0
 800db0c:	4638      	mov	r0, r7
 800db0e:	47d8      	blx	fp
 800db10:	683b      	ldr	r3, [r7, #0]
 800db12:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800db14:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800db18:	fb15 f500 	smulbb	r5, r5, r0
 800db1c:	f8da 0000 	ldr.w	r0, [sl]
 800db20:	f7f7 fa64 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800db24:	4632      	mov	r2, r6
 800db26:	4601      	mov	r1, r0
 800db28:	4638      	mov	r0, r7
 800db2a:	47d8      	blx	fp
 800db2c:	b2ad      	uxth	r5, r5
 800db2e:	4405      	add	r5, r0
 800db30:	b2ad      	uxth	r5, r5
 800db32:	f8d8 3000 	ldr.w	r3, [r8]
 800db36:	9922      	ldr	r1, [sp, #136]	; 0x88
 800db38:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800db3c:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800db40:	4640      	mov	r0, r8
 800db42:	4798      	blx	r3
 800db44:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800db48:	f04f 0800 	mov.w	r8, #0
 800db4c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800db50:	4658      	mov	r0, fp
 800db52:	f7fe fce7 	bl	800c524 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800db56:	4450      	add	r0, sl
 800db58:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800db5c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800db60:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800db64:	f8ad 501a 	strh.w	r5, [sp, #26]
 800db68:	f8ad 8014 	strh.w	r8, [sp, #20]
 800db6c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800db70:	ad05      	add	r5, sp, #20
 800db72:	e895 0003 	ldmia.w	r5, {r0, r1}
 800db76:	f10d 0a1c 	add.w	sl, sp, #28
 800db7a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800db7e:	4649      	mov	r1, r9
 800db80:	4650      	mov	r0, sl
 800db82:	f7fd f9fb 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800db86:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800db8a:	4543      	cmp	r3, r8
 800db8c:	dd48      	ble.n	800dc20 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800db8e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800db92:	4543      	cmp	r3, r8
 800db94:	dd44      	ble.n	800dc20 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800db96:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800db9a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800db9e:	1a9b      	subs	r3, r3, r2
 800dba0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dba4:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800dba8:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800dbac:	1a9b      	subs	r3, r3, r2
 800dbae:	f8ad 301e 	strh.w	r3, [sp, #30]
 800dbb2:	6823      	ldr	r3, [r4, #0]
 800dbb4:	4620      	mov	r0, r4
 800dbb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dbb8:	4629      	mov	r1, r5
 800dbba:	4798      	blx	r3
 800dbbc:	4b1f      	ldr	r3, [pc, #124]	; (800dc3c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800dbbe:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800dbc2:	681b      	ldr	r3, [r3, #0]
 800dbc4:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800dbc8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dbca:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800dbce:	785b      	ldrb	r3, [r3, #1]
 800dbd0:	920b      	str	r2, [sp, #44]	; 0x2c
 800dbd2:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800dbd6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800dbda:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800dbde:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800dbe2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800dbe6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800dbea:	9709      	str	r7, [sp, #36]	; 0x24
 800dbec:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800dbf0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800dbf4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800dbf8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800dbfc:	f7f4 fe8e 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800dc00:	4b0f      	ldr	r3, [pc, #60]	; (800dc40 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800dc02:	4604      	mov	r4, r0
 800dc04:	4649      	mov	r1, r9
 800dc06:	6818      	ldr	r0, [r3, #0]
 800dc08:	f7f7 f9f0 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800dc0c:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800dc10:	e9cd b000 	strd	fp, r0, [sp]
 800dc14:	4653      	mov	r3, sl
 800dc16:	e895 0006 	ldmia.w	r5, {r1, r2}
 800dc1a:	4620      	mov	r0, r4
 800dc1c:	f7f7 f998 	bl	8004f50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800dc20:	b019      	add	sp, #100	; 0x64
 800dc22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc26:	f8da 0000 	ldr.w	r0, [sl]
 800dc2a:	699d      	ldr	r5, [r3, #24]
 800dc2c:	f7f7 f9de 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800dc30:	4632      	mov	r2, r6
 800dc32:	4601      	mov	r1, r0
 800dc34:	4638      	mov	r0, r7
 800dc36:	47a8      	blx	r5
 800dc38:	4605      	mov	r5, r0
 800dc3a:	e77a      	b.n	800db32 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800dc3c:	2001584c 	.word	0x2001584c
 800dc40:	20015858 	.word	0x20015858

0800dc44 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800dc44:	b510      	push	{r4, lr}
 800dc46:	4604      	mov	r4, r0
 800dc48:	f7fe fb05 	bl	800c256 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800dc4c:	2300      	movs	r3, #0
 800dc4e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800dc52:	bd10      	pop	{r4, pc}

0800dc54 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800dc54:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800dc58:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800dc5c:	429a      	cmp	r2, r3
 800dc5e:	d101      	bne.n	800dc64 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800dc60:	f7fe bd38 	b.w	800c6d4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800dc64:	4770      	bx	lr

0800dc66 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800dc66:	b538      	push	{r3, r4, r5, lr}
 800dc68:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800dc6c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800dc70:	42a5      	cmp	r5, r4
 800dc72:	da04      	bge.n	800dc7e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800dc74:	6803      	ldr	r3, [r0, #0]
 800dc76:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800dc7a:	4798      	blx	r3
 800dc7c:	bd38      	pop	{r3, r4, r5, pc}
 800dc7e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800dc82:	4408      	add	r0, r1
 800dc84:	1b00      	subs	r0, r0, r4
 800dc86:	e7f9      	b.n	800dc7c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800dc88 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800dc88:	b570      	push	{r4, r5, r6, lr}
 800dc8a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800dc8e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800dc92:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800dc96:	4604      	mov	r4, r0
 800dc98:	1c6b      	adds	r3, r5, #1
 800dc9a:	b21b      	sxth	r3, r3
 800dc9c:	42ae      	cmp	r6, r5
 800dc9e:	bf08      	it	eq
 800dca0:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800dca4:	fb93 f0f2 	sdiv	r0, r3, r2
 800dca8:	fb02 3010 	mls	r0, r2, r0, r3
 800dcac:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800dcb0:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800dcb4:	4296      	cmp	r6, r2
 800dcb6:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800dcba:	d108      	bne.n	800dcce <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800dcbc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800dcc0:	f004 fa85 	bl	80121ce <_ZNK8touchgfx8Drawable10invalidateEv>
 800dcc4:	4620      	mov	r0, r4
 800dcc6:	f7fe fd05 	bl	800c6d4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800dcca:	4628      	mov	r0, r5
 800dccc:	bd70      	pop	{r4, r5, r6, pc}
 800dcce:	4629      	mov	r1, r5
 800dcd0:	4620      	mov	r0, r4
 800dcd2:	f7fe fcd7 	bl	800c684 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800dcd6:	e7f8      	b.n	800dcca <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800dcd8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800dcd8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800dcdc:	4770      	bx	lr

0800dcde <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800dcde:	b510      	push	{r4, lr}
 800dce0:	4604      	mov	r4, r0
 800dce2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800dce4:	b150      	cbz	r0, 800dcfc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dce6:	6803      	ldr	r3, [r0, #0]
 800dce8:	68db      	ldr	r3, [r3, #12]
 800dcea:	4798      	blx	r3
 800dcec:	b130      	cbz	r0, 800dcfc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dcee:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800dcf0:	6803      	ldr	r3, [r0, #0]
 800dcf2:	4621      	mov	r1, r4
 800dcf4:	689b      	ldr	r3, [r3, #8]
 800dcf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dcfa:	4718      	bx	r3
 800dcfc:	bd10      	pop	{r4, pc}

0800dcfe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800dcfe:	b570      	push	{r4, r5, r6, lr}
 800dd00:	790b      	ldrb	r3, [r1, #4]
 800dd02:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800dd06:	2b00      	cmp	r3, #0
 800dd08:	bf0c      	ite	eq
 800dd0a:	2301      	moveq	r3, #1
 800dd0c:	2300      	movne	r3, #0
 800dd0e:	4604      	mov	r4, r0
 800dd10:	460e      	mov	r6, r1
 800dd12:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800dd16:	d109      	bne.n	800dd2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800dd18:	b14d      	cbz	r5, 800dd2e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800dd1a:	7933      	ldrb	r3, [r6, #4]
 800dd1c:	2b01      	cmp	r3, #1
 800dd1e:	d10c      	bne.n	800dd3a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dd20:	6823      	ldr	r3, [r4, #0]
 800dd22:	4620      	mov	r0, r4
 800dd24:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800dd26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd2a:	4718      	bx	r3
 800dd2c:	b12d      	cbz	r5, 800dd3a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dd2e:	6823      	ldr	r3, [r4, #0]
 800dd30:	4620      	mov	r0, r4
 800dd32:	695b      	ldr	r3, [r3, #20]
 800dd34:	4798      	blx	r3
 800dd36:	2d00      	cmp	r5, #0
 800dd38:	d1ef      	bne.n	800dd1a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800dd3a:	bd70      	pop	{r4, r5, r6, pc}

0800dd3c <_ZN8touchgfx12ToggleButtonD1Ev>:
 800dd3c:	4770      	bx	lr

0800dd3e <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800dd3e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dd42:	b133      	cbz	r3, 800dd52 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800dd44:	790b      	ldrb	r3, [r1, #4]
 800dd46:	2b01      	cmp	r3, #1
 800dd48:	bf01      	itttt	eq
 800dd4a:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800dd4c:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800dd4e:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800dd50:	8603      	strheq	r3, [r0, #48]	; 0x30
 800dd52:	f7ff bfd4 	b.w	800dcfe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800dd56 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800dd56:	8813      	ldrh	r3, [r2, #0]
 800dd58:	8683      	strh	r3, [r0, #52]	; 0x34
 800dd5a:	f000 bbd0 	b.w	800e4fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800dd5e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800dd5e:	b510      	push	{r4, lr}
 800dd60:	2138      	movs	r1, #56	; 0x38
 800dd62:	4604      	mov	r4, r0
 800dd64:	f012 fdb8 	bl	80208d8 <_ZdlPvj>
 800dd68:	4620      	mov	r0, r4
 800dd6a:	bd10      	pop	{r4, pc}

0800dd6c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800dd6c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800dd70:	b12a      	cbz	r2, 800dd7e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800dd72:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800dd76:	b112      	cbz	r2, 800dd7e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800dd78:	6803      	ldr	r3, [r0, #0]
 800dd7a:	695b      	ldr	r3, [r3, #20]
 800dd7c:	4718      	bx	r3
 800dd7e:	4770      	bx	lr

0800dd80 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800dd80:	2000      	movs	r0, #0
 800dd82:	4770      	bx	lr

0800dd84 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800dd84:	4b07      	ldr	r3, [pc, #28]	; (800dda4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800dd86:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800dd88:	881b      	ldrh	r3, [r3, #0]
 800dd8a:	4293      	cmp	r3, r2
 800dd8c:	bf81      	itttt	hi
 800dd8e:	4b06      	ldrhi	r3, [pc, #24]	; (800dda8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800dd90:	681b      	ldrhi	r3, [r3, #0]
 800dd92:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800dd96:	7858      	ldrbhi	r0, [r3, #1]
 800dd98:	bf8c      	ite	hi
 800dd9a:	f000 0003 	andhi.w	r0, r0, #3
 800dd9e:	2000      	movls	r0, #0
 800dda0:	4770      	bx	lr
 800dda2:	bf00      	nop
 800dda4:	20015850 	.word	0x20015850
 800dda8:	2001584c 	.word	0x2001584c

0800ddac <_ZN8touchgfx8TextAreaD1Ev>:
 800ddac:	4770      	bx	lr
	...

0800ddb0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800ddb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ddb4:	4b10      	ldr	r3, [pc, #64]	; (800ddf8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800ddb6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ddb8:	881b      	ldrh	r3, [r3, #0]
 800ddba:	428b      	cmp	r3, r1
 800ddbc:	4604      	mov	r4, r0
 800ddbe:	d918      	bls.n	800ddf2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800ddc0:	6803      	ldr	r3, [r0, #0]
 800ddc2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800ddc4:	4b0d      	ldr	r3, [pc, #52]	; (800ddfc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800ddc6:	6818      	ldr	r0, [r3, #0]
 800ddc8:	f7f7 f910 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800ddcc:	6823      	ldr	r3, [r4, #0]
 800ddce:	4606      	mov	r6, r0
 800ddd0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ddd2:	4620      	mov	r0, r4
 800ddd4:	4798      	blx	r3
 800ddd6:	6823      	ldr	r3, [r4, #0]
 800ddd8:	4607      	mov	r7, r0
 800ddda:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ddde:	4620      	mov	r0, r4
 800dde0:	4798      	blx	r3
 800dde2:	463a      	mov	r2, r7
 800dde4:	4603      	mov	r3, r0
 800dde6:	4631      	mov	r1, r6
 800dde8:	4620      	mov	r0, r4
 800ddea:	46ac      	mov	ip, r5
 800ddec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ddf0:	4760      	bx	ip
 800ddf2:	2000      	movs	r0, #0
 800ddf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ddf8:	20015850 	.word	0x20015850
 800ddfc:	20015858 	.word	0x20015858

0800de00 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800de00:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800de04:	4b17      	ldr	r3, [pc, #92]	; (800de64 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800de06:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800de08:	881b      	ldrh	r3, [r3, #0]
 800de0a:	428b      	cmp	r3, r1
 800de0c:	4604      	mov	r4, r0
 800de0e:	d926      	bls.n	800de5e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800de10:	4b15      	ldr	r3, [pc, #84]	; (800de68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800de12:	681b      	ldr	r3, [r3, #0]
 800de14:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800de18:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800de1c:	4b13      	ldr	r3, [pc, #76]	; (800de6c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800de1e:	7855      	ldrb	r5, [r2, #1]
 800de20:	681b      	ldr	r3, [r3, #0]
 800de22:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800de26:	6833      	ldr	r3, [r6, #0]
 800de28:	69df      	ldr	r7, [r3, #28]
 800de2a:	4b11      	ldr	r3, [pc, #68]	; (800de70 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800de2c:	6818      	ldr	r0, [r3, #0]
 800de2e:	f7f7 f8dd 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800de32:	6823      	ldr	r3, [r4, #0]
 800de34:	4680      	mov	r8, r0
 800de36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800de38:	4620      	mov	r0, r4
 800de3a:	4798      	blx	r3
 800de3c:	6823      	ldr	r3, [r4, #0]
 800de3e:	4681      	mov	r9, r0
 800de40:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800de44:	4620      	mov	r0, r4
 800de46:	4798      	blx	r3
 800de48:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800de4c:	9000      	str	r0, [sp, #0]
 800de4e:	464b      	mov	r3, r9
 800de50:	4642      	mov	r2, r8
 800de52:	4629      	mov	r1, r5
 800de54:	4630      	mov	r0, r6
 800de56:	47b8      	blx	r7
 800de58:	b003      	add	sp, #12
 800de5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800de5e:	2000      	movs	r0, #0
 800de60:	e7fa      	b.n	800de58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800de62:	bf00      	nop
 800de64:	20015850 	.word	0x20015850
 800de68:	2001584c 	.word	0x2001584c
 800de6c:	20015854 	.word	0x20015854
 800de70:	20015858 	.word	0x20015858

0800de74 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800de74:	b40e      	push	{r1, r2, r3}
 800de76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800de7a:	4b2f      	ldr	r3, [pc, #188]	; (800df38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800de7c:	881a      	ldrh	r2, [r3, #0]
 800de7e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800de80:	429a      	cmp	r2, r3
 800de82:	b09d      	sub	sp, #116	; 0x74
 800de84:	4604      	mov	r4, r0
 800de86:	d954      	bls.n	800df32 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800de88:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800df3c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800de8c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800df40 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800de90:	aa26      	add	r2, sp, #152	; 0x98
 800de92:	9202      	str	r2, [sp, #8]
 800de94:	f8d9 2000 	ldr.w	r2, [r9]
 800de98:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800de9c:	f8d8 3000 	ldr.w	r3, [r8]
 800dea0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dea4:	682b      	ldr	r3, [r5, #0]
 800dea6:	4628      	mov	r0, r5
 800dea8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800deaa:	4798      	blx	r3
 800deac:	b207      	sxth	r7, r0
 800deae:	4606      	mov	r6, r0
 800deb0:	a803      	add	r0, sp, #12
 800deb2:	f004 fedc 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 800deb6:	682b      	ldr	r3, [r5, #0]
 800deb8:	4628      	mov	r0, r5
 800deba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800debc:	4798      	blx	r3
 800debe:	682b      	ldr	r3, [r5, #0]
 800dec0:	4682      	mov	sl, r0
 800dec2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dec4:	4628      	mov	r0, r5
 800dec6:	4798      	blx	r3
 800dec8:	4653      	mov	r3, sl
 800deca:	9000      	str	r0, [sp, #0]
 800decc:	9a02      	ldr	r2, [sp, #8]
 800dece:	9925      	ldr	r1, [sp, #148]	; 0x94
 800ded0:	a803      	add	r0, sp, #12
 800ded2:	f004 ff27 	bl	8012d24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ded6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ded8:	f8d9 3000 	ldr.w	r3, [r9]
 800dedc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800dee0:	8925      	ldrh	r5, [r4, #8]
 800dee2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800dee6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800deea:	eba5 050c 	sub.w	r5, r5, ip
 800deee:	784a      	ldrb	r2, [r1, #1]
 800def0:	f8d8 3000 	ldr.w	r3, [r8]
 800def4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800def8:	b22d      	sxth	r5, r5
 800defa:	9500      	str	r5, [sp, #0]
 800defc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800df00:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800df04:	a803      	add	r0, sp, #12
 800df06:	f002 fd21 	bl	801094c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800df0a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800df0e:	18b9      	adds	r1, r7, r2
 800df10:	2900      	cmp	r1, #0
 800df12:	b203      	sxth	r3, r0
 800df14:	dd0b      	ble.n	800df2e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800df16:	3b01      	subs	r3, #1
 800df18:	fb13 f302 	smulbb	r3, r3, r2
 800df1c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800df20:	b21f      	sxth	r7, r3
 800df22:	4638      	mov	r0, r7
 800df24:	b01d      	add	sp, #116	; 0x74
 800df26:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800df2a:	b003      	add	sp, #12
 800df2c:	4770      	bx	lr
 800df2e:	2b00      	cmp	r3, #0
 800df30:	dcf7      	bgt.n	800df22 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800df32:	2700      	movs	r7, #0
 800df34:	e7f5      	b.n	800df22 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800df36:	bf00      	nop
 800df38:	20015850 	.word	0x20015850
 800df3c:	2001584c 	.word	0x2001584c
 800df40:	20015854 	.word	0x20015854

0800df44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800df44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df48:	4bbb      	ldr	r3, [pc, #748]	; (800e238 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800df4a:	460c      	mov	r4, r1
 800df4c:	881b      	ldrh	r3, [r3, #0]
 800df4e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800df50:	428b      	cmp	r3, r1
 800df52:	b0a9      	sub	sp, #164	; 0xa4
 800df54:	4681      	mov	r9, r0
 800df56:	d809      	bhi.n	800df6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800df58:	2300      	movs	r3, #0
 800df5a:	f04f 32ff 	mov.w	r2, #4294967295
 800df5e:	e9c0 3200 	strd	r3, r2, [r0]
 800df62:	6083      	str	r3, [r0, #8]
 800df64:	4648      	mov	r0, r9
 800df66:	b029      	add	sp, #164	; 0xa4
 800df68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df6c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800e240 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800df70:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800e244 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800df74:	f8db 3000 	ldr.w	r3, [fp]
 800df78:	f8d8 0000 	ldr.w	r0, [r8]
 800df7c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800df80:	4bae      	ldr	r3, [pc, #696]	; (800e23c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800df82:	681b      	ldr	r3, [r3, #0]
 800df84:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800df88:	f7f7 f830 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800df8c:	682b      	ldr	r3, [r5, #0]
 800df8e:	4607      	mov	r7, r0
 800df90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800df92:	4628      	mov	r0, r5
 800df94:	4798      	blx	r3
 800df96:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800df98:	f8cd 800c 	str.w	r8, [sp, #12]
 800df9c:	4430      	add	r0, r6
 800df9e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800dfa2:	b283      	uxth	r3, r0
 800dfa4:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800dfa8:	9302      	str	r3, [sp, #8]
 800dfaa:	4650      	mov	r0, sl
 800dfac:	2e00      	cmp	r6, #0
 800dfae:	f040 8091 	bne.w	800e0d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800dfb2:	f004 fe5c 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 800dfb6:	682b      	ldr	r3, [r5, #0]
 800dfb8:	4628      	mov	r0, r5
 800dfba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dfbc:	4798      	blx	r3
 800dfbe:	682b      	ldr	r3, [r5, #0]
 800dfc0:	9005      	str	r0, [sp, #20]
 800dfc2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dfc4:	4628      	mov	r0, r5
 800dfc6:	4798      	blx	r3
 800dfc8:	6823      	ldr	r3, [r4, #0]
 800dfca:	4680      	mov	r8, r0
 800dfcc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dfce:	4620      	mov	r0, r4
 800dfd0:	4798      	blx	r3
 800dfd2:	6822      	ldr	r2, [r4, #0]
 800dfd4:	9004      	str	r0, [sp, #16]
 800dfd6:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800dfda:	4620      	mov	r0, r4
 800dfdc:	4790      	blx	r2
 800dfde:	9905      	ldr	r1, [sp, #20]
 800dfe0:	9b04      	ldr	r3, [sp, #16]
 800dfe2:	9001      	str	r0, [sp, #4]
 800dfe4:	9300      	str	r3, [sp, #0]
 800dfe6:	460a      	mov	r2, r1
 800dfe8:	4643      	mov	r3, r8
 800dfea:	4639      	mov	r1, r7
 800dfec:	4650      	mov	r0, sl
 800dfee:	f004 feae 	bl	8012d4e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dff2:	4637      	mov	r7, r6
 800dff4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dff6:	f8db 3000 	ldr.w	r3, [fp]
 800dffa:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800dffe:	4629      	mov	r1, r5
 800e000:	785b      	ldrb	r3, [r3, #1]
 800e002:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e006:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e00a:	4650      	mov	r0, sl
 800e00c:	f002 f9f0 	bl	80103f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e010:	4287      	cmp	r7, r0
 800e012:	bfb8      	it	lt
 800e014:	b207      	sxthlt	r7, r0
 800e016:	3601      	adds	r6, #1
 800e018:	4650      	mov	r0, sl
 800e01a:	b2b6      	uxth	r6, r6
 800e01c:	f004 fe4e 	bl	8012cbc <_ZN8touchgfx12TextProvider11endOfStringEv>
 800e020:	2800      	cmp	r0, #0
 800e022:	d0e7      	beq.n	800dff4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800e024:	9b02      	ldr	r3, [sp, #8]
 800e026:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800e02a:	fb13 f606 	smulbb	r6, r3, r6
 800e02e:	eba6 0608 	sub.w	r6, r6, r8
 800e032:	b2b6      	uxth	r6, r6
 800e034:	fa0f f886 	sxth.w	r8, r6
 800e038:	f1b8 0f00 	cmp.w	r8, #0
 800e03c:	dd06      	ble.n	800e04c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800e03e:	682b      	ldr	r3, [r5, #0]
 800e040:	4628      	mov	r0, r5
 800e042:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e044:	4798      	blx	r3
 800e046:	4430      	add	r0, r6
 800e048:	fa0f f880 	sxth.w	r8, r0
 800e04c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e050:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e054:	6823      	ldr	r3, [r4, #0]
 800e056:	bf08      	it	eq
 800e058:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800e05c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e05e:	bf18      	it	ne
 800e060:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800e064:	4620      	mov	r0, r4
 800e066:	4798      	blx	r3
 800e068:	2801      	cmp	r0, #1
 800e06a:	b2ba      	uxth	r2, r7
 800e06c:	f000 80d1 	beq.w	800e212 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800e070:	2802      	cmp	r0, #2
 800e072:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e076:	f000 80d2 	beq.w	800e21e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800e07a:	b21e      	sxth	r6, r3
 800e07c:	7a29      	ldrb	r1, [r5, #8]
 800e07e:	7a6d      	ldrb	r5, [r5, #9]
 800e080:	1a76      	subs	r6, r6, r1
 800e082:	4429      	add	r1, r5
 800e084:	440a      	add	r2, r1
 800e086:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800e08a:	b2b3      	uxth	r3, r6
 800e08c:	b292      	uxth	r2, r2
 800e08e:	2902      	cmp	r1, #2
 800e090:	b21f      	sxth	r7, r3
 800e092:	b216      	sxth	r6, r2
 800e094:	f000 80c6 	beq.w	800e224 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800e098:	2903      	cmp	r1, #3
 800e09a:	f000 80d5 	beq.w	800e248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800e09e:	2901      	cmp	r1, #1
 800e0a0:	f040 80db 	bne.w	800e25a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800e0a4:	8923      	ldrh	r3, [r4, #8]
 800e0a6:	4632      	mov	r2, r6
 800e0a8:	eba3 0308 	sub.w	r3, r3, r8
 800e0ac:	4646      	mov	r6, r8
 800e0ae:	463d      	mov	r5, r7
 800e0b0:	4690      	mov	r8, r2
 800e0b2:	b21f      	sxth	r7, r3
 800e0b4:	9b03      	ldr	r3, [sp, #12]
 800e0b6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e0b8:	6818      	ldr	r0, [r3, #0]
 800e0ba:	f7f6 ff97 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800e0be:	f8a9 7000 	strh.w	r7, [r9]
 800e0c2:	f8a9 5002 	strh.w	r5, [r9, #2]
 800e0c6:	f8a9 6004 	strh.w	r6, [r9, #4]
 800e0ca:	f8a9 8006 	strh.w	r8, [r9, #6]
 800e0ce:	f8c9 0008 	str.w	r0, [r9, #8]
 800e0d2:	e747      	b.n	800df64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800e0d4:	f004 fdcb 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 800e0d8:	682b      	ldr	r3, [r5, #0]
 800e0da:	4628      	mov	r0, r5
 800e0dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e0de:	4798      	blx	r3
 800e0e0:	682b      	ldr	r3, [r5, #0]
 800e0e2:	4606      	mov	r6, r0
 800e0e4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e0e6:	4628      	mov	r0, r5
 800e0e8:	4798      	blx	r3
 800e0ea:	6823      	ldr	r3, [r4, #0]
 800e0ec:	4680      	mov	r8, r0
 800e0ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e0f0:	4620      	mov	r0, r4
 800e0f2:	4798      	blx	r3
 800e0f4:	6822      	ldr	r2, [r4, #0]
 800e0f6:	9004      	str	r0, [sp, #16]
 800e0f8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800e0fc:	4620      	mov	r0, r4
 800e0fe:	4790      	blx	r2
 800e100:	9b04      	ldr	r3, [sp, #16]
 800e102:	9001      	str	r0, [sp, #4]
 800e104:	4632      	mov	r2, r6
 800e106:	9300      	str	r3, [sp, #0]
 800e108:	4639      	mov	r1, r7
 800e10a:	4643      	mov	r3, r8
 800e10c:	4650      	mov	r0, sl
 800e10e:	f004 fe1e 	bl	8012d4e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e112:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e116:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800e11a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e11c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800e120:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e124:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e128:	bf0a      	itet	eq
 800e12a:	4642      	moveq	r2, r8
 800e12c:	461a      	movne	r2, r3
 800e12e:	4698      	moveq	r8, r3
 800e130:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e134:	1ad2      	subs	r2, r2, r3
 800e136:	f8db 3000 	ldr.w	r3, [fp]
 800e13a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e13e:	7859      	ldrb	r1, [r3, #1]
 800e140:	f8cd a020 	str.w	sl, [sp, #32]
 800e144:	2300      	movs	r3, #0
 800e146:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e14a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e14e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800e152:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800e156:	950a      	str	r5, [sp, #40]	; 0x28
 800e158:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e15c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e160:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800e164:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800e168:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800e16c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e170:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e174:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800e178:	b350      	cbz	r0, 800e1d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e17a:	682b      	ldr	r3, [r5, #0]
 800e17c:	4628      	mov	r0, r5
 800e17e:	695b      	ldr	r3, [r3, #20]
 800e180:	4798      	blx	r3
 800e182:	4607      	mov	r7, r0
 800e184:	b320      	cbz	r0, 800e1d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e186:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e188:	6803      	ldr	r3, [r0, #0]
 800e18a:	4639      	mov	r1, r7
 800e18c:	68db      	ldr	r3, [r3, #12]
 800e18e:	4798      	blx	r3
 800e190:	4606      	mov	r6, r0
 800e192:	b1e8      	cbz	r0, 800e1d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e194:	7b43      	ldrb	r3, [r0, #13]
 800e196:	7a82      	ldrb	r2, [r0, #10]
 800e198:	005b      	lsls	r3, r3, #1
 800e19a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e19e:	4313      	orrs	r3, r2
 800e1a0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e1a4:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800e1a8:	2b04      	cmp	r3, #4
 800e1aa:	d111      	bne.n	800e1d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e1ac:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e1ae:	6803      	ldr	r3, [r0, #0]
 800e1b0:	4632      	mov	r2, r6
 800e1b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e1b4:	4639      	mov	r1, r7
 800e1b6:	4798      	blx	r3
 800e1b8:	7b73      	ldrb	r3, [r6, #13]
 800e1ba:	005b      	lsls	r3, r3, #1
 800e1bc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e1c0:	7ab3      	ldrb	r3, [r6, #10]
 800e1c2:	4313      	orrs	r3, r2
 800e1c4:	4418      	add	r0, r3
 800e1c6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800e1ca:	4418      	add	r0, r3
 800e1cc:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800e1d0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800e1d4:	2600      	movs	r6, #0
 800e1d6:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800e1da:	4637      	mov	r7, r6
 800e1dc:	45c3      	cmp	fp, r8
 800e1de:	bfd4      	ite	le
 800e1e0:	2100      	movle	r1, #0
 800e1e2:	2101      	movgt	r1, #1
 800e1e4:	a807      	add	r0, sp, #28
 800e1e6:	f002 fae2 	bl	80107ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e1ea:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800e1ee:	429f      	cmp	r7, r3
 800e1f0:	bfb8      	it	lt
 800e1f2:	b21f      	sxthlt	r7, r3
 800e1f4:	9b02      	ldr	r3, [sp, #8]
 800e1f6:	eba8 0803 	sub.w	r8, r8, r3
 800e1fa:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800e1fe:	3601      	adds	r6, #1
 800e200:	b2b6      	uxth	r6, r6
 800e202:	fa0f f888 	sxth.w	r8, r8
 800e206:	2b00      	cmp	r3, #0
 800e208:	f43f af0c 	beq.w	800e024 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e20c:	45c2      	cmp	sl, r8
 800e20e:	dbe5      	blt.n	800e1dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800e210:	e708      	b.n	800e024 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e212:	1bf6      	subs	r6, r6, r7
 800e214:	2702      	movs	r7, #2
 800e216:	fb96 f6f7 	sdiv	r6, r6, r7
 800e21a:	b236      	sxth	r6, r6
 800e21c:	e72e      	b.n	800e07c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800e21e:	4413      	add	r3, r2
 800e220:	1af6      	subs	r6, r6, r3
 800e222:	e7fa      	b.n	800e21a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800e224:	8925      	ldrh	r5, [r4, #8]
 800e226:	1aad      	subs	r5, r5, r2
 800e228:	1aed      	subs	r5, r5, r3
 800e22a:	b22f      	sxth	r7, r5
 800e22c:	8965      	ldrh	r5, [r4, #10]
 800e22e:	eba5 0508 	sub.w	r5, r5, r8
 800e232:	b22d      	sxth	r5, r5
 800e234:	e73e      	b.n	800e0b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e236:	bf00      	nop
 800e238:	20015850 	.word	0x20015850
 800e23c:	20015854 	.word	0x20015854
 800e240:	2001584c 	.word	0x2001584c
 800e244:	20015858 	.word	0x20015858
 800e248:	8965      	ldrh	r5, [r4, #10]
 800e24a:	1aad      	subs	r5, r5, r2
 800e24c:	1aed      	subs	r5, r5, r3
 800e24e:	4633      	mov	r3, r6
 800e250:	b22d      	sxth	r5, r5
 800e252:	4646      	mov	r6, r8
 800e254:	2700      	movs	r7, #0
 800e256:	4698      	mov	r8, r3
 800e258:	e72c      	b.n	800e0b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e25a:	2500      	movs	r5, #0
 800e25c:	e72a      	b.n	800e0b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e25e:	bf00      	nop

0800e260 <_ZN8touchgfx8TextAreaD0Ev>:
 800e260:	b510      	push	{r4, lr}
 800e262:	2148      	movs	r1, #72	; 0x48
 800e264:	4604      	mov	r4, r0
 800e266:	f012 fb37 	bl	80208d8 <_ZdlPvj>
 800e26a:	4620      	mov	r0, r4
 800e26c:	bd10      	pop	{r4, pc}
	...

0800e270 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e270:	b513      	push	{r0, r1, r4, lr}
 800e272:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e276:	4604      	mov	r4, r0
 800e278:	b1fb      	cbz	r3, 800e2ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e27a:	4b16      	ldr	r3, [pc, #88]	; (800e2d4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e27c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e27e:	881b      	ldrh	r3, [r3, #0]
 800e280:	428b      	cmp	r3, r1
 800e282:	d91a      	bls.n	800e2ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e284:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e288:	2b00      	cmp	r3, #0
 800e28a:	dd16      	ble.n	800e2ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e28c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e290:	2b00      	cmp	r3, #0
 800e292:	dd12      	ble.n	800e2ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e294:	4b10      	ldr	r3, [pc, #64]	; (800e2d8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e296:	6818      	ldr	r0, [r3, #0]
 800e298:	f7f6 fea8 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800e29c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e2a0:	6822      	ldr	r2, [r4, #0]
 800e2a2:	2b00      	cmp	r3, #0
 800e2a4:	db06      	blt.n	800e2b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e2a6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e2aa:	2b00      	cmp	r3, #0
 800e2ac:	db02      	blt.n	800e2b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e2ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e2b0:	4298      	cmp	r0, r3
 800e2b2:	d004      	beq.n	800e2be <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e2b4:	6953      	ldr	r3, [r2, #20]
 800e2b6:	4620      	mov	r0, r4
 800e2b8:	4798      	blx	r3
 800e2ba:	b002      	add	sp, #8
 800e2bc:	bd10      	pop	{r4, pc}
 800e2be:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e2c2:	c903      	ldmia	r1, {r0, r1}
 800e2c4:	466b      	mov	r3, sp
 800e2c6:	e883 0003 	stmia.w	r3, {r0, r1}
 800e2ca:	6912      	ldr	r2, [r2, #16]
 800e2cc:	4619      	mov	r1, r3
 800e2ce:	4620      	mov	r0, r4
 800e2d0:	4790      	blx	r2
 800e2d2:	e7f2      	b.n	800e2ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e2d4:	20015850 	.word	0x20015850
 800e2d8:	20015858 	.word	0x20015858

0800e2dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e2dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2e0:	4b44      	ldr	r3, [pc, #272]	; (800e3f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e2e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e2e4:	881b      	ldrh	r3, [r3, #0]
 800e2e6:	4293      	cmp	r3, r2
 800e2e8:	b08e      	sub	sp, #56	; 0x38
 800e2ea:	4604      	mov	r4, r0
 800e2ec:	d97e      	bls.n	800e3ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e2ee:	6808      	ldr	r0, [r1, #0]
 800e2f0:	4d41      	ldr	r5, [pc, #260]	; (800e3f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e2f2:	6849      	ldr	r1, [r1, #4]
 800e2f4:	ab05      	add	r3, sp, #20
 800e2f6:	c303      	stmia	r3!, {r0, r1}
 800e2f8:	4611      	mov	r1, r2
 800e2fa:	6828      	ldr	r0, [r5, #0]
 800e2fc:	f7f6 fe76 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800e300:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e304:	2b00      	cmp	r3, #0
 800e306:	db11      	blt.n	800e32c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e308:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e30c:	2b00      	cmp	r3, #0
 800e30e:	db0d      	blt.n	800e32c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e310:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e312:	4298      	cmp	r0, r3
 800e314:	d10a      	bne.n	800e32c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e316:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e31a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e31e:	ab09      	add	r3, sp, #36	; 0x24
 800e320:	e883 0003 	stmia.w	r3, {r0, r1}
 800e324:	4619      	mov	r1, r3
 800e326:	a805      	add	r0, sp, #20
 800e328:	f7fc fe28 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800e32c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e330:	2b00      	cmp	r3, #0
 800e332:	dd5b      	ble.n	800e3ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e334:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e338:	2b00      	cmp	r3, #0
 800e33a:	dd57      	ble.n	800e3ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e33c:	4f2f      	ldr	r7, [pc, #188]	; (800e3fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e33e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e340:	683b      	ldr	r3, [r7, #0]
 800e342:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e346:	4b2e      	ldr	r3, [pc, #184]	; (800e400 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e348:	681b      	ldr	r3, [r3, #0]
 800e34a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e34e:	2e00      	cmp	r6, #0
 800e350:	d04c      	beq.n	800e3ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e352:	6823      	ldr	r3, [r4, #0]
 800e354:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e358:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e35a:	4620      	mov	r0, r4
 800e35c:	4798      	blx	r3
 800e35e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e360:	683b      	ldr	r3, [r7, #0]
 800e362:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e366:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e36a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e36e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e370:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e374:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e378:	785b      	ldrb	r3, [r3, #1]
 800e37a:	9609      	str	r6, [sp, #36]	; 0x24
 800e37c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e380:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e384:	4b1f      	ldr	r3, [pc, #124]	; (800e404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e386:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e38a:	681b      	ldr	r3, [r3, #0]
 800e38c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e390:	910b      	str	r1, [sp, #44]	; 0x2c
 800e392:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e396:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e39a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e39e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e3a2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e3a6:	b10a      	cbz	r2, 800e3ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e3a8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e3aa:	b906      	cbnz	r6, 800e3ae <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e3ac:	689e      	ldr	r6, [r3, #8]
 800e3ae:	af07      	add	r7, sp, #28
 800e3b0:	4621      	mov	r1, r4
 800e3b2:	4638      	mov	r0, r7
 800e3b4:	f003 ffa6 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e3b8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e3ba:	6828      	ldr	r0, [r5, #0]
 800e3bc:	f7f6 fe16 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800e3c0:	6823      	ldr	r3, [r4, #0]
 800e3c2:	4605      	mov	r5, r0
 800e3c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e3c6:	4620      	mov	r0, r4
 800e3c8:	4798      	blx	r3
 800e3ca:	6823      	ldr	r3, [r4, #0]
 800e3cc:	4680      	mov	r8, r0
 800e3ce:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e3d2:	4620      	mov	r0, r4
 800e3d4:	4798      	blx	r3
 800e3d6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e3da:	ab09      	add	r3, sp, #36	; 0x24
 800e3dc:	9300      	str	r3, [sp, #0]
 800e3de:	9501      	str	r5, [sp, #4]
 800e3e0:	ab05      	add	r3, sp, #20
 800e3e2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e3e6:	4630      	mov	r0, r6
 800e3e8:	f7f6 fdb2 	bl	8004f50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e3ec:	b00e      	add	sp, #56	; 0x38
 800e3ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e3f2:	bf00      	nop
 800e3f4:	20015850 	.word	0x20015850
 800e3f8:	20015858 	.word	0x20015858
 800e3fc:	2001584c 	.word	0x2001584c
 800e400:	20015854 	.word	0x20015854
 800e404:	200157f4 	.word	0x200157f4

0800e408 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e408:	b538      	push	{r3, r4, r5, lr}
 800e40a:	4b0e      	ldr	r3, [pc, #56]	; (800e444 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e40c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e40e:	881b      	ldrh	r3, [r3, #0]
 800e410:	429a      	cmp	r2, r3
 800e412:	4604      	mov	r4, r0
 800e414:	d214      	bcs.n	800e440 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e416:	6803      	ldr	r3, [r0, #0]
 800e418:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e41a:	4798      	blx	r3
 800e41c:	6823      	ldr	r3, [r4, #0]
 800e41e:	4605      	mov	r5, r0
 800e420:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e422:	4620      	mov	r0, r4
 800e424:	4798      	blx	r3
 800e426:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e42a:	b22d      	sxth	r5, r5
 800e42c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e430:	4601      	mov	r1, r0
 800e432:	bf06      	itte	eq
 800e434:	4602      	moveq	r2, r0
 800e436:	4629      	moveq	r1, r5
 800e438:	462a      	movne	r2, r5
 800e43a:	4620      	mov	r0, r4
 800e43c:	f7fc fb45 	bl	800aaca <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e440:	bd38      	pop	{r3, r4, r5, pc}
 800e442:	bf00      	nop
 800e444:	20015850 	.word	0x20015850

0800e448 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e448:	b530      	push	{r4, r5, lr}
 800e44a:	888b      	ldrh	r3, [r1, #4]
 800e44c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e44e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e452:	b085      	sub	sp, #20
 800e454:	4604      	mov	r4, r0
 800e456:	b923      	cbnz	r3, 800e462 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e458:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e45c:	b90b      	cbnz	r3, 800e462 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e45e:	f7ff ffd3 	bl	800e408 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e462:	6823      	ldr	r3, [r4, #0]
 800e464:	466d      	mov	r5, sp
 800e466:	4621      	mov	r1, r4
 800e468:	4628      	mov	r0, r5
 800e46a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e46e:	4798      	blx	r3
 800e470:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e474:	343c      	adds	r4, #60	; 0x3c
 800e476:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e47a:	b005      	add	sp, #20
 800e47c:	bd30      	pop	{r4, r5, pc}

0800e47e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e47e:	2300      	movs	r3, #0
 800e480:	8083      	strh	r3, [r0, #4]
 800e482:	80c3      	strh	r3, [r0, #6]
 800e484:	8003      	strh	r3, [r0, #0]
 800e486:	8043      	strh	r3, [r0, #2]
 800e488:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e48c:	2bff      	cmp	r3, #255	; 0xff
 800e48e:	bf01      	itttt	eq
 800e490:	890b      	ldrheq	r3, [r1, #8]
 800e492:	8083      	strheq	r3, [r0, #4]
 800e494:	894b      	ldrheq	r3, [r1, #10]
 800e496:	80c3      	strheq	r3, [r0, #6]
 800e498:	4770      	bx	lr
	...

0800e49c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e49c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e49e:	4604      	mov	r4, r0
 800e4a0:	6808      	ldr	r0, [r1, #0]
 800e4a2:	6849      	ldr	r1, [r1, #4]
 800e4a4:	466b      	mov	r3, sp
 800e4a6:	c303      	stmia	r3!, {r0, r1}
 800e4a8:	6823      	ldr	r3, [r4, #0]
 800e4aa:	4669      	mov	r1, sp
 800e4ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4ae:	4620      	mov	r0, r4
 800e4b0:	4798      	blx	r3
 800e4b2:	4b08      	ldr	r3, [pc, #32]	; (800e4d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e4b4:	681b      	ldr	r3, [r3, #0]
 800e4b6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e4ba:	b10a      	cbz	r2, 800e4c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e4bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e4be:	b900      	cbnz	r0, 800e4c2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e4c0:	6898      	ldr	r0, [r3, #8]
 800e4c2:	6803      	ldr	r3, [r0, #0]
 800e4c4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e4c6:	6a1d      	ldr	r5, [r3, #32]
 800e4c8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e4cc:	4669      	mov	r1, sp
 800e4ce:	47a8      	blx	r5
 800e4d0:	b003      	add	sp, #12
 800e4d2:	bd30      	pop	{r4, r5, pc}
 800e4d4:	200157f4 	.word	0x200157f4

0800e4d8 <_ZN8touchgfx3BoxD1Ev>:
 800e4d8:	4770      	bx	lr

0800e4da <_ZN8touchgfx3BoxD0Ev>:
 800e4da:	b510      	push	{r4, lr}
 800e4dc:	212c      	movs	r1, #44	; 0x2c
 800e4de:	4604      	mov	r4, r0
 800e4e0:	f012 f9fa 	bl	80208d8 <_ZdlPvj>
 800e4e4:	4620      	mov	r0, r4
 800e4e6:	bd10      	pop	{r4, pc}

0800e4e8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e4e8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e4ec:	b12a      	cbz	r2, 800e4fa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e4ee:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e4f2:	b112      	cbz	r2, 800e4fa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e4f4:	6803      	ldr	r3, [r0, #0]
 800e4f6:	695b      	ldr	r3, [r3, #20]
 800e4f8:	4718      	bx	r3
 800e4fa:	4770      	bx	lr

0800e4fc <_ZN8touchgfx6ButtonD1Ev>:
 800e4fc:	4770      	bx	lr

0800e4fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e4fe:	b570      	push	{r4, r5, r6, lr}
 800e500:	880b      	ldrh	r3, [r1, #0]
 800e502:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e504:	4605      	mov	r5, r0
 800e506:	8813      	ldrh	r3, [r2, #0]
 800e508:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e50c:	4604      	mov	r4, r0
 800e50e:	4628      	mov	r0, r5
 800e510:	f006 f8f6 	bl	8014700 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e514:	4606      	mov	r6, r0
 800e516:	4628      	mov	r0, r5
 800e518:	f006 f926 	bl	8014768 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e51c:	6823      	ldr	r3, [r4, #0]
 800e51e:	4605      	mov	r5, r0
 800e520:	4631      	mov	r1, r6
 800e522:	4620      	mov	r0, r4
 800e524:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e526:	4798      	blx	r3
 800e528:	6823      	ldr	r3, [r4, #0]
 800e52a:	4629      	mov	r1, r5
 800e52c:	4620      	mov	r0, r4
 800e52e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e530:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e534:	4718      	bx	r3

0800e536 <_ZN8touchgfx6ButtonD0Ev>:
 800e536:	b510      	push	{r4, lr}
 800e538:	2134      	movs	r1, #52	; 0x34
 800e53a:	4604      	mov	r4, r0
 800e53c:	f012 f9cc 	bl	80208d8 <_ZdlPvj>
 800e540:	4620      	mov	r0, r4
 800e542:	bd10      	pop	{r4, pc}

0800e544 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e544:	b510      	push	{r4, lr}
 800e546:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e54a:	2bff      	cmp	r3, #255	; 0xff
 800e54c:	4604      	mov	r4, r0
 800e54e:	d006      	beq.n	800e55e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e550:	2300      	movs	r3, #0
 800e552:	8003      	strh	r3, [r0, #0]
 800e554:	8043      	strh	r3, [r0, #2]
 800e556:	8083      	strh	r3, [r0, #4]
 800e558:	80c3      	strh	r3, [r0, #6]
 800e55a:	4620      	mov	r0, r4
 800e55c:	bd10      	pop	{r4, pc}
 800e55e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e562:	b11b      	cbz	r3, 800e56c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e564:	3130      	adds	r1, #48	; 0x30
 800e566:	f006 f933 	bl	80147d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e56a:	e7f6      	b.n	800e55a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e56c:	312e      	adds	r1, #46	; 0x2e
 800e56e:	e7fa      	b.n	800e566 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e570 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e574:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e578:	b08a      	sub	sp, #40	; 0x28
 800e57a:	4604      	mov	r4, r0
 800e57c:	4688      	mov	r8, r1
 800e57e:	2b00      	cmp	r3, #0
 800e580:	d066      	beq.n	800e650 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e582:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e584:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e588:	a805      	add	r0, sp, #20
 800e58a:	f006 f8b9 	bl	8014700 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e58e:	4607      	mov	r7, r0
 800e590:	a805      	add	r0, sp, #20
 800e592:	f006 f8e9 	bl	8014768 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e596:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e59a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e59e:	4432      	add	r2, r6
 800e5a0:	b292      	uxth	r2, r2
 800e5a2:	2300      	movs	r3, #0
 800e5a4:	fa0f fc82 	sxth.w	ip, r2
 800e5a8:	459c      	cmp	ip, r3
 800e5aa:	9306      	str	r3, [sp, #24]
 800e5ac:	dd52      	ble.n	800e654 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e5ae:	42b7      	cmp	r7, r6
 800e5b0:	dd50      	ble.n	800e654 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e5b2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e5b6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e5ba:	442b      	add	r3, r5
 800e5bc:	b29b      	uxth	r3, r3
 800e5be:	b219      	sxth	r1, r3
 800e5c0:	2900      	cmp	r1, #0
 800e5c2:	dd47      	ble.n	800e654 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e5c4:	42a8      	cmp	r0, r5
 800e5c6:	dd45      	ble.n	800e654 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e5c8:	4567      	cmp	r7, ip
 800e5ca:	bfb8      	it	lt
 800e5cc:	b2ba      	uxthlt	r2, r7
 800e5ce:	4288      	cmp	r0, r1
 800e5d0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e5d4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e5d8:	bfb8      	it	lt
 800e5da:	b283      	uxthlt	r3, r0
 800e5dc:	1b92      	subs	r2, r2, r6
 800e5de:	1b5b      	subs	r3, r3, r5
 800e5e0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e5e4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e5e8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e5ec:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e5f0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e5f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e5f8:	429a      	cmp	r2, r3
 800e5fa:	d026      	beq.n	800e64a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e5fc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e600:	2b00      	cmp	r3, #0
 800e602:	dd22      	ble.n	800e64a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e604:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e608:	2b00      	cmp	r3, #0
 800e60a:	dd1e      	ble.n	800e64a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e60c:	2300      	movs	r3, #0
 800e60e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e612:	6823      	ldr	r3, [r4, #0]
 800e614:	a908      	add	r1, sp, #32
 800e616:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e618:	4620      	mov	r0, r4
 800e61a:	4798      	blx	r3
 800e61c:	4b0f      	ldr	r3, [pc, #60]	; (800e65c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e61e:	681b      	ldr	r3, [r3, #0]
 800e620:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e624:	b10a      	cbz	r2, 800e62a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e626:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e628:	b900      	cbnz	r0, 800e62c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e62a:	6898      	ldr	r0, [r3, #8]
 800e62c:	6801      	ldr	r1, [r0, #0]
 800e62e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e632:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e636:	2501      	movs	r5, #1
 800e638:	9502      	str	r5, [sp, #8]
 800e63a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e63e:	9401      	str	r4, [sp, #4]
 800e640:	ac06      	add	r4, sp, #24
 800e642:	9400      	str	r4, [sp, #0]
 800e644:	688c      	ldr	r4, [r1, #8]
 800e646:	a905      	add	r1, sp, #20
 800e648:	47a0      	blx	r4
 800e64a:	b00a      	add	sp, #40	; 0x28
 800e64c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e650:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e652:	e797      	b.n	800e584 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e654:	2300      	movs	r3, #0
 800e656:	9307      	str	r3, [sp, #28]
 800e658:	e7ca      	b.n	800e5f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e65a:	bf00      	nop
 800e65c:	200157f4 	.word	0x200157f4

0800e660 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e660:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e664:	4b2f      	ldr	r3, [pc, #188]	; (800e724 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e666:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e668:	881b      	ldrh	r3, [r3, #0]
 800e66a:	4293      	cmp	r3, r2
 800e66c:	b08d      	sub	sp, #52	; 0x34
 800e66e:	4604      	mov	r4, r0
 800e670:	460f      	mov	r7, r1
 800e672:	d954      	bls.n	800e71e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e674:	4b2c      	ldr	r3, [pc, #176]	; (800e728 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e676:	6819      	ldr	r1, [r3, #0]
 800e678:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e67c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e680:	4a2a      	ldr	r2, [pc, #168]	; (800e72c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e682:	6812      	ldr	r2, [r2, #0]
 800e684:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e688:	2900      	cmp	r1, #0
 800e68a:	d048      	beq.n	800e71e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e68c:	785a      	ldrb	r2, [r3, #1]
 800e68e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e692:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e696:	4b26      	ldr	r3, [pc, #152]	; (800e730 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e698:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e69c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e6a0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e6a4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e6a6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e6aa:	9107      	str	r1, [sp, #28]
 800e6ac:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e6b0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e6b4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e6b8:	681a      	ldr	r2, [r3, #0]
 800e6ba:	f88d 8020 	strb.w	r8, [sp, #32]
 800e6be:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e6c2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e6c6:	9609      	str	r6, [sp, #36]	; 0x24
 800e6c8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e6cc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e6d0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e6d4:	b10b      	cbz	r3, 800e6da <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e6d6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e6d8:	b905      	cbnz	r5, 800e6dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e6da:	6895      	ldr	r5, [r2, #8]
 800e6dc:	ae05      	add	r6, sp, #20
 800e6de:	4621      	mov	r1, r4
 800e6e0:	4630      	mov	r0, r6
 800e6e2:	f003 fe0f 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e6e6:	4b13      	ldr	r3, [pc, #76]	; (800e734 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e6e8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e6ea:	6818      	ldr	r0, [r3, #0]
 800e6ec:	f7f6 fc7e 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800e6f0:	6823      	ldr	r3, [r4, #0]
 800e6f2:	4680      	mov	r8, r0
 800e6f4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e6f6:	4620      	mov	r0, r4
 800e6f8:	4798      	blx	r3
 800e6fa:	6823      	ldr	r3, [r4, #0]
 800e6fc:	4681      	mov	r9, r0
 800e6fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e702:	4620      	mov	r0, r4
 800e704:	4798      	blx	r3
 800e706:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e70a:	ab07      	add	r3, sp, #28
 800e70c:	9300      	str	r3, [sp, #0]
 800e70e:	f8cd 8004 	str.w	r8, [sp, #4]
 800e712:	463b      	mov	r3, r7
 800e714:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e718:	4628      	mov	r0, r5
 800e71a:	f7f6 fc19 	bl	8004f50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e71e:	b00d      	add	sp, #52	; 0x34
 800e720:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e724:	20015850 	.word	0x20015850
 800e728:	2001584c 	.word	0x2001584c
 800e72c:	20015854 	.word	0x20015854
 800e730:	200157f4 	.word	0x200157f4
 800e734:	20015858 	.word	0x20015858

0800e738 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e73c:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e740:	b0a0      	sub	sp, #128	; 0x80
 800e742:	4604      	mov	r4, r0
 800e744:	b193      	cbz	r3, 800e76c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e746:	4b30      	ldr	r3, [pc, #192]	; (800e808 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e748:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e74a:	881b      	ldrh	r3, [r3, #0]
 800e74c:	428b      	cmp	r3, r1
 800e74e:	d90d      	bls.n	800e76c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e750:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e754:	2b00      	cmp	r3, #0
 800e756:	dd09      	ble.n	800e76c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e758:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e75c:	2b00      	cmp	r3, #0
 800e75e:	dd05      	ble.n	800e76c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e760:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e764:	b12b      	cbz	r3, 800e772 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e766:	6803      	ldr	r3, [r0, #0]
 800e768:	695b      	ldr	r3, [r3, #20]
 800e76a:	4798      	blx	r3
 800e76c:	b020      	add	sp, #128	; 0x80
 800e76e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e772:	4b26      	ldr	r3, [pc, #152]	; (800e80c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e774:	681b      	ldr	r3, [r3, #0]
 800e776:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e77a:	4b25      	ldr	r3, [pc, #148]	; (800e810 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e77c:	681b      	ldr	r3, [r3, #0]
 800e77e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e782:	4b24      	ldr	r3, [pc, #144]	; (800e814 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e784:	6818      	ldr	r0, [r3, #0]
 800e786:	f7f6 fc31 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800e78a:	4606      	mov	r6, r0
 800e78c:	a807      	add	r0, sp, #28
 800e78e:	f004 fa6e 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 800e792:	682b      	ldr	r3, [r5, #0]
 800e794:	4628      	mov	r0, r5
 800e796:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e798:	4798      	blx	r3
 800e79a:	682b      	ldr	r3, [r5, #0]
 800e79c:	4607      	mov	r7, r0
 800e79e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e7a0:	4628      	mov	r0, r5
 800e7a2:	4798      	blx	r3
 800e7a4:	6823      	ldr	r3, [r4, #0]
 800e7a6:	4605      	mov	r5, r0
 800e7a8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e7aa:	4620      	mov	r0, r4
 800e7ac:	4798      	blx	r3
 800e7ae:	6823      	ldr	r3, [r4, #0]
 800e7b0:	4680      	mov	r8, r0
 800e7b2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e7b6:	4620      	mov	r0, r4
 800e7b8:	4798      	blx	r3
 800e7ba:	462b      	mov	r3, r5
 800e7bc:	e9cd 8000 	strd	r8, r0, [sp]
 800e7c0:	463a      	mov	r2, r7
 800e7c2:	a807      	add	r0, sp, #28
 800e7c4:	4631      	mov	r1, r6
 800e7c6:	f004 fac2 	bl	8012d4e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e7ca:	a807      	add	r0, sp, #28
 800e7cc:	f004 fe7a 	bl	80134c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e7d0:	280a      	cmp	r0, #10
 800e7d2:	d103      	bne.n	800e7dc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e7d4:	6823      	ldr	r3, [r4, #0]
 800e7d6:	4620      	mov	r0, r4
 800e7d8:	695b      	ldr	r3, [r3, #20]
 800e7da:	e7c6      	b.n	800e76a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e7dc:	a807      	add	r0, sp, #28
 800e7de:	f004 fe71 	bl	80134c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e7e2:	2800      	cmp	r0, #0
 800e7e4:	d1f4      	bne.n	800e7d0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e7e6:	ad04      	add	r5, sp, #16
 800e7e8:	4621      	mov	r1, r4
 800e7ea:	4628      	mov	r0, r5
 800e7ec:	f7ff fbaa 	bl	800df44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e7f0:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e7f4:	6822      	ldr	r2, [r4, #0]
 800e7f6:	ab02      	add	r3, sp, #8
 800e7f8:	e883 0003 	stmia.w	r3, {r0, r1}
 800e7fc:	6912      	ldr	r2, [r2, #16]
 800e7fe:	4619      	mov	r1, r3
 800e800:	4620      	mov	r0, r4
 800e802:	4790      	blx	r2
 800e804:	e7b2      	b.n	800e76c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e806:	bf00      	nop
 800e808:	20015850 	.word	0x20015850
 800e80c:	2001584c 	.word	0x2001584c
 800e810:	20015854 	.word	0x20015854
 800e814:	20015858 	.word	0x20015858

0800e818 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e818:	4770      	bx	lr

0800e81a <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e81a:	b510      	push	{r4, lr}
 800e81c:	2134      	movs	r1, #52	; 0x34
 800e81e:	4604      	mov	r4, r0
 800e820:	f012 f85a 	bl	80208d8 <_ZdlPvj>
 800e824:	4620      	mov	r0, r4
 800e826:	bd10      	pop	{r4, pc}

0800e828 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e828:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e82c:	4604      	mov	r4, r0
 800e82e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e830:	8962      	ldrh	r2, [r4, #10]
 800e832:	b218      	sxth	r0, r3
 800e834:	460e      	mov	r6, r1
 800e836:	005b      	lsls	r3, r3, #1
 800e838:	8921      	ldrh	r1, [r4, #8]
 800e83a:	b29b      	uxth	r3, r3
 800e83c:	1ac9      	subs	r1, r1, r3
 800e83e:	b08e      	sub	sp, #56	; 0x38
 800e840:	b209      	sxth	r1, r1
 800e842:	1ad3      	subs	r3, r2, r3
 800e844:	b21b      	sxth	r3, r3
 800e846:	2900      	cmp	r1, #0
 800e848:	f8ad 0000 	strh.w	r0, [sp]
 800e84c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e850:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e854:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e858:	dd5e      	ble.n	800e918 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e85a:	2b00      	cmp	r3, #0
 800e85c:	dd5c      	ble.n	800e918 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e85e:	6830      	ldr	r0, [r6, #0]
 800e860:	6871      	ldr	r1, [r6, #4]
 800e862:	ab02      	add	r3, sp, #8
 800e864:	c303      	stmia	r3!, {r0, r1}
 800e866:	4669      	mov	r1, sp
 800e868:	a802      	add	r0, sp, #8
 800e86a:	f7fc fb87 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800e86e:	4620      	mov	r0, r4
 800e870:	a902      	add	r1, sp, #8
 800e872:	f7ff fe13 	bl	800e49c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e876:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e878:	2800      	cmp	r0, #0
 800e87a:	d05f      	beq.n	800e93c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e87c:	8963      	ldrh	r3, [r4, #10]
 800e87e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e882:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e886:	1a1f      	subs	r7, r3, r0
 800e888:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e88c:	b202      	sxth	r2, r0
 800e88e:	2500      	movs	r5, #0
 800e890:	b21b      	sxth	r3, r3
 800e892:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e896:	1a09      	subs	r1, r1, r0
 800e898:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e89c:	9506      	str	r5, [sp, #24]
 800e89e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e8a2:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e8a6:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e8aa:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e8ae:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e8b2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e8b6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e8ba:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e8be:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e8c2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e8c6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e8ca:	af04      	add	r7, sp, #16
 800e8cc:	ab06      	add	r3, sp, #24
 800e8ce:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e8d2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e8d6:	e887 0003 	stmia.w	r7, {r0, r1}
 800e8da:	4631      	mov	r1, r6
 800e8dc:	4638      	mov	r0, r7
 800e8de:	f7fc fb4d 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800e8e2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e8e6:	2b00      	cmp	r3, #0
 800e8e8:	dd12      	ble.n	800e910 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e8ea:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e8ee:	2b00      	cmp	r3, #0
 800e8f0:	dd0e      	ble.n	800e910 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e8f2:	6823      	ldr	r3, [r4, #0]
 800e8f4:	4639      	mov	r1, r7
 800e8f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8f8:	4620      	mov	r0, r4
 800e8fa:	4798      	blx	r3
 800e8fc:	f7f4 f80e 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800e900:	6803      	ldr	r3, [r0, #0]
 800e902:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e904:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e908:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e90c:	4639      	mov	r1, r7
 800e90e:	47c0      	blx	r8
 800e910:	3501      	adds	r5, #1
 800e912:	2d04      	cmp	r5, #4
 800e914:	d1da      	bne.n	800e8cc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e916:	e011      	b.n	800e93c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e918:	6830      	ldr	r0, [r6, #0]
 800e91a:	6871      	ldr	r1, [r6, #4]
 800e91c:	ab06      	add	r3, sp, #24
 800e91e:	c303      	stmia	r3!, {r0, r1}
 800e920:	6823      	ldr	r3, [r4, #0]
 800e922:	a906      	add	r1, sp, #24
 800e924:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e926:	4620      	mov	r0, r4
 800e928:	4798      	blx	r3
 800e92a:	f7f3 fff7 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 800e92e:	6803      	ldr	r3, [r0, #0]
 800e930:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e932:	6a1d      	ldr	r5, [r3, #32]
 800e934:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e938:	a906      	add	r1, sp, #24
 800e93a:	47a8      	blx	r5
 800e93c:	b00e      	add	sp, #56	; 0x38
 800e93e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e942 <_ZN8touchgfx5ImageD1Ev>:
 800e942:	4770      	bx	lr

0800e944 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e944:	b570      	push	{r4, r5, r6, lr}
 800e946:	880b      	ldrh	r3, [r1, #0]
 800e948:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e94a:	4604      	mov	r4, r0
 800e94c:	4608      	mov	r0, r1
 800e94e:	460d      	mov	r5, r1
 800e950:	f005 fed6 	bl	8014700 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e954:	4606      	mov	r6, r0
 800e956:	4628      	mov	r0, r5
 800e958:	f005 ff06 	bl	8014768 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e95c:	6823      	ldr	r3, [r4, #0]
 800e95e:	4605      	mov	r5, r0
 800e960:	4631      	mov	r1, r6
 800e962:	4620      	mov	r0, r4
 800e964:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e966:	4798      	blx	r3
 800e968:	6823      	ldr	r3, [r4, #0]
 800e96a:	4629      	mov	r1, r5
 800e96c:	4620      	mov	r0, r4
 800e96e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e970:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e974:	4718      	bx	r3

0800e976 <_ZN8touchgfx5ImageD0Ev>:
 800e976:	b510      	push	{r4, lr}
 800e978:	212c      	movs	r1, #44	; 0x2c
 800e97a:	4604      	mov	r4, r0
 800e97c:	f011 ffac 	bl	80208d8 <_ZdlPvj>
 800e980:	4620      	mov	r0, r4
 800e982:	bd10      	pop	{r4, pc}

0800e984 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e984:	b510      	push	{r4, lr}
 800e986:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e98a:	2bff      	cmp	r3, #255	; 0xff
 800e98c:	4604      	mov	r4, r0
 800e98e:	d006      	beq.n	800e99e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e990:	2300      	movs	r3, #0
 800e992:	8003      	strh	r3, [r0, #0]
 800e994:	8043      	strh	r3, [r0, #2]
 800e996:	8083      	strh	r3, [r0, #4]
 800e998:	80c3      	strh	r3, [r0, #6]
 800e99a:	4620      	mov	r0, r4
 800e99c:	bd10      	pop	{r4, pc}
 800e99e:	3126      	adds	r1, #38	; 0x26
 800e9a0:	f005 ff16 	bl	80147d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e9a4:	e7f9      	b.n	800e99a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e9a6 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e9a6:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e9aa:	b12a      	cbz	r2, 800e9b8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e9ac:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e9b0:	b112      	cbz	r2, 800e9b8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e9b2:	6803      	ldr	r3, [r0, #0]
 800e9b4:	695b      	ldr	r3, [r3, #20]
 800e9b6:	4718      	bx	r3
 800e9b8:	4770      	bx	lr
	...

0800e9bc <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e9bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9c0:	4604      	mov	r4, r0
 800e9c2:	b088      	sub	sp, #32
 800e9c4:	f854 3b26 	ldr.w	r3, [r4], #38
 800e9c8:	2500      	movs	r5, #0
 800e9ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9cc:	460f      	mov	r7, r1
 800e9ce:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e9d2:	a904      	add	r1, sp, #16
 800e9d4:	4606      	mov	r6, r0
 800e9d6:	4798      	blx	r3
 800e9d8:	4620      	mov	r0, r4
 800e9da:	f005 fe91 	bl	8014700 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e9de:	4680      	mov	r8, r0
 800e9e0:	4620      	mov	r0, r4
 800e9e2:	f005 fec1 	bl	8014768 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e9e6:	9506      	str	r5, [sp, #24]
 800e9e8:	ad06      	add	r5, sp, #24
 800e9ea:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e9ee:	4639      	mov	r1, r7
 800e9f0:	4628      	mov	r0, r5
 800e9f2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e9f6:	f7fc fac1 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800e9fa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e9fe:	2b00      	cmp	r3, #0
 800ea00:	dd19      	ble.n	800ea36 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ea02:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ea06:	2b00      	cmp	r3, #0
 800ea08:	dd15      	ble.n	800ea36 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ea0a:	4b0c      	ldr	r3, [pc, #48]	; (800ea3c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800ea0c:	681b      	ldr	r3, [r3, #0]
 800ea0e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ea12:	b10a      	cbz	r2, 800ea18 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800ea14:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ea16:	b900      	cbnz	r0, 800ea1a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800ea18:	6898      	ldr	r0, [r3, #8]
 800ea1a:	6801      	ldr	r1, [r0, #0]
 800ea1c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800ea20:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800ea24:	2701      	movs	r7, #1
 800ea26:	9702      	str	r7, [sp, #8]
 800ea28:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800ea2c:	e9cd 5600 	strd	r5, r6, [sp]
 800ea30:	688d      	ldr	r5, [r1, #8]
 800ea32:	4621      	mov	r1, r4
 800ea34:	47a8      	blx	r5
 800ea36:	b008      	add	sp, #32
 800ea38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea3c:	200157f4 	.word	0x200157f4

0800ea40 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800ea40:	4770      	bx	lr

0800ea42 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800ea42:	b510      	push	{r4, lr}
 800ea44:	2148      	movs	r1, #72	; 0x48
 800ea46:	4604      	mov	r4, r0
 800ea48:	f011 ff46 	bl	80208d8 <_ZdlPvj>
 800ea4c:	4620      	mov	r0, r4
 800ea4e:	bd10      	pop	{r4, pc}

0800ea50 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800ea50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ea54:	b08d      	sub	sp, #52	; 0x34
 800ea56:	4604      	mov	r4, r0
 800ea58:	4688      	mov	r8, r1
 800ea5a:	f7ff fd89 	bl	800e570 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800ea5e:	4a4d      	ldr	r2, [pc, #308]	; (800eb94 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800ea60:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ea62:	8812      	ldrh	r2, [r2, #0]
 800ea64:	429a      	cmp	r2, r3
 800ea66:	f240 8081 	bls.w	800eb6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800ea6a:	4e4b      	ldr	r6, [pc, #300]	; (800eb98 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800ea6c:	6832      	ldr	r2, [r6, #0]
 800ea6e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ea72:	4b4a      	ldr	r3, [pc, #296]	; (800eb9c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800ea74:	681b      	ldr	r3, [r3, #0]
 800ea76:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800ea7a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800ea7e:	2300      	movs	r3, #0
 800ea80:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800ea84:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea88:	2b03      	cmp	r3, #3
 800ea8a:	d811      	bhi.n	800eab0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800ea8c:	e8df f003 	tbb	[pc, r3]
 800ea90:	71027102 	.word	0x71027102
 800ea94:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ea98:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800ea9c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800eaa0:	1a9b      	subs	r3, r3, r2
 800eaa2:	2002      	movs	r0, #2
 800eaa4:	f8ad 2012 	strh.w	r2, [sp, #18]
 800eaa8:	fb93 f3f0 	sdiv	r3, r3, r0
 800eaac:	f8ad 300e 	strh.w	r3, [sp, #14]
 800eab0:	ad03      	add	r5, sp, #12
 800eab2:	e895 0003 	ldmia.w	r5, {r0, r1}
 800eab6:	f10d 0914 	add.w	r9, sp, #20
 800eaba:	e889 0003 	stmia.w	r9, {r0, r1}
 800eabe:	4641      	mov	r1, r8
 800eac0:	4648      	mov	r0, r9
 800eac2:	f7fc fa5b 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 800eac6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800eaca:	2b00      	cmp	r3, #0
 800eacc:	dd4e      	ble.n	800eb6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800eace:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800ead2:	2b00      	cmp	r3, #0
 800ead4:	dd4a      	ble.n	800eb6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800ead6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800eada:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800eade:	1a9b      	subs	r3, r3, r2
 800eae0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800eae4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800eae8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800eaec:	1a9b      	subs	r3, r3, r2
 800eaee:	f8ad 3016 	strh.w	r3, [sp, #22]
 800eaf2:	6823      	ldr	r3, [r4, #0]
 800eaf4:	4629      	mov	r1, r5
 800eaf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eaf8:	4620      	mov	r0, r4
 800eafa:	4798      	blx	r3
 800eafc:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800eb00:	2b00      	cmp	r3, #0
 800eb02:	d045      	beq.n	800eb90 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800eb04:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800eb06:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800eb08:	6833      	ldr	r3, [r6, #0]
 800eb0a:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800eb0e:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800eb12:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800eb16:	785b      	ldrb	r3, [r3, #1]
 800eb18:	9209      	str	r2, [sp, #36]	; 0x24
 800eb1a:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800eb1e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800eb22:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800eb26:	2300      	movs	r3, #0
 800eb28:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800eb2c:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800eb30:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800eb34:	4b1a      	ldr	r3, [pc, #104]	; (800eba0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800eb36:	9707      	str	r7, [sp, #28]
 800eb38:	681b      	ldr	r3, [r3, #0]
 800eb3a:	f88d 6020 	strb.w	r6, [sp, #32]
 800eb3e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800eb42:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800eb46:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800eb4a:	b10a      	cbz	r2, 800eb50 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800eb4c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800eb4e:	b904      	cbnz	r4, 800eb52 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800eb50:	689c      	ldr	r4, [r3, #8]
 800eb52:	4b14      	ldr	r3, [pc, #80]	; (800eba4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800eb54:	6818      	ldr	r0, [r3, #0]
 800eb56:	f7f6 fa49 	bl	8004fec <_ZNK8touchgfx5Texts7getTextEt>
 800eb5a:	ab07      	add	r3, sp, #28
 800eb5c:	9001      	str	r0, [sp, #4]
 800eb5e:	9300      	str	r3, [sp, #0]
 800eb60:	e895 0006 	ldmia.w	r5, {r1, r2}
 800eb64:	464b      	mov	r3, r9
 800eb66:	4620      	mov	r0, r4
 800eb68:	f7f6 f9f2 	bl	8004f50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800eb6c:	b00d      	add	sp, #52	; 0x34
 800eb6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb72:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800eb76:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800eb7a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800eb7e:	1a9b      	subs	r3, r3, r2
 800eb80:	2002      	movs	r0, #2
 800eb82:	f8ad 1012 	strh.w	r1, [sp, #18]
 800eb86:	fb93 f3f0 	sdiv	r3, r3, r0
 800eb8a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800eb8e:	e78f      	b.n	800eab0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800eb90:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800eb92:	e7b8      	b.n	800eb06 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800eb94:	20015850 	.word	0x20015850
 800eb98:	2001584c 	.word	0x2001584c
 800eb9c:	20015854 	.word	0x20015854
 800eba0:	200157f4 	.word	0x200157f4
 800eba4:	20015858 	.word	0x20015858

0800eba8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800eba8:	b510      	push	{r4, lr}
 800ebaa:	2101      	movs	r1, #1
 800ebac:	4c13      	ldr	r4, [pc, #76]	; (800ebfc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800ebae:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800ebb2:	2200      	movs	r2, #0
 800ebb4:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800ebb8:	6004      	str	r4, [r0, #0]
 800ebba:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ebbe:	4c10      	ldr	r4, [pc, #64]	; (800ec00 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800ebc0:	8082      	strh	r2, [r0, #4]
 800ebc2:	80c2      	strh	r2, [r0, #6]
 800ebc4:	8102      	strh	r2, [r0, #8]
 800ebc6:	8142      	strh	r2, [r0, #10]
 800ebc8:	8182      	strh	r2, [r0, #12]
 800ebca:	81c2      	strh	r2, [r0, #14]
 800ebcc:	8202      	strh	r2, [r0, #16]
 800ebce:	8242      	strh	r2, [r0, #18]
 800ebd0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800ebd4:	61c2      	str	r2, [r0, #28]
 800ebd6:	8402      	strh	r2, [r0, #32]
 800ebd8:	8442      	strh	r2, [r0, #34]	; 0x22
 800ebda:	6282      	str	r2, [r0, #40]	; 0x28
 800ebdc:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800ebe0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800ebe2:	8601      	strh	r1, [r0, #48]	; 0x30
 800ebe4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800ebe8:	6344      	str	r4, [r0, #52]	; 0x34
 800ebea:	8701      	strh	r1, [r0, #56]	; 0x38
 800ebec:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800ebf0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800ebf4:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800ebf8:	bd10      	pop	{r4, pc}
 800ebfa:	bf00      	nop
 800ebfc:	08024464 	.word	0x08024464
 800ec00:	08022464 	.word	0x08022464

0800ec04 <_ZN8touchgfx7OutlineD1Ev>:
 800ec04:	4770      	bx	lr

0800ec06 <_ZN8touchgfx7OutlineD0Ev>:
 800ec06:	b510      	push	{r4, lr}
 800ec08:	2130      	movs	r1, #48	; 0x30
 800ec0a:	4604      	mov	r4, r0
 800ec0c:	f011 fe64 	bl	80208d8 <_ZdlPvj>
 800ec10:	4620      	mov	r0, r4
 800ec12:	bd10      	pop	{r4, pc}

0800ec14 <_ZN8touchgfx7Outline5resetEv>:
 800ec14:	b510      	push	{r4, lr}
 800ec16:	4604      	mov	r4, r0
 800ec18:	f000 fe8c 	bl	800f934 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800ec1c:	60e0      	str	r0, [r4, #12]
 800ec1e:	f000 fe8f 	bl	800f940 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800ec22:	68e3      	ldr	r3, [r4, #12]
 800ec24:	6123      	str	r3, [r4, #16]
 800ec26:	08c0      	lsrs	r0, r0, #3
 800ec28:	2200      	movs	r2, #0
 800ec2a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800ec2e:	3801      	subs	r0, #1
 800ec30:	6060      	str	r0, [r4, #4]
 800ec32:	60a2      	str	r2, [r4, #8]
 800ec34:	8019      	strh	r1, [r3, #0]
 800ec36:	8059      	strh	r1, [r3, #2]
 800ec38:	809a      	strh	r2, [r3, #4]
 800ec3a:	80da      	strh	r2, [r3, #6]
 800ec3c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ec3e:	f023 0301 	bic.w	r3, r3, #1
 800ec42:	f043 0302 	orr.w	r3, r3, #2
 800ec46:	6263      	str	r3, [r4, #36]	; 0x24
 800ec48:	bd10      	pop	{r4, pc}
	...

0800ec4c <_ZN8touchgfx7OutlineC1Ev>:
 800ec4c:	b510      	push	{r4, lr}
 800ec4e:	4b0a      	ldr	r3, [pc, #40]	; (800ec78 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800ec50:	6003      	str	r3, [r0, #0]
 800ec52:	2300      	movs	r3, #0
 800ec54:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800ec58:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ec5c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ec60:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ec64:	6243      	str	r3, [r0, #36]	; 0x24
 800ec66:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800ec6a:	4604      	mov	r4, r0
 800ec6c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800ec70:	f7ff ffd0 	bl	800ec14 <_ZN8touchgfx7Outline5resetEv>
 800ec74:	4620      	mov	r0, r4
 800ec76:	bd10      	pop	{r4, pc}
 800ec78:	080244d8 	.word	0x080244d8

0800ec7c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800ec7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec80:	b093      	sub	sp, #76	; 0x4c
 800ec82:	1156      	asrs	r6, r2, #5
 800ec84:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800ec86:	9305      	str	r3, [sp, #20]
 800ec88:	f004 051f 	and.w	r5, r4, #31
 800ec8c:	1153      	asrs	r3, r2, #5
 800ec8e:	9504      	str	r5, [sp, #16]
 800ec90:	1165      	asrs	r5, r4, #5
 800ec92:	9303      	str	r3, [sp, #12]
 800ec94:	42ae      	cmp	r6, r5
 800ec96:	ea4f 1364 	mov.w	r3, r4, asr #5
 800ec9a:	9306      	str	r3, [sp, #24]
 800ec9c:	f002 031f 	and.w	r3, r2, #31
 800eca0:	f040 80f8 	bne.w	800ee94 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800eca4:	9c04      	ldr	r4, [sp, #16]
 800eca6:	9a05      	ldr	r2, [sp, #20]
 800eca8:	42a3      	cmp	r3, r4
 800ecaa:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800ecae:	6902      	ldr	r2, [r0, #16]
 800ecb0:	d125      	bne.n	800ecfe <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800ecb2:	f9b2 3000 	ldrsh.w	r3, [r2]
 800ecb6:	459e      	cmp	lr, r3
 800ecb8:	d103      	bne.n	800ecc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800ecba:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ecbe:	429e      	cmp	r6, r3
 800ecc0:	d035      	beq.n	800ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ecc2:	88d1      	ldrh	r1, [r2, #6]
 800ecc4:	8893      	ldrh	r3, [r2, #4]
 800ecc6:	430b      	orrs	r3, r1
 800ecc8:	d010      	beq.n	800ecec <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ecca:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ecce:	2b00      	cmp	r3, #0
 800ecd0:	db0c      	blt.n	800ecec <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ecd2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ecd4:	428b      	cmp	r3, r1
 800ecd6:	da09      	bge.n	800ecec <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ecd8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ecdc:	428b      	cmp	r3, r1
 800ecde:	bf38      	it	cc
 800ece0:	3208      	addcc	r2, #8
 800ece2:	f103 0301 	add.w	r3, r3, #1
 800ece6:	bf38      	it	cc
 800ece8:	6102      	strcc	r2, [r0, #16]
 800ecea:	6083      	str	r3, [r0, #8]
 800ecec:	6903      	ldr	r3, [r0, #16]
 800ecee:	9a03      	ldr	r2, [sp, #12]
 800ecf0:	f8a3 e000 	strh.w	lr, [r3]
 800ecf4:	805a      	strh	r2, [r3, #2]
 800ecf6:	2200      	movs	r2, #0
 800ecf8:	809a      	strh	r2, [r3, #4]
 800ecfa:	80da      	strh	r2, [r3, #6]
 800ecfc:	e017      	b.n	800ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ecfe:	9c05      	ldr	r4, [sp, #20]
 800ed00:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800ed04:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800ed08:	f004 041f 	and.w	r4, r4, #31
 800ed0c:	114e      	asrs	r6, r1, #5
 800ed0e:	9402      	str	r4, [sp, #8]
 800ed10:	9c04      	ldr	r4, [sp, #16]
 800ed12:	4576      	cmp	r6, lr
 800ed14:	f001 0c1f 	and.w	ip, r1, #31
 800ed18:	eba4 0403 	sub.w	r4, r4, r3
 800ed1c:	d10a      	bne.n	800ed34 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800ed1e:	9b02      	ldr	r3, [sp, #8]
 800ed20:	449c      	add	ip, r3
 800ed22:	44a0      	add	r8, r4
 800ed24:	fb04 a40c 	mla	r4, r4, ip, sl
 800ed28:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ed2c:	80d4      	strh	r4, [r2, #6]
 800ed2e:	b013      	add	sp, #76	; 0x4c
 800ed30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed34:	9d05      	ldr	r5, [sp, #20]
 800ed36:	1a69      	subs	r1, r5, r1
 800ed38:	bf5b      	ittet	pl
 800ed3a:	f1cc 0520 	rsbpl	r5, ip, #32
 800ed3e:	436c      	mulpl	r4, r5
 800ed40:	2500      	movmi	r5, #0
 800ed42:	2520      	movpl	r5, #32
 800ed44:	bf44      	itt	mi
 800ed46:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ed4a:	4249      	negmi	r1, r1
 800ed4c:	9501      	str	r5, [sp, #4]
 800ed4e:	9f01      	ldr	r7, [sp, #4]
 800ed50:	fb94 f5f1 	sdiv	r5, r4, r1
 800ed54:	fb01 4415 	mls	r4, r1, r5, r4
 800ed58:	bf54      	ite	pl
 800ed5a:	f04f 0901 	movpl.w	r9, #1
 800ed5e:	f04f 39ff 	movmi.w	r9, #4294967295
 800ed62:	2c00      	cmp	r4, #0
 800ed64:	bfb8      	it	lt
 800ed66:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ed6a:	44bc      	add	ip, r7
 800ed6c:	44a8      	add	r8, r5
 800ed6e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ed72:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ed76:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ed7a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ed7e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ed82:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800ed86:	bfb8      	it	lt
 800ed88:	1864      	addlt	r4, r4, r1
 800ed8a:	ea58 0202 	orrs.w	r2, r8, r2
 800ed8e:	444e      	add	r6, r9
 800ed90:	d011      	beq.n	800edb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ed92:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ed96:	f1b8 0f00 	cmp.w	r8, #0
 800ed9a:	db0c      	blt.n	800edb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ed9c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800ed9e:	4590      	cmp	r8, r2
 800eda0:	da09      	bge.n	800edb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eda2:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800eda6:	4590      	cmp	r8, r2
 800eda8:	bf3c      	itt	cc
 800edaa:	f10c 0208 	addcc.w	r2, ip, #8
 800edae:	6102      	strcc	r2, [r0, #16]
 800edb0:	f108 0201 	add.w	r2, r8, #1
 800edb4:	6082      	str	r2, [r0, #8]
 800edb6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800edba:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800edbe:	f8ac 6000 	strh.w	r6, [ip]
 800edc2:	2700      	movs	r7, #0
 800edc4:	45b6      	cmp	lr, r6
 800edc6:	f8ac 2002 	strh.w	r2, [ip, #2]
 800edca:	f8ac 7004 	strh.w	r7, [ip, #4]
 800edce:	f8ac 7006 	strh.w	r7, [ip, #6]
 800edd2:	442b      	add	r3, r5
 800edd4:	d04d      	beq.n	800ee72 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800edd6:	9f04      	ldr	r7, [sp, #16]
 800edd8:	1aff      	subs	r7, r7, r3
 800edda:	443d      	add	r5, r7
 800eddc:	016d      	lsls	r5, r5, #5
 800edde:	fb95 f8f1 	sdiv	r8, r5, r1
 800ede2:	fb01 5518 	mls	r5, r1, r8, r5
 800ede6:	2d00      	cmp	r5, #0
 800ede8:	bfb8      	it	lt
 800edea:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800edee:	f108 0701 	add.w	r7, r8, #1
 800edf2:	bfb8      	it	lt
 800edf4:	186d      	addlt	r5, r5, r1
 800edf6:	1a64      	subs	r4, r4, r1
 800edf8:	9703      	str	r7, [sp, #12]
 800edfa:	f04f 0a00 	mov.w	sl, #0
 800edfe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ee02:	1964      	adds	r4, r4, r5
 800ee04:	bf58      	it	pl
 800ee06:	9f03      	ldrpl	r7, [sp, #12]
 800ee08:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ee0c:	bf48      	it	mi
 800ee0e:	4647      	movmi	r7, r8
 800ee10:	44bb      	add	fp, r7
 800ee12:	f8ac b004 	strh.w	fp, [ip, #4]
 800ee16:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ee1a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ee1e:	f8ac b006 	strh.w	fp, [ip, #6]
 800ee22:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ee26:	443b      	add	r3, r7
 800ee28:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ee2c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ee30:	bf58      	it	pl
 800ee32:	1a64      	subpl	r4, r4, r1
 800ee34:	ea5b 0707 	orrs.w	r7, fp, r7
 800ee38:	444e      	add	r6, r9
 800ee3a:	d011      	beq.n	800ee60 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ee3c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ee40:	f1bb 0f00 	cmp.w	fp, #0
 800ee44:	db0c      	blt.n	800ee60 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ee46:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ee48:	45bb      	cmp	fp, r7
 800ee4a:	da09      	bge.n	800ee60 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ee4c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ee50:	45bb      	cmp	fp, r7
 800ee52:	bf3c      	itt	cc
 800ee54:	f10c 0708 	addcc.w	r7, ip, #8
 800ee58:	6107      	strcc	r7, [r0, #16]
 800ee5a:	f10b 0701 	add.w	r7, fp, #1
 800ee5e:	6087      	str	r7, [r0, #8]
 800ee60:	6907      	ldr	r7, [r0, #16]
 800ee62:	45b6      	cmp	lr, r6
 800ee64:	803e      	strh	r6, [r7, #0]
 800ee66:	807a      	strh	r2, [r7, #2]
 800ee68:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ee6c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ee70:	d1c5      	bne.n	800edfe <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ee72:	9a04      	ldr	r2, [sp, #16]
 800ee74:	1ad3      	subs	r3, r2, r3
 800ee76:	6902      	ldr	r2, [r0, #16]
 800ee78:	8891      	ldrh	r1, [r2, #4]
 800ee7a:	88d6      	ldrh	r6, [r2, #6]
 800ee7c:	4419      	add	r1, r3
 800ee7e:	8091      	strh	r1, [r2, #4]
 800ee80:	9902      	ldr	r1, [sp, #8]
 800ee82:	f101 0c20 	add.w	ip, r1, #32
 800ee86:	9901      	ldr	r1, [sp, #4]
 800ee88:	ebac 0c01 	sub.w	ip, ip, r1
 800ee8c:	fb03 630c 	mla	r3, r3, ip, r6
 800ee90:	80d3      	strh	r3, [r2, #6]
 800ee92:	e74c      	b.n	800ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ee94:	9d05      	ldr	r5, [sp, #20]
 800ee96:	1aa2      	subs	r2, r4, r2
 800ee98:	eba5 0501 	sub.w	r5, r5, r1
 800ee9c:	9508      	str	r5, [sp, #32]
 800ee9e:	9202      	str	r2, [sp, #8]
 800eea0:	f140 8128 	bpl.w	800f0f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800eea4:	9a03      	ldr	r2, [sp, #12]
 800eea6:	2a00      	cmp	r2, #0
 800eea8:	f6ff af41 	blt.w	800ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eeac:	9a02      	ldr	r2, [sp, #8]
 800eeae:	4252      	negs	r2, r2
 800eeb0:	9202      	str	r2, [sp, #8]
 800eeb2:	9a06      	ldr	r2, [sp, #24]
 800eeb4:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800eeb8:	f04f 34ff 	mov.w	r4, #4294967295
 800eebc:	9206      	str	r2, [sp, #24]
 800eebe:	462a      	mov	r2, r5
 800eec0:	940b      	str	r4, [sp, #44]	; 0x2c
 800eec2:	435a      	muls	r2, r3
 800eec4:	2400      	movs	r4, #0
 800eec6:	9d02      	ldr	r5, [sp, #8]
 800eec8:	9401      	str	r4, [sp, #4]
 800eeca:	9c02      	ldr	r4, [sp, #8]
 800eecc:	fb92 f4f4 	sdiv	r4, r2, r4
 800eed0:	fb05 2214 	mls	r2, r5, r4, r2
 800eed4:	2a00      	cmp	r2, #0
 800eed6:	9207      	str	r2, [sp, #28]
 800eed8:	bfbc      	itt	lt
 800eeda:	1952      	addlt	r2, r2, r5
 800eedc:	9207      	strlt	r2, [sp, #28]
 800eede:	9a01      	ldr	r2, [sp, #4]
 800eee0:	6905      	ldr	r5, [r0, #16]
 800eee2:	bfb8      	it	lt
 800eee4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800eee8:	eb04 0901 	add.w	r9, r4, r1
 800eeec:	429a      	cmp	r2, r3
 800eeee:	ea4f 1669 	mov.w	r6, r9, asr #5
 800eef2:	f040 8112 	bne.w	800f11a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800eef6:	f9b5 3000 	ldrsh.w	r3, [r5]
 800eefa:	429e      	cmp	r6, r3
 800eefc:	d104      	bne.n	800ef08 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800eefe:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ef02:	9a03      	ldr	r2, [sp, #12]
 800ef04:	429a      	cmp	r2, r3
 800ef06:	d01b      	beq.n	800ef40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ef08:	88ea      	ldrh	r2, [r5, #6]
 800ef0a:	88ab      	ldrh	r3, [r5, #4]
 800ef0c:	4313      	orrs	r3, r2
 800ef0e:	d010      	beq.n	800ef32 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ef10:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ef14:	2a00      	cmp	r2, #0
 800ef16:	db0c      	blt.n	800ef32 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ef18:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ef1a:	429a      	cmp	r2, r3
 800ef1c:	da09      	bge.n	800ef32 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ef1e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800ef22:	429a      	cmp	r2, r3
 800ef24:	bf38      	it	cc
 800ef26:	3508      	addcc	r5, #8
 800ef28:	f102 0201 	add.w	r2, r2, #1
 800ef2c:	bf38      	it	cc
 800ef2e:	6105      	strcc	r5, [r0, #16]
 800ef30:	6082      	str	r2, [r0, #8]
 800ef32:	6903      	ldr	r3, [r0, #16]
 800ef34:	9a03      	ldr	r2, [sp, #12]
 800ef36:	805a      	strh	r2, [r3, #2]
 800ef38:	2200      	movs	r2, #0
 800ef3a:	801e      	strh	r6, [r3, #0]
 800ef3c:	809a      	strh	r2, [r3, #4]
 800ef3e:	80da      	strh	r2, [r3, #6]
 800ef40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ef42:	9a03      	ldr	r2, [sp, #12]
 800ef44:	6901      	ldr	r1, [r0, #16]
 800ef46:	441a      	add	r2, r3
 800ef48:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ef4c:	42b3      	cmp	r3, r6
 800ef4e:	d103      	bne.n	800ef58 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800ef50:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ef54:	429a      	cmp	r2, r3
 800ef56:	d01a      	beq.n	800ef8e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800ef58:	88cc      	ldrh	r4, [r1, #6]
 800ef5a:	888b      	ldrh	r3, [r1, #4]
 800ef5c:	4323      	orrs	r3, r4
 800ef5e:	d010      	beq.n	800ef82 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ef60:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ef64:	2c00      	cmp	r4, #0
 800ef66:	db0c      	blt.n	800ef82 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ef68:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ef6a:	429c      	cmp	r4, r3
 800ef6c:	da09      	bge.n	800ef82 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ef6e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ef72:	429c      	cmp	r4, r3
 800ef74:	bf38      	it	cc
 800ef76:	3108      	addcc	r1, #8
 800ef78:	f104 0401 	add.w	r4, r4, #1
 800ef7c:	bf38      	it	cc
 800ef7e:	6101      	strcc	r1, [r0, #16]
 800ef80:	6084      	str	r4, [r0, #8]
 800ef82:	6903      	ldr	r3, [r0, #16]
 800ef84:	2100      	movs	r1, #0
 800ef86:	801e      	strh	r6, [r3, #0]
 800ef88:	805a      	strh	r2, [r3, #2]
 800ef8a:	8099      	strh	r1, [r3, #4]
 800ef8c:	80d9      	strh	r1, [r3, #6]
 800ef8e:	9b06      	ldr	r3, [sp, #24]
 800ef90:	4293      	cmp	r3, r2
 800ef92:	f000 8082 	beq.w	800f09a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800ef96:	9b08      	ldr	r3, [sp, #32]
 800ef98:	9c02      	ldr	r4, [sp, #8]
 800ef9a:	9902      	ldr	r1, [sp, #8]
 800ef9c:	015b      	lsls	r3, r3, #5
 800ef9e:	fb93 f1f1 	sdiv	r1, r3, r1
 800efa2:	fb04 3311 	mls	r3, r4, r1, r3
 800efa6:	2b00      	cmp	r3, #0
 800efa8:	9103      	str	r1, [sp, #12]
 800efaa:	9308      	str	r3, [sp, #32]
 800efac:	da04      	bge.n	800efb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800efae:	1e4b      	subs	r3, r1, #1
 800efb0:	9303      	str	r3, [sp, #12]
 800efb2:	9b08      	ldr	r3, [sp, #32]
 800efb4:	4423      	add	r3, r4
 800efb6:	9308      	str	r3, [sp, #32]
 800efb8:	9b07      	ldr	r3, [sp, #28]
 800efba:	9902      	ldr	r1, [sp, #8]
 800efbc:	1a5b      	subs	r3, r3, r1
 800efbe:	9307      	str	r3, [sp, #28]
 800efc0:	9b01      	ldr	r3, [sp, #4]
 800efc2:	f1c3 0320 	rsb	r3, r3, #32
 800efc6:	930e      	str	r3, [sp, #56]	; 0x38
 800efc8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800efca:	9b01      	ldr	r3, [sp, #4]
 800efcc:	1a5b      	subs	r3, r3, r1
 800efce:	464f      	mov	r7, r9
 800efd0:	930a      	str	r3, [sp, #40]	; 0x28
 800efd2:	2600      	movs	r6, #0
 800efd4:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800efd8:	185b      	adds	r3, r3, r1
 800efda:	bf58      	it	pl
 800efdc:	9902      	ldrpl	r1, [sp, #8]
 800efde:	9307      	str	r3, [sp, #28]
 800efe0:	bf5d      	ittte	pl
 800efe2:	1a5b      	subpl	r3, r3, r1
 800efe4:	9307      	strpl	r3, [sp, #28]
 800efe6:	9b03      	ldrpl	r3, [sp, #12]
 800efe8:	9903      	ldrmi	r1, [sp, #12]
 800efea:	bf58      	it	pl
 800efec:	1c59      	addpl	r1, r3, #1
 800efee:	4489      	add	r9, r1
 800eff0:	2a00      	cmp	r2, #0
 800eff2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800eff6:	db2e      	blt.n	800f056 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eff8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800effa:	4293      	cmp	r3, r2
 800effc:	dd2b      	ble.n	800f056 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800effe:	9c01      	ldr	r4, [sp, #4]
 800f000:	6905      	ldr	r5, [r0, #16]
 800f002:	46a0      	mov	r8, r4
 800f004:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800f006:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800f00a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800f00e:	45a0      	cmp	r8, r4
 800f010:	f040 814f 	bne.w	800f2b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800f014:	f9b5 1000 	ldrsh.w	r1, [r5]
 800f018:	4551      	cmp	r1, sl
 800f01a:	d103      	bne.n	800f024 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800f01c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f020:	4291      	cmp	r1, r2
 800f022:	d018      	beq.n	800f056 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f024:	ea5c 010e 	orrs.w	r1, ip, lr
 800f028:	d00f      	beq.n	800f04a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f02a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f02e:	2900      	cmp	r1, #0
 800f030:	db0b      	blt.n	800f04a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f032:	428b      	cmp	r3, r1
 800f034:	dd09      	ble.n	800f04a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f036:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800f03a:	4299      	cmp	r1, r3
 800f03c:	bf38      	it	cc
 800f03e:	3508      	addcc	r5, #8
 800f040:	f101 0101 	add.w	r1, r1, #1
 800f044:	bf38      	it	cc
 800f046:	6105      	strcc	r5, [r0, #16]
 800f048:	6081      	str	r1, [r0, #8]
 800f04a:	6903      	ldr	r3, [r0, #16]
 800f04c:	f8a3 a000 	strh.w	sl, [r3]
 800f050:	805a      	strh	r2, [r3, #2]
 800f052:	809e      	strh	r6, [r3, #4]
 800f054:	80de      	strh	r6, [r3, #6]
 800f056:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f058:	6901      	ldr	r1, [r0, #16]
 800f05a:	441a      	add	r2, r3
 800f05c:	88cc      	ldrh	r4, [r1, #6]
 800f05e:	888b      	ldrh	r3, [r1, #4]
 800f060:	4323      	orrs	r3, r4
 800f062:	d010      	beq.n	800f086 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f064:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f068:	2c00      	cmp	r4, #0
 800f06a:	db0c      	blt.n	800f086 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f06c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f06e:	429c      	cmp	r4, r3
 800f070:	da09      	bge.n	800f086 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f072:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f076:	429c      	cmp	r4, r3
 800f078:	bf38      	it	cc
 800f07a:	3108      	addcc	r1, #8
 800f07c:	f104 0401 	add.w	r4, r4, #1
 800f080:	bf38      	it	cc
 800f082:	6101      	strcc	r1, [r0, #16]
 800f084:	6084      	str	r4, [r0, #8]
 800f086:	6903      	ldr	r3, [r0, #16]
 800f088:	f8a3 a000 	strh.w	sl, [r3]
 800f08c:	805a      	strh	r2, [r3, #2]
 800f08e:	809e      	strh	r6, [r3, #4]
 800f090:	80de      	strh	r6, [r3, #6]
 800f092:	9b06      	ldr	r3, [sp, #24]
 800f094:	4293      	cmp	r3, r2
 800f096:	464f      	mov	r7, r9
 800f098:	d19c      	bne.n	800efd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800f09a:	9b01      	ldr	r3, [sp, #4]
 800f09c:	6907      	ldr	r7, [r0, #16]
 800f09e:	f1c3 0620 	rsb	r6, r3, #32
 800f0a2:	9b05      	ldr	r3, [sp, #20]
 800f0a4:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800f0a8:	9b04      	ldr	r3, [sp, #16]
 800f0aa:	429e      	cmp	r6, r3
 800f0ac:	f040 81cc 	bne.w	800f448 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800f0b0:	f9b7 3000 	ldrsh.w	r3, [r7]
 800f0b4:	459e      	cmp	lr, r3
 800f0b6:	d104      	bne.n	800f0c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800f0b8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f0bc:	429a      	cmp	r2, r3
 800f0be:	f43f ae36 	beq.w	800ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f0c2:	88f9      	ldrh	r1, [r7, #6]
 800f0c4:	88bb      	ldrh	r3, [r7, #4]
 800f0c6:	430b      	orrs	r3, r1
 800f0c8:	d010      	beq.n	800f0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f0ca:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f0ce:	2b00      	cmp	r3, #0
 800f0d0:	db0c      	blt.n	800f0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f0d2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800f0d4:	428b      	cmp	r3, r1
 800f0d6:	da09      	bge.n	800f0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f0d8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800f0dc:	428b      	cmp	r3, r1
 800f0de:	bf38      	it	cc
 800f0e0:	3708      	addcc	r7, #8
 800f0e2:	f103 0301 	add.w	r3, r3, #1
 800f0e6:	bf38      	it	cc
 800f0e8:	6107      	strcc	r7, [r0, #16]
 800f0ea:	6083      	str	r3, [r0, #8]
 800f0ec:	6903      	ldr	r3, [r0, #16]
 800f0ee:	f8a3 e000 	strh.w	lr, [r3]
 800f0f2:	e5ff      	b.n	800ecf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800f0f4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800f0f6:	9c03      	ldr	r4, [sp, #12]
 800f0f8:	42a2      	cmp	r2, r4
 800f0fa:	f6ff ae18 	blt.w	800ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f0fe:	9c06      	ldr	r4, [sp, #24]
 800f100:	42a2      	cmp	r2, r4
 800f102:	bfb8      	it	lt
 800f104:	3201      	addlt	r2, #1
 800f106:	9c08      	ldr	r4, [sp, #32]
 800f108:	bfb8      	it	lt
 800f10a:	9206      	strlt	r2, [sp, #24]
 800f10c:	f1c3 0220 	rsb	r2, r3, #32
 800f110:	4362      	muls	r2, r4
 800f112:	2401      	movs	r4, #1
 800f114:	940b      	str	r4, [sp, #44]	; 0x2c
 800f116:	2420      	movs	r4, #32
 800f118:	e6d5      	b.n	800eec6 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800f11a:	f009 021f 	and.w	r2, r9, #31
 800f11e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800f122:	920c      	str	r2, [sp, #48]	; 0x30
 800f124:	9a01      	ldr	r2, [sp, #4]
 800f126:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800f12a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800f12e:	45b0      	cmp	r8, r6
 800f130:	f001 011f 	and.w	r1, r1, #31
 800f134:	eba2 0203 	sub.w	r2, r2, r3
 800f138:	d108      	bne.n	800f14c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800f13a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f13c:	4419      	add	r1, r3
 800f13e:	4496      	add	lr, r2
 800f140:	fb02 a101 	mla	r1, r2, r1, sl
 800f144:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f148:	80e9      	strh	r1, [r5, #6]
 800f14a:	e6f9      	b.n	800ef40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f14c:	2c00      	cmp	r4, #0
 800f14e:	f2c0 80a9 	blt.w	800f2a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800f152:	2701      	movs	r7, #1
 800f154:	f1c1 0c20 	rsb	ip, r1, #32
 800f158:	970a      	str	r7, [sp, #40]	; 0x28
 800f15a:	fb02 f20c 	mul.w	r2, r2, ip
 800f15e:	2720      	movs	r7, #32
 800f160:	9709      	str	r7, [sp, #36]	; 0x24
 800f162:	fb92 fcf4 	sdiv	ip, r2, r4
 800f166:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800f168:	fb04 221c 	mls	r2, r4, ip, r2
 800f16c:	2a00      	cmp	r2, #0
 800f16e:	bfb8      	it	lt
 800f170:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800f174:	4439      	add	r1, r7
 800f176:	fb0c a101 	mla	r1, ip, r1, sl
 800f17a:	80e9      	strh	r1, [r5, #6]
 800f17c:	44e6      	add	lr, ip
 800f17e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f180:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f184:	eb08 0501 	add.w	r5, r8, r1
 800f188:	6901      	ldr	r1, [r0, #16]
 800f18a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800f18e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800f192:	bfb8      	it	lt
 800f194:	1912      	addlt	r2, r2, r4
 800f196:	ea58 070e 	orrs.w	r7, r8, lr
 800f19a:	d010      	beq.n	800f1be <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f19c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800f1a0:	f1be 0f00 	cmp.w	lr, #0
 800f1a4:	db0b      	blt.n	800f1be <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f1a6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f1a8:	45be      	cmp	lr, r7
 800f1aa:	da08      	bge.n	800f1be <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f1ac:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f1b0:	45be      	cmp	lr, r7
 800f1b2:	bf3c      	itt	cc
 800f1b4:	3108      	addcc	r1, #8
 800f1b6:	6101      	strcc	r1, [r0, #16]
 800f1b8:	f10e 0101 	add.w	r1, lr, #1
 800f1bc:	6081      	str	r1, [r0, #8]
 800f1be:	6901      	ldr	r1, [r0, #16]
 800f1c0:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800f1c4:	800d      	strh	r5, [r1, #0]
 800f1c6:	f04f 0e00 	mov.w	lr, #0
 800f1ca:	42ae      	cmp	r6, r5
 800f1cc:	f8a1 8002 	strh.w	r8, [r1, #2]
 800f1d0:	f8a1 e004 	strh.w	lr, [r1, #4]
 800f1d4:	f8a1 e006 	strh.w	lr, [r1, #6]
 800f1d8:	4463      	add	r3, ip
 800f1da:	d054      	beq.n	800f286 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800f1dc:	9901      	ldr	r1, [sp, #4]
 800f1de:	1ac9      	subs	r1, r1, r3
 800f1e0:	4461      	add	r1, ip
 800f1e2:	0149      	lsls	r1, r1, #5
 800f1e4:	fb91 fef4 	sdiv	lr, r1, r4
 800f1e8:	fb04 111e 	mls	r1, r4, lr, r1
 800f1ec:	2900      	cmp	r1, #0
 800f1ee:	bfb8      	it	lt
 800f1f0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800f1f4:	f10e 0701 	add.w	r7, lr, #1
 800f1f8:	bfb8      	it	lt
 800f1fa:	1909      	addlt	r1, r1, r4
 800f1fc:	1b12      	subs	r2, r2, r4
 800f1fe:	970d      	str	r7, [sp, #52]	; 0x34
 800f200:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f204:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f206:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f20a:	1852      	adds	r2, r2, r1
 800f20c:	bf54      	ite	pl
 800f20e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800f212:	46f4      	movmi	ip, lr
 800f214:	44e3      	add	fp, ip
 800f216:	f8aa b004 	strh.w	fp, [sl, #4]
 800f21a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f21e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f222:	f8aa b006 	strh.w	fp, [sl, #6]
 800f226:	4463      	add	r3, ip
 800f228:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f22c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f230:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f234:	bf58      	it	pl
 800f236:	1b12      	subpl	r2, r2, r4
 800f238:	443d      	add	r5, r7
 800f23a:	ea5b 070a 	orrs.w	r7, fp, sl
 800f23e:	d014      	beq.n	800f26a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f240:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f244:	f1ba 0f00 	cmp.w	sl, #0
 800f248:	db0f      	blt.n	800f26a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f24a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f24c:	45ba      	cmp	sl, r7
 800f24e:	da0c      	bge.n	800f26a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f250:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f254:	45ba      	cmp	sl, r7
 800f256:	bf38      	it	cc
 800f258:	f10c 0c08 	addcc.w	ip, ip, #8
 800f25c:	f10a 0a01 	add.w	sl, sl, #1
 800f260:	bf38      	it	cc
 800f262:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f266:	f8c0 a008 	str.w	sl, [r0, #8]
 800f26a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f26e:	f04f 0700 	mov.w	r7, #0
 800f272:	42ae      	cmp	r6, r5
 800f274:	f8ac 5000 	strh.w	r5, [ip]
 800f278:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f27c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f280:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f284:	d1bc      	bne.n	800f200 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f286:	6904      	ldr	r4, [r0, #16]
 800f288:	9a01      	ldr	r2, [sp, #4]
 800f28a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f28c:	1ad3      	subs	r3, r2, r3
 800f28e:	88a2      	ldrh	r2, [r4, #4]
 800f290:	441a      	add	r2, r3
 800f292:	80a2      	strh	r2, [r4, #4]
 800f294:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f296:	3120      	adds	r1, #32
 800f298:	1a89      	subs	r1, r1, r2
 800f29a:	88e2      	ldrh	r2, [r4, #6]
 800f29c:	fb03 2301 	mla	r3, r3, r1, r2
 800f2a0:	80e3      	strh	r3, [r4, #6]
 800f2a2:	e64d      	b.n	800ef40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f2a4:	f04f 37ff 	mov.w	r7, #4294967295
 800f2a8:	970a      	str	r7, [sp, #40]	; 0x28
 800f2aa:	434a      	muls	r2, r1
 800f2ac:	4264      	negs	r4, r4
 800f2ae:	2700      	movs	r7, #0
 800f2b0:	e756      	b.n	800f160 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f2b2:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f2b6:	f009 031f 	and.w	r3, r9, #31
 800f2ba:	45d0      	cmp	r8, sl
 800f2bc:	f007 071f 	and.w	r7, r7, #31
 800f2c0:	930f      	str	r3, [sp, #60]	; 0x3c
 800f2c2:	fa1f fc8c 	uxth.w	ip, ip
 800f2c6:	fa1f fe8e 	uxth.w	lr, lr
 800f2ca:	d10a      	bne.n	800f2e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f2cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f2ce:	449c      	add	ip, r3
 800f2d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f2d2:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f2d6:	441f      	add	r7, r3
 800f2d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f2da:	fb03 e707 	mla	r7, r3, r7, lr
 800f2de:	80ef      	strh	r7, [r5, #6]
 800f2e0:	e6b9      	b.n	800f056 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f2e2:	2900      	cmp	r1, #0
 800f2e4:	f2c0 80a8 	blt.w	800f438 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f2e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f2ea:	f1c7 0320 	rsb	r3, r7, #32
 800f2ee:	4363      	muls	r3, r4
 800f2f0:	2401      	movs	r4, #1
 800f2f2:	940d      	str	r4, [sp, #52]	; 0x34
 800f2f4:	2420      	movs	r4, #32
 800f2f6:	940c      	str	r4, [sp, #48]	; 0x30
 800f2f8:	fb93 f4f1 	sdiv	r4, r3, r1
 800f2fc:	fb01 3b14 	mls	fp, r1, r4, r3
 800f300:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f302:	f1bb 0f00 	cmp.w	fp, #0
 800f306:	bfb8      	it	lt
 800f308:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f30c:	441f      	add	r7, r3
 800f30e:	fb04 e707 	mla	r7, r4, r7, lr
 800f312:	44a4      	add	ip, r4
 800f314:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f318:	80ef      	strh	r7, [r5, #6]
 800f31a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f31e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f320:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f324:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f328:	bfb8      	it	lt
 800f32a:	448b      	addlt	fp, r1
 800f32c:	eb08 0503 	add.w	r5, r8, r3
 800f330:	ea5e 0307 	orrs.w	r3, lr, r7
 800f334:	d011      	beq.n	800f35a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f336:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f33a:	f1be 0f00 	cmp.w	lr, #0
 800f33e:	db0c      	blt.n	800f35a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f340:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f342:	45be      	cmp	lr, r7
 800f344:	da09      	bge.n	800f35a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f346:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f34a:	45be      	cmp	lr, r7
 800f34c:	bf3c      	itt	cc
 800f34e:	f10c 0708 	addcc.w	r7, ip, #8
 800f352:	6107      	strcc	r7, [r0, #16]
 800f354:	f10e 0701 	add.w	r7, lr, #1
 800f358:	6087      	str	r7, [r0, #8]
 800f35a:	6907      	ldr	r7, [r0, #16]
 800f35c:	b213      	sxth	r3, r2
 800f35e:	9310      	str	r3, [sp, #64]	; 0x40
 800f360:	807b      	strh	r3, [r7, #2]
 800f362:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f364:	803d      	strh	r5, [r7, #0]
 800f366:	4555      	cmp	r5, sl
 800f368:	80be      	strh	r6, [r7, #4]
 800f36a:	80fe      	strh	r6, [r7, #6]
 800f36c:	eb04 0c03 	add.w	ip, r4, r3
 800f370:	d051      	beq.n	800f416 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f372:	9b01      	ldr	r3, [sp, #4]
 800f374:	eba3 070c 	sub.w	r7, r3, ip
 800f378:	443c      	add	r4, r7
 800f37a:	0164      	lsls	r4, r4, #5
 800f37c:	fb94 f8f1 	sdiv	r8, r4, r1
 800f380:	fb01 4418 	mls	r4, r1, r8, r4
 800f384:	2c00      	cmp	r4, #0
 800f386:	bfb8      	it	lt
 800f388:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f38c:	ebab 0301 	sub.w	r3, fp, r1
 800f390:	f108 0701 	add.w	r7, r8, #1
 800f394:	bfb8      	it	lt
 800f396:	1864      	addlt	r4, r4, r1
 800f398:	9309      	str	r3, [sp, #36]	; 0x24
 800f39a:	9711      	str	r7, [sp, #68]	; 0x44
 800f39c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f39e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f3a2:	191b      	adds	r3, r3, r4
 800f3a4:	bf58      	it	pl
 800f3a6:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f3a8:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f3ac:	9309      	str	r3, [sp, #36]	; 0x24
 800f3ae:	bf48      	it	mi
 800f3b0:	4647      	movmi	r7, r8
 800f3b2:	44bb      	add	fp, r7
 800f3b4:	f8ae b004 	strh.w	fp, [lr, #4]
 800f3b8:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f3bc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f3c0:	f8ae b006 	strh.w	fp, [lr, #6]
 800f3c4:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f3c8:	44bc      	add	ip, r7
 800f3ca:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f3cc:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f3d0:	443d      	add	r5, r7
 800f3d2:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f3d6:	bf5c      	itt	pl
 800f3d8:	1a5b      	subpl	r3, r3, r1
 800f3da:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f3dc:	ea5b 0307 	orrs.w	r3, fp, r7
 800f3e0:	d011      	beq.n	800f406 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f3e2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f3e6:	f1bb 0f00 	cmp.w	fp, #0
 800f3ea:	db0c      	blt.n	800f406 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f3ec:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f3ee:	45bb      	cmp	fp, r7
 800f3f0:	da09      	bge.n	800f406 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f3f2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f3f6:	45bb      	cmp	fp, r7
 800f3f8:	bf3c      	itt	cc
 800f3fa:	f10e 0708 	addcc.w	r7, lr, #8
 800f3fe:	6107      	strcc	r7, [r0, #16]
 800f400:	f10b 0701 	add.w	r7, fp, #1
 800f404:	6087      	str	r7, [r0, #8]
 800f406:	6907      	ldr	r7, [r0, #16]
 800f408:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f40a:	803d      	strh	r5, [r7, #0]
 800f40c:	4555      	cmp	r5, sl
 800f40e:	807b      	strh	r3, [r7, #2]
 800f410:	80be      	strh	r6, [r7, #4]
 800f412:	80fe      	strh	r6, [r7, #6]
 800f414:	d1c2      	bne.n	800f39c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f416:	9b01      	ldr	r3, [sp, #4]
 800f418:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f41a:	eba3 0c0c 	sub.w	ip, r3, ip
 800f41e:	6903      	ldr	r3, [r0, #16]
 800f420:	8899      	ldrh	r1, [r3, #4]
 800f422:	4461      	add	r1, ip
 800f424:	8099      	strh	r1, [r3, #4]
 800f426:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f428:	3720      	adds	r7, #32
 800f42a:	1a7f      	subs	r7, r7, r1
 800f42c:	88d9      	ldrh	r1, [r3, #6]
 800f42e:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f432:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f436:	e60e      	b.n	800f056 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f438:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f43a:	f04f 34ff 	mov.w	r4, #4294967295
 800f43e:	940d      	str	r4, [sp, #52]	; 0x34
 800f440:	437b      	muls	r3, r7
 800f442:	4249      	negs	r1, r1
 800f444:	2400      	movs	r4, #0
 800f446:	e756      	b.n	800f2f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f448:	9905      	ldr	r1, [sp, #20]
 800f44a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f44e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f452:	f001 011f 	and.w	r1, r1, #31
 800f456:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f45a:	9102      	str	r1, [sp, #8]
 800f45c:	9904      	ldr	r1, [sp, #16]
 800f45e:	45f3      	cmp	fp, lr
 800f460:	f009 0c1f 	and.w	ip, r9, #31
 800f464:	eba1 0406 	sub.w	r4, r1, r6
 800f468:	d108      	bne.n	800f47c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f46a:	9b02      	ldr	r3, [sp, #8]
 800f46c:	449c      	add	ip, r3
 800f46e:	44a0      	add	r8, r4
 800f470:	fb04 a40c 	mla	r4, r4, ip, sl
 800f474:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f478:	80fc      	strh	r4, [r7, #6]
 800f47a:	e458      	b.n	800ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f47c:	9905      	ldr	r1, [sp, #20]
 800f47e:	ebb1 0109 	subs.w	r1, r1, r9
 800f482:	bf5b      	ittet	pl
 800f484:	f1cc 0520 	rsbpl	r5, ip, #32
 800f488:	436c      	mulpl	r4, r5
 800f48a:	2500      	movmi	r5, #0
 800f48c:	2520      	movpl	r5, #32
 800f48e:	bf44      	itt	mi
 800f490:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f494:	4249      	negmi	r1, r1
 800f496:	9501      	str	r5, [sp, #4]
 800f498:	9b01      	ldr	r3, [sp, #4]
 800f49a:	fb94 f5f1 	sdiv	r5, r4, r1
 800f49e:	fb01 4415 	mls	r4, r1, r5, r4
 800f4a2:	bf54      	ite	pl
 800f4a4:	f04f 0901 	movpl.w	r9, #1
 800f4a8:	f04f 39ff 	movmi.w	r9, #4294967295
 800f4ac:	2c00      	cmp	r4, #0
 800f4ae:	bfb8      	it	lt
 800f4b0:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f4b4:	449c      	add	ip, r3
 800f4b6:	44a8      	add	r8, r5
 800f4b8:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f4bc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f4c0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f4c4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f4c8:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f4cc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f4d0:	bfb8      	it	lt
 800f4d2:	1864      	addlt	r4, r4, r1
 800f4d4:	ea58 0707 	orrs.w	r7, r8, r7
 800f4d8:	eb0b 0309 	add.w	r3, fp, r9
 800f4dc:	d011      	beq.n	800f502 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f4de:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f4e2:	f1b8 0f00 	cmp.w	r8, #0
 800f4e6:	db0c      	blt.n	800f502 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f4e8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f4ea:	45b8      	cmp	r8, r7
 800f4ec:	da09      	bge.n	800f502 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f4ee:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f4f2:	45b8      	cmp	r8, r7
 800f4f4:	bf3c      	itt	cc
 800f4f6:	f10c 0708 	addcc.w	r7, ip, #8
 800f4fa:	6107      	strcc	r7, [r0, #16]
 800f4fc:	f108 0701 	add.w	r7, r8, #1
 800f500:	6087      	str	r7, [r0, #8]
 800f502:	6907      	ldr	r7, [r0, #16]
 800f504:	f04f 0c00 	mov.w	ip, #0
 800f508:	b212      	sxth	r2, r2
 800f50a:	459e      	cmp	lr, r3
 800f50c:	803b      	strh	r3, [r7, #0]
 800f50e:	807a      	strh	r2, [r7, #2]
 800f510:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f514:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f518:	442e      	add	r6, r5
 800f51a:	d04d      	beq.n	800f5b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f51c:	9f04      	ldr	r7, [sp, #16]
 800f51e:	1bbf      	subs	r7, r7, r6
 800f520:	443d      	add	r5, r7
 800f522:	016d      	lsls	r5, r5, #5
 800f524:	fb95 f8f1 	sdiv	r8, r5, r1
 800f528:	fb01 5518 	mls	r5, r1, r8, r5
 800f52c:	4565      	cmp	r5, ip
 800f52e:	bfb8      	it	lt
 800f530:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f534:	f108 0701 	add.w	r7, r8, #1
 800f538:	bfb8      	it	lt
 800f53a:	186d      	addlt	r5, r5, r1
 800f53c:	1a64      	subs	r4, r4, r1
 800f53e:	9703      	str	r7, [sp, #12]
 800f540:	f04f 0a00 	mov.w	sl, #0
 800f544:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f548:	1964      	adds	r4, r4, r5
 800f54a:	bf58      	it	pl
 800f54c:	9f03      	ldrpl	r7, [sp, #12]
 800f54e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f552:	bf48      	it	mi
 800f554:	4647      	movmi	r7, r8
 800f556:	44bb      	add	fp, r7
 800f558:	f8ac b004 	strh.w	fp, [ip, #4]
 800f55c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f560:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f564:	f8ac b006 	strh.w	fp, [ip, #6]
 800f568:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f56c:	443e      	add	r6, r7
 800f56e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f572:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f576:	bf58      	it	pl
 800f578:	1a64      	subpl	r4, r4, r1
 800f57a:	ea5b 0707 	orrs.w	r7, fp, r7
 800f57e:	444b      	add	r3, r9
 800f580:	d011      	beq.n	800f5a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f582:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f586:	f1bb 0f00 	cmp.w	fp, #0
 800f58a:	db0c      	blt.n	800f5a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f58c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f58e:	45bb      	cmp	fp, r7
 800f590:	da09      	bge.n	800f5a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f592:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f596:	45bb      	cmp	fp, r7
 800f598:	bf3c      	itt	cc
 800f59a:	f10c 0708 	addcc.w	r7, ip, #8
 800f59e:	6107      	strcc	r7, [r0, #16]
 800f5a0:	f10b 0701 	add.w	r7, fp, #1
 800f5a4:	6087      	str	r7, [r0, #8]
 800f5a6:	6907      	ldr	r7, [r0, #16]
 800f5a8:	459e      	cmp	lr, r3
 800f5aa:	803b      	strh	r3, [r7, #0]
 800f5ac:	807a      	strh	r2, [r7, #2]
 800f5ae:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f5b2:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f5b6:	d1c5      	bne.n	800f544 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f5b8:	9b04      	ldr	r3, [sp, #16]
 800f5ba:	1b9e      	subs	r6, r3, r6
 800f5bc:	6903      	ldr	r3, [r0, #16]
 800f5be:	889a      	ldrh	r2, [r3, #4]
 800f5c0:	4432      	add	r2, r6
 800f5c2:	809a      	strh	r2, [r3, #4]
 800f5c4:	9a02      	ldr	r2, [sp, #8]
 800f5c6:	f102 0c20 	add.w	ip, r2, #32
 800f5ca:	9a01      	ldr	r2, [sp, #4]
 800f5cc:	ebac 0c02 	sub.w	ip, ip, r2
 800f5d0:	88da      	ldrh	r2, [r3, #6]
 800f5d2:	fb06 260c 	mla	r6, r6, ip, r2
 800f5d6:	80de      	strh	r6, [r3, #6]
 800f5d8:	f7ff bba9 	b.w	800ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f5dc <_ZN8touchgfx7Outline6lineToEii>:
 800f5dc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f5de:	079b      	lsls	r3, r3, #30
 800f5e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f5e2:	460e      	mov	r6, r1
 800f5e4:	4615      	mov	r5, r2
 800f5e6:	d511      	bpl.n	800f60c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f5e8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f5ec:	ea86 0701 	eor.w	r7, r6, r1
 800f5f0:	ea85 0302 	eor.w	r3, r5, r2
 800f5f4:	433b      	orrs	r3, r7
 800f5f6:	d009      	beq.n	800f60c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f5f8:	4633      	mov	r3, r6
 800f5fa:	9500      	str	r5, [sp, #0]
 800f5fc:	f7ff fb3e 	bl	800ec7c <_ZN8touchgfx7Outline10renderLineEiiii>
 800f600:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f602:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f606:	f043 0301 	orr.w	r3, r3, #1
 800f60a:	6243      	str	r3, [r0, #36]	; 0x24
 800f60c:	b003      	add	sp, #12
 800f60e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f610 <_ZN8touchgfx7Outline6moveToEii>:
 800f610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f612:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f614:	4615      	mov	r5, r2
 800f616:	079a      	lsls	r2, r3, #30
 800f618:	4604      	mov	r4, r0
 800f61a:	460e      	mov	r6, r1
 800f61c:	d401      	bmi.n	800f622 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f61e:	f7ff faf9 	bl	800ec14 <_ZN8touchgfx7Outline5resetEv>
 800f622:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f624:	07db      	lsls	r3, r3, #31
 800f626:	d504      	bpl.n	800f632 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f628:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f62c:	4620      	mov	r0, r4
 800f62e:	f7ff ffd5 	bl	800f5dc <_ZN8touchgfx7Outline6lineToEii>
 800f632:	6923      	ldr	r3, [r4, #16]
 800f634:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f638:	1170      	asrs	r0, r6, #5
 800f63a:	4290      	cmp	r0, r2
 800f63c:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f640:	d103      	bne.n	800f64a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f642:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f646:	4291      	cmp	r1, r2
 800f648:	d01a      	beq.n	800f680 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f64a:	88df      	ldrh	r7, [r3, #6]
 800f64c:	889a      	ldrh	r2, [r3, #4]
 800f64e:	433a      	orrs	r2, r7
 800f650:	d010      	beq.n	800f674 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f652:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f656:	2a00      	cmp	r2, #0
 800f658:	db0c      	blt.n	800f674 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f65a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f65c:	42ba      	cmp	r2, r7
 800f65e:	da09      	bge.n	800f674 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f660:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f664:	42ba      	cmp	r2, r7
 800f666:	bf38      	it	cc
 800f668:	3308      	addcc	r3, #8
 800f66a:	f102 0201 	add.w	r2, r2, #1
 800f66e:	bf38      	it	cc
 800f670:	6123      	strcc	r3, [r4, #16]
 800f672:	60a2      	str	r2, [r4, #8]
 800f674:	6923      	ldr	r3, [r4, #16]
 800f676:	2200      	movs	r2, #0
 800f678:	8018      	strh	r0, [r3, #0]
 800f67a:	8059      	strh	r1, [r3, #2]
 800f67c:	809a      	strh	r2, [r3, #4]
 800f67e:	80da      	strh	r2, [r3, #6]
 800f680:	6166      	str	r6, [r4, #20]
 800f682:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f686:	6225      	str	r5, [r4, #32]
 800f688:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f68a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f68a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f68e:	b0d0      	sub	sp, #320	; 0x140
 800f690:	466c      	mov	r4, sp
 800f692:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f696:	4627      	mov	r7, r4
 800f698:	1a0d      	subs	r5, r1, r0
 800f69a:	2d48      	cmp	r5, #72	; 0x48
 800f69c:	f100 0308 	add.w	r3, r0, #8
 800f6a0:	f340 80d5 	ble.w	800f84e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f6a4:	112d      	asrs	r5, r5, #4
 800f6a6:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f6aa:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f6ae:	6816      	ldr	r6, [r2, #0]
 800f6b0:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f6b4:	6006      	str	r6, [r0, #0]
 800f6b6:	6856      	ldr	r6, [r2, #4]
 800f6b8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f6bc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f6c0:	6046      	str	r6, [r0, #4]
 800f6c2:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f6c6:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f6ca:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f6ce:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f6d2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f6d6:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f6da:	4565      	cmp	r5, ip
 800f6dc:	f1a1 0208 	sub.w	r2, r1, #8
 800f6e0:	db06      	blt.n	800f6f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f6e2:	d119      	bne.n	800f718 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f6e4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f6e8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f6ec:	42ae      	cmp	r6, r5
 800f6ee:	dd13      	ble.n	800f718 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f6f0:	460e      	mov	r6, r1
 800f6f2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f6f6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f6fa:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f6fe:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f702:	601d      	str	r5, [r3, #0]
 800f704:	6875      	ldr	r5, [r6, #4]
 800f706:	605d      	str	r5, [r3, #4]
 800f708:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f70c:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f710:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f714:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f718:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f71c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f720:	42ae      	cmp	r6, r5
 800f722:	db06      	blt.n	800f732 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f724:	d116      	bne.n	800f754 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f726:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f72a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f72e:	45ac      	cmp	ip, r5
 800f730:	da10      	bge.n	800f754 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f732:	681d      	ldr	r5, [r3, #0]
 800f734:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f738:	6005      	str	r5, [r0, #0]
 800f73a:	685d      	ldr	r5, [r3, #4]
 800f73c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f740:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f744:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f748:	6045      	str	r5, [r0, #4]
 800f74a:	8146      	strh	r6, [r0, #10]
 800f74c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f750:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f754:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f758:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f75c:	4565      	cmp	r5, ip
 800f75e:	db06      	blt.n	800f76e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f760:	d119      	bne.n	800f796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f762:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f766:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f76a:	42ae      	cmp	r6, r5
 800f76c:	da13      	bge.n	800f796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f76e:	460e      	mov	r6, r1
 800f770:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f774:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f778:	6005      	str	r5, [r0, #0]
 800f77a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f77e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f782:	6875      	ldr	r5, [r6, #4]
 800f784:	6045      	str	r5, [r0, #4]
 800f786:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f78a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f78e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f792:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f796:	3308      	adds	r3, #8
 800f798:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f79c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f7a0:	45e6      	cmp	lr, ip
 800f7a2:	dbf8      	blt.n	800f796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f7a4:	d105      	bne.n	800f7b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f7a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f7aa:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f7ae:	42ae      	cmp	r6, r5
 800f7b0:	dbf1      	blt.n	800f796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f7b2:	4615      	mov	r5, r2
 800f7b4:	3a08      	subs	r2, #8
 800f7b6:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f7ba:	45b4      	cmp	ip, r6
 800f7bc:	dbf9      	blt.n	800f7b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f7be:	d105      	bne.n	800f7cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f7c0:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f7c4:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f7c8:	45b0      	cmp	r8, r6
 800f7ca:	dbf2      	blt.n	800f7b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f7cc:	4293      	cmp	r3, r2
 800f7ce:	f1a5 0608 	sub.w	r6, r5, #8
 800f7d2:	d816      	bhi.n	800f802 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f7d4:	f8d6 c000 	ldr.w	ip, [r6]
 800f7d8:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f7dc:	f8c3 c000 	str.w	ip, [r3]
 800f7e0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f7e4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f7e8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f7ec:	f8c3 c004 	str.w	ip, [r3, #4]
 800f7f0:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f7f4:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f7f8:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f7fc:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f800:	e7c9      	b.n	800f796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f802:	f8d6 e000 	ldr.w	lr, [r6]
 800f806:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f80a:	f8c0 e000 	str.w	lr, [r0]
 800f80e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f812:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f816:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f81a:	f8c0 e004 	str.w	lr, [r0, #4]
 800f81e:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f822:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f826:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f82a:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f82e:	1acd      	subs	r5, r1, r3
 800f830:	1a16      	subs	r6, r2, r0
 800f832:	10ed      	asrs	r5, r5, #3
 800f834:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f838:	bfb5      	itete	lt
 800f83a:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f83e:	e9c4 3100 	strdge	r3, r1, [r4]
 800f842:	460a      	movlt	r2, r1
 800f844:	4603      	movge	r3, r0
 800f846:	3408      	adds	r4, #8
 800f848:	4618      	mov	r0, r3
 800f84a:	4611      	mov	r1, r2
 800f84c:	e724      	b.n	800f698 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f84e:	4299      	cmp	r1, r3
 800f850:	d928      	bls.n	800f8a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f852:	f1a3 0210 	sub.w	r2, r3, #16
 800f856:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f85a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f85e:	45ac      	cmp	ip, r5
 800f860:	db06      	blt.n	800f870 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f862:	d11d      	bne.n	800f8a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f864:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f868:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f86c:	42ae      	cmp	r6, r5
 800f86e:	da17      	bge.n	800f8a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f870:	4615      	mov	r5, r2
 800f872:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f876:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f87a:	6116      	str	r6, [r2, #16]
 800f87c:	686e      	ldr	r6, [r5, #4]
 800f87e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f882:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f886:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f88a:	42a8      	cmp	r0, r5
 800f88c:	6156      	str	r6, [r2, #20]
 800f88e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f892:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f896:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f89a:	f1a2 0208 	sub.w	r2, r2, #8
 800f89e:	d1da      	bne.n	800f856 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f8a0:	3308      	adds	r3, #8
 800f8a2:	e7d4      	b.n	800f84e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f8a4:	42bc      	cmp	r4, r7
 800f8a6:	d903      	bls.n	800f8b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f8a8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f8ac:	3c08      	subs	r4, #8
 800f8ae:	e6f3      	b.n	800f698 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f8b0:	b050      	add	sp, #320	; 0x140
 800f8b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f8b6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f8b6:	b510      	push	{r4, lr}
 800f8b8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f8ba:	07da      	lsls	r2, r3, #31
 800f8bc:	4604      	mov	r4, r0
 800f8be:	d507      	bpl.n	800f8d0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f8c0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f8c4:	f7ff fe8a 	bl	800f5dc <_ZN8touchgfx7Outline6lineToEii>
 800f8c8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f8ca:	f023 0301 	bic.w	r3, r3, #1
 800f8ce:	6243      	str	r3, [r0, #36]	; 0x24
 800f8d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f8d2:	079b      	lsls	r3, r3, #30
 800f8d4:	d521      	bpl.n	800f91a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f8d6:	6923      	ldr	r3, [r4, #16]
 800f8d8:	88d9      	ldrh	r1, [r3, #6]
 800f8da:	889a      	ldrh	r2, [r3, #4]
 800f8dc:	430a      	orrs	r2, r1
 800f8de:	d010      	beq.n	800f902 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f8e0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f8e4:	2a00      	cmp	r2, #0
 800f8e6:	db0c      	blt.n	800f902 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f8e8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f8ea:	428a      	cmp	r2, r1
 800f8ec:	da09      	bge.n	800f902 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f8ee:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f8f2:	4291      	cmp	r1, r2
 800f8f4:	bf88      	it	hi
 800f8f6:	3308      	addhi	r3, #8
 800f8f8:	f102 0201 	add.w	r2, r2, #1
 800f8fc:	bf88      	it	hi
 800f8fe:	6123      	strhi	r3, [r4, #16]
 800f900:	60a2      	str	r2, [r4, #8]
 800f902:	68a1      	ldr	r1, [r4, #8]
 800f904:	b129      	cbz	r1, 800f912 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f906:	6863      	ldr	r3, [r4, #4]
 800f908:	4299      	cmp	r1, r3
 800f90a:	d802      	bhi.n	800f912 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f90c:	68e0      	ldr	r0, [r4, #12]
 800f90e:	f7ff febc 	bl	800f68a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f912:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f914:	f023 0302 	bic.w	r3, r3, #2
 800f918:	6263      	str	r3, [r4, #36]	; 0x24
 800f91a:	68e0      	ldr	r0, [r4, #12]
 800f91c:	bd10      	pop	{r4, pc}
	...

0800f920 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f920:	4b02      	ldr	r3, [pc, #8]	; (800f92c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f922:	6018      	str	r0, [r3, #0]
 800f924:	4b02      	ldr	r3, [pc, #8]	; (800f930 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f926:	6019      	str	r1, [r3, #0]
 800f928:	4770      	bx	lr
 800f92a:	bf00      	nop
 800f92c:	200157fc 	.word	0x200157fc
 800f930:	20015800 	.word	0x20015800

0800f934 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f934:	4b01      	ldr	r3, [pc, #4]	; (800f93c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f936:	6818      	ldr	r0, [r3, #0]
 800f938:	4770      	bx	lr
 800f93a:	bf00      	nop
 800f93c:	200157fc 	.word	0x200157fc

0800f940 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f940:	4b01      	ldr	r3, [pc, #4]	; (800f948 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f942:	6818      	ldr	r0, [r3, #0]
 800f944:	4770      	bx	lr
 800f946:	bf00      	nop
 800f948:	20015800 	.word	0x20015800

0800f94c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f94c:	b510      	push	{r4, lr}
 800f94e:	6803      	ldr	r3, [r0, #0]
 800f950:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f952:	460c      	mov	r4, r1
 800f954:	4798      	blx	r3
 800f956:	1b03      	subs	r3, r0, r4
 800f958:	4258      	negs	r0, r3
 800f95a:	4158      	adcs	r0, r3
 800f95c:	bd10      	pop	{r4, pc}
	...

0800f960 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f960:	4b01      	ldr	r3, [pc, #4]	; (800f968 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f962:	6019      	str	r1, [r3, #0]
 800f964:	4770      	bx	lr
 800f966:	bf00      	nop
 800f968:	20015804 	.word	0x20015804

0800f96c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f96c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f970:	4696      	mov	lr, r2
 800f972:	4605      	mov	r5, r0
 800f974:	4614      	mov	r4, r2
 800f976:	460e      	mov	r6, r1
 800f978:	461f      	mov	r7, r3
 800f97a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f97e:	b097      	sub	sp, #92	; 0x5c
 800f980:	f10d 0c1c 	add.w	ip, sp, #28
 800f984:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f988:	f8de 3000 	ldr.w	r3, [lr]
 800f98c:	f8cc 3000 	str.w	r3, [ip]
 800f990:	f104 0e14 	add.w	lr, r4, #20
 800f994:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f998:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f99c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f9a0:	f8de 3000 	ldr.w	r3, [lr]
 800f9a4:	f8cc 3000 	str.w	r3, [ip]
 800f9a8:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f9ac:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f9b0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f9b4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f9b8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f9bc:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f9c0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f9c4:	f8de 3000 	ldr.w	r3, [lr]
 800f9c8:	f8cc 3000 	str.w	r3, [ip]
 800f9cc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f9ce:	682b      	ldr	r3, [r5, #0]
 800f9d0:	9201      	str	r2, [sp, #4]
 800f9d2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f9d6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f9d8:	9200      	str	r2, [sp, #0]
 800f9da:	f8cd 8008 	str.w	r8, [sp, #8]
 800f9de:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f9e2:	aa07      	add	r2, sp, #28
 800f9e4:	463b      	mov	r3, r7
 800f9e6:	4631      	mov	r1, r6
 800f9e8:	4628      	mov	r0, r5
 800f9ea:	47d8      	blx	fp
 800f9ec:	46a6      	mov	lr, r4
 800f9ee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f9f2:	f10d 0c1c 	add.w	ip, sp, #28
 800f9f6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f9fa:	f8de 3000 	ldr.w	r3, [lr]
 800f9fe:	f8cc 3000 	str.w	r3, [ip]
 800fa02:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800fa06:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fa0a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800fa0e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fa12:	343c      	adds	r4, #60	; 0x3c
 800fa14:	f8de 3000 	ldr.w	r3, [lr]
 800fa18:	f8cc 3000 	str.w	r3, [ip]
 800fa1c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fa1e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800fa22:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fa26:	6823      	ldr	r3, [r4, #0]
 800fa28:	f8cc 3000 	str.w	r3, [ip]
 800fa2c:	682b      	ldr	r3, [r5, #0]
 800fa2e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fa32:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fa34:	9201      	str	r2, [sp, #4]
 800fa36:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fa38:	9200      	str	r2, [sp, #0]
 800fa3a:	f8cd 8008 	str.w	r8, [sp, #8]
 800fa3e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800fa40:	aa07      	add	r2, sp, #28
 800fa42:	463b      	mov	r3, r7
 800fa44:	4631      	mov	r1, r6
 800fa46:	4628      	mov	r0, r5
 800fa48:	47a0      	blx	r4
 800fa4a:	b017      	add	sp, #92	; 0x5c
 800fa4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fa50 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800fa50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa54:	b08d      	sub	sp, #52	; 0x34
 800fa56:	4688      	mov	r8, r1
 800fa58:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fa5a:	f8d3 c000 	ldr.w	ip, [r3]
 800fa5e:	680f      	ldr	r7, [r1, #0]
 800fa60:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800fa64:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800fa68:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800fa6c:	edd3 6a07 	vldr	s13, [r3, #28]
 800fa70:	9918      	ldr	r1, [sp, #96]	; 0x60
 800fa72:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800fa76:	f9b1 9000 	ldrsh.w	r9, [r1]
 800fa7a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800fa7e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800fa82:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800fa86:	eba7 070c 	sub.w	r7, r7, ip
 800fa8a:	42bc      	cmp	r4, r7
 800fa8c:	bfa8      	it	ge
 800fa8e:	463c      	movge	r4, r7
 800fa90:	ee07 4a90 	vmov	s15, r4
 800fa94:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800fa98:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800fa9c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800faa0:	ee65 4a24 	vmul.f32	s9, s10, s9
 800faa4:	ee25 5a27 	vmul.f32	s10, s10, s15
 800faa8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800faac:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800fab0:	eb09 0e0c 	add.w	lr, r9, ip
 800fab4:	4571      	cmp	r1, lr
 800fab6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800faba:	ee32 1a05 	vadd.f32	s2, s4, s10
 800fabe:	ee36 0a84 	vadd.f32	s0, s13, s8
 800fac2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800fac6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800faca:	f340 808d 	ble.w	800fbe8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800face:	eba1 060e 	sub.w	r6, r1, lr
 800fad2:	fb96 f5f4 	sdiv	r5, r6, r4
 800fad6:	ee07 5a10 	vmov	s14, r5
 800fada:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fade:	2d00      	cmp	r5, #0
 800fae0:	fb04 6615 	mls	r6, r4, r5, r6
 800fae4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800fae8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800faec:	eea7 1a05 	vfma.f32	s2, s14, s10
 800faf0:	dd13      	ble.n	800fb1a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800faf2:	ee70 6a44 	vsub.f32	s13, s0, s8
 800faf6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800fafa:	eef5 6a40 	vcmp.f32	s13, #0.0
 800fafe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb02:	bf18      	it	ne
 800fb04:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800fb08:	ee31 2a45 	vsub.f32	s4, s2, s10
 800fb0c:	bf08      	it	eq
 800fb0e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800fb12:	ee61 1a87 	vmul.f32	s3, s3, s14
 800fb16:	ee22 2a07 	vmul.f32	s4, s4, s14
 800fb1a:	fb05 f204 	mul.w	r2, r5, r4
 800fb1e:	1abf      	subs	r7, r7, r2
 800fb20:	4494      	add	ip, r2
 800fb22:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800fb26:	4411      	add	r1, r2
 800fb28:	eb09 020c 	add.w	r2, r9, ip
 800fb2c:	443a      	add	r2, r7
 800fb2e:	b209      	sxth	r1, r1
 800fb30:	428a      	cmp	r2, r1
 800fb32:	bfc4      	itt	gt
 800fb34:	eba1 0209 	subgt.w	r2, r1, r9
 800fb38:	eba2 070c 	subgt.w	r7, r2, ip
 800fb3c:	2f00      	cmp	r7, #0
 800fb3e:	dd50      	ble.n	800fbe2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800fb40:	fb97 f1f4 	sdiv	r1, r7, r4
 800fb44:	fb04 7211 	mls	r2, r4, r1, r7
 800fb48:	b90a      	cbnz	r2, 800fb4e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800fb4a:	3901      	subs	r1, #1
 800fb4c:	4622      	mov	r2, r4
 800fb4e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800fb52:	6840      	ldr	r0, [r0, #4]
 800fb54:	900b      	str	r0, [sp, #44]	; 0x2c
 800fb56:	f8d0 a000 	ldr.w	sl, [r0]
 800fb5a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800fb5c:	9008      	str	r0, [sp, #32]
 800fb5e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800fb62:	9818      	ldr	r0, [sp, #96]	; 0x60
 800fb64:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800fb68:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800fb6c:	695b      	ldr	r3, [r3, #20]
 800fb6e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800fb70:	445b      	add	r3, fp
 800fb72:	eef0 6a42 	vmov.f32	s13, s4
 800fb76:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800fb7a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800fb7e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800fb82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fb86:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fb8a:	9307      	str	r3, [sp, #28]
 800fb8c:	ee17 7a90 	vmov	r7, s15
 800fb90:	ee73 7a42 	vsub.f32	s15, s6, s4
 800fb94:	eeb0 7a61 	vmov.f32	s14, s3
 800fb98:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fb9c:	ee16 3a90 	vmov	r3, s13
 800fba0:	fb97 f7f4 	sdiv	r7, r7, r4
 800fba4:	ee17 ca90 	vmov	ip, s15
 800fba8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800fbac:	fb9c fcf4 	sdiv	ip, ip, r4
 800fbb0:	fb0c 3306 	mla	r3, ip, r6, r3
 800fbb4:	9302      	str	r3, [sp, #8]
 800fbb6:	ee17 3a10 	vmov	r3, s14
 800fbba:	44b6      	add	lr, r6
 800fbbc:	fb04 e505 	mla	r5, r4, r5, lr
 800fbc0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800fbc4:	fb07 3706 	mla	r7, r7, r6, r3
 800fbc8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800fbcc:	e9cd 4700 	strd	r4, r7, [sp]
 800fbd0:	2900      	cmp	r1, #0
 800fbd2:	bfcc      	ite	gt
 800fbd4:	46a1      	movgt	r9, r4
 800fbd6:	4691      	movle	r9, r2
 800fbd8:	eba9 0306 	sub.w	r3, r9, r6
 800fbdc:	f8da 4008 	ldr.w	r4, [sl, #8]
 800fbe0:	47a0      	blx	r4
 800fbe2:	b00d      	add	sp, #52	; 0x34
 800fbe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbe8:	2500      	movs	r5, #0
 800fbea:	462e      	mov	r6, r5
 800fbec:	e799      	b.n	800fb22 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800fbf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fbf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbf4:	b0db      	sub	sp, #364	; 0x16c
 800fbf6:	461d      	mov	r5, r3
 800fbf8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800fbfc:	930a      	str	r3, [sp, #40]	; 0x28
 800fbfe:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800fc02:	930b      	str	r3, [sp, #44]	; 0x2c
 800fc04:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800fc08:	9310      	str	r3, [sp, #64]	; 0x40
 800fc0a:	6803      	ldr	r3, [r0, #0]
 800fc0c:	910f      	str	r1, [sp, #60]	; 0x3c
 800fc0e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800fc10:	9009      	str	r0, [sp, #36]	; 0x24
 800fc12:	4614      	mov	r4, r2
 800fc14:	4629      	mov	r1, r5
 800fc16:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fc1a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800fc1e:	47b8      	blx	r7
 800fc20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fc22:	6058      	str	r0, [r3, #4]
 800fc24:	2800      	cmp	r0, #0
 800fc26:	f000 83a1 	beq.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fc2a:	682b      	ldr	r3, [r5, #0]
 800fc2c:	9314      	str	r3, [sp, #80]	; 0x50
 800fc2e:	686b      	ldr	r3, [r5, #4]
 800fc30:	9315      	str	r3, [sp, #84]	; 0x54
 800fc32:	4bc4      	ldr	r3, [pc, #784]	; (800ff44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800fc34:	ed94 7a02 	vldr	s14, [r4, #8]
 800fc38:	7819      	ldrb	r1, [r3, #0]
 800fc3a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800fc3e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800fc42:	2900      	cmp	r1, #0
 800fc44:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fc48:	bf16      	itet	ne
 800fc4a:	4619      	movne	r1, r3
 800fc4c:	4611      	moveq	r1, r2
 800fc4e:	4613      	movne	r3, r2
 800fc50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc54:	9116      	str	r1, [sp, #88]	; 0x58
 800fc56:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800fc5a:	f240 8387 	bls.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fc5e:	ed94 7a07 	vldr	s14, [r4, #28]
 800fc62:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fc66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc6a:	f240 837f 	bls.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fc6e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800fc72:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fc76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc7a:	f240 8377 	bls.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fc7e:	6822      	ldr	r2, [r4, #0]
 800fc80:	4bb1      	ldr	r3, [pc, #708]	; (800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800fc82:	429a      	cmp	r2, r3
 800fc84:	f2c0 8372 	blt.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fc88:	49b0      	ldr	r1, [pc, #704]	; (800ff4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800fc8a:	6963      	ldr	r3, [r4, #20]
 800fc8c:	428a      	cmp	r2, r1
 800fc8e:	f300 836d 	bgt.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fc92:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fc96:	48ae      	ldr	r0, [pc, #696]	; (800ff50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800fc98:	33ff      	adds	r3, #255	; 0xff
 800fc9a:	4283      	cmp	r3, r0
 800fc9c:	f200 8366 	bhi.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fca0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800fca2:	4dac      	ldr	r5, [pc, #688]	; (800ff54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800fca4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fca8:	33ff      	adds	r3, #255	; 0xff
 800fcaa:	42ab      	cmp	r3, r5
 800fcac:	f200 835e 	bhi.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fcb0:	6862      	ldr	r2, [r4, #4]
 800fcb2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800fcb6:	33ff      	adds	r3, #255	; 0xff
 800fcb8:	4283      	cmp	r3, r0
 800fcba:	f200 8357 	bhi.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fcbe:	69a1      	ldr	r1, [r4, #24]
 800fcc0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800fcc4:	33ff      	adds	r3, #255	; 0xff
 800fcc6:	4283      	cmp	r3, r0
 800fcc8:	f200 8350 	bhi.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fccc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fcce:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800fcd2:	30ff      	adds	r0, #255	; 0xff
 800fcd4:	42a8      	cmp	r0, r5
 800fcd6:	f200 8349 	bhi.w	801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fcda:	428a      	cmp	r2, r1
 800fcdc:	f280 8110 	bge.w	800ff00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800fce0:	429a      	cmp	r2, r3
 800fce2:	f300 8119 	bgt.w	800ff18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800fce6:	4299      	cmp	r1, r3
 800fce8:	f280 811d 	bge.w	800ff26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800fcec:	2502      	movs	r5, #2
 800fcee:	2701      	movs	r7, #1
 800fcf0:	46a9      	mov	r9, r5
 800fcf2:	46b8      	mov	r8, r7
 800fcf4:	f04f 0a00 	mov.w	sl, #0
 800fcf8:	4621      	mov	r1, r4
 800fcfa:	a849      	add	r0, sp, #292	; 0x124
 800fcfc:	f003 fcfe 	bl	80136fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800fd00:	4622      	mov	r2, r4
 800fd02:	4653      	mov	r3, sl
 800fd04:	a949      	add	r1, sp, #292	; 0x124
 800fd06:	f8cd 9000 	str.w	r9, [sp]
 800fd0a:	a819      	add	r0, sp, #100	; 0x64
 800fd0c:	f003 fe26 	bl	801395c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fd10:	4622      	mov	r2, r4
 800fd12:	4653      	mov	r3, sl
 800fd14:	a949      	add	r1, sp, #292	; 0x124
 800fd16:	f8cd 8000 	str.w	r8, [sp]
 800fd1a:	a829      	add	r0, sp, #164	; 0xa4
 800fd1c:	f003 fe1e 	bl	801395c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fd20:	4643      	mov	r3, r8
 800fd22:	4622      	mov	r2, r4
 800fd24:	a949      	add	r1, sp, #292	; 0x124
 800fd26:	f8cd 9000 	str.w	r9, [sp]
 800fd2a:	a839      	add	r0, sp, #228	; 0xe4
 800fd2c:	f003 fe16 	bl	801395c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fd30:	42af      	cmp	r7, r5
 800fd32:	bfb5      	itete	lt
 800fd34:	2300      	movlt	r3, #0
 800fd36:	2301      	movge	r3, #1
 800fd38:	930e      	strlt	r3, [sp, #56]	; 0x38
 800fd3a:	930e      	strge	r3, [sp, #56]	; 0x38
 800fd3c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fd3e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fd42:	af12      	add	r7, sp, #72	; 0x48
 800fd44:	bfb9      	ittee	lt
 800fd46:	ad29      	addlt	r5, sp, #164	; 0xa4
 800fd48:	ac19      	addlt	r4, sp, #100	; 0x64
 800fd4a:	ad19      	addge	r5, sp, #100	; 0x64
 800fd4c:	ac29      	addge	r4, sp, #164	; 0xa4
 800fd4e:	e887 0003 	stmia.w	r7, {r0, r1}
 800fd52:	b928      	cbnz	r0, 800fd60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800fd54:	4b80      	ldr	r3, [pc, #512]	; (800ff58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800fd56:	6818      	ldr	r0, [r3, #0]
 800fd58:	6803      	ldr	r3, [r0, #0]
 800fd5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fd5c:	4798      	blx	r3
 800fd5e:	6038      	str	r0, [r7, #0]
 800fd60:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fd62:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fd66:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fd6a:	930c      	str	r3, [sp, #48]	; 0x30
 800fd6c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fd6e:	6963      	ldr	r3, [r4, #20]
 800fd70:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800fd72:	440b      	add	r3, r1
 800fd74:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fd78:	4408      	add	r0, r1
 800fd7a:	b200      	sxth	r0, r0
 800fd7c:	4283      	cmp	r3, r0
 800fd7e:	900d      	str	r0, [sp, #52]	; 0x34
 800fd80:	f280 80dd 	bge.w	800ff3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800fd84:	428b      	cmp	r3, r1
 800fd86:	da08      	bge.n	800fd9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fd88:	2a00      	cmp	r2, #0
 800fd8a:	dd06      	ble.n	800fd9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fd8c:	1acb      	subs	r3, r1, r3
 800fd8e:	429a      	cmp	r2, r3
 800fd90:	f2c0 80e4 	blt.w	800ff5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800fd94:	2b00      	cmp	r3, #0
 800fd96:	f300 80e2 	bgt.w	800ff5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800fd9a:	6967      	ldr	r7, [r4, #20]
 800fd9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fd9e:	443b      	add	r3, r7
 800fda0:	461f      	mov	r7, r3
 800fda2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fda4:	1bdf      	subs	r7, r3, r7
 800fda6:	4297      	cmp	r7, r2
 800fda8:	bfa8      	it	ge
 800fdaa:	4617      	movge	r7, r2
 800fdac:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fdb0:	2f00      	cmp	r7, #0
 800fdb2:	f340 8166 	ble.w	8010082 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800fdb6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fdb8:	6829      	ldr	r1, [r5, #0]
 800fdba:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fdbe:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fdc2:	6820      	ldr	r0, [r4, #0]
 800fdc4:	4411      	add	r1, r2
 800fdc6:	4299      	cmp	r1, r3
 800fdc8:	dd1a      	ble.n	800fe00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fdca:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fdce:	440b      	add	r3, r1
 800fdd0:	4402      	add	r2, r0
 800fdd2:	b21b      	sxth	r3, r3
 800fdd4:	429a      	cmp	r2, r3
 800fdd6:	dc13      	bgt.n	800fe00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fdd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fdda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fddc:	681b      	ldr	r3, [r3, #0]
 800fdde:	9206      	str	r2, [sp, #24]
 800fde0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fde2:	9205      	str	r2, [sp, #20]
 800fde4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fde6:	9500      	str	r5, [sp, #0]
 800fde8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fdec:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fdee:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fdf0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fdf4:	a912      	add	r1, sp, #72	; 0x48
 800fdf6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fdfa:	aa49      	add	r2, sp, #292	; 0x124
 800fdfc:	4623      	mov	r3, r4
 800fdfe:	47c8      	blx	r9
 800fe00:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fe04:	441a      	add	r2, r3
 800fe06:	6963      	ldr	r3, [r4, #20]
 800fe08:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fe0c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fe10:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fe14:	68a1      	ldr	r1, [r4, #8]
 800fe16:	ed94 6a08 	vldr	s12, [r4, #32]
 800fe1a:	6022      	str	r2, [r4, #0]
 800fe1c:	3301      	adds	r3, #1
 800fe1e:	6163      	str	r3, [r4, #20]
 800fe20:	69a3      	ldr	r3, [r4, #24]
 800fe22:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fe26:	3b01      	subs	r3, #1
 800fe28:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fe2c:	61a3      	str	r3, [r4, #24]
 800fe2e:	6923      	ldr	r3, [r4, #16]
 800fe30:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fe34:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fe38:	edd4 6a07 	vldr	s13, [r4, #28]
 800fe3c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fe40:	440b      	add	r3, r1
 800fe42:	68e1      	ldr	r1, [r4, #12]
 800fe44:	6123      	str	r3, [r4, #16]
 800fe46:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fe4a:	428b      	cmp	r3, r1
 800fe4c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fe50:	db15      	blt.n	800fe7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800fe52:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fe56:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fe5a:	3201      	adds	r2, #1
 800fe5c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fe60:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fe64:	6022      	str	r2, [r4, #0]
 800fe66:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fe6a:	1a5b      	subs	r3, r3, r1
 800fe6c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fe70:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fe74:	6123      	str	r3, [r4, #16]
 800fe76:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fe7a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fe7e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fe82:	441a      	add	r2, r3
 800fe84:	696b      	ldr	r3, [r5, #20]
 800fe86:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fe8a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fe8e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fe92:	68a9      	ldr	r1, [r5, #8]
 800fe94:	ed95 6a08 	vldr	s12, [r5, #32]
 800fe98:	602a      	str	r2, [r5, #0]
 800fe9a:	3301      	adds	r3, #1
 800fe9c:	616b      	str	r3, [r5, #20]
 800fe9e:	69ab      	ldr	r3, [r5, #24]
 800fea0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fea4:	3b01      	subs	r3, #1
 800fea6:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800feaa:	61ab      	str	r3, [r5, #24]
 800feac:	692b      	ldr	r3, [r5, #16]
 800feae:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800feb2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800feb6:	edd5 6a07 	vldr	s13, [r5, #28]
 800feba:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800febe:	440b      	add	r3, r1
 800fec0:	68e9      	ldr	r1, [r5, #12]
 800fec2:	612b      	str	r3, [r5, #16]
 800fec4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fec8:	428b      	cmp	r3, r1
 800feca:	edc5 6a07 	vstr	s13, [r5, #28]
 800fece:	db15      	blt.n	800fefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800fed0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fed4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fed8:	3201      	adds	r2, #1
 800feda:	edc5 6a07 	vstr	s13, [r5, #28]
 800fede:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fee2:	602a      	str	r2, [r5, #0]
 800fee4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fee8:	1a5b      	subs	r3, r3, r1
 800feea:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800feee:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fef2:	612b      	str	r3, [r5, #16]
 800fef4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fef8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fefc:	3f01      	subs	r7, #1
 800fefe:	e757      	b.n	800fdb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ff00:	4299      	cmp	r1, r3
 800ff02:	dc13      	bgt.n	800ff2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ff04:	429a      	cmp	r2, r3
 800ff06:	da14      	bge.n	800ff32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ff08:	2502      	movs	r5, #2
 800ff0a:	2703      	movs	r7, #3
 800ff0c:	46a9      	mov	r9, r5
 800ff0e:	f04f 0800 	mov.w	r8, #0
 800ff12:	f04f 0a01 	mov.w	sl, #1
 800ff16:	e6ef      	b.n	800fcf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ff18:	2501      	movs	r5, #1
 800ff1a:	2700      	movs	r7, #0
 800ff1c:	46a9      	mov	r9, r5
 800ff1e:	46b8      	mov	r8, r7
 800ff20:	f04f 0a02 	mov.w	sl, #2
 800ff24:	e6e8      	b.n	800fcf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ff26:	2501      	movs	r5, #1
 800ff28:	2702      	movs	r7, #2
 800ff2a:	e6e1      	b.n	800fcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ff2c:	2500      	movs	r5, #0
 800ff2e:	2701      	movs	r7, #1
 800ff30:	e7f4      	b.n	800ff1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ff32:	2702      	movs	r7, #2
 800ff34:	2503      	movs	r5, #3
 800ff36:	f04f 0900 	mov.w	r9, #0
 800ff3a:	46b8      	mov	r8, r7
 800ff3c:	e7e9      	b.n	800ff12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ff3e:	4613      	mov	r3, r2
 800ff40:	e728      	b.n	800fd94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ff42:	bf00      	nop
 800ff44:	200157ec 	.word	0x200157ec
 800ff48:	fffd8f01 	.word	0xfffd8f01
 800ff4c:	00027100 	.word	0x00027100
 800ff50:	0004e1ff 	.word	0x0004e1ff
 800ff54:	0004e1fe 	.word	0x0004e1fe
 800ff58:	200157f4 	.word	0x200157f4
 800ff5c:	4613      	mov	r3, r2
 800ff5e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ff60:	9111      	str	r1, [sp, #68]	; 0x44
 800ff62:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800ff66:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800ff6a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800ff6c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800ff70:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800ff74:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800ff78:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800ff7c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800ff80:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800ff84:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800ff88:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800ff8c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800ff90:	469e      	mov	lr, r3
 800ff92:	469c      	mov	ip, r3
 800ff94:	f04f 0900 	mov.w	r9, #0
 800ff98:	f1bc 0f00 	cmp.w	ip, #0
 800ff9c:	d147      	bne.n	801002e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800ff9e:	eb03 0c07 	add.w	ip, r3, r7
 800ffa2:	1ad7      	subs	r7, r2, r3
 800ffa4:	f1b9 0f00 	cmp.w	r9, #0
 800ffa8:	d009      	beq.n	800ffbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800ffaa:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800ffae:	9029      	str	r0, [sp, #164]	; 0xa4
 800ffb0:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800ffb4:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800ffb8:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800ffbc:	912d      	str	r1, [sp, #180]	; 0xb4
 800ffbe:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ffc0:	9111      	str	r1, [sp, #68]	; 0x44
 800ffc2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ffc6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ffca:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ffce:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ffd2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ffd6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ffda:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ffde:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ffe2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ffe6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ffea:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ffee:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fff2:	f04f 0800 	mov.w	r8, #0
 800fff6:	f1be 0f00 	cmp.w	lr, #0
 800fffa:	d031      	beq.n	8010060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fffc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fffe:	4431      	add	r1, r6
 8010000:	4549      	cmp	r1, r9
 8010002:	4450      	add	r0, sl
 8010004:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010008:	ee37 7a04 	vadd.f32	s14, s14, s8
 801000c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010010:	db08      	blt.n	8010024 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8010012:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010016:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801001a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801001e:	3001      	adds	r0, #1
 8010020:	eba1 0109 	sub.w	r1, r1, r9
 8010024:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010028:	f04f 0801 	mov.w	r8, #1
 801002c:	e7e3      	b.n	800fff6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801002e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010030:	4431      	add	r1, r6
 8010032:	4541      	cmp	r1, r8
 8010034:	4450      	add	r0, sl
 8010036:	ee37 7a24 	vadd.f32	s14, s14, s9
 801003a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801003e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010042:	db08      	blt.n	8010056 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8010044:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010048:	ee37 7a25 	vadd.f32	s14, s14, s11
 801004c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010050:	3001      	adds	r0, #1
 8010052:	eba1 0108 	sub.w	r1, r1, r8
 8010056:	f10c 3cff 	add.w	ip, ip, #4294967295
 801005a:	f04f 0901 	mov.w	r9, #1
 801005e:	e79b      	b.n	800ff98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010060:	449c      	add	ip, r3
 8010062:	1aff      	subs	r7, r7, r3
 8010064:	f1b8 0f00 	cmp.w	r8, #0
 8010068:	d009      	beq.n	801007e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801006a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801006e:	9019      	str	r0, [sp, #100]	; 0x64
 8010070:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010074:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010078:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801007c:	911d      	str	r1, [sp, #116]	; 0x74
 801007e:	1ad2      	subs	r2, r2, r3
 8010080:	e68b      	b.n	800fd9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010082:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010084:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8010086:	2b00      	cmp	r3, #0
 8010088:	f000 80d1 	beq.w	801022e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801008c:	ad19      	add	r5, sp, #100	; 0x64
 801008e:	ac39      	add	r4, sp, #228	; 0xe4
 8010090:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010092:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010096:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801009a:	930c      	str	r3, [sp, #48]	; 0x30
 801009c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801009e:	6963      	ldr	r3, [r4, #20]
 80100a0:	440b      	add	r3, r1
 80100a2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80100a6:	4408      	add	r0, r1
 80100a8:	b200      	sxth	r0, r0
 80100aa:	4283      	cmp	r3, r0
 80100ac:	900d      	str	r0, [sp, #52]	; 0x34
 80100ae:	f280 80c1 	bge.w	8010234 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80100b2:	428b      	cmp	r3, r1
 80100b4:	da08      	bge.n	80100c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80100b6:	2a00      	cmp	r2, #0
 80100b8:	dd06      	ble.n	80100c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80100ba:	1acb      	subs	r3, r1, r3
 80100bc:	429a      	cmp	r2, r3
 80100be:	f2c0 80bb 	blt.w	8010238 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80100c2:	2b00      	cmp	r3, #0
 80100c4:	f300 80b9 	bgt.w	801023a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80100c8:	6967      	ldr	r7, [r4, #20]
 80100ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80100cc:	443b      	add	r3, r7
 80100ce:	461f      	mov	r7, r3
 80100d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80100d2:	1bdf      	subs	r7, r3, r7
 80100d4:	4297      	cmp	r7, r2
 80100d6:	bfa8      	it	ge
 80100d8:	4617      	movge	r7, r2
 80100da:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80100de:	2f00      	cmp	r7, #0
 80100e0:	f340 813c 	ble.w	801035c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80100e4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80100e6:	6829      	ldr	r1, [r5, #0]
 80100e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80100ec:	f9bb 3000 	ldrsh.w	r3, [fp]
 80100f0:	6820      	ldr	r0, [r4, #0]
 80100f2:	4411      	add	r1, r2
 80100f4:	4299      	cmp	r1, r3
 80100f6:	dd1a      	ble.n	801012e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80100f8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80100fc:	440b      	add	r3, r1
 80100fe:	4402      	add	r2, r0
 8010100:	b21b      	sxth	r3, r3
 8010102:	429a      	cmp	r2, r3
 8010104:	dc13      	bgt.n	801012e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010106:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010108:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801010a:	681b      	ldr	r3, [r3, #0]
 801010c:	9206      	str	r2, [sp, #24]
 801010e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010110:	9205      	str	r2, [sp, #20]
 8010112:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010114:	9500      	str	r5, [sp, #0]
 8010116:	e9cd b203 	strd	fp, r2, [sp, #12]
 801011a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801011c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801011e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010122:	a912      	add	r1, sp, #72	; 0x48
 8010124:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8010128:	aa49      	add	r2, sp, #292	; 0x124
 801012a:	4623      	mov	r3, r4
 801012c:	47c8      	blx	r9
 801012e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010132:	441a      	add	r2, r3
 8010134:	6963      	ldr	r3, [r4, #20]
 8010136:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801013a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801013e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010142:	68a1      	ldr	r1, [r4, #8]
 8010144:	ed94 6a08 	vldr	s12, [r4, #32]
 8010148:	6022      	str	r2, [r4, #0]
 801014a:	3301      	adds	r3, #1
 801014c:	6163      	str	r3, [r4, #20]
 801014e:	69a3      	ldr	r3, [r4, #24]
 8010150:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010154:	3b01      	subs	r3, #1
 8010156:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801015a:	61a3      	str	r3, [r4, #24]
 801015c:	6923      	ldr	r3, [r4, #16]
 801015e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010162:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010166:	edd4 6a07 	vldr	s13, [r4, #28]
 801016a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801016e:	440b      	add	r3, r1
 8010170:	68e1      	ldr	r1, [r4, #12]
 8010172:	6123      	str	r3, [r4, #16]
 8010174:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010178:	428b      	cmp	r3, r1
 801017a:	edc4 6a07 	vstr	s13, [r4, #28]
 801017e:	db15      	blt.n	80101ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010180:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010184:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010188:	3201      	adds	r2, #1
 801018a:	edc4 6a07 	vstr	s13, [r4, #28]
 801018e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010192:	6022      	str	r2, [r4, #0]
 8010194:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010198:	1a5b      	subs	r3, r3, r1
 801019a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801019e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80101a2:	6123      	str	r3, [r4, #16]
 80101a4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80101a8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80101ac:	e9d5 2300 	ldrd	r2, r3, [r5]
 80101b0:	441a      	add	r2, r3
 80101b2:	696b      	ldr	r3, [r5, #20]
 80101b4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80101b8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80101bc:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80101c0:	68a9      	ldr	r1, [r5, #8]
 80101c2:	ed95 6a08 	vldr	s12, [r5, #32]
 80101c6:	602a      	str	r2, [r5, #0]
 80101c8:	3301      	adds	r3, #1
 80101ca:	616b      	str	r3, [r5, #20]
 80101cc:	69ab      	ldr	r3, [r5, #24]
 80101ce:	ee37 7a27 	vadd.f32	s14, s14, s15
 80101d2:	3b01      	subs	r3, #1
 80101d4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80101d8:	61ab      	str	r3, [r5, #24]
 80101da:	692b      	ldr	r3, [r5, #16]
 80101dc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80101e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80101e4:	edd5 6a07 	vldr	s13, [r5, #28]
 80101e8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80101ec:	440b      	add	r3, r1
 80101ee:	68e9      	ldr	r1, [r5, #12]
 80101f0:	612b      	str	r3, [r5, #16]
 80101f2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80101f6:	428b      	cmp	r3, r1
 80101f8:	edc5 6a07 	vstr	s13, [r5, #28]
 80101fc:	db15      	blt.n	801022a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80101fe:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8010202:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010206:	3201      	adds	r2, #1
 8010208:	edc5 6a07 	vstr	s13, [r5, #28]
 801020c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010210:	602a      	str	r2, [r5, #0]
 8010212:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010216:	1a5b      	subs	r3, r3, r1
 8010218:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801021c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010220:	612b      	str	r3, [r5, #16]
 8010222:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010226:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801022a:	3f01      	subs	r7, #1
 801022c:	e757      	b.n	80100de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801022e:	ad39      	add	r5, sp, #228	; 0xe4
 8010230:	ac19      	add	r4, sp, #100	; 0x64
 8010232:	e72d      	b.n	8010090 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010234:	4613      	mov	r3, r2
 8010236:	e744      	b.n	80100c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010238:	4613      	mov	r3, r2
 801023a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801023e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010240:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010244:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010248:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801024c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010250:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010254:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010258:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801025c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801025e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010262:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010266:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801026a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801026e:	960e      	str	r6, [sp, #56]	; 0x38
 8010270:	469e      	mov	lr, r3
 8010272:	461f      	mov	r7, r3
 8010274:	f04f 0900 	mov.w	r9, #0
 8010278:	2f00      	cmp	r7, #0
 801027a:	d146      	bne.n	801030a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801027c:	449c      	add	ip, r3
 801027e:	1ad7      	subs	r7, r2, r3
 8010280:	f1b9 0f00 	cmp.w	r9, #0
 8010284:	d009      	beq.n	801029a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010286:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801028a:	9039      	str	r0, [sp, #228]	; 0xe4
 801028c:	913d      	str	r1, [sp, #244]	; 0xf4
 801028e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010292:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8010296:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801029a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801029c:	910e      	str	r1, [sp, #56]	; 0x38
 801029e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80102a2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80102a6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80102aa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80102ae:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80102b2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80102b6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80102ba:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80102be:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80102c2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80102c6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80102ca:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80102ce:	f04f 0800 	mov.w	r8, #0
 80102d2:	f1be 0f00 	cmp.w	lr, #0
 80102d6:	d030      	beq.n	801033a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80102d8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80102da:	4431      	add	r1, r6
 80102dc:	4549      	cmp	r1, r9
 80102de:	4450      	add	r0, sl
 80102e0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80102e4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80102e8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80102ec:	db08      	blt.n	8010300 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80102ee:	ee77 7a85 	vadd.f32	s15, s15, s10
 80102f2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80102f6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80102fa:	3001      	adds	r0, #1
 80102fc:	eba1 0109 	sub.w	r1, r1, r9
 8010300:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010304:	f04f 0801 	mov.w	r8, #1
 8010308:	e7e3      	b.n	80102d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801030a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801030c:	4431      	add	r1, r6
 801030e:	4541      	cmp	r1, r8
 8010310:	4450      	add	r0, sl
 8010312:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010316:	ee77 7a84 	vadd.f32	s15, s15, s8
 801031a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801031e:	db08      	blt.n	8010332 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010320:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010324:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010328:	ee77 7a86 	vadd.f32	s15, s15, s12
 801032c:	3001      	adds	r0, #1
 801032e:	eba1 0108 	sub.w	r1, r1, r8
 8010332:	3f01      	subs	r7, #1
 8010334:	f04f 0901 	mov.w	r9, #1
 8010338:	e79e      	b.n	8010278 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801033a:	449c      	add	ip, r3
 801033c:	1aff      	subs	r7, r7, r3
 801033e:	f1b8 0f00 	cmp.w	r8, #0
 8010342:	d009      	beq.n	8010358 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010344:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010348:	9019      	str	r0, [sp, #100]	; 0x64
 801034a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801034e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010352:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010356:	911d      	str	r1, [sp, #116]	; 0x74
 8010358:	1ad2      	subs	r2, r2, r3
 801035a:	e6b5      	b.n	80100c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801035c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801035e:	681b      	ldr	r3, [r3, #0]
 8010360:	b923      	cbnz	r3, 801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010362:	4b04      	ldr	r3, [pc, #16]	; (8010374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010364:	6818      	ldr	r0, [r3, #0]
 8010366:	6803      	ldr	r3, [r0, #0]
 8010368:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801036a:	4798      	blx	r3
 801036c:	b05b      	add	sp, #364	; 0x16c
 801036e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010372:	bf00      	nop
 8010374:	200157f4 	.word	0x200157f4

08010378 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010378:	b570      	push	{r4, r5, r6, lr}
 801037a:	4604      	mov	r4, r0
 801037c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010380:	9804      	ldr	r0, [sp, #16]
 8010382:	6061      	str	r1, [r4, #4]
 8010384:	2500      	movs	r5, #0
 8010386:	8025      	strh	r5, [r4, #0]
 8010388:	7223      	strb	r3, [r4, #8]
 801038a:	7266      	strb	r6, [r4, #9]
 801038c:	60e0      	str	r0, [r4, #12]
 801038e:	8222      	strh	r2, [r4, #16]
 8010390:	8265      	strh	r5, [r4, #18]
 8010392:	82a5      	strh	r5, [r4, #20]
 8010394:	82e5      	strh	r5, [r4, #22]
 8010396:	8325      	strh	r5, [r4, #24]
 8010398:	8365      	strh	r5, [r4, #26]
 801039a:	83a5      	strh	r5, [r4, #28]
 801039c:	77a5      	strb	r5, [r4, #30]
 801039e:	b32e      	cbz	r6, 80103ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80103a0:	6803      	ldr	r3, [r0, #0]
 80103a2:	695b      	ldr	r3, [r3, #20]
 80103a4:	4798      	blx	r3
 80103a6:	4606      	mov	r6, r0
 80103a8:	b300      	cbz	r0, 80103ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80103aa:	68e0      	ldr	r0, [r4, #12]
 80103ac:	6803      	ldr	r3, [r0, #0]
 80103ae:	4631      	mov	r1, r6
 80103b0:	68db      	ldr	r3, [r3, #12]
 80103b2:	4798      	blx	r3
 80103b4:	4605      	mov	r5, r0
 80103b6:	b1c8      	cbz	r0, 80103ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80103b8:	7b43      	ldrb	r3, [r0, #13]
 80103ba:	7a82      	ldrb	r2, [r0, #10]
 80103bc:	005b      	lsls	r3, r3, #1
 80103be:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80103c2:	4313      	orrs	r3, r2
 80103c4:	83a3      	strh	r3, [r4, #28]
 80103c6:	7a63      	ldrb	r3, [r4, #9]
 80103c8:	2b04      	cmp	r3, #4
 80103ca:	d10f      	bne.n	80103ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80103cc:	68e0      	ldr	r0, [r4, #12]
 80103ce:	6803      	ldr	r3, [r0, #0]
 80103d0:	462a      	mov	r2, r5
 80103d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80103d4:	4631      	mov	r1, r6
 80103d6:	4798      	blx	r3
 80103d8:	7b6b      	ldrb	r3, [r5, #13]
 80103da:	005b      	lsls	r3, r3, #1
 80103dc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80103e0:	7aab      	ldrb	r3, [r5, #10]
 80103e2:	4313      	orrs	r3, r2
 80103e4:	4418      	add	r0, r3
 80103e6:	8ba3      	ldrh	r3, [r4, #28]
 80103e8:	4418      	add	r0, r3
 80103ea:	83a0      	strh	r0, [r4, #28]
 80103ec:	4620      	mov	r0, r4
 80103ee:	bd70      	pop	{r4, r5, r6, pc}

080103f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80103f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103f4:	2400      	movs	r4, #0
 80103f6:	b085      	sub	sp, #20
 80103f8:	4681      	mov	r9, r0
 80103fa:	4688      	mov	r8, r1
 80103fc:	4692      	mov	sl, r2
 80103fe:	469b      	mov	fp, r3
 8010400:	4627      	mov	r7, r4
 8010402:	4625      	mov	r5, r4
 8010404:	4626      	mov	r6, r4
 8010406:	4554      	cmp	r4, sl
 8010408:	da2a      	bge.n	8010460 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801040a:	2300      	movs	r3, #0
 801040c:	9303      	str	r3, [sp, #12]
 801040e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010412:	429d      	cmp	r5, r3
 8010414:	d004      	beq.n	8010420 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010416:	f242 030b 	movw	r3, #8203	; 0x200b
 801041a:	429d      	cmp	r5, r3
 801041c:	bf18      	it	ne
 801041e:	462f      	movne	r7, r5
 8010420:	ab03      	add	r3, sp, #12
 8010422:	4642      	mov	r2, r8
 8010424:	4659      	mov	r1, fp
 8010426:	4648      	mov	r0, r9
 8010428:	f002 ff7e 	bl	8013328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801042c:	4605      	mov	r5, r0
 801042e:	b1b8      	cbz	r0, 8010460 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010430:	280a      	cmp	r0, #10
 8010432:	d015      	beq.n	8010460 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010434:	9a03      	ldr	r2, [sp, #12]
 8010436:	b18a      	cbz	r2, 801045c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010438:	7b50      	ldrb	r0, [r2, #13]
 801043a:	7a93      	ldrb	r3, [r2, #10]
 801043c:	8895      	ldrh	r5, [r2, #4]
 801043e:	0040      	lsls	r0, r0, #1
 8010440:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010444:	4303      	orrs	r3, r0
 8010446:	9301      	str	r3, [sp, #4]
 8010448:	f8d8 3000 	ldr.w	r3, [r8]
 801044c:	4639      	mov	r1, r7
 801044e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010450:	4640      	mov	r0, r8
 8010452:	4798      	blx	r3
 8010454:	9b01      	ldr	r3, [sp, #4]
 8010456:	4418      	add	r0, r3
 8010458:	4406      	add	r6, r0
 801045a:	b2b6      	uxth	r6, r6
 801045c:	3401      	adds	r4, #1
 801045e:	e7d2      	b.n	8010406 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010460:	4630      	mov	r0, r6
 8010462:	b005      	add	sp, #20
 8010464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010468 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010468:	2a02      	cmp	r2, #2
 801046a:	b530      	push	{r4, r5, lr}
 801046c:	d011      	beq.n	8010492 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801046e:	2a03      	cmp	r2, #3
 8010470:	d01c      	beq.n	80104ac <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010472:	2a01      	cmp	r2, #1
 8010474:	d10c      	bne.n	8010490 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010476:	888b      	ldrh	r3, [r1, #4]
 8010478:	8801      	ldrh	r1, [r0, #0]
 801047a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801047e:	8844      	ldrh	r4, [r0, #2]
 8010480:	8004      	strh	r4, [r0, #0]
 8010482:	1a5b      	subs	r3, r3, r1
 8010484:	1a9b      	subs	r3, r3, r2
 8010486:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801048a:	8043      	strh	r3, [r0, #2]
 801048c:	8081      	strh	r1, [r0, #4]
 801048e:	80c2      	strh	r2, [r0, #6]
 8010490:	bd30      	pop	{r4, r5, pc}
 8010492:	88cb      	ldrh	r3, [r1, #6]
 8010494:	8842      	ldrh	r2, [r0, #2]
 8010496:	1a9b      	subs	r3, r3, r2
 8010498:	88c2      	ldrh	r2, [r0, #6]
 801049a:	1a9b      	subs	r3, r3, r2
 801049c:	888a      	ldrh	r2, [r1, #4]
 801049e:	8801      	ldrh	r1, [r0, #0]
 80104a0:	8043      	strh	r3, [r0, #2]
 80104a2:	1a52      	subs	r2, r2, r1
 80104a4:	8881      	ldrh	r1, [r0, #4]
 80104a6:	1a52      	subs	r2, r2, r1
 80104a8:	8002      	strh	r2, [r0, #0]
 80104aa:	e7f1      	b.n	8010490 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80104ac:	88cb      	ldrh	r3, [r1, #6]
 80104ae:	8841      	ldrh	r1, [r0, #2]
 80104b0:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80104b4:	f9b0 5000 	ldrsh.w	r5, [r0]
 80104b8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80104bc:	8045      	strh	r5, [r0, #2]
 80104be:	1a5b      	subs	r3, r3, r1
 80104c0:	1a9b      	subs	r3, r3, r2
 80104c2:	8003      	strh	r3, [r0, #0]
 80104c4:	8082      	strh	r2, [r0, #4]
 80104c6:	80c4      	strh	r4, [r0, #6]
 80104c8:	e7e2      	b.n	8010490 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080104ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80104ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104ce:	b09f      	sub	sp, #124	; 0x7c
 80104d0:	9116      	str	r1, [sp, #88]	; 0x58
 80104d2:	9317      	str	r3, [sp, #92]	; 0x5c
 80104d4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80104d6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80104d8:	8809      	ldrh	r1, [r1, #0]
 80104da:	889b      	ldrh	r3, [r3, #4]
 80104dc:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80104e0:	9212      	str	r2, [sp, #72]	; 0x48
 80104e2:	440b      	add	r3, r1
 80104e4:	b21b      	sxth	r3, r3
 80104e6:	9310      	str	r3, [sp, #64]	; 0x40
 80104e8:	f8d8 3000 	ldr.w	r3, [r8]
 80104ec:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80104f0:	7a59      	ldrb	r1, [r3, #9]
 80104f2:	7a1b      	ldrb	r3, [r3, #8]
 80104f4:	9011      	str	r0, [sp, #68]	; 0x44
 80104f6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80104fa:	9114      	str	r1, [sp, #80]	; 0x50
 80104fc:	9315      	str	r3, [sp, #84]	; 0x54
 80104fe:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 8010502:	2a00      	cmp	r2, #0
 8010504:	d06a      	beq.n	80105dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8010506:	f898 3010 	ldrb.w	r3, [r8, #16]
 801050a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801050c:	2b04      	cmp	r3, #4
 801050e:	bf14      	ite	ne
 8010510:	2301      	movne	r3, #1
 8010512:	2302      	moveq	r3, #2
 8010514:	4413      	add	r3, r2
 8010516:	f04f 0900 	mov.w	r9, #0
 801051a:	930f      	str	r3, [sp, #60]	; 0x3c
 801051c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8010520:	464c      	mov	r4, r9
 8010522:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010526:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801052a:	4293      	cmp	r3, r2
 801052c:	f280 808f 	bge.w	801064e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010530:	2300      	movs	r3, #0
 8010532:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8010536:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801053a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801053e:	429c      	cmp	r4, r3
 8010540:	d006      	beq.n	8010550 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010542:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010544:	f242 020b 	movw	r2, #8203	; 0x200b
 8010548:	4294      	cmp	r4, r2
 801054a:	bf18      	it	ne
 801054c:	4623      	movne	r3, r4
 801054e:	930d      	str	r3, [sp, #52]	; 0x34
 8010550:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010552:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010554:	f8d8 2000 	ldr.w	r2, [r8]
 8010558:	428b      	cmp	r3, r1
 801055a:	db41      	blt.n	80105e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801055c:	6813      	ldr	r3, [r2, #0]
 801055e:	4610      	mov	r0, r2
 8010560:	695b      	ldr	r3, [r3, #20]
 8010562:	4798      	blx	r3
 8010564:	4604      	mov	r4, r0
 8010566:	f8d8 0000 	ldr.w	r0, [r8]
 801056a:	6803      	ldr	r3, [r0, #0]
 801056c:	aa1d      	add	r2, sp, #116	; 0x74
 801056e:	689e      	ldr	r6, [r3, #8]
 8010570:	4621      	mov	r1, r4
 8010572:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010576:	47b0      	blx	r6
 8010578:	901c      	str	r0, [sp, #112]	; 0x70
 801057a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801057e:	429c      	cmp	r4, r3
 8010580:	f000 80e9 	beq.w	8010756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010584:	f242 030b 	movw	r3, #8203	; 0x200b
 8010588:	429c      	cmp	r4, r3
 801058a:	f000 80e4 	beq.w	8010756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801058e:	2c00      	cmp	r4, #0
 8010590:	f000 80f6 	beq.w	8010780 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010594:	2c0a      	cmp	r4, #10
 8010596:	d060      	beq.n	801065a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010598:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801059a:	b36a      	cbz	r2, 80105f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801059c:	8894      	ldrh	r4, [r2, #4]
 801059e:	f1bb 0f00 	cmp.w	fp, #0
 80105a2:	d03b      	beq.n	801061c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80105a4:	f892 900d 	ldrb.w	r9, [r2, #13]
 80105a8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80105ac:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80105b0:	f892 900a 	ldrb.w	r9, [r2, #10]
 80105b4:	f1bb 0f01 	cmp.w	fp, #1
 80105b8:	ea49 0903 	orr.w	r9, r9, r3
 80105bc:	d134      	bne.n	8010628 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80105be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80105c0:	eba5 0509 	sub.w	r5, r5, r9
 80105c4:	2b00      	cmp	r3, #0
 80105c6:	d14f      	bne.n	8010668 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80105c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80105ca:	eb09 0305 	add.w	r3, r9, r5
 80105ce:	4413      	add	r3, r2
 80105d0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80105d2:	f9b2 2000 	ldrsh.w	r2, [r2]
 80105d6:	4293      	cmp	r3, r2
 80105d8:	da51      	bge.n	801067e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80105da:	e038      	b.n	801064e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80105dc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80105de:	e79a      	b.n	8010516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80105e0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80105e4:	9301      	str	r3, [sp, #4]
 80105e6:	ab1d      	add	r3, sp, #116	; 0x74
 80105e8:	9300      	str	r3, [sp, #0]
 80105ea:	4659      	mov	r1, fp
 80105ec:	ab1c      	add	r3, sp, #112	; 0x70
 80105ee:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80105f0:	f002 fee3 	bl	80133ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80105f4:	4604      	mov	r4, r0
 80105f6:	e7c0      	b.n	801057a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80105f8:	f8d8 0000 	ldr.w	r0, [r8]
 80105fc:	6803      	ldr	r3, [r0, #0]
 80105fe:	691b      	ldr	r3, [r3, #16]
 8010600:	4798      	blx	r3
 8010602:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010606:	4298      	cmp	r0, r3
 8010608:	f000 80a5 	beq.w	8010756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801060c:	f242 030b 	movw	r3, #8203	; 0x200b
 8010610:	4298      	cmp	r0, r3
 8010612:	f000 80a0 	beq.w	8010756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010616:	f1bb 0f00 	cmp.w	fp, #0
 801061a:	d100      	bne.n	801061e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801061c:	444d      	add	r5, r9
 801061e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010620:	2a00      	cmp	r2, #0
 8010622:	d1bf      	bne.n	80105a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8010624:	4691      	mov	r9, r2
 8010626:	e096      	b.n	8010756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010628:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801062a:	2b00      	cmp	r3, #0
 801062c:	f000 80aa 	beq.w	8010784 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010630:	f1bb 0f00 	cmp.w	fp, #0
 8010634:	d118      	bne.n	8010668 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010636:	f8d8 0000 	ldr.w	r0, [r8]
 801063a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801063c:	6803      	ldr	r3, [r0, #0]
 801063e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010640:	4798      	blx	r3
 8010642:	4405      	add	r5, r0
 8010644:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010646:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010648:	1aeb      	subs	r3, r5, r3
 801064a:	4293      	cmp	r3, r2
 801064c:	dd17      	ble.n	801067e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801064e:	2c00      	cmp	r4, #0
 8010650:	f000 8096 	beq.w	8010780 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010654:	2c0a      	cmp	r4, #10
 8010656:	f040 8084 	bne.w	8010762 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801065a:	240a      	movs	r4, #10
 801065c:	fab4 f084 	clz	r0, r4
 8010660:	0940      	lsrs	r0, r0, #5
 8010662:	b01f      	add	sp, #124	; 0x7c
 8010664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010668:	f8d8 0000 	ldr.w	r0, [r8]
 801066c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801066e:	6803      	ldr	r3, [r0, #0]
 8010670:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010672:	4798      	blx	r3
 8010674:	f1bb 0f01 	cmp.w	fp, #1
 8010678:	eba5 0500 	sub.w	r5, r5, r0
 801067c:	d0a4      	beq.n	80105c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801067e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010680:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010682:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010686:	f9b3 6000 	ldrsh.w	r6, [r3]
 801068a:	7b43      	ldrb	r3, [r0, #13]
 801068c:	015b      	lsls	r3, r3, #5
 801068e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010692:	7983      	ldrb	r3, [r0, #6]
 8010694:	4429      	add	r1, r5
 8010696:	4313      	orrs	r3, r2
 8010698:	440b      	add	r3, r1
 801069a:	42b3      	cmp	r3, r6
 801069c:	db5b      	blt.n	8010756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801069e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80106a0:	4299      	cmp	r1, r3
 80106a2:	da58      	bge.n	8010756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80106a4:	f8d8 0000 	ldr.w	r0, [r8]
 80106a8:	6803      	ldr	r3, [r0, #0]
 80106aa:	42ae      	cmp	r6, r5
 80106ac:	bfc8      	it	gt
 80106ae:	1b76      	subgt	r6, r6, r5
 80106b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80106b2:	bfcc      	ite	gt
 80106b4:	b2b6      	uxthgt	r6, r6
 80106b6:	2600      	movle	r6, #0
 80106b8:	4798      	blx	r3
 80106ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80106bc:	7b5a      	ldrb	r2, [r3, #13]
 80106be:	00d1      	lsls	r1, r2, #3
 80106c0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 80106c4:	7a19      	ldrb	r1, [r3, #8]
 80106c6:	4339      	orrs	r1, r7
 80106c8:	0657      	lsls	r7, r2, #25
 80106ca:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80106cc:	bf44      	itt	mi
 80106ce:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80106d2:	b209      	sxthmi	r1, r1
 80106d4:	19c7      	adds	r7, r0, r7
 80106d6:	1a7f      	subs	r7, r7, r1
 80106d8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80106da:	b2bf      	uxth	r7, r7
 80106dc:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80106e0:	fa0f fa87 	sxth.w	sl, r7
 80106e4:	4551      	cmp	r1, sl
 80106e6:	dd3a      	ble.n	801075e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80106e8:	0112      	lsls	r2, r2, #4
 80106ea:	79d8      	ldrb	r0, [r3, #7]
 80106ec:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80106f0:	4302      	orrs	r2, r0
 80106f2:	4492      	add	sl, r2
 80106f4:	4551      	cmp	r1, sl
 80106f6:	dc2e      	bgt.n	8010756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80106f8:	1bcf      	subs	r7, r1, r7
 80106fa:	b2bf      	uxth	r7, r7
 80106fc:	468a      	mov	sl, r1
 80106fe:	9319      	str	r3, [sp, #100]	; 0x64
 8010700:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010702:	f8d8 0000 	ldr.w	r0, [r8]
 8010706:	681a      	ldr	r2, [r3, #0]
 8010708:	6801      	ldr	r1, [r0, #0]
 801070a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801070c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801070e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010710:	9218      	str	r2, [sp, #96]	; 0x60
 8010712:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8010714:	4788      	blx	r1
 8010716:	f898 1006 	ldrb.w	r1, [r8, #6]
 801071a:	910b      	str	r1, [sp, #44]	; 0x2c
 801071c:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010720:	910a      	str	r1, [sp, #40]	; 0x28
 8010722:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010726:	9109      	str	r1, [sp, #36]	; 0x24
 8010728:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801072a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801072e:	9305      	str	r3, [sp, #20]
 8010730:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010732:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010734:	9206      	str	r2, [sp, #24]
 8010736:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801073a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801073e:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010742:	442e      	add	r6, r5
 8010744:	b236      	sxth	r6, r6
 8010746:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010748:	9600      	str	r6, [sp, #0]
 801074a:	681a      	ldr	r2, [r3, #0]
 801074c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801074e:	685b      	ldr	r3, [r3, #4]
 8010750:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010752:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010754:	47b0      	blx	r6
 8010756:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010758:	3301      	adds	r3, #1
 801075a:	930e      	str	r3, [sp, #56]	; 0x38
 801075c:	e6e3      	b.n	8010526 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801075e:	2700      	movs	r7, #0
 8010760:	e7cd      	b.n	80106fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010762:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010764:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010766:	3501      	adds	r5, #1
 8010768:	429d      	cmp	r5, r3
 801076a:	f6bf af77 	bge.w	801065c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801076e:	4659      	mov	r1, fp
 8010770:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010772:	f7f4 fba9 	bl	8004ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010776:	4604      	mov	r4, r0
 8010778:	b110      	cbz	r0, 8010780 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801077a:	280a      	cmp	r0, #10
 801077c:	d1f2      	bne.n	8010764 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801077e:	e76c      	b.n	801065a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010780:	2400      	movs	r4, #0
 8010782:	e76b      	b.n	801065c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010784:	f1bb 0f00 	cmp.w	fp, #0
 8010788:	f43f af5c 	beq.w	8010644 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801078c:	e777      	b.n	801067e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801078e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801078e:	b530      	push	{r4, r5, lr}
 8010790:	8a44      	ldrh	r4, [r0, #18]
 8010792:	8ac5      	ldrh	r5, [r0, #22]
 8010794:	82c3      	strh	r3, [r0, #22]
 8010796:	442c      	add	r4, r5
 8010798:	1ae4      	subs	r4, r4, r3
 801079a:	8244      	strh	r4, [r0, #18]
 801079c:	8b03      	ldrh	r3, [r0, #24]
 801079e:	8a84      	ldrh	r4, [r0, #20]
 80107a0:	4422      	add	r2, r4
 80107a2:	440c      	add	r4, r1
 80107a4:	1a59      	subs	r1, r3, r1
 80107a6:	8342      	strh	r2, [r0, #26]
 80107a8:	8284      	strh	r4, [r0, #20]
 80107aa:	8301      	strh	r1, [r0, #24]
 80107ac:	bd30      	pop	{r4, r5, pc}

080107ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 80107ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107b2:	7a43      	ldrb	r3, [r0, #9]
 80107b4:	1eda      	subs	r2, r3, #3
 80107b6:	b087      	sub	sp, #28
 80107b8:	4604      	mov	r4, r0
 80107ba:	b2d2      	uxtb	r2, r2
 80107bc:	460f      	mov	r7, r1
 80107be:	2900      	cmp	r1, #0
 80107c0:	d036      	beq.n	8010830 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 80107c2:	2a01      	cmp	r2, #1
 80107c4:	d932      	bls.n	801082c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 80107c6:	1e58      	subs	r0, r3, #1
 80107c8:	f1d0 0b00 	rsbs	fp, r0, #0
 80107cc:	eb4b 0b00 	adc.w	fp, fp, r0
 80107d0:	1e99      	subs	r1, r3, #2
 80107d2:	424b      	negs	r3, r1
 80107d4:	414b      	adcs	r3, r1
 80107d6:	9303      	str	r3, [sp, #12]
 80107d8:	2300      	movs	r3, #0
 80107da:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80107de:	2500      	movs	r5, #0
 80107e0:	8265      	strh	r5, [r4, #18]
 80107e2:	82a5      	strh	r5, [r4, #20]
 80107e4:	46a9      	mov	r9, r5
 80107e6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80107ea:	2300      	movs	r3, #0
 80107ec:	9305      	str	r3, [sp, #20]
 80107ee:	8823      	ldrh	r3, [r4, #0]
 80107f0:	2b20      	cmp	r3, #32
 80107f2:	d02b      	beq.n	801084c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80107f4:	eba3 020a 	sub.w	r2, r3, sl
 80107f8:	4256      	negs	r6, r2
 80107fa:	4156      	adcs	r6, r2
 80107fc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010800:	4293      	cmp	r3, r2
 8010802:	d004      	beq.n	801080e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010804:	4553      	cmp	r3, sl
 8010806:	bf16      	itet	ne
 8010808:	4699      	movne	r9, r3
 801080a:	2601      	moveq	r6, #1
 801080c:	2600      	movne	r6, #0
 801080e:	ab05      	add	r3, sp, #20
 8010810:	68e2      	ldr	r2, [r4, #12]
 8010812:	7a21      	ldrb	r1, [r4, #8]
 8010814:	6860      	ldr	r0, [r4, #4]
 8010816:	f002 fd87 	bl	8013328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801081a:	8020      	strh	r0, [r4, #0]
 801081c:	b9c8      	cbnz	r0, 8010852 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 801081e:	8b22      	ldrh	r2, [r4, #24]
 8010820:	2300      	movs	r3, #0
 8010822:	4611      	mov	r1, r2
 8010824:	4620      	mov	r0, r4
 8010826:	f7ff ffb2 	bl	801078e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801082a:	e066      	b.n	80108fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801082c:	468b      	mov	fp, r1
 801082e:	e7cf      	b.n	80107d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8010830:	3b01      	subs	r3, #1
 8010832:	2a01      	cmp	r2, #1
 8010834:	bf8c      	ite	hi
 8010836:	2200      	movhi	r2, #0
 8010838:	2201      	movls	r2, #1
 801083a:	2b01      	cmp	r3, #1
 801083c:	bf8c      	ite	hi
 801083e:	2300      	movhi	r3, #0
 8010840:	2301      	movls	r3, #1
 8010842:	9202      	str	r2, [sp, #8]
 8010844:	9301      	str	r3, [sp, #4]
 8010846:	9103      	str	r1, [sp, #12]
 8010848:	468b      	mov	fp, r1
 801084a:	e7c8      	b.n	80107de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 801084c:	4699      	mov	r9, r3
 801084e:	2601      	movs	r6, #1
 8010850:	e7dd      	b.n	801080e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010852:	8ae3      	ldrh	r3, [r4, #22]
 8010854:	280a      	cmp	r0, #10
 8010856:	f103 0301 	add.w	r3, r3, #1
 801085a:	82e3      	strh	r3, [r4, #22]
 801085c:	d0df      	beq.n	801081e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801085e:	9a05      	ldr	r2, [sp, #20]
 8010860:	bb42      	cbnz	r2, 80108b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010862:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010866:	4298      	cmp	r0, r3
 8010868:	d001      	beq.n	801086e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801086a:	4550      	cmp	r0, sl
 801086c:	d1bd      	bne.n	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801086e:	8823      	ldrh	r3, [r4, #0]
 8010870:	8b21      	ldrh	r1, [r4, #24]
 8010872:	2b20      	cmp	r3, #32
 8010874:	d001      	beq.n	801087a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010876:	4553      	cmp	r3, sl
 8010878:	d131      	bne.n	80108de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801087a:	2e00      	cmp	r6, #0
 801087c:	bf0a      	itet	eq
 801087e:	460d      	moveq	r5, r1
 8010880:	4630      	movne	r0, r6
 8010882:	2001      	moveq	r0, #1
 8010884:	440a      	add	r2, r1
 8010886:	8aa3      	ldrh	r3, [r4, #20]
 8010888:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801088c:	b292      	uxth	r2, r2
 801088e:	8322      	strh	r2, [r4, #24]
 8010890:	4413      	add	r3, r2
 8010892:	2f00      	cmp	r7, #0
 8010894:	d03a      	beq.n	801090c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010896:	f1bb 0f00 	cmp.w	fp, #0
 801089a:	d102      	bne.n	80108a2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 801089c:	9903      	ldr	r1, [sp, #12]
 801089e:	b301      	cbz	r1, 80108e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 80108a0:	b1f8      	cbz	r0, 80108e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 80108a2:	8ba1      	ldrh	r1, [r4, #28]
 80108a4:	4419      	add	r1, r3
 80108a6:	458c      	cmp	ip, r1
 80108a8:	da2a      	bge.n	8010900 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 80108aa:	8a61      	ldrh	r1, [r4, #18]
 80108ac:	b341      	cbz	r1, 8010900 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 80108ae:	4563      	cmp	r3, ip
 80108b0:	dd9b      	ble.n	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80108b2:	e01c      	b.n	80108ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 80108b4:	8893      	ldrh	r3, [r2, #4]
 80108b6:	8023      	strh	r3, [r4, #0]
 80108b8:	f892 800d 	ldrb.w	r8, [r2, #13]
 80108bc:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80108c0:	f408 7080 	and.w	r0, r8, #256	; 0x100
 80108c4:	f892 800a 	ldrb.w	r8, [r2, #10]
 80108c8:	ea48 0800 	orr.w	r8, r8, r0
 80108cc:	68e0      	ldr	r0, [r4, #12]
 80108ce:	6803      	ldr	r3, [r0, #0]
 80108d0:	4649      	mov	r1, r9
 80108d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80108d4:	4798      	blx	r3
 80108d6:	eb08 0200 	add.w	r2, r8, r0
 80108da:	b292      	uxth	r2, r2
 80108dc:	e7c7      	b.n	801086e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80108de:	2000      	movs	r0, #0
 80108e0:	e7d0      	b.n	8010884 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80108e2:	4563      	cmp	r3, ip
 80108e4:	dd81      	ble.n	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80108e6:	8a63      	ldrh	r3, [r4, #18]
 80108e8:	2b00      	cmp	r3, #0
 80108ea:	f43f af7e 	beq.w	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80108ee:	2301      	movs	r3, #1
 80108f0:	77a3      	strb	r3, [r4, #30]
 80108f2:	8ba2      	ldrh	r2, [r4, #28]
 80108f4:	8b63      	ldrh	r3, [r4, #26]
 80108f6:	4413      	add	r3, r2
 80108f8:	8363      	strh	r3, [r4, #26]
 80108fa:	b007      	add	sp, #28
 80108fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010900:	2300      	movs	r3, #0
 8010902:	4611      	mov	r1, r2
 8010904:	4620      	mov	r0, r4
 8010906:	f7ff ff42 	bl	801078e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801090a:	e76e      	b.n	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801090c:	4563      	cmp	r3, ip
 801090e:	dd14      	ble.n	801093a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8010910:	9b02      	ldr	r3, [sp, #8]
 8010912:	b113      	cbz	r3, 801091a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8010914:	2301      	movs	r3, #1
 8010916:	460a      	mov	r2, r1
 8010918:	e783      	b.n	8010822 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 801091a:	9b01      	ldr	r3, [sp, #4]
 801091c:	2b00      	cmp	r3, #0
 801091e:	f43f af64 	beq.w	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010922:	2800      	cmp	r0, #0
 8010924:	f47f af61 	bne.w	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010928:	b116      	cbz	r6, 8010930 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 801092a:	2301      	movs	r3, #1
 801092c:	462a      	mov	r2, r5
 801092e:	e779      	b.n	8010824 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8010930:	8a63      	ldrh	r3, [r4, #18]
 8010932:	2b00      	cmp	r3, #0
 8010934:	f43f af59 	beq.w	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010938:	e7df      	b.n	80108fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801093a:	2800      	cmp	r0, #0
 801093c:	f47f af55 	bne.w	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010940:	2e00      	cmp	r6, #0
 8010942:	f43f af52 	beq.w	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010946:	2301      	movs	r3, #1
 8010948:	462a      	mov	r2, r5
 801094a:	e7db      	b.n	8010904 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0801094c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801094c:	b530      	push	{r4, r5, lr}
 801094e:	4605      	mov	r5, r0
 8010950:	b08b      	sub	sp, #44	; 0x2c
 8010952:	b191      	cbz	r1, 801097a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010954:	e9cd 3100 	strd	r3, r1, [sp]
 8010958:	4613      	mov	r3, r2
 801095a:	4601      	mov	r1, r0
 801095c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010960:	a802      	add	r0, sp, #8
 8010962:	f7ff fd09 	bl	8010378 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010966:	2401      	movs	r4, #1
 8010968:	2100      	movs	r1, #0
 801096a:	a802      	add	r0, sp, #8
 801096c:	f7ff ff1f 	bl	80107ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010970:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010974:	b163      	cbz	r3, 8010990 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010976:	3401      	adds	r4, #1
 8010978:	e7f6      	b.n	8010968 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801097a:	f002 fda3 	bl	80134c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801097e:	2401      	movs	r4, #1
 8010980:	280a      	cmp	r0, #10
 8010982:	4628      	mov	r0, r5
 8010984:	bf08      	it	eq
 8010986:	3401      	addeq	r4, #1
 8010988:	f002 fd9c 	bl	80134c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801098c:	2800      	cmp	r0, #0
 801098e:	d1f7      	bne.n	8010980 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010990:	b2a0      	uxth	r0, r4
 8010992:	b00b      	add	sp, #44	; 0x2c
 8010994:	bd30      	pop	{r4, r5, pc}

08010996 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010996:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801099a:	b0e5      	sub	sp, #404	; 0x194
 801099c:	4689      	mov	r9, r1
 801099e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 80109a2:	900a      	str	r0, [sp, #40]	; 0x28
 80109a4:	461c      	mov	r4, r3
 80109a6:	f1ba 0f00 	cmp.w	sl, #0
 80109aa:	f000 80b4 	beq.w	8010b16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80109ae:	681b      	ldr	r3, [r3, #0]
 80109b0:	2b00      	cmp	r3, #0
 80109b2:	f000 80b0 	beq.w	8010b16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80109b6:	7ba3      	ldrb	r3, [r4, #14]
 80109b8:	2b00      	cmp	r3, #0
 80109ba:	f000 80ac 	beq.w	8010b16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80109be:	6810      	ldr	r0, [r2, #0]
 80109c0:	6851      	ldr	r1, [r2, #4]
 80109c2:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 80109c6:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80109ca:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 80109ce:	4643      	mov	r3, r8
 80109d0:	c303      	stmia	r3!, {r0, r1}
 80109d2:	2500      	movs	r5, #0
 80109d4:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 80109d8:	79a2      	ldrb	r2, [r4, #6]
 80109da:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80109de:	a90f      	add	r1, sp, #60	; 0x3c
 80109e0:	4640      	mov	r0, r8
 80109e2:	950f      	str	r5, [sp, #60]	; 0x3c
 80109e4:	f7ff fd40 	bl	8010468 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80109e8:	a90f      	add	r1, sp, #60	; 0x3c
 80109ea:	4608      	mov	r0, r1
 80109ec:	79a2      	ldrb	r2, [r4, #6]
 80109ee:	af19      	add	r7, sp, #100	; 0x64
 80109f0:	f7ff fd3a 	bl	8010468 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80109f4:	4638      	mov	r0, r7
 80109f6:	f002 f93a 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 80109fa:	6820      	ldr	r0, [r4, #0]
 80109fc:	6803      	ldr	r3, [r0, #0]
 80109fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010a00:	4798      	blx	r3
 8010a02:	4606      	mov	r6, r0
 8010a04:	6820      	ldr	r0, [r4, #0]
 8010a06:	6803      	ldr	r3, [r0, #0]
 8010a08:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010a0a:	4798      	blx	r3
 8010a0c:	4633      	mov	r3, r6
 8010a0e:	9000      	str	r0, [sp, #0]
 8010a10:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010a12:	4651      	mov	r1, sl
 8010a14:	4638      	mov	r0, r7
 8010a16:	f002 f985 	bl	8012d24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010a1a:	6820      	ldr	r0, [r4, #0]
 8010a1c:	7923      	ldrb	r3, [r4, #4]
 8010a1e:	9308      	str	r3, [sp, #32]
 8010a20:	6803      	ldr	r3, [r0, #0]
 8010a22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010a24:	4798      	blx	r3
 8010a26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010a2a:	181e      	adds	r6, r3, r0
 8010a2c:	42ae      	cmp	r6, r5
 8010a2e:	dd06      	ble.n	8010a3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8010a30:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8010a34:	4282      	cmp	r2, r0
 8010a36:	bfa4      	itt	ge
 8010a38:	189d      	addge	r5, r3, r2
 8010a3a:	fb95 f5f6 	sdivge	r5, r5, r6
 8010a3e:	a832      	add	r0, sp, #200	; 0xc8
 8010a40:	f002 f915 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 8010a44:	7c23      	ldrb	r3, [r4, #16]
 8010a46:	b17b      	cbz	r3, 8010a68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010a48:	6820      	ldr	r0, [r4, #0]
 8010a4a:	6803      	ldr	r3, [r0, #0]
 8010a4c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010a4e:	4798      	blx	r3
 8010a50:	4683      	mov	fp, r0
 8010a52:	6820      	ldr	r0, [r4, #0]
 8010a54:	6803      	ldr	r3, [r0, #0]
 8010a56:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010a58:	4798      	blx	r3
 8010a5a:	465b      	mov	r3, fp
 8010a5c:	9000      	str	r0, [sp, #0]
 8010a5e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010a60:	4651      	mov	r1, sl
 8010a62:	a832      	add	r0, sp, #200	; 0xc8
 8010a64:	f002 f95e 	bl	8012d24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010a68:	7be1      	ldrb	r1, [r4, #15]
 8010a6a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010a6e:	7963      	ldrb	r3, [r4, #5]
 8010a70:	1a52      	subs	r2, r2, r1
 8010a72:	7c21      	ldrb	r1, [r4, #16]
 8010a74:	9101      	str	r1, [sp, #4]
 8010a76:	6821      	ldr	r1, [r4, #0]
 8010a78:	9100      	str	r1, [sp, #0]
 8010a7a:	b292      	uxth	r2, r2
 8010a7c:	a932      	add	r1, sp, #200	; 0xc8
 8010a7e:	a811      	add	r0, sp, #68	; 0x44
 8010a80:	f7ff fc7a 	bl	8010378 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010a84:	7c23      	ldrb	r3, [r4, #16]
 8010a86:	b9bb      	cbnz	r3, 8010ab8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010a88:	fa1f fa86 	uxth.w	sl, r6
 8010a8c:	2d00      	cmp	r5, #0
 8010a8e:	dd45      	ble.n	8010b1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010a90:	4638      	mov	r0, r7
 8010a92:	f002 fd17 	bl	80134c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010a96:	2800      	cmp	r0, #0
 8010a98:	d03d      	beq.n	8010b16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010a9a:	280a      	cmp	r0, #10
 8010a9c:	d1f6      	bne.n	8010a8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010a9e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010aa2:	4453      	add	r3, sl
 8010aa4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010aa8:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010aac:	eba3 030a 	sub.w	r3, r3, sl
 8010ab0:	3d01      	subs	r5, #1
 8010ab2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010ab6:	e7e9      	b.n	8010a8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010ab8:	0073      	lsls	r3, r6, #1
 8010aba:	9309      	str	r3, [sp, #36]	; 0x24
 8010abc:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8010ac0:	fa1f fa86 	uxth.w	sl, r6
 8010ac4:	2d00      	cmp	r5, #0
 8010ac6:	dd29      	ble.n	8010b1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010ac8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010acc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010ace:	428b      	cmp	r3, r1
 8010ad0:	bfd4      	ite	le
 8010ad2:	2100      	movle	r1, #0
 8010ad4:	2101      	movgt	r1, #1
 8010ad6:	a811      	add	r0, sp, #68	; 0x44
 8010ad8:	f7ff fe69 	bl	80107ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010adc:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8010ae0:	3b01      	subs	r3, #1
 8010ae2:	b29b      	uxth	r3, r3
 8010ae4:	455b      	cmp	r3, fp
 8010ae6:	930b      	str	r3, [sp, #44]	; 0x2c
 8010ae8:	d005      	beq.n	8010af6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8010aea:	7961      	ldrb	r1, [r4, #5]
 8010aec:	4638      	mov	r0, r7
 8010aee:	f7f4 f9eb 	bl	8004ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010af2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010af4:	e7f4      	b.n	8010ae0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8010af6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010afa:	4453      	add	r3, sl
 8010afc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010b00:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010b04:	eba3 030a 	sub.w	r3, r3, sl
 8010b08:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010b0c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010b10:	3d01      	subs	r5, #1
 8010b12:	2b00      	cmp	r3, #0
 8010b14:	d1d6      	bne.n	8010ac4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8010b16:	b065      	add	sp, #404	; 0x194
 8010b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b1c:	0075      	lsls	r5, r6, #1
 8010b1e:	f04f 0a00 	mov.w	sl, #0
 8010b22:	7c23      	ldrb	r3, [r4, #16]
 8010b24:	2b00      	cmp	r3, #0
 8010b26:	d066      	beq.n	8010bf6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8010b28:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010b2c:	428d      	cmp	r5, r1
 8010b2e:	bfd4      	ite	le
 8010b30:	2100      	movle	r1, #0
 8010b32:	2101      	movgt	r1, #1
 8010b34:	a811      	add	r0, sp, #68	; 0x44
 8010b36:	f7ff fe3a 	bl	80107ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010b3a:	9b08      	ldr	r3, [sp, #32]
 8010b3c:	2b00      	cmp	r3, #0
 8010b3e:	d055      	beq.n	8010bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010b40:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010b44:	2264      	movs	r2, #100	; 0x64
 8010b46:	4639      	mov	r1, r7
 8010b48:	a84b      	add	r0, sp, #300	; 0x12c
 8010b4a:	f010 f8f1 	bl	8020d30 <memcpy>
 8010b4e:	f1bb 0f00 	cmp.w	fp, #0
 8010b52:	d058      	beq.n	8010c06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010b54:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010b58:	7922      	ldrb	r2, [r4, #4]
 8010b5a:	2a01      	cmp	r2, #1
 8010b5c:	d13c      	bne.n	8010bd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8010b5e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010b62:	1ac0      	subs	r0, r0, r3
 8010b64:	2302      	movs	r3, #2
 8010b66:	fb90 f0f3 	sdiv	r0, r0, r3
 8010b6a:	b200      	sxth	r0, r0
 8010b6c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010b70:	4418      	add	r0, r3
 8010b72:	7c23      	ldrb	r3, [r4, #16]
 8010b74:	b200      	sxth	r0, r0
 8010b76:	2b00      	cmp	r3, #0
 8010b78:	d03a      	beq.n	8010bf0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8010b7a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8010b7e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010b82:	9000      	str	r0, [sp, #0]
 8010b84:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010b88:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8010b8c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8010b8e:	e9cd a703 	strd	sl, r7, [sp, #12]
 8010b92:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010b96:	464a      	mov	r2, r9
 8010b98:	2100      	movs	r1, #0
 8010b9a:	f7ff fc96 	bl	80104ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010b9e:	2800      	cmp	r0, #0
 8010ba0:	d1b9      	bne.n	8010b16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010ba2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010ba6:	b2b2      	uxth	r2, r6
 8010ba8:	4611      	mov	r1, r2
 8010baa:	4413      	add	r3, r2
 8010bac:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010bb0:	1a52      	subs	r2, r2, r1
 8010bb2:	7c21      	ldrb	r1, [r4, #16]
 8010bb4:	b21b      	sxth	r3, r3
 8010bb6:	b212      	sxth	r2, r2
 8010bb8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010bbc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8010bc0:	b109      	cbz	r1, 8010bc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8010bc2:	42b2      	cmp	r2, r6
 8010bc4:	dba7      	blt.n	8010b16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010bc6:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8010bca:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8010bce:	440a      	add	r2, r1
 8010bd0:	b212      	sxth	r2, r2
 8010bd2:	4293      	cmp	r3, r2
 8010bd4:	dda5      	ble.n	8010b22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010bd6:	e79e      	b.n	8010b16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010bd8:	2a02      	cmp	r2, #2
 8010bda:	d105      	bne.n	8010be8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010bdc:	7be2      	ldrb	r2, [r4, #15]
 8010bde:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8010be2:	1a80      	subs	r0, r0, r2
 8010be4:	1ac0      	subs	r0, r0, r3
 8010be6:	e7c0      	b.n	8010b6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010be8:	2000      	movs	r0, #0
 8010bea:	e7bf      	b.n	8010b6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010bec:	7be0      	ldrb	r0, [r4, #15]
 8010bee:	e7bd      	b.n	8010b6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010bf0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010bf4:	e7c3      	b.n	8010b7e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010bf6:	9b08      	ldr	r3, [sp, #32]
 8010bf8:	2b00      	cmp	r3, #0
 8010bfa:	d0f7      	beq.n	8010bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010bfc:	2264      	movs	r2, #100	; 0x64
 8010bfe:	4639      	mov	r1, r7
 8010c00:	a84b      	add	r0, sp, #300	; 0x12c
 8010c02:	f010 f895 	bl	8020d30 <memcpy>
 8010c06:	2300      	movs	r3, #0
 8010c08:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010c0c:	6821      	ldr	r1, [r4, #0]
 8010c0e:	a84b      	add	r0, sp, #300	; 0x12c
 8010c10:	f7ff fbee 	bl	80103f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010c14:	b203      	sxth	r3, r0
 8010c16:	e79f      	b.n	8010b58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08010c18 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010c18:	2b03      	cmp	r3, #3
 8010c1a:	d818      	bhi.n	8010c4e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010c1c:	e8df f003 	tbb	[pc, r3]
 8010c20:	130d0602 	.word	0x130d0602
 8010c24:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010c28:	1850      	adds	r0, r2, r1
 8010c2a:	4770      	bx	lr
 8010c2c:	8803      	ldrh	r3, [r0, #0]
 8010c2e:	8880      	ldrh	r0, [r0, #4]
 8010c30:	4418      	add	r0, r3
 8010c32:	b200      	sxth	r0, r0
 8010c34:	1a80      	subs	r0, r0, r2
 8010c36:	3801      	subs	r0, #1
 8010c38:	4770      	bx	lr
 8010c3a:	8803      	ldrh	r3, [r0, #0]
 8010c3c:	8880      	ldrh	r0, [r0, #4]
 8010c3e:	4418      	add	r0, r3
 8010c40:	b200      	sxth	r0, r0
 8010c42:	1a40      	subs	r0, r0, r1
 8010c44:	e7f7      	b.n	8010c36 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010c46:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010c4a:	4410      	add	r0, r2
 8010c4c:	4770      	bx	lr
 8010c4e:	2000      	movs	r0, #0
 8010c50:	4770      	bx	lr

08010c52 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010c52:	2b03      	cmp	r3, #3
 8010c54:	d817      	bhi.n	8010c86 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010c56:	e8df f003 	tbb	[pc, r3]
 8010c5a:	0602      	.short	0x0602
 8010c5c:	1009      	.short	0x1009
 8010c5e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010c62:	1850      	adds	r0, r2, r1
 8010c64:	4770      	bx	lr
 8010c66:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010c6a:	e7fa      	b.n	8010c62 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010c6c:	8843      	ldrh	r3, [r0, #2]
 8010c6e:	88c0      	ldrh	r0, [r0, #6]
 8010c70:	4418      	add	r0, r3
 8010c72:	b200      	sxth	r0, r0
 8010c74:	1a80      	subs	r0, r0, r2
 8010c76:	3801      	subs	r0, #1
 8010c78:	4770      	bx	lr
 8010c7a:	8843      	ldrh	r3, [r0, #2]
 8010c7c:	88c0      	ldrh	r0, [r0, #6]
 8010c7e:	4418      	add	r0, r3
 8010c80:	b200      	sxth	r0, r0
 8010c82:	1a40      	subs	r0, r0, r1
 8010c84:	e7f7      	b.n	8010c76 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010c86:	2000      	movs	r0, #0
 8010c88:	4770      	bx	lr
	...

08010c8c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010c8c:	4b01      	ldr	r3, [pc, #4]	; (8010c94 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010c8e:	2200      	movs	r2, #0
 8010c90:	601a      	str	r2, [r3, #0]
 8010c92:	4770      	bx	lr
 8010c94:	20015804 	.word	0x20015804

08010c98 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010c98:	4603      	mov	r3, r0
 8010c9a:	b1c8      	cbz	r0, 8010cd0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010c9c:	0c02      	lsrs	r2, r0, #16
 8010c9e:	0412      	lsls	r2, r2, #16
 8010ca0:	b9a2      	cbnz	r2, 8010ccc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010ca2:	0403      	lsls	r3, r0, #16
 8010ca4:	2010      	movs	r0, #16
 8010ca6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010caa:	bf04      	itt	eq
 8010cac:	021b      	lsleq	r3, r3, #8
 8010cae:	3008      	addeq	r0, #8
 8010cb0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010cb4:	bf04      	itt	eq
 8010cb6:	011b      	lsleq	r3, r3, #4
 8010cb8:	3004      	addeq	r0, #4
 8010cba:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010cbe:	bf04      	itt	eq
 8010cc0:	009b      	lsleq	r3, r3, #2
 8010cc2:	3002      	addeq	r0, #2
 8010cc4:	2b00      	cmp	r3, #0
 8010cc6:	db04      	blt.n	8010cd2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010cc8:	3001      	adds	r0, #1
 8010cca:	4770      	bx	lr
 8010ccc:	2000      	movs	r0, #0
 8010cce:	e7ea      	b.n	8010ca6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010cd0:	2020      	movs	r0, #32
 8010cd2:	4770      	bx	lr

08010cd4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cd8:	b087      	sub	sp, #28
 8010cda:	4681      	mov	r9, r0
 8010cdc:	4698      	mov	r8, r3
 8010cde:	4610      	mov	r0, r2
 8010ce0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010ce4:	460d      	mov	r5, r1
 8010ce6:	b981      	cbnz	r1, 8010d0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010ce8:	b14b      	cbz	r3, 8010cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010cea:	460b      	mov	r3, r1
 8010cec:	e9cd 4700 	strd	r4, r7, [sp]
 8010cf0:	464a      	mov	r2, r9
 8010cf2:	4641      	mov	r1, r8
 8010cf4:	f7ff ffee 	bl	8010cd4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010cf8:	b007      	add	sp, #28
 8010cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010cfe:	f04f 33ff 	mov.w	r3, #4294967295
 8010d02:	603b      	str	r3, [r7, #0]
 8010d04:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010d08:	e7f6      	b.n	8010cf8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010d0a:	fa32 fa01 	lsrs.w	sl, r2, r1
 8010d0e:	d107      	bne.n	8010d20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8010d10:	fb09 f602 	mul.w	r6, r9, r2
 8010d14:	fbb6 f0f4 	udiv	r0, r6, r4
 8010d18:	fb04 6610 	mls	r6, r4, r0, r6
 8010d1c:	603e      	str	r6, [r7, #0]
 8010d1e:	e7eb      	b.n	8010cf8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010d20:	2601      	movs	r6, #1
 8010d22:	408e      	lsls	r6, r1
 8010d24:	3e01      	subs	r6, #1
 8010d26:	4016      	ands	r6, r2
 8010d28:	fa09 fb01 	lsl.w	fp, r9, r1
 8010d2c:	4630      	mov	r0, r6
 8010d2e:	fbbb f3f4 	udiv	r3, fp, r4
 8010d32:	9302      	str	r3, [sp, #8]
 8010d34:	fb0a f303 	mul.w	r3, sl, r3
 8010d38:	9303      	str	r3, [sp, #12]
 8010d3a:	f7ff ffad 	bl	8010c98 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010d3e:	464a      	mov	r2, r9
 8010d40:	460b      	mov	r3, r1
 8010d42:	e9cd 4700 	strd	r4, r7, [sp]
 8010d46:	4601      	mov	r1, r0
 8010d48:	4630      	mov	r0, r6
 8010d4a:	f7ff ffc3 	bl	8010cd4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010d4e:	9b02      	ldr	r3, [sp, #8]
 8010d50:	fb04 bb13 	mls	fp, r4, r3, fp
 8010d54:	4606      	mov	r6, r0
 8010d56:	4658      	mov	r0, fp
 8010d58:	eb05 0108 	add.w	r1, r5, r8
 8010d5c:	f7ff ff9c 	bl	8010c98 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010d60:	ab05      	add	r3, sp, #20
 8010d62:	e9cd 4300 	strd	r4, r3, [sp]
 8010d66:	465a      	mov	r2, fp
 8010d68:	4603      	mov	r3, r0
 8010d6a:	4650      	mov	r0, sl
 8010d6c:	f7ff ffb2 	bl	8010cd4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010d70:	6839      	ldr	r1, [r7, #0]
 8010d72:	9a05      	ldr	r2, [sp, #20]
 8010d74:	9b03      	ldr	r3, [sp, #12]
 8010d76:	4411      	add	r1, r2
 8010d78:	fbb1 f2f4 	udiv	r2, r1, r4
 8010d7c:	18d3      	adds	r3, r2, r3
 8010d7e:	441e      	add	r6, r3
 8010d80:	fb04 1412 	mls	r4, r4, r2, r1
 8010d84:	4430      	add	r0, r6
 8010d86:	603c      	str	r4, [r7, #0]
 8010d88:	e7b6      	b.n	8010cf8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010d8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010d8a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010d8e:	b085      	sub	sp, #20
 8010d90:	f1b0 0900 	subs.w	r9, r0, #0
 8010d94:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010d96:	461d      	mov	r5, r3
 8010d98:	bfbf      	itttt	lt
 8010d9a:	6823      	ldrlt	r3, [r4, #0]
 8010d9c:	425b      	neglt	r3, r3
 8010d9e:	f1c9 0900 	rsblt	r9, r9, #0
 8010da2:	6023      	strlt	r3, [r4, #0]
 8010da4:	bfb4      	ite	lt
 8010da6:	f04f 36ff 	movlt.w	r6, #4294967295
 8010daa:	2601      	movge	r6, #1
 8010dac:	2a00      	cmp	r2, #0
 8010dae:	4617      	mov	r7, r2
 8010db0:	da04      	bge.n	8010dbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010db2:	6823      	ldr	r3, [r4, #0]
 8010db4:	425b      	negs	r3, r3
 8010db6:	4257      	negs	r7, r2
 8010db8:	4276      	negs	r6, r6
 8010dba:	6023      	str	r3, [r4, #0]
 8010dbc:	2d00      	cmp	r5, #0
 8010dbe:	4638      	mov	r0, r7
 8010dc0:	bfba      	itte	lt
 8010dc2:	426d      	neglt	r5, r5
 8010dc4:	f04f 38ff 	movlt.w	r8, #4294967295
 8010dc8:	f04f 0801 	movge.w	r8, #1
 8010dcc:	f7ff ff64 	bl	8010c98 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010dd0:	ab03      	add	r3, sp, #12
 8010dd2:	e9cd 5300 	strd	r5, r3, [sp]
 8010dd6:	463a      	mov	r2, r7
 8010dd8:	4603      	mov	r3, r0
 8010dda:	4648      	mov	r0, r9
 8010ddc:	f7ff ff7a 	bl	8010cd4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010de0:	6823      	ldr	r3, [r4, #0]
 8010de2:	9a03      	ldr	r2, [sp, #12]
 8010de4:	4546      	cmp	r6, r8
 8010de6:	441a      	add	r2, r3
 8010de8:	fb92 f3f5 	sdiv	r3, r2, r5
 8010dec:	4418      	add	r0, r3
 8010dee:	bf18      	it	ne
 8010df0:	4240      	negne	r0, r0
 8010df2:	fb05 2313 	mls	r3, r5, r3, r2
 8010df6:	1c72      	adds	r2, r6, #1
 8010df8:	6023      	str	r3, [r4, #0]
 8010dfa:	d105      	bne.n	8010e08 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010dfc:	2b00      	cmp	r3, #0
 8010dfe:	f1c3 0200 	rsb	r2, r3, #0
 8010e02:	db0b      	blt.n	8010e1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010e04:	6022      	str	r2, [r4, #0]
 8010e06:	e006      	b.n	8010e16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010e08:	2e01      	cmp	r6, #1
 8010e0a:	d104      	bne.n	8010e16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010e0c:	2b00      	cmp	r3, #0
 8010e0e:	da02      	bge.n	8010e16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010e10:	442b      	add	r3, r5
 8010e12:	3801      	subs	r0, #1
 8010e14:	6023      	str	r3, [r4, #0]
 8010e16:	b005      	add	sp, #20
 8010e18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010e1c:	3801      	subs	r0, #1
 8010e1e:	1b52      	subs	r2, r2, r5
 8010e20:	e7f0      	b.n	8010e04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010e24 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010e24:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010e28:	4c1c      	ldr	r4, [pc, #112]	; (8010e9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010e2a:	6807      	ldr	r7, [r0, #0]
 8010e2c:	69a3      	ldr	r3, [r4, #24]
 8010e2e:	4605      	mov	r5, r0
 8010e30:	b92b      	cbnz	r3, 8010e3e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010e32:	6840      	ldr	r0, [r0, #4]
 8010e34:	e9c5 7000 	strd	r7, r0, [r5]
 8010e38:	b004      	add	sp, #16
 8010e3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010e3e:	68a2      	ldr	r2, [r4, #8]
 8010e40:	6820      	ldr	r0, [r4, #0]
 8010e42:	ae04      	add	r6, sp, #16
 8010e44:	f04f 0802 	mov.w	r8, #2
 8010e48:	fb93 f1f8 	sdiv	r1, r3, r8
 8010e4c:	440a      	add	r2, r1
 8010e4e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010e52:	69e1      	ldr	r1, [r4, #28]
 8010e54:	9600      	str	r6, [sp, #0]
 8010e56:	463a      	mov	r2, r7
 8010e58:	f7ff ff97 	bl	8010d8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010e5c:	69a3      	ldr	r3, [r4, #24]
 8010e5e:	686a      	ldr	r2, [r5, #4]
 8010e60:	6a21      	ldr	r1, [r4, #32]
 8010e62:	9600      	str	r6, [sp, #0]
 8010e64:	4607      	mov	r7, r0
 8010e66:	6860      	ldr	r0, [r4, #4]
 8010e68:	f7ff ff8f 	bl	8010d8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010e6c:	6962      	ldr	r2, [r4, #20]
 8010e6e:	69a3      	ldr	r3, [r4, #24]
 8010e70:	fb93 f8f8 	sdiv	r8, r3, r8
 8010e74:	4442      	add	r2, r8
 8010e76:	9203      	str	r2, [sp, #12]
 8010e78:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010e7a:	682a      	ldr	r2, [r5, #0]
 8010e7c:	9600      	str	r6, [sp, #0]
 8010e7e:	4407      	add	r7, r0
 8010e80:	68e0      	ldr	r0, [r4, #12]
 8010e82:	f7ff ff82 	bl	8010d8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010e86:	9600      	str	r6, [sp, #0]
 8010e88:	4680      	mov	r8, r0
 8010e8a:	69a3      	ldr	r3, [r4, #24]
 8010e8c:	686a      	ldr	r2, [r5, #4]
 8010e8e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010e90:	6920      	ldr	r0, [r4, #16]
 8010e92:	f7ff ff7a 	bl	8010d8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010e96:	4440      	add	r0, r8
 8010e98:	e7cc      	b.n	8010e34 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010e9a:	bf00      	nop
 8010e9c:	20015808 	.word	0x20015808

08010ea0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010ea0:	4b07      	ldr	r3, [pc, #28]	; (8010ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010ea2:	781b      	ldrb	r3, [r3, #0]
 8010ea4:	2b01      	cmp	r3, #1
 8010ea6:	d109      	bne.n	8010ebc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010ea8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010eac:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010eb0:	8003      	strh	r3, [r0, #0]
 8010eb2:	4b04      	ldr	r3, [pc, #16]	; (8010ec4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010eb4:	881b      	ldrh	r3, [r3, #0]
 8010eb6:	3b01      	subs	r3, #1
 8010eb8:	1a9b      	subs	r3, r3, r2
 8010eba:	800b      	strh	r3, [r1, #0]
 8010ebc:	4770      	bx	lr
 8010ebe:	bf00      	nop
 8010ec0:	200157ec 	.word	0x200157ec
 8010ec4:	200157e8 	.word	0x200157e8

08010ec8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010ec8:	b510      	push	{r4, lr}
 8010eca:	4b07      	ldr	r3, [pc, #28]	; (8010ee8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010ecc:	781b      	ldrb	r3, [r3, #0]
 8010ece:	2b01      	cmp	r3, #1
 8010ed0:	d108      	bne.n	8010ee4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010ed2:	4b06      	ldr	r3, [pc, #24]	; (8010eec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010ed4:	880c      	ldrh	r4, [r1, #0]
 8010ed6:	881b      	ldrh	r3, [r3, #0]
 8010ed8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010edc:	3b01      	subs	r3, #1
 8010ede:	1b1b      	subs	r3, r3, r4
 8010ee0:	8003      	strh	r3, [r0, #0]
 8010ee2:	800a      	strh	r2, [r1, #0]
 8010ee4:	bd10      	pop	{r4, pc}
 8010ee6:	bf00      	nop
 8010ee8:	200157ec 	.word	0x200157ec
 8010eec:	200157e8 	.word	0x200157e8

08010ef0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010ef0:	b510      	push	{r4, lr}
 8010ef2:	4b0a      	ldr	r3, [pc, #40]	; (8010f1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010ef4:	781b      	ldrb	r3, [r3, #0]
 8010ef6:	2b01      	cmp	r3, #1
 8010ef8:	d10e      	bne.n	8010f18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010efa:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010efe:	8843      	ldrh	r3, [r0, #2]
 8010f00:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010f04:	8044      	strh	r4, [r0, #2]
 8010f06:	18ca      	adds	r2, r1, r3
 8010f08:	4b05      	ldr	r3, [pc, #20]	; (8010f20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010f0a:	881b      	ldrh	r3, [r3, #0]
 8010f0c:	1a9b      	subs	r3, r3, r2
 8010f0e:	8003      	strh	r3, [r0, #0]
 8010f10:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010f14:	80c3      	strh	r3, [r0, #6]
 8010f16:	8081      	strh	r1, [r0, #4]
 8010f18:	bd10      	pop	{r4, pc}
 8010f1a:	bf00      	nop
 8010f1c:	200157ec 	.word	0x200157ec
 8010f20:	200157e8 	.word	0x200157e8

08010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010f24:	4b08      	ldr	r3, [pc, #32]	; (8010f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010f26:	781b      	ldrb	r3, [r3, #0]
 8010f28:	2b01      	cmp	r3, #1
 8010f2a:	d10c      	bne.n	8010f46 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010f2c:	8803      	ldrh	r3, [r0, #0]
 8010f2e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010f32:	8842      	ldrh	r2, [r0, #2]
 8010f34:	8002      	strh	r2, [r0, #0]
 8010f36:	185a      	adds	r2, r3, r1
 8010f38:	4b04      	ldr	r3, [pc, #16]	; (8010f4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010f3a:	881b      	ldrh	r3, [r3, #0]
 8010f3c:	1a9b      	subs	r3, r3, r2
 8010f3e:	8043      	strh	r3, [r0, #2]
 8010f40:	88c3      	ldrh	r3, [r0, #6]
 8010f42:	8083      	strh	r3, [r0, #4]
 8010f44:	80c1      	strh	r1, [r0, #6]
 8010f46:	4770      	bx	lr
 8010f48:	200157ec 	.word	0x200157ec
 8010f4c:	200157e8 	.word	0x200157e8

08010f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010f50:	b510      	push	{r4, lr}
 8010f52:	4b07      	ldr	r3, [pc, #28]	; (8010f70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010f54:	781b      	ldrb	r3, [r3, #0]
 8010f56:	2b01      	cmp	r3, #1
 8010f58:	d108      	bne.n	8010f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010f5a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010f5e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010f62:	8003      	strh	r3, [r0, #0]
 8010f64:	8893      	ldrh	r3, [r2, #4]
 8010f66:	3b01      	subs	r3, #1
 8010f68:	1b1b      	subs	r3, r3, r4
 8010f6a:	800b      	strh	r3, [r1, #0]
 8010f6c:	bd10      	pop	{r4, pc}
 8010f6e:	bf00      	nop
 8010f70:	200157ec 	.word	0x200157ec

08010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010f74:	b510      	push	{r4, lr}
 8010f76:	4b0a      	ldr	r3, [pc, #40]	; (8010fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010f78:	781b      	ldrb	r3, [r3, #0]
 8010f7a:	2b01      	cmp	r3, #1
 8010f7c:	460a      	mov	r2, r1
 8010f7e:	d10d      	bne.n	8010f9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010f80:	8881      	ldrh	r1, [r0, #4]
 8010f82:	8803      	ldrh	r3, [r0, #0]
 8010f84:	440b      	add	r3, r1
 8010f86:	4601      	mov	r1, r0
 8010f88:	3b01      	subs	r3, #1
 8010f8a:	f821 3b02 	strh.w	r3, [r1], #2
 8010f8e:	f7ff ffdf 	bl	8010f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010f92:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010f96:	88c2      	ldrh	r2, [r0, #6]
 8010f98:	8082      	strh	r2, [r0, #4]
 8010f9a:	80c3      	strh	r3, [r0, #6]
 8010f9c:	bd10      	pop	{r4, pc}
 8010f9e:	bf00      	nop
 8010fa0:	200157ec 	.word	0x200157ec

08010fa4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010fa4:	b570      	push	{r4, r5, r6, lr}
 8010fa6:	4c0b      	ldr	r4, [pc, #44]	; (8010fd4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010fa8:	2300      	movs	r3, #0
 8010faa:	4605      	mov	r5, r0
 8010fac:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010fb0:	6820      	ldr	r0, [r4, #0]
 8010fb2:	460e      	mov	r6, r1
 8010fb4:	b110      	cbz	r0, 8010fbc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010fb6:	6803      	ldr	r3, [r0, #0]
 8010fb8:	695b      	ldr	r3, [r3, #20]
 8010fba:	4798      	blx	r3
 8010fbc:	6026      	str	r6, [r4, #0]
 8010fbe:	6833      	ldr	r3, [r6, #0]
 8010fc0:	4630      	mov	r0, r6
 8010fc2:	68db      	ldr	r3, [r3, #12]
 8010fc4:	4798      	blx	r3
 8010fc6:	682b      	ldr	r3, [r5, #0]
 8010fc8:	4628      	mov	r0, r5
 8010fca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010fcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fd0:	4718      	bx	r3
 8010fd2:	bf00      	nop
 8010fd4:	20015838 	.word	0x20015838

08010fd8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010fd8:	4b06      	ldr	r3, [pc, #24]	; (8010ff4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010fda:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010fde:	4b06      	ldr	r3, [pc, #24]	; (8010ff8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010fe0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010fe4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010fe8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010fec:	2100      	movs	r1, #0
 8010fee:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010ff2:	4770      	bx	lr
 8010ff4:	200157e8 	.word	0x200157e8
 8010ff8:	200157ea 	.word	0x200157ea

08010ffc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010ffc:	4b03      	ldr	r3, [pc, #12]	; (801100c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010ffe:	6818      	ldr	r0, [r3, #0]
 8011000:	b110      	cbz	r0, 8011008 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8011002:	6803      	ldr	r3, [r0, #0]
 8011004:	699b      	ldr	r3, [r3, #24]
 8011006:	4718      	bx	r3
 8011008:	4770      	bx	lr
 801100a:	bf00      	nop
 801100c:	20015838 	.word	0x20015838

08011010 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8011010:	4770      	bx	lr
	...

08011014 <_ZN8touchgfx11Application4drawEv>:
 8011014:	b507      	push	{r0, r1, r2, lr}
 8011016:	4b09      	ldr	r3, [pc, #36]	; (801103c <_ZN8touchgfx11Application4drawEv+0x28>)
 8011018:	f9b3 2000 	ldrsh.w	r2, [r3]
 801101c:	4b08      	ldr	r3, [pc, #32]	; (8011040 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801101e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011022:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011026:	f8ad 3006 	strh.w	r3, [sp, #6]
 801102a:	6803      	ldr	r3, [r0, #0]
 801102c:	2100      	movs	r1, #0
 801102e:	9100      	str	r1, [sp, #0]
 8011030:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011032:	4669      	mov	r1, sp
 8011034:	4798      	blx	r3
 8011036:	b003      	add	sp, #12
 8011038:	f85d fb04 	ldr.w	pc, [sp], #4
 801103c:	200157e8 	.word	0x200157e8
 8011040:	200157ea 	.word	0x200157ea

08011044 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8011044:	4b03      	ldr	r3, [pc, #12]	; (8011054 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8011046:	6818      	ldr	r0, [r3, #0]
 8011048:	b110      	cbz	r0, 8011050 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801104a:	6803      	ldr	r3, [r0, #0]
 801104c:	69db      	ldr	r3, [r3, #28]
 801104e:	4718      	bx	r3
 8011050:	4770      	bx	lr
 8011052:	bf00      	nop
 8011054:	20015838 	.word	0x20015838

08011058 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8011058:	4b03      	ldr	r3, [pc, #12]	; (8011068 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801105a:	6818      	ldr	r0, [r3, #0]
 801105c:	b110      	cbz	r0, 8011064 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801105e:	6803      	ldr	r3, [r0, #0]
 8011060:	6a1b      	ldr	r3, [r3, #32]
 8011062:	4718      	bx	r3
 8011064:	4770      	bx	lr
 8011066:	bf00      	nop
 8011068:	20015838 	.word	0x20015838

0801106c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801106c:	2300      	movs	r3, #0
 801106e:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8011072:	4770      	bx	lr

08011074 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8011074:	4b03      	ldr	r3, [pc, #12]	; (8011084 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8011076:	6818      	ldr	r0, [r3, #0]
 8011078:	b110      	cbz	r0, 8011080 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801107a:	6803      	ldr	r3, [r0, #0]
 801107c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801107e:	4718      	bx	r3
 8011080:	4770      	bx	lr
 8011082:	bf00      	nop
 8011084:	20015838 	.word	0x20015838

08011088 <_ZN8touchgfx11Application15handleTickEventEv>:
 8011088:	b570      	push	{r4, r5, r6, lr}
 801108a:	4d32      	ldr	r5, [pc, #200]	; (8011154 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 801108c:	4604      	mov	r4, r0
 801108e:	6828      	ldr	r0, [r5, #0]
 8011090:	b140      	cbz	r0, 80110a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011092:	7a03      	ldrb	r3, [r0, #8]
 8011094:	b933      	cbnz	r3, 80110a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011096:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801109a:	6803      	ldr	r3, [r0, #0]
 801109c:	689b      	ldr	r3, [r3, #8]
 801109e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80110a2:	4718      	bx	r3
 80110a4:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 80110a8:	b97b      	cbnz	r3, 80110ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80110aa:	b170      	cbz	r0, 80110ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80110ac:	7a03      	ldrb	r3, [r0, #8]
 80110ae:	b163      	cbz	r3, 80110ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80110b0:	4b29      	ldr	r3, [pc, #164]	; (8011158 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 80110b2:	6818      	ldr	r0, [r3, #0]
 80110b4:	b110      	cbz	r0, 80110bc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80110b6:	6803      	ldr	r3, [r0, #0]
 80110b8:	691b      	ldr	r3, [r3, #16]
 80110ba:	4798      	blx	r3
 80110bc:	6828      	ldr	r0, [r5, #0]
 80110be:	6803      	ldr	r3, [r0, #0]
 80110c0:	68db      	ldr	r3, [r3, #12]
 80110c2:	4798      	blx	r3
 80110c4:	2301      	movs	r3, #1
 80110c6:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 80110ca:	2500      	movs	r5, #0
 80110cc:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 80110d0:	42a8      	cmp	r0, r5
 80110d2:	dd0c      	ble.n	80110ee <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 80110d4:	1963      	adds	r3, r4, r5
 80110d6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 80110da:	b132      	cbz	r2, 80110ea <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 80110dc:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80110e0:	4413      	add	r3, r2
 80110e2:	6858      	ldr	r0, [r3, #4]
 80110e4:	6803      	ldr	r3, [r0, #0]
 80110e6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80110e8:	4798      	blx	r3
 80110ea:	3501      	adds	r5, #1
 80110ec:	e7ee      	b.n	80110cc <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80110ee:	2300      	movs	r3, #0
 80110f0:	461a      	mov	r2, r3
 80110f2:	4298      	cmp	r0, r3
 80110f4:	d015      	beq.n	8011122 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 80110f6:	18e1      	adds	r1, r4, r3
 80110f8:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 80110fc:	b16d      	cbz	r5, 801111a <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 80110fe:	429a      	cmp	r2, r3
 8011100:	d00a      	beq.n	8011118 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8011102:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8011106:	4431      	add	r1, r6
 8011108:	684e      	ldr	r6, [r1, #4]
 801110a:	b291      	uxth	r1, r2
 801110c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8011110:	604e      	str	r6, [r1, #4]
 8011112:	18a1      	adds	r1, r4, r2
 8011114:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8011118:	3201      	adds	r2, #1
 801111a:	3301      	adds	r3, #1
 801111c:	e7e9      	b.n	80110f2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 801111e:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8011122:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8011126:	4295      	cmp	r5, r2
 8011128:	dd0d      	ble.n	8011146 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 801112a:	1e6b      	subs	r3, r5, #1
 801112c:	b29b      	uxth	r3, r3
 801112e:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8011132:	4618      	mov	r0, r3
 8011134:	3104      	adds	r1, #4
 8011136:	4285      	cmp	r5, r0
 8011138:	ddf1      	ble.n	801111e <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 801113a:	f851 6f04 	ldr.w	r6, [r1, #4]!
 801113e:	f841 6c04 	str.w	r6, [r1, #-4]
 8011142:	3001      	adds	r0, #1
 8011144:	e7f7      	b.n	8011136 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8011146:	4b04      	ldr	r3, [pc, #16]	; (8011158 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8011148:	6818      	ldr	r0, [r3, #0]
 801114a:	b110      	cbz	r0, 8011152 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 801114c:	6803      	ldr	r3, [r0, #0]
 801114e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011150:	e7a5      	b.n	801109e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8011152:	bd70      	pop	{r4, r5, r6, pc}
 8011154:	2001583c 	.word	0x2001583c
 8011158:	20015838 	.word	0x20015838

0801115c <_ZN8touchgfx11ApplicationD1Ev>:
 801115c:	4770      	bx	lr

0801115e <_ZN8touchgfx11ApplicationD0Ev>:
 801115e:	b510      	push	{r4, lr}
 8011160:	f44f 719c 	mov.w	r1, #312	; 0x138
 8011164:	4604      	mov	r4, r0
 8011166:	f00f fbb7 	bl	80208d8 <_ZdlPvj>
 801116a:	4620      	mov	r0, r4
 801116c:	bd10      	pop	{r4, pc}

0801116e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801116e:	b510      	push	{r4, lr}
 8011170:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011174:	888a      	ldrh	r2, [r1, #4]
 8011176:	f9b0 3000 	ldrsh.w	r3, [r0]
 801117a:	4422      	add	r2, r4
 801117c:	b212      	sxth	r2, r2
 801117e:	4293      	cmp	r3, r2
 8011180:	da15      	bge.n	80111ae <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011182:	8882      	ldrh	r2, [r0, #4]
 8011184:	4413      	add	r3, r2
 8011186:	b21b      	sxth	r3, r3
 8011188:	429c      	cmp	r4, r3
 801118a:	da10      	bge.n	80111ae <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801118c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8011190:	88c9      	ldrh	r1, [r1, #6]
 8011192:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011196:	4419      	add	r1, r3
 8011198:	b209      	sxth	r1, r1
 801119a:	428a      	cmp	r2, r1
 801119c:	da07      	bge.n	80111ae <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801119e:	88c0      	ldrh	r0, [r0, #6]
 80111a0:	4410      	add	r0, r2
 80111a2:	b200      	sxth	r0, r0
 80111a4:	4283      	cmp	r3, r0
 80111a6:	bfac      	ite	ge
 80111a8:	2000      	movge	r0, #0
 80111aa:	2001      	movlt	r0, #1
 80111ac:	bd10      	pop	{r4, pc}
 80111ae:	2000      	movs	r0, #0
 80111b0:	e7fc      	b.n	80111ac <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080111b2 <_ZN8touchgfx4Rect10restrictToEss>:
 80111b2:	f9b0 3000 	ldrsh.w	r3, [r0]
 80111b6:	2b00      	cmp	r3, #0
 80111b8:	b510      	push	{r4, lr}
 80111ba:	da04      	bge.n	80111c6 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80111bc:	8884      	ldrh	r4, [r0, #4]
 80111be:	4423      	add	r3, r4
 80111c0:	8083      	strh	r3, [r0, #4]
 80111c2:	2300      	movs	r3, #0
 80111c4:	8003      	strh	r3, [r0, #0]
 80111c6:	f9b0 4000 	ldrsh.w	r4, [r0]
 80111ca:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80111ce:	1b09      	subs	r1, r1, r4
 80111d0:	428b      	cmp	r3, r1
 80111d2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80111d6:	bfc8      	it	gt
 80111d8:	8081      	strhgt	r1, [r0, #4]
 80111da:	2b00      	cmp	r3, #0
 80111dc:	da04      	bge.n	80111e8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80111de:	88c1      	ldrh	r1, [r0, #6]
 80111e0:	440b      	add	r3, r1
 80111e2:	80c3      	strh	r3, [r0, #6]
 80111e4:	2300      	movs	r3, #0
 80111e6:	8043      	strh	r3, [r0, #2]
 80111e8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80111ec:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80111f0:	1a52      	subs	r2, r2, r1
 80111f2:	4293      	cmp	r3, r2
 80111f4:	bfc8      	it	gt
 80111f6:	80c2      	strhgt	r2, [r0, #6]
 80111f8:	bd10      	pop	{r4, pc}
	...

080111fc <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80111fc:	b510      	push	{r4, lr}
 80111fe:	4b10      	ldr	r3, [pc, #64]	; (8011240 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8011200:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011204:	4b0f      	ldr	r3, [pc, #60]	; (8011244 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8011206:	460c      	mov	r4, r1
 8011208:	4620      	mov	r0, r4
 801120a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801120e:	f7ff ffd0 	bl	80111b2 <_ZN8touchgfx4Rect10restrictToEss>
 8011212:	4b0d      	ldr	r3, [pc, #52]	; (8011248 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011214:	6818      	ldr	r0, [r3, #0]
 8011216:	b190      	cbz	r0, 801123e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011218:	6803      	ldr	r3, [r0, #0]
 801121a:	4621      	mov	r1, r4
 801121c:	689b      	ldr	r3, [r3, #8]
 801121e:	4798      	blx	r3
 8011220:	4b0a      	ldr	r3, [pc, #40]	; (801124c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8011222:	6818      	ldr	r0, [r3, #0]
 8011224:	b118      	cbz	r0, 801122e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011226:	6803      	ldr	r3, [r0, #0]
 8011228:	4621      	mov	r1, r4
 801122a:	689b      	ldr	r3, [r3, #8]
 801122c:	4798      	blx	r3
 801122e:	4b08      	ldr	r3, [pc, #32]	; (8011250 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011230:	6818      	ldr	r0, [r3, #0]
 8011232:	6803      	ldr	r3, [r0, #0]
 8011234:	4621      	mov	r1, r4
 8011236:	69db      	ldr	r3, [r3, #28]
 8011238:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801123c:	4718      	bx	r3
 801123e:	bd10      	pop	{r4, pc}
 8011240:	200157ea 	.word	0x200157ea
 8011244:	200157e8 	.word	0x200157e8
 8011248:	20015838 	.word	0x20015838
 801124c:	20015834 	.word	0x20015834
 8011250:	200157f4 	.word	0x200157f4

08011254 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011254:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011256:	4606      	mov	r6, r0
 8011258:	4608      	mov	r0, r1
 801125a:	460f      	mov	r7, r1
 801125c:	f7f9 fed1 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011260:	b9e8      	cbnz	r0, 801129e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011262:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011266:	f9b6 4000 	ldrsh.w	r4, [r6]
 801126a:	42a5      	cmp	r5, r4
 801126c:	db17      	blt.n	801129e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801126e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011272:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011276:	429a      	cmp	r2, r3
 8011278:	db11      	blt.n	801129e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801127a:	88b9      	ldrh	r1, [r7, #4]
 801127c:	440d      	add	r5, r1
 801127e:	88b1      	ldrh	r1, [r6, #4]
 8011280:	440c      	add	r4, r1
 8011282:	b22d      	sxth	r5, r5
 8011284:	b224      	sxth	r4, r4
 8011286:	42a5      	cmp	r5, r4
 8011288:	dc09      	bgt.n	801129e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801128a:	88f8      	ldrh	r0, [r7, #6]
 801128c:	4410      	add	r0, r2
 801128e:	88f2      	ldrh	r2, [r6, #6]
 8011290:	4413      	add	r3, r2
 8011292:	b200      	sxth	r0, r0
 8011294:	b21b      	sxth	r3, r3
 8011296:	4298      	cmp	r0, r3
 8011298:	bfcc      	ite	gt
 801129a:	2000      	movgt	r0, #0
 801129c:	2001      	movle	r0, #1
 801129e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080112a0 <_ZN8touchgfx11Application11getInstanceEv>:
 80112a0:	4b01      	ldr	r3, [pc, #4]	; (80112a8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80112a2:	6818      	ldr	r0, [r3, #0]
 80112a4:	4770      	bx	lr
 80112a6:	bf00      	nop
 80112a8:	20015848 	.word	0x20015848

080112ac <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 80112ac:	2300      	movs	r3, #0
 80112ae:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80112b2:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80112b6:	30a8      	adds	r0, #168	; 0xa8
 80112b8:	f802 3b01 	strb.w	r3, [r2], #1
 80112bc:	4282      	cmp	r2, r0
 80112be:	d1fb      	bne.n	80112b8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 80112c0:	4770      	bx	lr

080112c2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80112c2:	4603      	mov	r3, r0
 80112c4:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80112c8:	2200      	movs	r2, #0
 80112ca:	801a      	strh	r2, [r3, #0]
 80112cc:	805a      	strh	r2, [r3, #2]
 80112ce:	809a      	strh	r2, [r3, #4]
 80112d0:	80da      	strh	r2, [r3, #6]
 80112d2:	3308      	adds	r3, #8
 80112d4:	428b      	cmp	r3, r1
 80112d6:	d1f8      	bne.n	80112ca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80112d8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80112dc:	4770      	bx	lr
	...

080112e0 <_ZN8touchgfx11ApplicationC1Ev>:
 80112e0:	b570      	push	{r4, r5, r6, lr}
 80112e2:	4b19      	ldr	r3, [pc, #100]	; (8011348 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80112e4:	6003      	str	r3, [r0, #0]
 80112e6:	2500      	movs	r5, #0
 80112e8:	4604      	mov	r4, r0
 80112ea:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80112ee:	30a8      	adds	r0, #168	; 0xa8
 80112f0:	f7ff ffe7 	bl	80112c2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80112f4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80112f8:	f7ff ffe3 	bl	80112c2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80112fc:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8011300:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8011304:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8011308:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801130c:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8011310:	490e      	ldr	r1, [pc, #56]	; (801134c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8011312:	480f      	ldr	r0, [pc, #60]	; (8011350 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8011314:	4e0f      	ldr	r6, [pc, #60]	; (8011354 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8011316:	f00e fec3 	bl	80200a0 <CRC_Lock>
 801131a:	4b0f      	ldr	r3, [pc, #60]	; (8011358 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801131c:	b158      	cbz	r0, 8011336 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 801131e:	801d      	strh	r5, [r3, #0]
 8011320:	4a0e      	ldr	r2, [pc, #56]	; (801135c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8011322:	2300      	movs	r3, #0
 8011324:	6013      	str	r3, [r2, #0]
 8011326:	4a0e      	ldr	r2, [pc, #56]	; (8011360 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011328:	6033      	str	r3, [r6, #0]
 801132a:	4620      	mov	r0, r4
 801132c:	6013      	str	r3, [r2, #0]
 801132e:	f7ff ffbd 	bl	80112ac <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8011332:	4620      	mov	r0, r4
 8011334:	bd70      	pop	{r4, r5, r6, pc}
 8011336:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801133a:	2002      	movs	r0, #2
 801133c:	801a      	strh	r2, [r3, #0]
 801133e:	6030      	str	r0, [r6, #0]
 8011340:	f001 fae8 	bl	8012914 <_ZN8touchgfx6Screen4drawEv>
 8011344:	e7ec      	b.n	8011320 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8011346:	bf00      	nop
 8011348:	080244e8 	.word	0x080244e8
 801134c:	b5e8b5cd 	.word	0xb5e8b5cd
 8011350:	f407a5c2 	.word	0xf407a5c2
 8011354:	20015838 	.word	0x20015838
 8011358:	2000008c 	.word	0x2000008c
 801135c:	20015848 	.word	0x20015848
 8011360:	2001583c 	.word	0x2001583c

08011364 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011364:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011368:	3b01      	subs	r3, #1
 801136a:	b29b      	uxth	r3, r3
 801136c:	428b      	cmp	r3, r1
 801136e:	b510      	push	{r4, lr}
 8011370:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011374:	d908      	bls.n	8011388 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011376:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801137a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801137e:	681a      	ldr	r2, [r3, #0]
 8011380:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011384:	685a      	ldr	r2, [r3, #4]
 8011386:	6062      	str	r2, [r4, #4]
 8011388:	bd10      	pop	{r4, pc}
	...

0801138c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801138c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011390:	4b94      	ldr	r3, [pc, #592]	; (80115e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011392:	b08f      	sub	sp, #60	; 0x3c
 8011394:	ac0a      	add	r4, sp, #40	; 0x28
 8011396:	e884 0006 	stmia.w	r4, {r1, r2}
 801139a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801139e:	4b92      	ldr	r3, [pc, #584]	; (80115e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 80113a0:	4683      	mov	fp, r0
 80113a2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80113a6:	4620      	mov	r0, r4
 80113a8:	f7ff ff03 	bl	80111b2 <_ZN8touchgfx4Rect10restrictToEss>
 80113ac:	4620      	mov	r0, r4
 80113ae:	f7f9 fe28 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 80113b2:	2800      	cmp	r0, #0
 80113b4:	d16a      	bne.n	801148c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80113b6:	9403      	str	r4, [sp, #12]
 80113b8:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80113bc:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80113c0:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80113c4:	2400      	movs	r4, #0
 80113c6:	9301      	str	r3, [sp, #4]
 80113c8:	36a0      	adds	r6, #160	; 0xa0
 80113ca:	42a5      	cmp	r5, r4
 80113cc:	d00d      	beq.n	80113ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80113ce:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80113d2:	9803      	ldr	r0, [sp, #12]
 80113d4:	f7ff ff3e 	bl	8011254 <_ZNK8touchgfx4Rect8includesERKS0_>
 80113d8:	b128      	cbz	r0, 80113e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80113da:	1e69      	subs	r1, r5, #1
 80113dc:	1b09      	subs	r1, r1, r4
 80113de:	b289      	uxth	r1, r1
 80113e0:	9801      	ldr	r0, [sp, #4]
 80113e2:	f7ff ffbf 	bl	8011364 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80113e6:	3401      	adds	r4, #1
 80113e8:	e7ef      	b.n	80113ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80113ea:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80113ee:	9704      	str	r7, [sp, #16]
 80113f0:	1e7b      	subs	r3, r7, #1
 80113f2:	9302      	str	r3, [sp, #8]
 80113f4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80113f8:	2400      	movs	r4, #0
 80113fa:	4655      	mov	r5, sl
 80113fc:	9705      	str	r7, [sp, #20]
 80113fe:	4626      	mov	r6, r4
 8011400:	9b05      	ldr	r3, [sp, #20]
 8011402:	2b00      	cmp	r3, #0
 8011404:	d078      	beq.n	80114f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 8011406:	9903      	ldr	r1, [sp, #12]
 8011408:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801140c:	f7ff feaf 	bl	801116e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011410:	b360      	cbz	r0, 801146c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011412:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8011416:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 801141a:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 801141e:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8011422:	45e6      	cmp	lr, ip
 8011424:	db35      	blt.n	8011492 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011426:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801142a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801142e:	4472      	add	r2, lr
 8011430:	4463      	add	r3, ip
 8011432:	b212      	sxth	r2, r2
 8011434:	b21b      	sxth	r3, r3
 8011436:	429a      	cmp	r2, r3
 8011438:	dc2b      	bgt.n	8011492 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801143a:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801143e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011442:	fa1f f288 	uxth.w	r2, r8
 8011446:	4413      	add	r3, r2
 8011448:	b29b      	uxth	r3, r3
 801144a:	45c1      	cmp	r9, r8
 801144c:	fa0f fe83 	sxth.w	lr, r3
 8011450:	fa1f fc89 	uxth.w	ip, r9
 8011454:	db0f      	blt.n	8011476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011456:	eba3 030c 	sub.w	r3, r3, ip
 801145a:	1ac9      	subs	r1, r1, r3
 801145c:	b209      	sxth	r1, r1
 801145e:	2900      	cmp	r1, #0
 8011460:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011464:	dd12      	ble.n	801148c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011466:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801146a:	4604      	mov	r4, r0
 801146c:	9b05      	ldr	r3, [sp, #20]
 801146e:	3b01      	subs	r3, #1
 8011470:	9305      	str	r3, [sp, #20]
 8011472:	3d08      	subs	r5, #8
 8011474:	e7c4      	b.n	8011400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011476:	4461      	add	r1, ip
 8011478:	b209      	sxth	r1, r1
 801147a:	4571      	cmp	r1, lr
 801147c:	dc3a      	bgt.n	80114f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801147e:	eba2 020c 	sub.w	r2, r2, ip
 8011482:	b212      	sxth	r2, r2
 8011484:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011488:	2a00      	cmp	r2, #0
 801148a:	dcee      	bgt.n	801146a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801148c:	b00f      	add	sp, #60	; 0x3c
 801148e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011492:	45c1      	cmp	r9, r8
 8011494:	db2e      	blt.n	80114f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011496:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801149a:	4499      	add	r9, r3
 801149c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80114a0:	4498      	add	r8, r3
 80114a2:	fa0f f989 	sxth.w	r9, r9
 80114a6:	fa0f f888 	sxth.w	r8, r8
 80114aa:	45c1      	cmp	r9, r8
 80114ac:	dc22      	bgt.n	80114f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80114ae:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80114b2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80114b6:	fa1f f28c 	uxth.w	r2, ip
 80114ba:	4413      	add	r3, r2
 80114bc:	b29b      	uxth	r3, r3
 80114be:	45e6      	cmp	lr, ip
 80114c0:	fa1f f88e 	uxth.w	r8, lr
 80114c4:	fa0f f983 	sxth.w	r9, r3
 80114c8:	db0a      	blt.n	80114e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80114ca:	eba3 0308 	sub.w	r3, r3, r8
 80114ce:	1ac9      	subs	r1, r1, r3
 80114d0:	b209      	sxth	r1, r1
 80114d2:	2900      	cmp	r1, #0
 80114d4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80114d8:	ddd8      	ble.n	801148c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80114da:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80114de:	e7c4      	b.n	801146a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80114e0:	4441      	add	r1, r8
 80114e2:	b209      	sxth	r1, r1
 80114e4:	4549      	cmp	r1, r9
 80114e6:	dc05      	bgt.n	80114f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80114e8:	eba2 0208 	sub.w	r2, r2, r8
 80114ec:	b212      	sxth	r2, r2
 80114ee:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80114f2:	e7c9      	b.n	8011488 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80114f4:	4606      	mov	r6, r0
 80114f6:	e7b9      	b.n	801146c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80114f8:	2c00      	cmp	r4, #0
 80114fa:	f47f af7d 	bne.w	80113f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80114fe:	2e00      	cmp	r6, #0
 8011500:	f000 81e1 	beq.w	80118c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8011504:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8011508:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801150c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011510:	b2b9      	uxth	r1, r7
 8011512:	9105      	str	r1, [sp, #20]
 8011514:	9805      	ldr	r0, [sp, #20]
 8011516:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801151a:	4401      	add	r1, r0
 801151c:	b2b3      	uxth	r3, r6
 801151e:	b289      	uxth	r1, r1
 8011520:	441a      	add	r2, r3
 8011522:	9106      	str	r1, [sp, #24]
 8011524:	b292      	uxth	r2, r2
 8011526:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 801152a:	fa0f f882 	sxth.w	r8, r2
 801152e:	4655      	mov	r5, sl
 8011530:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011534:	9b04      	ldr	r3, [sp, #16]
 8011536:	2b00      	cmp	r3, #0
 8011538:	d058      	beq.n	80115ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 801153a:	9903      	ldr	r1, [sp, #12]
 801153c:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011540:	f7ff fe15 	bl	801116e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011544:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011548:	b1d8      	cbz	r0, 8011582 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801154a:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801154e:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011552:	4576      	cmp	r6, lr
 8011554:	dc26      	bgt.n	80115a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011556:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801155a:	44f4      	add	ip, lr
 801155c:	fa0f fc8c 	sxth.w	ip, ip
 8011560:	45e0      	cmp	r8, ip
 8011562:	db1f      	blt.n	80115a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011564:	428f      	cmp	r7, r1
 8011566:	fa1f fc81 	uxth.w	ip, r1
 801156a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801156e:	dc0f      	bgt.n	8011590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011570:	9806      	ldr	r0, [sp, #24]
 8011572:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011576:	eba0 0c0c 	sub.w	ip, r0, ip
 801157a:	eba1 010c 	sub.w	r1, r1, ip
 801157e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011582:	4620      	mov	r0, r4
 8011584:	9904      	ldr	r1, [sp, #16]
 8011586:	3901      	subs	r1, #1
 8011588:	9104      	str	r1, [sp, #16]
 801158a:	3d08      	subs	r5, #8
 801158c:	4604      	mov	r4, r0
 801158e:	e7cf      	b.n	8011530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8011590:	4461      	add	r1, ip
 8011592:	b209      	sxth	r1, r1
 8011594:	4549      	cmp	r1, r9
 8011596:	dcf5      	bgt.n	8011584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011598:	9905      	ldr	r1, [sp, #20]
 801159a:	eba1 0c0c 	sub.w	ip, r1, ip
 801159e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 80115a2:	e7ee      	b.n	8011582 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80115a4:	428f      	cmp	r7, r1
 80115a6:	dced      	bgt.n	8011584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80115a8:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 80115ac:	4461      	add	r1, ip
 80115ae:	b209      	sxth	r1, r1
 80115b0:	4589      	cmp	r9, r1
 80115b2:	dbe7      	blt.n	8011584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80115b4:	4576      	cmp	r6, lr
 80115b6:	fa1f fc8e 	uxth.w	ip, lr
 80115ba:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80115be:	dc08      	bgt.n	80115d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80115c0:	eba2 0c0c 	sub.w	ip, r2, ip
 80115c4:	eba1 010c 	sub.w	r1, r1, ip
 80115c8:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80115cc:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80115d0:	e7d7      	b.n	8011582 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80115d2:	4461      	add	r1, ip
 80115d4:	b209      	sxth	r1, r1
 80115d6:	4588      	cmp	r8, r1
 80115d8:	dbd4      	blt.n	8011584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80115da:	eba3 0c0c 	sub.w	ip, r3, ip
 80115de:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80115e2:	e7ce      	b.n	8011582 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80115e4:	200157ea 	.word	0x200157ea
 80115e8:	200157e8 	.word	0x200157e8
 80115ec:	2c00      	cmp	r4, #0
 80115ee:	f000 816a 	beq.w	80118c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80115f2:	9b02      	ldr	r3, [sp, #8]
 80115f4:	3301      	adds	r3, #1
 80115f6:	f000 8166 	beq.w	80118c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80115fa:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80115fe:	4621      	mov	r1, r4
 8011600:	9803      	ldr	r0, [sp, #12]
 8011602:	f7ff fe27 	bl	8011254 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011606:	b120      	cbz	r0, 8011612 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8011608:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801160c:	9801      	ldr	r0, [sp, #4]
 801160e:	f7ff fea9 	bl	8011364 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011612:	9903      	ldr	r1, [sp, #12]
 8011614:	4620      	mov	r0, r4
 8011616:	f7ff fdaa 	bl	801116e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801161a:	2800      	cmp	r0, #0
 801161c:	f000 809b 	beq.w	8011756 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011620:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 8011624:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 8011628:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801162c:	9309      	str	r3, [sp, #36]	; 0x24
 801162e:	b281      	uxth	r1, r0
 8011630:	eb01 0c03 	add.w	ip, r1, r3
 8011634:	fa1f f98c 	uxth.w	r9, ip
 8011638:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801163c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011640:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8011644:	b2ab      	uxth	r3, r5
 8011646:	eb03 040c 	add.w	r4, r3, ip
 801164a:	b2a4      	uxth	r4, r4
 801164c:	9405      	str	r4, [sp, #20]
 801164e:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8011652:	9404      	str	r4, [sp, #16]
 8011654:	4285      	cmp	r5, r0
 8011656:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801165a:	f340 809a 	ble.w	8011792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801165e:	1a5b      	subs	r3, r3, r1
 8011660:	b29b      	uxth	r3, r3
 8011662:	4596      	cmp	lr, r2
 8011664:	fa0f f589 	sxth.w	r5, r9
 8011668:	b21e      	sxth	r6, r3
 801166a:	dd2e      	ble.n	80116ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801166c:	9f02      	ldr	r7, [sp, #8]
 801166e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8011672:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011676:	9f04      	ldr	r7, [sp, #16]
 8011678:	1b7f      	subs	r7, r7, r5
 801167a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801167e:	fa1f fe8e 	uxth.w	lr, lr
 8011682:	b292      	uxth	r2, r2
 8011684:	ebae 0102 	sub.w	r1, lr, r2
 8011688:	4486      	add	lr, r0
 801168a:	442a      	add	r2, r5
 801168c:	b289      	uxth	r1, r1
 801168e:	fa0f fe8e 	sxth.w	lr, lr
 8011692:	b212      	sxth	r2, r2
 8011694:	b20c      	sxth	r4, r1
 8011696:	ebae 0202 	sub.w	r2, lr, r2
 801169a:	4367      	muls	r7, r4
 801169c:	4372      	muls	r2, r6
 801169e:	4297      	cmp	r7, r2
 80116a0:	db09      	blt.n	80116b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 80116a2:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 80116a6:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 80116aa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80116ae:	449c      	add	ip, r3
 80116b0:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80116b4:	e680      	b.n	80113b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80116b6:	4401      	add	r1, r0
 80116b8:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80116bc:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 80116c0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80116c4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80116c8:	e676      	b.n	80113b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80116ca:	9f04      	ldr	r7, [sp, #16]
 80116cc:	42bd      	cmp	r5, r7
 80116ce:	da27      	bge.n	8011720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80116d0:	9902      	ldr	r1, [sp, #8]
 80116d2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80116d6:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 80116da:	eb04 010e 	add.w	r1, r4, lr
 80116de:	fa1f f881 	uxth.w	r8, r1
 80116e2:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80116e6:	4411      	add	r1, r2
 80116e8:	eba1 0108 	sub.w	r1, r1, r8
 80116ec:	b289      	uxth	r1, r1
 80116ee:	fa0f f988 	sxth.w	r9, r8
 80116f2:	eba2 020e 	sub.w	r2, r2, lr
 80116f6:	fa0f f881 	sxth.w	r8, r1
 80116fa:	1b7f      	subs	r7, r7, r5
 80116fc:	4372      	muls	r2, r6
 80116fe:	fb08 f707 	mul.w	r7, r8, r7
 8011702:	42ba      	cmp	r2, r7
 8011704:	dc06      	bgt.n	8011714 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8011706:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 801170a:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 801170e:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 8011712:	e7ca      	b.n	80116aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8011714:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 8011718:	4421      	add	r1, r4
 801171a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801171e:	e64b      	b.n	80113b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011720:	9d05      	ldr	r5, [sp, #20]
 8011722:	eba9 0505 	sub.w	r5, r9, r5
 8011726:	b2ad      	uxth	r5, r5
 8011728:	2c06      	cmp	r4, #6
 801172a:	fa0f fe85 	sxth.w	lr, r5
 801172e:	d818      	bhi.n	8011762 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8011730:	9b04      	ldr	r3, [sp, #16]
 8011732:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8011736:	1c63      	adds	r3, r4, #1
 8011738:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 801173c:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8011740:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011744:	9b01      	ldr	r3, [sp, #4]
 8011746:	9d01      	ldr	r5, [sp, #4]
 8011748:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801174c:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8011750:	805a      	strh	r2, [r3, #2]
 8011752:	809e      	strh	r6, [r3, #4]
 8011754:	80d9      	strh	r1, [r3, #6]
 8011756:	9b02      	ldr	r3, [sp, #8]
 8011758:	3b01      	subs	r3, #1
 801175a:	9302      	str	r3, [sp, #8]
 801175c:	f1aa 0a08 	sub.w	sl, sl, #8
 8011760:	e747      	b.n	80115f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8011762:	9a02      	ldr	r2, [sp, #8]
 8011764:	45b6      	cmp	lr, r6
 8011766:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801176a:	db0d      	blt.n	8011788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 801176c:	449c      	add	ip, r3
 801176e:	fa1f fc8c 	uxth.w	ip, ip
 8011772:	445a      	add	r2, fp
 8011774:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011778:	448c      	add	ip, r1
 801177a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801177e:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8011782:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011786:	e617      	b.n	80113b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011788:	445a      	add	r2, fp
 801178a:	44ac      	add	ip, r5
 801178c:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8011790:	e78e      	b.n	80116b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011792:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011796:	fa1f f18e 	uxth.w	r1, lr
 801179a:	eb01 0806 	add.w	r8, r1, r6
 801179e:	b293      	uxth	r3, r2
 80117a0:	fa1f f888 	uxth.w	r8, r8
 80117a4:	9306      	str	r3, [sp, #24]
 80117a6:	fa0f f388 	sxth.w	r3, r8
 80117aa:	9307      	str	r3, [sp, #28]
 80117ac:	9f06      	ldr	r7, [sp, #24]
 80117ae:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 80117b2:	443b      	add	r3, r7
 80117b4:	b29b      	uxth	r3, r3
 80117b6:	4596      	cmp	lr, r2
 80117b8:	9308      	str	r3, [sp, #32]
 80117ba:	da25      	bge.n	8011808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80117bc:	9905      	ldr	r1, [sp, #20]
 80117be:	eba3 0308 	sub.w	r3, r3, r8
 80117c2:	eba9 0401 	sub.w	r4, r9, r1
 80117c6:	b2a4      	uxth	r4, r4
 80117c8:	b29b      	uxth	r3, r3
 80117ca:	fa0f f984 	sxth.w	r9, r4
 80117ce:	b219      	sxth	r1, r3
 80117d0:	eba2 020e 	sub.w	r2, r2, lr
 80117d4:	1b40      	subs	r0, r0, r5
 80117d6:	fb09 f202 	mul.w	r2, r9, r2
 80117da:	4348      	muls	r0, r1
 80117dc:	4282      	cmp	r2, r0
 80117de:	9a02      	ldr	r2, [sp, #8]
 80117e0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80117e4:	445a      	add	r2, fp
 80117e6:	dc06      	bgt.n	80117f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80117e8:	9b07      	ldr	r3, [sp, #28]
 80117ea:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 80117ee:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 80117f2:	44a4      	add	ip, r4
 80117f4:	e75c      	b.n	80116b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80117f6:	9904      	ldr	r1, [sp, #16]
 80117f8:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 80117fc:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 8011800:	4433      	add	r3, r6
 8011802:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011806:	e5d7      	b.n	80113b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011808:	9f06      	ldr	r7, [sp, #24]
 801180a:	9b04      	ldr	r3, [sp, #16]
 801180c:	1bc9      	subs	r1, r1, r7
 801180e:	fa0f f789 	sxth.w	r7, r9
 8011812:	b289      	uxth	r1, r1
 8011814:	429f      	cmp	r7, r3
 8011816:	fa0f fe81 	sxth.w	lr, r1
 801181a:	dd22      	ble.n	8011862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 801181c:	9a05      	ldr	r2, [sp, #20]
 801181e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011822:	1b40      	subs	r0, r0, r5
 8011824:	eba9 0202 	sub.w	r2, r9, r2
 8011828:	9d07      	ldr	r5, [sp, #28]
 801182a:	b292      	uxth	r2, r2
 801182c:	eba5 0a03 	sub.w	sl, r5, r3
 8011830:	b214      	sxth	r4, r2
 8011832:	9b02      	ldr	r3, [sp, #8]
 8011834:	fb0e f000 	mul.w	r0, lr, r0
 8011838:	fb04 fa0a 	mul.w	sl, r4, sl
 801183c:	00db      	lsls	r3, r3, #3
 801183e:	4550      	cmp	r0, sl
 8011840:	445b      	add	r3, fp
 8011842:	db03      	blt.n	801184c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011844:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8011848:	4494      	add	ip, r2
 801184a:	e731      	b.n	80116b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801184c:	9a04      	ldr	r2, [sp, #16]
 801184e:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011852:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011856:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801185a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801185e:	4431      	add	r1, r6
 8011860:	e75b      	b.n	801171a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8011862:	9b08      	ldr	r3, [sp, #32]
 8011864:	eba3 0308 	sub.w	r3, r3, r8
 8011868:	b29b      	uxth	r3, r3
 801186a:	2c06      	cmp	r4, #6
 801186c:	b21d      	sxth	r5, r3
 801186e:	d813      	bhi.n	8011898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8011870:	9b07      	ldr	r3, [sp, #28]
 8011872:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011876:	1c63      	adds	r3, r4, #1
 8011878:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 801187c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011880:	9b01      	ldr	r3, [sp, #4]
 8011882:	9901      	ldr	r1, [sp, #4]
 8011884:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011888:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 801188c:	805a      	strh	r2, [r3, #2]
 801188e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011890:	809a      	strh	r2, [r3, #4]
 8011892:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011896:	e75e      	b.n	8011756 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011898:	9802      	ldr	r0, [sp, #8]
 801189a:	4575      	cmp	r5, lr
 801189c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 80118a0:	db0d      	blt.n	80118be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 80118a2:	4431      	add	r1, r6
 80118a4:	9b06      	ldr	r3, [sp, #24]
 80118a6:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80118aa:	b289      	uxth	r1, r1
 80118ac:	4458      	add	r0, fp
 80118ae:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80118b2:	4419      	add	r1, r3
 80118b4:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 80118b8:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 80118bc:	e57c      	b.n	80113b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80118be:	4458      	add	r0, fp
 80118c0:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 80118c4:	e79c      	b.n	8011800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80118c6:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 80118ca:	2e07      	cmp	r6, #7
 80118cc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80118d0:	d812      	bhi.n	80118f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 80118d2:	1c75      	adds	r5, r6, #1
 80118d4:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 80118d8:	9d01      	ldr	r5, [sp, #4]
 80118da:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80118de:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80118e2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80118e6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80118ea:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80118ee:	442c      	add	r4, r5
 80118f0:	8061      	strh	r1, [r4, #2]
 80118f2:	80a2      	strh	r2, [r4, #4]
 80118f4:	80e3      	strh	r3, [r4, #6]
 80118f6:	e5c9      	b.n	801148c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80118f8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80118fc:	3e01      	subs	r6, #1
 80118fe:	445c      	add	r4, fp
 8011900:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8011904:	f04f 37ff 	mov.w	r7, #4294967295
 8011908:	2500      	movs	r5, #0
 801190a:	9305      	str	r3, [sp, #20]
 801190c:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8011910:	9302      	str	r3, [sp, #8]
 8011912:	1e72      	subs	r2, r6, #1
 8011914:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8011918:	9304      	str	r3, [sp, #16]
 801191a:	4691      	mov	r9, r2
 801191c:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8011920:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011924:	bf14      	ite	ne
 8011926:	9905      	ldrne	r1, [sp, #20]
 8011928:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801192c:	6818      	ldr	r0, [r3, #0]
 801192e:	9207      	str	r2, [sp, #28]
 8011930:	bf18      	it	ne
 8011932:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011936:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801193a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801193e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011942:	9306      	str	r3, [sp, #24]
 8011944:	fb18 f801 	smulbb	r8, r8, r1
 8011948:	6859      	ldr	r1, [r3, #4]
 801194a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801194e:	4671      	mov	r1, lr
 8011950:	a80c      	add	r0, sp, #48	; 0x30
 8011952:	f7fb f87b 	bl	800ca4c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011956:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801195a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801195e:	9b04      	ldr	r3, [sp, #16]
 8011960:	9a02      	ldr	r2, [sp, #8]
 8011962:	fb10 f001 	smulbb	r0, r0, r1
 8011966:	fb02 8803 	mla	r8, r2, r3, r8
 801196a:	eba0 0108 	sub.w	r1, r0, r8
 801196e:	f04f 0c08 	mov.w	ip, #8
 8011972:	fb90 f0fc 	sdiv	r0, r0, ip
 8011976:	4288      	cmp	r0, r1
 8011978:	dc20      	bgt.n	80119bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801197a:	4551      	cmp	r1, sl
 801197c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011980:	da03      	bge.n	801198a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8011982:	b1d9      	cbz	r1, 80119bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011984:	468a      	mov	sl, r1
 8011986:	464f      	mov	r7, r9
 8011988:	4635      	mov	r5, r6
 801198a:	f109 39ff 	add.w	r9, r9, #4294967295
 801198e:	f119 0f02 	cmn.w	r9, #2
 8011992:	d1c5      	bne.n	8011920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011994:	4616      	mov	r6, r2
 8011996:	3201      	adds	r2, #1
 8011998:	f1a4 0408 	sub.w	r4, r4, #8
 801199c:	d1b6      	bne.n	801190c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801199e:	9b01      	ldr	r3, [sp, #4]
 80119a0:	b2ac      	uxth	r4, r5
 80119a2:	00ed      	lsls	r5, r5, #3
 80119a4:	1958      	adds	r0, r3, r5
 80119a6:	1c7b      	adds	r3, r7, #1
 80119a8:	d10b      	bne.n	80119c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 80119aa:	4601      	mov	r1, r0
 80119ac:	9803      	ldr	r0, [sp, #12]
 80119ae:	f7fb f84d 	bl	800ca4c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80119b2:	4621      	mov	r1, r4
 80119b4:	9801      	ldr	r0, [sp, #4]
 80119b6:	f7ff fcd5 	bl	8011364 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80119ba:	e4fd      	b.n	80113b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80119bc:	464f      	mov	r7, r9
 80119be:	4635      	mov	r5, r6
 80119c0:	e7ed      	b.n	801199e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 80119c2:	9b01      	ldr	r3, [sp, #4]
 80119c4:	00ff      	lsls	r7, r7, #3
 80119c6:	19d9      	adds	r1, r3, r7
 80119c8:	f7fb f840 	bl	800ca4c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80119cc:	9b03      	ldr	r3, [sp, #12]
 80119ce:	cb03      	ldmia	r3!, {r0, r1}
 80119d0:	445f      	add	r7, fp
 80119d2:	445d      	add	r5, fp
 80119d4:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 80119d8:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 80119dc:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 80119e0:	9b03      	ldr	r3, [sp, #12]
 80119e2:	6869      	ldr	r1, [r5, #4]
 80119e4:	c303      	stmia	r3!, {r0, r1}
 80119e6:	e7e4      	b.n	80119b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

080119e8 <_ZN8touchgfx11Application10invalidateEv>:
 80119e8:	4b09      	ldr	r3, [pc, #36]	; (8011a10 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80119ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80119ee:	4b09      	ldr	r3, [pc, #36]	; (8011a14 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80119f0:	b082      	sub	sp, #8
 80119f2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80119f6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80119fa:	2100      	movs	r1, #0
 80119fc:	9100      	str	r1, [sp, #0]
 80119fe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011a02:	ab02      	add	r3, sp, #8
 8011a04:	e913 0006 	ldmdb	r3, {r1, r2}
 8011a08:	b002      	add	sp, #8
 8011a0a:	f7ff bcbf 	b.w	801138c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011a0e:	bf00      	nop
 8011a10:	200157e8 	.word	0x200157e8
 8011a14:	200157ea 	.word	0x200157ea

08011a18 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a1c:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8011a20:	b09b      	sub	sp, #108	; 0x6c
 8011a22:	4604      	mov	r4, r0
 8011a24:	4630      	mov	r0, r6
 8011a26:	f7f9 faec 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a2a:	4605      	mov	r5, r0
 8011a2c:	b940      	cbnz	r0, 8011a40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8011a2e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011a32:	4620      	mov	r0, r4
 8011a34:	f7ff fcaa 	bl	801138c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011a38:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8011a3c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011a40:	4bc9      	ldr	r3, [pc, #804]	; (8011d68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011a42:	681b      	ldr	r3, [r3, #0]
 8011a44:	2b00      	cmp	r3, #0
 8011a46:	d03e      	beq.n	8011ac6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011a48:	4dc8      	ldr	r5, [pc, #800]	; (8011d6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8011a4a:	4628      	mov	r0, r5
 8011a4c:	f7f9 fad9 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a50:	4606      	mov	r6, r0
 8011a52:	2800      	cmp	r0, #0
 8011a54:	d137      	bne.n	8011ac6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011a56:	4628      	mov	r0, r5
 8011a58:	f7ff fa4a 	bl	8010ef0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011a5c:	6829      	ldr	r1, [r5, #0]
 8011a5e:	686a      	ldr	r2, [r5, #4]
 8011a60:	4620      	mov	r0, r4
 8011a62:	f7ff fc93 	bl	801138c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011a66:	802e      	strh	r6, [r5, #0]
 8011a68:	806e      	strh	r6, [r5, #2]
 8011a6a:	80ae      	strh	r6, [r5, #4]
 8011a6c:	80ee      	strh	r6, [r5, #6]
 8011a6e:	ae09      	add	r6, sp, #36	; 0x24
 8011a70:	4630      	mov	r0, r6
 8011a72:	f7ff fc26 	bl	80112c2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011a76:	4abe      	ldr	r2, [pc, #760]	; (8011d70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011a78:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8011a7c:	8815      	ldrh	r5, [r2, #0]
 8011a7e:	9202      	str	r2, [sp, #8]
 8011a80:	462b      	mov	r3, r5
 8011a82:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011a86:	429f      	cmp	r7, r3
 8011a88:	d924      	bls.n	8011ad4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8011a8a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8011a8e:	2907      	cmp	r1, #7
 8011a90:	d816      	bhi.n	8011ac0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8011a92:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011a96:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8011a9a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 8011a9e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8011aa2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011aa6:	1c4a      	adds	r2, r1, #1
 8011aa8:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8011aac:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8011ab0:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8011ab4:	f8a2 9002 	strh.w	r9, [r2, #2]
 8011ab8:	f8a2 e004 	strh.w	lr, [r2, #4]
 8011abc:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011ac0:	3301      	adds	r3, #1
 8011ac2:	b29b      	uxth	r3, r3
 8011ac4:	e7df      	b.n	8011a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8011ac6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011aca:	2b00      	cmp	r3, #0
 8011acc:	d1cf      	bne.n	8011a6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8011ace:	b01b      	add	sp, #108	; 0x6c
 8011ad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ad4:	462f      	mov	r7, r5
 8011ad6:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8011ada:	42bb      	cmp	r3, r7
 8011adc:	d90b      	bls.n	8011af6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8011ade:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8011ae2:	4620      	mov	r0, r4
 8011ae4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8011ae8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8011aec:	3701      	adds	r7, #1
 8011aee:	f7ff fc4d 	bl	801138c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011af2:	b2bf      	uxth	r7, r7
 8011af4:	e7ef      	b.n	8011ad6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8011af6:	4a9f      	ldr	r2, [pc, #636]	; (8011d74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8011af8:	6813      	ldr	r3, [r2, #0]
 8011afa:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8011afe:	2b01      	cmp	r3, #1
 8011b00:	4690      	mov	r8, r2
 8011b02:	f040 80e6 	bne.w	8011cd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8011b06:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8011b0a:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8011b0e:	4629      	mov	r1, r5
 8011b10:	33aa      	adds	r3, #170	; 0xaa
 8011b12:	2500      	movs	r5, #0
 8011b14:	428f      	cmp	r7, r1
 8011b16:	f103 0308 	add.w	r3, r3, #8
 8011b1a:	dd0a      	ble.n	8011b32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8011b1c:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8011b20:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8011b24:	4402      	add	r2, r0
 8011b26:	b212      	sxth	r2, r2
 8011b28:	4295      	cmp	r5, r2
 8011b2a:	bfb8      	it	lt
 8011b2c:	4615      	movlt	r5, r2
 8011b2e:	3101      	adds	r1, #1
 8011b30:	e7f0      	b.n	8011b14 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8011b32:	4b91      	ldr	r3, [pc, #580]	; (8011d78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011b34:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011d74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8011b38:	881b      	ldrh	r3, [r3, #0]
 8011b3a:	2b0f      	cmp	r3, #15
 8011b3c:	bf88      	it	hi
 8011b3e:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8011b42:	f04f 0300 	mov.w	r3, #0
 8011b46:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8011b4a:	bf98      	it	ls
 8011b4c:	f04f 0a01 	movls.w	sl, #1
 8011b50:	46d8      	mov	r8, fp
 8011b52:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011b56:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8011b5a:	4438      	add	r0, r7
 8011b5c:	b207      	sxth	r7, r0
 8011b5e:	f8db 0000 	ldr.w	r0, [fp]
 8011b62:	42bd      	cmp	r5, r7
 8011b64:	6803      	ldr	r3, [r0, #0]
 8011b66:	f340 8084 	ble.w	8011c72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011b6a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8011b6e:	4798      	blx	r3
 8011b70:	eb07 030a 	add.w	r3, r7, sl
 8011b74:	4298      	cmp	r0, r3
 8011b76:	da07      	bge.n	8011b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011b78:	4285      	cmp	r5, r0
 8011b7a:	dd05      	ble.n	8011b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011b7c:	4287      	cmp	r7, r0
 8011b7e:	dd6d      	ble.n	8011c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011b80:	2f00      	cmp	r7, #0
 8011b82:	dd6b      	ble.n	8011c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011b84:	4628      	mov	r0, r5
 8011b86:	e004      	b.n	8011b92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011b88:	4287      	cmp	r7, r0
 8011b8a:	dcfb      	bgt.n	8011b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8011b8c:	42a8      	cmp	r0, r5
 8011b8e:	bfa8      	it	ge
 8011b90:	4628      	movge	r0, r5
 8011b92:	4b7a      	ldr	r3, [pc, #488]	; (8011d7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011b94:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011b98:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011b9c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011ba0:	9b02      	ldr	r3, [sp, #8]
 8011ba2:	1bc0      	subs	r0, r0, r7
 8011ba4:	2200      	movs	r2, #0
 8011ba6:	881f      	ldrh	r7, [r3, #0]
 8011ba8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011bac:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011bb0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011bb4:	42bb      	cmp	r3, r7
 8011bb6:	d9cc      	bls.n	8011b52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011bb8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8011bbc:	ab07      	add	r3, sp, #28
 8011bbe:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011bc2:	6851      	ldr	r1, [r2, #4]
 8011bc4:	c303      	stmia	r3!, {r0, r1}
 8011bc6:	a905      	add	r1, sp, #20
 8011bc8:	a807      	add	r0, sp, #28
 8011bca:	f7ff fad0 	bl	801116e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011bce:	2800      	cmp	r0, #0
 8011bd0:	d04c      	beq.n	8011c6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8011bd2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011bd6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8011bda:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8011bde:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8011be2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011be6:	9303      	str	r3, [sp, #12]
 8011be8:	4686      	mov	lr, r0
 8011bea:	4290      	cmp	r0, r2
 8011bec:	4448      	add	r0, r9
 8011bee:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8011bf2:	bfb8      	it	lt
 8011bf4:	4696      	movlt	lr, r2
 8011bf6:	444a      	add	r2, r9
 8011bf8:	4299      	cmp	r1, r3
 8011bfa:	b280      	uxth	r0, r0
 8011bfc:	b292      	uxth	r2, r2
 8011bfe:	468c      	mov	ip, r1
 8011c00:	fa0f f982 	sxth.w	r9, r2
 8011c04:	bfb8      	it	lt
 8011c06:	469c      	movlt	ip, r3
 8011c08:	b203      	sxth	r3, r0
 8011c0a:	454b      	cmp	r3, r9
 8011c0c:	bfb8      	it	lt
 8011c0e:	4602      	movlt	r2, r0
 8011c10:	eba2 020e 	sub.w	r2, r2, lr
 8011c14:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011c18:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011c1c:	9b03      	ldr	r3, [sp, #12]
 8011c1e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8011c22:	4411      	add	r1, r2
 8011c24:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011c28:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011c2c:	4413      	add	r3, r2
 8011c2e:	b289      	uxth	r1, r1
 8011c30:	b29b      	uxth	r3, r3
 8011c32:	b208      	sxth	r0, r1
 8011c34:	b21a      	sxth	r2, r3
 8011c36:	4290      	cmp	r0, r2
 8011c38:	bfb8      	it	lt
 8011c3a:	460b      	movlt	r3, r1
 8011c3c:	eba3 030c 	sub.w	r3, r3, ip
 8011c40:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011c44:	a807      	add	r0, sp, #28
 8011c46:	f7f9 f9dc 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c4a:	b920      	cbnz	r0, 8011c56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011c4c:	6823      	ldr	r3, [r4, #0]
 8011c4e:	a907      	add	r1, sp, #28
 8011c50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011c52:	4620      	mov	r0, r4
 8011c54:	4798      	blx	r3
 8011c56:	3701      	adds	r7, #1
 8011c58:	b2bf      	uxth	r7, r7
 8011c5a:	e7a9      	b.n	8011bb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011c5c:	f8d8 0000 	ldr.w	r0, [r8]
 8011c60:	6803      	ldr	r3, [r0, #0]
 8011c62:	2101      	movs	r1, #1
 8011c64:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011c68:	4798      	blx	r3
 8011c6a:	e772      	b.n	8011b52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011c6c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011c70:	e7e8      	b.n	8011c44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8011c72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c74:	4798      	blx	r3
 8011c76:	4b42      	ldr	r3, [pc, #264]	; (8011d80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011c78:	781b      	ldrb	r3, [r3, #0]
 8011c7a:	2b00      	cmp	r3, #0
 8011c7c:	f43f af27 	beq.w	8011ace <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011c80:	2300      	movs	r3, #0
 8011c82:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011c86:	9b02      	ldr	r3, [sp, #8]
 8011c88:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011c8c:	881b      	ldrh	r3, [r3, #0]
 8011c8e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011c92:	429d      	cmp	r5, r3
 8011c94:	f67f af1b 	bls.w	8011ace <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011c98:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011c9c:	2907      	cmp	r1, #7
 8011c9e:	d815      	bhi.n	8011ccc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8011ca0:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011ca4:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011ca8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011cac:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011cb0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011cb4:	1c4a      	adds	r2, r1, #1
 8011cb6:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011cba:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011cbe:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8011cc2:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011cc6:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011cca:	80d7      	strh	r7, [r2, #6]
 8011ccc:	3301      	adds	r3, #1
 8011cce:	b29b      	uxth	r3, r3
 8011cd0:	e7df      	b.n	8011c92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8011cd2:	2b02      	cmp	r3, #2
 8011cd4:	f040 8136 	bne.w	8011f44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011cd8:	4b2a      	ldr	r3, [pc, #168]	; (8011d84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011cda:	781b      	ldrb	r3, [r3, #0]
 8011cdc:	2b01      	cmp	r3, #1
 8011cde:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011ce2:	f000 809c 	beq.w	8011e1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011ce6:	9b02      	ldr	r3, [sp, #8]
 8011ce8:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011cec:	f8b3 b000 	ldrh.w	fp, [r3]
 8011cf0:	f10b 0b01 	add.w	fp, fp, #1
 8011cf4:	fa1f fb8b 	uxth.w	fp, fp
 8011cf8:	2a00      	cmp	r2, #0
 8011cfa:	d0bc      	beq.n	8011c76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011cfc:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8011d00:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011d04:	441d      	add	r5, r3
 8011d06:	b22d      	sxth	r5, r5
 8011d08:	4659      	mov	r1, fp
 8011d0a:	f04f 0800 	mov.w	r8, #0
 8011d0e:	b28b      	uxth	r3, r1
 8011d10:	429a      	cmp	r2, r3
 8011d12:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011d16:	f240 80c1 	bls.w	8011e9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011d1a:	4427      	add	r7, r4
 8011d1c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8011d20:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011d24:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011d28:	4563      	cmp	r3, ip
 8011d2a:	4608      	mov	r0, r1
 8011d2c:	f340 80a3 	ble.w	8011e76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011d30:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011d34:	4465      	add	r5, ip
 8011d36:	b22d      	sxth	r5, r5
 8011d38:	429d      	cmp	r5, r3
 8011d3a:	bfa8      	it	ge
 8011d3c:	461d      	movge	r5, r3
 8011d3e:	3101      	adds	r1, #1
 8011d40:	4680      	mov	r8, r0
 8011d42:	e7e4      	b.n	8011d0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011d44:	d10b      	bne.n	8011d5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011d46:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011d4a:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8011d4e:	458c      	cmp	ip, r1
 8011d50:	bfb4      	ite	lt
 8011d52:	469c      	movlt	ip, r3
 8011d54:	46bc      	movge	ip, r7
 8011d56:	4572      	cmp	r2, lr
 8011d58:	bfb8      	it	lt
 8011d5a:	4672      	movlt	r2, lr
 8011d5c:	e088      	b.n	8011e70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011d5e:	428a      	cmp	r2, r1
 8011d60:	bfb8      	it	lt
 8011d62:	460a      	movlt	r2, r1
 8011d64:	46bc      	mov	ip, r7
 8011d66:	e083      	b.n	8011e70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011d68:	20015834 	.word	0x20015834
 8011d6c:	20015840 	.word	0x20015840
 8011d70:	2000008c 	.word	0x2000008c
 8011d74:	200157f4 	.word	0x200157f4
 8011d78:	200157ea 	.word	0x200157ea
 8011d7c:	200157e8 	.word	0x200157e8
 8011d80:	200157f2 	.word	0x200157f2
 8011d84:	200157ec 	.word	0x200157ec
 8011d88:	1961      	adds	r1, r4, r5
 8011d8a:	ab07      	add	r3, sp, #28
 8011d8c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8011d90:	6849      	ldr	r1, [r1, #4]
 8011d92:	c303      	stmia	r3!, {r0, r1}
 8011d94:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011d98:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011d9c:	2b13      	cmp	r3, #19
 8011d9e:	bfd8      	it	le
 8011da0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011da4:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011da8:	440b      	add	r3, r1
 8011daa:	1a9b      	subs	r3, r3, r2
 8011dac:	a807      	add	r0, sp, #28
 8011dae:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011db2:	f7ff f8b7 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011db6:	a807      	add	r0, sp, #28
 8011db8:	f7f9 f923 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011dbc:	bb78      	cbnz	r0, 8011e1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011dbe:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011dc2:	f8d8 0000 	ldr.w	r0, [r8]
 8011dc6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011dca:	f8d0 e000 	ldr.w	lr, [r0]
 8011dce:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011dd2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011dd6:	f1bc 0f14 	cmp.w	ip, #20
 8011dda:	bfa8      	it	ge
 8011ddc:	f04f 0c14 	movge.w	ip, #20
 8011de0:	fa1f fc8c 	uxth.w	ip, ip
 8011de4:	f8cd c000 	str.w	ip, [sp]
 8011de8:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8011dec:	47d0      	blx	sl
 8011dee:	4682      	mov	sl, r0
 8011df0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011df4:	a807      	add	r0, sp, #28
 8011df6:	f7ff f87b 	bl	8010ef0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011dfa:	6823      	ldr	r3, [r4, #0]
 8011dfc:	4425      	add	r5, r4
 8011dfe:	4620      	mov	r0, r4
 8011e00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011e02:	a907      	add	r1, sp, #28
 8011e04:	4798      	blx	r3
 8011e06:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8011e0a:	eba0 000a 	sub.w	r0, r0, sl
 8011e0e:	b200      	sxth	r0, r0
 8011e10:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011e14:	b918      	cbnz	r0, 8011e1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011e16:	b2b9      	uxth	r1, r7
 8011e18:	4648      	mov	r0, r9
 8011e1a:	f7ff faa3 	bl	8011364 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011e1e:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8011e22:	f1bb 0f00 	cmp.w	fp, #0
 8011e26:	f43f af26 	beq.w	8011c76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011e2a:	9b02      	ldr	r3, [sp, #8]
 8011e2c:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8011e30:	881b      	ldrh	r3, [r3, #0]
 8011e32:	3301      	adds	r3, #1
 8011e34:	b29b      	uxth	r3, r3
 8011e36:	2700      	movs	r7, #0
 8011e38:	b299      	uxth	r1, r3
 8011e3a:	458b      	cmp	fp, r1
 8011e3c:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8011e40:	d9a2      	bls.n	8011d88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8011e42:	4425      	add	r5, r4
 8011e44:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011e48:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011e4c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8011e50:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011e54:	4408      	add	r0, r1
 8011e56:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011e5a:	4471      	add	r1, lr
 8011e5c:	b200      	sxth	r0, r0
 8011e5e:	b209      	sxth	r1, r1
 8011e60:	4288      	cmp	r0, r1
 8011e62:	469c      	mov	ip, r3
 8011e64:	f6bf af6e 	bge.w	8011d44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011e68:	4586      	cmp	lr, r0
 8011e6a:	4672      	mov	r2, lr
 8011e6c:	bfb8      	it	lt
 8011e6e:	4602      	movlt	r2, r0
 8011e70:	3301      	adds	r3, #1
 8011e72:	4667      	mov	r7, ip
 8011e74:	e7e0      	b.n	8011e38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011e76:	d10c      	bne.n	8011e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011e78:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011e7c:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8011e80:	4287      	cmp	r7, r0
 8011e82:	bfb4      	ite	lt
 8011e84:	4608      	movlt	r0, r1
 8011e86:	4640      	movge	r0, r8
 8011e88:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011e8c:	443b      	add	r3, r7
 8011e8e:	b21b      	sxth	r3, r3
 8011e90:	e752      	b.n	8011d38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8011e92:	4565      	cmp	r5, ip
 8011e94:	bfa8      	it	ge
 8011e96:	4665      	movge	r5, ip
 8011e98:	4640      	mov	r0, r8
 8011e9a:	e750      	b.n	8011d3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011e9c:	eb09 0007 	add.w	r0, r9, r7
 8011ea0:	4427      	add	r7, r4
 8011ea2:	9203      	str	r2, [sp, #12]
 8011ea4:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011ea8:	f1ba 0f13 	cmp.w	sl, #19
 8011eac:	bfde      	ittt	le
 8011eae:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8011eb2:	4455      	addle	r5, sl
 8011eb4:	b22d      	sxthle	r5, r5
 8011eb6:	f7f9 f8a4 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011eba:	9a03      	ldr	r2, [sp, #12]
 8011ebc:	2800      	cmp	r0, #0
 8011ebe:	f47f af1b 	bne.w	8011cf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8011ec2:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011ec6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011eca:	482a      	ldr	r0, [pc, #168]	; (8011f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011ecc:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8011ed0:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011ed4:	6800      	ldr	r0, [r0, #0]
 8011ed6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011eda:	1aad      	subs	r5, r5, r2
 8011edc:	2d14      	cmp	r5, #20
 8011ede:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011ee2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011ee6:	bfa8      	it	ge
 8011ee8:	2514      	movge	r5, #20
 8011eea:	f8d0 c000 	ldr.w	ip, [r0]
 8011eee:	b2ad      	uxth	r5, r5
 8011ef0:	fa1f fa8a 	uxth.w	sl, sl
 8011ef4:	4555      	cmp	r5, sl
 8011ef6:	bf94      	ite	ls
 8011ef8:	9500      	strls	r5, [sp, #0]
 8011efa:	f8cd a000 	strhi.w	sl, [sp]
 8011efe:	b292      	uxth	r2, r2
 8011f00:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011f04:	b29b      	uxth	r3, r3
 8011f06:	b289      	uxth	r1, r1
 8011f08:	47a8      	blx	r5
 8011f0a:	6823      	ldr	r3, [r4, #0]
 8011f0c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011f10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011f12:	a907      	add	r1, sp, #28
 8011f14:	4620      	mov	r0, r4
 8011f16:	4798      	blx	r3
 8011f18:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011f1c:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8011f20:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011f24:	1a5b      	subs	r3, r3, r1
 8011f26:	440a      	add	r2, r1
 8011f28:	b21b      	sxth	r3, r3
 8011f2a:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8011f2e:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8011f32:	2b00      	cmp	r3, #0
 8011f34:	f47f aed7 	bne.w	8011ce6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011f38:	fa1f f188 	uxth.w	r1, r8
 8011f3c:	4648      	mov	r0, r9
 8011f3e:	f7ff fa11 	bl	8011364 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011f42:	e6d0      	b.n	8011ce6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011f44:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011f48:	42ab      	cmp	r3, r5
 8011f4a:	f67f ae94 	bls.w	8011c76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011f4e:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011f52:	ab07      	add	r3, sp, #28
 8011f54:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011f58:	6851      	ldr	r1, [r2, #4]
 8011f5a:	c303      	stmia	r3!, {r0, r1}
 8011f5c:	a807      	add	r0, sp, #28
 8011f5e:	f7f9 f850 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011f62:	b920      	cbnz	r0, 8011f6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011f64:	6823      	ldr	r3, [r4, #0]
 8011f66:	a907      	add	r1, sp, #28
 8011f68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011f6a:	4620      	mov	r0, r4
 8011f6c:	4798      	blx	r3
 8011f6e:	3501      	adds	r5, #1
 8011f70:	b2ad      	uxth	r5, r5
 8011f72:	e7e7      	b.n	8011f44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011f74:	200157f4 	.word	0x200157f4

08011f78 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011f78:	4b03      	ldr	r3, [pc, #12]	; (8011f88 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011f7a:	2200      	movs	r2, #0
 8011f7c:	801a      	strh	r2, [r3, #0]
 8011f7e:	805a      	strh	r2, [r3, #2]
 8011f80:	809a      	strh	r2, [r3, #4]
 8011f82:	80da      	strh	r2, [r3, #6]
 8011f84:	4770      	bx	lr
 8011f86:	bf00      	nop
 8011f88:	20015840 	.word	0x20015840

08011f8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f90:	4606      	mov	r6, r0
 8011f92:	b09d      	sub	sp, #116	; 0x74
 8011f94:	a803      	add	r0, sp, #12
 8011f96:	4614      	mov	r4, r2
 8011f98:	468a      	mov	sl, r1
 8011f9a:	461d      	mov	r5, r3
 8011f9c:	f000 fe67 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 8011fa0:	6833      	ldr	r3, [r6, #0]
 8011fa2:	4630      	mov	r0, r6
 8011fa4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011fa6:	4798      	blx	r3
 8011fa8:	6833      	ldr	r3, [r6, #0]
 8011faa:	4607      	mov	r7, r0
 8011fac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011fae:	4630      	mov	r0, r6
 8011fb0:	4798      	blx	r3
 8011fb2:	462a      	mov	r2, r5
 8011fb4:	9000      	str	r0, [sp, #0]
 8011fb6:	4621      	mov	r1, r4
 8011fb8:	463b      	mov	r3, r7
 8011fba:	a803      	add	r0, sp, #12
 8011fbc:	f000 feb2 	bl	8012d24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011fc0:	2500      	movs	r5, #0
 8011fc2:	462c      	mov	r4, r5
 8011fc4:	46a9      	mov	r9, r5
 8011fc6:	46a8      	mov	r8, r5
 8011fc8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011fcc:	2300      	movs	r3, #0
 8011fce:	9302      	str	r3, [sp, #8]
 8011fd0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011fd4:	429c      	cmp	r4, r3
 8011fd6:	d002      	beq.n	8011fde <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011fd8:	455c      	cmp	r4, fp
 8011fda:	bf18      	it	ne
 8011fdc:	4625      	movne	r5, r4
 8011fde:	ab02      	add	r3, sp, #8
 8011fe0:	4632      	mov	r2, r6
 8011fe2:	4651      	mov	r1, sl
 8011fe4:	a803      	add	r0, sp, #12
 8011fe6:	f001 f99f 	bl	8013328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011fea:	4604      	mov	r4, r0
 8011fec:	b108      	cbz	r0, 8011ff2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011fee:	280a      	cmp	r0, #10
 8011ff0:	d10a      	bne.n	8012008 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011ff2:	45c1      	cmp	r9, r8
 8011ff4:	bf38      	it	cc
 8011ff6:	46c1      	movcc	r9, r8
 8011ff8:	f04f 0800 	mov.w	r8, #0
 8011ffc:	2c00      	cmp	r4, #0
 8011ffe:	d1e5      	bne.n	8011fcc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012000:	4648      	mov	r0, r9
 8012002:	b01d      	add	sp, #116	; 0x74
 8012004:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012008:	9a02      	ldr	r2, [sp, #8]
 801200a:	2a00      	cmp	r2, #0
 801200c:	d0de      	beq.n	8011fcc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801200e:	7b57      	ldrb	r7, [r2, #13]
 8012010:	6833      	ldr	r3, [r6, #0]
 8012012:	8894      	ldrh	r4, [r2, #4]
 8012014:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012016:	007f      	lsls	r7, r7, #1
 8012018:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801201c:	7a97      	ldrb	r7, [r2, #10]
 801201e:	4629      	mov	r1, r5
 8012020:	4307      	orrs	r7, r0
 8012022:	4630      	mov	r0, r6
 8012024:	4798      	blx	r3
 8012026:	4438      	add	r0, r7
 8012028:	4480      	add	r8, r0
 801202a:	fa1f f888 	uxth.w	r8, r8
 801202e:	e7e5      	b.n	8011ffc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08012030 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8012030:	b508      	push	{r3, lr}
 8012032:	6803      	ldr	r3, [r0, #0]
 8012034:	68db      	ldr	r3, [r3, #12]
 8012036:	4798      	blx	r3
 8012038:	b128      	cbz	r0, 8012046 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801203a:	7b43      	ldrb	r3, [r0, #13]
 801203c:	7a80      	ldrb	r0, [r0, #10]
 801203e:	005b      	lsls	r3, r3, #1
 8012040:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012044:	4318      	orrs	r0, r3
 8012046:	bd08      	pop	{r3, pc}

08012048 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8012048:	b40e      	push	{r1, r2, r3}
 801204a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801204c:	b09e      	sub	sp, #120	; 0x78
 801204e:	ab23      	add	r3, sp, #140	; 0x8c
 8012050:	4605      	mov	r5, r0
 8012052:	f853 4b04 	ldr.w	r4, [r3], #4
 8012056:	9303      	str	r3, [sp, #12]
 8012058:	a805      	add	r0, sp, #20
 801205a:	f000 fe08 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 801205e:	682b      	ldr	r3, [r5, #0]
 8012060:	4628      	mov	r0, r5
 8012062:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012064:	4798      	blx	r3
 8012066:	682b      	ldr	r3, [r5, #0]
 8012068:	4606      	mov	r6, r0
 801206a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801206c:	4628      	mov	r0, r5
 801206e:	4798      	blx	r3
 8012070:	4633      	mov	r3, r6
 8012072:	ae1e      	add	r6, sp, #120	; 0x78
 8012074:	4621      	mov	r1, r4
 8012076:	9000      	str	r0, [sp, #0]
 8012078:	9a03      	ldr	r2, [sp, #12]
 801207a:	2400      	movs	r4, #0
 801207c:	a805      	add	r0, sp, #20
 801207e:	f000 fe51 	bl	8012d24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012082:	f846 4d68 	str.w	r4, [r6, #-104]!
 8012086:	462a      	mov	r2, r5
 8012088:	4633      	mov	r3, r6
 801208a:	4621      	mov	r1, r4
 801208c:	a805      	add	r0, sp, #20
 801208e:	f001 f94b 	bl	8013328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012092:	b1f0      	cbz	r0, 80120d2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8012094:	280a      	cmp	r0, #10
 8012096:	d018      	beq.n	80120ca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8012098:	9f04      	ldr	r7, [sp, #16]
 801209a:	b1b7      	cbz	r7, 80120ca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801209c:	7b78      	ldrb	r0, [r7, #13]
 801209e:	7a3b      	ldrb	r3, [r7, #8]
 80120a0:	88aa      	ldrh	r2, [r5, #4]
 80120a2:	00c1      	lsls	r1, r0, #3
 80120a4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80120a8:	4319      	orrs	r1, r3
 80120aa:	0643      	lsls	r3, r0, #25
 80120ac:	bf44      	itt	mi
 80120ae:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80120b2:	b219      	sxthmi	r1, r3
 80120b4:	0100      	lsls	r0, r0, #4
 80120b6:	79fb      	ldrb	r3, [r7, #7]
 80120b8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80120bc:	4303      	orrs	r3, r0
 80120be:	4413      	add	r3, r2
 80120c0:	1a5b      	subs	r3, r3, r1
 80120c2:	b29b      	uxth	r3, r3
 80120c4:	42a3      	cmp	r3, r4
 80120c6:	bfc8      	it	gt
 80120c8:	b21c      	sxthgt	r4, r3
 80120ca:	4633      	mov	r3, r6
 80120cc:	462a      	mov	r2, r5
 80120ce:	2100      	movs	r1, #0
 80120d0:	e7dc      	b.n	801208c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80120d2:	b2a0      	uxth	r0, r4
 80120d4:	b01e      	add	sp, #120	; 0x78
 80120d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80120da:	b003      	add	sp, #12
 80120dc:	4770      	bx	lr

080120de <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80120de:	b40e      	push	{r1, r2, r3}
 80120e0:	b570      	push	{r4, r5, r6, lr}
 80120e2:	b09d      	sub	sp, #116	; 0x74
 80120e4:	ab21      	add	r3, sp, #132	; 0x84
 80120e6:	4604      	mov	r4, r0
 80120e8:	f853 5b04 	ldr.w	r5, [r3], #4
 80120ec:	9302      	str	r3, [sp, #8]
 80120ee:	a803      	add	r0, sp, #12
 80120f0:	f000 fdbd 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 80120f4:	6823      	ldr	r3, [r4, #0]
 80120f6:	4620      	mov	r0, r4
 80120f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80120fa:	4798      	blx	r3
 80120fc:	6823      	ldr	r3, [r4, #0]
 80120fe:	4606      	mov	r6, r0
 8012100:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012102:	4620      	mov	r0, r4
 8012104:	4798      	blx	r3
 8012106:	4633      	mov	r3, r6
 8012108:	9000      	str	r0, [sp, #0]
 801210a:	9a02      	ldr	r2, [sp, #8]
 801210c:	4629      	mov	r1, r5
 801210e:	a803      	add	r0, sp, #12
 8012110:	f000 fe08 	bl	8012d24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012114:	a803      	add	r0, sp, #12
 8012116:	f001 f9d5 	bl	80134c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801211a:	2401      	movs	r4, #1
 801211c:	b2a3      	uxth	r3, r4
 801211e:	b140      	cbz	r0, 8012132 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8012120:	280a      	cmp	r0, #10
 8012122:	bf08      	it	eq
 8012124:	3301      	addeq	r3, #1
 8012126:	a803      	add	r0, sp, #12
 8012128:	bf08      	it	eq
 801212a:	b21c      	sxtheq	r4, r3
 801212c:	f001 f9ca 	bl	80134c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012130:	e7f4      	b.n	801211c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8012132:	4618      	mov	r0, r3
 8012134:	b01d      	add	sp, #116	; 0x74
 8012136:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801213a:	b003      	add	sp, #12
 801213c:	4770      	bx	lr

0801213e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801213e:	b40e      	push	{r1, r2, r3}
 8012140:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012142:	b09e      	sub	sp, #120	; 0x78
 8012144:	ab23      	add	r3, sp, #140	; 0x8c
 8012146:	4604      	mov	r4, r0
 8012148:	f853 5b04 	ldr.w	r5, [r3], #4
 801214c:	9303      	str	r3, [sp, #12]
 801214e:	a805      	add	r0, sp, #20
 8012150:	f000 fd8d 	bl	8012c6e <_ZN8touchgfx12TextProviderC1Ev>
 8012154:	6823      	ldr	r3, [r4, #0]
 8012156:	4620      	mov	r0, r4
 8012158:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801215a:	4798      	blx	r3
 801215c:	6823      	ldr	r3, [r4, #0]
 801215e:	4606      	mov	r6, r0
 8012160:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012162:	4620      	mov	r0, r4
 8012164:	4798      	blx	r3
 8012166:	4633      	mov	r3, r6
 8012168:	4629      	mov	r1, r5
 801216a:	9000      	str	r0, [sp, #0]
 801216c:	9a03      	ldr	r2, [sp, #12]
 801216e:	a805      	add	r0, sp, #20
 8012170:	ad1e      	add	r5, sp, #120	; 0x78
 8012172:	f000 fdd7 	bl	8012d24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012176:	2100      	movs	r1, #0
 8012178:	f845 1d68 	str.w	r1, [r5, #-104]!
 801217c:	4622      	mov	r2, r4
 801217e:	462b      	mov	r3, r5
 8012180:	a805      	add	r0, sp, #20
 8012182:	f001 f8d1 	bl	8013328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012186:	26ff      	movs	r6, #255	; 0xff
 8012188:	b1d8      	cbz	r0, 80121c2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 801218a:	280a      	cmp	r0, #10
 801218c:	d012      	beq.n	80121b4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801218e:	9804      	ldr	r0, [sp, #16]
 8012190:	b180      	cbz	r0, 80121b4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8012192:	7b47      	ldrb	r7, [r0, #13]
 8012194:	7922      	ldrb	r2, [r4, #4]
 8012196:	00fb      	lsls	r3, r7, #3
 8012198:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801219c:	7a03      	ldrb	r3, [r0, #8]
 801219e:	430b      	orrs	r3, r1
 80121a0:	0679      	lsls	r1, r7, #25
 80121a2:	bf44      	itt	mi
 80121a4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80121a8:	b21b      	sxthmi	r3, r3
 80121aa:	1ad3      	subs	r3, r2, r3
 80121ac:	b2db      	uxtb	r3, r3
 80121ae:	429e      	cmp	r6, r3
 80121b0:	bf28      	it	cs
 80121b2:	461e      	movcs	r6, r3
 80121b4:	462b      	mov	r3, r5
 80121b6:	4622      	mov	r2, r4
 80121b8:	2100      	movs	r1, #0
 80121ba:	a805      	add	r0, sp, #20
 80121bc:	f001 f8b4 	bl	8013328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80121c0:	e7e2      	b.n	8012188 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 80121c2:	4630      	mov	r0, r6
 80121c4:	b01e      	add	sp, #120	; 0x78
 80121c6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80121ca:	b003      	add	sp, #12
 80121cc:	4770      	bx	lr

080121ce <_ZNK8touchgfx8Drawable10invalidateEv>:
 80121ce:	b513      	push	{r0, r1, r4, lr}
 80121d0:	6803      	ldr	r3, [r0, #0]
 80121d2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80121d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80121da:	f8ad 1004 	strh.w	r1, [sp, #4]
 80121de:	2400      	movs	r4, #0
 80121e0:	9400      	str	r4, [sp, #0]
 80121e2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80121e6:	691b      	ldr	r3, [r3, #16]
 80121e8:	4669      	mov	r1, sp
 80121ea:	4798      	blx	r3
 80121ec:	b002      	add	sp, #8
 80121ee:	bd10      	pop	{r4, pc}

080121f0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80121f0:	b538      	push	{r3, r4, r5, lr}
 80121f2:	680b      	ldr	r3, [r1, #0]
 80121f4:	460c      	mov	r4, r1
 80121f6:	68db      	ldr	r3, [r3, #12]
 80121f8:	4605      	mov	r5, r0
 80121fa:	4798      	blx	r3
 80121fc:	6823      	ldr	r3, [r4, #0]
 80121fe:	4620      	mov	r0, r4
 8012200:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012202:	4629      	mov	r1, r5
 8012204:	4798      	blx	r3
 8012206:	4628      	mov	r0, r5
 8012208:	bd38      	pop	{r3, r4, r5, pc}

0801220a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801220a:	b410      	push	{r4}
 801220c:	880a      	ldrh	r2, [r1, #0]
 801220e:	8884      	ldrh	r4, [r0, #4]
 8012210:	4422      	add	r2, r4
 8012212:	800a      	strh	r2, [r1, #0]
 8012214:	88c4      	ldrh	r4, [r0, #6]
 8012216:	884a      	ldrh	r2, [r1, #2]
 8012218:	4422      	add	r2, r4
 801221a:	804a      	strh	r2, [r1, #2]
 801221c:	6940      	ldr	r0, [r0, #20]
 801221e:	b120      	cbz	r0, 801222a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8012220:	6803      	ldr	r3, [r0, #0]
 8012222:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012226:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012228:	4718      	bx	r3
 801222a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801222e:	4770      	bx	lr

08012230 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012230:	b570      	push	{r4, r5, r6, lr}
 8012232:	8882      	ldrh	r2, [r0, #4]
 8012234:	880b      	ldrh	r3, [r1, #0]
 8012236:	4413      	add	r3, r2
 8012238:	800b      	strh	r3, [r1, #0]
 801223a:	88c2      	ldrh	r2, [r0, #6]
 801223c:	884b      	ldrh	r3, [r1, #2]
 801223e:	460c      	mov	r4, r1
 8012240:	4413      	add	r3, r2
 8012242:	804b      	strh	r3, [r1, #2]
 8012244:	4605      	mov	r5, r0
 8012246:	1d01      	adds	r1, r0, #4
 8012248:	4620      	mov	r0, r4
 801224a:	f7f8 fe97 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 801224e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012252:	2b00      	cmp	r3, #0
 8012254:	dd0b      	ble.n	801226e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012256:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801225a:	2b00      	cmp	r3, #0
 801225c:	dd07      	ble.n	801226e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801225e:	6968      	ldr	r0, [r5, #20]
 8012260:	b128      	cbz	r0, 801226e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012262:	6803      	ldr	r3, [r0, #0]
 8012264:	4621      	mov	r1, r4
 8012266:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012268:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801226c:	4718      	bx	r3
 801226e:	bd70      	pop	{r4, r5, r6, pc}

08012270 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012270:	b570      	push	{r4, r5, r6, lr}
 8012272:	8882      	ldrh	r2, [r0, #4]
 8012274:	880b      	ldrh	r3, [r1, #0]
 8012276:	4413      	add	r3, r2
 8012278:	800b      	strh	r3, [r1, #0]
 801227a:	88c2      	ldrh	r2, [r0, #6]
 801227c:	884b      	ldrh	r3, [r1, #2]
 801227e:	460c      	mov	r4, r1
 8012280:	4413      	add	r3, r2
 8012282:	804b      	strh	r3, [r1, #2]
 8012284:	4605      	mov	r5, r0
 8012286:	1d01      	adds	r1, r0, #4
 8012288:	4620      	mov	r0, r4
 801228a:	f7f8 fe77 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 801228e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012292:	2b00      	cmp	r3, #0
 8012294:	dd18      	ble.n	80122c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012296:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801229a:	2b00      	cmp	r3, #0
 801229c:	dd14      	ble.n	80122c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801229e:	6968      	ldr	r0, [r5, #20]
 80122a0:	b128      	cbz	r0, 80122ae <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80122a2:	6803      	ldr	r3, [r0, #0]
 80122a4:	4621      	mov	r1, r4
 80122a6:	691b      	ldr	r3, [r3, #16]
 80122a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80122ac:	4718      	bx	r3
 80122ae:	4b07      	ldr	r3, [pc, #28]	; (80122cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80122b0:	681b      	ldr	r3, [r3, #0]
 80122b2:	3304      	adds	r3, #4
 80122b4:	429d      	cmp	r5, r3
 80122b6:	d107      	bne.n	80122c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80122b8:	f7fe fff2 	bl	80112a0 <_ZN8touchgfx11Application11getInstanceEv>
 80122bc:	6821      	ldr	r1, [r4, #0]
 80122be:	6862      	ldr	r2, [r4, #4]
 80122c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80122c4:	f7ff b862 	b.w	801138c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80122c8:	bd70      	pop	{r4, r5, r6, pc}
 80122ca:	bf00      	nop
 80122cc:	20015838 	.word	0x20015838

080122d0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80122d0:	b570      	push	{r4, r5, r6, lr}
 80122d2:	4604      	mov	r4, r0
 80122d4:	4616      	mov	r6, r2
 80122d6:	460d      	mov	r5, r1
 80122d8:	b901      	cbnz	r1, 80122dc <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80122da:	b192      	cbz	r2, 8012302 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80122dc:	6823      	ldr	r3, [r4, #0]
 80122de:	4620      	mov	r0, r4
 80122e0:	699b      	ldr	r3, [r3, #24]
 80122e2:	4798      	blx	r3
 80122e4:	88e2      	ldrh	r2, [r4, #6]
 80122e6:	88a1      	ldrh	r1, [r4, #4]
 80122e8:	4432      	add	r2, r6
 80122ea:	4429      	add	r1, r5
 80122ec:	4620      	mov	r0, r4
 80122ee:	b212      	sxth	r2, r2
 80122f0:	b209      	sxth	r1, r1
 80122f2:	f7f0 fdb5 	bl	8002e60 <_ZN8touchgfx8Drawable5setXYEss>
 80122f6:	6823      	ldr	r3, [r4, #0]
 80122f8:	4620      	mov	r0, r4
 80122fa:	699b      	ldr	r3, [r3, #24]
 80122fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012300:	4718      	bx	r3
 8012302:	bd70      	pop	{r4, r5, r6, pc}

08012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8012304:	b510      	push	{r4, lr}
 8012306:	4604      	mov	r4, r0
 8012308:	4608      	mov	r0, r1
 801230a:	2300      	movs	r3, #0
 801230c:	8023      	strh	r3, [r4, #0]
 801230e:	8063      	strh	r3, [r4, #2]
 8012310:	6803      	ldr	r3, [r0, #0]
 8012312:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012316:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801231a:	80a1      	strh	r1, [r4, #4]
 801231c:	80e2      	strh	r2, [r4, #6]
 801231e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012320:	4621      	mov	r1, r4
 8012322:	4798      	blx	r3
 8012324:	4620      	mov	r0, r4
 8012326:	bd10      	pop	{r4, pc}

08012328 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8012328:	b530      	push	{r4, r5, lr}
 801232a:	8083      	strh	r3, [r0, #4]
 801232c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8012330:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8012334:	7183      	strb	r3, [r0, #6]
 8012336:	79c3      	ldrb	r3, [r0, #7]
 8012338:	6101      	str	r1, [r0, #16]
 801233a:	f365 0306 	bfi	r3, r5, #0, #7
 801233e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8012342:	8282      	strh	r2, [r0, #20]
 8012344:	f365 13c7 	bfi	r3, r5, #7, #1
 8012348:	71c3      	strb	r3, [r0, #7]
 801234a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801234e:	7203      	strb	r3, [r0, #8]
 8012350:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8012354:	7243      	strb	r3, [r0, #9]
 8012356:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801235a:	8143      	strh	r3, [r0, #10]
 801235c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012360:	8183      	strh	r3, [r0, #12]
 8012362:	4b01      	ldr	r3, [pc, #4]	; (8012368 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012364:	6003      	str	r3, [r0, #0]
 8012366:	bd30      	pop	{r4, r5, pc}
 8012368:	0802459c 	.word	0x0802459c

0801236c <_ZNK8touchgfx9ConstFont4findEt>:
 801236c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801236e:	6904      	ldr	r4, [r0, #16]
 8012370:	b3bc      	cbz	r4, 80123e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012372:	88a3      	ldrh	r3, [r4, #4]
 8012374:	8a82      	ldrh	r2, [r0, #20]
 8012376:	1acb      	subs	r3, r1, r3
 8012378:	f102 32ff 	add.w	r2, r2, #4294967295
 801237c:	d431      	bmi.n	80123e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801237e:	4293      	cmp	r3, r2
 8012380:	dd0c      	ble.n	801239c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012382:	230e      	movs	r3, #14
 8012384:	fb03 4302 	mla	r3, r3, r2, r4
 8012388:	889b      	ldrh	r3, [r3, #4]
 801238a:	1a5b      	subs	r3, r3, r1
 801238c:	1ad3      	subs	r3, r2, r3
 801238e:	429a      	cmp	r2, r3
 8012390:	db27      	blt.n	80123e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012392:	2b00      	cmp	r3, #0
 8012394:	bfbc      	itt	lt
 8012396:	2302      	movlt	r3, #2
 8012398:	fb92 f3f3 	sdivlt	r3, r2, r3
 801239c:	2500      	movs	r5, #0
 801239e:	260e      	movs	r6, #14
 80123a0:	4295      	cmp	r5, r2
 80123a2:	dc1e      	bgt.n	80123e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80123a4:	fb06 4003 	mla	r0, r6, r3, r4
 80123a8:	8887      	ldrh	r7, [r0, #4]
 80123aa:	42b9      	cmp	r1, r7
 80123ac:	d01a      	beq.n	80123e4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80123ae:	d20d      	bcs.n	80123cc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80123b0:	1e5a      	subs	r2, r3, #1
 80123b2:	4295      	cmp	r5, r2
 80123b4:	dc15      	bgt.n	80123e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80123b6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80123ba:	1a5b      	subs	r3, r3, r1
 80123bc:	1ad3      	subs	r3, r2, r3
 80123be:	429a      	cmp	r2, r3
 80123c0:	db0f      	blt.n	80123e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80123c2:	429d      	cmp	r5, r3
 80123c4:	ddec      	ble.n	80123a0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80123c6:	1953      	adds	r3, r2, r5
 80123c8:	105b      	asrs	r3, r3, #1
 80123ca:	e7e9      	b.n	80123a0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80123cc:	1c5d      	adds	r5, r3, #1
 80123ce:	42aa      	cmp	r2, r5
 80123d0:	db07      	blt.n	80123e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80123d2:	8a43      	ldrh	r3, [r0, #18]
 80123d4:	1acb      	subs	r3, r1, r3
 80123d6:	442b      	add	r3, r5
 80123d8:	429d      	cmp	r5, r3
 80123da:	dc02      	bgt.n	80123e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80123dc:	429a      	cmp	r2, r3
 80123de:	dadf      	bge.n	80123a0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80123e0:	e7f1      	b.n	80123c6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80123e2:	2000      	movs	r0, #0
 80123e4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080123e6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80123e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80123e8:	4604      	mov	r4, r0
 80123ea:	4617      	mov	r7, r2
 80123ec:	461e      	mov	r6, r3
 80123ee:	b911      	cbnz	r1, 80123f6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80123f0:	2500      	movs	r5, #0
 80123f2:	4628      	mov	r0, r5
 80123f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80123f6:	290a      	cmp	r1, #10
 80123f8:	d0fa      	beq.n	80123f0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80123fa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80123fe:	4291      	cmp	r1, r2
 8012400:	d0f6      	beq.n	80123f0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012402:	f242 020b 	movw	r2, #8203	; 0x200b
 8012406:	4291      	cmp	r1, r2
 8012408:	d0f2      	beq.n	80123f0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801240a:	f7ff ffaf 	bl	801236c <_ZNK8touchgfx9ConstFont4findEt>
 801240e:	4605      	mov	r5, r0
 8012410:	b950      	cbnz	r0, 8012428 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8012412:	6823      	ldr	r3, [r4, #0]
 8012414:	4620      	mov	r0, r4
 8012416:	691b      	ldr	r3, [r3, #16]
 8012418:	4798      	blx	r3
 801241a:	4601      	mov	r1, r0
 801241c:	4620      	mov	r0, r4
 801241e:	f7ff ffa5 	bl	801236c <_ZNK8touchgfx9ConstFont4findEt>
 8012422:	4605      	mov	r5, r0
 8012424:	2800      	cmp	r0, #0
 8012426:	d0e3      	beq.n	80123f0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012428:	6823      	ldr	r3, [r4, #0]
 801242a:	4629      	mov	r1, r5
 801242c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801242e:	4620      	mov	r0, r4
 8012430:	4798      	blx	r3
 8012432:	6038      	str	r0, [r7, #0]
 8012434:	6823      	ldr	r3, [r4, #0]
 8012436:	4620      	mov	r0, r4
 8012438:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801243a:	4798      	blx	r3
 801243c:	7030      	strb	r0, [r6, #0]
 801243e:	e7d8      	b.n	80123f2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012440 <_ZN8touchgfx4clzuEm>:
 8012440:	4603      	mov	r3, r0
 8012442:	b1c8      	cbz	r0, 8012478 <_ZN8touchgfx4clzuEm+0x38>
 8012444:	0c02      	lsrs	r2, r0, #16
 8012446:	0412      	lsls	r2, r2, #16
 8012448:	b9a2      	cbnz	r2, 8012474 <_ZN8touchgfx4clzuEm+0x34>
 801244a:	0403      	lsls	r3, r0, #16
 801244c:	2010      	movs	r0, #16
 801244e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012452:	bf04      	itt	eq
 8012454:	021b      	lsleq	r3, r3, #8
 8012456:	3008      	addeq	r0, #8
 8012458:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801245c:	bf04      	itt	eq
 801245e:	011b      	lsleq	r3, r3, #4
 8012460:	3004      	addeq	r0, #4
 8012462:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012466:	bf04      	itt	eq
 8012468:	009b      	lsleq	r3, r3, #2
 801246a:	3002      	addeq	r0, #2
 801246c:	2b00      	cmp	r3, #0
 801246e:	db04      	blt.n	801247a <_ZN8touchgfx4clzuEm+0x3a>
 8012470:	3001      	adds	r0, #1
 8012472:	4770      	bx	lr
 8012474:	2000      	movs	r0, #0
 8012476:	e7ea      	b.n	801244e <_ZN8touchgfx4clzuEm+0xe>
 8012478:	2020      	movs	r0, #32
 801247a:	4770      	bx	lr

0801247c <_ZN8touchgfx7muldivuEmmmRm>:
 801247c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012480:	4680      	mov	r8, r0
 8012482:	460f      	mov	r7, r1
 8012484:	4615      	mov	r5, r2
 8012486:	461e      	mov	r6, r3
 8012488:	f7ff ffda 	bl	8012440 <_ZN8touchgfx4clzuEm>
 801248c:	b998      	cbnz	r0, 80124b6 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801248e:	4608      	mov	r0, r1
 8012490:	f7ff ffd6 	bl	8012440 <_ZN8touchgfx4clzuEm>
 8012494:	2800      	cmp	r0, #0
 8012496:	dd08      	ble.n	80124aa <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012498:	4633      	mov	r3, r6
 801249a:	462a      	mov	r2, r5
 801249c:	4641      	mov	r1, r8
 801249e:	4638      	mov	r0, r7
 80124a0:	f7ff ffec 	bl	801247c <_ZN8touchgfx7muldivuEmmmRm>
 80124a4:	b003      	add	sp, #12
 80124a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124aa:	f04f 33ff 	mov.w	r3, #4294967295
 80124ae:	6033      	str	r3, [r6, #0]
 80124b0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80124b4:	e7f6      	b.n	80124a4 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80124b6:	fa31 f900 	lsrs.w	r9, r1, r0
 80124ba:	fb01 f308 	mul.w	r3, r1, r8
 80124be:	d105      	bne.n	80124cc <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80124c0:	fbb3 f0f5 	udiv	r0, r3, r5
 80124c4:	fb05 3510 	mls	r5, r5, r0, r3
 80124c8:	6035      	str	r5, [r6, #0]
 80124ca:	e7eb      	b.n	80124a4 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80124cc:	2301      	movs	r3, #1
 80124ce:	fa08 fb00 	lsl.w	fp, r8, r0
 80124d2:	fa03 f000 	lsl.w	r0, r3, r0
 80124d6:	3801      	subs	r0, #1
 80124d8:	462a      	mov	r2, r5
 80124da:	4633      	mov	r3, r6
 80124dc:	4641      	mov	r1, r8
 80124de:	4038      	ands	r0, r7
 80124e0:	f7ff ffcc 	bl	801247c <_ZN8touchgfx7muldivuEmmmRm>
 80124e4:	fbbb faf5 	udiv	sl, fp, r5
 80124e8:	462a      	mov	r2, r5
 80124ea:	4607      	mov	r7, r0
 80124ec:	ab01      	add	r3, sp, #4
 80124ee:	fb05 b11a 	mls	r1, r5, sl, fp
 80124f2:	4648      	mov	r0, r9
 80124f4:	f7ff ffc2 	bl	801247c <_ZN8touchgfx7muldivuEmmmRm>
 80124f8:	9b01      	ldr	r3, [sp, #4]
 80124fa:	6832      	ldr	r2, [r6, #0]
 80124fc:	fb09 f40a 	mul.w	r4, r9, sl
 8012500:	441a      	add	r2, r3
 8012502:	fbb2 f3f5 	udiv	r3, r2, r5
 8012506:	441c      	add	r4, r3
 8012508:	443c      	add	r4, r7
 801250a:	4420      	add	r0, r4
 801250c:	fb05 2513 	mls	r5, r5, r3, r2
 8012510:	e7da      	b.n	80124c8 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08012512 <_ZN8touchgfx6muldivElllRl>:
 8012512:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012514:	2800      	cmp	r0, #0
 8012516:	bfba      	itte	lt
 8012518:	4240      	neglt	r0, r0
 801251a:	f04f 34ff 	movlt.w	r4, #4294967295
 801251e:	2401      	movge	r4, #1
 8012520:	2900      	cmp	r1, #0
 8012522:	bfbc      	itt	lt
 8012524:	4249      	neglt	r1, r1
 8012526:	4264      	neglt	r4, r4
 8012528:	2a00      	cmp	r2, #0
 801252a:	bfb6      	itet	lt
 801252c:	4265      	neglt	r5, r4
 801252e:	4625      	movge	r5, r4
 8012530:	4252      	neglt	r2, r2
 8012532:	4288      	cmp	r0, r1
 8012534:	461e      	mov	r6, r3
 8012536:	bfc2      	ittt	gt
 8012538:	4603      	movgt	r3, r0
 801253a:	4608      	movgt	r0, r1
 801253c:	4619      	movgt	r1, r3
 801253e:	ab01      	add	r3, sp, #4
 8012540:	f7ff ff9c 	bl	801247c <_ZN8touchgfx7muldivuEmmmRm>
 8012544:	9b01      	ldr	r3, [sp, #4]
 8012546:	4368      	muls	r0, r5
 8012548:	435c      	muls	r4, r3
 801254a:	6034      	str	r4, [r6, #0]
 801254c:	b002      	add	sp, #8
 801254e:	bd70      	pop	{r4, r5, r6, pc}

08012550 <_ZN8touchgfx6muldivElll>:
 8012550:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012552:	4606      	mov	r6, r0
 8012554:	ab01      	add	r3, sp, #4
 8012556:	460d      	mov	r5, r1
 8012558:	4614      	mov	r4, r2
 801255a:	f7ff ffda 	bl	8012512 <_ZN8touchgfx6muldivElllRl>
 801255e:	2e00      	cmp	r6, #0
 8012560:	db20      	blt.n	80125a4 <_ZN8touchgfx6muldivElll+0x54>
 8012562:	bf14      	ite	ne
 8012564:	2301      	movne	r3, #1
 8012566:	2300      	moveq	r3, #0
 8012568:	2d00      	cmp	r5, #0
 801256a:	db1e      	blt.n	80125aa <_ZN8touchgfx6muldivElll+0x5a>
 801256c:	bf14      	ite	ne
 801256e:	2201      	movne	r2, #1
 8012570:	2200      	moveq	r2, #0
 8012572:	2c00      	cmp	r4, #0
 8012574:	fb03 f202 	mul.w	r2, r3, r2
 8012578:	db1a      	blt.n	80125b0 <_ZN8touchgfx6muldivElll+0x60>
 801257a:	bf14      	ite	ne
 801257c:	2301      	movne	r3, #1
 801257e:	2300      	moveq	r3, #0
 8012580:	4353      	muls	r3, r2
 8012582:	2b01      	cmp	r3, #1
 8012584:	d117      	bne.n	80125b6 <_ZN8touchgfx6muldivElll+0x66>
 8012586:	9b01      	ldr	r3, [sp, #4]
 8012588:	2c00      	cmp	r4, #0
 801258a:	bfb8      	it	lt
 801258c:	4264      	neglt	r4, r4
 801258e:	2b00      	cmp	r3, #0
 8012590:	f104 0401 	add.w	r4, r4, #1
 8012594:	bfb8      	it	lt
 8012596:	425b      	neglt	r3, r3
 8012598:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801259c:	db00      	blt.n	80125a0 <_ZN8touchgfx6muldivElll+0x50>
 801259e:	3001      	adds	r0, #1
 80125a0:	b002      	add	sp, #8
 80125a2:	bd70      	pop	{r4, r5, r6, pc}
 80125a4:	f04f 33ff 	mov.w	r3, #4294967295
 80125a8:	e7de      	b.n	8012568 <_ZN8touchgfx6muldivElll+0x18>
 80125aa:	f04f 32ff 	mov.w	r2, #4294967295
 80125ae:	e7e0      	b.n	8012572 <_ZN8touchgfx6muldivElll+0x22>
 80125b0:	f04f 33ff 	mov.w	r3, #4294967295
 80125b4:	e7e4      	b.n	8012580 <_ZN8touchgfx6muldivElll+0x30>
 80125b6:	3301      	adds	r3, #1
 80125b8:	d1f2      	bne.n	80125a0 <_ZN8touchgfx6muldivElll+0x50>
 80125ba:	9b01      	ldr	r3, [sp, #4]
 80125bc:	2c00      	cmp	r4, #0
 80125be:	bfb8      	it	lt
 80125c0:	4264      	neglt	r4, r4
 80125c2:	2b00      	cmp	r3, #0
 80125c4:	bfb8      	it	lt
 80125c6:	425b      	neglt	r3, r3
 80125c8:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80125cc:	bfc8      	it	gt
 80125ce:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80125d2:	e7e5      	b.n	80125a0 <_ZN8touchgfx6muldivElll+0x50>

080125d4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80125d4:	2000      	movs	r0, #0
 80125d6:	4770      	bx	lr

080125d8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80125d8:	2001      	movs	r0, #1
 80125da:	4770      	bx	lr

080125dc <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80125dc:	2002      	movs	r0, #2
 80125de:	4770      	bx	lr

080125e0 <_ZN8touchgfx6ScreenD1Ev>:
 80125e0:	4770      	bx	lr

080125e2 <_ZN8touchgfx12GestureEventD1Ev>:
 80125e2:	4770      	bx	lr

080125e4 <_ZN8touchgfx9DragEventD1Ev>:
 80125e4:	4770      	bx	lr

080125e6 <_ZN8touchgfx10ClickEventD1Ev>:
 80125e6:	4770      	bx	lr

080125e8 <_ZN8touchgfx10ClickEventD0Ev>:
 80125e8:	b510      	push	{r4, lr}
 80125ea:	210c      	movs	r1, #12
 80125ec:	4604      	mov	r4, r0
 80125ee:	f00e f973 	bl	80208d8 <_ZdlPvj>
 80125f2:	4620      	mov	r0, r4
 80125f4:	bd10      	pop	{r4, pc}

080125f6 <_ZN8touchgfx9DragEventD0Ev>:
 80125f6:	b510      	push	{r4, lr}
 80125f8:	2110      	movs	r1, #16
 80125fa:	4604      	mov	r4, r0
 80125fc:	f00e f96c 	bl	80208d8 <_ZdlPvj>
 8012600:	4620      	mov	r0, r4
 8012602:	bd10      	pop	{r4, pc}

08012604 <_ZN8touchgfx12GestureEventD0Ev>:
 8012604:	b510      	push	{r4, lr}
 8012606:	210c      	movs	r1, #12
 8012608:	4604      	mov	r4, r0
 801260a:	f00e f965 	bl	80208d8 <_ZdlPvj>
 801260e:	4620      	mov	r0, r4
 8012610:	bd10      	pop	{r4, pc}

08012612 <_ZN8touchgfx6ScreenD0Ev>:
 8012612:	b510      	push	{r4, lr}
 8012614:	213c      	movs	r1, #60	; 0x3c
 8012616:	4604      	mov	r4, r0
 8012618:	f00e f95e 	bl	80208d8 <_ZdlPvj>
 801261c:	4620      	mov	r0, r4
 801261e:	bd10      	pop	{r4, pc}

08012620 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012620:	b530      	push	{r4, r5, lr}
 8012622:	460d      	mov	r5, r1
 8012624:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012626:	b087      	sub	sp, #28
 8012628:	4604      	mov	r4, r0
 801262a:	b301      	cbz	r1, 801266e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801262c:	a801      	add	r0, sp, #4
 801262e:	f7ff fe69 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012632:	892a      	ldrh	r2, [r5, #8]
 8012634:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012638:	7928      	ldrb	r0, [r5, #4]
 801263a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801263e:	f88d 0010 	strb.w	r0, [sp, #16]
 8012642:	1ad2      	subs	r2, r2, r3
 8012644:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012646:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012648:	f8ad 1012 	strh.w	r1, [sp, #18]
 801264c:	441a      	add	r2, r3
 801264e:	896b      	ldrh	r3, [r5, #10]
 8012650:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012654:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012658:	1b5b      	subs	r3, r3, r5
 801265a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801265c:	442b      	add	r3, r5
 801265e:	4d05      	ldr	r5, [pc, #20]	; (8012674 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012660:	9503      	str	r5, [sp, #12]
 8012662:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012666:	6803      	ldr	r3, [r0, #0]
 8012668:	a903      	add	r1, sp, #12
 801266a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801266c:	4798      	blx	r3
 801266e:	b007      	add	sp, #28
 8012670:	bd30      	pop	{r4, r5, pc}
 8012672:	bf00      	nop
 8012674:	0802461c 	.word	0x0802461c

08012678 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012678:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801267c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801267e:	b08a      	sub	sp, #40	; 0x28
 8012680:	4604      	mov	r4, r0
 8012682:	460d      	mov	r5, r1
 8012684:	b113      	cbz	r3, 801268c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012686:	790b      	ldrb	r3, [r1, #4]
 8012688:	2b00      	cmp	r3, #0
 801268a:	d044      	beq.n	8012716 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801268c:	f104 0804 	add.w	r8, r4, #4
 8012690:	4641      	mov	r1, r8
 8012692:	a803      	add	r0, sp, #12
 8012694:	f7ff fe36 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012698:	792b      	ldrb	r3, [r5, #4]
 801269a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801269e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80126a2:	b983      	cbnz	r3, 80126c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80126a4:	892a      	ldrh	r2, [r5, #8]
 80126a6:	88e9      	ldrh	r1, [r5, #6]
 80126a8:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80126ac:	1b92      	subs	r2, r2, r6
 80126ae:	1bc9      	subs	r1, r1, r7
 80126b0:	9301      	str	r3, [sp, #4]
 80126b2:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80126b6:	9300      	str	r3, [sp, #0]
 80126b8:	b212      	sxth	r2, r2
 80126ba:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80126be:	b209      	sxth	r1, r1
 80126c0:	4640      	mov	r0, r8
 80126c2:	f7f8 fb77 	bl	800adb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80126c6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80126c8:	b329      	cbz	r1, 8012716 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80126ca:	a805      	add	r0, sp, #20
 80126cc:	f7ff fe1a 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80126d0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80126d4:	792b      	ldrb	r3, [r5, #4]
 80126d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80126d8:	f88d 3020 	strb.w	r3, [sp, #32]
 80126dc:	1abf      	subs	r7, r7, r2
 80126de:	88ea      	ldrh	r2, [r5, #6]
 80126e0:	4417      	add	r7, r2
 80126e2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80126e4:	4417      	add	r7, r2
 80126e6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80126ea:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80126ee:	1ab6      	subs	r6, r6, r2
 80126f0:	892a      	ldrh	r2, [r5, #8]
 80126f2:	4416      	add	r6, r2
 80126f4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80126f6:	4416      	add	r6, r2
 80126f8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80126fc:	4a07      	ldr	r2, [pc, #28]	; (801271c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80126fe:	9207      	str	r2, [sp, #28]
 8012700:	2600      	movs	r6, #0
 8012702:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012706:	6803      	ldr	r3, [r0, #0]
 8012708:	a907      	add	r1, sp, #28
 801270a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801270c:	4798      	blx	r3
 801270e:	792b      	ldrb	r3, [r5, #4]
 8012710:	b10b      	cbz	r3, 8012716 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012712:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012716:	b00a      	add	sp, #40	; 0x28
 8012718:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801271c:	080245f4 	.word	0x080245f4

08012720 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012720:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012724:	460c      	mov	r4, r1
 8012726:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012728:	b088      	sub	sp, #32
 801272a:	4605      	mov	r5, r0
 801272c:	2900      	cmp	r1, #0
 801272e:	d06d      	beq.n	801280c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012730:	4668      	mov	r0, sp
 8012732:	f7ff fde7 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012736:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012738:	88e3      	ldrh	r3, [r4, #6]
 801273a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801273e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012742:	440b      	add	r3, r1
 8012744:	b21b      	sxth	r3, r3
 8012746:	4543      	cmp	r3, r8
 8012748:	db31      	blt.n	80127ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801274a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801274e:	44c4      	add	ip, r8
 8012750:	fa0f fc8c 	sxth.w	ip, ip
 8012754:	4563      	cmp	r3, ip
 8012756:	da2a      	bge.n	80127ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012758:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801275a:	8926      	ldrh	r6, [r4, #8]
 801275c:	4416      	add	r6, r2
 801275e:	b236      	sxth	r6, r6
 8012760:	42be      	cmp	r6, r7
 8012762:	db24      	blt.n	80127ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012764:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012768:	4438      	add	r0, r7
 801276a:	b200      	sxth	r0, r0
 801276c:	4286      	cmp	r6, r0
 801276e:	da1e      	bge.n	80127ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012770:	8963      	ldrh	r3, [r4, #10]
 8012772:	4419      	add	r1, r3
 8012774:	b209      	sxth	r1, r1
 8012776:	4541      	cmp	r1, r8
 8012778:	db08      	blt.n	801278c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801277a:	4561      	cmp	r1, ip
 801277c:	da06      	bge.n	801278c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801277e:	89a3      	ldrh	r3, [r4, #12]
 8012780:	441a      	add	r2, r3
 8012782:	b212      	sxth	r2, r2
 8012784:	42ba      	cmp	r2, r7
 8012786:	db01      	blt.n	801278c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012788:	4282      	cmp	r2, r0
 801278a:	db10      	blt.n	80127ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801278c:	4b21      	ldr	r3, [pc, #132]	; (8012814 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801278e:	9304      	str	r3, [sp, #16]
 8012790:	2302      	movs	r3, #2
 8012792:	f88d 3014 	strb.w	r3, [sp, #20]
 8012796:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012798:	2300      	movs	r3, #0
 801279a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801279e:	f8ad 3018 	strh.w	r3, [sp, #24]
 80127a2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80127a6:	6803      	ldr	r3, [r0, #0]
 80127a8:	a904      	add	r1, sp, #16
 80127aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80127ac:	4798      	blx	r3
 80127ae:	1d29      	adds	r1, r5, #4
 80127b0:	a802      	add	r0, sp, #8
 80127b2:	f7ff fda7 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80127b6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80127ba:	88e0      	ldrh	r0, [r4, #6]
 80127bc:	7921      	ldrb	r1, [r4, #4]
 80127be:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80127c2:	8922      	ldrh	r2, [r4, #8]
 80127c4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80127c6:	f88d 1014 	strb.w	r1, [sp, #20]
 80127ca:	eba3 0808 	sub.w	r8, r3, r8
 80127ce:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80127d2:	1bdf      	subs	r7, r3, r7
 80127d4:	b2bb      	uxth	r3, r7
 80127d6:	fa1f f888 	uxth.w	r8, r8
 80127da:	8967      	ldrh	r7, [r4, #10]
 80127dc:	89a4      	ldrh	r4, [r4, #12]
 80127de:	4440      	add	r0, r8
 80127e0:	4460      	add	r0, ip
 80127e2:	441a      	add	r2, r3
 80127e4:	44b8      	add	r8, r7
 80127e6:	4423      	add	r3, r4
 80127e8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80127ec:	4433      	add	r3, r6
 80127ee:	4432      	add	r2, r6
 80127f0:	44e0      	add	r8, ip
 80127f2:	4c09      	ldr	r4, [pc, #36]	; (8012818 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80127f4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80127f6:	9404      	str	r4, [sp, #16]
 80127f8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80127fc:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012800:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012804:	6803      	ldr	r3, [r0, #0]
 8012806:	a904      	add	r1, sp, #16
 8012808:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801280a:	4798      	blx	r3
 801280c:	b008      	add	sp, #32
 801280e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012812:	bf00      	nop
 8012814:	080245f4 	.word	0x080245f4
 8012818:	08024608 	.word	0x08024608

0801281c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801281c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801281e:	4604      	mov	r4, r0
 8012820:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012824:	3201      	adds	r2, #1
 8012826:	d112      	bne.n	801284e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012828:	6803      	ldr	r3, [r0, #0]
 801282a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801282e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012832:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012836:	2500      	movs	r5, #0
 8012838:	9500      	str	r5, [sp, #0]
 801283a:	466d      	mov	r5, sp
 801283c:	4629      	mov	r1, r5
 801283e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012842:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012844:	4798      	blx	r3
 8012846:	e895 0003 	ldmia.w	r5, {r0, r1}
 801284a:	e884 0003 	stmia.w	r4, {r0, r1}
 801284e:	4620      	mov	r0, r4
 8012850:	b003      	add	sp, #12
 8012852:	bd30      	pop	{r4, r5, pc}

08012854 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012854:	b513      	push	{r0, r1, r4, lr}
 8012856:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801285a:	3301      	adds	r3, #1
 801285c:	4604      	mov	r4, r0
 801285e:	d109      	bne.n	8012874 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012860:	4601      	mov	r1, r0
 8012862:	4668      	mov	r0, sp
 8012864:	f7ff fd4e 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012868:	f8bd 3000 	ldrh.w	r3, [sp]
 801286c:	8423      	strh	r3, [r4, #32]
 801286e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012872:	8463      	strh	r3, [r4, #34]	; 0x22
 8012874:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012878:	b002      	add	sp, #8
 801287a:	bd10      	pop	{r4, pc}

0801287c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801287c:	b513      	push	{r0, r1, r4, lr}
 801287e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012882:	3301      	adds	r3, #1
 8012884:	4604      	mov	r4, r0
 8012886:	d109      	bne.n	801289c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012888:	4601      	mov	r1, r0
 801288a:	4668      	mov	r0, sp
 801288c:	f7ff fd3a 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012890:	f8bd 3000 	ldrh.w	r3, [sp]
 8012894:	8423      	strh	r3, [r4, #32]
 8012896:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801289a:	8463      	strh	r3, [r4, #34]	; 0x22
 801289c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80128a0:	b002      	add	sp, #8
 80128a2:	bd10      	pop	{r4, pc}

080128a4 <_ZN8touchgfx6ScreenC1Ev>:
 80128a4:	b570      	push	{r4, r5, r6, lr}
 80128a6:	4605      	mov	r5, r0
 80128a8:	4b16      	ldr	r3, [pc, #88]	; (8012904 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80128aa:	f845 3b04 	str.w	r3, [r5], #4
 80128ae:	2300      	movs	r3, #0
 80128b0:	8103      	strh	r3, [r0, #8]
 80128b2:	8143      	strh	r3, [r0, #10]
 80128b4:	8183      	strh	r3, [r0, #12]
 80128b6:	81c3      	strh	r3, [r0, #14]
 80128b8:	8203      	strh	r3, [r0, #16]
 80128ba:	8243      	strh	r3, [r0, #18]
 80128bc:	8283      	strh	r3, [r0, #20]
 80128be:	82c3      	strh	r3, [r0, #22]
 80128c0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80128c4:	6203      	str	r3, [r0, #32]
 80128c6:	8483      	strh	r3, [r0, #36]	; 0x24
 80128c8:	84c3      	strh	r3, [r0, #38]	; 0x26
 80128ca:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80128ce:	4a0e      	ldr	r2, [pc, #56]	; (8012908 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80128d0:	6343      	str	r3, [r0, #52]	; 0x34
 80128d2:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80128d6:	4b0d      	ldr	r3, [pc, #52]	; (801290c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80128d8:	6042      	str	r2, [r0, #4]
 80128da:	f9b3 6000 	ldrsh.w	r6, [r3]
 80128de:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80128e0:	4a0b      	ldr	r2, [pc, #44]	; (8012910 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80128e2:	4604      	mov	r4, r0
 80128e4:	2101      	movs	r1, #1
 80128e6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80128ea:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80128ee:	f9b2 1000 	ldrsh.w	r1, [r2]
 80128f2:	4628      	mov	r0, r5
 80128f4:	4798      	blx	r3
 80128f6:	6863      	ldr	r3, [r4, #4]
 80128f8:	4628      	mov	r0, r5
 80128fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80128fc:	4631      	mov	r1, r6
 80128fe:	4798      	blx	r3
 8012900:	4620      	mov	r0, r4
 8012902:	bd70      	pop	{r4, r5, r6, pc}
 8012904:	08024630 	.word	0x08024630
 8012908:	080239e4 	.word	0x080239e4
 801290c:	200157ea 	.word	0x200157ea
 8012910:	200157e8 	.word	0x200157e8

08012914 <_ZN8touchgfx6Screen4drawEv>:
 8012914:	b507      	push	{r0, r1, r2, lr}
 8012916:	4b09      	ldr	r3, [pc, #36]	; (801293c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012918:	f9b3 2000 	ldrsh.w	r2, [r3]
 801291c:	4b08      	ldr	r3, [pc, #32]	; (8012940 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801291e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012922:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012926:	f8ad 3006 	strh.w	r3, [sp, #6]
 801292a:	6803      	ldr	r3, [r0, #0]
 801292c:	2100      	movs	r1, #0
 801292e:	9100      	str	r1, [sp, #0]
 8012930:	689b      	ldr	r3, [r3, #8]
 8012932:	4669      	mov	r1, sp
 8012934:	4798      	blx	r3
 8012936:	b003      	add	sp, #12
 8012938:	f85d fb04 	ldr.w	pc, [sp], #4
 801293c:	200157e8 	.word	0x200157e8
 8012940:	200157ea 	.word	0x200157ea

08012944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012948:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801294c:	2b00      	cmp	r3, #0
 801294e:	b089      	sub	sp, #36	; 0x24
 8012950:	4680      	mov	r8, r0
 8012952:	460c      	mov	r4, r1
 8012954:	4615      	mov	r5, r2
 8012956:	dd0e      	ble.n	8012976 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012958:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801295c:	2b00      	cmp	r3, #0
 801295e:	dd0a      	ble.n	8012976 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012960:	4628      	mov	r0, r5
 8012962:	f7ff ff5b 	bl	801281c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012966:	4621      	mov	r1, r4
 8012968:	f7fe fc01 	bl	801116e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801296c:	69eb      	ldr	r3, [r5, #28]
 801296e:	b928      	cbnz	r0, 801297c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012970:	461d      	mov	r5, r3
 8012972:	2b00      	cmp	r3, #0
 8012974:	d1f4      	bne.n	8012960 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012976:	b009      	add	sp, #36	; 0x24
 8012978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801297c:	ae04      	add	r6, sp, #16
 801297e:	2b00      	cmp	r3, #0
 8012980:	f000 80b5 	beq.w	8012aee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012984:	682b      	ldr	r3, [r5, #0]
 8012986:	4629      	mov	r1, r5
 8012988:	68db      	ldr	r3, [r3, #12]
 801298a:	a802      	add	r0, sp, #8
 801298c:	4798      	blx	r3
 801298e:	4628      	mov	r0, r5
 8012990:	f7ff ff60 	bl	8012854 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012994:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012998:	4407      	add	r7, r0
 801299a:	4628      	mov	r0, r5
 801299c:	f7ff ff6e 	bl	801287c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80129a0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80129a4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80129a8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80129ac:	4418      	add	r0, r3
 80129ae:	4621      	mov	r1, r4
 80129b0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80129b4:	f8ad 0012 	strh.w	r0, [sp, #18]
 80129b8:	b23f      	sxth	r7, r7
 80129ba:	4630      	mov	r0, r6
 80129bc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80129c0:	f8ad 7010 	strh.w	r7, [sp, #16]
 80129c4:	f7f8 fada 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 80129c8:	4628      	mov	r0, r5
 80129ca:	f7ff ff27 	bl	801281c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80129ce:	4602      	mov	r2, r0
 80129d0:	e896 0003 	ldmia.w	r6, {r0, r1}
 80129d4:	ab06      	add	r3, sp, #24
 80129d6:	e883 0003 	stmia.w	r3, {r0, r1}
 80129da:	4611      	mov	r1, r2
 80129dc:	4618      	mov	r0, r3
 80129de:	f7f8 facd 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 80129e2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80129e6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80129ea:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80129ee:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80129f2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80129f6:	4299      	cmp	r1, r3
 80129f8:	d10b      	bne.n	8012a12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80129fa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80129fe:	4552      	cmp	r2, sl
 8012a00:	d107      	bne.n	8012a12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012a02:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012a06:	455a      	cmp	r2, fp
 8012a08:	d103      	bne.n	8012a12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012a0a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012a0e:	454a      	cmp	r2, r9
 8012a10:	d06d      	beq.n	8012aee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012a12:	f1bb 0f00 	cmp.w	fp, #0
 8012a16:	dd65      	ble.n	8012ae4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012a18:	f1b9 0f00 	cmp.w	r9, #0
 8012a1c:	dd62      	ble.n	8012ae4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012a1e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012a22:	fa1f f08a 	uxth.w	r0, sl
 8012a26:	4552      	cmp	r2, sl
 8012a28:	9000      	str	r0, [sp, #0]
 8012a2a:	da12      	bge.n	8012a52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8012a2c:	9301      	str	r3, [sp, #4]
 8012a2e:	9b00      	ldr	r3, [sp, #0]
 8012a30:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012a34:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012a38:	1a9a      	subs	r2, r3, r2
 8012a3a:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012a3e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012a42:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012a46:	69ea      	ldr	r2, [r5, #28]
 8012a48:	4631      	mov	r1, r6
 8012a4a:	4640      	mov	r0, r8
 8012a4c:	f7ff ff7a 	bl	8012944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012a50:	9b01      	ldr	r3, [sp, #4]
 8012a52:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012a56:	429a      	cmp	r2, r3
 8012a58:	b29f      	uxth	r7, r3
 8012a5a:	da0d      	bge.n	8012a78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012a5c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012a60:	1aba      	subs	r2, r7, r2
 8012a62:	f8ad a012 	strh.w	sl, [sp, #18]
 8012a66:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012a6a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012a6e:	69ea      	ldr	r2, [r5, #28]
 8012a70:	4631      	mov	r1, r6
 8012a72:	4640      	mov	r0, r8
 8012a74:	f7ff ff66 	bl	8012944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012a78:	8822      	ldrh	r2, [r4, #0]
 8012a7a:	88a3      	ldrh	r3, [r4, #4]
 8012a7c:	445f      	add	r7, fp
 8012a7e:	4413      	add	r3, r2
 8012a80:	b29b      	uxth	r3, r3
 8012a82:	b2bf      	uxth	r7, r7
 8012a84:	b23a      	sxth	r2, r7
 8012a86:	b219      	sxth	r1, r3
 8012a88:	4291      	cmp	r1, r2
 8012a8a:	dd0d      	ble.n	8012aa8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012a8c:	1bdb      	subs	r3, r3, r7
 8012a8e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012a92:	f8ad a012 	strh.w	sl, [sp, #18]
 8012a96:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012a9a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012a9e:	69ea      	ldr	r2, [r5, #28]
 8012aa0:	4631      	mov	r1, r6
 8012aa2:	4640      	mov	r0, r8
 8012aa4:	f7ff ff4e 	bl	8012944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012aa8:	88e2      	ldrh	r2, [r4, #6]
 8012aaa:	8863      	ldrh	r3, [r4, #2]
 8012aac:	4413      	add	r3, r2
 8012aae:	9a00      	ldr	r2, [sp, #0]
 8012ab0:	444a      	add	r2, r9
 8012ab2:	b29b      	uxth	r3, r3
 8012ab4:	fa1f f982 	uxth.w	r9, r2
 8012ab8:	fa0f f289 	sxth.w	r2, r9
 8012abc:	b219      	sxth	r1, r3
 8012abe:	428a      	cmp	r2, r1
 8012ac0:	da15      	bge.n	8012aee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012ac2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012ac6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012aca:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012ace:	eba3 0309 	sub.w	r3, r3, r9
 8012ad2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012ad6:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012ada:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012ade:	69ea      	ldr	r2, [r5, #28]
 8012ae0:	4631      	mov	r1, r6
 8012ae2:	e001      	b.n	8012ae8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012ae4:	69ea      	ldr	r2, [r5, #28]
 8012ae6:	4621      	mov	r1, r4
 8012ae8:	4640      	mov	r0, r8
 8012aea:	f7ff ff2b 	bl	8012944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012aee:	4628      	mov	r0, r5
 8012af0:	f7ff fe94 	bl	801281c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012af4:	6861      	ldr	r1, [r4, #4]
 8012af6:	4602      	mov	r2, r0
 8012af8:	6820      	ldr	r0, [r4, #0]
 8012afa:	4633      	mov	r3, r6
 8012afc:	c303      	stmia	r3!, {r0, r1}
 8012afe:	4611      	mov	r1, r2
 8012b00:	4630      	mov	r0, r6
 8012b02:	f7f8 fa3b 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 8012b06:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012b0a:	2b00      	cmp	r3, #0
 8012b0c:	f77f af33 	ble.w	8012976 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012b10:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012b14:	2b00      	cmp	r3, #0
 8012b16:	f77f af2e 	ble.w	8012976 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012b1a:	4628      	mov	r0, r5
 8012b1c:	f7ff fe9a 	bl	8012854 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012b20:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012b24:	1a18      	subs	r0, r3, r0
 8012b26:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012b2a:	4628      	mov	r0, r5
 8012b2c:	f7ff fea6 	bl	801287c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012b30:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012b34:	1a18      	subs	r0, r3, r0
 8012b36:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012b3a:	682b      	ldr	r3, [r5, #0]
 8012b3c:	4631      	mov	r1, r6
 8012b3e:	689b      	ldr	r3, [r3, #8]
 8012b40:	4628      	mov	r0, r5
 8012b42:	4798      	blx	r3
 8012b44:	e717      	b.n	8012976 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012b46 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012b46:	b570      	push	{r4, r5, r6, lr}
 8012b48:	460c      	mov	r4, r1
 8012b4a:	b086      	sub	sp, #24
 8012b4c:	1d06      	adds	r6, r0, #4
 8012b4e:	2300      	movs	r3, #0
 8012b50:	4631      	mov	r1, r6
 8012b52:	4605      	mov	r5, r0
 8012b54:	a802      	add	r0, sp, #8
 8012b56:	9301      	str	r3, [sp, #4]
 8012b58:	f7ff fbd4 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b5c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012b60:	8822      	ldrh	r2, [r4, #0]
 8012b62:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012b66:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012b6a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012b6e:	1ad2      	subs	r2, r2, r3
 8012b70:	8863      	ldrh	r3, [r4, #2]
 8012b72:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012b76:	1a5b      	subs	r3, r3, r1
 8012b78:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012b7c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012b80:	aa01      	add	r2, sp, #4
 8012b82:	a904      	add	r1, sp, #16
 8012b84:	4630      	mov	r0, r6
 8012b86:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012b8a:	f7f8 facf 	bl	800b12c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012b8e:	9a01      	ldr	r2, [sp, #4]
 8012b90:	b11a      	cbz	r2, 8012b9a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012b92:	4621      	mov	r1, r4
 8012b94:	4628      	mov	r0, r5
 8012b96:	f7ff fed5 	bl	8012944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012b9a:	b006      	add	sp, #24
 8012b9c:	bd70      	pop	{r4, r5, r6, pc}

08012b9e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8012b9e:	b530      	push	{r4, r5, lr}
 8012ba0:	4602      	mov	r2, r0
 8012ba2:	4604      	mov	r4, r0
 8012ba4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012ba8:	b085      	sub	sp, #20
 8012baa:	460d      	mov	r5, r1
 8012bac:	6851      	ldr	r1, [r2, #4]
 8012bae:	466b      	mov	r3, sp
 8012bb0:	c303      	stmia	r3!, {r0, r1}
 8012bb2:	4629      	mov	r1, r5
 8012bb4:	4668      	mov	r0, sp
 8012bb6:	f7f8 f9e1 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 8012bba:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012bbe:	b12b      	cbz	r3, 8012bcc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8012bc0:	4669      	mov	r1, sp
 8012bc2:	4620      	mov	r0, r4
 8012bc4:	f7ff ffbf 	bl	8012b46 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012bc8:	b005      	add	sp, #20
 8012bca:	bd30      	pop	{r4, r5, pc}
 8012bcc:	3404      	adds	r4, #4
 8012bce:	4621      	mov	r1, r4
 8012bd0:	a802      	add	r0, sp, #8
 8012bd2:	f7ff fb97 	bl	8012304 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012bd6:	f8bd 3000 	ldrh.w	r3, [sp]
 8012bda:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8012bde:	1a9b      	subs	r3, r3, r2
 8012be0:	f8ad 3000 	strh.w	r3, [sp]
 8012be4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012be8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012bec:	4669      	mov	r1, sp
 8012bee:	1a9b      	subs	r3, r3, r2
 8012bf0:	4620      	mov	r0, r4
 8012bf2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012bf6:	f7f8 fa60 	bl	800b0ba <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012bfa:	e7e5      	b.n	8012bc8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012bfc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012bfc:	680a      	ldr	r2, [r1, #0]
 8012bfe:	460b      	mov	r3, r1
 8012c00:	6992      	ldr	r2, [r2, #24]
 8012c02:	1d01      	adds	r1, r0, #4
 8012c04:	4618      	mov	r0, r3
 8012c06:	4710      	bx	r2

08012c08 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012c08:	4298      	cmp	r0, r3
 8012c0a:	d200      	bcs.n	8012c0e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012c0c:	b913      	cbnz	r3, 8012c14 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8012c0e:	440a      	add	r2, r1
 8012c10:	b210      	sxth	r0, r2
 8012c12:	4770      	bx	lr
 8012c14:	ee07 0a90 	vmov	s15, r0
 8012c18:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012c1c:	ee07 3a90 	vmov	s15, r3
 8012c20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012c24:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012c28:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012c2c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012c30:	ee07 2a90 	vmov	s15, r2
 8012c34:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012c38:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012c3c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012c40:	ee07 1a90 	vmov	s15, r1
 8012c44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012c48:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012c4c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012c50:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012c54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012c58:	bfcc      	ite	gt
 8012c5a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012c5e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012c62:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012c66:	ee17 3a90 	vmov	r3, s15
 8012c6a:	b218      	sxth	r0, r3
 8012c6c:	4770      	bx	lr

08012c6e <_ZN8touchgfx12TextProviderC1Ev>:
 8012c6e:	b538      	push	{r3, r4, r5, lr}
 8012c70:	2500      	movs	r5, #0
 8012c72:	2302      	movs	r3, #2
 8012c74:	4604      	mov	r4, r0
 8012c76:	e9c0 5500 	strd	r5, r5, [r0]
 8012c7a:	7403      	strb	r3, [r0, #16]
 8012c7c:	6145      	str	r5, [r0, #20]
 8012c7e:	7605      	strb	r5, [r0, #24]
 8012c80:	83c5      	strh	r5, [r0, #30]
 8012c82:	8405      	strh	r5, [r0, #32]
 8012c84:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012c86:	8705      	strh	r5, [r0, #56]	; 0x38
 8012c88:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012c8a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012c8e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012c92:	220e      	movs	r2, #14
 8012c94:	4629      	mov	r1, r5
 8012c96:	304c      	adds	r0, #76	; 0x4c
 8012c98:	f00e f858 	bl	8020d4c <memset>
 8012c9c:	2301      	movs	r3, #1
 8012c9e:	4620      	mov	r0, r4
 8012ca0:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012ca4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012ca8:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012cac:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012cb0:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012cb4:	f7f2 f94a 	bl	8004f4c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012cb8:	4620      	mov	r0, r4
 8012cba:	bd38      	pop	{r3, r4, r5, pc}

08012cbc <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012cbc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012cbe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012cc2:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012cc4:	fab0 f080 	clz	r0, r0
 8012cc8:	0940      	lsrs	r0, r0, #5
 8012cca:	4770      	bx	lr

08012ccc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012ccc:	b530      	push	{r4, r5, lr}
 8012cce:	2500      	movs	r5, #0
 8012cd0:	2401      	movs	r4, #1
 8012cd2:	6843      	ldr	r3, [r0, #4]
 8012cd4:	b913      	cbnz	r3, 8012cdc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012cd6:	6803      	ldr	r3, [r0, #0]
 8012cd8:	b313      	cbz	r3, 8012d20 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012cda:	6043      	str	r3, [r0, #4]
 8012cdc:	7e03      	ldrb	r3, [r0, #24]
 8012cde:	b143      	cbz	r3, 8012cf2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012ce0:	6943      	ldr	r3, [r0, #20]
 8012ce2:	b12b      	cbz	r3, 8012cf0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012ce4:	881a      	ldrh	r2, [r3, #0]
 8012ce6:	b11a      	cbz	r2, 8012cf0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012ce8:	1c9a      	adds	r2, r3, #2
 8012cea:	6142      	str	r2, [r0, #20]
 8012cec:	8818      	ldrh	r0, [r3, #0]
 8012cee:	bd30      	pop	{r4, r5, pc}
 8012cf0:	7605      	strb	r5, [r0, #24]
 8012cf2:	6843      	ldr	r3, [r0, #4]
 8012cf4:	8819      	ldrh	r1, [r3, #0]
 8012cf6:	b199      	cbz	r1, 8012d20 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012cf8:	1c9a      	adds	r2, r3, #2
 8012cfa:	2902      	cmp	r1, #2
 8012cfc:	6042      	str	r2, [r0, #4]
 8012cfe:	d1f5      	bne.n	8012cec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012d00:	7c03      	ldrb	r3, [r0, #16]
 8012d02:	2b01      	cmp	r3, #1
 8012d04:	d8e5      	bhi.n	8012cd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012d06:	1c5a      	adds	r2, r3, #1
 8012d08:	3302      	adds	r3, #2
 8012d0a:	7402      	strb	r2, [r0, #16]
 8012d0c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012d10:	6143      	str	r3, [r0, #20]
 8012d12:	2b00      	cmp	r3, #0
 8012d14:	d0dd      	beq.n	8012cd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012d16:	881b      	ldrh	r3, [r3, #0]
 8012d18:	2b00      	cmp	r3, #0
 8012d1a:	d0da      	beq.n	8012cd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012d1c:	7604      	strb	r4, [r0, #24]
 8012d1e:	e7d8      	b.n	8012cd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012d20:	2000      	movs	r0, #0
 8012d22:	e7e4      	b.n	8012cee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012d24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012d24:	b430      	push	{r4, r5}
 8012d26:	6001      	str	r1, [r0, #0]
 8012d28:	2100      	movs	r1, #0
 8012d2a:	6041      	str	r1, [r0, #4]
 8012d2c:	6815      	ldr	r5, [r2, #0]
 8012d2e:	6085      	str	r5, [r0, #8]
 8012d30:	6852      	ldr	r2, [r2, #4]
 8012d32:	6443      	str	r3, [r0, #68]	; 0x44
 8012d34:	9b02      	ldr	r3, [sp, #8]
 8012d36:	60c2      	str	r2, [r0, #12]
 8012d38:	7401      	strb	r1, [r0, #16]
 8012d3a:	6141      	str	r1, [r0, #20]
 8012d3c:	7601      	strb	r1, [r0, #24]
 8012d3e:	8701      	strh	r1, [r0, #56]	; 0x38
 8012d40:	8401      	strh	r1, [r0, #32]
 8012d42:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012d46:	6483      	str	r3, [r0, #72]	; 0x48
 8012d48:	bc30      	pop	{r4, r5}
 8012d4a:	f7f2 b8ff 	b.w	8004f4c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012d4e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8012d4e:	b408      	push	{r3}
 8012d50:	b510      	push	{r4, lr}
 8012d52:	b085      	sub	sp, #20
 8012d54:	ac07      	add	r4, sp, #28
 8012d56:	f854 3b04 	ldr.w	r3, [r4], #4
 8012d5a:	9300      	str	r3, [sp, #0]
 8012d5c:	4613      	mov	r3, r2
 8012d5e:	4622      	mov	r2, r4
 8012d60:	9403      	str	r4, [sp, #12]
 8012d62:	f7ff ffdf 	bl	8012d24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012d66:	b005      	add	sp, #20
 8012d68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d6c:	b001      	add	sp, #4
 8012d6e:	4770      	bx	lr

08012d70 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012d70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012d72:	4605      	mov	r5, r0
 8012d74:	4608      	mov	r0, r1
 8012d76:	b1e9      	cbz	r1, 8012db4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012d78:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012d7c:	460b      	mov	r3, r1
 8012d7e:	f101 0708 	add.w	r7, r1, #8
 8012d82:	4622      	mov	r2, r4
 8012d84:	6818      	ldr	r0, [r3, #0]
 8012d86:	6859      	ldr	r1, [r3, #4]
 8012d88:	4626      	mov	r6, r4
 8012d8a:	c603      	stmia	r6!, {r0, r1}
 8012d8c:	3308      	adds	r3, #8
 8012d8e:	42bb      	cmp	r3, r7
 8012d90:	4634      	mov	r4, r6
 8012d92:	d1f7      	bne.n	8012d84 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012d94:	6818      	ldr	r0, [r3, #0]
 8012d96:	6030      	str	r0, [r6, #0]
 8012d98:	889b      	ldrh	r3, [r3, #4]
 8012d9a:	80b3      	strh	r3, [r6, #4]
 8012d9c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8012da0:	015b      	lsls	r3, r3, #5
 8012da2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012da6:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012daa:	430b      	orrs	r3, r1
 8012dac:	425b      	negs	r3, r3
 8012dae:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012db2:	4610      	mov	r0, r2
 8012db4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012db6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012db6:	b538      	push	{r3, r4, r5, lr}
 8012db8:	460c      	mov	r4, r1
 8012dba:	6811      	ldr	r1, [r2, #0]
 8012dbc:	4610      	mov	r0, r2
 8012dbe:	68cd      	ldr	r5, [r1, #12]
 8012dc0:	4619      	mov	r1, r3
 8012dc2:	47a8      	blx	r5
 8012dc4:	2800      	cmp	r0, #0
 8012dc6:	bf08      	it	eq
 8012dc8:	4620      	moveq	r0, r4
 8012dca:	bd38      	pop	{r3, r4, r5, pc}

08012dcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012dcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012dce:	4604      	mov	r4, r0
 8012dd0:	4615      	mov	r5, r2
 8012dd2:	4608      	mov	r0, r1
 8012dd4:	b93a      	cbnz	r2, 8012de6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012dd6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012dda:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8012dde:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012de2:	4628      	mov	r0, r5
 8012de4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012de6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012dea:	8893      	ldrh	r3, [r2, #4]
 8012dec:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012df0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012df4:	79ee      	ldrb	r6, [r5, #7]
 8012df6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012dfa:	4316      	orrs	r6, r2
 8012dfc:	19da      	adds	r2, r3, r7
 8012dfe:	b291      	uxth	r1, r2
 8012e00:	291d      	cmp	r1, #29
 8012e02:	b2b7      	uxth	r7, r6
 8012e04:	d87a      	bhi.n	8012efc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012e06:	2201      	movs	r2, #1
 8012e08:	408a      	lsls	r2, r1
 8012e0a:	4975      	ldr	r1, [pc, #468]	; (8012fe0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8012e0c:	420a      	tst	r2, r1
 8012e0e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012e12:	d12d      	bne.n	8012e70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012e14:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012e18:	d070      	beq.n	8012efc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012e1a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8012e1e:	462b      	mov	r3, r5
 8012e20:	f105 0e08 	add.w	lr, r5, #8
 8012e24:	4615      	mov	r5, r2
 8012e26:	6818      	ldr	r0, [r3, #0]
 8012e28:	6859      	ldr	r1, [r3, #4]
 8012e2a:	4694      	mov	ip, r2
 8012e2c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012e30:	3308      	adds	r3, #8
 8012e32:	4573      	cmp	r3, lr
 8012e34:	4662      	mov	r2, ip
 8012e36:	d1f6      	bne.n	8012e26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012e38:	6818      	ldr	r0, [r3, #0]
 8012e3a:	f8cc 0000 	str.w	r0, [ip]
 8012e3e:	889b      	ldrh	r3, [r3, #4]
 8012e40:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012e44:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012e48:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8012e4c:	b2b3      	uxth	r3, r6
 8012e4e:	1aca      	subs	r2, r1, r3
 8012e50:	b292      	uxth	r2, r2
 8012e52:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8012e56:	10d2      	asrs	r2, r2, #3
 8012e58:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012e5c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012e60:	4302      	orrs	r2, r0
 8012e62:	1bcf      	subs	r7, r1, r7
 8012e64:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012e68:	1afb      	subs	r3, r7, r3
 8012e6a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012e6e:	e7b8      	b.n	8012de2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012e70:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012e72:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012e76:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012e78:	f640 6333 	movw	r3, #3635	; 0xe33
 8012e7c:	4299      	cmp	r1, r3
 8012e7e:	d110      	bne.n	8012ea2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8012e80:	6803      	ldr	r3, [r0, #0]
 8012e82:	68db      	ldr	r3, [r3, #12]
 8012e84:	4798      	blx	r3
 8012e86:	7b41      	ldrb	r1, [r0, #13]
 8012e88:	00cb      	lsls	r3, r1, #3
 8012e8a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012e8e:	7a03      	ldrb	r3, [r0, #8]
 8012e90:	0648      	lsls	r0, r1, #25
 8012e92:	ea43 0302 	orr.w	r3, r3, r2
 8012e96:	bf44      	itt	mi
 8012e98:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e9c:	b21b      	sxthmi	r3, r3
 8012e9e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012ea2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012ea6:	443b      	add	r3, r7
 8012ea8:	4433      	add	r3, r6
 8012eaa:	b29b      	uxth	r3, r3
 8012eac:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012eb0:	462a      	mov	r2, r5
 8012eb2:	f105 0c08 	add.w	ip, r5, #8
 8012eb6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012eba:	4635      	mov	r5, r6
 8012ebc:	6810      	ldr	r0, [r2, #0]
 8012ebe:	6851      	ldr	r1, [r2, #4]
 8012ec0:	4637      	mov	r7, r6
 8012ec2:	c703      	stmia	r7!, {r0, r1}
 8012ec4:	3208      	adds	r2, #8
 8012ec6:	4562      	cmp	r2, ip
 8012ec8:	463e      	mov	r6, r7
 8012eca:	d1f7      	bne.n	8012ebc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012ecc:	6810      	ldr	r0, [r2, #0]
 8012ece:	6038      	str	r0, [r7, #0]
 8012ed0:	8892      	ldrh	r2, [r2, #4]
 8012ed2:	80ba      	strh	r2, [r7, #4]
 8012ed4:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012ed8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012edc:	10db      	asrs	r3, r3, #3
 8012ede:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012ee2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012ee6:	4313      	orrs	r3, r2
 8012ee8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012eec:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012ef0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012ef4:	1a9b      	subs	r3, r3, r2
 8012ef6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012efa:	e772      	b.n	8012de2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012efc:	f023 0204 	bic.w	r2, r3, #4
 8012f00:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012f04:	428a      	cmp	r2, r1
 8012f06:	d003      	beq.n	8012f10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012f08:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012f0c:	4293      	cmp	r3, r2
 8012f0e:	d120      	bne.n	8012f52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012f10:	3b01      	subs	r3, #1
 8012f12:	4602      	mov	r2, r0
 8012f14:	b29b      	uxth	r3, r3
 8012f16:	4629      	mov	r1, r5
 8012f18:	4620      	mov	r0, r4
 8012f1a:	f7ff ff4c 	bl	8012db6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012f1e:	7b41      	ldrb	r1, [r0, #13]
 8012f20:	00cb      	lsls	r3, r1, #3
 8012f22:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012f26:	7a03      	ldrb	r3, [r0, #8]
 8012f28:	0649      	lsls	r1, r1, #25
 8012f2a:	ea43 0302 	orr.w	r3, r3, r2
 8012f2e:	bf44      	itt	mi
 8012f30:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012f34:	b21b      	sxthmi	r3, r3
 8012f36:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012f3a:	7b6b      	ldrb	r3, [r5, #13]
 8012f3c:	7aaa      	ldrb	r2, [r5, #10]
 8012f3e:	005b      	lsls	r3, r3, #1
 8012f40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012f44:	4313      	orrs	r3, r2
 8012f46:	115a      	asrs	r2, r3, #5
 8012f48:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012f4c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012f50:	e036      	b.n	8012fc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012f52:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012f56:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012f5a:	7a2a      	ldrb	r2, [r5, #8]
 8012f5c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012f60:	ea42 0201 	orr.w	r2, r2, r1
 8012f64:	bf1c      	itt	ne
 8012f66:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012f6a:	b212      	sxthne	r2, r2
 8012f6c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012f70:	f640 6109 	movw	r1, #3593	; 0xe09
 8012f74:	f023 0210 	bic.w	r2, r3, #16
 8012f78:	428a      	cmp	r2, r1
 8012f7a:	d003      	beq.n	8012f84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012f7c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012f80:	4293      	cmp	r3, r2
 8012f82:	d12a      	bne.n	8012fda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012f84:	7b6e      	ldrb	r6, [r5, #13]
 8012f86:	0076      	lsls	r6, r6, #1
 8012f88:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012f8c:	7aae      	ldrb	r6, [r5, #10]
 8012f8e:	4316      	orrs	r6, r2
 8012f90:	f640 6213 	movw	r2, #3603	; 0xe13
 8012f94:	4293      	cmp	r3, r2
 8012f96:	bf18      	it	ne
 8012f98:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012f9c:	4602      	mov	r2, r0
 8012f9e:	bf14      	ite	ne
 8012fa0:	b29b      	uxthne	r3, r3
 8012fa2:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012fa6:	4629      	mov	r1, r5
 8012fa8:	4620      	mov	r0, r4
 8012faa:	f7ff ff04 	bl	8012db6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012fae:	7b43      	ldrb	r3, [r0, #13]
 8012fb0:	7a82      	ldrb	r2, [r0, #10]
 8012fb2:	005b      	lsls	r3, r3, #1
 8012fb4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012fb8:	4313      	orrs	r3, r2
 8012fba:	1af6      	subs	r6, r6, r3
 8012fbc:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012fc0:	7b69      	ldrb	r1, [r5, #13]
 8012fc2:	00cb      	lsls	r3, r1, #3
 8012fc4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012fc8:	7a2b      	ldrb	r3, [r5, #8]
 8012fca:	4313      	orrs	r3, r2
 8012fcc:	064a      	lsls	r2, r1, #25
 8012fce:	bf44      	itt	mi
 8012fd0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012fd4:	b21b      	sxthmi	r3, r3
 8012fd6:	1bdb      	subs	r3, r3, r7
 8012fd8:	e747      	b.n	8012e6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012fda:	2300      	movs	r3, #0
 8012fdc:	e7b6      	b.n	8012f4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012fde:	bf00      	nop
 8012fe0:	3fc00079 	.word	0x3fc00079

08012fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012fe4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012fe8:	4604      	mov	r4, r0
 8012fea:	b942      	cbnz	r2, 8012ffe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012fec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012ff0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012ff4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012ff8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012ffc:	e047      	b.n	801308e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012ffe:	7b51      	ldrb	r1, [r2, #13]
 8013000:	8893      	ldrh	r3, [r2, #4]
 8013002:	010d      	lsls	r5, r1, #4
 8013004:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8013008:	79d5      	ldrb	r5, [r2, #7]
 801300a:	4305      	orrs	r5, r0
 801300c:	2d04      	cmp	r5, #4
 801300e:	bfcc      	ite	gt
 8013010:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8013014:	f04f 0e01 	movle.w	lr, #1
 8013018:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801301c:	f200 80ab 	bhi.w	8013176 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8013020:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8013024:	4283      	cmp	r3, r0
 8013026:	d216      	bcs.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013028:	f240 605b 	movw	r0, #1627	; 0x65b
 801302c:	4283      	cmp	r3, r0
 801302e:	d859      	bhi.n	80130e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8013030:	f240 6057 	movw	r0, #1623	; 0x657
 8013034:	4283      	cmp	r3, r0
 8013036:	d20e      	bcs.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013038:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801303c:	d24a      	bcs.n	80130d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801303e:	f240 604e 	movw	r0, #1614	; 0x64e
 8013042:	4283      	cmp	r3, r0
 8013044:	d207      	bcs.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013046:	f240 601a 	movw	r0, #1562	; 0x61a
 801304a:	4283      	cmp	r3, r0
 801304c:	d02a      	beq.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801304e:	d821      	bhi.n	8013094 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8013050:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8013054:	d35b      	bcc.n	801310e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013056:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801305a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801305e:	f040 80d0 	bne.w	8013202 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013062:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8013066:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801306a:	f040 80ca 	bne.w	8013202 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801306e:	00cb      	lsls	r3, r1, #3
 8013070:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013074:	7a13      	ldrb	r3, [r2, #8]
 8013076:	0649      	lsls	r1, r1, #25
 8013078:	ea43 0300 	orr.w	r3, r3, r0
 801307c:	bf44      	itt	mi
 801307e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013082:	b21b      	sxthmi	r3, r3
 8013084:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013088:	1b5d      	subs	r5, r3, r5
 801308a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801308e:	4610      	mov	r0, r2
 8013090:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013094:	f240 604b 	movw	r0, #1611	; 0x64b
 8013098:	4283      	cmp	r3, r0
 801309a:	d338      	bcc.n	801310e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801309c:	f240 604c 	movw	r0, #1612	; 0x64c
 80130a0:	4283      	cmp	r3, r0
 80130a2:	d9d8      	bls.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80130a4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80130a8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80130ac:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80130b0:	f040 80f2 	bne.w	8013298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80130b4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80130b8:	f040 80ee 	bne.w	8013298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80130bc:	00cb      	lsls	r3, r1, #3
 80130be:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80130c2:	7a13      	ldrb	r3, [r2, #8]
 80130c4:	064e      	lsls	r6, r1, #25
 80130c6:	ea43 0300 	orr.w	r3, r3, r0
 80130ca:	bf44      	itt	mi
 80130cc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80130d0:	b21b      	sxthmi	r3, r3
 80130d2:	e7d9      	b.n	8013088 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80130d4:	f240 6054 	movw	r0, #1620	; 0x654
 80130d8:	4283      	cmp	r3, r0
 80130da:	d8e3      	bhi.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130dc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80130e0:	d9e0      	bls.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130e2:	e7b8      	b.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80130e4:	f240 6074 	movw	r0, #1652	; 0x674
 80130e8:	4283      	cmp	r3, r0
 80130ea:	d0b4      	beq.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80130ec:	d82d      	bhi.n	801314a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80130ee:	f240 605e 	movw	r0, #1630	; 0x65e
 80130f2:	4283      	cmp	r3, r0
 80130f4:	d804      	bhi.n	8013100 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80130f6:	f240 605d 	movw	r0, #1629	; 0x65d
 80130fa:	4283      	cmp	r3, r0
 80130fc:	d3d2      	bcc.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130fe:	e7aa      	b.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013100:	f240 605f 	movw	r0, #1631	; 0x65f
 8013104:	4283      	cmp	r3, r0
 8013106:	d0cd      	beq.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013108:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801310c:	d0a3      	beq.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801310e:	00cb      	lsls	r3, r1, #3
 8013110:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013114:	7a13      	ldrb	r3, [r2, #8]
 8013116:	0649      	lsls	r1, r1, #25
 8013118:	ea43 0300 	orr.w	r3, r3, r0
 801311c:	bf44      	itt	mi
 801311e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013122:	b21b      	sxthmi	r3, r3
 8013124:	1b5d      	subs	r5, r3, r5
 8013126:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801312a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801312e:	7b53      	ldrb	r3, [r2, #13]
 8013130:	015b      	lsls	r3, r3, #5
 8013132:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013136:	7993      	ldrb	r3, [r2, #6]
 8013138:	430b      	orrs	r3, r1
 801313a:	005b      	lsls	r3, r3, #1
 801313c:	2105      	movs	r1, #5
 801313e:	fb93 f3f1 	sdiv	r3, r3, r1
 8013142:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013146:	440b      	add	r3, r1
 8013148:	e756      	b.n	8012ff8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801314a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801314e:	4283      	cmp	r3, r0
 8013150:	d809      	bhi.n	8013166 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8013152:	f240 60df 	movw	r0, #1759	; 0x6df
 8013156:	4283      	cmp	r3, r0
 8013158:	f4bf af7d 	bcs.w	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801315c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013160:	2b05      	cmp	r3, #5
 8013162:	d8d4      	bhi.n	801310e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013164:	e777      	b.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013166:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801316a:	4283      	cmp	r3, r0
 801316c:	d09a      	beq.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801316e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8013172:	4283      	cmp	r3, r0
 8013174:	e7ca      	b.n	801310c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013176:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801317a:	d22b      	bcs.n	80131d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801317c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8013180:	4283      	cmp	r3, r0
 8013182:	d28f      	bcs.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013184:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8013188:	4283      	cmp	r3, r0
 801318a:	d816      	bhi.n	80131ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801318c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8013190:	4283      	cmp	r3, r0
 8013192:	f4bf af60 	bcs.w	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013196:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801319a:	4283      	cmp	r3, r0
 801319c:	d80a      	bhi.n	80131b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801319e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80131a2:	4283      	cmp	r3, r0
 80131a4:	f4bf af57 	bcs.w	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80131a8:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80131ac:	4283      	cmp	r3, r0
 80131ae:	f43f af79 	beq.w	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80131b2:	e7ac      	b.n	801310e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80131b4:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80131b8:	e7f8      	b.n	80131ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80131ba:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80131be:	4283      	cmp	r3, r0
 80131c0:	d802      	bhi.n	80131c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80131c2:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80131c6:	e798      	b.n	80130fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80131c8:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80131cc:	4283      	cmp	r3, r0
 80131ce:	f47f af42 	bne.w	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80131d2:	e767      	b.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80131d4:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80131d8:	4283      	cmp	r3, r0
 80131da:	f43f af63 	beq.w	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80131de:	d802      	bhi.n	80131e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80131e0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80131e4:	e7f2      	b.n	80131cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80131e6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80131ea:	4283      	cmp	r3, r0
 80131ec:	d805      	bhi.n	80131fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80131ee:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80131f2:	4283      	cmp	r3, r0
 80131f4:	f4ff af2f 	bcc.w	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80131f8:	e754      	b.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80131fa:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80131fe:	4283      	cmp	r3, r0
 8013200:	e7af      	b.n	8013162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8013202:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013206:	4617      	mov	r7, r2
 8013208:	f102 0808 	add.w	r8, r2, #8
 801320c:	4666      	mov	r6, ip
 801320e:	6838      	ldr	r0, [r7, #0]
 8013210:	6879      	ldr	r1, [r7, #4]
 8013212:	46e6      	mov	lr, ip
 8013214:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013218:	3708      	adds	r7, #8
 801321a:	4547      	cmp	r7, r8
 801321c:	46f4      	mov	ip, lr
 801321e:	d1f6      	bne.n	801320e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013220:	6838      	ldr	r0, [r7, #0]
 8013222:	f8ce 0000 	str.w	r0, [lr]
 8013226:	88b9      	ldrh	r1, [r7, #4]
 8013228:	f8ae 1004 	strh.w	r1, [lr, #4]
 801322c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013230:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013234:	d009      	beq.n	801324a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013236:	7b51      	ldrb	r1, [r2, #13]
 8013238:	7992      	ldrb	r2, [r2, #6]
 801323a:	0149      	lsls	r1, r1, #5
 801323c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013240:	4311      	orrs	r1, r2
 8013242:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013246:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801324a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801324e:	b2ad      	uxth	r5, r5
 8013250:	d00d      	beq.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013252:	442b      	add	r3, r5
 8013254:	b29b      	uxth	r3, r3
 8013256:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801325a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801325e:	10db      	asrs	r3, r3, #3
 8013260:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013264:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013268:	4313      	orrs	r3, r2
 801326a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801326e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013272:	00cb      	lsls	r3, r1, #3
 8013274:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013278:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801327c:	064f      	lsls	r7, r1, #25
 801327e:	ea43 0302 	orr.w	r3, r3, r2
 8013282:	bf44      	itt	mi
 8013284:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013288:	b21b      	sxthmi	r3, r3
 801328a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801328e:	1b5b      	subs	r3, r3, r5
 8013290:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013294:	4632      	mov	r2, r6
 8013296:	e6fa      	b.n	801308e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013298:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801329c:	4617      	mov	r7, r2
 801329e:	f102 0908 	add.w	r9, r2, #8
 80132a2:	4666      	mov	r6, ip
 80132a4:	6838      	ldr	r0, [r7, #0]
 80132a6:	6879      	ldr	r1, [r7, #4]
 80132a8:	46e0      	mov	r8, ip
 80132aa:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80132ae:	3708      	adds	r7, #8
 80132b0:	454f      	cmp	r7, r9
 80132b2:	46c4      	mov	ip, r8
 80132b4:	d1f6      	bne.n	80132a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80132b6:	6838      	ldr	r0, [r7, #0]
 80132b8:	f8c8 0000 	str.w	r0, [r8]
 80132bc:	88b9      	ldrh	r1, [r7, #4]
 80132be:	f8a8 1004 	strh.w	r1, [r8, #4]
 80132c2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80132c6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80132ca:	d009      	beq.n	80132e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80132cc:	7b51      	ldrb	r1, [r2, #13]
 80132ce:	7992      	ldrb	r2, [r2, #6]
 80132d0:	0149      	lsls	r1, r1, #5
 80132d2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80132d6:	4311      	orrs	r1, r2
 80132d8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80132dc:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80132e0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80132e4:	d00e      	beq.n	8013304 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80132e6:	eba3 030e 	sub.w	r3, r3, lr
 80132ea:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80132ee:	b29b      	uxth	r3, r3
 80132f0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80132f4:	10db      	asrs	r3, r3, #3
 80132f6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80132fa:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80132fe:	4313      	orrs	r3, r2
 8013300:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013304:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013308:	00cb      	lsls	r3, r1, #3
 801330a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801330e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013312:	0648      	lsls	r0, r1, #25
 8013314:	ea43 0302 	orr.w	r3, r3, r2
 8013318:	bf44      	itt	mi
 801331a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801331e:	b21b      	sxthmi	r3, r3
 8013320:	1b5d      	subs	r5, r3, r5
 8013322:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013326:	e7b5      	b.n	8013294 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08013328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801332c:	461e      	mov	r6, r3
 801332e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013330:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013334:	4604      	mov	r4, r0
 8013336:	4617      	mov	r7, r2
 8013338:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801333c:	f7f1 fdc4 	bl	8004ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013340:	4605      	mov	r5, r0
 8013342:	b918      	cbnz	r0, 801334c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013344:	6030      	str	r0, [r6, #0]
 8013346:	4628      	mov	r0, r5
 8013348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801334c:	683b      	ldr	r3, [r7, #0]
 801334e:	4601      	mov	r1, r0
 8013350:	68db      	ldr	r3, [r3, #12]
 8013352:	4638      	mov	r0, r7
 8013354:	4798      	blx	r3
 8013356:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801335a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801335e:	4602      	mov	r2, r0
 8013360:	6030      	str	r0, [r6, #0]
 8013362:	d213      	bcs.n	801338c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013364:	4643      	mov	r3, r8
 8013366:	4639      	mov	r1, r7
 8013368:	4620      	mov	r0, r4
 801336a:	f7ff fe3b 	bl	8012fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801336e:	6030      	str	r0, [r6, #0]
 8013370:	6833      	ldr	r3, [r6, #0]
 8013372:	b143      	cbz	r3, 8013386 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013374:	7b5a      	ldrb	r2, [r3, #13]
 8013376:	7a9b      	ldrb	r3, [r3, #10]
 8013378:	0052      	lsls	r2, r2, #1
 801337a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801337e:	4313      	orrs	r3, r2
 8013380:	bf0c      	ite	eq
 8013382:	2301      	moveq	r3, #1
 8013384:	2300      	movne	r3, #0
 8013386:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801338a:	e7dc      	b.n	8013346 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801338c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013390:	b29b      	uxth	r3, r3
 8013392:	2b7f      	cmp	r3, #127	; 0x7f
 8013394:	d804      	bhi.n	80133a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013396:	4639      	mov	r1, r7
 8013398:	4620      	mov	r0, r4
 801339a:	f7ff fd17 	bl	8012dcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801339e:	e7e6      	b.n	801336e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80133a0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80133a4:	2b00      	cmp	r3, #0
 80133a6:	d0e3      	beq.n	8013370 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80133a8:	f640 1302 	movw	r3, #2306	; 0x902
 80133ac:	429d      	cmp	r5, r3
 80133ae:	d1df      	bne.n	8013370 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80133b0:	4601      	mov	r1, r0
 80133b2:	4620      	mov	r0, r4
 80133b4:	f7ff fcdc 	bl	8012d70 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80133b8:	e7d9      	b.n	801336e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080133ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80133ba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80133be:	461e      	mov	r6, r3
 80133c0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80133c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80133c6:	4604      	mov	r4, r0
 80133c8:	4617      	mov	r7, r2
 80133ca:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80133ce:	f7f1 fd7b 	bl	8004ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80133d2:	4605      	mov	r5, r0
 80133d4:	b918      	cbnz	r0, 80133de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80133d6:	6030      	str	r0, [r6, #0]
 80133d8:	4628      	mov	r0, r5
 80133da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80133de:	683b      	ldr	r3, [r7, #0]
 80133e0:	4601      	mov	r1, r0
 80133e2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80133e6:	4638      	mov	r0, r7
 80133e8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80133ec:	47c8      	blx	r9
 80133ee:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80133f2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80133f6:	4602      	mov	r2, r0
 80133f8:	6030      	str	r0, [r6, #0]
 80133fa:	d213      	bcs.n	8013424 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80133fc:	4643      	mov	r3, r8
 80133fe:	4639      	mov	r1, r7
 8013400:	4620      	mov	r0, r4
 8013402:	f7ff fdef 	bl	8012fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013406:	6030      	str	r0, [r6, #0]
 8013408:	6833      	ldr	r3, [r6, #0]
 801340a:	b143      	cbz	r3, 801341e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801340c:	7b5a      	ldrb	r2, [r3, #13]
 801340e:	7a9b      	ldrb	r3, [r3, #10]
 8013410:	0052      	lsls	r2, r2, #1
 8013412:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013416:	4313      	orrs	r3, r2
 8013418:	bf0c      	ite	eq
 801341a:	2301      	moveq	r3, #1
 801341c:	2300      	movne	r3, #0
 801341e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013422:	e7d9      	b.n	80133d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8013424:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013428:	b29b      	uxth	r3, r3
 801342a:	2b7f      	cmp	r3, #127	; 0x7f
 801342c:	d804      	bhi.n	8013438 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801342e:	4639      	mov	r1, r7
 8013430:	4620      	mov	r0, r4
 8013432:	f7ff fccb 	bl	8012dcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013436:	e7e6      	b.n	8013406 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013438:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801343c:	2b00      	cmp	r3, #0
 801343e:	d0e3      	beq.n	8013408 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013440:	f640 1302 	movw	r3, #2306	; 0x902
 8013444:	429d      	cmp	r5, r3
 8013446:	d1df      	bne.n	8013408 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013448:	4601      	mov	r1, r0
 801344a:	4620      	mov	r0, r4
 801344c:	f7ff fc90 	bl	8012d70 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013450:	e7d9      	b.n	8013406 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013452 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013452:	b510      	push	{r4, lr}
 8013454:	4604      	mov	r4, r0
 8013456:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801345a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801345c:	b1f1      	cbz	r1, 801349c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801345e:	2b0a      	cmp	r3, #10
 8013460:	d02f      	beq.n	80134c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013462:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013464:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013468:	3901      	subs	r1, #1
 801346a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801346c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013470:	1c51      	adds	r1, r2, #1
 8013472:	b289      	uxth	r1, r1
 8013474:	2901      	cmp	r1, #1
 8013476:	bf84      	itt	hi
 8013478:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801347c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801347e:	f103 0201 	add.w	r2, r3, #1
 8013482:	8722      	strh	r2, [r4, #56]	; 0x38
 8013484:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013486:	bf98      	it	ls
 8013488:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801348a:	4413      	add	r3, r2
 801348c:	b29b      	uxth	r3, r3
 801348e:	2b09      	cmp	r3, #9
 8013490:	bf88      	it	hi
 8013492:	3b0a      	subhi	r3, #10
 8013494:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013498:	8458      	strh	r0, [r3, #34]	; 0x22
 801349a:	e7dc      	b.n	8013456 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801349c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801349e:	2b0a      	cmp	r3, #10
 80134a0:	d00f      	beq.n	80134c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80134a2:	4620      	mov	r0, r4
 80134a4:	f7ff fc12 	bl	8012ccc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80134a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80134aa:	1c5a      	adds	r2, r3, #1
 80134ac:	8722      	strh	r2, [r4, #56]	; 0x38
 80134ae:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80134b0:	4413      	add	r3, r2
 80134b2:	b29b      	uxth	r3, r3
 80134b4:	2b09      	cmp	r3, #9
 80134b6:	bf88      	it	hi
 80134b8:	3b0a      	subhi	r3, #10
 80134ba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80134be:	8458      	strh	r0, [r3, #34]	; 0x22
 80134c0:	e7ec      	b.n	801349c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80134c2:	bd10      	pop	{r4, pc}

080134c4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80134c4:	b538      	push	{r3, r4, r5, lr}
 80134c6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80134c8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80134cc:	4604      	mov	r4, r0
 80134ce:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80134d0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80134d2:	3a01      	subs	r2, #1
 80134d4:	8702      	strh	r2, [r0, #56]	; 0x38
 80134d6:	1c5a      	adds	r2, r3, #1
 80134d8:	b292      	uxth	r2, r2
 80134da:	2a09      	cmp	r2, #9
 80134dc:	bf86      	itte	hi
 80134de:	3b09      	subhi	r3, #9
 80134e0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80134e2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80134e4:	f7ff ffb5 	bl	8013452 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80134e8:	8c23      	ldrh	r3, [r4, #32]
 80134ea:	2b01      	cmp	r3, #1
 80134ec:	bf9c      	itt	ls
 80134ee:	3301      	addls	r3, #1
 80134f0:	8423      	strhls	r3, [r4, #32]
 80134f2:	8be3      	ldrh	r3, [r4, #30]
 80134f4:	b90b      	cbnz	r3, 80134fa <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80134f6:	2302      	movs	r3, #2
 80134f8:	83e3      	strh	r3, [r4, #30]
 80134fa:	8be3      	ldrh	r3, [r4, #30]
 80134fc:	3b01      	subs	r3, #1
 80134fe:	b29b      	uxth	r3, r3
 8013500:	83e3      	strh	r3, [r4, #30]
 8013502:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013506:	4628      	mov	r0, r5
 8013508:	8365      	strh	r5, [r4, #26]
 801350a:	bd38      	pop	{r3, r4, r5, pc}

0801350c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801350c:	428a      	cmp	r2, r1
 801350e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013512:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8013514:	d931      	bls.n	801357a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8013516:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8013518:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801351c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8013520:	19ee      	adds	r6, r5, r7
 8013522:	1a54      	subs	r4, r2, r1
 8013524:	3e01      	subs	r6, #1
 8013526:	fa1f fe84 	uxth.w	lr, r4
 801352a:	b2b4      	uxth	r4, r6
 801352c:	eba4 090e 	sub.w	r9, r4, lr
 8013530:	fa1f f989 	uxth.w	r9, r9
 8013534:	2c09      	cmp	r4, #9
 8013536:	4626      	mov	r6, r4
 8013538:	bf88      	it	hi
 801353a:	f1a4 060a 	subhi.w	r6, r4, #10
 801353e:	f1bc 0f00 	cmp.w	ip, #0
 8013542:	bf08      	it	eq
 8013544:	f04f 0c02 	moveq.w	ip, #2
 8013548:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801354c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013550:	fa1f fc8c 	uxth.w	ip, ip
 8013554:	3c01      	subs	r4, #1
 8013556:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801355a:	b2a4      	uxth	r4, r4
 801355c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013560:	454c      	cmp	r4, r9
 8013562:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013566:	d1e5      	bne.n	8013534 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013568:	eba5 050e 	sub.w	r5, r5, lr
 801356c:	eb0e 0408 	add.w	r4, lr, r8
 8013570:	8705      	strh	r5, [r0, #56]	; 0x38
 8013572:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013576:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801357a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801357c:	1a64      	subs	r4, r4, r1
 801357e:	4439      	add	r1, r7
 8013580:	b289      	uxth	r1, r1
 8013582:	2909      	cmp	r1, #9
 8013584:	bf88      	it	hi
 8013586:	390a      	subhi	r1, #10
 8013588:	8704      	strh	r4, [r0, #56]	; 0x38
 801358a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801358c:	250a      	movs	r5, #10
 801358e:	b18a      	cbz	r2, 80135b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013590:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013592:	3a01      	subs	r2, #1
 8013594:	b292      	uxth	r2, r2
 8013596:	3101      	adds	r1, #1
 8013598:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801359c:	8701      	strh	r1, [r0, #56]	; 0x38
 801359e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80135a0:	b901      	cbnz	r1, 80135a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80135a2:	86c5      	strh	r5, [r0, #54]	; 0x36
 80135a4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80135a6:	3901      	subs	r1, #1
 80135a8:	b289      	uxth	r1, r1
 80135aa:	86c1      	strh	r1, [r0, #54]	; 0x36
 80135ac:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80135b0:	844c      	strh	r4, [r1, #34]	; 0x22
 80135b2:	e7ec      	b.n	801358e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80135b4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80135b8:	f7ff bf4b 	b.w	8013452 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080135bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80135bc:	b570      	push	{r4, r5, r6, lr}
 80135be:	2500      	movs	r5, #0
 80135c0:	4295      	cmp	r5, r2
 80135c2:	d011      	beq.n	80135e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80135c4:	8bc4      	ldrh	r4, [r0, #30]
 80135c6:	f831 6b02 	ldrh.w	r6, [r1], #2
 80135ca:	4414      	add	r4, r2
 80135cc:	3c01      	subs	r4, #1
 80135ce:	1b64      	subs	r4, r4, r5
 80135d0:	b2a4      	uxth	r4, r4
 80135d2:	2c01      	cmp	r4, #1
 80135d4:	bf88      	it	hi
 80135d6:	3c02      	subhi	r4, #2
 80135d8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80135dc:	8b64      	ldrh	r4, [r4, #26]
 80135de:	42b4      	cmp	r4, r6
 80135e0:	d117      	bne.n	8013612 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80135e2:	3501      	adds	r5, #1
 80135e4:	b2ad      	uxth	r5, r5
 80135e6:	e7eb      	b.n	80135c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80135e8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80135ec:	2400      	movs	r4, #0
 80135ee:	4413      	add	r3, r2
 80135f0:	b2a2      	uxth	r2, r4
 80135f2:	429a      	cmp	r2, r3
 80135f4:	da0f      	bge.n	8013616 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80135f6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80135f8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80135fc:	4432      	add	r2, r6
 80135fe:	b292      	uxth	r2, r2
 8013600:	2a09      	cmp	r2, #9
 8013602:	bf88      	it	hi
 8013604:	3a0a      	subhi	r2, #10
 8013606:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801360a:	3401      	adds	r4, #1
 801360c:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801360e:	42aa      	cmp	r2, r5
 8013610:	d0ee      	beq.n	80135f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8013612:	2000      	movs	r0, #0
 8013614:	bd70      	pop	{r4, r5, r6, pc}
 8013616:	2001      	movs	r0, #1
 8013618:	e7fc      	b.n	8013614 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801361a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801361a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801361e:	4605      	mov	r5, r0
 8013620:	4616      	mov	r6, r2
 8013622:	1c8c      	adds	r4, r1, #2
 8013624:	8809      	ldrh	r1, [r1, #0]
 8013626:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801362a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801362e:	42b3      	cmp	r3, r6
 8013630:	d124      	bne.n	801367c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013632:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013636:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801363a:	f001 070f 	and.w	r7, r1, #15
 801363e:	f8cd 8000 	str.w	r8, [sp]
 8013642:	464b      	mov	r3, r9
 8013644:	4652      	mov	r2, sl
 8013646:	4621      	mov	r1, r4
 8013648:	4628      	mov	r0, r5
 801364a:	f7ff ffb7 	bl	80135bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801364e:	4683      	mov	fp, r0
 8013650:	b168      	cbz	r0, 801366e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013652:	eb0a 0109 	add.w	r1, sl, r9
 8013656:	4441      	add	r1, r8
 8013658:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801365c:	463a      	mov	r2, r7
 801365e:	4649      	mov	r1, r9
 8013660:	4628      	mov	r0, r5
 8013662:	f7ff ff53 	bl	801350c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013666:	4658      	mov	r0, fp
 8013668:	b003      	add	sp, #12
 801366a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801366e:	eb07 010a 	add.w	r1, r7, sl
 8013672:	4449      	add	r1, r9
 8013674:	4441      	add	r1, r8
 8013676:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801367a:	e7d2      	b.n	8013622 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801367c:	f04f 0b00 	mov.w	fp, #0
 8013680:	e7f1      	b.n	8013666 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013682 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013682:	b570      	push	{r4, r5, r6, lr}
 8013684:	8810      	ldrh	r0, [r2, #0]
 8013686:	4298      	cmp	r0, r3
 8013688:	d817      	bhi.n	80136ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801368a:	1e48      	subs	r0, r1, #1
 801368c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013690:	4298      	cmp	r0, r3
 8013692:	d312      	bcc.n	80136ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013694:	2400      	movs	r4, #0
 8013696:	428c      	cmp	r4, r1
 8013698:	d20f      	bcs.n	80136ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801369a:	1860      	adds	r0, r4, r1
 801369c:	1040      	asrs	r0, r0, #1
 801369e:	0085      	lsls	r5, r0, #2
 80136a0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80136a4:	42b3      	cmp	r3, r6
 80136a6:	d902      	bls.n	80136ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80136a8:	3001      	adds	r0, #1
 80136aa:	b284      	uxth	r4, r0
 80136ac:	e7f3      	b.n	8013696 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80136ae:	d201      	bcs.n	80136b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80136b0:	b281      	uxth	r1, r0
 80136b2:	e7f0      	b.n	8013696 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80136b4:	442a      	add	r2, r5
 80136b6:	8850      	ldrh	r0, [r2, #2]
 80136b8:	bd70      	pop	{r4, r5, r6, pc}
 80136ba:	2000      	movs	r0, #0
 80136bc:	e7fc      	b.n	80136b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080136be <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80136be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80136c2:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80136c4:	886f      	ldrh	r7, [r5, #2]
 80136c6:	4604      	mov	r4, r0
 80136c8:	087f      	lsrs	r7, r7, #1
 80136ca:	260b      	movs	r6, #11
 80136cc:	3e01      	subs	r6, #1
 80136ce:	d013      	beq.n	80136f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80136d0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80136d2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80136d6:	462a      	mov	r2, r5
 80136d8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80136dc:	4639      	mov	r1, r7
 80136de:	4643      	mov	r3, r8
 80136e0:	4620      	mov	r0, r4
 80136e2:	f7ff ffce 	bl	8013682 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80136e6:	b138      	cbz	r0, 80136f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80136e8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80136ec:	4642      	mov	r2, r8
 80136ee:	4620      	mov	r0, r4
 80136f0:	f7ff ff93 	bl	801361a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80136f4:	2800      	cmp	r0, #0
 80136f6:	d1e9      	bne.n	80136cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80136f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080136fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80136fc:	b570      	push	{r4, r5, r6, lr}
 80136fe:	694a      	ldr	r2, [r1, #20]
 8013700:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8013702:	684b      	ldr	r3, [r1, #4]
 8013704:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8013706:	1b54      	subs	r4, r2, r5
 8013708:	f000 8106 	beq.w	8013918 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801370c:	1b9b      	subs	r3, r3, r6
 801370e:	d003      	beq.n	8013718 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013710:	4363      	muls	r3, r4
 8013712:	2210      	movs	r2, #16
 8013714:	fb93 f3f2 	sdiv	r3, r3, r2
 8013718:	680c      	ldr	r4, [r1, #0]
 801371a:	698a      	ldr	r2, [r1, #24]
 801371c:	1b65      	subs	r5, r4, r5
 801371e:	f000 80fd 	beq.w	801391c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8013722:	1b92      	subs	r2, r2, r6
 8013724:	d003      	beq.n	801372e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013726:	436a      	muls	r2, r5
 8013728:	2410      	movs	r4, #16
 801372a:	fb92 f2f4 	sdiv	r2, r2, r4
 801372e:	1a9b      	subs	r3, r3, r2
 8013730:	ee07 3a90 	vmov	s15, r3
 8013734:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013958 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013738:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801373c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013740:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013744:	460a      	mov	r2, r1
 8013746:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801374a:	4603      	mov	r3, r0
 801374c:	f100 040c 	add.w	r4, r0, #12
 8013750:	eeb1 6a43 	vneg.f32	s12, s6
 8013754:	edd2 7a02 	vldr	s15, [r2, #8]
 8013758:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801375c:	3214      	adds	r2, #20
 801375e:	ece3 6a01 	vstmia	r3!, {s13}
 8013762:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013766:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801376a:	429c      	cmp	r4, r3
 801376c:	edc3 7a02 	vstr	s15, [r3, #8]
 8013770:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013774:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013778:	edc3 7a05 	vstr	s15, [r3, #20]
 801377c:	d1ea      	bne.n	8013754 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801377e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013780:	698b      	ldr	r3, [r1, #24]
 8013782:	edd0 4a02 	vldr	s9, [r0, #8]
 8013786:	edd0 3a00 	vldr	s7, [r0]
 801378a:	edd0 6a01 	vldr	s13, [r0, #4]
 801378e:	ed90 5a05 	vldr	s10, [r0, #20]
 8013792:	ed90 2a03 	vldr	s4, [r0, #12]
 8013796:	edd0 5a04 	vldr	s11, [r0, #16]
 801379a:	ed90 1a07 	vldr	s2, [r0, #28]
 801379e:	edd0 2a06 	vldr	s5, [r0, #24]
 80137a2:	1a9b      	subs	r3, r3, r2
 80137a4:	ee07 3a90 	vmov	s15, r3
 80137a8:	684b      	ldr	r3, [r1, #4]
 80137aa:	1a9b      	subs	r3, r3, r2
 80137ac:	ee07 3a10 	vmov	s14, r3
 80137b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80137b4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80137b8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80137bc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80137c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80137c4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80137c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80137cc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80137d0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80137d4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80137d8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80137dc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80137e0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80137e2:	694a      	ldr	r2, [r1, #20]
 80137e4:	1b13      	subs	r3, r2, r4
 80137e6:	ee07 3a10 	vmov	s14, r3
 80137ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80137ee:	680b      	ldr	r3, [r1, #0]
 80137f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80137f4:	1b1b      	subs	r3, r3, r4
 80137f6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80137fa:	ee07 3a10 	vmov	s14, r3
 80137fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013802:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013806:	eee6 4a87 	vfma.f32	s9, s13, s14
 801380a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801380e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8013812:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013814:	698b      	ldr	r3, [r1, #24]
 8013816:	1a9b      	subs	r3, r3, r2
 8013818:	ee06 3a90 	vmov	s13, r3
 801381c:	684b      	ldr	r3, [r1, #4]
 801381e:	1a9b      	subs	r3, r3, r2
 8013820:	ee07 3a10 	vmov	s14, r3
 8013824:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013828:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801382c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013830:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013834:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013838:	eee5 6a87 	vfma.f32	s13, s11, s14
 801383c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013840:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013844:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013846:	694a      	ldr	r2, [r1, #20]
 8013848:	1b13      	subs	r3, r2, r4
 801384a:	ee07 3a10 	vmov	s14, r3
 801384e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013852:	680b      	ldr	r3, [r1, #0]
 8013854:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013858:	1b1b      	subs	r3, r3, r4
 801385a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801385e:	ee07 3a10 	vmov	s14, r3
 8013862:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013866:	ee27 7a04 	vmul.f32	s14, s14, s8
 801386a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801386e:	edd0 5a08 	vldr	s11, [r0, #32]
 8013872:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013876:	ee31 1a65 	vsub.f32	s2, s2, s11
 801387a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801387e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013880:	698b      	ldr	r3, [r1, #24]
 8013882:	1a9b      	subs	r3, r3, r2
 8013884:	ee07 3a10 	vmov	s14, r3
 8013888:	684b      	ldr	r3, [r1, #4]
 801388a:	1a9b      	subs	r3, r3, r2
 801388c:	ee01 3a90 	vmov	s3, r3
 8013890:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013894:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013898:	ee27 7a04 	vmul.f32	s14, s14, s8
 801389c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80138a0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80138a4:	ee61 1a84 	vmul.f32	s3, s3, s8
 80138a8:	eea1 7a21 	vfma.f32	s14, s2, s3
 80138ac:	ee27 7a03 	vmul.f32	s14, s14, s6
 80138b0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80138b4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80138b6:	694a      	ldr	r2, [r1, #20]
 80138b8:	1b13      	subs	r3, r2, r4
 80138ba:	ee03 3a10 	vmov	s6, r3
 80138be:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80138c2:	680b      	ldr	r3, [r1, #0]
 80138c4:	ee23 3a04 	vmul.f32	s6, s6, s8
 80138c8:	1b1b      	subs	r3, r3, r4
 80138ca:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80138ce:	ee03 3a10 	vmov	s6, r3
 80138d2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80138d6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80138da:	eee1 5a04 	vfma.f32	s11, s2, s8
 80138de:	ee25 6a86 	vmul.f32	s12, s11, s12
 80138e2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80138e6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80138ea:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80138ee:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80138f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80138f6:	dd13      	ble.n	8013920 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80138f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80138fc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8013900:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013902:	eee3 7a87 	vfma.f32	s15, s7, s14
 8013906:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801390a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801390e:	dd15      	ble.n	801393c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013910:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013914:	6403      	str	r3, [r0, #64]	; 0x40
 8013916:	bd70      	pop	{r4, r5, r6, pc}
 8013918:	4623      	mov	r3, r4
 801391a:	e6fd      	b.n	8013718 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801391c:	462a      	mov	r2, r5
 801391e:	e706      	b.n	801372e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013920:	d502      	bpl.n	8013928 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013922:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013926:	e7e9      	b.n	80138fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013928:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801392c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013930:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013934:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013938:	dade      	bge.n	80138f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801393a:	e7f2      	b.n	8013922 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801393c:	d502      	bpl.n	8013944 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801393e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013942:	e7e7      	b.n	8013914 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013944:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013948:	eee3 4a86 	vfma.f32	s9, s7, s12
 801394c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013950:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013954:	dadc      	bge.n	8013910 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013956:	e7f2      	b.n	801393e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013958:	3d800000 	.word	0x3d800000

0801395c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801395c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013960:	2714      	movs	r7, #20
 8013962:	435f      	muls	r7, r3
 8013964:	eb02 0c07 	add.w	ip, r2, r7
 8013968:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801396c:	f115 0e0f 	adds.w	lr, r5, #15
 8013970:	f100 80a2 	bmi.w	8013ab8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013974:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013978:	9c08      	ldr	r4, [sp, #32]
 801397a:	f8c0 e014 	str.w	lr, [r0, #20]
 801397e:	2614      	movs	r6, #20
 8013980:	4366      	muls	r6, r4
 8013982:	eb02 0806 	add.w	r8, r2, r6
 8013986:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801398a:	f115 040f 	adds.w	r4, r5, #15
 801398e:	f100 809f 	bmi.w	8013ad0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013992:	1124      	asrs	r4, r4, #4
 8013994:	eba4 040e 	sub.w	r4, r4, lr
 8013998:	6184      	str	r4, [r0, #24]
 801399a:	2c00      	cmp	r4, #0
 801399c:	f000 808a 	beq.w	8013ab4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80139a0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80139a4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80139a8:	5995      	ldr	r5, [r2, r6]
 80139aa:	eba4 0809 	sub.w	r8, r4, r9
 80139ae:	59d4      	ldr	r4, [r2, r7]
 80139b0:	eba5 0a04 	sub.w	sl, r5, r4
 80139b4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80139b8:	fb0e fe05 	mul.w	lr, lr, r5
 80139bc:	fb0a ee19 	mls	lr, sl, r9, lr
 80139c0:	fb08 e404 	mla	r4, r8, r4, lr
 80139c4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80139c8:	3c01      	subs	r4, #1
 80139ca:	19a4      	adds	r4, r4, r6
 80139cc:	f100 808c 	bmi.w	8013ae8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80139d0:	fb94 fef6 	sdiv	lr, r4, r6
 80139d4:	f8c0 e000 	str.w	lr, [r0]
 80139d8:	fb06 441e 	mls	r4, r6, lr, r4
 80139dc:	6104      	str	r4, [r0, #16]
 80139de:	2d00      	cmp	r5, #0
 80139e0:	f2c0 8095 	blt.w	8013b0e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80139e4:	fb95 f4f6 	sdiv	r4, r5, r6
 80139e8:	6044      	str	r4, [r0, #4]
 80139ea:	fb06 5514 	mls	r5, r6, r4, r5
 80139ee:	6085      	str	r5, [r0, #8]
 80139f0:	60c6      	str	r6, [r0, #12]
 80139f2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80139f6:	6945      	ldr	r5, [r0, #20]
 80139f8:	59d2      	ldr	r2, [r2, r7]
 80139fa:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8013b30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80139fe:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013a02:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8013a06:	ee07 4a10 	vmov	s14, r4
 8013a0a:	6804      	ldr	r4, [r0, #0]
 8013a0c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013a10:	ee07 2a90 	vmov	s15, r2
 8013a14:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013a1c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013a20:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013a24:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013a28:	edd3 6a00 	vldr	s13, [r3]
 8013a2c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013a30:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8013a34:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013a38:	edc0 6a07 	vstr	s13, [r0, #28]
 8013a3c:	edd0 6a01 	vldr	s13, [r0, #4]
 8013a40:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013a44:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013a48:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013a4c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013a50:	ed80 6a08 	vstr	s12, [r0, #32]
 8013a54:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013a56:	6242      	str	r2, [r0, #36]	; 0x24
 8013a58:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8013a5c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013a60:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013a64:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013a68:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8013a6c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013a70:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013a74:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013a78:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013a7c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013a80:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013a82:	6302      	str	r2, [r0, #48]	; 0x30
 8013a84:	ed93 6a06 	vldr	s12, [r3, #24]
 8013a88:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8013a8c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013a90:	eeb0 7a46 	vmov.f32	s14, s12
 8013a94:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013a98:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013a9c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013aa0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013aa4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013aa8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013aac:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8013ab0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8013ab2:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013ab4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013ab8:	f1c5 0501 	rsb	r5, r5, #1
 8013abc:	f015 050f 	ands.w	r5, r5, #15
 8013ac0:	bf18      	it	ne
 8013ac2:	2501      	movne	r5, #1
 8013ac4:	2410      	movs	r4, #16
 8013ac6:	fb9e fef4 	sdiv	lr, lr, r4
 8013aca:	ebae 0e05 	sub.w	lr, lr, r5
 8013ace:	e753      	b.n	8013978 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8013ad0:	f1c5 0501 	rsb	r5, r5, #1
 8013ad4:	f015 050f 	ands.w	r5, r5, #15
 8013ad8:	bf18      	it	ne
 8013ada:	2501      	movne	r5, #1
 8013adc:	f04f 0910 	mov.w	r9, #16
 8013ae0:	fb94 f4f9 	sdiv	r4, r4, r9
 8013ae4:	1b64      	subs	r4, r4, r5
 8013ae6:	e755      	b.n	8013994 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013ae8:	4264      	negs	r4, r4
 8013aea:	fb94 fef6 	sdiv	lr, r4, r6
 8013aee:	f1ce 0800 	rsb	r8, lr, #0
 8013af2:	fb06 441e 	mls	r4, r6, lr, r4
 8013af6:	f8c0 8000 	str.w	r8, [r0]
 8013afa:	6104      	str	r4, [r0, #16]
 8013afc:	2c00      	cmp	r4, #0
 8013afe:	f43f af6e 	beq.w	80139de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8013b02:	ea6f 0e0e 	mvn.w	lr, lr
 8013b06:	f8c0 e000 	str.w	lr, [r0]
 8013b0a:	1b34      	subs	r4, r6, r4
 8013b0c:	e766      	b.n	80139dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8013b0e:	426d      	negs	r5, r5
 8013b10:	fb95 f4f6 	sdiv	r4, r5, r6
 8013b14:	f1c4 0e00 	rsb	lr, r4, #0
 8013b18:	fb06 5514 	mls	r5, r6, r4, r5
 8013b1c:	f8c0 e004 	str.w	lr, [r0, #4]
 8013b20:	6085      	str	r5, [r0, #8]
 8013b22:	2d00      	cmp	r5, #0
 8013b24:	f43f af64 	beq.w	80139f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013b28:	43e4      	mvns	r4, r4
 8013b2a:	6044      	str	r4, [r0, #4]
 8013b2c:	1b75      	subs	r5, r6, r5
 8013b2e:	e75e      	b.n	80139ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013b30:	3d800000 	.word	0x3d800000

08013b34 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013b34:	4602      	mov	r2, r0
 8013b36:	b148      	cbz	r0, 8013b4c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013b38:	2300      	movs	r3, #0
 8013b3a:	b298      	uxth	r0, r3
 8013b3c:	3301      	adds	r3, #1
 8013b3e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013b42:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013b46:	2900      	cmp	r1, #0
 8013b48:	d1f7      	bne.n	8013b3a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8013b4a:	4770      	bx	lr
 8013b4c:	4770      	bx	lr

08013b4e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8013b4e:	b530      	push	{r4, r5, lr}
 8013b50:	4604      	mov	r4, r0
 8013b52:	b159      	cbz	r1, 8013b6c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013b54:	b148      	cbz	r0, 8013b6a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013b56:	2300      	movs	r3, #0
 8013b58:	b298      	uxth	r0, r3
 8013b5a:	4282      	cmp	r2, r0
 8013b5c:	d905      	bls.n	8013b6a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013b5e:	5ccd      	ldrb	r5, [r1, r3]
 8013b60:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013b64:	3301      	adds	r3, #1
 8013b66:	2d00      	cmp	r5, #0
 8013b68:	d1f6      	bne.n	8013b58 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8013b6a:	bd30      	pop	{r4, r5, pc}
 8013b6c:	4608      	mov	r0, r1
 8013b6e:	e7fc      	b.n	8013b6a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013b70 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013b72:	b08b      	sub	sp, #44	; 0x2c
 8013b74:	468c      	mov	ip, r1
 8013b76:	2100      	movs	r1, #0
 8013b78:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013b7c:	ae01      	add	r6, sp, #4
 8013b7e:	211f      	movs	r1, #31
 8013b80:	fbb0 f7f3 	udiv	r7, r0, r3
 8013b84:	fb03 0517 	mls	r5, r3, r7, r0
 8013b88:	b2ec      	uxtb	r4, r5
 8013b8a:	2d09      	cmp	r5, #9
 8013b8c:	bfd4      	ite	le
 8013b8e:	3430      	addle	r4, #48	; 0x30
 8013b90:	3457      	addgt	r4, #87	; 0x57
 8013b92:	b2e4      	uxtb	r4, r4
 8013b94:	558c      	strb	r4, [r1, r6]
 8013b96:	4638      	mov	r0, r7
 8013b98:	1e4c      	subs	r4, r1, #1
 8013b9a:	b92f      	cbnz	r7, 8013ba8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013b9c:	4431      	add	r1, r6
 8013b9e:	4660      	mov	r0, ip
 8013ba0:	f7ff ffd5 	bl	8013b4e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013ba4:	b00b      	add	sp, #44	; 0x2c
 8013ba6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ba8:	4621      	mov	r1, r4
 8013baa:	e7e9      	b.n	8013b80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013bac <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013bac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013bae:	4607      	mov	r7, r0
 8013bb0:	b08b      	sub	sp, #44	; 0x2c
 8013bb2:	4608      	mov	r0, r1
 8013bb4:	b341      	cbz	r1, 8013c08 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013bb6:	1e99      	subs	r1, r3, #2
 8013bb8:	2922      	cmp	r1, #34	; 0x22
 8013bba:	d825      	bhi.n	8013c08 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013bbc:	2100      	movs	r1, #0
 8013bbe:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013bc2:	463c      	mov	r4, r7
 8013bc4:	261f      	movs	r6, #31
 8013bc6:	f10d 0c04 	add.w	ip, sp, #4
 8013bca:	fb94 fef3 	sdiv	lr, r4, r3
 8013bce:	fb03 441e 	mls	r4, r3, lr, r4
 8013bd2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013bd6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013bda:	b2ec      	uxtb	r4, r5
 8013bdc:	2d09      	cmp	r5, #9
 8013bde:	bfd4      	ite	le
 8013be0:	3430      	addle	r4, #48	; 0x30
 8013be2:	3457      	addgt	r4, #87	; 0x57
 8013be4:	b2e4      	uxtb	r4, r4
 8013be6:	f80c 4006 	strb.w	r4, [ip, r6]
 8013bea:	4674      	mov	r4, lr
 8013bec:	1e71      	subs	r1, r6, #1
 8013bee:	b96c      	cbnz	r4, 8013c0c <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8013bf0:	2f00      	cmp	r7, #0
 8013bf2:	da05      	bge.n	8013c00 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8013bf4:	ab0a      	add	r3, sp, #40	; 0x28
 8013bf6:	4419      	add	r1, r3
 8013bf8:	232d      	movs	r3, #45	; 0x2d
 8013bfa:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013bfe:	1eb1      	subs	r1, r6, #2
 8013c00:	3101      	adds	r1, #1
 8013c02:	4461      	add	r1, ip
 8013c04:	f7ff ffa3 	bl	8013b4e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013c08:	b00b      	add	sp, #44	; 0x2c
 8013c0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013c0c:	460e      	mov	r6, r1
 8013c0e:	e7dc      	b.n	8013bca <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08013c10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c14:	4691      	mov	r9, r2
 8013c16:	b085      	sub	sp, #20
 8013c18:	6802      	ldr	r2, [r0, #0]
 8013c1a:	9201      	str	r2, [sp, #4]
 8013c1c:	4688      	mov	r8, r1
 8013c1e:	4683      	mov	fp, r0
 8013c20:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013c24:	9103      	str	r1, [sp, #12]
 8013c26:	4610      	mov	r0, r2
 8013c28:	461c      	mov	r4, r3
 8013c2a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013c2e:	9302      	str	r3, [sp, #8]
 8013c30:	f7ff ff80 	bl	8013b34 <_ZN8touchgfx7Unicode6strlenEPKt>
 8013c34:	f1b8 0f00 	cmp.w	r8, #0
 8013c38:	bf0c      	ite	eq
 8013c3a:	4684      	moveq	ip, r0
 8013c3c:	f100 0c01 	addne.w	ip, r0, #1
 8013c40:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013c44:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013c48:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013c4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013c4c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013c50:	9903      	ldr	r1, [sp, #12]
 8013c52:	fa1f fc8c 	uxth.w	ip, ip
 8013c56:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013c5a:	d041      	beq.n	8013ce0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013c5c:	d834      	bhi.n	8013cc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013c5e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013c62:	d059      	beq.n	8013d18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013c64:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013c68:	d03a      	beq.n	8013ce0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013c6a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013c6e:	d034      	beq.n	8013cda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013c70:	2400      	movs	r4, #0
 8013c72:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013c76:	3a01      	subs	r2, #1
 8013c78:	b169      	cbz	r1, 8013c96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013c7a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013c7c:	458c      	cmp	ip, r1
 8013c7e:	da09      	bge.n	8013c94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013c80:	eba1 010c 	sub.w	r1, r1, ip
 8013c84:	b289      	uxth	r1, r1
 8013c86:	b933      	cbnz	r3, 8013c96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013c88:	2e00      	cmp	r6, #0
 8013c8a:	d051      	beq.n	8013d30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013c8c:	2800      	cmp	r0, #0
 8013c8e:	d04f      	beq.n	8013d30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013c90:	440c      	add	r4, r1
 8013c92:	b2a4      	uxth	r4, r4
 8013c94:	2100      	movs	r1, #0
 8013c96:	682b      	ldr	r3, [r5, #0]
 8013c98:	4293      	cmp	r3, r2
 8013c9a:	da07      	bge.n	8013cac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013c9c:	f1b8 0f00 	cmp.w	r8, #0
 8013ca0:	d004      	beq.n	8013cac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013ca2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013ca6:	682b      	ldr	r3, [r5, #0]
 8013ca8:	3301      	adds	r3, #1
 8013caa:	602b      	str	r3, [r5, #0]
 8013cac:	2730      	movs	r7, #48	; 0x30
 8013cae:	2c00      	cmp	r4, #0
 8013cb0:	d04e      	beq.n	8013d50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013cb2:	682e      	ldr	r6, [r5, #0]
 8013cb4:	3c01      	subs	r4, #1
 8013cb6:	42b2      	cmp	r2, r6
 8013cb8:	b2a4      	uxth	r4, r4
 8013cba:	dd49      	ble.n	8013d50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013cbc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013cc0:	682b      	ldr	r3, [r5, #0]
 8013cc2:	3301      	adds	r3, #1
 8013cc4:	602b      	str	r3, [r5, #0]
 8013cc6:	e7f2      	b.n	8013cae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013cc8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013ccc:	d01d      	beq.n	8013d0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013cce:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013cd2:	d002      	beq.n	8013cda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013cd4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013cd8:	e7c9      	b.n	8013c6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013cda:	4684      	mov	ip, r0
 8013cdc:	f04f 0800 	mov.w	r8, #0
 8013ce0:	2c00      	cmp	r4, #0
 8013ce2:	d0c6      	beq.n	8013c72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013ce4:	b947      	cbnz	r7, 8013cf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013ce6:	2801      	cmp	r0, #1
 8013ce8:	d106      	bne.n	8013cf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013cea:	8814      	ldrh	r4, [r2, #0]
 8013cec:	2c30      	cmp	r4, #48	; 0x30
 8013cee:	bf02      	ittt	eq
 8013cf0:	3202      	addeq	r2, #2
 8013cf2:	f8cb 2000 	streq.w	r2, [fp]
 8013cf6:	4638      	moveq	r0, r7
 8013cf8:	45bc      	cmp	ip, r7
 8013cfa:	da14      	bge.n	8013d26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013cfc:	b2bf      	uxth	r7, r7
 8013cfe:	eba7 040c 	sub.w	r4, r7, ip
 8013d02:	b2a4      	uxth	r4, r4
 8013d04:	46bc      	mov	ip, r7
 8013d06:	2600      	movs	r6, #0
 8013d08:	e7b3      	b.n	8013c72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013d0a:	4684      	mov	ip, r0
 8013d0c:	b16c      	cbz	r4, 8013d2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013d0e:	42b8      	cmp	r0, r7
 8013d10:	dd00      	ble.n	8013d14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013d12:	b2b8      	uxth	r0, r7
 8013d14:	2400      	movs	r4, #0
 8013d16:	e003      	b.n	8013d20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013d18:	f04f 0c01 	mov.w	ip, #1
 8013d1c:	2400      	movs	r4, #0
 8013d1e:	4660      	mov	r0, ip
 8013d20:	4626      	mov	r6, r4
 8013d22:	46a0      	mov	r8, r4
 8013d24:	e7a5      	b.n	8013c72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013d26:	2400      	movs	r4, #0
 8013d28:	e7ed      	b.n	8013d06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013d2a:	4626      	mov	r6, r4
 8013d2c:	46a0      	mov	r8, r4
 8013d2e:	e7a0      	b.n	8013c72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013d30:	2900      	cmp	r1, #0
 8013d32:	d0b0      	beq.n	8013c96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013d34:	2720      	movs	r7, #32
 8013d36:	682e      	ldr	r6, [r5, #0]
 8013d38:	2900      	cmp	r1, #0
 8013d3a:	d0ac      	beq.n	8013c96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013d3c:	3901      	subs	r1, #1
 8013d3e:	4296      	cmp	r6, r2
 8013d40:	b289      	uxth	r1, r1
 8013d42:	daa7      	bge.n	8013c94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013d44:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013d48:	682b      	ldr	r3, [r5, #0]
 8013d4a:	3301      	adds	r3, #1
 8013d4c:	602b      	str	r3, [r5, #0]
 8013d4e:	e7f2      	b.n	8013d36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013d50:	b188      	cbz	r0, 8013d76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013d52:	682b      	ldr	r3, [r5, #0]
 8013d54:	3801      	subs	r0, #1
 8013d56:	429a      	cmp	r2, r3
 8013d58:	b280      	uxth	r0, r0
 8013d5a:	dd0c      	ble.n	8013d76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013d5c:	f8db 3000 	ldr.w	r3, [fp]
 8013d60:	1c9c      	adds	r4, r3, #2
 8013d62:	f8cb 4000 	str.w	r4, [fp]
 8013d66:	881c      	ldrh	r4, [r3, #0]
 8013d68:	682b      	ldr	r3, [r5, #0]
 8013d6a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013d6e:	682b      	ldr	r3, [r5, #0]
 8013d70:	3301      	adds	r3, #1
 8013d72:	602b      	str	r3, [r5, #0]
 8013d74:	e7ec      	b.n	8013d50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013d76:	2620      	movs	r6, #32
 8013d78:	b151      	cbz	r1, 8013d90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013d7a:	6828      	ldr	r0, [r5, #0]
 8013d7c:	3901      	subs	r1, #1
 8013d7e:	4282      	cmp	r2, r0
 8013d80:	b289      	uxth	r1, r1
 8013d82:	dd05      	ble.n	8013d90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013d84:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013d88:	682b      	ldr	r3, [r5, #0]
 8013d8a:	3301      	adds	r3, #1
 8013d8c:	602b      	str	r3, [r5, #0]
 8013d8e:	e7f3      	b.n	8013d78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013d90:	b005      	add	sp, #20
 8013d92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013d96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013d96:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013d9a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013d9e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013da2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013da6:	2400      	movs	r4, #0
 8013da8:	8014      	strh	r4, [r2, #0]
 8013daa:	701c      	strb	r4, [r3, #0]
 8013dac:	f888 4000 	strb.w	r4, [r8]
 8013db0:	f88c 4000 	strb.w	r4, [ip]
 8013db4:	f88e 4000 	strb.w	r4, [lr]
 8013db8:	703c      	strb	r4, [r7, #0]
 8013dba:	6804      	ldr	r4, [r0, #0]
 8013dbc:	b1a4      	cbz	r4, 8013de8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013dbe:	8824      	ldrh	r4, [r4, #0]
 8013dc0:	f04f 0901 	mov.w	r9, #1
 8013dc4:	b314      	cbz	r4, 8013e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013dc6:	2c2b      	cmp	r4, #43	; 0x2b
 8013dc8:	d001      	beq.n	8013dce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013dca:	2c20      	cmp	r4, #32
 8013dcc:	d110      	bne.n	8013df0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013dce:	8014      	strh	r4, [r2, #0]
 8013dd0:	6804      	ldr	r4, [r0, #0]
 8013dd2:	b10c      	cbz	r4, 8013dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013dd4:	3402      	adds	r4, #2
 8013dd6:	6004      	str	r4, [r0, #0]
 8013dd8:	680c      	ldr	r4, [r1, #0]
 8013dda:	b10c      	cbz	r4, 8013de0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013ddc:	3401      	adds	r4, #1
 8013dde:	600c      	str	r4, [r1, #0]
 8013de0:	6804      	ldr	r4, [r0, #0]
 8013de2:	b17c      	cbz	r4, 8013e04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013de4:	8824      	ldrh	r4, [r4, #0]
 8013de6:	e7ed      	b.n	8013dc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013de8:	680c      	ldr	r4, [r1, #0]
 8013dea:	b17c      	cbz	r4, 8013e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013dec:	7824      	ldrb	r4, [r4, #0]
 8013dee:	e7e7      	b.n	8013dc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8013df0:	2c2d      	cmp	r4, #45	; 0x2d
 8013df2:	d102      	bne.n	8013dfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013df4:	f883 9000 	strb.w	r9, [r3]
 8013df8:	e7ea      	b.n	8013dd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013dfa:	2c23      	cmp	r4, #35	; 0x23
 8013dfc:	d107      	bne.n	8013e0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8013dfe:	f888 9000 	strb.w	r9, [r8]
 8013e02:	e7e5      	b.n	8013dd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013e04:	680c      	ldr	r4, [r1, #0]
 8013e06:	b10c      	cbz	r4, 8013e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013e08:	7824      	ldrb	r4, [r4, #0]
 8013e0a:	e7db      	b.n	8013dc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013e0c:	2400      	movs	r4, #0
 8013e0e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013e12:	2b09      	cmp	r3, #9
 8013e14:	d901      	bls.n	8013e1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8013e16:	2c2a      	cmp	r4, #42	; 0x2a
 8013e18:	d122      	bne.n	8013e60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013e1a:	2301      	movs	r3, #1
 8013e1c:	2c30      	cmp	r4, #48	; 0x30
 8013e1e:	f88e 3000 	strb.w	r3, [lr]
 8013e22:	d10d      	bne.n	8013e40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013e24:	f88c 3000 	strb.w	r3, [ip]
 8013e28:	6803      	ldr	r3, [r0, #0]
 8013e2a:	b10b      	cbz	r3, 8013e30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013e2c:	3302      	adds	r3, #2
 8013e2e:	6003      	str	r3, [r0, #0]
 8013e30:	680b      	ldr	r3, [r1, #0]
 8013e32:	b10b      	cbz	r3, 8013e38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8013e34:	3301      	adds	r3, #1
 8013e36:	600b      	str	r3, [r1, #0]
 8013e38:	6803      	ldr	r3, [r0, #0]
 8013e3a:	2b00      	cmp	r3, #0
 8013e3c:	d02f      	beq.n	8013e9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8013e3e:	881c      	ldrh	r4, [r3, #0]
 8013e40:	2c2a      	cmp	r4, #42	; 0x2a
 8013e42:	d135      	bne.n	8013eb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013e44:	f04f 33ff 	mov.w	r3, #4294967295
 8013e48:	6033      	str	r3, [r6, #0]
 8013e4a:	6803      	ldr	r3, [r0, #0]
 8013e4c:	b10b      	cbz	r3, 8013e52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013e4e:	3302      	adds	r3, #2
 8013e50:	6003      	str	r3, [r0, #0]
 8013e52:	680b      	ldr	r3, [r1, #0]
 8013e54:	b10b      	cbz	r3, 8013e5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8013e56:	3301      	adds	r3, #1
 8013e58:	600b      	str	r3, [r1, #0]
 8013e5a:	6803      	ldr	r3, [r0, #0]
 8013e5c:	b31b      	cbz	r3, 8013ea6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013e5e:	881c      	ldrh	r4, [r3, #0]
 8013e60:	2c2e      	cmp	r4, #46	; 0x2e
 8013e62:	d11a      	bne.n	8013e9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013e64:	2301      	movs	r3, #1
 8013e66:	703b      	strb	r3, [r7, #0]
 8013e68:	6803      	ldr	r3, [r0, #0]
 8013e6a:	b10b      	cbz	r3, 8013e70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013e6c:	3302      	adds	r3, #2
 8013e6e:	6003      	str	r3, [r0, #0]
 8013e70:	680b      	ldr	r3, [r1, #0]
 8013e72:	b10b      	cbz	r3, 8013e78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013e74:	3301      	adds	r3, #1
 8013e76:	600b      	str	r3, [r1, #0]
 8013e78:	6803      	ldr	r3, [r0, #0]
 8013e7a:	2b00      	cmp	r3, #0
 8013e7c:	d036      	beq.n	8013eec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013e7e:	881b      	ldrh	r3, [r3, #0]
 8013e80:	2b2a      	cmp	r3, #42	; 0x2a
 8013e82:	d137      	bne.n	8013ef4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013e84:	f04f 33ff 	mov.w	r3, #4294967295
 8013e88:	602b      	str	r3, [r5, #0]
 8013e8a:	6803      	ldr	r3, [r0, #0]
 8013e8c:	b10b      	cbz	r3, 8013e92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013e8e:	3302      	adds	r3, #2
 8013e90:	6003      	str	r3, [r0, #0]
 8013e92:	680b      	ldr	r3, [r1, #0]
 8013e94:	b10b      	cbz	r3, 8013e9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013e96:	3301      	adds	r3, #1
 8013e98:	600b      	str	r3, [r1, #0]
 8013e9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013e9e:	680c      	ldr	r4, [r1, #0]
 8013ea0:	b134      	cbz	r4, 8013eb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013ea2:	7824      	ldrb	r4, [r4, #0]
 8013ea4:	e7cc      	b.n	8013e40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013ea6:	680b      	ldr	r3, [r1, #0]
 8013ea8:	2b00      	cmp	r3, #0
 8013eaa:	d0f6      	beq.n	8013e9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013eac:	781c      	ldrb	r4, [r3, #0]
 8013eae:	e7d7      	b.n	8013e60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013eb0:	2300      	movs	r3, #0
 8013eb2:	6033      	str	r3, [r6, #0]
 8013eb4:	220a      	movs	r2, #10
 8013eb6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013eba:	fa1f f38c 	uxth.w	r3, ip
 8013ebe:	2b09      	cmp	r3, #9
 8013ec0:	d8ce      	bhi.n	8013e60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013ec2:	6833      	ldr	r3, [r6, #0]
 8013ec4:	fb02 c303 	mla	r3, r2, r3, ip
 8013ec8:	6033      	str	r3, [r6, #0]
 8013eca:	6803      	ldr	r3, [r0, #0]
 8013ecc:	b10b      	cbz	r3, 8013ed2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013ece:	3302      	adds	r3, #2
 8013ed0:	6003      	str	r3, [r0, #0]
 8013ed2:	680b      	ldr	r3, [r1, #0]
 8013ed4:	b10b      	cbz	r3, 8013eda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013ed6:	3301      	adds	r3, #1
 8013ed8:	600b      	str	r3, [r1, #0]
 8013eda:	6803      	ldr	r3, [r0, #0]
 8013edc:	b10b      	cbz	r3, 8013ee2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013ede:	881c      	ldrh	r4, [r3, #0]
 8013ee0:	e7e9      	b.n	8013eb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013ee2:	680c      	ldr	r4, [r1, #0]
 8013ee4:	2c00      	cmp	r4, #0
 8013ee6:	d0e6      	beq.n	8013eb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013ee8:	7824      	ldrb	r4, [r4, #0]
 8013eea:	e7e4      	b.n	8013eb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013eec:	680b      	ldr	r3, [r1, #0]
 8013eee:	b10b      	cbz	r3, 8013ef4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013ef0:	781b      	ldrb	r3, [r3, #0]
 8013ef2:	e7c5      	b.n	8013e80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013ef4:	2200      	movs	r2, #0
 8013ef6:	602a      	str	r2, [r5, #0]
 8013ef8:	240a      	movs	r4, #10
 8013efa:	3b30      	subs	r3, #48	; 0x30
 8013efc:	b29e      	uxth	r6, r3
 8013efe:	2e09      	cmp	r6, #9
 8013f00:	682a      	ldr	r2, [r5, #0]
 8013f02:	d813      	bhi.n	8013f2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013f04:	fb04 3302 	mla	r3, r4, r2, r3
 8013f08:	602b      	str	r3, [r5, #0]
 8013f0a:	6803      	ldr	r3, [r0, #0]
 8013f0c:	b10b      	cbz	r3, 8013f12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013f0e:	3302      	adds	r3, #2
 8013f10:	6003      	str	r3, [r0, #0]
 8013f12:	680b      	ldr	r3, [r1, #0]
 8013f14:	b10b      	cbz	r3, 8013f1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013f16:	3301      	adds	r3, #1
 8013f18:	600b      	str	r3, [r1, #0]
 8013f1a:	6803      	ldr	r3, [r0, #0]
 8013f1c:	b10b      	cbz	r3, 8013f22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013f1e:	881b      	ldrh	r3, [r3, #0]
 8013f20:	e7eb      	b.n	8013efa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013f22:	680b      	ldr	r3, [r1, #0]
 8013f24:	2b00      	cmp	r3, #0
 8013f26:	d0e8      	beq.n	8013efa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013f28:	781b      	ldrb	r3, [r3, #0]
 8013f2a:	e7e6      	b.n	8013efa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013f2c:	2a06      	cmp	r2, #6
 8013f2e:	bfa8      	it	ge
 8013f30:	2206      	movge	r2, #6
 8013f32:	602a      	str	r2, [r5, #0]
 8013f34:	e7b1      	b.n	8013e9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013f36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f3a:	b0a3      	sub	sp, #140	; 0x8c
 8013f3c:	2600      	movs	r6, #0
 8013f3e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8013f42:	4607      	mov	r7, r0
 8013f44:	4688      	mov	r8, r1
 8013f46:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013f4a:	4631      	mov	r1, r6
 8013f4c:	2242      	movs	r2, #66	; 0x42
 8013f4e:	4648      	mov	r0, r9
 8013f50:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8013f52:	960d      	str	r6, [sp, #52]	; 0x34
 8013f54:	f00c fefa 	bl	8020d4c <memset>
 8013f58:	b15f      	cbz	r7, 8013f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013f5a:	f108 3aff 	add.w	sl, r8, #4294967295
 8013f5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013f60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f62:	b152      	cbz	r2, 8013f7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013f64:	8812      	ldrh	r2, [r2, #0]
 8013f66:	b10a      	cbz	r2, 8013f6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013f68:	459a      	cmp	sl, r3
 8013f6a:	dc2e      	bgt.n	8013fca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013f6c:	2200      	movs	r2, #0
 8013f6e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013f72:	4638      	mov	r0, r7
 8013f74:	b023      	add	sp, #140	; 0x8c
 8013f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f7a:	9a08      	ldr	r2, [sp, #32]
 8013f7c:	2a00      	cmp	r2, #0
 8013f7e:	d0f5      	beq.n	8013f6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013f80:	7812      	ldrb	r2, [r2, #0]
 8013f82:	e7f0      	b.n	8013f66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013f84:	2d00      	cmp	r5, #0
 8013f86:	d0ea      	beq.n	8013f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013f88:	782a      	ldrb	r2, [r5, #0]
 8013f8a:	b142      	cbz	r2, 8013f9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013f8c:	2a25      	cmp	r2, #37	; 0x25
 8013f8e:	d001      	beq.n	8013f94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013f90:	459a      	cmp	sl, r3
 8013f92:	dc08      	bgt.n	8013fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013f94:	f1bb 0f00 	cmp.w	fp, #0
 8013f98:	d121      	bne.n	8013fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013f9a:	2d00      	cmp	r5, #0
 8013f9c:	d0df      	beq.n	8013f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013f9e:	782a      	ldrb	r2, [r5, #0]
 8013fa0:	f04f 0b00 	mov.w	fp, #0
 8013fa4:	e01d      	b.n	8013fe2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013fa6:	f1bb 0f00 	cmp.w	fp, #0
 8013faa:	d078      	beq.n	801409e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013fac:	f8bb 2000 	ldrh.w	r2, [fp]
 8013fb0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013fb4:	f1bb 0f00 	cmp.w	fp, #0
 8013fb8:	d002      	beq.n	8013fc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013fba:	f10b 0202 	add.w	r2, fp, #2
 8013fbe:	9209      	str	r2, [sp, #36]	; 0x24
 8013fc0:	b10d      	cbz	r5, 8013fc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013fc2:	3501      	adds	r5, #1
 8013fc4:	9508      	str	r5, [sp, #32]
 8013fc6:	3301      	adds	r3, #1
 8013fc8:	930d      	str	r3, [sp, #52]	; 0x34
 8013fca:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013fce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013fd0:	f1bb 0f00 	cmp.w	fp, #0
 8013fd4:	d0d6      	beq.n	8013f84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013fd6:	f8bb 2000 	ldrh.w	r2, [fp]
 8013fda:	2a00      	cmp	r2, #0
 8013fdc:	d1d6      	bne.n	8013f8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013fde:	f8bb 2000 	ldrh.w	r2, [fp]
 8013fe2:	2a00      	cmp	r2, #0
 8013fe4:	d0bb      	beq.n	8013f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013fe6:	459a      	cmp	sl, r3
 8013fe8:	ddb9      	ble.n	8013f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013fea:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013fee:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013ff2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013ff6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013ffa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013ffe:	960e      	str	r6, [sp, #56]	; 0x38
 8014000:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8014004:	960f      	str	r6, [sp, #60]	; 0x3c
 8014006:	f1bb 0f00 	cmp.w	fp, #0
 801400a:	d002      	beq.n	8014012 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801400c:	f10b 0302 	add.w	r3, fp, #2
 8014010:	9309      	str	r3, [sp, #36]	; 0x24
 8014012:	b10d      	cbz	r5, 8014018 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8014014:	1c6b      	adds	r3, r5, #1
 8014016:	9308      	str	r3, [sp, #32]
 8014018:	ab0f      	add	r3, sp, #60	; 0x3c
 801401a:	9305      	str	r3, [sp, #20]
 801401c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8014020:	9304      	str	r3, [sp, #16]
 8014022:	ab0e      	add	r3, sp, #56	; 0x38
 8014024:	9303      	str	r3, [sp, #12]
 8014026:	ab0c      	add	r3, sp, #48	; 0x30
 8014028:	9302      	str	r3, [sp, #8]
 801402a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801402e:	9301      	str	r3, [sp, #4]
 8014030:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8014034:	9300      	str	r3, [sp, #0]
 8014036:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801403a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801403e:	a908      	add	r1, sp, #32
 8014040:	a809      	add	r0, sp, #36	; 0x24
 8014042:	f7ff fea8 	bl	8013d96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014046:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014048:	2b00      	cmp	r3, #0
 801404a:	bfbe      	ittt	lt
 801404c:	6823      	ldrlt	r3, [r4, #0]
 801404e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014052:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014054:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014056:	bfb8      	it	lt
 8014058:	3404      	addlt	r4, #4
 801405a:	2b00      	cmp	r3, #0
 801405c:	bfb8      	it	lt
 801405e:	6823      	ldrlt	r3, [r4, #0]
 8014060:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8014064:	bfbe      	ittt	lt
 8014066:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801406a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801406c:	3404      	addlt	r4, #4
 801406e:	b1d9      	cbz	r1, 80140a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8014070:	880b      	ldrh	r3, [r1, #0]
 8014072:	2b69      	cmp	r3, #105	; 0x69
 8014074:	d01f      	beq.n	80140b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014076:	d82f      	bhi.n	80140d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8014078:	2b58      	cmp	r3, #88	; 0x58
 801407a:	d01c      	beq.n	80140b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801407c:	d818      	bhi.n	80140b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801407e:	2b25      	cmp	r3, #37	; 0x25
 8014080:	d034      	beq.n	80140ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8014082:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8014086:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014088:	f1bb 0f00 	cmp.w	fp, #0
 801408c:	f000 80b8 	beq.w	8014200 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8014090:	f8bb 5000 	ldrh.w	r5, [fp]
 8014094:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8014098:	3301      	adds	r3, #1
 801409a:	930d      	str	r3, [sp, #52]	; 0x34
 801409c:	e029      	b.n	80140f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801409e:	b10d      	cbz	r5, 80140a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80140a0:	782a      	ldrb	r2, [r5, #0]
 80140a2:	e785      	b.n	8013fb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80140a4:	462a      	mov	r2, r5
 80140a6:	e783      	b.n	8013fb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80140a8:	2a00      	cmp	r2, #0
 80140aa:	d0ea      	beq.n	8014082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80140ac:	7813      	ldrb	r3, [r2, #0]
 80140ae:	e7e0      	b.n	8014072 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80140b0:	3b63      	subs	r3, #99	; 0x63
 80140b2:	2b01      	cmp	r3, #1
 80140b4:	d8e5      	bhi.n	8014082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80140b6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80140ba:	b329      	cbz	r1, 8014108 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80140bc:	880b      	ldrh	r3, [r1, #0]
 80140be:	2b69      	cmp	r3, #105	; 0x69
 80140c0:	d063      	beq.n	801418a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80140c2:	d825      	bhi.n	8014110 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80140c4:	2b63      	cmp	r3, #99	; 0x63
 80140c6:	d038      	beq.n	801413a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80140c8:	2b64      	cmp	r3, #100	; 0x64
 80140ca:	d05e      	beq.n	801418a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80140cc:	2b58      	cmp	r3, #88	; 0x58
 80140ce:	d07b      	beq.n	80141c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80140d0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80140d4:	4625      	mov	r5, r4
 80140d6:	e036      	b.n	8014146 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80140d8:	2b73      	cmp	r3, #115	; 0x73
 80140da:	d0ec      	beq.n	80140b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80140dc:	d802      	bhi.n	80140e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80140de:	2b6f      	cmp	r3, #111	; 0x6f
 80140e0:	d1cf      	bne.n	8014082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80140e2:	e7e8      	b.n	80140b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80140e4:	2b75      	cmp	r3, #117	; 0x75
 80140e6:	d0e6      	beq.n	80140b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80140e8:	2b78      	cmp	r3, #120	; 0x78
 80140ea:	e7f9      	b.n	80140e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80140ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80140ee:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80140f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80140f4:	b10b      	cbz	r3, 80140fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80140f6:	3302      	adds	r3, #2
 80140f8:	9309      	str	r3, [sp, #36]	; 0x24
 80140fa:	9b08      	ldr	r3, [sp, #32]
 80140fc:	2b00      	cmp	r3, #0
 80140fe:	f43f af2e 	beq.w	8013f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014102:	3301      	adds	r3, #1
 8014104:	9308      	str	r3, [sp, #32]
 8014106:	e72a      	b.n	8013f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014108:	2a00      	cmp	r2, #0
 801410a:	d0e1      	beq.n	80140d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801410c:	7813      	ldrb	r3, [r2, #0]
 801410e:	e7d6      	b.n	80140be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8014110:	2b73      	cmp	r3, #115	; 0x73
 8014112:	d036      	beq.n	8014182 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8014114:	d807      	bhi.n	8014126 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8014116:	2b6f      	cmp	r3, #111	; 0x6f
 8014118:	d1da      	bne.n	80140d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801411a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801411c:	1d25      	adds	r5, r4, #4
 801411e:	eba8 0202 	sub.w	r2, r8, r2
 8014122:	2308      	movs	r3, #8
 8014124:	e04a      	b.n	80141bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8014126:	2b75      	cmp	r3, #117	; 0x75
 8014128:	d043      	beq.n	80141b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801412a:	2b78      	cmp	r3, #120	; 0x78
 801412c:	d1d0      	bne.n	80140d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801412e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014130:	1d25      	adds	r5, r4, #4
 8014132:	eba8 0202 	sub.w	r2, r8, r2
 8014136:	2310      	movs	r3, #16
 8014138:	e040      	b.n	80141bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801413a:	6823      	ldr	r3, [r4, #0]
 801413c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014140:	1d25      	adds	r5, r4, #4
 8014142:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8014146:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014148:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801414c:	2b00      	cmp	r3, #0
 801414e:	d052      	beq.n	80141f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8014150:	881a      	ldrh	r2, [r3, #0]
 8014152:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8014156:	a80d      	add	r0, sp, #52	; 0x34
 8014158:	9005      	str	r0, [sp, #20]
 801415a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801415e:	9004      	str	r0, [sp, #16]
 8014160:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014162:	9003      	str	r0, [sp, #12]
 8014164:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014168:	9002      	str	r0, [sp, #8]
 801416a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801416c:	9001      	str	r0, [sp, #4]
 801416e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8014172:	9000      	str	r0, [sp, #0]
 8014174:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014178:	a810      	add	r0, sp, #64	; 0x40
 801417a:	f7ff fd49 	bl	8013c10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801417e:	462c      	mov	r4, r5
 8014180:	e7b7      	b.n	80140f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8014182:	6823      	ldr	r3, [r4, #0]
 8014184:	1d25      	adds	r5, r4, #4
 8014186:	9310      	str	r3, [sp, #64]	; 0x40
 8014188:	e7dd      	b.n	8014146 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801418a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801418c:	6820      	ldr	r0, [r4, #0]
 801418e:	eba8 0202 	sub.w	r2, r8, r2
 8014192:	230a      	movs	r3, #10
 8014194:	b292      	uxth	r2, r2
 8014196:	4649      	mov	r1, r9
 8014198:	f7ff fd08 	bl	8013bac <_ZN8touchgfx7Unicode4itoaElPtti>
 801419c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80141a0:	2b2d      	cmp	r3, #45	; 0x2d
 80141a2:	f104 0504 	add.w	r5, r4, #4
 80141a6:	d1ce      	bne.n	8014146 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80141a8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80141ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80141ae:	3302      	adds	r3, #2
 80141b0:	e7e9      	b.n	8014186 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80141b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80141b4:	1d25      	adds	r5, r4, #4
 80141b6:	eba8 0202 	sub.w	r2, r8, r2
 80141ba:	230a      	movs	r3, #10
 80141bc:	b292      	uxth	r2, r2
 80141be:	4649      	mov	r1, r9
 80141c0:	6820      	ldr	r0, [r4, #0]
 80141c2:	f7ff fcd5 	bl	8013b70 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80141c6:	e7be      	b.n	8014146 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80141c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80141ca:	6820      	ldr	r0, [r4, #0]
 80141cc:	eba8 0202 	sub.w	r2, r8, r2
 80141d0:	b292      	uxth	r2, r2
 80141d2:	2310      	movs	r3, #16
 80141d4:	4649      	mov	r1, r9
 80141d6:	f7ff fccb 	bl	8013b70 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80141da:	1d25      	adds	r5, r4, #4
 80141dc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80141e0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80141e4:	2b00      	cmp	r3, #0
 80141e6:	d0ae      	beq.n	8014146 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80141e8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80141ec:	2919      	cmp	r1, #25
 80141ee:	d8f7      	bhi.n	80141e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80141f0:	3b20      	subs	r3, #32
 80141f2:	8013      	strh	r3, [r2, #0]
 80141f4:	e7f4      	b.n	80141e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80141f6:	9a08      	ldr	r2, [sp, #32]
 80141f8:	2a00      	cmp	r2, #0
 80141fa:	d0aa      	beq.n	8014152 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80141fc:	7812      	ldrb	r2, [r2, #0]
 80141fe:	e7a8      	b.n	8014152 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8014200:	2d00      	cmp	r5, #0
 8014202:	f43f af47 	beq.w	8014094 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8014206:	782d      	ldrb	r5, [r5, #0]
 8014208:	e744      	b.n	8014094 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801420a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801420a:	b507      	push	{r0, r1, r2, lr}
 801420c:	9300      	str	r3, [sp, #0]
 801420e:	4613      	mov	r3, r2
 8014210:	2200      	movs	r2, #0
 8014212:	f7ff fe90 	bl	8013f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8014216:	b003      	add	sp, #12
 8014218:	f85d fb04 	ldr.w	pc, [sp], #4

0801421c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801421c:	b40c      	push	{r2, r3}
 801421e:	b507      	push	{r0, r1, r2, lr}
 8014220:	ab04      	add	r3, sp, #16
 8014222:	f853 2b04 	ldr.w	r2, [r3], #4
 8014226:	9301      	str	r3, [sp, #4]
 8014228:	f7ff ffef 	bl	801420a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801422c:	b003      	add	sp, #12
 801422e:	f85d eb04 	ldr.w	lr, [sp], #4
 8014232:	b002      	add	sp, #8
 8014234:	4770      	bx	lr
	...

08014238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8014238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801423c:	b0c3      	sub	sp, #268	; 0x10c
 801423e:	2600      	movs	r6, #0
 8014240:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8014244:	4607      	mov	r7, r0
 8014246:	4689      	mov	r9, r1
 8014248:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801424c:	4631      	mov	r1, r6
 801424e:	22c8      	movs	r2, #200	; 0xc8
 8014250:	4640      	mov	r0, r8
 8014252:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8014256:	960c      	str	r6, [sp, #48]	; 0x30
 8014258:	f00c fd78 	bl	8020d4c <memset>
 801425c:	b17f      	cbz	r7, 801427e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 801425e:	eddf 5aa4 	vldr	s11, [pc, #656]	; 80144f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8014262:	f8df b298 	ldr.w	fp, [pc, #664]	; 80144fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8014266:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014268:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801426a:	b162      	cbz	r2, 8014286 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 801426c:	8812      	ldrh	r2, [r2, #0]
 801426e:	b11a      	cbz	r2, 8014278 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014270:	f109 31ff 	add.w	r1, r9, #4294967295
 8014274:	4299      	cmp	r1, r3
 8014276:	dc26      	bgt.n	80142c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014278:	2200      	movs	r2, #0
 801427a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801427e:	4638      	mov	r0, r7
 8014280:	b043      	add	sp, #268	; 0x10c
 8014282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014286:	9a08      	ldr	r2, [sp, #32]
 8014288:	2a00      	cmp	r2, #0
 801428a:	d0f5      	beq.n	8014278 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801428c:	7812      	ldrb	r2, [r2, #0]
 801428e:	e7ee      	b.n	801426e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8014290:	2c00      	cmp	r4, #0
 8014292:	d0e8      	beq.n	8014266 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014294:	7822      	ldrb	r2, [r4, #0]
 8014296:	b132      	cbz	r2, 80142a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8014298:	2a25      	cmp	r2, #37	; 0x25
 801429a:	d001      	beq.n	80142a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 801429c:	4299      	cmp	r1, r3
 801429e:	dc05      	bgt.n	80142ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80142a0:	b9cd      	cbnz	r5, 80142d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 80142a2:	2c00      	cmp	r4, #0
 80142a4:	d0df      	beq.n	8014266 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80142a6:	7822      	ldrb	r2, [r4, #0]
 80142a8:	2500      	movs	r5, #0
 80142aa:	e015      	b.n	80142d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 80142ac:	2d00      	cmp	r5, #0
 80142ae:	d073      	beq.n	8014398 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80142b0:	882a      	ldrh	r2, [r5, #0]
 80142b2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80142b6:	b10d      	cbz	r5, 80142bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 80142b8:	3502      	adds	r5, #2
 80142ba:	9509      	str	r5, [sp, #36]	; 0x24
 80142bc:	b10c      	cbz	r4, 80142c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 80142be:	3401      	adds	r4, #1
 80142c0:	9408      	str	r4, [sp, #32]
 80142c2:	3301      	adds	r3, #1
 80142c4:	930c      	str	r3, [sp, #48]	; 0x30
 80142c6:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 80142ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80142cc:	2d00      	cmp	r5, #0
 80142ce:	d0df      	beq.n	8014290 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 80142d0:	882a      	ldrh	r2, [r5, #0]
 80142d2:	2a00      	cmp	r2, #0
 80142d4:	d1e0      	bne.n	8014298 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 80142d6:	882a      	ldrh	r2, [r5, #0]
 80142d8:	2a00      	cmp	r2, #0
 80142da:	d0c4      	beq.n	8014266 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80142dc:	4299      	cmp	r1, r3
 80142de:	ddc2      	ble.n	8014266 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80142e0:	2300      	movs	r3, #0
 80142e2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80142e6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80142ea:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80142ee:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80142f2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80142f6:	930d      	str	r3, [sp, #52]	; 0x34
 80142f8:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80142fc:	930e      	str	r3, [sp, #56]	; 0x38
 80142fe:	b10d      	cbz	r5, 8014304 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8014300:	1cab      	adds	r3, r5, #2
 8014302:	9309      	str	r3, [sp, #36]	; 0x24
 8014304:	b10c      	cbz	r4, 801430a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8014306:	1c63      	adds	r3, r4, #1
 8014308:	9308      	str	r3, [sp, #32]
 801430a:	ab0e      	add	r3, sp, #56	; 0x38
 801430c:	9305      	str	r3, [sp, #20]
 801430e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8014312:	9304      	str	r3, [sp, #16]
 8014314:	ab0d      	add	r3, sp, #52	; 0x34
 8014316:	9303      	str	r3, [sp, #12]
 8014318:	ab0b      	add	r3, sp, #44	; 0x2c
 801431a:	9302      	str	r3, [sp, #8]
 801431c:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8014320:	9301      	str	r3, [sp, #4]
 8014322:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8014326:	9300      	str	r3, [sp, #0]
 8014328:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 801432c:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8014330:	a908      	add	r1, sp, #32
 8014332:	a809      	add	r0, sp, #36	; 0x24
 8014334:	f7ff fd2f 	bl	8013d96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014338:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801433a:	2b00      	cmp	r3, #0
 801433c:	da0b      	bge.n	8014356 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 801433e:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014342:	edd3 7a00 	vldr	s15, [r3]
 8014346:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801434a:	3601      	adds	r6, #1
 801434c:	ee17 3a90 	vmov	r3, s15
 8014350:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014354:	930d      	str	r3, [sp, #52]	; 0x34
 8014356:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014358:	2b00      	cmp	r3, #0
 801435a:	da0b      	bge.n	8014374 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 801435c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014360:	edd3 7a00 	vldr	s15, [r3]
 8014364:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014368:	3601      	adds	r6, #1
 801436a:	ee17 3a90 	vmov	r3, s15
 801436e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014372:	930e      	str	r3, [sp, #56]	; 0x38
 8014374:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014376:	b1a3      	cbz	r3, 80143a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014378:	881a      	ldrh	r2, [r3, #0]
 801437a:	2a25      	cmp	r2, #37	; 0x25
 801437c:	d016      	beq.n	80143ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 801437e:	2a66      	cmp	r2, #102	; 0x66
 8014380:	d01a      	beq.n	80143b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8014382:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8014386:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014388:	2d00      	cmp	r5, #0
 801438a:	f000 80fe 	beq.w	801458a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 801438e:	882c      	ldrh	r4, [r5, #0]
 8014390:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8014394:	3301      	adds	r3, #1
 8014396:	e00d      	b.n	80143b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8014398:	b10c      	cbz	r4, 801439e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 801439a:	7822      	ldrb	r2, [r4, #0]
 801439c:	e789      	b.n	80142b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801439e:	4622      	mov	r2, r4
 80143a0:	e787      	b.n	80142b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 80143a2:	9b08      	ldr	r3, [sp, #32]
 80143a4:	2b00      	cmp	r3, #0
 80143a6:	d0ec      	beq.n	8014382 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 80143a8:	781a      	ldrb	r2, [r3, #0]
 80143aa:	e7e6      	b.n	801437a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 80143ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80143ae:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80143b2:	3302      	adds	r3, #2
 80143b4:	930c      	str	r3, [sp, #48]	; 0x30
 80143b6:	e042      	b.n	801443e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 80143b8:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80143bc:	edd3 7a00 	vldr	s15, [r3]
 80143c0:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80143c4:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 80143c8:	3601      	adds	r6, #1
 80143ca:	b923      	cbnz	r3, 80143d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 80143cc:	2301      	movs	r3, #1
 80143ce:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80143d2:	2306      	movs	r3, #6
 80143d4:	930e      	str	r3, [sp, #56]	; 0x38
 80143d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80143da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80143de:	bf48      	it	mi
 80143e0:	eef1 7a67 	vnegmi.f32	s15, s15
 80143e4:	eeb0 7ae7 	vabs.f32	s14, s15
 80143e8:	bf48      	it	mi
 80143ea:	232d      	movmi	r3, #45	; 0x2d
 80143ec:	eeb4 7a65 	vcmp.f32	s14, s11
 80143f0:	bf48      	it	mi
 80143f2:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 80143f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80143fa:	dd2b      	ble.n	8014454 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 80143fc:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8014400:	2366      	movs	r3, #102	; 0x66
 8014402:	9311      	str	r3, [sp, #68]	; 0x44
 8014404:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014406:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801440a:	2b00      	cmp	r3, #0
 801440c:	f000 80b7 	beq.w	801457e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8014410:	881a      	ldrh	r2, [r3, #0]
 8014412:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014416:	a80c      	add	r0, sp, #48	; 0x30
 8014418:	9005      	str	r0, [sp, #20]
 801441a:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 801441e:	9004      	str	r0, [sp, #16]
 8014420:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014422:	9003      	str	r0, [sp, #12]
 8014424:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8014428:	9002      	str	r0, [sp, #8]
 801442a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801442c:	9001      	str	r0, [sp, #4]
 801442e:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8014432:	9000      	str	r0, [sp, #0]
 8014434:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8014438:	a80f      	add	r0, sp, #60	; 0x3c
 801443a:	f7ff fbe9 	bl	8013c10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801443e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014440:	b10b      	cbz	r3, 8014446 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8014442:	3302      	adds	r3, #2
 8014444:	9309      	str	r3, [sp, #36]	; 0x24
 8014446:	9b08      	ldr	r3, [sp, #32]
 8014448:	2b00      	cmp	r3, #0
 801444a:	f43f af0c 	beq.w	8014266 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801444e:	3301      	adds	r3, #1
 8014450:	9308      	str	r3, [sp, #32]
 8014452:	e708      	b.n	8014266 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014454:	eef4 7a67 	vcmp.f32	s15, s15
 8014458:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801445c:	d60b      	bvs.n	8014476 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801445e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014460:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80144f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014464:	2300      	movs	r3, #0
 8014466:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801446a:	4283      	cmp	r3, r0
 801446c:	da07      	bge.n	801447e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801446e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014472:	3301      	adds	r3, #1
 8014474:	e7f9      	b.n	801446a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014476:	4b20      	ldr	r3, [pc, #128]	; (80144f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014478:	9310      	str	r3, [sp, #64]	; 0x40
 801447a:	236e      	movs	r3, #110	; 0x6e
 801447c:	e7c1      	b.n	8014402 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801447e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014482:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014486:	eeb0 7a67 	vmov.f32	s14, s15
 801448a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801448e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014492:	da27      	bge.n	80144e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014494:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014496:	2100      	movs	r1, #0
 8014498:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801449c:	eba9 0202 	sub.w	r2, r9, r2
 80144a0:	eef4 6ac5 	vcmpe.f32	s13, s10
 80144a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80144a8:	b28c      	uxth	r4, r1
 80144aa:	db2a      	blt.n	8014502 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80144ac:	1a53      	subs	r3, r2, r1
 80144ae:	2b00      	cmp	r3, #0
 80144b0:	dd27      	ble.n	8014502 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80144b2:	2963      	cmp	r1, #99	; 0x63
 80144b4:	d024      	beq.n	8014500 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80144b6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80144ba:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80144be:	ee17 3a10 	vmov	r3, s14
 80144c2:	2b09      	cmp	r3, #9
 80144c4:	bfa8      	it	ge
 80144c6:	2309      	movge	r3, #9
 80144c8:	ee07 3a10 	vmov	s14, r3
 80144cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80144d0:	f103 0430 	add.w	r4, r3, #48	; 0x30
 80144d4:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 80144d8:	eee7 7a66 	vfms.f32	s15, s14, s13
 80144dc:	3101      	adds	r1, #1
 80144de:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80144e2:	e7dd      	b.n	80144a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80144e4:	ee66 6a86 	vmul.f32	s13, s13, s12
 80144e8:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80144ec:	e7cd      	b.n	801448a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 80144ee:	bf00      	nop
 80144f0:	7f7fffff 	.word	0x7f7fffff
 80144f4:	3f000002 	.word	0x3f000002
 80144f8:	0061006e 	.word	0x0061006e
 80144fc:	006e0069 	.word	0x006e0069
 8014500:	460c      	mov	r4, r1
 8014502:	2a63      	cmp	r2, #99	; 0x63
 8014504:	bfd4      	ite	le
 8014506:	ebc4 0202 	rsble	r2, r4, r2
 801450a:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 801450e:	2a00      	cmp	r2, #0
 8014510:	dd30      	ble.n	8014574 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8014512:	4603      	mov	r3, r0
 8014514:	2501      	movs	r5, #1
 8014516:	210a      	movs	r1, #10
 8014518:	2b00      	cmp	r3, #0
 801451a:	dd0d      	ble.n	8014538 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 801451c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8014520:	3b01      	subs	r3, #1
 8014522:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8014526:	ee17 ca10 	vmov	ip, s14
 801452a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801452e:	fb01 c505 	mla	r5, r1, r5, ip
 8014532:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014536:	e7ef      	b.n	8014518 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8014538:	2800      	cmp	r0, #0
 801453a:	f100 33ff 	add.w	r3, r0, #4294967295
 801453e:	bfac      	ite	ge
 8014540:	1a18      	subge	r0, r3, r0
 8014542:	4618      	movlt	r0, r3
 8014544:	0064      	lsls	r4, r4, #1
 8014546:	900e      	str	r0, [sp, #56]	; 0x38
 8014548:	230a      	movs	r3, #10
 801454a:	b292      	uxth	r2, r2
 801454c:	eb08 0104 	add.w	r1, r8, r4
 8014550:	4628      	mov	r0, r5
 8014552:	f7ff fb2b 	bl	8013bac <_ZN8touchgfx7Unicode4itoaElPtti>
 8014556:	2d01      	cmp	r5, #1
 8014558:	dc0a      	bgt.n	8014570 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801455a:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801455e:	2b00      	cmp	r3, #0
 8014560:	bf0c      	ite	eq
 8014562:	2300      	moveq	r3, #0
 8014564:	232e      	movne	r3, #46	; 0x2e
 8014566:	aa42      	add	r2, sp, #264	; 0x108
 8014568:	4414      	add	r4, r2
 801456a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801456e:	e749      	b.n	8014404 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014570:	232e      	movs	r3, #46	; 0x2e
 8014572:	e7f8      	b.n	8014566 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014574:	ab42      	add	r3, sp, #264	; 0x108
 8014576:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801457a:	2300      	movs	r3, #0
 801457c:	e7f5      	b.n	801456a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801457e:	9a08      	ldr	r2, [sp, #32]
 8014580:	2a00      	cmp	r2, #0
 8014582:	f43f af46 	beq.w	8014412 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014586:	7812      	ldrb	r2, [r2, #0]
 8014588:	e743      	b.n	8014412 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801458a:	2c00      	cmp	r4, #0
 801458c:	f43f af00 	beq.w	8014390 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8014590:	7824      	ldrb	r4, [r4, #0]
 8014592:	e6fd      	b.n	8014390 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014594 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014594:	b507      	push	{r0, r1, r2, lr}
 8014596:	9300      	str	r3, [sp, #0]
 8014598:	4613      	mov	r3, r2
 801459a:	2200      	movs	r2, #0
 801459c:	f7ff fe4c 	bl	8014238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80145a0:	b003      	add	sp, #12
 80145a2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080145a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80145a8:	4b01      	ldr	r3, [pc, #4]	; (80145b0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80145aa:	6018      	str	r0, [r3, #0]
 80145ac:	4770      	bx	lr
 80145ae:	bf00      	nop
 80145b0:	2001585c 	.word	0x2001585c

080145b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80145b4:	4b06      	ldr	r3, [pc, #24]	; (80145d0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80145b6:	881a      	ldrh	r2, [r3, #0]
 80145b8:	4282      	cmp	r2, r0
 80145ba:	d807      	bhi.n	80145cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80145bc:	4b05      	ldr	r3, [pc, #20]	; (80145d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80145be:	881b      	ldrh	r3, [r3, #0]
 80145c0:	4413      	add	r3, r2
 80145c2:	4298      	cmp	r0, r3
 80145c4:	bfac      	ite	ge
 80145c6:	2000      	movge	r0, #0
 80145c8:	2001      	movlt	r0, #1
 80145ca:	4770      	bx	lr
 80145cc:	2000      	movs	r0, #0
 80145ce:	4770      	bx	lr
 80145d0:	2001587c 	.word	0x2001587c
 80145d4:	20015880 	.word	0x20015880

080145d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80145d8:	b508      	push	{r3, lr}
 80145da:	4601      	mov	r1, r0
 80145dc:	f7ff ffea 	bl	80145b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80145e0:	b118      	cbz	r0, 80145ea <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80145e2:	4b02      	ldr	r3, [pc, #8]	; (80145ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80145e4:	681b      	ldr	r3, [r3, #0]
 80145e6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80145ea:	bd08      	pop	{r3, pc}
 80145ec:	20015860 	.word	0x20015860

080145f0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80145f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80145f2:	4c24      	ldr	r4, [pc, #144]	; (8014684 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80145f4:	6823      	ldr	r3, [r4, #0]
 80145f6:	2b00      	cmp	r3, #0
 80145f8:	d042      	beq.n	8014680 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80145fa:	4a23      	ldr	r2, [pc, #140]	; (8014688 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80145fc:	4d23      	ldr	r5, [pc, #140]	; (801468c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80145fe:	8811      	ldrh	r1, [r2, #0]
 8014600:	f8b5 c000 	ldrh.w	ip, [r5]
 8014604:	4822      	ldr	r0, [pc, #136]	; (8014690 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8014606:	4461      	add	r1, ip
 8014608:	1c4a      	adds	r2, r1, #1
 801460a:	f022 0201 	bic.w	r2, r2, #1
 801460e:	008f      	lsls	r7, r1, #2
 8014610:	0412      	lsls	r2, r2, #16
 8014612:	19de      	adds	r6, r3, r7
 8014614:	0c12      	lsrs	r2, r2, #16
 8014616:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801461a:	6006      	str	r6, [r0, #0]
 801461c:	4e1d      	ldr	r6, [pc, #116]	; (8014694 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801461e:	19da      	adds	r2, r3, r7
 8014620:	6032      	str	r2, [r6, #0]
 8014622:	220e      	movs	r2, #14
 8014624:	fb02 f20c 	mul.w	r2, r2, ip
 8014628:	3203      	adds	r2, #3
 801462a:	f022 0203 	bic.w	r2, r2, #3
 801462e:	443a      	add	r2, r7
 8014630:	4f19      	ldr	r7, [pc, #100]	; (8014698 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8014632:	4413      	add	r3, r2
 8014634:	603b      	str	r3, [r7, #0]
 8014636:	4f19      	ldr	r7, [pc, #100]	; (801469c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014638:	2300      	movs	r3, #0
 801463a:	803b      	strh	r3, [r7, #0]
 801463c:	4f18      	ldr	r7, [pc, #96]	; (80146a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801463e:	683f      	ldr	r7, [r7, #0]
 8014640:	1aba      	subs	r2, r7, r2
 8014642:	4f18      	ldr	r7, [pc, #96]	; (80146a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014644:	603a      	str	r2, [r7, #0]
 8014646:	4a18      	ldr	r2, [pc, #96]	; (80146a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014648:	469c      	mov	ip, r3
 801464a:	8013      	strh	r3, [r2, #0]
 801464c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014650:	428b      	cmp	r3, r1
 8014652:	d10d      	bne.n	8014670 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014654:	882d      	ldrh	r5, [r5, #0]
 8014656:	6830      	ldr	r0, [r6, #0]
 8014658:	2300      	movs	r3, #0
 801465a:	240e      	movs	r4, #14
 801465c:	429d      	cmp	r5, r3
 801465e:	d90f      	bls.n	8014680 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014660:	fb04 0203 	mla	r2, r4, r3, r0
 8014664:	3301      	adds	r3, #1
 8014666:	7b11      	ldrb	r1, [r2, #12]
 8014668:	f36f 1145 	bfc	r1, #5, #1
 801466c:	7311      	strb	r1, [r2, #12]
 801466e:	e7f5      	b.n	801465c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014670:	6822      	ldr	r2, [r4, #0]
 8014672:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014676:	6802      	ldr	r2, [r0, #0]
 8014678:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801467c:	3301      	adds	r3, #1
 801467e:	e7e7      	b.n	8014650 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014680:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014682:	bf00      	nop
 8014684:	20015860 	.word	0x20015860
 8014688:	2001587c 	.word	0x2001587c
 801468c:	20015880 	.word	0x20015880
 8014690:	20015874 	.word	0x20015874
 8014694:	20015864 	.word	0x20015864
 8014698:	2001586c 	.word	0x2001586c
 801469c:	2001587e 	.word	0x2001587e
 80146a0:	20015868 	.word	0x20015868
 80146a4:	20015878 	.word	0x20015878
 80146a8:	20015870 	.word	0x20015870

080146ac <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80146ac:	4b06      	ldr	r3, [pc, #24]	; (80146c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80146ae:	681b      	ldr	r3, [r3, #0]
 80146b0:	b943      	cbnz	r3, 80146c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80146b2:	b139      	cbz	r1, 80146c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80146b4:	4b05      	ldr	r3, [pc, #20]	; (80146cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80146b6:	801a      	strh	r2, [r3, #0]
 80146b8:	4b05      	ldr	r3, [pc, #20]	; (80146d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80146ba:	6019      	str	r1, [r3, #0]
 80146bc:	4b05      	ldr	r3, [pc, #20]	; (80146d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80146be:	6018      	str	r0, [r3, #0]
 80146c0:	f7ff bf96 	b.w	80145f0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80146c4:	4770      	bx	lr
 80146c6:	bf00      	nop
 80146c8:	2001586c 	.word	0x2001586c
 80146cc:	20015880 	.word	0x20015880
 80146d0:	20015868 	.word	0x20015868
 80146d4:	20015860 	.word	0x20015860

080146d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80146d8:	b470      	push	{r4, r5, r6}
 80146da:	4c07      	ldr	r4, [pc, #28]	; (80146f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80146dc:	6826      	ldr	r6, [r4, #0]
 80146de:	4605      	mov	r5, r0
 80146e0:	4610      	mov	r0, r2
 80146e2:	9a03      	ldr	r2, [sp, #12]
 80146e4:	b936      	cbnz	r6, 80146f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80146e6:	6025      	str	r5, [r4, #0]
 80146e8:	4c04      	ldr	r4, [pc, #16]	; (80146fc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80146ea:	8021      	strh	r1, [r4, #0]
 80146ec:	bc70      	pop	{r4, r5, r6}
 80146ee:	4619      	mov	r1, r3
 80146f0:	f7ff bfdc 	b.w	80146ac <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80146f4:	bc70      	pop	{r4, r5, r6}
 80146f6:	4770      	bx	lr
 80146f8:	20015884 	.word	0x20015884
 80146fc:	2001587c 	.word	0x2001587c

08014700 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014700:	4a12      	ldr	r2, [pc, #72]	; (801474c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8014702:	8803      	ldrh	r3, [r0, #0]
 8014704:	8812      	ldrh	r2, [r2, #0]
 8014706:	4293      	cmp	r3, r2
 8014708:	d207      	bcs.n	801471a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801470a:	4a11      	ldr	r2, [pc, #68]	; (8014750 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801470c:	6812      	ldr	r2, [r2, #0]
 801470e:	2114      	movs	r1, #20
 8014710:	fb01 2303 	mla	r3, r1, r3, r2
 8014714:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014718:	4770      	bx	lr
 801471a:	490e      	ldr	r1, [pc, #56]	; (8014754 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801471c:	8809      	ldrh	r1, [r1, #0]
 801471e:	4411      	add	r1, r2
 8014720:	428b      	cmp	r3, r1
 8014722:	da04      	bge.n	801472e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8014724:	1a9b      	subs	r3, r3, r2
 8014726:	4a0c      	ldr	r2, [pc, #48]	; (8014758 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014728:	210e      	movs	r1, #14
 801472a:	6812      	ldr	r2, [r2, #0]
 801472c:	e7f0      	b.n	8014710 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801472e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014732:	4293      	cmp	r3, r2
 8014734:	d108      	bne.n	8014748 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8014736:	4b09      	ldr	r3, [pc, #36]	; (801475c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014738:	781b      	ldrb	r3, [r3, #0]
 801473a:	b91b      	cbnz	r3, 8014744 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801473c:	4b08      	ldr	r3, [pc, #32]	; (8014760 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801473e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014742:	4770      	bx	lr
 8014744:	4b07      	ldr	r3, [pc, #28]	; (8014764 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014746:	e7fa      	b.n	801473e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014748:	2000      	movs	r0, #0
 801474a:	4770      	bx	lr
 801474c:	2001587c 	.word	0x2001587c
 8014750:	20015884 	.word	0x20015884
 8014754:	20015880 	.word	0x20015880
 8014758:	20015864 	.word	0x20015864
 801475c:	200157ec 	.word	0x200157ec
 8014760:	200157ee 	.word	0x200157ee
 8014764:	200157f0 	.word	0x200157f0

08014768 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014768:	4a12      	ldr	r2, [pc, #72]	; (80147b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801476a:	8803      	ldrh	r3, [r0, #0]
 801476c:	8812      	ldrh	r2, [r2, #0]
 801476e:	4293      	cmp	r3, r2
 8014770:	d207      	bcs.n	8014782 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014772:	4a11      	ldr	r2, [pc, #68]	; (80147b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014774:	6812      	ldr	r2, [r2, #0]
 8014776:	2114      	movs	r1, #20
 8014778:	fb01 2303 	mla	r3, r1, r3, r2
 801477c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014780:	4770      	bx	lr
 8014782:	490e      	ldr	r1, [pc, #56]	; (80147bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014784:	8809      	ldrh	r1, [r1, #0]
 8014786:	4411      	add	r1, r2
 8014788:	428b      	cmp	r3, r1
 801478a:	da04      	bge.n	8014796 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801478c:	1a9b      	subs	r3, r3, r2
 801478e:	4a0c      	ldr	r2, [pc, #48]	; (80147c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8014790:	210e      	movs	r1, #14
 8014792:	6812      	ldr	r2, [r2, #0]
 8014794:	e7f0      	b.n	8014778 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014796:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801479a:	4293      	cmp	r3, r2
 801479c:	d108      	bne.n	80147b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801479e:	4b09      	ldr	r3, [pc, #36]	; (80147c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80147a0:	781b      	ldrb	r3, [r3, #0]
 80147a2:	b91b      	cbnz	r3, 80147ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80147a4:	4b08      	ldr	r3, [pc, #32]	; (80147c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80147a6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80147aa:	4770      	bx	lr
 80147ac:	4b07      	ldr	r3, [pc, #28]	; (80147cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80147ae:	e7fa      	b.n	80147a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80147b0:	2000      	movs	r0, #0
 80147b2:	4770      	bx	lr
 80147b4:	2001587c 	.word	0x2001587c
 80147b8:	20015884 	.word	0x20015884
 80147bc:	20015880 	.word	0x20015880
 80147c0:	20015864 	.word	0x20015864
 80147c4:	200157ec 	.word	0x200157ec
 80147c8:	200157f0 	.word	0x200157f0
 80147cc:	200157ee 	.word	0x200157ee

080147d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80147d0:	b510      	push	{r4, lr}
 80147d2:	4a1f      	ldr	r2, [pc, #124]	; (8014850 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80147d4:	880b      	ldrh	r3, [r1, #0]
 80147d6:	8812      	ldrh	r2, [r2, #0]
 80147d8:	4293      	cmp	r3, r2
 80147da:	d213      	bcs.n	8014804 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80147dc:	4a1d      	ldr	r2, [pc, #116]	; (8014854 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80147de:	6812      	ldr	r2, [r2, #0]
 80147e0:	2114      	movs	r1, #20
 80147e2:	fb01 2303 	mla	r3, r1, r3, r2
 80147e6:	8a1a      	ldrh	r2, [r3, #16]
 80147e8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80147ec:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80147f0:	8a5b      	ldrh	r3, [r3, #18]
 80147f2:	8004      	strh	r4, [r0, #0]
 80147f4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80147f8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80147fc:	8041      	strh	r1, [r0, #2]
 80147fe:	8082      	strh	r2, [r0, #4]
 8014800:	80c3      	strh	r3, [r0, #6]
 8014802:	e00e      	b.n	8014822 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014804:	4914      	ldr	r1, [pc, #80]	; (8014858 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8014806:	8809      	ldrh	r1, [r1, #0]
 8014808:	4411      	add	r1, r2
 801480a:	428b      	cmp	r3, r1
 801480c:	da0a      	bge.n	8014824 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801480e:	1a9b      	subs	r3, r3, r2
 8014810:	4a12      	ldr	r2, [pc, #72]	; (801485c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8014812:	6812      	ldr	r2, [r2, #0]
 8014814:	210e      	movs	r1, #14
 8014816:	fb01 2303 	mla	r3, r1, r3, r2
 801481a:	681a      	ldr	r2, [r3, #0]
 801481c:	6002      	str	r2, [r0, #0]
 801481e:	685a      	ldr	r2, [r3, #4]
 8014820:	6042      	str	r2, [r0, #4]
 8014822:	bd10      	pop	{r4, pc}
 8014824:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014828:	4293      	cmp	r3, r2
 801482a:	d10b      	bne.n	8014844 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801482c:	4b0c      	ldr	r3, [pc, #48]	; (8014860 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801482e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014832:	4b0c      	ldr	r3, [pc, #48]	; (8014864 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014834:	8081      	strh	r1, [r0, #4]
 8014836:	f9b3 2000 	ldrsh.w	r2, [r3]
 801483a:	80c2      	strh	r2, [r0, #6]
 801483c:	2300      	movs	r3, #0
 801483e:	8003      	strh	r3, [r0, #0]
 8014840:	8043      	strh	r3, [r0, #2]
 8014842:	e7ee      	b.n	8014822 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014844:	2300      	movs	r3, #0
 8014846:	8003      	strh	r3, [r0, #0]
 8014848:	8043      	strh	r3, [r0, #2]
 801484a:	8083      	strh	r3, [r0, #4]
 801484c:	e7d8      	b.n	8014800 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801484e:	bf00      	nop
 8014850:	2001587c 	.word	0x2001587c
 8014854:	20015884 	.word	0x20015884
 8014858:	20015880 	.word	0x20015880
 801485c:	20015864 	.word	0x20015864
 8014860:	200157e8 	.word	0x200157e8
 8014864:	200157ea 	.word	0x200157ea

08014868 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014868:	4a17      	ldr	r2, [pc, #92]	; (80148c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801486a:	8803      	ldrh	r3, [r0, #0]
 801486c:	8812      	ldrh	r2, [r2, #0]
 801486e:	4293      	cmp	r3, r2
 8014870:	d213      	bcs.n	801489a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014872:	4a16      	ldr	r2, [pc, #88]	; (80148cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014874:	6812      	ldr	r2, [r2, #0]
 8014876:	2114      	movs	r1, #20
 8014878:	fb01 2303 	mla	r3, r1, r3, r2
 801487c:	8a1a      	ldrh	r2, [r3, #16]
 801487e:	8919      	ldrh	r1, [r3, #8]
 8014880:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014884:	428a      	cmp	r2, r1
 8014886:	db1d      	blt.n	80148c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014888:	8a58      	ldrh	r0, [r3, #18]
 801488a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801488e:	895b      	ldrh	r3, [r3, #10]
 8014890:	4298      	cmp	r0, r3
 8014892:	bfac      	ite	ge
 8014894:	2000      	movge	r0, #0
 8014896:	2001      	movlt	r0, #1
 8014898:	4770      	bx	lr
 801489a:	490d      	ldr	r1, [pc, #52]	; (80148d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801489c:	8809      	ldrh	r1, [r1, #0]
 801489e:	4411      	add	r1, r2
 80148a0:	428b      	cmp	r3, r1
 80148a2:	da0d      	bge.n	80148c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80148a4:	1a9b      	subs	r3, r3, r2
 80148a6:	4a0b      	ldr	r2, [pc, #44]	; (80148d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80148a8:	6812      	ldr	r2, [r2, #0]
 80148aa:	210e      	movs	r1, #14
 80148ac:	fb01 2303 	mla	r3, r1, r3, r2
 80148b0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80148b4:	891a      	ldrh	r2, [r3, #8]
 80148b6:	4291      	cmp	r1, r2
 80148b8:	db04      	blt.n	80148c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80148ba:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80148be:	e7e6      	b.n	801488e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80148c0:	2000      	movs	r0, #0
 80148c2:	4770      	bx	lr
 80148c4:	2001      	movs	r0, #1
 80148c6:	4770      	bx	lr
 80148c8:	2001587c 	.word	0x2001587c
 80148cc:	20015884 	.word	0x20015884
 80148d0:	20015880 	.word	0x20015880
 80148d4:	20015864 	.word	0x20015864

080148d8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80148d8:	4a12      	ldr	r2, [pc, #72]	; (8014924 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80148da:	8803      	ldrh	r3, [r0, #0]
 80148dc:	8811      	ldrh	r1, [r2, #0]
 80148de:	428b      	cmp	r3, r1
 80148e0:	d20b      	bcs.n	80148fa <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80148e2:	4a11      	ldr	r2, [pc, #68]	; (8014928 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80148e4:	6812      	ldr	r2, [r2, #0]
 80148e6:	b112      	cbz	r2, 80148ee <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80148e8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80148ec:	b9c0      	cbnz	r0, 8014920 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80148ee:	4a0f      	ldr	r2, [pc, #60]	; (801492c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80148f0:	6811      	ldr	r1, [r2, #0]
 80148f2:	2214      	movs	r2, #20
 80148f4:	4353      	muls	r3, r2
 80148f6:	58c8      	ldr	r0, [r1, r3]
 80148f8:	4770      	bx	lr
 80148fa:	4a0d      	ldr	r2, [pc, #52]	; (8014930 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80148fc:	8812      	ldrh	r2, [r2, #0]
 80148fe:	440a      	add	r2, r1
 8014900:	4293      	cmp	r3, r2
 8014902:	da04      	bge.n	801490e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014904:	4a08      	ldr	r2, [pc, #32]	; (8014928 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014906:	6812      	ldr	r2, [r2, #0]
 8014908:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801490c:	4770      	bx	lr
 801490e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014912:	4293      	cmp	r3, r2
 8014914:	d103      	bne.n	801491e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014916:	4b07      	ldr	r3, [pc, #28]	; (8014934 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014918:	681b      	ldr	r3, [r3, #0]
 801491a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801491c:	4770      	bx	lr
 801491e:	2000      	movs	r0, #0
 8014920:	4770      	bx	lr
 8014922:	bf00      	nop
 8014924:	2001587c 	.word	0x2001587c
 8014928:	20015860 	.word	0x20015860
 801492c:	20015884 	.word	0x20015884
 8014930:	20015880 	.word	0x20015880
 8014934:	200157f4 	.word	0x200157f4

08014938 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014938:	4b24      	ldr	r3, [pc, #144]	; (80149cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801493a:	8802      	ldrh	r2, [r0, #0]
 801493c:	8818      	ldrh	r0, [r3, #0]
 801493e:	4282      	cmp	r2, r0
 8014940:	d221      	bcs.n	8014986 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8014942:	4b23      	ldr	r3, [pc, #140]	; (80149d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014944:	6819      	ldr	r1, [r3, #0]
 8014946:	2314      	movs	r3, #20
 8014948:	fb03 1302 	mla	r3, r3, r2, r1
 801494c:	6858      	ldr	r0, [r3, #4]
 801494e:	2800      	cmp	r0, #0
 8014950:	d03a      	beq.n	80149c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014952:	4920      	ldr	r1, [pc, #128]	; (80149d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014954:	6809      	ldr	r1, [r1, #0]
 8014956:	2900      	cmp	r1, #0
 8014958:	d036      	beq.n	80149c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801495a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801495e:	2900      	cmp	r1, #0
 8014960:	d032      	beq.n	80149c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014962:	891a      	ldrh	r2, [r3, #8]
 8014964:	8958      	ldrh	r0, [r3, #10]
 8014966:	4350      	muls	r0, r2
 8014968:	7c5a      	ldrb	r2, [r3, #17]
 801496a:	7cdb      	ldrb	r3, [r3, #19]
 801496c:	0952      	lsrs	r2, r2, #5
 801496e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014972:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014976:	2b0b      	cmp	r3, #11
 8014978:	bf18      	it	ne
 801497a:	0040      	lslne	r0, r0, #1
 801497c:	3003      	adds	r0, #3
 801497e:	f020 0003 	bic.w	r0, r0, #3
 8014982:	4408      	add	r0, r1
 8014984:	4770      	bx	lr
 8014986:	4b14      	ldr	r3, [pc, #80]	; (80149d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014988:	881b      	ldrh	r3, [r3, #0]
 801498a:	4403      	add	r3, r0
 801498c:	429a      	cmp	r2, r3
 801498e:	da1a      	bge.n	80149c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014990:	4b12      	ldr	r3, [pc, #72]	; (80149dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014992:	681b      	ldr	r3, [r3, #0]
 8014994:	1a10      	subs	r0, r2, r0
 8014996:	210e      	movs	r1, #14
 8014998:	fb01 3000 	mla	r0, r1, r0, r3
 801499c:	7b03      	ldrb	r3, [r0, #12]
 801499e:	f003 031f 	and.w	r3, r3, #31
 80149a2:	2b0b      	cmp	r3, #11
 80149a4:	d10b      	bne.n	80149be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80149a6:	8903      	ldrh	r3, [r0, #8]
 80149a8:	8940      	ldrh	r0, [r0, #10]
 80149aa:	4358      	muls	r0, r3
 80149ac:	4b09      	ldr	r3, [pc, #36]	; (80149d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80149ae:	6819      	ldr	r1, [r3, #0]
 80149b0:	3003      	adds	r0, #3
 80149b2:	f020 0303 	bic.w	r3, r0, #3
 80149b6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80149ba:	4418      	add	r0, r3
 80149bc:	4770      	bx	lr
 80149be:	2b0d      	cmp	r3, #13
 80149c0:	d101      	bne.n	80149c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80149c2:	300d      	adds	r0, #13
 80149c4:	4770      	bx	lr
 80149c6:	2000      	movs	r0, #0
 80149c8:	4770      	bx	lr
 80149ca:	bf00      	nop
 80149cc:	2001587c 	.word	0x2001587c
 80149d0:	20015884 	.word	0x20015884
 80149d4:	20015860 	.word	0x20015860
 80149d8:	20015880 	.word	0x20015880
 80149dc:	20015864 	.word	0x20015864

080149e0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80149e0:	b510      	push	{r4, lr}
 80149e2:	4a17      	ldr	r2, [pc, #92]	; (8014a40 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80149e4:	8803      	ldrh	r3, [r0, #0]
 80149e6:	8812      	ldrh	r2, [r2, #0]
 80149e8:	4293      	cmp	r3, r2
 80149ea:	d20c      	bcs.n	8014a06 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80149ec:	4a15      	ldr	r2, [pc, #84]	; (8014a44 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80149ee:	6812      	ldr	r2, [r2, #0]
 80149f0:	2114      	movs	r1, #20
 80149f2:	fb01 2303 	mla	r3, r1, r3, r2
 80149f6:	7c58      	ldrb	r0, [r3, #17]
 80149f8:	0942      	lsrs	r2, r0, #5
 80149fa:	7cd8      	ldrb	r0, [r3, #19]
 80149fc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8014a00:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8014a04:	bd10      	pop	{r4, pc}
 8014a06:	4910      	ldr	r1, [pc, #64]	; (8014a48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8014a08:	8809      	ldrh	r1, [r1, #0]
 8014a0a:	4411      	add	r1, r2
 8014a0c:	428b      	cmp	r3, r1
 8014a0e:	da09      	bge.n	8014a24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8014a10:	1a9b      	subs	r3, r3, r2
 8014a12:	4a0e      	ldr	r2, [pc, #56]	; (8014a4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8014a14:	6812      	ldr	r2, [r2, #0]
 8014a16:	210e      	movs	r1, #14
 8014a18:	fb01 2303 	mla	r3, r1, r3, r2
 8014a1c:	7b18      	ldrb	r0, [r3, #12]
 8014a1e:	f000 001f 	and.w	r0, r0, #31
 8014a22:	e7ef      	b.n	8014a04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014a24:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014a28:	4293      	cmp	r3, r2
 8014a2a:	d106      	bne.n	8014a3a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8014a2c:	f7ed ff76 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 8014a30:	6803      	ldr	r3, [r0, #0]
 8014a32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014a36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014a38:	4718      	bx	r3
 8014a3a:	2000      	movs	r0, #0
 8014a3c:	e7e2      	b.n	8014a04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014a3e:	bf00      	nop
 8014a40:	2001587c 	.word	0x2001587c
 8014a44:	20015884 	.word	0x20015884
 8014a48:	20015880 	.word	0x20015880
 8014a4c:	20015864 	.word	0x20015864

08014a50 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014a50:	2010      	movs	r0, #16
 8014a52:	4770      	bx	lr

08014a54 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014a54:	2000      	movs	r0, #0
 8014a56:	4770      	bx	lr

08014a58 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014a58:	4b02      	ldr	r3, [pc, #8]	; (8014a64 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8014a5a:	8818      	ldrh	r0, [r3, #0]
 8014a5c:	0040      	lsls	r0, r0, #1
 8014a5e:	b280      	uxth	r0, r0
 8014a60:	4770      	bx	lr
 8014a62:	bf00      	nop
 8014a64:	200157ee 	.word	0x200157ee

08014a68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014a68:	2bff      	cmp	r3, #255	; 0xff
 8014a6a:	d050      	beq.n	8014b0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8014a6c:	2a0b      	cmp	r2, #11
 8014a6e:	d04a      	beq.n	8014b06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014a70:	d80e      	bhi.n	8014a90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014a72:	2a03      	cmp	r2, #3
 8014a74:	d03f      	beq.n	8014af6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014a76:	d804      	bhi.n	8014a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014a78:	2a01      	cmp	r2, #1
 8014a7a:	d03e      	beq.n	8014afa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8014a7c:	d93f      	bls.n	8014afe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8014a7e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014a80:	4770      	bx	lr
 8014a82:	2a09      	cmp	r2, #9
 8014a84:	d03f      	beq.n	8014b06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014a86:	d83c      	bhi.n	8014b02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014a88:	2a08      	cmp	r2, #8
 8014a8a:	d03a      	beq.n	8014b02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014a8c:	2000      	movs	r0, #0
 8014a8e:	4770      	bx	lr
 8014a90:	2a2f      	cmp	r2, #47	; 0x2f
 8014a92:	d024      	beq.n	8014ade <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014a94:	d80d      	bhi.n	8014ab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014a96:	2a2d      	cmp	r2, #45	; 0x2d
 8014a98:	d014      	beq.n	8014ac4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8014a9a:	d826      	bhi.n	8014aea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014a9c:	2a2c      	cmp	r2, #44	; 0x2c
 8014a9e:	d1f5      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014aa0:	684b      	ldr	r3, [r1, #4]
 8014aa2:	781b      	ldrb	r3, [r3, #0]
 8014aa4:	2b01      	cmp	r3, #1
 8014aa6:	d018      	beq.n	8014ada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014aa8:	d323      	bcc.n	8014af2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8014aaa:	2b02      	cmp	r3, #2
 8014aac:	d1ee      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014aae:	6880      	ldr	r0, [r0, #8]
 8014ab0:	4770      	bx	lr
 8014ab2:	2a31      	cmp	r2, #49	; 0x31
 8014ab4:	d004      	beq.n	8014ac0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014ab6:	d328      	bcc.n	8014b0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014ab8:	2a32      	cmp	r2, #50	; 0x32
 8014aba:	d026      	beq.n	8014b0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014abc:	2a33      	cmp	r2, #51	; 0x33
 8014abe:	d1e5      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014ac0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8014ac2:	4770      	bx	lr
 8014ac4:	684b      	ldr	r3, [r1, #4]
 8014ac6:	781b      	ldrb	r3, [r3, #0]
 8014ac8:	2b01      	cmp	r3, #1
 8014aca:	d004      	beq.n	8014ad6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8014acc:	d30b      	bcc.n	8014ae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014ace:	2b02      	cmp	r3, #2
 8014ad0:	d1dc      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014ad2:	6900      	ldr	r0, [r0, #16]
 8014ad4:	4770      	bx	lr
 8014ad6:	6a00      	ldr	r0, [r0, #32]
 8014ad8:	4770      	bx	lr
 8014ada:	6980      	ldr	r0, [r0, #24]
 8014adc:	4770      	bx	lr
 8014ade:	684b      	ldr	r3, [r1, #4]
 8014ae0:	781b      	ldrb	r3, [r3, #0]
 8014ae2:	2b00      	cmp	r3, #0
 8014ae4:	d1d2      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014ae6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014ae8:	4770      	bx	lr
 8014aea:	684b      	ldr	r3, [r1, #4]
 8014aec:	781b      	ldrb	r3, [r3, #0]
 8014aee:	2b00      	cmp	r3, #0
 8014af0:	d1cc      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014af2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014af4:	4770      	bx	lr
 8014af6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8014af8:	4770      	bx	lr
 8014afa:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8014afc:	4770      	bx	lr
 8014afe:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8014b00:	4770      	bx	lr
 8014b02:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8014b04:	4770      	bx	lr
 8014b06:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8014b08:	4770      	bx	lr
 8014b0a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8014b0c:	4770      	bx	lr
 8014b0e:	2a0b      	cmp	r2, #11
 8014b10:	d049      	beq.n	8014ba6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014b12:	d80e      	bhi.n	8014b32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8014b14:	2a03      	cmp	r2, #3
 8014b16:	d040      	beq.n	8014b9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8014b18:	d804      	bhi.n	8014b24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8014b1a:	2a01      	cmp	r2, #1
 8014b1c:	d03f      	beq.n	8014b9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8014b1e:	d940      	bls.n	8014ba2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8014b20:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8014b22:	4770      	bx	lr
 8014b24:	2a09      	cmp	r2, #9
 8014b26:	d03e      	beq.n	8014ba6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014b28:	d801      	bhi.n	8014b2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8014b2a:	2a08      	cmp	r2, #8
 8014b2c:	d1ae      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014b2e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8014b30:	4770      	bx	lr
 8014b32:	2a2f      	cmp	r2, #47	; 0x2f
 8014b34:	d024      	beq.n	8014b80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014b36:	d80d      	bhi.n	8014b54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014b38:	2a2d      	cmp	r2, #45	; 0x2d
 8014b3a:	d014      	beq.n	8014b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8014b3c:	d826      	bhi.n	8014b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8014b3e:	2a2c      	cmp	r2, #44	; 0x2c
 8014b40:	d1a4      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014b42:	684b      	ldr	r3, [r1, #4]
 8014b44:	781b      	ldrb	r3, [r3, #0]
 8014b46:	2b01      	cmp	r3, #1
 8014b48:	d018      	beq.n	8014b7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8014b4a:	d324      	bcc.n	8014b96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8014b4c:	2b02      	cmp	r3, #2
 8014b4e:	d19d      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014b50:	68c0      	ldr	r0, [r0, #12]
 8014b52:	4770      	bx	lr
 8014b54:	2a31      	cmp	r2, #49	; 0x31
 8014b56:	d004      	beq.n	8014b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014b58:	d327      	bcc.n	8014baa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014b5a:	2a32      	cmp	r2, #50	; 0x32
 8014b5c:	d025      	beq.n	8014baa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014b5e:	2a33      	cmp	r2, #51	; 0x33
 8014b60:	d194      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014b62:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014b64:	4770      	bx	lr
 8014b66:	684b      	ldr	r3, [r1, #4]
 8014b68:	781b      	ldrb	r3, [r3, #0]
 8014b6a:	2b01      	cmp	r3, #1
 8014b6c:	d004      	beq.n	8014b78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8014b6e:	d30b      	bcc.n	8014b88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014b70:	2b02      	cmp	r3, #2
 8014b72:	d18b      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014b74:	6940      	ldr	r0, [r0, #20]
 8014b76:	4770      	bx	lr
 8014b78:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014b7a:	4770      	bx	lr
 8014b7c:	69c0      	ldr	r0, [r0, #28]
 8014b7e:	4770      	bx	lr
 8014b80:	684b      	ldr	r3, [r1, #4]
 8014b82:	781b      	ldrb	r3, [r3, #0]
 8014b84:	2b00      	cmp	r3, #0
 8014b86:	d181      	bne.n	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014b88:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014b8a:	4770      	bx	lr
 8014b8c:	684b      	ldr	r3, [r1, #4]
 8014b8e:	781b      	ldrb	r3, [r3, #0]
 8014b90:	2b00      	cmp	r3, #0
 8014b92:	f47f af7b 	bne.w	8014a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014b96:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014b98:	4770      	bx	lr
 8014b9a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014b9c:	4770      	bx	lr
 8014b9e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014ba0:	4770      	bx	lr
 8014ba2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014ba4:	4770      	bx	lr
 8014ba6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014ba8:	4770      	bx	lr
 8014baa:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8014bac:	4770      	bx	lr

08014bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014bae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bb2:	b087      	sub	sp, #28
 8014bb4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014bb6:	9205      	str	r2, [sp, #20]
 8014bb8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014bbc:	9202      	str	r2, [sp, #8]
 8014bbe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014bc2:	9101      	str	r1, [sp, #4]
 8014bc4:	6841      	ldr	r1, [r0, #4]
 8014bc6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014bca:	fb01 2404 	mla	r4, r1, r4, r2
 8014bce:	6802      	ldr	r2, [r0, #0]
 8014bd0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014bd4:	f8de 2000 	ldr.w	r2, [lr]
 8014bd8:	9203      	str	r2, [sp, #12]
 8014bda:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014bde:	3204      	adds	r2, #4
 8014be0:	9204      	str	r2, [sp, #16]
 8014be2:	9a02      	ldr	r2, [sp, #8]
 8014be4:	43d6      	mvns	r6, r2
 8014be6:	b2f6      	uxtb	r6, r6
 8014be8:	9a01      	ldr	r2, [sp, #4]
 8014bea:	2a00      	cmp	r2, #0
 8014bec:	dc03      	bgt.n	8014bf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014bee:	9a05      	ldr	r2, [sp, #20]
 8014bf0:	2a00      	cmp	r2, #0
 8014bf2:	f340 8129 	ble.w	8014e48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014bf6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014bf8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014bfc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014c00:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014c04:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014c06:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014c0a:	2b00      	cmp	r3, #0
 8014c0c:	dd0e      	ble.n	8014c2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014c0e:	1408      	asrs	r0, r1, #16
 8014c10:	d405      	bmi.n	8014c1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014c12:	4560      	cmp	r0, ip
 8014c14:	da03      	bge.n	8014c1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014c16:	1410      	asrs	r0, r2, #16
 8014c18:	d401      	bmi.n	8014c1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014c1a:	42b8      	cmp	r0, r7
 8014c1c:	db07      	blt.n	8014c2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014c1e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014c20:	4401      	add	r1, r0
 8014c22:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014c24:	3b01      	subs	r3, #1
 8014c26:	4402      	add	r2, r0
 8014c28:	3402      	adds	r4, #2
 8014c2a:	e7ee      	b.n	8014c0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014c2c:	d071      	beq.n	8014d12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014c2e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014c30:	1e58      	subs	r0, r3, #1
 8014c32:	fb05 1500 	mla	r5, r5, r0, r1
 8014c36:	142d      	asrs	r5, r5, #16
 8014c38:	d45f      	bmi.n	8014cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014c3a:	4565      	cmp	r5, ip
 8014c3c:	da5d      	bge.n	8014cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014c3e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014c40:	fb05 2000 	mla	r0, r5, r0, r2
 8014c44:	1400      	asrs	r0, r0, #16
 8014c46:	d458      	bmi.n	8014cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014c48:	42b8      	cmp	r0, r7
 8014c4a:	da56      	bge.n	8014cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014c4c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014c50:	4699      	mov	r9, r3
 8014c52:	46a2      	mov	sl, r4
 8014c54:	f1b9 0f00 	cmp.w	r9, #0
 8014c58:	dd57      	ble.n	8014d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014c5a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014c5e:	9803      	ldr	r0, [sp, #12]
 8014c60:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014c64:	140d      	asrs	r5, r1, #16
 8014c66:	fb07 000c 	mla	r0, r7, ip, r0
 8014c6a:	f109 39ff 	add.w	r9, r9, #4294967295
 8014c6e:	5d40      	ldrb	r0, [r0, r5]
 8014c70:	9d04      	ldr	r5, [sp, #16]
 8014c72:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014c76:	f8ba 5000 	ldrh.w	r5, [sl]
 8014c7a:	122f      	asrs	r7, r5, #8
 8014c7c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014c80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014c84:	fb17 f706 	smulbb	r7, r7, r6
 8014c88:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014c8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014c90:	00ed      	lsls	r5, r5, #3
 8014c92:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014c96:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014c9a:	10c7      	asrs	r7, r0, #3
 8014c9c:	b2ed      	uxtb	r5, r5
 8014c9e:	00c0      	lsls	r0, r0, #3
 8014ca0:	fb18 f806 	smulbb	r8, r8, r6
 8014ca4:	fb15 f506 	smulbb	r5, r5, r6
 8014ca8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014cac:	b2c0      	uxtb	r0, r0
 8014cae:	fa1f fc8c 	uxth.w	ip, ip
 8014cb2:	fb07 870b 	mla	r7, r7, fp, r8
 8014cb6:	fb00 500b 	mla	r0, r0, fp, r5
 8014cba:	b280      	uxth	r0, r0
 8014cbc:	b2bf      	uxth	r7, r7
 8014cbe:	f10c 0501 	add.w	r5, ip, #1
 8014cc2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014cc6:	f107 0801 	add.w	r8, r7, #1
 8014cca:	1c45      	adds	r5, r0, #1
 8014ccc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014cd0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014cd4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014cd6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014cda:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014cde:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014ce2:	ea45 0c0c 	orr.w	ip, r5, ip
 8014ce6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014cea:	4401      	add	r1, r0
 8014cec:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014cee:	ea4c 0c08 	orr.w	ip, ip, r8
 8014cf2:	f82a cb02 	strh.w	ip, [sl], #2
 8014cf6:	4402      	add	r2, r0
 8014cf8:	e7ac      	b.n	8014c54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014cfa:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014cfe:	f04f 0800 	mov.w	r8, #0
 8014d02:	eb03 0008 	add.w	r0, r3, r8
 8014d06:	2800      	cmp	r0, #0
 8014d08:	dc41      	bgt.n	8014d8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014d0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d0e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014d12:	9b01      	ldr	r3, [sp, #4]
 8014d14:	2b00      	cmp	r3, #0
 8014d16:	f340 8097 	ble.w	8014e48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014d1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014d1e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014d22:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014d26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d28:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014d2c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014d30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014d34:	eef0 6a62 	vmov.f32	s13, s5
 8014d38:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d40:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d44:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014d48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d4c:	eef0 6a43 	vmov.f32	s13, s6
 8014d50:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d54:	ee12 2a90 	vmov	r2, s5
 8014d58:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d60:	ee13 2a10 	vmov	r2, s6
 8014d64:	9313      	str	r3, [sp, #76]	; 0x4c
 8014d66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d68:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d6c:	9314      	str	r3, [sp, #80]	; 0x50
 8014d6e:	9b01      	ldr	r3, [sp, #4]
 8014d70:	9a05      	ldr	r2, [sp, #20]
 8014d72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d76:	3b01      	subs	r3, #1
 8014d78:	9301      	str	r3, [sp, #4]
 8014d7a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014d7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d80:	eeb0 3a67 	vmov.f32	s6, s15
 8014d84:	bf08      	it	eq
 8014d86:	4613      	moveq	r3, r2
 8014d88:	eef0 2a47 	vmov.f32	s5, s14
 8014d8c:	e72c      	b.n	8014be8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014d8e:	140f      	asrs	r7, r1, #16
 8014d90:	d453      	bmi.n	8014e3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014d92:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014d96:	42bd      	cmp	r5, r7
 8014d98:	dd4f      	ble.n	8014e3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014d9a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014d9e:	d44c      	bmi.n	8014e3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014da0:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014da4:	4560      	cmp	r0, ip
 8014da6:	dd48      	ble.n	8014e3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014da8:	9803      	ldr	r0, [sp, #12]
 8014daa:	b22d      	sxth	r5, r5
 8014dac:	fb0c 0505 	mla	r5, ip, r5, r0
 8014db0:	5de8      	ldrb	r0, [r5, r7]
 8014db2:	9d04      	ldr	r5, [sp, #16]
 8014db4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014db8:	f06f 0501 	mvn.w	r5, #1
 8014dbc:	fb05 fb08 	mul.w	fp, r5, r8
 8014dc0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014dc4:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014dc8:	122f      	asrs	r7, r5, #8
 8014dca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014dce:	fb17 f706 	smulbb	r7, r7, r6
 8014dd2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014dd6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014dda:	00ed      	lsls	r5, r5, #3
 8014ddc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014de0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014de4:	10c7      	asrs	r7, r0, #3
 8014de6:	b2ed      	uxtb	r5, r5
 8014de8:	00c0      	lsls	r0, r0, #3
 8014dea:	fb19 f906 	smulbb	r9, r9, r6
 8014dee:	fb15 f506 	smulbb	r5, r5, r6
 8014df2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014df6:	b2c0      	uxtb	r0, r0
 8014df8:	fa1f fc8c 	uxth.w	ip, ip
 8014dfc:	fb07 970a 	mla	r7, r7, sl, r9
 8014e00:	fb00 500a 	mla	r0, r0, sl, r5
 8014e04:	b2bf      	uxth	r7, r7
 8014e06:	b280      	uxth	r0, r0
 8014e08:	f10c 0501 	add.w	r5, ip, #1
 8014e0c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014e10:	f107 0901 	add.w	r9, r7, #1
 8014e14:	1c45      	adds	r5, r0, #1
 8014e16:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014e1a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014e1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014e22:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014e26:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014e2a:	ea45 0c0c 	orr.w	ip, r5, ip
 8014e2e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014e32:	ea4c 0c09 	orr.w	ip, ip, r9
 8014e36:	f824 c00b 	strh.w	ip, [r4, fp]
 8014e3a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014e3c:	4401      	add	r1, r0
 8014e3e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014e40:	f108 38ff 	add.w	r8, r8, #4294967295
 8014e44:	4402      	add	r2, r0
 8014e46:	e75c      	b.n	8014d02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014e48:	b007      	add	sp, #28
 8014e4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e52:	b085      	sub	sp, #20
 8014e54:	4693      	mov	fp, r2
 8014e56:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014e58:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014e5a:	6870      	ldr	r0, [r6, #4]
 8014e5c:	9100      	str	r1, [sp, #0]
 8014e5e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014e62:	fb00 2404 	mla	r4, r0, r4, r2
 8014e66:	6832      	ldr	r2, [r6, #0]
 8014e68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e6c:	682a      	ldr	r2, [r5, #0]
 8014e6e:	9201      	str	r2, [sp, #4]
 8014e70:	686a      	ldr	r2, [r5, #4]
 8014e72:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014e76:	3204      	adds	r2, #4
 8014e78:	9202      	str	r2, [sp, #8]
 8014e7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e7e:	9a00      	ldr	r2, [sp, #0]
 8014e80:	2a00      	cmp	r2, #0
 8014e82:	dc03      	bgt.n	8014e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014e84:	f1bb 0f00 	cmp.w	fp, #0
 8014e88:	f340 80a0 	ble.w	8014fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014e8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014e8e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014e92:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014e96:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014e9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014e9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014ea0:	2b00      	cmp	r3, #0
 8014ea2:	dd0c      	ble.n	8014ebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ea4:	1406      	asrs	r6, r0, #16
 8014ea6:	d405      	bmi.n	8014eb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014ea8:	454e      	cmp	r6, r9
 8014eaa:	da03      	bge.n	8014eb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014eac:	1416      	asrs	r6, r2, #16
 8014eae:	d401      	bmi.n	8014eb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014eb0:	4546      	cmp	r6, r8
 8014eb2:	db05      	blt.n	8014ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014eb4:	4470      	add	r0, lr
 8014eb6:	4462      	add	r2, ip
 8014eb8:	3b01      	subs	r3, #1
 8014eba:	3402      	adds	r4, #2
 8014ebc:	e7f0      	b.n	8014ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014ebe:	d00f      	beq.n	8014ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014ec0:	1e5e      	subs	r6, r3, #1
 8014ec2:	fb0e 0706 	mla	r7, lr, r6, r0
 8014ec6:	143f      	asrs	r7, r7, #16
 8014ec8:	d541      	bpl.n	8014f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014eca:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014ece:	4698      	mov	r8, r3
 8014ed0:	9603      	str	r6, [sp, #12]
 8014ed2:	f1b8 0f00 	cmp.w	r8, #0
 8014ed6:	dc59      	bgt.n	8014f8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014ed8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014edc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ee0:	9b00      	ldr	r3, [sp, #0]
 8014ee2:	2b00      	cmp	r3, #0
 8014ee4:	dd72      	ble.n	8014fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014ee6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014eea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014eee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014ef2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ef4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ef8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014efc:	eeb0 6a62 	vmov.f32	s12, s5
 8014f00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f0c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014f10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f14:	eeb0 6a43 	vmov.f32	s12, s6
 8014f18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f1c:	ee12 2a90 	vmov	r2, s5
 8014f20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f24:	fb92 fef3 	sdiv	lr, r2, r3
 8014f28:	ee13 2a10 	vmov	r2, s6
 8014f2c:	fb92 fcf3 	sdiv	ip, r2, r3
 8014f30:	9b00      	ldr	r3, [sp, #0]
 8014f32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f36:	3b01      	subs	r3, #1
 8014f38:	9300      	str	r3, [sp, #0]
 8014f3a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014f3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f40:	eeb0 3a67 	vmov.f32	s6, s15
 8014f44:	bf08      	it	eq
 8014f46:	465b      	moveq	r3, fp
 8014f48:	eef0 2a47 	vmov.f32	s5, s14
 8014f4c:	e797      	b.n	8014e7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014f4e:	454f      	cmp	r7, r9
 8014f50:	dabb      	bge.n	8014eca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014f52:	fb0c 2606 	mla	r6, ip, r6, r2
 8014f56:	1436      	asrs	r6, r6, #16
 8014f58:	d4b7      	bmi.n	8014eca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014f5a:	4546      	cmp	r6, r8
 8014f5c:	dab5      	bge.n	8014eca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014f5e:	461e      	mov	r6, r3
 8014f60:	46a0      	mov	r8, r4
 8014f62:	2e00      	cmp	r6, #0
 8014f64:	ddb8      	ble.n	8014ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014f66:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014f6a:	9901      	ldr	r1, [sp, #4]
 8014f6c:	1417      	asrs	r7, r2, #16
 8014f6e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014f72:	fb0a 1707 	mla	r7, sl, r7, r1
 8014f76:	9902      	ldr	r1, [sp, #8]
 8014f78:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014f7c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014f80:	f828 7b02 	strh.w	r7, [r8], #2
 8014f84:	4470      	add	r0, lr
 8014f86:	4462      	add	r2, ip
 8014f88:	3e01      	subs	r6, #1
 8014f8a:	e7ea      	b.n	8014f62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014f8c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014f90:	d417      	bmi.n	8014fc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014f92:	68ae      	ldr	r6, [r5, #8]
 8014f94:	454e      	cmp	r6, r9
 8014f96:	dd14      	ble.n	8014fc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014f98:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014f9c:	d411      	bmi.n	8014fc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014f9e:	68ef      	ldr	r7, [r5, #12]
 8014fa0:	4557      	cmp	r7, sl
 8014fa2:	dd0e      	ble.n	8014fc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014fa4:	9f01      	ldr	r7, [sp, #4]
 8014fa6:	b236      	sxth	r6, r6
 8014fa8:	fb0a 7606 	mla	r6, sl, r6, r7
 8014fac:	9f02      	ldr	r7, [sp, #8]
 8014fae:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014fb2:	f06f 0101 	mvn.w	r1, #1
 8014fb6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014fba:	fb01 f608 	mul.w	r6, r1, r8
 8014fbe:	9903      	ldr	r1, [sp, #12]
 8014fc0:	538f      	strh	r7, [r1, r6]
 8014fc2:	4470      	add	r0, lr
 8014fc4:	4462      	add	r2, ip
 8014fc6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014fca:	e782      	b.n	8014ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014fcc:	b005      	add	sp, #20
 8014fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014fd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fd6:	b087      	sub	sp, #28
 8014fd8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014fda:	9205      	str	r2, [sp, #20]
 8014fdc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014fe0:	9203      	str	r2, [sp, #12]
 8014fe2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014fe6:	9102      	str	r1, [sp, #8]
 8014fe8:	6861      	ldr	r1, [r4, #4]
 8014fea:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014fee:	fb01 2000 	mla	r0, r1, r0, r2
 8014ff2:	6822      	ldr	r2, [r4, #0]
 8014ff4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014ff8:	9200      	str	r2, [sp, #0]
 8014ffa:	f8dc 2000 	ldr.w	r2, [ip]
 8014ffe:	9204      	str	r2, [sp, #16]
 8015000:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015004:	3204      	adds	r2, #4
 8015006:	9201      	str	r2, [sp, #4]
 8015008:	9a03      	ldr	r2, [sp, #12]
 801500a:	43d5      	mvns	r5, r2
 801500c:	b2ed      	uxtb	r5, r5
 801500e:	9a02      	ldr	r2, [sp, #8]
 8015010:	2a00      	cmp	r2, #0
 8015012:	dc03      	bgt.n	801501c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015014:	9a05      	ldr	r2, [sp, #20]
 8015016:	2a00      	cmp	r2, #0
 8015018:	f340 812c 	ble.w	8015274 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801501c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801501e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8015022:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8015026:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801502a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801502c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015030:	2b00      	cmp	r3, #0
 8015032:	dd10      	ble.n	8015056 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015034:	140c      	asrs	r4, r1, #16
 8015036:	d405      	bmi.n	8015044 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015038:	4574      	cmp	r4, lr
 801503a:	da03      	bge.n	8015044 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801503c:	1414      	asrs	r4, r2, #16
 801503e:	d401      	bmi.n	8015044 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015040:	42bc      	cmp	r4, r7
 8015042:	db09      	blt.n	8015058 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015044:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015046:	9800      	ldr	r0, [sp, #0]
 8015048:	4421      	add	r1, r4
 801504a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801504c:	3002      	adds	r0, #2
 801504e:	4422      	add	r2, r4
 8015050:	3b01      	subs	r3, #1
 8015052:	9000      	str	r0, [sp, #0]
 8015054:	e7ec      	b.n	8015030 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015056:	d071      	beq.n	801513c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8015058:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801505a:	1e5c      	subs	r4, r3, #1
 801505c:	fb06 1604 	mla	r6, r6, r4, r1
 8015060:	1436      	asrs	r6, r6, #16
 8015062:	d45d      	bmi.n	8015120 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015064:	4576      	cmp	r6, lr
 8015066:	da5b      	bge.n	8015120 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015068:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801506a:	fb06 2404 	mla	r4, r6, r4, r2
 801506e:	1424      	asrs	r4, r4, #16
 8015070:	d456      	bmi.n	8015120 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015072:	42bc      	cmp	r4, r7
 8015074:	da54      	bge.n	8015120 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015076:	f8dd 9000 	ldr.w	r9, [sp]
 801507a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801507e:	4698      	mov	r8, r3
 8015080:	f1b8 0f00 	cmp.w	r8, #0
 8015084:	dd54      	ble.n	8015130 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015086:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801508a:	9804      	ldr	r0, [sp, #16]
 801508c:	1414      	asrs	r4, r2, #16
 801508e:	fb07 0404 	mla	r4, r7, r4, r0
 8015092:	140e      	asrs	r6, r1, #16
 8015094:	9801      	ldr	r0, [sp, #4]
 8015096:	f814 e006 	ldrb.w	lr, [r4, r6]
 801509a:	f8b9 4000 	ldrh.w	r4, [r9]
 801509e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80150a2:	eb00 0b0e 	add.w	fp, r0, lr
 80150a6:	1227      	asrs	r7, r4, #8
 80150a8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80150ac:	f89b b001 	ldrb.w	fp, [fp, #1]
 80150b0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80150b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80150b6:	fb16 f60a 	smulbb	r6, r6, sl
 80150ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80150be:	fb07 6705 	mla	r7, r7, r5, r6
 80150c2:	10e6      	asrs	r6, r4, #3
 80150c4:	00e4      	lsls	r4, r4, #3
 80150c6:	b2e4      	uxtb	r4, r4
 80150c8:	fb1b fb0a 	smulbb	fp, fp, sl
 80150cc:	fb14 f405 	smulbb	r4, r4, r5
 80150d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80150d4:	b2bf      	uxth	r7, r7
 80150d6:	fb06 b605 	mla	r6, r6, r5, fp
 80150da:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80150de:	b2b6      	uxth	r6, r6
 80150e0:	fa1f fe8e 	uxth.w	lr, lr
 80150e4:	1c7c      	adds	r4, r7, #1
 80150e6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80150ea:	f106 0b01 	add.w	fp, r6, #1
 80150ee:	f10e 0401 	add.w	r4, lr, #1
 80150f2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80150f6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80150fa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80150fe:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015102:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015106:	4327      	orrs	r7, r4
 8015108:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801510c:	4401      	add	r1, r0
 801510e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015110:	ea47 070b 	orr.w	r7, r7, fp
 8015114:	f829 7b02 	strh.w	r7, [r9], #2
 8015118:	4402      	add	r2, r0
 801511a:	f108 38ff 	add.w	r8, r8, #4294967295
 801511e:	e7af      	b.n	8015080 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8015120:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8015124:	f04f 0e00 	mov.w	lr, #0
 8015128:	eb03 040e 	add.w	r4, r3, lr
 801512c:	2c00      	cmp	r4, #0
 801512e:	dc43      	bgt.n	80151b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015130:	9a00      	ldr	r2, [sp, #0]
 8015132:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015136:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801513a:	9300      	str	r3, [sp, #0]
 801513c:	9b02      	ldr	r3, [sp, #8]
 801513e:	2b00      	cmp	r3, #0
 8015140:	f340 8098 	ble.w	8015274 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015144:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015148:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801514c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015150:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015152:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015156:	ee31 1a05 	vadd.f32	s2, s2, s10
 801515a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801515e:	eef0 6a62 	vmov.f32	s13, s5
 8015162:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015166:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801516a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801516e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015176:	eef0 6a43 	vmov.f32	s13, s6
 801517a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801517e:	ee12 2a90 	vmov	r2, s5
 8015182:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015186:	fb92 f3f3 	sdiv	r3, r2, r3
 801518a:	ee13 2a10 	vmov	r2, s6
 801518e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015190:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015192:	fb92 f3f3 	sdiv	r3, r2, r3
 8015196:	9314      	str	r3, [sp, #80]	; 0x50
 8015198:	9b02      	ldr	r3, [sp, #8]
 801519a:	9a05      	ldr	r2, [sp, #20]
 801519c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80151a0:	3b01      	subs	r3, #1
 80151a2:	9302      	str	r3, [sp, #8]
 80151a4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80151a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80151aa:	eeb0 3a67 	vmov.f32	s6, s15
 80151ae:	bf08      	it	eq
 80151b0:	4613      	moveq	r3, r2
 80151b2:	eef0 2a47 	vmov.f32	s5, s14
 80151b6:	e72a      	b.n	801500e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80151b8:	140f      	asrs	r7, r1, #16
 80151ba:	d454      	bmi.n	8015266 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80151bc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80151c0:	42be      	cmp	r6, r7
 80151c2:	dd50      	ble.n	8015266 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80151c4:	ea5f 4822 	movs.w	r8, r2, asr #16
 80151c8:	d44d      	bmi.n	8015266 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80151ca:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80151ce:	4544      	cmp	r4, r8
 80151d0:	dd49      	ble.n	8015266 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80151d2:	9c04      	ldr	r4, [sp, #16]
 80151d4:	b236      	sxth	r6, r6
 80151d6:	fb08 4606 	mla	r6, r8, r6, r4
 80151da:	f06f 0001 	mvn.w	r0, #1
 80151de:	f816 8007 	ldrb.w	r8, [r6, r7]
 80151e2:	9c01      	ldr	r4, [sp, #4]
 80151e4:	fb00 fa0e 	mul.w	sl, r0, lr
 80151e8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80151ec:	9800      	ldr	r0, [sp, #0]
 80151ee:	eb04 0b08 	add.w	fp, r4, r8
 80151f2:	f830 400a 	ldrh.w	r4, [r0, sl]
 80151f6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80151fa:	9801      	ldr	r0, [sp, #4]
 80151fc:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015200:	f810 8008 	ldrb.w	r8, [r0, r8]
 8015204:	9800      	ldr	r0, [sp, #0]
 8015206:	1227      	asrs	r7, r4, #8
 8015208:	fb16 f609 	smulbb	r6, r6, r9
 801520c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015210:	fb07 6705 	mla	r7, r7, r5, r6
 8015214:	10e6      	asrs	r6, r4, #3
 8015216:	00e4      	lsls	r4, r4, #3
 8015218:	b2e4      	uxtb	r4, r4
 801521a:	fb1b fb09 	smulbb	fp, fp, r9
 801521e:	fb14 f405 	smulbb	r4, r4, r5
 8015222:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015226:	b2bf      	uxth	r7, r7
 8015228:	fb06 b605 	mla	r6, r6, r5, fp
 801522c:	fb08 4809 	mla	r8, r8, r9, r4
 8015230:	b2b6      	uxth	r6, r6
 8015232:	fa1f f888 	uxth.w	r8, r8
 8015236:	1c7c      	adds	r4, r7, #1
 8015238:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801523c:	f106 0b01 	add.w	fp, r6, #1
 8015240:	f108 0401 	add.w	r4, r8, #1
 8015244:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015248:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801524c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015250:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015254:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015258:	4327      	orrs	r7, r4
 801525a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801525e:	ea47 070b 	orr.w	r7, r7, fp
 8015262:	f820 700a 	strh.w	r7, [r0, sl]
 8015266:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015268:	4401      	add	r1, r0
 801526a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801526c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015270:	4402      	add	r2, r0
 8015272:	e759      	b.n	8015128 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015274:	b007      	add	sp, #28
 8015276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801527c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801527c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015280:	b085      	sub	sp, #20
 8015282:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015286:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015288:	9203      	str	r2, [sp, #12]
 801528a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801528e:	6870      	ldr	r0, [r6, #4]
 8015290:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015292:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015296:	686f      	ldr	r7, [r5, #4]
 8015298:	9101      	str	r1, [sp, #4]
 801529a:	fb00 2404 	mla	r4, r0, r4, r2
 801529e:	6832      	ldr	r2, [r6, #0]
 80152a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80152a4:	682a      	ldr	r2, [r5, #0]
 80152a6:	9202      	str	r2, [sp, #8]
 80152a8:	3704      	adds	r7, #4
 80152aa:	9a01      	ldr	r2, [sp, #4]
 80152ac:	2a00      	cmp	r2, #0
 80152ae:	dc03      	bgt.n	80152b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80152b0:	9a03      	ldr	r2, [sp, #12]
 80152b2:	2a00      	cmp	r2, #0
 80152b4:	f340 80cc 	ble.w	8015450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80152b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80152ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80152be:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80152c2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80152c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80152c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80152cc:	2b00      	cmp	r3, #0
 80152ce:	dd0d      	ble.n	80152ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80152d0:	1406      	asrs	r6, r0, #16
 80152d2:	d405      	bmi.n	80152e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80152d4:	454e      	cmp	r6, r9
 80152d6:	da03      	bge.n	80152e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80152d8:	1416      	asrs	r6, r2, #16
 80152da:	d401      	bmi.n	80152e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80152dc:	4546      	cmp	r6, r8
 80152de:	db06      	blt.n	80152ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80152e0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80152e2:	4460      	add	r0, ip
 80152e4:	4432      	add	r2, r6
 80152e6:	3b01      	subs	r3, #1
 80152e8:	3402      	adds	r4, #2
 80152ea:	e7ef      	b.n	80152cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80152ec:	d00f      	beq.n	801530e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80152ee:	1e5e      	subs	r6, r3, #1
 80152f0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80152f4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80152f8:	d543      	bpl.n	8015382 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80152fa:	4698      	mov	r8, r3
 80152fc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8015300:	f1b8 0f00 	cmp.w	r8, #0
 8015304:	dc71      	bgt.n	80153ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8015306:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801530a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801530e:	9b01      	ldr	r3, [sp, #4]
 8015310:	2b00      	cmp	r3, #0
 8015312:	f340 809d 	ble.w	8015450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015316:	ee30 0a04 	vadd.f32	s0, s0, s8
 801531a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801531e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015322:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015324:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015328:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801532c:	eeb0 6a62 	vmov.f32	s12, s5
 8015330:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015334:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015338:	ee77 2a62 	vsub.f32	s5, s14, s5
 801533c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015340:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015344:	eeb0 6a43 	vmov.f32	s12, s6
 8015348:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801534c:	ee12 2a90 	vmov	r2, s5
 8015350:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015354:	fb92 fcf3 	sdiv	ip, r2, r3
 8015358:	ee13 2a10 	vmov	r2, s6
 801535c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015360:	9312      	str	r3, [sp, #72]	; 0x48
 8015362:	9b01      	ldr	r3, [sp, #4]
 8015364:	9a03      	ldr	r2, [sp, #12]
 8015366:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801536a:	3b01      	subs	r3, #1
 801536c:	9301      	str	r3, [sp, #4]
 801536e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015372:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015374:	eeb0 3a67 	vmov.f32	s6, s15
 8015378:	bf08      	it	eq
 801537a:	4613      	moveq	r3, r2
 801537c:	eef0 2a47 	vmov.f32	s5, s14
 8015380:	e793      	b.n	80152aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015382:	45ce      	cmp	lr, r9
 8015384:	dab9      	bge.n	80152fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015386:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015388:	fb01 2606 	mla	r6, r1, r6, r2
 801538c:	1436      	asrs	r6, r6, #16
 801538e:	d4b4      	bmi.n	80152fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015390:	4546      	cmp	r6, r8
 8015392:	dab2      	bge.n	80152fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015394:	4698      	mov	r8, r3
 8015396:	46a2      	mov	sl, r4
 8015398:	f1b8 0f00 	cmp.w	r8, #0
 801539c:	ddb3      	ble.n	8015306 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801539e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80153a2:	9902      	ldr	r1, [sp, #8]
 80153a4:	1416      	asrs	r6, r2, #16
 80153a6:	fb09 1606 	mla	r6, r9, r6, r1
 80153aa:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80153ae:	492a      	ldr	r1, [pc, #168]	; (8015458 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80153b0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80153b4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80153b8:	eb07 0b0e 	add.w	fp, r7, lr
 80153bc:	4460      	add	r0, ip
 80153be:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80153c2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80153c6:	00f6      	lsls	r6, r6, #3
 80153c8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80153cc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80153d0:	ea49 0606 	orr.w	r6, r9, r6
 80153d4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80153d8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80153da:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80153de:	f82a 6b02 	strh.w	r6, [sl], #2
 80153e2:	440a      	add	r2, r1
 80153e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80153e8:	e7d6      	b.n	8015398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80153ea:	ea5f 4920 	movs.w	r9, r0, asr #16
 80153ee:	d429      	bmi.n	8015444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80153f0:	68ae      	ldr	r6, [r5, #8]
 80153f2:	454e      	cmp	r6, r9
 80153f4:	dd26      	ble.n	8015444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80153f6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80153fa:	d423      	bmi.n	8015444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80153fc:	68e9      	ldr	r1, [r5, #12]
 80153fe:	4559      	cmp	r1, fp
 8015400:	dd20      	ble.n	8015444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015402:	9902      	ldr	r1, [sp, #8]
 8015404:	fa0f fe86 	sxth.w	lr, r6
 8015408:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801540c:	f06f 0101 	mvn.w	r1, #1
 8015410:	f81e e009 	ldrb.w	lr, [lr, r9]
 8015414:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015418:	eb07 060e 	add.w	r6, r7, lr
 801541c:	fb01 f908 	mul.w	r9, r1, r8
 8015420:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015424:	7876      	ldrb	r6, [r6, #1]
 8015426:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801542a:	00f6      	lsls	r6, r6, #3
 801542c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015430:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015434:	ea4b 0606 	orr.w	r6, fp, r6
 8015438:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801543c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015440:	f82a 6009 	strh.w	r6, [sl, r9]
 8015444:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015446:	4460      	add	r0, ip
 8015448:	440a      	add	r2, r1
 801544a:	f108 38ff 	add.w	r8, r8, #4294967295
 801544e:	e757      	b.n	8015300 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015450:	b005      	add	sp, #20
 8015452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015456:	bf00      	nop
 8015458:	fffff800 	.word	0xfffff800

0801545c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801545c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015460:	b087      	sub	sp, #28
 8015462:	468b      	mov	fp, r1
 8015464:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015466:	9204      	str	r2, [sp, #16]
 8015468:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801546c:	9205      	str	r2, [sp, #20]
 801546e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015472:	6841      	ldr	r1, [r0, #4]
 8015474:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015478:	fb01 2404 	mla	r4, r1, r4, r2
 801547c:	6802      	ldr	r2, [r0, #0]
 801547e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015482:	f8dc 2000 	ldr.w	r2, [ip]
 8015486:	9201      	str	r2, [sp, #4]
 8015488:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801548c:	3204      	adds	r2, #4
 801548e:	9202      	str	r2, [sp, #8]
 8015490:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015494:	f1bb 0f00 	cmp.w	fp, #0
 8015498:	dc03      	bgt.n	80154a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801549a:	9a04      	ldr	r2, [sp, #16]
 801549c:	2a00      	cmp	r2, #0
 801549e:	f340 8138 	ble.w	8015712 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80154a2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80154a4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80154a8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80154ac:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80154b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80154b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80154b6:	2b00      	cmp	r3, #0
 80154b8:	dd0e      	ble.n	80154d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80154ba:	1402      	asrs	r2, r0, #16
 80154bc:	d405      	bmi.n	80154ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80154be:	42ba      	cmp	r2, r7
 80154c0:	da03      	bge.n	80154ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80154c2:	140a      	asrs	r2, r1, #16
 80154c4:	d401      	bmi.n	80154ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80154c6:	42b2      	cmp	r2, r6
 80154c8:	db07      	blt.n	80154da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80154ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80154cc:	4410      	add	r0, r2
 80154ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80154d0:	3b01      	subs	r3, #1
 80154d2:	4411      	add	r1, r2
 80154d4:	3402      	adds	r4, #2
 80154d6:	e7ee      	b.n	80154b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80154d8:	d019      	beq.n	801550e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80154da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80154dc:	1e5a      	subs	r2, r3, #1
 80154de:	fb05 0502 	mla	r5, r5, r2, r0
 80154e2:	142d      	asrs	r5, r5, #16
 80154e4:	d409      	bmi.n	80154fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80154e6:	42bd      	cmp	r5, r7
 80154e8:	da07      	bge.n	80154fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80154ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80154ec:	fb05 1202 	mla	r2, r5, r2, r1
 80154f0:	1412      	asrs	r2, r2, #16
 80154f2:	d402      	bmi.n	80154fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80154f4:	42b2      	cmp	r2, r6
 80154f6:	f2c0 80ac 	blt.w	8015652 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80154fa:	f04f 0e00 	mov.w	lr, #0
 80154fe:	eb03 020e 	add.w	r2, r3, lr
 8015502:	2a00      	cmp	r2, #0
 8015504:	dc3e      	bgt.n	8015584 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015506:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801550a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801550e:	f1bb 0f00 	cmp.w	fp, #0
 8015512:	f340 80fe 	ble.w	8015712 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015516:	ee30 0a04 	vadd.f32	s0, s0, s8
 801551a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801551e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015522:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015524:	f1bb 0b01 	subs.w	fp, fp, #1
 8015528:	ee31 1a05 	vadd.f32	s2, s2, s10
 801552c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015530:	eeb0 6a62 	vmov.f32	s12, s5
 8015534:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015538:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801553c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015540:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015544:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015548:	eeb0 6a43 	vmov.f32	s12, s6
 801554c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015550:	ee12 2a90 	vmov	r2, s5
 8015554:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015558:	fb92 f3f3 	sdiv	r3, r2, r3
 801555c:	ee13 2a10 	vmov	r2, s6
 8015560:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015564:	9313      	str	r3, [sp, #76]	; 0x4c
 8015566:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015568:	fb92 f3f3 	sdiv	r3, r2, r3
 801556c:	9a04      	ldr	r2, [sp, #16]
 801556e:	9314      	str	r3, [sp, #80]	; 0x50
 8015570:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015574:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015576:	eeb0 3a67 	vmov.f32	s6, s15
 801557a:	bf08      	it	eq
 801557c:	4613      	moveq	r3, r2
 801557e:	eef0 2a47 	vmov.f32	s5, s14
 8015582:	e787      	b.n	8015494 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015584:	1406      	asrs	r6, r0, #16
 8015586:	d45d      	bmi.n	8015644 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015588:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801558c:	42b5      	cmp	r5, r6
 801558e:	dd59      	ble.n	8015644 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015590:	140f      	asrs	r7, r1, #16
 8015592:	d457      	bmi.n	8015644 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015594:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015598:	42ba      	cmp	r2, r7
 801559a:	dd53      	ble.n	8015644 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801559c:	9a01      	ldr	r2, [sp, #4]
 801559e:	b22d      	sxth	r5, r5
 80155a0:	fb07 2505 	mla	r5, r7, r5, r2
 80155a4:	5daa      	ldrb	r2, [r5, r6]
 80155a6:	9d02      	ldr	r5, [sp, #8]
 80155a8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80155ac:	0e2e      	lsrs	r6, r5, #24
 80155ae:	d049      	beq.n	8015644 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80155b0:	f06f 0201 	mvn.w	r2, #1
 80155b4:	fb02 f20e 	mul.w	r2, r2, lr
 80155b8:	9203      	str	r2, [sp, #12]
 80155ba:	f834 8002 	ldrh.w	r8, [r4, r2]
 80155be:	9a05      	ldr	r2, [sp, #20]
 80155c0:	4356      	muls	r6, r2
 80155c2:	1c72      	adds	r2, r6, #1
 80155c4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80155c8:	1212      	asrs	r2, r2, #8
 80155ca:	fa1f f982 	uxth.w	r9, r2
 80155ce:	ea4f 2728 	mov.w	r7, r8, asr #8
 80155d2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80155d6:	43d2      	mvns	r2, r2
 80155d8:	b2d2      	uxtb	r2, r2
 80155da:	fb16 f609 	smulbb	r6, r6, r9
 80155de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80155e2:	fb07 6702 	mla	r7, r7, r2, r6
 80155e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80155ea:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80155ee:	b2ed      	uxtb	r5, r5
 80155f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80155f4:	fa5f f888 	uxtb.w	r8, r8
 80155f8:	fb15 f509 	smulbb	r5, r5, r9
 80155fc:	fb08 5502 	mla	r5, r8, r2, r5
 8015600:	b2bf      	uxth	r7, r7
 8015602:	fb1a fa09 	smulbb	sl, sl, r9
 8015606:	b2ad      	uxth	r5, r5
 8015608:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801560c:	fb06 a602 	mla	r6, r6, r2, sl
 8015610:	1c7a      	adds	r2, r7, #1
 8015612:	f105 0a01 	add.w	sl, r5, #1
 8015616:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801561a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801561e:	b2b6      	uxth	r6, r6
 8015620:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015624:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015628:	ea4a 0707 	orr.w	r7, sl, r7
 801562c:	f106 0a01 	add.w	sl, r6, #1
 8015630:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015634:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015638:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801563c:	9a03      	ldr	r2, [sp, #12]
 801563e:	ea47 070a 	orr.w	r7, r7, sl
 8015642:	52a7      	strh	r7, [r4, r2]
 8015644:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015646:	4410      	add	r0, r2
 8015648:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801564a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801564e:	4411      	add	r1, r2
 8015650:	e755      	b.n	80154fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015652:	f04f 0800 	mov.w	r8, #0
 8015656:	eba3 0208 	sub.w	r2, r3, r8
 801565a:	2a00      	cmp	r2, #0
 801565c:	f77f af53 	ble.w	8015506 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015660:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015664:	9f01      	ldr	r7, [sp, #4]
 8015666:	140a      	asrs	r2, r1, #16
 8015668:	1405      	asrs	r5, r0, #16
 801566a:	fb06 7202 	mla	r2, r6, r2, r7
 801566e:	5d52      	ldrb	r2, [r2, r5]
 8015670:	9d02      	ldr	r5, [sp, #8]
 8015672:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015676:	0e2e      	lsrs	r6, r5, #24
 8015678:	d044      	beq.n	8015704 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801567a:	9a05      	ldr	r2, [sp, #20]
 801567c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015680:	4356      	muls	r6, r2
 8015682:	1c72      	adds	r2, r6, #1
 8015684:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015688:	1212      	asrs	r2, r2, #8
 801568a:	fa1f f982 	uxth.w	r9, r2
 801568e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015692:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015696:	43d2      	mvns	r2, r2
 8015698:	b2d2      	uxtb	r2, r2
 801569a:	fb16 f609 	smulbb	r6, r6, r9
 801569e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80156a2:	fb07 6702 	mla	r7, r7, r2, r6
 80156a6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80156aa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80156ae:	b2ed      	uxtb	r5, r5
 80156b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80156b4:	fa5f fe8e 	uxtb.w	lr, lr
 80156b8:	fb15 f509 	smulbb	r5, r5, r9
 80156bc:	fb0e 5502 	mla	r5, lr, r2, r5
 80156c0:	b2bf      	uxth	r7, r7
 80156c2:	fb1a fa09 	smulbb	sl, sl, r9
 80156c6:	b2ad      	uxth	r5, r5
 80156c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80156cc:	fb06 a602 	mla	r6, r6, r2, sl
 80156d0:	1c7a      	adds	r2, r7, #1
 80156d2:	f105 0a01 	add.w	sl, r5, #1
 80156d6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80156da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80156de:	b2b6      	uxth	r6, r6
 80156e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80156e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80156e8:	ea4a 0707 	orr.w	r7, sl, r7
 80156ec:	f106 0a01 	add.w	sl, r6, #1
 80156f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80156f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80156f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80156fc:	ea47 070a 	orr.w	r7, r7, sl
 8015700:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015704:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015706:	4410      	add	r0, r2
 8015708:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801570a:	f108 0801 	add.w	r8, r8, #1
 801570e:	4411      	add	r1, r2
 8015710:	e7a1      	b.n	8015656 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8015712:	b007      	add	sp, #28
 8015714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015718 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801571c:	b085      	sub	sp, #20
 801571e:	468b      	mov	fp, r1
 8015720:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015722:	9203      	str	r2, [sp, #12]
 8015724:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015728:	6841      	ldr	r1, [r0, #4]
 801572a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801572e:	fb01 2404 	mla	r4, r1, r4, r2
 8015732:	6802      	ldr	r2, [r0, #0]
 8015734:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015738:	f8de 2000 	ldr.w	r2, [lr]
 801573c:	9200      	str	r2, [sp, #0]
 801573e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015742:	3204      	adds	r2, #4
 8015744:	9201      	str	r2, [sp, #4]
 8015746:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801574a:	f1bb 0f00 	cmp.w	fp, #0
 801574e:	dc03      	bgt.n	8015758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015750:	9a03      	ldr	r2, [sp, #12]
 8015752:	2a00      	cmp	r2, #0
 8015754:	f340 8153 	ble.w	80159fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015758:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801575a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801575e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015762:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015766:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015768:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801576c:	2b00      	cmp	r3, #0
 801576e:	dd0e      	ble.n	801578e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015770:	1408      	asrs	r0, r1, #16
 8015772:	d405      	bmi.n	8015780 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015774:	42b8      	cmp	r0, r7
 8015776:	da03      	bge.n	8015780 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015778:	1410      	asrs	r0, r2, #16
 801577a:	d401      	bmi.n	8015780 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801577c:	42b0      	cmp	r0, r6
 801577e:	db07      	blt.n	8015790 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015780:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015782:	4401      	add	r1, r0
 8015784:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015786:	3b01      	subs	r3, #1
 8015788:	4402      	add	r2, r0
 801578a:	3402      	adds	r4, #2
 801578c:	e7ee      	b.n	801576c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801578e:	d017      	beq.n	80157c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015790:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015792:	1e58      	subs	r0, r3, #1
 8015794:	fb05 1500 	mla	r5, r5, r0, r1
 8015798:	142d      	asrs	r5, r5, #16
 801579a:	d409      	bmi.n	80157b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801579c:	42bd      	cmp	r5, r7
 801579e:	da07      	bge.n	80157b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80157a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80157a2:	fb05 2000 	mla	r0, r5, r0, r2
 80157a6:	1400      	asrs	r0, r0, #16
 80157a8:	d402      	bmi.n	80157b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80157aa:	42b0      	cmp	r0, r6
 80157ac:	f2c0 80bc 	blt.w	8015928 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80157b0:	2600      	movs	r6, #0
 80157b2:	1998      	adds	r0, r3, r6
 80157b4:	2800      	cmp	r0, #0
 80157b6:	dc3e      	bgt.n	8015836 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80157b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80157bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80157c0:	f1bb 0f00 	cmp.w	fp, #0
 80157c4:	f340 811b 	ble.w	80159fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80157c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80157cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80157d0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80157d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80157d6:	f1bb 0b01 	subs.w	fp, fp, #1
 80157da:	ee31 1a05 	vadd.f32	s2, s2, s10
 80157de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80157e2:	eeb0 6a62 	vmov.f32	s12, s5
 80157e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80157ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80157ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 80157f2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80157f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80157fa:	eeb0 6a43 	vmov.f32	s12, s6
 80157fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015802:	ee12 2a90 	vmov	r2, s5
 8015806:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801580a:	fb92 f3f3 	sdiv	r3, r2, r3
 801580e:	ee13 2a10 	vmov	r2, s6
 8015812:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015816:	9311      	str	r3, [sp, #68]	; 0x44
 8015818:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801581a:	fb92 f3f3 	sdiv	r3, r2, r3
 801581e:	9a03      	ldr	r2, [sp, #12]
 8015820:	9312      	str	r3, [sp, #72]	; 0x48
 8015822:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015826:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015828:	eeb0 3a67 	vmov.f32	s6, s15
 801582c:	bf08      	it	eq
 801582e:	4613      	moveq	r3, r2
 8015830:	eef0 2a47 	vmov.f32	s5, s14
 8015834:	e789      	b.n	801574a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015836:	140f      	asrs	r7, r1, #16
 8015838:	d426      	bmi.n	8015888 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801583a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801583e:	42bd      	cmp	r5, r7
 8015840:	dd22      	ble.n	8015888 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015842:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015846:	d41f      	bmi.n	8015888 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015848:	f8de 000c 	ldr.w	r0, [lr, #12]
 801584c:	4560      	cmp	r0, ip
 801584e:	dd1b      	ble.n	8015888 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015850:	9800      	ldr	r0, [sp, #0]
 8015852:	b22d      	sxth	r5, r5
 8015854:	fb0c 0505 	mla	r5, ip, r5, r0
 8015858:	5de8      	ldrb	r0, [r5, r7]
 801585a:	9d01      	ldr	r5, [sp, #4]
 801585c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015860:	0e07      	lsrs	r7, r0, #24
 8015862:	2fff      	cmp	r7, #255	; 0xff
 8015864:	d116      	bne.n	8015894 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015866:	f06f 0501 	mvn.w	r5, #1
 801586a:	fb05 f706 	mul.w	r7, r5, r6
 801586e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015872:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015876:	0945      	lsrs	r5, r0, #5
 8015878:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801587c:	ea4c 0505 	orr.w	r5, ip, r5
 8015880:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015884:	4305      	orrs	r5, r0
 8015886:	53e5      	strh	r5, [r4, r7]
 8015888:	9811      	ldr	r0, [sp, #68]	; 0x44
 801588a:	4401      	add	r1, r0
 801588c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801588e:	3e01      	subs	r6, #1
 8015890:	4402      	add	r2, r0
 8015892:	e78e      	b.n	80157b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015894:	b2fd      	uxtb	r5, r7
 8015896:	2f00      	cmp	r7, #0
 8015898:	d0f6      	beq.n	8015888 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801589a:	f06f 0701 	mvn.w	r7, #1
 801589e:	4377      	muls	r7, r6
 80158a0:	fa1f f985 	uxth.w	r9, r5
 80158a4:	f834 8007 	ldrh.w	r8, [r4, r7]
 80158a8:	9702      	str	r7, [sp, #8]
 80158aa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80158ae:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80158b2:	43ed      	mvns	r5, r5
 80158b4:	b2ed      	uxtb	r5, r5
 80158b6:	fb17 f709 	smulbb	r7, r7, r9
 80158ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80158be:	fb0c 7c05 	mla	ip, ip, r5, r7
 80158c2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80158c6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80158ca:	b2c0      	uxtb	r0, r0
 80158cc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80158d0:	fa5f f888 	uxtb.w	r8, r8
 80158d4:	fb10 f009 	smulbb	r0, r0, r9
 80158d8:	fb08 0005 	mla	r0, r8, r5, r0
 80158dc:	b280      	uxth	r0, r0
 80158de:	fa1f fc8c 	uxth.w	ip, ip
 80158e2:	fb1a fa09 	smulbb	sl, sl, r9
 80158e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80158ea:	fb07 a705 	mla	r7, r7, r5, sl
 80158ee:	f100 0a01 	add.w	sl, r0, #1
 80158f2:	f10c 0501 	add.w	r5, ip, #1
 80158f6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80158fa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80158fe:	b2bf      	uxth	r7, r7
 8015900:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015904:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015908:	ea4a 0c0c 	orr.w	ip, sl, ip
 801590c:	f107 0a01 	add.w	sl, r7, #1
 8015910:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015914:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015918:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801591c:	9802      	ldr	r0, [sp, #8]
 801591e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015922:	f824 c000 	strh.w	ip, [r4, r0]
 8015926:	e7af      	b.n	8015888 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015928:	f04f 0800 	mov.w	r8, #0
 801592c:	eba3 0008 	sub.w	r0, r3, r8
 8015930:	2800      	cmp	r0, #0
 8015932:	f77f af41 	ble.w	80157b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015936:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801593a:	9f00      	ldr	r7, [sp, #0]
 801593c:	1410      	asrs	r0, r2, #16
 801593e:	140d      	asrs	r5, r1, #16
 8015940:	fb06 7000 	mla	r0, r6, r0, r7
 8015944:	5d40      	ldrb	r0, [r0, r5]
 8015946:	9d01      	ldr	r5, [sp, #4]
 8015948:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801594c:	0e2e      	lsrs	r6, r5, #24
 801594e:	2eff      	cmp	r6, #255	; 0xff
 8015950:	d112      	bne.n	8015978 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015952:	482c      	ldr	r0, [pc, #176]	; (8015a04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015954:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015958:	0968      	lsrs	r0, r5, #5
 801595a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801595e:	4330      	orrs	r0, r6
 8015960:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015964:	4328      	orrs	r0, r5
 8015966:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801596a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801596c:	4401      	add	r1, r0
 801596e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015970:	f108 0801 	add.w	r8, r8, #1
 8015974:	4402      	add	r2, r0
 8015976:	e7d9      	b.n	801592c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015978:	b2f0      	uxtb	r0, r6
 801597a:	2e00      	cmp	r6, #0
 801597c:	d0f5      	beq.n	801596a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801597e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015982:	fa1f f980 	uxth.w	r9, r0
 8015986:	ea4f 272c 	mov.w	r7, ip, asr #8
 801598a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801598e:	43c0      	mvns	r0, r0
 8015990:	b2c0      	uxtb	r0, r0
 8015992:	fb16 f609 	smulbb	r6, r6, r9
 8015996:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801599a:	fb07 6700 	mla	r7, r7, r0, r6
 801599e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80159a2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80159a6:	b2ed      	uxtb	r5, r5
 80159a8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80159ac:	fa5f fc8c 	uxtb.w	ip, ip
 80159b0:	fb15 f509 	smulbb	r5, r5, r9
 80159b4:	fb0c 5500 	mla	r5, ip, r0, r5
 80159b8:	b2bf      	uxth	r7, r7
 80159ba:	fb1a fa09 	smulbb	sl, sl, r9
 80159be:	b2ad      	uxth	r5, r5
 80159c0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80159c4:	fb06 a600 	mla	r6, r6, r0, sl
 80159c8:	1c78      	adds	r0, r7, #1
 80159ca:	f105 0a01 	add.w	sl, r5, #1
 80159ce:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80159d2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80159d6:	b2b6      	uxth	r6, r6
 80159d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80159dc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80159e0:	ea4a 0707 	orr.w	r7, sl, r7
 80159e4:	f106 0a01 	add.w	sl, r6, #1
 80159e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80159ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80159f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80159f4:	ea47 070a 	orr.w	r7, r7, sl
 80159f8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80159fc:	e7b5      	b.n	801596a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80159fe:	b005      	add	sp, #20
 8015a00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a04:	fffff800 	.word	0xfffff800

08015a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a0c:	b087      	sub	sp, #28
 8015a0e:	468b      	mov	fp, r1
 8015a10:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015a12:	9204      	str	r2, [sp, #16]
 8015a14:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015a18:	9205      	str	r2, [sp, #20]
 8015a1a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8015a1e:	6861      	ldr	r1, [r4, #4]
 8015a20:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015a24:	fb01 2000 	mla	r0, r1, r0, r2
 8015a28:	6822      	ldr	r2, [r4, #0]
 8015a2a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015a2e:	f8de 2000 	ldr.w	r2, [lr]
 8015a32:	9201      	str	r2, [sp, #4]
 8015a34:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015a38:	9202      	str	r2, [sp, #8]
 8015a3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015a3e:	f1bb 0f00 	cmp.w	fp, #0
 8015a42:	dc03      	bgt.n	8015a4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015a44:	9a04      	ldr	r2, [sp, #16]
 8015a46:	2a00      	cmp	r2, #0
 8015a48:	f340 8142 	ble.w	8015cd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015a4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015a4e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015a52:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015a56:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015a5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015a5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015a60:	2b00      	cmp	r3, #0
 8015a62:	dd0e      	ble.n	8015a82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015a64:	140c      	asrs	r4, r1, #16
 8015a66:	d405      	bmi.n	8015a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015a68:	42bc      	cmp	r4, r7
 8015a6a:	da03      	bge.n	8015a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015a6c:	1414      	asrs	r4, r2, #16
 8015a6e:	d401      	bmi.n	8015a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015a70:	42b4      	cmp	r4, r6
 8015a72:	db07      	blt.n	8015a84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015a74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015a76:	4421      	add	r1, r4
 8015a78:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015a7a:	3b01      	subs	r3, #1
 8015a7c:	4422      	add	r2, r4
 8015a7e:	3002      	adds	r0, #2
 8015a80:	e7ee      	b.n	8015a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015a82:	d019      	beq.n	8015ab8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015a84:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015a86:	1e5c      	subs	r4, r3, #1
 8015a88:	fb05 1504 	mla	r5, r5, r4, r1
 8015a8c:	142d      	asrs	r5, r5, #16
 8015a8e:	d409      	bmi.n	8015aa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015a90:	42bd      	cmp	r5, r7
 8015a92:	da07      	bge.n	8015aa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015a94:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015a96:	fb05 2404 	mla	r4, r5, r4, r2
 8015a9a:	1424      	asrs	r4, r4, #16
 8015a9c:	d402      	bmi.n	8015aa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015a9e:	42b4      	cmp	r4, r6
 8015aa0:	f2c0 80b1 	blt.w	8015c06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015aa4:	f04f 0800 	mov.w	r8, #0
 8015aa8:	eb03 0408 	add.w	r4, r3, r8
 8015aac:	2c00      	cmp	r4, #0
 8015aae:	dc3e      	bgt.n	8015b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015ab0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ab4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015ab8:	f1bb 0f00 	cmp.w	fp, #0
 8015abc:	f340 8108 	ble.w	8015cd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015ac0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ac4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ac8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015acc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ace:	f1bb 0b01 	subs.w	fp, fp, #1
 8015ad2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015ad6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ada:	eeb0 6a62 	vmov.f32	s12, s5
 8015ade:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ae2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ae6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015aea:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015aee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015af2:	eeb0 6a43 	vmov.f32	s12, s6
 8015af6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015afa:	ee12 2a90 	vmov	r2, s5
 8015afe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015b02:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b06:	ee13 2a10 	vmov	r2, s6
 8015b0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b0e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015b10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b12:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b16:	9a04      	ldr	r2, [sp, #16]
 8015b18:	9314      	str	r3, [sp, #80]	; 0x50
 8015b1a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015b1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b20:	eeb0 3a67 	vmov.f32	s6, s15
 8015b24:	bf08      	it	eq
 8015b26:	4613      	moveq	r3, r2
 8015b28:	eef0 2a47 	vmov.f32	s5, s14
 8015b2c:	e787      	b.n	8015a3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015b2e:	140e      	asrs	r6, r1, #16
 8015b30:	d462      	bmi.n	8015bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015b32:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015b36:	42b5      	cmp	r5, r6
 8015b38:	dd5e      	ble.n	8015bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015b3a:	1417      	asrs	r7, r2, #16
 8015b3c:	d45c      	bmi.n	8015bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015b3e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015b42:	42bc      	cmp	r4, r7
 8015b44:	dd58      	ble.n	8015bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015b46:	b22d      	sxth	r5, r5
 8015b48:	fb07 6505 	mla	r5, r7, r5, r6
 8015b4c:	9c02      	ldr	r4, [sp, #8]
 8015b4e:	5d66      	ldrb	r6, [r4, r5]
 8015b50:	2e00      	cmp	r6, #0
 8015b52:	d051      	beq.n	8015bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015b54:	9c01      	ldr	r4, [sp, #4]
 8015b56:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015b5a:	f06f 0401 	mvn.w	r4, #1
 8015b5e:	fb04 f408 	mul.w	r4, r4, r8
 8015b62:	9403      	str	r4, [sp, #12]
 8015b64:	5b05      	ldrh	r5, [r0, r4]
 8015b66:	9c05      	ldr	r4, [sp, #20]
 8015b68:	4366      	muls	r6, r4
 8015b6a:	1c74      	adds	r4, r6, #1
 8015b6c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015b70:	1224      	asrs	r4, r4, #8
 8015b72:	b2a7      	uxth	r7, r4
 8015b74:	122e      	asrs	r6, r5, #8
 8015b76:	43e4      	mvns	r4, r4
 8015b78:	b2e4      	uxtb	r4, r4
 8015b7a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015b7e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015b82:	fb16 f604 	smulbb	r6, r6, r4
 8015b86:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015b8a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015b8e:	00ed      	lsls	r5, r5, #3
 8015b90:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015b94:	b2ed      	uxtb	r5, r5
 8015b96:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015b9a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015b9e:	fb15 f504 	smulbb	r5, r5, r4
 8015ba2:	fa5f f989 	uxtb.w	r9, r9
 8015ba6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015baa:	fb09 5507 	mla	r5, r9, r7, r5
 8015bae:	fb1a fa04 	smulbb	sl, sl, r4
 8015bb2:	fa1f fc8c 	uxth.w	ip, ip
 8015bb6:	b2ad      	uxth	r5, r5
 8015bb8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015bbc:	fb06 a607 	mla	r6, r6, r7, sl
 8015bc0:	f10c 0401 	add.w	r4, ip, #1
 8015bc4:	f105 0a01 	add.w	sl, r5, #1
 8015bc8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015bcc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015bd0:	b2b6      	uxth	r6, r6
 8015bd2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015bd6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015bda:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015bde:	f106 0a01 	add.w	sl, r6, #1
 8015be2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015be6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015bea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015bee:	9c03      	ldr	r4, [sp, #12]
 8015bf0:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015bf4:	f820 c004 	strh.w	ip, [r0, r4]
 8015bf8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015bfa:	4421      	add	r1, r4
 8015bfc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015bfe:	f108 38ff 	add.w	r8, r8, #4294967295
 8015c02:	4422      	add	r2, r4
 8015c04:	e750      	b.n	8015aa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015c06:	f04f 0900 	mov.w	r9, #0
 8015c0a:	eba3 0409 	sub.w	r4, r3, r9
 8015c0e:	2c00      	cmp	r4, #0
 8015c10:	f77f af4e 	ble.w	8015ab0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015c14:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015c18:	140d      	asrs	r5, r1, #16
 8015c1a:	1414      	asrs	r4, r2, #16
 8015c1c:	fb06 5404 	mla	r4, r6, r4, r5
 8015c20:	9d02      	ldr	r5, [sp, #8]
 8015c22:	5d2e      	ldrb	r6, [r5, r4]
 8015c24:	2e00      	cmp	r6, #0
 8015c26:	d04c      	beq.n	8015cc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015c28:	9d01      	ldr	r5, [sp, #4]
 8015c2a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015c2e:	9c05      	ldr	r4, [sp, #20]
 8015c30:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015c34:	4366      	muls	r6, r4
 8015c36:	1c74      	adds	r4, r6, #1
 8015c38:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015c3c:	1224      	asrs	r4, r4, #8
 8015c3e:	b2a7      	uxth	r7, r4
 8015c40:	122e      	asrs	r6, r5, #8
 8015c42:	43e4      	mvns	r4, r4
 8015c44:	b2e4      	uxtb	r4, r4
 8015c46:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015c4a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015c4e:	fb16 f604 	smulbb	r6, r6, r4
 8015c52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015c56:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015c5a:	00ed      	lsls	r5, r5, #3
 8015c5c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015c60:	b2ed      	uxtb	r5, r5
 8015c62:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015c66:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015c6a:	fb15 f504 	smulbb	r5, r5, r4
 8015c6e:	fa5f f888 	uxtb.w	r8, r8
 8015c72:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015c76:	fb08 5507 	mla	r5, r8, r7, r5
 8015c7a:	fb1a fa04 	smulbb	sl, sl, r4
 8015c7e:	fa1f fc8c 	uxth.w	ip, ip
 8015c82:	b2ad      	uxth	r5, r5
 8015c84:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015c88:	fb06 a607 	mla	r6, r6, r7, sl
 8015c8c:	f10c 0401 	add.w	r4, ip, #1
 8015c90:	f105 0a01 	add.w	sl, r5, #1
 8015c94:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015c98:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015c9c:	b2b6      	uxth	r6, r6
 8015c9e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015ca2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015ca6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015caa:	f106 0a01 	add.w	sl, r6, #1
 8015cae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015cb2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015cb6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015cba:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015cbe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015cc2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015cc4:	4421      	add	r1, r4
 8015cc6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015cc8:	f109 0901 	add.w	r9, r9, #1
 8015ccc:	4422      	add	r2, r4
 8015cce:	e79c      	b.n	8015c0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015cd0:	b007      	add	sp, #28
 8015cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015cd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015cd6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cda:	b085      	sub	sp, #20
 8015cdc:	468b      	mov	fp, r1
 8015cde:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015ce0:	9203      	str	r2, [sp, #12]
 8015ce2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015ce6:	6861      	ldr	r1, [r4, #4]
 8015ce8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015cec:	fb01 2000 	mla	r0, r1, r0, r2
 8015cf0:	6822      	ldr	r2, [r4, #0]
 8015cf2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015cf6:	f8d8 2000 	ldr.w	r2, [r8]
 8015cfa:	9200      	str	r2, [sp, #0]
 8015cfc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015d00:	9201      	str	r2, [sp, #4]
 8015d02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015d06:	f1bb 0f00 	cmp.w	fp, #0
 8015d0a:	dc03      	bgt.n	8015d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015d0c:	9a03      	ldr	r2, [sp, #12]
 8015d0e:	2a00      	cmp	r2, #0
 8015d10:	f340 8146 	ble.w	8015fa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015d14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015d16:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015d1a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015d1e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015d22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015d24:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015d28:	2b00      	cmp	r3, #0
 8015d2a:	dd0e      	ble.n	8015d4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015d2c:	140c      	asrs	r4, r1, #16
 8015d2e:	d405      	bmi.n	8015d3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015d30:	42bc      	cmp	r4, r7
 8015d32:	da03      	bge.n	8015d3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015d34:	1414      	asrs	r4, r2, #16
 8015d36:	d401      	bmi.n	8015d3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015d38:	42b4      	cmp	r4, r6
 8015d3a:	db07      	blt.n	8015d4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015d3c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015d3e:	4421      	add	r1, r4
 8015d40:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015d42:	3b01      	subs	r3, #1
 8015d44:	4422      	add	r2, r4
 8015d46:	3002      	adds	r0, #2
 8015d48:	e7ee      	b.n	8015d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015d4a:	d017      	beq.n	8015d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015d4c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015d4e:	1e5c      	subs	r4, r3, #1
 8015d50:	fb05 1504 	mla	r5, r5, r4, r1
 8015d54:	142d      	asrs	r5, r5, #16
 8015d56:	d409      	bmi.n	8015d6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015d58:	42bd      	cmp	r5, r7
 8015d5a:	da07      	bge.n	8015d6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015d5c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015d5e:	fb05 2404 	mla	r4, r5, r4, r2
 8015d62:	1424      	asrs	r4, r4, #16
 8015d64:	d402      	bmi.n	8015d6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015d66:	42b4      	cmp	r4, r6
 8015d68:	f2c0 80b3 	blt.w	8015ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015d6c:	2600      	movs	r6, #0
 8015d6e:	199c      	adds	r4, r3, r6
 8015d70:	2c00      	cmp	r4, #0
 8015d72:	dc3e      	bgt.n	8015df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015d74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d78:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015d7c:	f1bb 0f00 	cmp.w	fp, #0
 8015d80:	f340 810e 	ble.w	8015fa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015d84:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015d88:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015d8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015d90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015d92:	f1bb 0b01 	subs.w	fp, fp, #1
 8015d96:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015d9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015d9e:	eeb0 6a62 	vmov.f32	s12, s5
 8015da2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015da6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015daa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015dae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015db2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015db6:	eeb0 6a43 	vmov.f32	s12, s6
 8015dba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015dbe:	ee12 2a90 	vmov	r2, s5
 8015dc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015dc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015dca:	ee13 2a10 	vmov	r2, s6
 8015dce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015dd2:	9311      	str	r3, [sp, #68]	; 0x44
 8015dd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015dd6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015dda:	9a03      	ldr	r2, [sp, #12]
 8015ddc:	9312      	str	r3, [sp, #72]	; 0x48
 8015dde:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015de2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015de4:	eeb0 3a67 	vmov.f32	s6, s15
 8015de8:	bf08      	it	eq
 8015dea:	4613      	moveq	r3, r2
 8015dec:	eef0 2a47 	vmov.f32	s5, s14
 8015df0:	e789      	b.n	8015d06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015df2:	140f      	asrs	r7, r1, #16
 8015df4:	d418      	bmi.n	8015e28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015df6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015dfa:	42bd      	cmp	r5, r7
 8015dfc:	dd14      	ble.n	8015e28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015dfe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015e02:	d411      	bmi.n	8015e28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015e04:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015e08:	4564      	cmp	r4, ip
 8015e0a:	dd0d      	ble.n	8015e28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015e0c:	b22d      	sxth	r5, r5
 8015e0e:	fb0c 7505 	mla	r5, ip, r5, r7
 8015e12:	9c01      	ldr	r4, [sp, #4]
 8015e14:	5d64      	ldrb	r4, [r4, r5]
 8015e16:	2cff      	cmp	r4, #255	; 0xff
 8015e18:	d10c      	bne.n	8015e34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015e1a:	9c00      	ldr	r4, [sp, #0]
 8015e1c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015e20:	f06f 0401 	mvn.w	r4, #1
 8015e24:	4374      	muls	r4, r6
 8015e26:	5305      	strh	r5, [r0, r4]
 8015e28:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015e2a:	4421      	add	r1, r4
 8015e2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015e2e:	3e01      	subs	r6, #1
 8015e30:	4422      	add	r2, r4
 8015e32:	e79c      	b.n	8015d6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015e34:	2c00      	cmp	r4, #0
 8015e36:	d0f7      	beq.n	8015e28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015e38:	9f00      	ldr	r7, [sp, #0]
 8015e3a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015e3e:	f06f 0501 	mvn.w	r5, #1
 8015e42:	4375      	muls	r5, r6
 8015e44:	9502      	str	r5, [sp, #8]
 8015e46:	5b45      	ldrh	r5, [r0, r5]
 8015e48:	fa1f fc84 	uxth.w	ip, r4
 8015e4c:	122f      	asrs	r7, r5, #8
 8015e4e:	43e4      	mvns	r4, r4
 8015e50:	b2e4      	uxtb	r4, r4
 8015e52:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015e56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015e5a:	fb17 f704 	smulbb	r7, r7, r4
 8015e5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015e62:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015e66:	00ed      	lsls	r5, r5, #3
 8015e68:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015e6c:	b2ed      	uxtb	r5, r5
 8015e6e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015e72:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015e76:	fb15 f504 	smulbb	r5, r5, r4
 8015e7a:	fa5f f989 	uxtb.w	r9, r9
 8015e7e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015e82:	fb09 550c 	mla	r5, r9, ip, r5
 8015e86:	fb1a fa04 	smulbb	sl, sl, r4
 8015e8a:	fa1f fe8e 	uxth.w	lr, lr
 8015e8e:	b2ad      	uxth	r5, r5
 8015e90:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015e94:	fb07 a70c 	mla	r7, r7, ip, sl
 8015e98:	f10e 0401 	add.w	r4, lr, #1
 8015e9c:	f105 0a01 	add.w	sl, r5, #1
 8015ea0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015ea4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015ea8:	b2bf      	uxth	r7, r7
 8015eaa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015eae:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015eb2:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015eb6:	f107 0a01 	add.w	sl, r7, #1
 8015eba:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015ebe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ec2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015ec6:	9c02      	ldr	r4, [sp, #8]
 8015ec8:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015ecc:	f820 e004 	strh.w	lr, [r0, r4]
 8015ed0:	e7aa      	b.n	8015e28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015ed2:	f04f 0900 	mov.w	r9, #0
 8015ed6:	eba3 0409 	sub.w	r4, r3, r9
 8015eda:	2c00      	cmp	r4, #0
 8015edc:	f77f af4a 	ble.w	8015d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ee0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015ee4:	1414      	asrs	r4, r2, #16
 8015ee6:	140d      	asrs	r5, r1, #16
 8015ee8:	fb06 5504 	mla	r5, r6, r4, r5
 8015eec:	9c01      	ldr	r4, [sp, #4]
 8015eee:	5d64      	ldrb	r4, [r4, r5]
 8015ef0:	2cff      	cmp	r4, #255	; 0xff
 8015ef2:	d10b      	bne.n	8015f0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015ef4:	9c00      	ldr	r4, [sp, #0]
 8015ef6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015efa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015efe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015f00:	4421      	add	r1, r4
 8015f02:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015f04:	f109 0901 	add.w	r9, r9, #1
 8015f08:	4422      	add	r2, r4
 8015f0a:	e7e4      	b.n	8015ed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015f0c:	2c00      	cmp	r4, #0
 8015f0e:	d0f6      	beq.n	8015efe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015f10:	9e00      	ldr	r6, [sp, #0]
 8015f12:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015f16:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015f1a:	b2a7      	uxth	r7, r4
 8015f1c:	122e      	asrs	r6, r5, #8
 8015f1e:	43e4      	mvns	r4, r4
 8015f20:	b2e4      	uxtb	r4, r4
 8015f22:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015f26:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015f2a:	fb16 f604 	smulbb	r6, r6, r4
 8015f2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015f32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015f36:	00ed      	lsls	r5, r5, #3
 8015f38:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015f3c:	b2ed      	uxtb	r5, r5
 8015f3e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015f42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015f46:	fb15 f504 	smulbb	r5, r5, r4
 8015f4a:	fa5f fe8e 	uxtb.w	lr, lr
 8015f4e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015f52:	fb0e 5507 	mla	r5, lr, r7, r5
 8015f56:	fb1a fa04 	smulbb	sl, sl, r4
 8015f5a:	fa1f fc8c 	uxth.w	ip, ip
 8015f5e:	b2ad      	uxth	r5, r5
 8015f60:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015f64:	fb06 a607 	mla	r6, r6, r7, sl
 8015f68:	f10c 0401 	add.w	r4, ip, #1
 8015f6c:	f105 0a01 	add.w	sl, r5, #1
 8015f70:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015f74:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015f78:	b2b6      	uxth	r6, r6
 8015f7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015f7e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015f82:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015f86:	f106 0a01 	add.w	sl, r6, #1
 8015f8a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015f8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f96:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015f9a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015f9e:	e7ae      	b.n	8015efe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015fa0:	b005      	add	sp, #20
 8015fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015fa6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015fa6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015faa:	b085      	sub	sp, #20
 8015fac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015fae:	9203      	str	r2, [sp, #12]
 8015fb0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015fb4:	9201      	str	r2, [sp, #4]
 8015fb6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015fba:	9100      	str	r1, [sp, #0]
 8015fbc:	6841      	ldr	r1, [r0, #4]
 8015fbe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015fc2:	fb01 2404 	mla	r4, r1, r4, r2
 8015fc6:	6802      	ldr	r2, [r0, #0]
 8015fc8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015fcc:	f8de 2000 	ldr.w	r2, [lr]
 8015fd0:	9202      	str	r2, [sp, #8]
 8015fd2:	9a01      	ldr	r2, [sp, #4]
 8015fd4:	43d6      	mvns	r6, r2
 8015fd6:	b2f6      	uxtb	r6, r6
 8015fd8:	9a00      	ldr	r2, [sp, #0]
 8015fda:	2a00      	cmp	r2, #0
 8015fdc:	dc03      	bgt.n	8015fe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015fde:	9a03      	ldr	r2, [sp, #12]
 8015fe0:	2a00      	cmp	r2, #0
 8015fe2:	f340 8124 	ble.w	801622e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015fe6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015fe8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015fec:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015ff0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015ff4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ff6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015ffa:	2b00      	cmp	r3, #0
 8015ffc:	dd0e      	ble.n	801601c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015ffe:	1408      	asrs	r0, r1, #16
 8016000:	d405      	bmi.n	801600e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016002:	4560      	cmp	r0, ip
 8016004:	da03      	bge.n	801600e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016006:	1410      	asrs	r0, r2, #16
 8016008:	d401      	bmi.n	801600e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801600a:	42b8      	cmp	r0, r7
 801600c:	db07      	blt.n	801601e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801600e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016010:	4401      	add	r1, r0
 8016012:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016014:	3b01      	subs	r3, #1
 8016016:	4402      	add	r2, r0
 8016018:	3402      	adds	r4, #2
 801601a:	e7ee      	b.n	8015ffa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801601c:	d06e      	beq.n	80160fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801601e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016020:	1e58      	subs	r0, r3, #1
 8016022:	fb05 1500 	mla	r5, r5, r0, r1
 8016026:	142d      	asrs	r5, r5, #16
 8016028:	d45c      	bmi.n	80160e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801602a:	4565      	cmp	r5, ip
 801602c:	da5a      	bge.n	80160e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801602e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016030:	fb05 2000 	mla	r0, r5, r0, r2
 8016034:	1400      	asrs	r0, r0, #16
 8016036:	d455      	bmi.n	80160e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016038:	42b8      	cmp	r0, r7
 801603a:	da53      	bge.n	80160e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801603c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8016040:	4699      	mov	r9, r3
 8016042:	46a2      	mov	sl, r4
 8016044:	f1b9 0f00 	cmp.w	r9, #0
 8016048:	dd54      	ble.n	80160f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801604a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801604e:	140d      	asrs	r5, r1, #16
 8016050:	1410      	asrs	r0, r2, #16
 8016052:	fb07 5000 	mla	r0, r7, r0, r5
 8016056:	9d02      	ldr	r5, [sp, #8]
 8016058:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801605c:	f8ba 5000 	ldrh.w	r5, [sl]
 8016060:	122f      	asrs	r7, r5, #8
 8016062:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016066:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801606a:	fb17 f706 	smulbb	r7, r7, r6
 801606e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016072:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016076:	00ed      	lsls	r5, r5, #3
 8016078:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801607c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8016080:	10c7      	asrs	r7, r0, #3
 8016082:	b2ed      	uxtb	r5, r5
 8016084:	00c0      	lsls	r0, r0, #3
 8016086:	fb18 f806 	smulbb	r8, r8, r6
 801608a:	fb15 f506 	smulbb	r5, r5, r6
 801608e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016092:	b2c0      	uxtb	r0, r0
 8016094:	fa1f fc8c 	uxth.w	ip, ip
 8016098:	fb07 870b 	mla	r7, r7, fp, r8
 801609c:	fb00 500b 	mla	r0, r0, fp, r5
 80160a0:	b280      	uxth	r0, r0
 80160a2:	b2bf      	uxth	r7, r7
 80160a4:	f10c 0501 	add.w	r5, ip, #1
 80160a8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80160ac:	f107 0801 	add.w	r8, r7, #1
 80160b0:	1c45      	adds	r5, r0, #1
 80160b2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80160b6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80160ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 80160bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80160c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80160c4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80160c8:	ea45 0c0c 	orr.w	ip, r5, ip
 80160cc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80160d0:	4401      	add	r1, r0
 80160d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80160d4:	ea4c 0c08 	orr.w	ip, ip, r8
 80160d8:	f82a cb02 	strh.w	ip, [sl], #2
 80160dc:	4402      	add	r2, r0
 80160de:	f109 39ff 	add.w	r9, r9, #4294967295
 80160e2:	e7af      	b.n	8016044 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80160e4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80160e8:	f04f 0800 	mov.w	r8, #0
 80160ec:	eb03 0008 	add.w	r0, r3, r8
 80160f0:	2800      	cmp	r0, #0
 80160f2:	dc41      	bgt.n	8016178 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80160f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80160f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80160fc:	9b00      	ldr	r3, [sp, #0]
 80160fe:	2b00      	cmp	r3, #0
 8016100:	f340 8095 	ble.w	801622e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016104:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016108:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801610c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016110:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016112:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016116:	ee31 1a05 	vadd.f32	s2, s2, s10
 801611a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801611e:	eef0 6a62 	vmov.f32	s13, s5
 8016122:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016126:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801612a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801612e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8016132:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016136:	eef0 6a43 	vmov.f32	s13, s6
 801613a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801613e:	ee12 2a90 	vmov	r2, s5
 8016142:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016146:	fb92 f3f3 	sdiv	r3, r2, r3
 801614a:	ee13 2a10 	vmov	r2, s6
 801614e:	9311      	str	r3, [sp, #68]	; 0x44
 8016150:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016152:	fb92 f3f3 	sdiv	r3, r2, r3
 8016156:	9312      	str	r3, [sp, #72]	; 0x48
 8016158:	9b00      	ldr	r3, [sp, #0]
 801615a:	9a03      	ldr	r2, [sp, #12]
 801615c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016160:	3b01      	subs	r3, #1
 8016162:	9300      	str	r3, [sp, #0]
 8016164:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8016168:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801616a:	eeb0 3a67 	vmov.f32	s6, s15
 801616e:	bf08      	it	eq
 8016170:	4613      	moveq	r3, r2
 8016172:	eef0 2a47 	vmov.f32	s5, s14
 8016176:	e72f      	b.n	8015fd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016178:	140f      	asrs	r7, r1, #16
 801617a:	d451      	bmi.n	8016220 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801617c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016180:	42bd      	cmp	r5, r7
 8016182:	dd4d      	ble.n	8016220 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016184:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016188:	d44a      	bmi.n	8016220 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801618a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801618e:	4560      	cmp	r0, ip
 8016190:	dd46      	ble.n	8016220 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016192:	b22d      	sxth	r5, r5
 8016194:	fb0c 7505 	mla	r5, ip, r5, r7
 8016198:	9802      	ldr	r0, [sp, #8]
 801619a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801619e:	f06f 0501 	mvn.w	r5, #1
 80161a2:	fb05 fb08 	mul.w	fp, r5, r8
 80161a6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80161aa:	f834 500b 	ldrh.w	r5, [r4, fp]
 80161ae:	122f      	asrs	r7, r5, #8
 80161b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80161b4:	fb17 f706 	smulbb	r7, r7, r6
 80161b8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80161bc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80161c0:	00ed      	lsls	r5, r5, #3
 80161c2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80161c6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80161ca:	10c7      	asrs	r7, r0, #3
 80161cc:	b2ed      	uxtb	r5, r5
 80161ce:	00c0      	lsls	r0, r0, #3
 80161d0:	fb19 f906 	smulbb	r9, r9, r6
 80161d4:	fb15 f506 	smulbb	r5, r5, r6
 80161d8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80161dc:	b2c0      	uxtb	r0, r0
 80161de:	fa1f fc8c 	uxth.w	ip, ip
 80161e2:	fb07 970a 	mla	r7, r7, sl, r9
 80161e6:	fb00 500a 	mla	r0, r0, sl, r5
 80161ea:	b2bf      	uxth	r7, r7
 80161ec:	b280      	uxth	r0, r0
 80161ee:	f10c 0501 	add.w	r5, ip, #1
 80161f2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80161f6:	f107 0901 	add.w	r9, r7, #1
 80161fa:	1c45      	adds	r5, r0, #1
 80161fc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016200:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8016204:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016208:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801620c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016210:	ea45 0c0c 	orr.w	ip, r5, ip
 8016214:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016218:	ea4c 0c09 	orr.w	ip, ip, r9
 801621c:	f824 c00b 	strh.w	ip, [r4, fp]
 8016220:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016222:	4401      	add	r1, r0
 8016224:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016226:	f108 38ff 	add.w	r8, r8, #4294967295
 801622a:	4402      	add	r2, r0
 801622c:	e75e      	b.n	80160ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801622e:	b005      	add	sp, #20
 8016230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016234 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016238:	b085      	sub	sp, #20
 801623a:	4693      	mov	fp, r2
 801623c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801623e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016240:	6870      	ldr	r0, [r6, #4]
 8016242:	9101      	str	r1, [sp, #4]
 8016244:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016248:	fb00 2404 	mla	r4, r0, r4, r2
 801624c:	6832      	ldr	r2, [r6, #0]
 801624e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016252:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016256:	682a      	ldr	r2, [r5, #0]
 8016258:	9202      	str	r2, [sp, #8]
 801625a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801625e:	9a01      	ldr	r2, [sp, #4]
 8016260:	2a00      	cmp	r2, #0
 8016262:	dc03      	bgt.n	801626c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016264:	f1bb 0f00 	cmp.w	fp, #0
 8016268:	f340 809a 	ble.w	80163a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801626c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801626e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016272:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016276:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801627a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801627c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016280:	2b00      	cmp	r3, #0
 8016282:	dd0c      	ble.n	801629e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016284:	1406      	asrs	r6, r0, #16
 8016286:	d405      	bmi.n	8016294 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016288:	454e      	cmp	r6, r9
 801628a:	da03      	bge.n	8016294 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801628c:	1416      	asrs	r6, r2, #16
 801628e:	d401      	bmi.n	8016294 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016290:	4546      	cmp	r6, r8
 8016292:	db05      	blt.n	80162a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016294:	4470      	add	r0, lr
 8016296:	4462      	add	r2, ip
 8016298:	3b01      	subs	r3, #1
 801629a:	3402      	adds	r4, #2
 801629c:	e7f0      	b.n	8016280 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801629e:	d00f      	beq.n	80162c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80162a0:	1e5e      	subs	r6, r3, #1
 80162a2:	fb0e 0706 	mla	r7, lr, r6, r0
 80162a6:	143f      	asrs	r7, r7, #16
 80162a8:	d541      	bpl.n	801632e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80162aa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80162ae:	4698      	mov	r8, r3
 80162b0:	9603      	str	r6, [sp, #12]
 80162b2:	f1b8 0f00 	cmp.w	r8, #0
 80162b6:	dc56      	bgt.n	8016366 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80162b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80162bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80162c0:	9b01      	ldr	r3, [sp, #4]
 80162c2:	2b00      	cmp	r3, #0
 80162c4:	dd6c      	ble.n	80163a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80162c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80162ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80162ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80162d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80162d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80162d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80162dc:	eeb0 6a62 	vmov.f32	s12, s5
 80162e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80162e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80162ec:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80162f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80162f4:	eeb0 6a43 	vmov.f32	s12, s6
 80162f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80162fc:	ee12 2a90 	vmov	r2, s5
 8016300:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016304:	fb92 fef3 	sdiv	lr, r2, r3
 8016308:	ee13 2a10 	vmov	r2, s6
 801630c:	fb92 fcf3 	sdiv	ip, r2, r3
 8016310:	9b01      	ldr	r3, [sp, #4]
 8016312:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016316:	3b01      	subs	r3, #1
 8016318:	9301      	str	r3, [sp, #4]
 801631a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801631e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016320:	eeb0 3a67 	vmov.f32	s6, s15
 8016324:	bf08      	it	eq
 8016326:	465b      	moveq	r3, fp
 8016328:	eef0 2a47 	vmov.f32	s5, s14
 801632c:	e797      	b.n	801625e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801632e:	454f      	cmp	r7, r9
 8016330:	dabb      	bge.n	80162aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016332:	fb0c 2606 	mla	r6, ip, r6, r2
 8016336:	1436      	asrs	r6, r6, #16
 8016338:	d4b7      	bmi.n	80162aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801633a:	4546      	cmp	r6, r8
 801633c:	dab5      	bge.n	80162aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801633e:	461e      	mov	r6, r3
 8016340:	46a0      	mov	r8, r4
 8016342:	2e00      	cmp	r6, #0
 8016344:	ddb8      	ble.n	80162b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016346:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801634a:	9902      	ldr	r1, [sp, #8]
 801634c:	1417      	asrs	r7, r2, #16
 801634e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016352:	fb0a 9707 	mla	r7, sl, r7, r9
 8016356:	4470      	add	r0, lr
 8016358:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801635c:	f828 7b02 	strh.w	r7, [r8], #2
 8016360:	4462      	add	r2, ip
 8016362:	3e01      	subs	r6, #1
 8016364:	e7ed      	b.n	8016342 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016366:	ea5f 4920 	movs.w	r9, r0, asr #16
 801636a:	d414      	bmi.n	8016396 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801636c:	68ae      	ldr	r6, [r5, #8]
 801636e:	454e      	cmp	r6, r9
 8016370:	dd11      	ble.n	8016396 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016372:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016376:	d40e      	bmi.n	8016396 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016378:	68ef      	ldr	r7, [r5, #12]
 801637a:	4557      	cmp	r7, sl
 801637c:	dd0b      	ble.n	8016396 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801637e:	b236      	sxth	r6, r6
 8016380:	fb0a 9606 	mla	r6, sl, r6, r9
 8016384:	9f02      	ldr	r7, [sp, #8]
 8016386:	f06f 0101 	mvn.w	r1, #1
 801638a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801638e:	fb01 f608 	mul.w	r6, r1, r8
 8016392:	9903      	ldr	r1, [sp, #12]
 8016394:	538f      	strh	r7, [r1, r6]
 8016396:	4470      	add	r0, lr
 8016398:	4462      	add	r2, ip
 801639a:	f108 38ff 	add.w	r8, r8, #4294967295
 801639e:	e788      	b.n	80162b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80163a0:	b005      	add	sp, #20
 80163a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080163a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80163a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163aa:	b087      	sub	sp, #28
 80163ac:	468b      	mov	fp, r1
 80163ae:	9815      	ldr	r0, [sp, #84]	; 0x54
 80163b0:	9203      	str	r2, [sp, #12]
 80163b2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80163b6:	9204      	str	r2, [sp, #16]
 80163b8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80163bc:	6841      	ldr	r1, [r0, #4]
 80163be:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80163c2:	fb01 2505 	mla	r5, r1, r5, r2
 80163c6:	6802      	ldr	r2, [r0, #0]
 80163c8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80163cc:	f8d9 2000 	ldr.w	r2, [r9]
 80163d0:	9201      	str	r2, [sp, #4]
 80163d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80163d6:	f1bb 0f00 	cmp.w	fp, #0
 80163da:	dc03      	bgt.n	80163e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80163dc:	9a03      	ldr	r2, [sp, #12]
 80163de:	2a00      	cmp	r2, #0
 80163e0:	f340 8159 	ble.w	8016696 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80163e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80163e6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80163ea:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80163ee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80163f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80163f4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80163f8:	2b00      	cmp	r3, #0
 80163fa:	dd0e      	ble.n	801641a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80163fc:	1402      	asrs	r2, r0, #16
 80163fe:	d405      	bmi.n	801640c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016400:	42ba      	cmp	r2, r7
 8016402:	da03      	bge.n	801640c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016404:	140a      	asrs	r2, r1, #16
 8016406:	d401      	bmi.n	801640c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016408:	42b2      	cmp	r2, r6
 801640a:	db07      	blt.n	801641c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801640c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801640e:	4410      	add	r0, r2
 8016410:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016412:	3b01      	subs	r3, #1
 8016414:	4411      	add	r1, r2
 8016416:	3502      	adds	r5, #2
 8016418:	e7ee      	b.n	80163f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801641a:	d017      	beq.n	801644c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801641c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801641e:	1e5a      	subs	r2, r3, #1
 8016420:	fb04 0402 	mla	r4, r4, r2, r0
 8016424:	1424      	asrs	r4, r4, #16
 8016426:	d409      	bmi.n	801643c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016428:	42bc      	cmp	r4, r7
 801642a:	da07      	bge.n	801643c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801642c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801642e:	fb04 1202 	mla	r2, r4, r2, r1
 8016432:	1412      	asrs	r2, r2, #16
 8016434:	d402      	bmi.n	801643c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016436:	42b2      	cmp	r2, r6
 8016438:	f2c0 80bf 	blt.w	80165ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801643c:	2700      	movs	r7, #0
 801643e:	19da      	adds	r2, r3, r7
 8016440:	2a00      	cmp	r2, #0
 8016442:	dc3e      	bgt.n	80164c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016444:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016448:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801644c:	f1bb 0f00 	cmp.w	fp, #0
 8016450:	f340 8121 	ble.w	8016696 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016454:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016458:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801645c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016460:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016462:	f1bb 0b01 	subs.w	fp, fp, #1
 8016466:	ee31 1a05 	vadd.f32	s2, s2, s10
 801646a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801646e:	eeb0 6a62 	vmov.f32	s12, s5
 8016472:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016476:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801647a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801647e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016482:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016486:	eeb0 6a43 	vmov.f32	s12, s6
 801648a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801648e:	ee12 2a90 	vmov	r2, s5
 8016492:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016496:	fb92 f3f3 	sdiv	r3, r2, r3
 801649a:	ee13 2a10 	vmov	r2, s6
 801649e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80164a2:	9313      	str	r3, [sp, #76]	; 0x4c
 80164a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80164a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80164aa:	9a03      	ldr	r2, [sp, #12]
 80164ac:	9314      	str	r3, [sp, #80]	; 0x50
 80164ae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80164b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80164b4:	eeb0 3a67 	vmov.f32	s6, s15
 80164b8:	bf08      	it	eq
 80164ba:	4613      	moveq	r3, r2
 80164bc:	eef0 2a47 	vmov.f32	s5, s14
 80164c0:	e789      	b.n	80163d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80164c2:	1406      	asrs	r6, r0, #16
 80164c4:	d42d      	bmi.n	8016522 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80164c6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80164ca:	42b4      	cmp	r4, r6
 80164cc:	dd29      	ble.n	8016522 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80164ce:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80164d2:	d426      	bmi.n	8016522 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80164d4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80164d8:	4562      	cmp	r2, ip
 80164da:	dd22      	ble.n	8016522 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80164dc:	b224      	sxth	r4, r4
 80164de:	9a01      	ldr	r2, [sp, #4]
 80164e0:	fb0c 6404 	mla	r4, ip, r4, r6
 80164e4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80164e8:	0e22      	lsrs	r2, r4, #24
 80164ea:	d01a      	beq.n	8016522 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80164ec:	9e04      	ldr	r6, [sp, #16]
 80164ee:	4372      	muls	r2, r6
 80164f0:	1c56      	adds	r6, r2, #1
 80164f2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80164f6:	1212      	asrs	r2, r2, #8
 80164f8:	0a26      	lsrs	r6, r4, #8
 80164fa:	2aff      	cmp	r2, #255	; 0xff
 80164fc:	9605      	str	r6, [sp, #20]
 80164fe:	d116      	bne.n	801652e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016500:	f06f 0201 	mvn.w	r2, #1
 8016504:	fb02 fc07 	mul.w	ip, r2, r7
 8016508:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801650c:	0962      	lsrs	r2, r4, #5
 801650e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016512:	f026 0607 	bic.w	r6, r6, #7
 8016516:	4316      	orrs	r6, r2
 8016518:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801651c:	4326      	orrs	r6, r4
 801651e:	f825 600c 	strh.w	r6, [r5, ip]
 8016522:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016524:	4410      	add	r0, r2
 8016526:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016528:	3f01      	subs	r7, #1
 801652a:	4411      	add	r1, r2
 801652c:	e787      	b.n	801643e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801652e:	f06f 0601 	mvn.w	r6, #1
 8016532:	437e      	muls	r6, r7
 8016534:	fa1f fa82 	uxth.w	sl, r2
 8016538:	f835 8006 	ldrh.w	r8, [r5, r6]
 801653c:	9602      	str	r6, [sp, #8]
 801653e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016542:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016546:	43d2      	mvns	r2, r2
 8016548:	b2d2      	uxtb	r2, r2
 801654a:	fb1c fc0a 	smulbb	ip, ip, sl
 801654e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016552:	fb0e ce02 	mla	lr, lr, r2, ip
 8016556:	b2e4      	uxtb	r4, r4
 8016558:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801655c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016560:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016564:	fa5f f888 	uxtb.w	r8, r8
 8016568:	fb14 f40a 	smulbb	r4, r4, sl
 801656c:	fb08 4402 	mla	r4, r8, r2, r4
 8016570:	fa1f fe8e 	uxth.w	lr, lr
 8016574:	fb16 f60a 	smulbb	r6, r6, sl
 8016578:	b2a4      	uxth	r4, r4
 801657a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801657e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016582:	f10e 0201 	add.w	r2, lr, #1
 8016586:	1c66      	adds	r6, r4, #1
 8016588:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801658c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016590:	fa1f fc8c 	uxth.w	ip, ip
 8016594:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016598:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801659c:	ea46 0e0e 	orr.w	lr, r6, lr
 80165a0:	f10c 0601 	add.w	r6, ip, #1
 80165a4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80165a8:	0976      	lsrs	r6, r6, #5
 80165aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80165ae:	9a02      	ldr	r2, [sp, #8]
 80165b0:	ea4e 0e06 	orr.w	lr, lr, r6
 80165b4:	f825 e002 	strh.w	lr, [r5, r2]
 80165b8:	e7b3      	b.n	8016522 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80165ba:	f04f 0800 	mov.w	r8, #0
 80165be:	eba3 0208 	sub.w	r2, r3, r8
 80165c2:	2a00      	cmp	r2, #0
 80165c4:	f77f af3e 	ble.w	8016444 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80165c8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80165cc:	1404      	asrs	r4, r0, #16
 80165ce:	140a      	asrs	r2, r1, #16
 80165d0:	fb06 4202 	mla	r2, r6, r2, r4
 80165d4:	9c01      	ldr	r4, [sp, #4]
 80165d6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80165da:	0e22      	lsrs	r2, r4, #24
 80165dc:	d016      	beq.n	801660c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80165de:	9e04      	ldr	r6, [sp, #16]
 80165e0:	4372      	muls	r2, r6
 80165e2:	1c56      	adds	r6, r2, #1
 80165e4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80165e8:	1212      	asrs	r2, r2, #8
 80165ea:	2aff      	cmp	r2, #255	; 0xff
 80165ec:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80165f0:	d113      	bne.n	801661a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80165f2:	0962      	lsrs	r2, r4, #5
 80165f4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80165f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80165fc:	f026 0607 	bic.w	r6, r6, #7
 8016600:	4316      	orrs	r6, r2
 8016602:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016606:	4326      	orrs	r6, r4
 8016608:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801660c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801660e:	4410      	add	r0, r2
 8016610:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016612:	f108 0801 	add.w	r8, r8, #1
 8016616:	4411      	add	r1, r2
 8016618:	e7d1      	b.n	80165be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801661a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801661e:	fa1f fa82 	uxth.w	sl, r2
 8016622:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016626:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801662a:	43d2      	mvns	r2, r2
 801662c:	b2d2      	uxtb	r2, r2
 801662e:	fb17 f70a 	smulbb	r7, r7, sl
 8016632:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016636:	fb0c 7c02 	mla	ip, ip, r2, r7
 801663a:	b2e4      	uxtb	r4, r4
 801663c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016640:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016644:	fa5f fe8e 	uxtb.w	lr, lr
 8016648:	fb14 f40a 	smulbb	r4, r4, sl
 801664c:	fb0e 4402 	mla	r4, lr, r2, r4
 8016650:	b2f6      	uxtb	r6, r6
 8016652:	fa1f fc8c 	uxth.w	ip, ip
 8016656:	fb16 f60a 	smulbb	r6, r6, sl
 801665a:	b2a4      	uxth	r4, r4
 801665c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016660:	fb07 6702 	mla	r7, r7, r2, r6
 8016664:	f10c 0201 	add.w	r2, ip, #1
 8016668:	1c66      	adds	r6, r4, #1
 801666a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801666e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016672:	b2bf      	uxth	r7, r7
 8016674:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016678:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801667c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016680:	1c7e      	adds	r6, r7, #1
 8016682:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016686:	0976      	lsrs	r6, r6, #5
 8016688:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801668c:	ea4c 0c06 	orr.w	ip, ip, r6
 8016690:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016694:	e7ba      	b.n	801660c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016696:	b007      	add	sp, #28
 8016698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801669c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801669c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166a0:	b085      	sub	sp, #20
 80166a2:	468b      	mov	fp, r1
 80166a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80166a6:	9203      	str	r2, [sp, #12]
 80166a8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80166ac:	6841      	ldr	r1, [r0, #4]
 80166ae:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80166b2:	fb01 2404 	mla	r4, r1, r4, r2
 80166b6:	6802      	ldr	r2, [r0, #0]
 80166b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80166bc:	f8d8 2000 	ldr.w	r2, [r8]
 80166c0:	9201      	str	r2, [sp, #4]
 80166c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80166c6:	f1bb 0f00 	cmp.w	fp, #0
 80166ca:	dc03      	bgt.n	80166d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80166cc:	9a03      	ldr	r2, [sp, #12]
 80166ce:	2a00      	cmp	r2, #0
 80166d0:	f340 814f 	ble.w	8016972 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80166d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80166d6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80166da:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80166de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80166e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80166e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80166e8:	2b00      	cmp	r3, #0
 80166ea:	dd0e      	ble.n	801670a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80166ec:	1408      	asrs	r0, r1, #16
 80166ee:	d405      	bmi.n	80166fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80166f0:	42b8      	cmp	r0, r7
 80166f2:	da03      	bge.n	80166fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80166f4:	1410      	asrs	r0, r2, #16
 80166f6:	d401      	bmi.n	80166fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80166f8:	42b0      	cmp	r0, r6
 80166fa:	db07      	blt.n	801670c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80166fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80166fe:	4401      	add	r1, r0
 8016700:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016702:	3b01      	subs	r3, #1
 8016704:	4402      	add	r2, r0
 8016706:	3402      	adds	r4, #2
 8016708:	e7ee      	b.n	80166e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801670a:	d017      	beq.n	801673c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801670c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801670e:	1e58      	subs	r0, r3, #1
 8016710:	fb05 1500 	mla	r5, r5, r0, r1
 8016714:	142d      	asrs	r5, r5, #16
 8016716:	d409      	bmi.n	801672c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016718:	42bd      	cmp	r5, r7
 801671a:	da07      	bge.n	801672c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801671c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801671e:	fb05 2000 	mla	r0, r5, r0, r2
 8016722:	1400      	asrs	r0, r0, #16
 8016724:	d402      	bmi.n	801672c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016726:	42b0      	cmp	r0, r6
 8016728:	f2c0 80ba 	blt.w	80168a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801672c:	2600      	movs	r6, #0
 801672e:	1998      	adds	r0, r3, r6
 8016730:	2800      	cmp	r0, #0
 8016732:	dc3e      	bgt.n	80167b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016734:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016738:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801673c:	f1bb 0f00 	cmp.w	fp, #0
 8016740:	f340 8117 	ble.w	8016972 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016744:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016748:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801674c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016750:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016752:	f1bb 0b01 	subs.w	fp, fp, #1
 8016756:	ee31 1a05 	vadd.f32	s2, s2, s10
 801675a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801675e:	eeb0 6a62 	vmov.f32	s12, s5
 8016762:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016766:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801676a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801676e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016772:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016776:	eeb0 6a43 	vmov.f32	s12, s6
 801677a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801677e:	ee12 2a90 	vmov	r2, s5
 8016782:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016786:	fb92 f3f3 	sdiv	r3, r2, r3
 801678a:	ee13 2a10 	vmov	r2, s6
 801678e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016792:	9311      	str	r3, [sp, #68]	; 0x44
 8016794:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016796:	fb92 f3f3 	sdiv	r3, r2, r3
 801679a:	9a03      	ldr	r2, [sp, #12]
 801679c:	9312      	str	r3, [sp, #72]	; 0x48
 801679e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80167a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80167a4:	eeb0 3a67 	vmov.f32	s6, s15
 80167a8:	bf08      	it	eq
 80167aa:	4613      	moveq	r3, r2
 80167ac:	eef0 2a47 	vmov.f32	s5, s14
 80167b0:	e789      	b.n	80166c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80167b2:	140f      	asrs	r7, r1, #16
 80167b4:	d424      	bmi.n	8016800 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80167b6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80167ba:	42bd      	cmp	r5, r7
 80167bc:	dd20      	ble.n	8016800 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80167be:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80167c2:	d41d      	bmi.n	8016800 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80167c4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80167c8:	4560      	cmp	r0, ip
 80167ca:	dd19      	ble.n	8016800 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80167cc:	b22d      	sxth	r5, r5
 80167ce:	fb0c 7505 	mla	r5, ip, r5, r7
 80167d2:	9801      	ldr	r0, [sp, #4]
 80167d4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80167d8:	0e07      	lsrs	r7, r0, #24
 80167da:	2fff      	cmp	r7, #255	; 0xff
 80167dc:	d116      	bne.n	801680c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80167de:	f06f 0501 	mvn.w	r5, #1
 80167e2:	fb05 f706 	mul.w	r7, r5, r6
 80167e6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80167ea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80167ee:	0945      	lsrs	r5, r0, #5
 80167f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80167f4:	ea4c 0505 	orr.w	r5, ip, r5
 80167f8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80167fc:	4305      	orrs	r5, r0
 80167fe:	53e5      	strh	r5, [r4, r7]
 8016800:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016802:	4401      	add	r1, r0
 8016804:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016806:	3e01      	subs	r6, #1
 8016808:	4402      	add	r2, r0
 801680a:	e790      	b.n	801672e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801680c:	b2fd      	uxtb	r5, r7
 801680e:	2f00      	cmp	r7, #0
 8016810:	d0f6      	beq.n	8016800 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016812:	f06f 0701 	mvn.w	r7, #1
 8016816:	4377      	muls	r7, r6
 8016818:	fa1f f985 	uxth.w	r9, r5
 801681c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8016820:	9702      	str	r7, [sp, #8]
 8016822:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016826:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801682a:	43ed      	mvns	r5, r5
 801682c:	b2ed      	uxtb	r5, r5
 801682e:	fb17 f709 	smulbb	r7, r7, r9
 8016832:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016836:	fb0c 7c05 	mla	ip, ip, r5, r7
 801683a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801683e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016842:	b2c0      	uxtb	r0, r0
 8016844:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016848:	fa5f fe8e 	uxtb.w	lr, lr
 801684c:	fb10 f009 	smulbb	r0, r0, r9
 8016850:	fb0e 0005 	mla	r0, lr, r5, r0
 8016854:	b280      	uxth	r0, r0
 8016856:	fa1f fc8c 	uxth.w	ip, ip
 801685a:	fb1a fa09 	smulbb	sl, sl, r9
 801685e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016862:	fb07 a705 	mla	r7, r7, r5, sl
 8016866:	f100 0a01 	add.w	sl, r0, #1
 801686a:	f10c 0501 	add.w	r5, ip, #1
 801686e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016872:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016876:	b2bf      	uxth	r7, r7
 8016878:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801687c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016880:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016884:	f107 0a01 	add.w	sl, r7, #1
 8016888:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801688c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016890:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016894:	9802      	ldr	r0, [sp, #8]
 8016896:	ea4c 0c0a 	orr.w	ip, ip, sl
 801689a:	f824 c000 	strh.w	ip, [r4, r0]
 801689e:	e7af      	b.n	8016800 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80168a0:	f04f 0e00 	mov.w	lr, #0
 80168a4:	eba3 000e 	sub.w	r0, r3, lr
 80168a8:	2800      	cmp	r0, #0
 80168aa:	f77f af43 	ble.w	8016734 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80168ae:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80168b2:	140d      	asrs	r5, r1, #16
 80168b4:	1410      	asrs	r0, r2, #16
 80168b6:	fb06 5000 	mla	r0, r6, r0, r5
 80168ba:	9d01      	ldr	r5, [sp, #4]
 80168bc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80168c0:	0e2e      	lsrs	r6, r5, #24
 80168c2:	2eff      	cmp	r6, #255	; 0xff
 80168c4:	d112      	bne.n	80168ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80168c6:	482c      	ldr	r0, [pc, #176]	; (8016978 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80168c8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80168cc:	0968      	lsrs	r0, r5, #5
 80168ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80168d2:	4330      	orrs	r0, r6
 80168d4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80168d8:	4328      	orrs	r0, r5
 80168da:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80168de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80168e0:	4401      	add	r1, r0
 80168e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80168e4:	f10e 0e01 	add.w	lr, lr, #1
 80168e8:	4402      	add	r2, r0
 80168ea:	e7db      	b.n	80168a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80168ec:	b2f0      	uxtb	r0, r6
 80168ee:	2e00      	cmp	r6, #0
 80168f0:	d0f5      	beq.n	80168de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80168f2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80168f6:	fa1f f980 	uxth.w	r9, r0
 80168fa:	ea4f 272c 	mov.w	r7, ip, asr #8
 80168fe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016902:	43c0      	mvns	r0, r0
 8016904:	b2c0      	uxtb	r0, r0
 8016906:	fb16 f609 	smulbb	r6, r6, r9
 801690a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801690e:	fb07 6700 	mla	r7, r7, r0, r6
 8016912:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016916:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801691a:	b2ed      	uxtb	r5, r5
 801691c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016920:	fa5f fc8c 	uxtb.w	ip, ip
 8016924:	fb15 f509 	smulbb	r5, r5, r9
 8016928:	fb0c 5500 	mla	r5, ip, r0, r5
 801692c:	b2bf      	uxth	r7, r7
 801692e:	fb1a fa09 	smulbb	sl, sl, r9
 8016932:	b2ad      	uxth	r5, r5
 8016934:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016938:	fb06 a600 	mla	r6, r6, r0, sl
 801693c:	1c78      	adds	r0, r7, #1
 801693e:	f105 0a01 	add.w	sl, r5, #1
 8016942:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016946:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801694a:	b2b6      	uxth	r6, r6
 801694c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016950:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016954:	ea4a 0707 	orr.w	r7, sl, r7
 8016958:	f106 0a01 	add.w	sl, r6, #1
 801695c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016960:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016964:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016968:	ea47 070a 	orr.w	r7, r7, sl
 801696c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016970:	e7b5      	b.n	80168de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016972:	b005      	add	sp, #20
 8016974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016978:	fffff800 	.word	0xfffff800

0801697c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801697c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016980:	b087      	sub	sp, #28
 8016982:	468b      	mov	fp, r1
 8016984:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016986:	9203      	str	r2, [sp, #12]
 8016988:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801698c:	9204      	str	r2, [sp, #16]
 801698e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016992:	6841      	ldr	r1, [r0, #4]
 8016994:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016998:	fb01 2404 	mla	r4, r1, r4, r2
 801699c:	6802      	ldr	r2, [r0, #0]
 801699e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80169a2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80169a6:	3201      	adds	r2, #1
 80169a8:	f022 0201 	bic.w	r2, r2, #1
 80169ac:	9200      	str	r2, [sp, #0]
 80169ae:	f8d9 2000 	ldr.w	r2, [r9]
 80169b2:	9201      	str	r2, [sp, #4]
 80169b4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80169b8:	f1bb 0f00 	cmp.w	fp, #0
 80169bc:	dc03      	bgt.n	80169c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80169be:	9a03      	ldr	r2, [sp, #12]
 80169c0:	2a00      	cmp	r2, #0
 80169c2:	f340 8169 	ble.w	8016c98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80169c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80169c8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80169cc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80169d0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80169d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80169d6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80169da:	2b00      	cmp	r3, #0
 80169dc:	dd0e      	ble.n	80169fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80169de:	1402      	asrs	r2, r0, #16
 80169e0:	d405      	bmi.n	80169ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80169e2:	42ba      	cmp	r2, r7
 80169e4:	da03      	bge.n	80169ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80169e6:	140a      	asrs	r2, r1, #16
 80169e8:	d401      	bmi.n	80169ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80169ea:	42b2      	cmp	r2, r6
 80169ec:	db07      	blt.n	80169fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80169ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80169f0:	4410      	add	r0, r2
 80169f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80169f4:	3b01      	subs	r3, #1
 80169f6:	4411      	add	r1, r2
 80169f8:	3402      	adds	r4, #2
 80169fa:	e7ee      	b.n	80169da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80169fc:	d017      	beq.n	8016a2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80169fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016a00:	1e5a      	subs	r2, r3, #1
 8016a02:	fb05 0502 	mla	r5, r5, r2, r0
 8016a06:	142d      	asrs	r5, r5, #16
 8016a08:	d409      	bmi.n	8016a1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016a0a:	42bd      	cmp	r5, r7
 8016a0c:	da07      	bge.n	8016a1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016a0e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016a10:	fb05 1202 	mla	r2, r5, r2, r1
 8016a14:	1412      	asrs	r2, r2, #16
 8016a16:	d402      	bmi.n	8016a1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016a18:	42b2      	cmp	r2, r6
 8016a1a:	f2c0 80c7 	blt.w	8016bac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8016a1e:	2700      	movs	r7, #0
 8016a20:	19da      	adds	r2, r3, r7
 8016a22:	2a00      	cmp	r2, #0
 8016a24:	dc3e      	bgt.n	8016aa4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016a26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016a2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016a2e:	f1bb 0f00 	cmp.w	fp, #0
 8016a32:	f340 8131 	ble.w	8016c98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016a36:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016a3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016a3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016a42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a44:	f1bb 0b01 	subs.w	fp, fp, #1
 8016a48:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016a4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016a50:	eeb0 6a62 	vmov.f32	s12, s5
 8016a54:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016a58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016a5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016a60:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016a64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016a68:	eeb0 6a43 	vmov.f32	s12, s6
 8016a6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016a70:	ee12 2a90 	vmov	r2, s5
 8016a74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016a78:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a7c:	ee13 2a10 	vmov	r2, s6
 8016a80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016a84:	9313      	str	r3, [sp, #76]	; 0x4c
 8016a86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a88:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a8c:	9a03      	ldr	r2, [sp, #12]
 8016a8e:	9314      	str	r3, [sp, #80]	; 0x50
 8016a90:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016a94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a96:	eeb0 3a67 	vmov.f32	s6, s15
 8016a9a:	bf08      	it	eq
 8016a9c:	4613      	moveq	r3, r2
 8016a9e:	eef0 2a47 	vmov.f32	s5, s14
 8016aa2:	e789      	b.n	80169b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016aa4:	1405      	asrs	r5, r0, #16
 8016aa6:	d435      	bmi.n	8016b14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016aa8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016aac:	42aa      	cmp	r2, r5
 8016aae:	dd31      	ble.n	8016b14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016ab0:	140e      	asrs	r6, r1, #16
 8016ab2:	d42f      	bmi.n	8016b14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016ab4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016ab8:	42b2      	cmp	r2, r6
 8016aba:	dd2b      	ble.n	8016b14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016abc:	9a00      	ldr	r2, [sp, #0]
 8016abe:	fb06 5502 	mla	r5, r6, r2, r5
 8016ac2:	086a      	lsrs	r2, r5, #1
 8016ac4:	9e01      	ldr	r6, [sp, #4]
 8016ac6:	5cb2      	ldrb	r2, [r6, r2]
 8016ac8:	07ee      	lsls	r6, r5, #31
 8016aca:	bf54      	ite	pl
 8016acc:	f002 020f 	andpl.w	r2, r2, #15
 8016ad0:	1112      	asrmi	r2, r2, #4
 8016ad2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016ad6:	b2d2      	uxtb	r2, r2
 8016ad8:	b1e2      	cbz	r2, 8016b14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016ada:	9d04      	ldr	r5, [sp, #16]
 8016adc:	436a      	muls	r2, r5
 8016ade:	1c55      	adds	r5, r2, #1
 8016ae0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016ae4:	4d6e      	ldr	r5, [pc, #440]	; (8016ca0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016ae6:	682d      	ldr	r5, [r5, #0]
 8016ae8:	1212      	asrs	r2, r2, #8
 8016aea:	0a2e      	lsrs	r6, r5, #8
 8016aec:	2aff      	cmp	r2, #255	; 0xff
 8016aee:	9605      	str	r6, [sp, #20]
 8016af0:	d116      	bne.n	8016b20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016af2:	f06f 0201 	mvn.w	r2, #1
 8016af6:	fb02 fc07 	mul.w	ip, r2, r7
 8016afa:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016afe:	096a      	lsrs	r2, r5, #5
 8016b00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016b04:	f026 0607 	bic.w	r6, r6, #7
 8016b08:	4316      	orrs	r6, r2
 8016b0a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016b0e:	432e      	orrs	r6, r5
 8016b10:	f824 600c 	strh.w	r6, [r4, ip]
 8016b14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016b16:	4410      	add	r0, r2
 8016b18:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016b1a:	3f01      	subs	r7, #1
 8016b1c:	4411      	add	r1, r2
 8016b1e:	e77f      	b.n	8016a20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016b20:	f06f 0601 	mvn.w	r6, #1
 8016b24:	437e      	muls	r6, r7
 8016b26:	fa1f fa82 	uxth.w	sl, r2
 8016b2a:	f834 8006 	ldrh.w	r8, [r4, r6]
 8016b2e:	9602      	str	r6, [sp, #8]
 8016b30:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016b34:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016b38:	43d2      	mvns	r2, r2
 8016b3a:	b2d2      	uxtb	r2, r2
 8016b3c:	fb1c fc0a 	smulbb	ip, ip, sl
 8016b40:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016b44:	fb0e ce02 	mla	lr, lr, r2, ip
 8016b48:	b2ed      	uxtb	r5, r5
 8016b4a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016b4e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016b52:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016b56:	fa5f f888 	uxtb.w	r8, r8
 8016b5a:	fb15 f50a 	smulbb	r5, r5, sl
 8016b5e:	fb08 5502 	mla	r5, r8, r2, r5
 8016b62:	fa1f fe8e 	uxth.w	lr, lr
 8016b66:	fb16 f60a 	smulbb	r6, r6, sl
 8016b6a:	b2ad      	uxth	r5, r5
 8016b6c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016b70:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016b74:	f10e 0201 	add.w	r2, lr, #1
 8016b78:	1c6e      	adds	r6, r5, #1
 8016b7a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016b7e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016b82:	fa1f fc8c 	uxth.w	ip, ip
 8016b86:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016b8a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016b8e:	ea46 0e0e 	orr.w	lr, r6, lr
 8016b92:	f10c 0601 	add.w	r6, ip, #1
 8016b96:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016b9a:	0976      	lsrs	r6, r6, #5
 8016b9c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016ba0:	9a02      	ldr	r2, [sp, #8]
 8016ba2:	ea4e 0e06 	orr.w	lr, lr, r6
 8016ba6:	f824 e002 	strh.w	lr, [r4, r2]
 8016baa:	e7b3      	b.n	8016b14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016bac:	f04f 0800 	mov.w	r8, #0
 8016bb0:	eba3 0208 	sub.w	r2, r3, r8
 8016bb4:	2a00      	cmp	r2, #0
 8016bb6:	f77f af36 	ble.w	8016a26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016bba:	9e00      	ldr	r6, [sp, #0]
 8016bbc:	1402      	asrs	r2, r0, #16
 8016bbe:	140d      	asrs	r5, r1, #16
 8016bc0:	fb06 2505 	mla	r5, r6, r5, r2
 8016bc4:	086a      	lsrs	r2, r5, #1
 8016bc6:	9e01      	ldr	r6, [sp, #4]
 8016bc8:	5cb2      	ldrb	r2, [r6, r2]
 8016bca:	07ed      	lsls	r5, r5, #31
 8016bcc:	bf54      	ite	pl
 8016bce:	f002 020f 	andpl.w	r2, r2, #15
 8016bd2:	1112      	asrmi	r2, r2, #4
 8016bd4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016bd8:	b2d2      	uxtb	r2, r2
 8016bda:	b1c2      	cbz	r2, 8016c0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016bdc:	9d04      	ldr	r5, [sp, #16]
 8016bde:	436a      	muls	r2, r5
 8016be0:	1c55      	adds	r5, r2, #1
 8016be2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016be6:	4d2e      	ldr	r5, [pc, #184]	; (8016ca0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016be8:	1212      	asrs	r2, r2, #8
 8016bea:	682e      	ldr	r6, [r5, #0]
 8016bec:	2aff      	cmp	r2, #255	; 0xff
 8016bee:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016bf2:	d113      	bne.n	8016c1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016bf4:	0972      	lsrs	r2, r6, #5
 8016bf6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016bfa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016bfe:	f025 0507 	bic.w	r5, r5, #7
 8016c02:	4315      	orrs	r5, r2
 8016c04:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016c08:	4335      	orrs	r5, r6
 8016c0a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016c0e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016c10:	4410      	add	r0, r2
 8016c12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016c14:	f108 0801 	add.w	r8, r8, #1
 8016c18:	4411      	add	r1, r2
 8016c1a:	e7c9      	b.n	8016bb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016c1c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016c20:	fa1f fa82 	uxth.w	sl, r2
 8016c24:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016c28:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016c2c:	43d2      	mvns	r2, r2
 8016c2e:	b2d2      	uxtb	r2, r2
 8016c30:	fb17 f70a 	smulbb	r7, r7, sl
 8016c34:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016c38:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016c3c:	b2f6      	uxtb	r6, r6
 8016c3e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016c42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016c46:	fa5f fe8e 	uxtb.w	lr, lr
 8016c4a:	fb16 f60a 	smulbb	r6, r6, sl
 8016c4e:	fb0e 6602 	mla	r6, lr, r2, r6
 8016c52:	b2ed      	uxtb	r5, r5
 8016c54:	fa1f fc8c 	uxth.w	ip, ip
 8016c58:	fb15 f50a 	smulbb	r5, r5, sl
 8016c5c:	b2b6      	uxth	r6, r6
 8016c5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016c62:	fb07 5702 	mla	r7, r7, r2, r5
 8016c66:	f10c 0201 	add.w	r2, ip, #1
 8016c6a:	1c75      	adds	r5, r6, #1
 8016c6c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016c70:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016c74:	b2bf      	uxth	r7, r7
 8016c76:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016c7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016c7e:	ea45 0c0c 	orr.w	ip, r5, ip
 8016c82:	1c7d      	adds	r5, r7, #1
 8016c84:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016c88:	096d      	lsrs	r5, r5, #5
 8016c8a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016c8e:	ea4c 0c05 	orr.w	ip, ip, r5
 8016c92:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016c96:	e7ba      	b.n	8016c0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016c98:	b007      	add	sp, #28
 8016c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c9e:	bf00      	nop
 8016ca0:	20015804 	.word	0x20015804

08016ca4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ca8:	b087      	sub	sp, #28
 8016caa:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016fb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016cae:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016cb0:	9205      	str	r2, [sp, #20]
 8016cb2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016cb6:	9101      	str	r1, [sp, #4]
 8016cb8:	6841      	ldr	r1, [r0, #4]
 8016cba:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8016cbe:	fb01 2404 	mla	r4, r1, r4, r2
 8016cc2:	6802      	ldr	r2, [r0, #0]
 8016cc4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016cc8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016ccc:	3201      	adds	r2, #1
 8016cce:	f022 0201 	bic.w	r2, r2, #1
 8016cd2:	9202      	str	r2, [sp, #8]
 8016cd4:	f8db 2000 	ldr.w	r2, [fp]
 8016cd8:	9203      	str	r2, [sp, #12]
 8016cda:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016cde:	9a01      	ldr	r2, [sp, #4]
 8016ce0:	2a00      	cmp	r2, #0
 8016ce2:	dc03      	bgt.n	8016cec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016ce4:	9a05      	ldr	r2, [sp, #20]
 8016ce6:	2a00      	cmp	r2, #0
 8016ce8:	f340 8162 	ble.w	8016fb0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016cec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016cee:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016cf2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016cf6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016cfa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016cfc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016d00:	2b00      	cmp	r3, #0
 8016d02:	dd0e      	ble.n	8016d22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016d04:	1402      	asrs	r2, r0, #16
 8016d06:	d405      	bmi.n	8016d14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016d08:	42ba      	cmp	r2, r7
 8016d0a:	da03      	bge.n	8016d14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016d0c:	140a      	asrs	r2, r1, #16
 8016d0e:	d401      	bmi.n	8016d14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016d10:	42b2      	cmp	r2, r6
 8016d12:	db07      	blt.n	8016d24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016d14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016d16:	4410      	add	r0, r2
 8016d18:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d1a:	3b01      	subs	r3, #1
 8016d1c:	4411      	add	r1, r2
 8016d1e:	3402      	adds	r4, #2
 8016d20:	e7ee      	b.n	8016d00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016d22:	d017      	beq.n	8016d54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016d24:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016d26:	1e5a      	subs	r2, r3, #1
 8016d28:	fb05 0502 	mla	r5, r5, r2, r0
 8016d2c:	142d      	asrs	r5, r5, #16
 8016d2e:	d409      	bmi.n	8016d44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016d30:	42bd      	cmp	r5, r7
 8016d32:	da07      	bge.n	8016d44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016d34:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016d36:	fb05 1202 	mla	r2, r5, r2, r1
 8016d3a:	1412      	asrs	r2, r2, #16
 8016d3c:	d402      	bmi.n	8016d44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016d3e:	42b2      	cmp	r2, r6
 8016d40:	f2c0 80c3 	blt.w	8016eca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016d44:	2500      	movs	r5, #0
 8016d46:	195a      	adds	r2, r3, r5
 8016d48:	2a00      	cmp	r2, #0
 8016d4a:	dc3f      	bgt.n	8016dcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016d4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016d50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016d54:	9b01      	ldr	r3, [sp, #4]
 8016d56:	2b00      	cmp	r3, #0
 8016d58:	f340 812a 	ble.w	8016fb0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016d5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016d60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016d64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016d68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016d6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016d72:	eeb0 6a62 	vmov.f32	s12, s5
 8016d76:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016d7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016d82:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016d86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016d8a:	eeb0 6a43 	vmov.f32	s12, s6
 8016d8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016d92:	ee12 2a90 	vmov	r2, s5
 8016d96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016d9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d9e:	ee13 2a10 	vmov	r2, s6
 8016da2:	9313      	str	r3, [sp, #76]	; 0x4c
 8016da4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016da6:	fb92 f3f3 	sdiv	r3, r2, r3
 8016daa:	9314      	str	r3, [sp, #80]	; 0x50
 8016dac:	9b01      	ldr	r3, [sp, #4]
 8016dae:	9a05      	ldr	r2, [sp, #20]
 8016db0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016db4:	3b01      	subs	r3, #1
 8016db6:	9301      	str	r3, [sp, #4]
 8016db8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016dbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016dbe:	eeb0 3a67 	vmov.f32	s6, s15
 8016dc2:	bf08      	it	eq
 8016dc4:	4613      	moveq	r3, r2
 8016dc6:	eef0 2a47 	vmov.f32	s5, s14
 8016dca:	e788      	b.n	8016cde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016dcc:	1406      	asrs	r6, r0, #16
 8016dce:	d42c      	bmi.n	8016e2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016dd0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016dd4:	42b2      	cmp	r2, r6
 8016dd6:	dd28      	ble.n	8016e2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016dd8:	140f      	asrs	r7, r1, #16
 8016dda:	d426      	bmi.n	8016e2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ddc:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016de0:	42ba      	cmp	r2, r7
 8016de2:	dd22      	ble.n	8016e2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016de4:	9a02      	ldr	r2, [sp, #8]
 8016de6:	fb07 6602 	mla	r6, r7, r2, r6
 8016dea:	0872      	lsrs	r2, r6, #1
 8016dec:	9f03      	ldr	r7, [sp, #12]
 8016dee:	5cba      	ldrb	r2, [r7, r2]
 8016df0:	07f6      	lsls	r6, r6, #31
 8016df2:	bf54      	ite	pl
 8016df4:	f002 020f 	andpl.w	r2, r2, #15
 8016df8:	1112      	asrmi	r2, r2, #4
 8016dfa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016dfe:	b2d2      	uxtb	r2, r2
 8016e00:	2aff      	cmp	r2, #255	; 0xff
 8016e02:	d118      	bne.n	8016e36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016e04:	f8d8 2000 	ldr.w	r2, [r8]
 8016e08:	f06f 0601 	mvn.w	r6, #1
 8016e0c:	fb06 f705 	mul.w	r7, r6, r5
 8016e10:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8016e14:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016e18:	0956      	lsrs	r6, r2, #5
 8016e1a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016e1e:	ea4c 0606 	orr.w	r6, ip, r6
 8016e22:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016e26:	4316      	orrs	r6, r2
 8016e28:	53e6      	strh	r6, [r4, r7]
 8016e2a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016e2c:	4410      	add	r0, r2
 8016e2e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016e30:	3d01      	subs	r5, #1
 8016e32:	4411      	add	r1, r2
 8016e34:	e787      	b.n	8016d46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016e36:	2a00      	cmp	r2, #0
 8016e38:	d0f7      	beq.n	8016e2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016e3a:	f06f 0601 	mvn.w	r6, #1
 8016e3e:	436e      	muls	r6, r5
 8016e40:	f8d8 c000 	ldr.w	ip, [r8]
 8016e44:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016e48:	9604      	str	r6, [sp, #16]
 8016e4a:	fa1f f982 	uxth.w	r9, r2
 8016e4e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016e52:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016e56:	43d2      	mvns	r2, r2
 8016e58:	b2d2      	uxtb	r2, r2
 8016e5a:	fb16 f609 	smulbb	r6, r6, r9
 8016e5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016e62:	fb07 6702 	mla	r7, r7, r2, r6
 8016e66:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016e6a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016e6e:	fa5f fc8c 	uxtb.w	ip, ip
 8016e72:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016e76:	fa5f fe8e 	uxtb.w	lr, lr
 8016e7a:	fb1c fc09 	smulbb	ip, ip, r9
 8016e7e:	fb0e cc02 	mla	ip, lr, r2, ip
 8016e82:	b2bf      	uxth	r7, r7
 8016e84:	fb1a fa09 	smulbb	sl, sl, r9
 8016e88:	fa1f fc8c 	uxth.w	ip, ip
 8016e8c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016e90:	fb06 a602 	mla	r6, r6, r2, sl
 8016e94:	1c7a      	adds	r2, r7, #1
 8016e96:	f10c 0a01 	add.w	sl, ip, #1
 8016e9a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016e9e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016ea2:	b2b6      	uxth	r6, r6
 8016ea4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016ea8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016eac:	ea4a 0707 	orr.w	r7, sl, r7
 8016eb0:	f106 0a01 	add.w	sl, r6, #1
 8016eb4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016eb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016ebc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016ec0:	9a04      	ldr	r2, [sp, #16]
 8016ec2:	ea47 070a 	orr.w	r7, r7, sl
 8016ec6:	52a7      	strh	r7, [r4, r2]
 8016ec8:	e7af      	b.n	8016e2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016eca:	f04f 0e00 	mov.w	lr, #0
 8016ece:	eba3 020e 	sub.w	r2, r3, lr
 8016ed2:	2a00      	cmp	r2, #0
 8016ed4:	f77f af3a 	ble.w	8016d4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016ed8:	9e02      	ldr	r6, [sp, #8]
 8016eda:	1402      	asrs	r2, r0, #16
 8016edc:	140d      	asrs	r5, r1, #16
 8016ede:	fb06 2505 	mla	r5, r6, r5, r2
 8016ee2:	086a      	lsrs	r2, r5, #1
 8016ee4:	9e03      	ldr	r6, [sp, #12]
 8016ee6:	5cb2      	ldrb	r2, [r6, r2]
 8016ee8:	07ed      	lsls	r5, r5, #31
 8016eea:	bf54      	ite	pl
 8016eec:	f002 020f 	andpl.w	r2, r2, #15
 8016ef0:	1112      	asrmi	r2, r2, #4
 8016ef2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016ef6:	b2d2      	uxtb	r2, r2
 8016ef8:	2aff      	cmp	r2, #255	; 0xff
 8016efa:	d115      	bne.n	8016f28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016efc:	f8d8 5000 	ldr.w	r5, [r8]
 8016f00:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016f04:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016f08:	096a      	lsrs	r2, r5, #5
 8016f0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016f0e:	4332      	orrs	r2, r6
 8016f10:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016f14:	432a      	orrs	r2, r5
 8016f16:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016f1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016f1c:	4410      	add	r0, r2
 8016f1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016f20:	f10e 0e01 	add.w	lr, lr, #1
 8016f24:	4411      	add	r1, r2
 8016f26:	e7d2      	b.n	8016ece <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016f28:	2a00      	cmp	r2, #0
 8016f2a:	d0f6      	beq.n	8016f1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016f2c:	f8d8 7000 	ldr.w	r7, [r8]
 8016f30:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016f34:	fa1f f982 	uxth.w	r9, r2
 8016f38:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016f3c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016f40:	43d2      	mvns	r2, r2
 8016f42:	b2d2      	uxtb	r2, r2
 8016f44:	fb15 f509 	smulbb	r5, r5, r9
 8016f48:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016f4c:	fb06 5602 	mla	r6, r6, r2, r5
 8016f50:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016f54:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016f58:	b2ff      	uxtb	r7, r7
 8016f5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016f5e:	fa5f fc8c 	uxtb.w	ip, ip
 8016f62:	fb17 f709 	smulbb	r7, r7, r9
 8016f66:	fb0c 7702 	mla	r7, ip, r2, r7
 8016f6a:	b2b6      	uxth	r6, r6
 8016f6c:	fb1a fa09 	smulbb	sl, sl, r9
 8016f70:	b2bf      	uxth	r7, r7
 8016f72:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016f76:	fb05 a502 	mla	r5, r5, r2, sl
 8016f7a:	1c72      	adds	r2, r6, #1
 8016f7c:	f107 0a01 	add.w	sl, r7, #1
 8016f80:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016f84:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016f88:	b2ad      	uxth	r5, r5
 8016f8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016f8e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016f92:	ea4a 0606 	orr.w	r6, sl, r6
 8016f96:	f105 0a01 	add.w	sl, r5, #1
 8016f9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016f9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016fa2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016fa6:	ea46 060a 	orr.w	r6, r6, sl
 8016faa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016fae:	e7b4      	b.n	8016f1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016fb0:	b007      	add	sp, #28
 8016fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fb6:	bf00      	nop
 8016fb8:	20015804 	.word	0x20015804

08016fbc <_ZN8touchgfx8LCD16bppD1Ev>:
 8016fbc:	4770      	bx	lr

08016fbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016fbe:	4770      	bx	lr

08016fc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016fc0:	4770      	bx	lr

08016fc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016fc2:	4770      	bx	lr

08016fc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016fc4:	4770      	bx	lr

08016fc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016fc6:	4770      	bx	lr

08016fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016fc8:	4770      	bx	lr

08016fca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016fca:	4770      	bx	lr

08016fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016fcc:	4770      	bx	lr

08016fce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016fce:	4770      	bx	lr

08016fd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016fd0:	4770      	bx	lr

08016fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016fd2:	4770      	bx	lr

08016fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016fd4:	4770      	bx	lr

08016fd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016fd6:	4770      	bx	lr

08016fd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016fd8:	4770      	bx	lr

08016fda <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016fda:	4770      	bx	lr

08016fdc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016fdc:	4770      	bx	lr

08016fde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016fde:	4770      	bx	lr

08016fe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016fe0:	4770      	bx	lr

08016fe2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016fe2:	4770      	bx	lr

08016fe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016fe4:	4770      	bx	lr

08016fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016fe6:	4770      	bx	lr

08016fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016fe8:	4770      	bx	lr

08016fea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016fea:	4770      	bx	lr

08016fec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016fec:	4770      	bx	lr

08016fee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016fee:	4770      	bx	lr

08016ff0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ff0:	4770      	bx	lr

08016ff2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ff2:	4770      	bx	lr

08016ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016ff4:	4770      	bx	lr

08016ff6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016ff6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016ffa:	b088      	sub	sp, #32
 8016ffc:	ac08      	add	r4, sp, #32
 8016ffe:	4606      	mov	r6, r0
 8017000:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8017004:	4620      	mov	r0, r4
 8017006:	4688      	mov	r8, r1
 8017008:	4691      	mov	r9, r2
 801700a:	f7fd fc65 	bl	80148d8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801700e:	6833      	ldr	r3, [r6, #0]
 8017010:	4605      	mov	r5, r0
 8017012:	4620      	mov	r0, r4
 8017014:	699f      	ldr	r7, [r3, #24]
 8017016:	f7fd fb73 	bl	8014700 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801701a:	4682      	mov	sl, r0
 801701c:	4620      	mov	r0, r4
 801701e:	f7fd fba3 	bl	8014768 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017022:	9500      	str	r5, [sp, #0]
 8017024:	e9cd a001 	strd	sl, r0, [sp, #4]
 8017028:	464b      	mov	r3, r9
 801702a:	a806      	add	r0, sp, #24
 801702c:	4642      	mov	r2, r8
 801702e:	4631      	mov	r1, r6
 8017030:	47b8      	blx	r7
 8017032:	4628      	mov	r0, r5
 8017034:	b008      	add	sp, #32
 8017036:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801703c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801703c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8017040:	2300      	movs	r3, #0
 8017042:	9300      	str	r3, [sp, #0]
 8017044:	4b3d      	ldr	r3, [pc, #244]	; (801713c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8017046:	781b      	ldrb	r3, [r3, #0]
 8017048:	2b00      	cmp	r3, #0
 801704a:	d137      	bne.n	80170bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801704c:	4a3c      	ldr	r2, [pc, #240]	; (8017140 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801704e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017052:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017056:	2b00      	cmp	r3, #0
 8017058:	d132      	bne.n	80170c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801705a:	4b3a      	ldr	r3, [pc, #232]	; (8017144 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801705c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017060:	6808      	ldr	r0, [r1, #0]
 8017062:	6849      	ldr	r1, [r1, #4]
 8017064:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017068:	ac02      	add	r4, sp, #8
 801706a:	ab02      	add	r3, sp, #8
 801706c:	c303      	stmia	r3!, {r0, r1}
 801706e:	4669      	mov	r1, sp
 8017070:	4620      	mov	r0, r4
 8017072:	f7f9 ff7f 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017076:	4668      	mov	r0, sp
 8017078:	f7f9 ff54 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801707c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017080:	f8bd 2000 	ldrh.w	r2, [sp]
 8017084:	4d30      	ldr	r5, [pc, #192]	; (8017148 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8017086:	4413      	add	r3, r2
 8017088:	f8ad 3008 	strh.w	r3, [sp, #8]
 801708c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017090:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017094:	6828      	ldr	r0, [r5, #0]
 8017096:	4413      	add	r3, r2
 8017098:	f8ad 300a 	strh.w	r3, [sp, #10]
 801709c:	6803      	ldr	r3, [r0, #0]
 801709e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80170a0:	4798      	blx	r3
 80170a2:	f010 0f01 	tst.w	r0, #1
 80170a6:	462f      	mov	r7, r5
 80170a8:	d00c      	beq.n	80170c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80170aa:	6828      	ldr	r0, [r5, #0]
 80170ac:	6803      	ldr	r3, [r0, #0]
 80170ae:	e894 0006 	ldmia.w	r4, {r1, r2}
 80170b2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80170b4:	4798      	blx	r3
 80170b6:	b004      	add	sp, #16
 80170b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80170bc:	4a21      	ldr	r2, [pc, #132]	; (8017144 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80170be:	e7c6      	b.n	801704e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80170c0:	4b1f      	ldr	r3, [pc, #124]	; (8017140 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80170c2:	e7cb      	b.n	801705c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80170c4:	6838      	ldr	r0, [r7, #0]
 80170c6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80170ca:	6803      	ldr	r3, [r0, #0]
 80170cc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80170d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80170d2:	4798      	blx	r3
 80170d4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80170d8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80170dc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80170e0:	fb16 3602 	smlabb	r6, r6, r2, r3
 80170e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80170e8:	6838      	ldr	r0, [r7, #0]
 80170ea:	6803      	ldr	r3, [r0, #0]
 80170ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80170ee:	4798      	blx	r3
 80170f0:	4a13      	ldr	r2, [pc, #76]	; (8017140 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80170f2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80170f6:	8813      	ldrh	r3, [r2, #0]
 80170f8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80170fc:	fb03 1404 	mla	r4, r3, r4, r1
 8017100:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017104:	435d      	muls	r5, r3
 8017106:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801710a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801710e:	4691      	mov	r9, r2
 8017110:	6838      	ldr	r0, [r7, #0]
 8017112:	42ac      	cmp	r4, r5
 8017114:	6803      	ldr	r3, [r0, #0]
 8017116:	d20e      	bcs.n	8017136 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8017118:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801711c:	4632      	mov	r2, r6
 801711e:	4643      	mov	r3, r8
 8017120:	4621      	mov	r1, r4
 8017122:	47d0      	blx	sl
 8017124:	f8b9 3000 	ldrh.w	r3, [r9]
 8017128:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801712c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017130:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017134:	e7ec      	b.n	8017110 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8017136:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017138:	4798      	blx	r3
 801713a:	e7bc      	b.n	80170b6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801713c:	200157ec 	.word	0x200157ec
 8017140:	200157ee 	.word	0x200157ee
 8017144:	200157f0 	.word	0x200157f0
 8017148:	200157f4 	.word	0x200157f4

0801714c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801714c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017150:	b08b      	sub	sp, #44	; 0x2c
 8017152:	460f      	mov	r7, r1
 8017154:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8017158:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801715c:	4616      	mov	r6, r2
 801715e:	f1bb 0f00 	cmp.w	fp, #0
 8017162:	d049      	beq.n	80171f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017164:	6810      	ldr	r0, [r2, #0]
 8017166:	6851      	ldr	r1, [r2, #4]
 8017168:	ad06      	add	r5, sp, #24
 801716a:	c503      	stmia	r5!, {r0, r1}
 801716c:	6818      	ldr	r0, [r3, #0]
 801716e:	6859      	ldr	r1, [r3, #4]
 8017170:	ad08      	add	r5, sp, #32
 8017172:	c503      	stmia	r5!, {r0, r1}
 8017174:	a806      	add	r0, sp, #24
 8017176:	f7f9 fed5 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801717a:	4631      	mov	r1, r6
 801717c:	a808      	add	r0, sp, #32
 801717e:	f7f9 fef9 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017182:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017186:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801718a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801718e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8017192:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017196:	fb16 2103 	smlabb	r1, r6, r3, r2
 801719a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801719e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80171a2:	4f5f      	ldr	r7, [pc, #380]	; (8017320 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80171a4:	440a      	add	r2, r1
 80171a6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80171aa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80171ae:	6838      	ldr	r0, [r7, #0]
 80171b0:	4413      	add	r3, r2
 80171b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80171b6:	6803      	ldr	r3, [r0, #0]
 80171b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80171ba:	4798      	blx	r3
 80171bc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80171c0:	46b9      	mov	r9, r7
 80171c2:	d01c      	beq.n	80171fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 80171c4:	f010 0f04 	tst.w	r0, #4
 80171c8:	d01d      	beq.n	8017206 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80171ca:	f8d9 0000 	ldr.w	r0, [r9]
 80171ce:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80171d2:	6801      	ldr	r1, [r0, #0]
 80171d4:	f8cd b00c 	str.w	fp, [sp, #12]
 80171d8:	2700      	movs	r7, #0
 80171da:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80171de:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80171e2:	9402      	str	r4, [sp, #8]
 80171e4:	b2ad      	uxth	r5, r5
 80171e6:	fa1f f488 	uxth.w	r4, r8
 80171ea:	9501      	str	r5, [sp, #4]
 80171ec:	9400      	str	r4, [sp, #0]
 80171ee:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80171f0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80171f4:	4631      	mov	r1, r6
 80171f6:	47a0      	blx	r4
 80171f8:	b00b      	add	sp, #44	; 0x2c
 80171fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171fe:	b914      	cbnz	r4, 8017206 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017200:	f010 0f01 	tst.w	r0, #1
 8017204:	e7e0      	b.n	80171c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8017206:	f8d9 0000 	ldr.w	r0, [r9]
 801720a:	6803      	ldr	r3, [r0, #0]
 801720c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801720e:	4798      	blx	r3
 8017210:	4b44      	ldr	r3, [pc, #272]	; (8017324 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8017212:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8017216:	881a      	ldrh	r2, [r3, #0]
 8017218:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801721c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017220:	fb02 1404 	mla	r4, r2, r4, r1
 8017224:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017228:	469a      	mov	sl, r3
 801722a:	fb05 f502 	mul.w	r5, r5, r2
 801722e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8017232:	d059      	beq.n	80172e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017234:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8017238:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801723c:	fa1f f28b 	uxth.w	r2, fp
 8017240:	fa1f f989 	uxth.w	r9, r9
 8017244:	469e      	mov	lr, r3
 8017246:	42ac      	cmp	r4, r5
 8017248:	d264      	bcs.n	8017314 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801724a:	eb04 0a07 	add.w	sl, r4, r7
 801724e:	4554      	cmp	r4, sl
 8017250:	d23d      	bcs.n	80172ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017252:	8821      	ldrh	r1, [r4, #0]
 8017254:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017258:	1208      	asrs	r0, r1, #8
 801725a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801725e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017262:	fb10 f009 	smulbb	r0, r0, r9
 8017266:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801726a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801726e:	00c9      	lsls	r1, r1, #3
 8017270:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017274:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017278:	10d8      	asrs	r0, r3, #3
 801727a:	b2c9      	uxtb	r1, r1
 801727c:	00db      	lsls	r3, r3, #3
 801727e:	fa1f fc8c 	uxth.w	ip, ip
 8017282:	fb1b fb09 	smulbb	fp, fp, r9
 8017286:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801728a:	b2db      	uxtb	r3, r3
 801728c:	fb11 f109 	smulbb	r1, r1, r9
 8017290:	fb00 b002 	mla	r0, r0, r2, fp
 8017294:	fb03 1302 	mla	r3, r3, r2, r1
 8017298:	f10c 0b01 	add.w	fp, ip, #1
 801729c:	b29b      	uxth	r3, r3
 801729e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80172a2:	b280      	uxth	r0, r0
 80172a4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80172a8:	f103 0c01 	add.w	ip, r3, #1
 80172ac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80172b0:	1c43      	adds	r3, r0, #1
 80172b2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80172b6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80172ba:	0940      	lsrs	r0, r0, #5
 80172bc:	ea4c 0c0b 	orr.w	ip, ip, fp
 80172c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80172c4:	ea4c 0c00 	orr.w	ip, ip, r0
 80172c8:	f824 cb02 	strh.w	ip, [r4], #2
 80172cc:	e7bf      	b.n	801724e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80172ce:	f8be 3000 	ldrh.w	r3, [lr]
 80172d2:	eba3 0308 	sub.w	r3, r3, r8
 80172d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80172da:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80172de:	eba3 0308 	sub.w	r3, r3, r8
 80172e2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80172e6:	e7ae      	b.n	8017246 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80172e8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80172ec:	f8d9 0000 	ldr.w	r0, [r9]
 80172f0:	42ac      	cmp	r4, r5
 80172f2:	6803      	ldr	r3, [r0, #0]
 80172f4:	d20e      	bcs.n	8017314 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80172f6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80172fa:	4632      	mov	r2, r6
 80172fc:	463b      	mov	r3, r7
 80172fe:	4621      	mov	r1, r4
 8017300:	47c0      	blx	r8
 8017302:	f8ba 3000 	ldrh.w	r3, [sl]
 8017306:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801730a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801730e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017312:	e7eb      	b.n	80172ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8017314:	4b02      	ldr	r3, [pc, #8]	; (8017320 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017316:	6818      	ldr	r0, [r3, #0]
 8017318:	6803      	ldr	r3, [r0, #0]
 801731a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801731c:	4798      	blx	r3
 801731e:	e76b      	b.n	80171f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017320:	200157f4 	.word	0x200157f4
 8017324:	200157ee 	.word	0x200157ee

08017328 <_ZN8touchgfx8LCD16bppD0Ev>:
 8017328:	b510      	push	{r4, lr}
 801732a:	2178      	movs	r1, #120	; 0x78
 801732c:	4604      	mov	r4, r0
 801732e:	f009 fad3 	bl	80208d8 <_ZdlPvj>
 8017332:	4620      	mov	r0, r4
 8017334:	bd10      	pop	{r4, pc}

08017336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017336:	b510      	push	{r4, lr}
 8017338:	2104      	movs	r1, #4
 801733a:	4604      	mov	r4, r0
 801733c:	f009 facc 	bl	80208d8 <_ZdlPvj>
 8017340:	4620      	mov	r0, r4
 8017342:	bd10      	pop	{r4, pc}

08017344 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017344:	b510      	push	{r4, lr}
 8017346:	2104      	movs	r1, #4
 8017348:	4604      	mov	r4, r0
 801734a:	f009 fac5 	bl	80208d8 <_ZdlPvj>
 801734e:	4620      	mov	r0, r4
 8017350:	bd10      	pop	{r4, pc}

08017352 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017352:	b510      	push	{r4, lr}
 8017354:	2104      	movs	r1, #4
 8017356:	4604      	mov	r4, r0
 8017358:	f009 fabe 	bl	80208d8 <_ZdlPvj>
 801735c:	4620      	mov	r0, r4
 801735e:	bd10      	pop	{r4, pc}

08017360 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017360:	b510      	push	{r4, lr}
 8017362:	2104      	movs	r1, #4
 8017364:	4604      	mov	r4, r0
 8017366:	f009 fab7 	bl	80208d8 <_ZdlPvj>
 801736a:	4620      	mov	r0, r4
 801736c:	bd10      	pop	{r4, pc}

0801736e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801736e:	b510      	push	{r4, lr}
 8017370:	2104      	movs	r1, #4
 8017372:	4604      	mov	r4, r0
 8017374:	f009 fab0 	bl	80208d8 <_ZdlPvj>
 8017378:	4620      	mov	r0, r4
 801737a:	bd10      	pop	{r4, pc}

0801737c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801737c:	b510      	push	{r4, lr}
 801737e:	2104      	movs	r1, #4
 8017380:	4604      	mov	r4, r0
 8017382:	f009 faa9 	bl	80208d8 <_ZdlPvj>
 8017386:	4620      	mov	r0, r4
 8017388:	bd10      	pop	{r4, pc}

0801738a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801738a:	b510      	push	{r4, lr}
 801738c:	2104      	movs	r1, #4
 801738e:	4604      	mov	r4, r0
 8017390:	f009 faa2 	bl	80208d8 <_ZdlPvj>
 8017394:	4620      	mov	r0, r4
 8017396:	bd10      	pop	{r4, pc}

08017398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017398:	b510      	push	{r4, lr}
 801739a:	2104      	movs	r1, #4
 801739c:	4604      	mov	r4, r0
 801739e:	f009 fa9b 	bl	80208d8 <_ZdlPvj>
 80173a2:	4620      	mov	r0, r4
 80173a4:	bd10      	pop	{r4, pc}

080173a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80173a6:	b510      	push	{r4, lr}
 80173a8:	2104      	movs	r1, #4
 80173aa:	4604      	mov	r4, r0
 80173ac:	f009 fa94 	bl	80208d8 <_ZdlPvj>
 80173b0:	4620      	mov	r0, r4
 80173b2:	bd10      	pop	{r4, pc}

080173b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80173b4:	b510      	push	{r4, lr}
 80173b6:	2104      	movs	r1, #4
 80173b8:	4604      	mov	r4, r0
 80173ba:	f009 fa8d 	bl	80208d8 <_ZdlPvj>
 80173be:	4620      	mov	r0, r4
 80173c0:	bd10      	pop	{r4, pc}

080173c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80173c2:	b510      	push	{r4, lr}
 80173c4:	2104      	movs	r1, #4
 80173c6:	4604      	mov	r4, r0
 80173c8:	f009 fa86 	bl	80208d8 <_ZdlPvj>
 80173cc:	4620      	mov	r0, r4
 80173ce:	bd10      	pop	{r4, pc}

080173d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80173d0:	b510      	push	{r4, lr}
 80173d2:	2104      	movs	r1, #4
 80173d4:	4604      	mov	r4, r0
 80173d6:	f009 fa7f 	bl	80208d8 <_ZdlPvj>
 80173da:	4620      	mov	r0, r4
 80173dc:	bd10      	pop	{r4, pc}

080173de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80173de:	b510      	push	{r4, lr}
 80173e0:	2104      	movs	r1, #4
 80173e2:	4604      	mov	r4, r0
 80173e4:	f009 fa78 	bl	80208d8 <_ZdlPvj>
 80173e8:	4620      	mov	r0, r4
 80173ea:	bd10      	pop	{r4, pc}

080173ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80173ec:	b510      	push	{r4, lr}
 80173ee:	2104      	movs	r1, #4
 80173f0:	4604      	mov	r4, r0
 80173f2:	f009 fa71 	bl	80208d8 <_ZdlPvj>
 80173f6:	4620      	mov	r0, r4
 80173f8:	bd10      	pop	{r4, pc}

080173fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80173fa:	b510      	push	{r4, lr}
 80173fc:	2104      	movs	r1, #4
 80173fe:	4604      	mov	r4, r0
 8017400:	f009 fa6a 	bl	80208d8 <_ZdlPvj>
 8017404:	4620      	mov	r0, r4
 8017406:	bd10      	pop	{r4, pc}

08017408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017408:	b510      	push	{r4, lr}
 801740a:	2104      	movs	r1, #4
 801740c:	4604      	mov	r4, r0
 801740e:	f009 fa63 	bl	80208d8 <_ZdlPvj>
 8017412:	4620      	mov	r0, r4
 8017414:	bd10      	pop	{r4, pc}

08017416 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017416:	b510      	push	{r4, lr}
 8017418:	2104      	movs	r1, #4
 801741a:	4604      	mov	r4, r0
 801741c:	f009 fa5c 	bl	80208d8 <_ZdlPvj>
 8017420:	4620      	mov	r0, r4
 8017422:	bd10      	pop	{r4, pc}

08017424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017424:	b510      	push	{r4, lr}
 8017426:	2104      	movs	r1, #4
 8017428:	4604      	mov	r4, r0
 801742a:	f009 fa55 	bl	80208d8 <_ZdlPvj>
 801742e:	4620      	mov	r0, r4
 8017430:	bd10      	pop	{r4, pc}

08017432 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017432:	b510      	push	{r4, lr}
 8017434:	2104      	movs	r1, #4
 8017436:	4604      	mov	r4, r0
 8017438:	f009 fa4e 	bl	80208d8 <_ZdlPvj>
 801743c:	4620      	mov	r0, r4
 801743e:	bd10      	pop	{r4, pc}

08017440 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017440:	b510      	push	{r4, lr}
 8017442:	2104      	movs	r1, #4
 8017444:	4604      	mov	r4, r0
 8017446:	f009 fa47 	bl	80208d8 <_ZdlPvj>
 801744a:	4620      	mov	r0, r4
 801744c:	bd10      	pop	{r4, pc}

0801744e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801744e:	b510      	push	{r4, lr}
 8017450:	2104      	movs	r1, #4
 8017452:	4604      	mov	r4, r0
 8017454:	f009 fa40 	bl	80208d8 <_ZdlPvj>
 8017458:	4620      	mov	r0, r4
 801745a:	bd10      	pop	{r4, pc}

0801745c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801745c:	b510      	push	{r4, lr}
 801745e:	2104      	movs	r1, #4
 8017460:	4604      	mov	r4, r0
 8017462:	f009 fa39 	bl	80208d8 <_ZdlPvj>
 8017466:	4620      	mov	r0, r4
 8017468:	bd10      	pop	{r4, pc}

0801746a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801746a:	b510      	push	{r4, lr}
 801746c:	2104      	movs	r1, #4
 801746e:	4604      	mov	r4, r0
 8017470:	f009 fa32 	bl	80208d8 <_ZdlPvj>
 8017474:	4620      	mov	r0, r4
 8017476:	bd10      	pop	{r4, pc}

08017478 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017478:	b510      	push	{r4, lr}
 801747a:	2104      	movs	r1, #4
 801747c:	4604      	mov	r4, r0
 801747e:	f009 fa2b 	bl	80208d8 <_ZdlPvj>
 8017482:	4620      	mov	r0, r4
 8017484:	bd10      	pop	{r4, pc}

08017486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017486:	b510      	push	{r4, lr}
 8017488:	2104      	movs	r1, #4
 801748a:	4604      	mov	r4, r0
 801748c:	f009 fa24 	bl	80208d8 <_ZdlPvj>
 8017490:	4620      	mov	r0, r4
 8017492:	bd10      	pop	{r4, pc}

08017494 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017494:	b510      	push	{r4, lr}
 8017496:	2104      	movs	r1, #4
 8017498:	4604      	mov	r4, r0
 801749a:	f009 fa1d 	bl	80208d8 <_ZdlPvj>
 801749e:	4620      	mov	r0, r4
 80174a0:	bd10      	pop	{r4, pc}

080174a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80174a2:	b510      	push	{r4, lr}
 80174a4:	2104      	movs	r1, #4
 80174a6:	4604      	mov	r4, r0
 80174a8:	f009 fa16 	bl	80208d8 <_ZdlPvj>
 80174ac:	4620      	mov	r0, r4
 80174ae:	bd10      	pop	{r4, pc}

080174b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80174b0:	b510      	push	{r4, lr}
 80174b2:	2104      	movs	r1, #4
 80174b4:	4604      	mov	r4, r0
 80174b6:	f009 fa0f 	bl	80208d8 <_ZdlPvj>
 80174ba:	4620      	mov	r0, r4
 80174bc:	bd10      	pop	{r4, pc}
	...

080174c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80174c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174c4:	b091      	sub	sp, #68	; 0x44
 80174c6:	469b      	mov	fp, r3
 80174c8:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80174cc:	4616      	mov	r6, r2
 80174ce:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80174d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80174d6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80174da:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80174de:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80174e2:	4604      	mov	r4, r0
 80174e4:	460d      	mov	r5, r1
 80174e6:	4640      	mov	r0, r8
 80174e8:	4659      	mov	r1, fp
 80174ea:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80174ee:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80174f2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80174f6:	f7f3 fd41 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 80174fa:	4631      	mov	r1, r6
 80174fc:	4640      	mov	r0, r8
 80174fe:	f7f3 fd3d 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 8017502:	4b74      	ldr	r3, [pc, #464]	; (80176d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017504:	8818      	ldrh	r0, [r3, #0]
 8017506:	4b74      	ldr	r3, [pc, #464]	; (80176d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017508:	8819      	ldrh	r1, [r3, #0]
 801750a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801750e:	2b00      	cmp	r3, #0
 8017510:	b202      	sxth	r2, r0
 8017512:	b20e      	sxth	r6, r1
 8017514:	da07      	bge.n	8017526 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017516:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801751a:	4463      	add	r3, ip
 801751c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8017520:	2300      	movs	r3, #0
 8017522:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8017526:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801752a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801752e:	1ad2      	subs	r2, r2, r3
 8017530:	4594      	cmp	ip, r2
 8017532:	bfc4      	itt	gt
 8017534:	1ac2      	subgt	r2, r0, r3
 8017536:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801753a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801753e:	2a00      	cmp	r2, #0
 8017540:	da07      	bge.n	8017552 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017542:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017546:	4462      	add	r2, ip
 8017548:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801754c:	2200      	movs	r2, #0
 801754e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017552:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017556:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801755a:	eba6 060a 	sub.w	r6, r6, sl
 801755e:	42b2      	cmp	r2, r6
 8017560:	bfc4      	itt	gt
 8017562:	eba1 020a 	subgt.w	r2, r1, sl
 8017566:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801756a:	4a5c      	ldr	r2, [pc, #368]	; (80176dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801756c:	7812      	ldrb	r2, [r2, #0]
 801756e:	b9a2      	cbnz	r2, 801759a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017570:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017574:	4286      	cmp	r6, r0
 8017576:	4640      	mov	r0, r8
 8017578:	9303      	str	r3, [sp, #12]
 801757a:	bf14      	ite	ne
 801757c:	2600      	movne	r6, #0
 801757e:	2601      	moveq	r6, #1
 8017580:	f7f3 fd3f 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017584:	9b03      	ldr	r3, [sp, #12]
 8017586:	b160      	cbz	r0, 80175a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017588:	2300      	movs	r3, #0
 801758a:	8023      	strh	r3, [r4, #0]
 801758c:	8063      	strh	r3, [r4, #2]
 801758e:	80a3      	strh	r3, [r4, #4]
 8017590:	4620      	mov	r0, r4
 8017592:	80e3      	strh	r3, [r4, #6]
 8017594:	b011      	add	sp, #68	; 0x44
 8017596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801759a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801759e:	428e      	cmp	r6, r1
 80175a0:	e7e9      	b.n	8017576 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80175a2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80175a6:	9205      	str	r2, [sp, #20]
 80175a8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80175ac:	9206      	str	r2, [sp, #24]
 80175ae:	f8bb 2000 	ldrh.w	r2, [fp]
 80175b2:	900e      	str	r0, [sp, #56]	; 0x38
 80175b4:	1a9b      	subs	r3, r3, r2
 80175b6:	b21b      	sxth	r3, r3
 80175b8:	9303      	str	r3, [sp, #12]
 80175ba:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80175be:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80175c2:	ebaa 0a03 	sub.w	sl, sl, r3
 80175c6:	fa0f f38a 	sxth.w	r3, sl
 80175ca:	9304      	str	r3, [sp, #16]
 80175cc:	9b03      	ldr	r3, [sp, #12]
 80175ce:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80175d2:	9b04      	ldr	r3, [sp, #16]
 80175d4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80175d8:	9b05      	ldr	r3, [sp, #20]
 80175da:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80175de:	a90e      	add	r1, sp, #56	; 0x38
 80175e0:	9b06      	ldr	r3, [sp, #24]
 80175e2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80175e6:	a80c      	add	r0, sp, #48	; 0x30
 80175e8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80175ec:	f7f9 fcc2 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80175f0:	4640      	mov	r0, r8
 80175f2:	f7f9 fc97 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80175f6:	a80e      	add	r0, sp, #56	; 0x38
 80175f8:	f7f9 fc94 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80175fc:	4b38      	ldr	r3, [pc, #224]	; (80176e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80175fe:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8017602:	881b      	ldrh	r3, [r3, #0]
 8017604:	9307      	str	r3, [sp, #28]
 8017606:	682b      	ldr	r3, [r5, #0]
 8017608:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80176e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801760c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801760e:	4628      	mov	r0, r5
 8017610:	4798      	blx	r3
 8017612:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8017616:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801761a:	4681      	mov	r9, r0
 801761c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017620:	f8db 0000 	ldr.w	r0, [fp]
 8017624:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8017626:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801762a:	6803      	ldr	r3, [r0, #0]
 801762c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801762e:	4798      	blx	r3
 8017630:	4607      	mov	r7, r0
 8017632:	f8db 0000 	ldr.w	r0, [fp]
 8017636:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801763a:	6803      	ldr	r3, [r0, #0]
 801763c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017640:	9109      	str	r1, [sp, #36]	; 0x24
 8017642:	9208      	str	r2, [sp, #32]
 8017644:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017646:	4798      	blx	r3
 8017648:	f010 0f01 	tst.w	r0, #1
 801764c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017650:	d012      	beq.n	8017678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017652:	f8db 0000 	ldr.w	r0, [fp]
 8017656:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801765a:	6803      	ldr	r3, [r0, #0]
 801765c:	9200      	str	r2, [sp, #0]
 801765e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017660:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017664:	462b      	mov	r3, r5
 8017666:	47b0      	blx	r6
 8017668:	9b03      	ldr	r3, [sp, #12]
 801766a:	8023      	strh	r3, [r4, #0]
 801766c:	9b04      	ldr	r3, [sp, #16]
 801766e:	8063      	strh	r3, [r4, #2]
 8017670:	9b05      	ldr	r3, [sp, #20]
 8017672:	80a3      	strh	r3, [r4, #4]
 8017674:	9b06      	ldr	r3, [sp, #24]
 8017676:	e78b      	b.n	8017590 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017678:	fb09 f202 	mul.w	r2, r9, r2
 801767c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017680:	440f      	add	r7, r1
 8017682:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017686:	b166      	cbz	r6, 80176a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017688:	9a07      	ldr	r2, [sp, #28]
 801768a:	4592      	cmp	sl, r2
 801768c:	d109      	bne.n	80176a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801768e:	f8db 0000 	ldr.w	r0, [fp]
 8017692:	6802      	ldr	r2, [r0, #0]
 8017694:	fb09 f303 	mul.w	r3, r9, r3
 8017698:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801769a:	4629      	mov	r1, r5
 801769c:	463a      	mov	r2, r7
 801769e:	47b0      	blx	r6
 80176a0:	e7e2      	b.n	8017668 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80176a2:	fb0a f303 	mul.w	r3, sl, r3
 80176a6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80176e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80176aa:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80176ae:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80176b2:	4545      	cmp	r5, r8
 80176b4:	d2d8      	bcs.n	8017668 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80176b6:	f8db 0000 	ldr.w	r0, [fp]
 80176ba:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80176be:	6802      	ldr	r2, [r0, #0]
 80176c0:	4629      	mov	r1, r5
 80176c2:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80176c6:	005b      	lsls	r3, r3, #1
 80176c8:	463a      	mov	r2, r7
 80176ca:	47d0      	blx	sl
 80176cc:	444f      	add	r7, r9
 80176ce:	4435      	add	r5, r6
 80176d0:	e7ef      	b.n	80176b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80176d2:	bf00      	nop
 80176d4:	200157e8 	.word	0x200157e8
 80176d8:	200157ea 	.word	0x200157ea
 80176dc:	200157ec 	.word	0x200157ec
 80176e0:	200157ee 	.word	0x200157ee
 80176e4:	200157f4 	.word	0x200157f4

080176e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80176e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80176ea:	4606      	mov	r6, r0
 80176ec:	b087      	sub	sp, #28
 80176ee:	460c      	mov	r4, r1
 80176f0:	4617      	mov	r7, r2
 80176f2:	461d      	mov	r5, r3
 80176f4:	b333      	cbz	r3, 8017744 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80176f6:	4608      	mov	r0, r1
 80176f8:	f7f3 fc83 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 80176fc:	bb10      	cbnz	r0, 8017744 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80176fe:	6820      	ldr	r0, [r4, #0]
 8017700:	6861      	ldr	r1, [r4, #4]
 8017702:	4c1c      	ldr	r4, [pc, #112]	; (8017774 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017704:	ab04      	add	r3, sp, #16
 8017706:	c303      	stmia	r3!, {r0, r1}
 8017708:	a804      	add	r0, sp, #16
 801770a:	f7f9 fc0b 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801770e:	6820      	ldr	r0, [r4, #0]
 8017710:	6803      	ldr	r3, [r0, #0]
 8017712:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017714:	4798      	blx	r3
 8017716:	2dff      	cmp	r5, #255	; 0xff
 8017718:	d016      	beq.n	8017748 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801771a:	f010 0f08 	tst.w	r0, #8
 801771e:	6820      	ldr	r0, [r4, #0]
 8017720:	d015      	beq.n	801774e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017722:	2400      	movs	r4, #0
 8017724:	6801      	ldr	r1, [r0, #0]
 8017726:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801772a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801772e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017732:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017736:	9401      	str	r4, [sp, #4]
 8017738:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801773c:	9400      	str	r4, [sp, #0]
 801773e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017740:	4639      	mov	r1, r7
 8017742:	47a0      	blx	r4
 8017744:	b007      	add	sp, #28
 8017746:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017748:	f010 0f02 	tst.w	r0, #2
 801774c:	e7e7      	b.n	801771e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801774e:	6803      	ldr	r3, [r0, #0]
 8017750:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017752:	4798      	blx	r3
 8017754:	4b08      	ldr	r3, [pc, #32]	; (8017778 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017756:	881a      	ldrh	r2, [r3, #0]
 8017758:	6833      	ldr	r3, [r6, #0]
 801775a:	e9cd 7500 	strd	r7, r5, [sp]
 801775e:	4601      	mov	r1, r0
 8017760:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8017762:	4630      	mov	r0, r6
 8017764:	ab04      	add	r3, sp, #16
 8017766:	47a8      	blx	r5
 8017768:	6820      	ldr	r0, [r4, #0]
 801776a:	6803      	ldr	r3, [r0, #0]
 801776c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801776e:	4798      	blx	r3
 8017770:	e7e8      	b.n	8017744 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017772:	bf00      	nop
 8017774:	200157f4 	.word	0x200157f4
 8017778:	200157ee 	.word	0x200157ee

0801777c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801777c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017780:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017784:	9e08      	ldr	r6, [sp, #32]
 8017786:	4688      	mov	r8, r1
 8017788:	4614      	mov	r4, r2
 801778a:	461d      	mov	r5, r3
 801778c:	2f00      	cmp	r7, #0
 801778e:	f000 80a9 	beq.w	80178e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017792:	4618      	mov	r0, r3
 8017794:	f7f3 fc35 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017798:	2800      	cmp	r0, #0
 801779a:	f040 80a3 	bne.w	80178e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801779e:	f9b5 1000 	ldrsh.w	r1, [r5]
 80177a2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80177a6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80177aa:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80177ae:	fb04 1303 	mla	r3, r4, r3, r1
 80177b2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80177b6:	4365      	muls	r5, r4
 80177b8:	2fff      	cmp	r7, #255	; 0xff
 80177ba:	eba4 0200 	sub.w	r2, r4, r0
 80177be:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80177c2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80177c6:	d04a      	beq.n	801785e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80177c8:	b2bc      	uxth	r4, r7
 80177ca:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80177ce:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80177d2:	fa5f f788 	uxtb.w	r7, r8
 80177d6:	b2f3      	uxtb	r3, r6
 80177d8:	0040      	lsls	r0, r0, #1
 80177da:	fb0e fe04 	mul.w	lr, lr, r4
 80177de:	4367      	muls	r7, r4
 80177e0:	4363      	muls	r3, r4
 80177e2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80177e6:	fa1f fc8c 	uxth.w	ip, ip
 80177ea:	42a9      	cmp	r1, r5
 80177ec:	d27a      	bcs.n	80178e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80177ee:	eb01 0900 	add.w	r9, r1, r0
 80177f2:	4549      	cmp	r1, r9
 80177f4:	d231      	bcs.n	801785a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80177f6:	880a      	ldrh	r2, [r1, #0]
 80177f8:	1214      	asrs	r4, r2, #8
 80177fa:	10d6      	asrs	r6, r2, #3
 80177fc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017800:	00d2      	lsls	r2, r2, #3
 8017802:	b2d2      	uxtb	r2, r2
 8017804:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017808:	fb14 f40c 	smulbb	r4, r4, ip
 801780c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017810:	4474      	add	r4, lr
 8017812:	fb12 f20c 	smulbb	r2, r2, ip
 8017816:	b2a4      	uxth	r4, r4
 8017818:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801781c:	441a      	add	r2, r3
 801781e:	b292      	uxth	r2, r2
 8017820:	f104 0a01 	add.w	sl, r4, #1
 8017824:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017828:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801782c:	fb16 f60c 	smulbb	r6, r6, ip
 8017830:	f102 0a01 	add.w	sl, r2, #1
 8017834:	443e      	add	r6, r7
 8017836:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801783a:	b2b6      	uxth	r6, r6
 801783c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017840:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017844:	4322      	orrs	r2, r4
 8017846:	1c74      	adds	r4, r6, #1
 8017848:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801784c:	0976      	lsrs	r6, r6, #5
 801784e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017852:	4332      	orrs	r2, r6
 8017854:	f821 2b02 	strh.w	r2, [r1], #2
 8017858:	e7cb      	b.n	80177f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801785a:	4441      	add	r1, r8
 801785c:	e7c5      	b.n	80177ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801785e:	4f22      	ldr	r7, [pc, #136]	; (80178e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017860:	0973      	lsrs	r3, r6, #5
 8017862:	ea08 0707 	and.w	r7, r8, r7
 8017866:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801786a:	433b      	orrs	r3, r7
 801786c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017870:	4333      	orrs	r3, r6
 8017872:	07e7      	lsls	r7, r4, #31
 8017874:	b29b      	uxth	r3, r3
 8017876:	d50b      	bpl.n	8017890 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017878:	0040      	lsls	r0, r0, #1
 801787a:	0052      	lsls	r2, r2, #1
 801787c:	42a9      	cmp	r1, r5
 801787e:	d231      	bcs.n	80178e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017880:	180c      	adds	r4, r1, r0
 8017882:	42a1      	cmp	r1, r4
 8017884:	d202      	bcs.n	801788c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017886:	f821 3b02 	strh.w	r3, [r1], #2
 801788a:	e7fa      	b.n	8017882 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801788c:	4411      	add	r1, r2
 801788e:	e7f5      	b.n	801787c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017890:	078e      	lsls	r6, r1, #30
 8017892:	d008      	beq.n	80178a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017894:	0066      	lsls	r6, r4, #1
 8017896:	460a      	mov	r2, r1
 8017898:	42aa      	cmp	r2, r5
 801789a:	d202      	bcs.n	80178a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801789c:	8013      	strh	r3, [r2, #0]
 801789e:	4432      	add	r2, r6
 80178a0:	e7fa      	b.n	8017898 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80178a2:	3102      	adds	r1, #2
 80178a4:	3801      	subs	r0, #1
 80178a6:	07c2      	lsls	r2, r0, #31
 80178a8:	d50b      	bpl.n	80178c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80178aa:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80178ae:	3a01      	subs	r2, #1
 80178b0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80178b4:	0066      	lsls	r6, r4, #1
 80178b6:	42aa      	cmp	r2, r5
 80178b8:	d202      	bcs.n	80178c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80178ba:	8013      	strh	r3, [r2, #0]
 80178bc:	4432      	add	r2, r6
 80178be:	e7fa      	b.n	80178b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80178c0:	3801      	subs	r0, #1
 80178c2:	b178      	cbz	r0, 80178e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80178c4:	1040      	asrs	r0, r0, #1
 80178c6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80178ca:	0080      	lsls	r0, r0, #2
 80178cc:	0064      	lsls	r4, r4, #1
 80178ce:	42a9      	cmp	r1, r5
 80178d0:	d208      	bcs.n	80178e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80178d2:	180e      	adds	r6, r1, r0
 80178d4:	460a      	mov	r2, r1
 80178d6:	42b2      	cmp	r2, r6
 80178d8:	d202      	bcs.n	80178e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80178da:	f842 3b04 	str.w	r3, [r2], #4
 80178de:	e7fa      	b.n	80178d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80178e0:	4421      	add	r1, r4
 80178e2:	e7f4      	b.n	80178ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80178e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80178e8:	00fff800 	.word	0x00fff800

080178ec <_ZN8touchgfx8LCD16bppC1Ev>:
 80178ec:	2200      	movs	r2, #0
 80178ee:	4910      	ldr	r1, [pc, #64]	; (8017930 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80178f0:	6042      	str	r2, [r0, #4]
 80178f2:	6001      	str	r1, [r0, #0]
 80178f4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80178f8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80178fc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8017900:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017904:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017908:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801790c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8017910:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017914:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017918:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801791c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8017920:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017924:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017928:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801792c:	4770      	bx	lr
 801792e:	bf00      	nop
 8017930:	08024894 	.word	0x08024894

08017934 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017938:	460d      	mov	r5, r1
 801793a:	b08d      	sub	sp, #52	; 0x34
 801793c:	4604      	mov	r4, r0
 801793e:	6808      	ldr	r0, [r1, #0]
 8017940:	6849      	ldr	r1, [r1, #4]
 8017942:	4699      	mov	r9, r3
 8017944:	ab08      	add	r3, sp, #32
 8017946:	c303      	stmia	r3!, {r0, r1}
 8017948:	6810      	ldr	r0, [r2, #0]
 801794a:	6851      	ldr	r1, [r2, #4]
 801794c:	ab0a      	add	r3, sp, #40	; 0x28
 801794e:	c303      	stmia	r3!, {r0, r1}
 8017950:	a808      	add	r0, sp, #32
 8017952:	f7f9 fae7 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017956:	4629      	mov	r1, r5
 8017958:	a80a      	add	r0, sp, #40	; 0x28
 801795a:	f7f9 fb0b 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801795e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017962:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017966:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801796a:	4d63      	ldr	r5, [pc, #396]	; (8017af8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801796c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017970:	6828      	ldr	r0, [r5, #0]
 8017972:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017976:	fb11 2103 	smlabb	r1, r1, r3, r2
 801797a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801797e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017982:	440a      	add	r2, r1
 8017984:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017988:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801798c:	4413      	add	r3, r2
 801798e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017992:	6803      	ldr	r3, [r0, #0]
 8017994:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017996:	4798      	blx	r3
 8017998:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801799c:	d119      	bne.n	80179d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801799e:	f010 0f20 	tst.w	r0, #32
 80179a2:	6828      	ldr	r0, [r5, #0]
 80179a4:	d018      	beq.n	80179d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80179a6:	2500      	movs	r5, #0
 80179a8:	6801      	ldr	r1, [r0, #0]
 80179aa:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80179ae:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80179b2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80179b6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 80179ba:	9502      	str	r5, [sp, #8]
 80179bc:	b2b6      	uxth	r6, r6
 80179be:	fa1f f588 	uxth.w	r5, r8
 80179c2:	9601      	str	r6, [sp, #4]
 80179c4:	9500      	str	r5, [sp, #0]
 80179c6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80179c8:	4621      	mov	r1, r4
 80179ca:	47a8      	blx	r5
 80179cc:	b00d      	add	sp, #52	; 0x34
 80179ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179d2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80179d6:	e7e4      	b.n	80179a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80179d8:	6803      	ldr	r3, [r0, #0]
 80179da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80179dc:	4798      	blx	r3
 80179de:	4947      	ldr	r1, [pc, #284]	; (8017afc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80179e0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80179e4:	880b      	ldrh	r3, [r1, #0]
 80179e6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80179ea:	fb03 5202 	mla	r2, r3, r2, r5
 80179ee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80179f2:	4373      	muls	r3, r6
 80179f4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80179f8:	9307      	str	r3, [sp, #28]
 80179fa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80179fe:	9306      	str	r3, [sp, #24]
 8017a00:	468a      	mov	sl, r1
 8017a02:	9b07      	ldr	r3, [sp, #28]
 8017a04:	4298      	cmp	r0, r3
 8017a06:	d270      	bcs.n	8017aea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017a08:	9b06      	ldr	r3, [sp, #24]
 8017a0a:	4621      	mov	r1, r4
 8017a0c:	eb00 0b03 	add.w	fp, r0, r3
 8017a10:	4558      	cmp	r0, fp
 8017a12:	d25d      	bcs.n	8017ad0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017a14:	f851 4b04 	ldr.w	r4, [r1], #4
 8017a18:	0e23      	lsrs	r3, r4, #24
 8017a1a:	d014      	beq.n	8017a46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017a1c:	2bff      	cmp	r3, #255	; 0xff
 8017a1e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017a22:	d112      	bne.n	8017a4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017a24:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017a28:	d10f      	bne.n	8017a4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017a2a:	0963      	lsrs	r3, r4, #5
 8017a2c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017a30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017a34:	f02c 0c07 	bic.w	ip, ip, #7
 8017a38:	ea43 0c0c 	orr.w	ip, r3, ip
 8017a3c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017a40:	ea4c 0404 	orr.w	r4, ip, r4
 8017a44:	8004      	strh	r4, [r0, #0]
 8017a46:	3002      	adds	r0, #2
 8017a48:	e7e2      	b.n	8017a10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017a4a:	fb09 f303 	mul.w	r3, r9, r3
 8017a4e:	8807      	ldrh	r7, [r0, #0]
 8017a50:	1c5a      	adds	r2, r3, #1
 8017a52:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017a56:	1212      	asrs	r2, r2, #8
 8017a58:	123e      	asrs	r6, r7, #8
 8017a5a:	b293      	uxth	r3, r2
 8017a5c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017a60:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017a64:	43d2      	mvns	r2, r2
 8017a66:	b2d2      	uxtb	r2, r2
 8017a68:	10fd      	asrs	r5, r7, #3
 8017a6a:	fb1e fe03 	smulbb	lr, lr, r3
 8017a6e:	00ff      	lsls	r7, r7, #3
 8017a70:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017a74:	fb06 e602 	mla	r6, r6, r2, lr
 8017a78:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017a7c:	b2ff      	uxtb	r7, r7
 8017a7e:	fa5f fc8c 	uxtb.w	ip, ip
 8017a82:	b2e4      	uxtb	r4, r4
 8017a84:	b2b6      	uxth	r6, r6
 8017a86:	fb1c fc03 	smulbb	ip, ip, r3
 8017a8a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017a8e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017a92:	fb14 f403 	smulbb	r4, r4, r3
 8017a96:	fb05 c502 	mla	r5, r5, r2, ip
 8017a9a:	f106 0e01 	add.w	lr, r6, #1
 8017a9e:	fb07 4702 	mla	r7, r7, r2, r4
 8017aa2:	b2ad      	uxth	r5, r5
 8017aa4:	b2bf      	uxth	r7, r7
 8017aa6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017aaa:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8017aae:	f105 0c01 	add.w	ip, r5, #1
 8017ab2:	1c7e      	adds	r6, r7, #1
 8017ab4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017ab8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017abc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017ac0:	096d      	lsrs	r5, r5, #5
 8017ac2:	ea46 060e 	orr.w	r6, r6, lr
 8017ac6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017aca:	432e      	orrs	r6, r5
 8017acc:	8006      	strh	r6, [r0, #0]
 8017ace:	e7ba      	b.n	8017a46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017ad0:	f8ba 3000 	ldrh.w	r3, [sl]
 8017ad4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8017ad8:	eba3 0308 	sub.w	r3, r3, r8
 8017adc:	eba4 0408 	sub.w	r4, r4, r8
 8017ae0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ae4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017ae8:	e78b      	b.n	8017a02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017aea:	4b03      	ldr	r3, [pc, #12]	; (8017af8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017aec:	6818      	ldr	r0, [r3, #0]
 8017aee:	6803      	ldr	r3, [r0, #0]
 8017af0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017af2:	4798      	blx	r3
 8017af4:	e76a      	b.n	80179cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017af6:	bf00      	nop
 8017af8:	200157f4 	.word	0x200157f4
 8017afc:	200157ee 	.word	0x200157ee

08017b00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017b00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017b04:	460c      	mov	r4, r1
 8017b06:	b085      	sub	sp, #20
 8017b08:	6810      	ldr	r0, [r2, #0]
 8017b0a:	6851      	ldr	r1, [r2, #4]
 8017b0c:	466d      	mov	r5, sp
 8017b0e:	c503      	stmia	r5!, {r0, r1}
 8017b10:	6818      	ldr	r0, [r3, #0]
 8017b12:	6859      	ldr	r1, [r3, #4]
 8017b14:	4616      	mov	r6, r2
 8017b16:	c503      	stmia	r5!, {r0, r1}
 8017b18:	4668      	mov	r0, sp
 8017b1a:	f7f9 fa03 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b1e:	4631      	mov	r1, r6
 8017b20:	a802      	add	r0, sp, #8
 8017b22:	f7f9 fa27 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b26:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017b2a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017b2e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017b32:	4d28      	ldr	r5, [pc, #160]	; (8017bd4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017b34:	4e28      	ldr	r6, [pc, #160]	; (8017bd8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017b36:	6828      	ldr	r0, [r5, #0]
 8017b38:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017b3c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017b40:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017b44:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017b48:	f8bd 1000 	ldrh.w	r1, [sp]
 8017b4c:	440a      	add	r2, r1
 8017b4e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017b52:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017b56:	4413      	add	r3, r2
 8017b58:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017b5c:	6803      	ldr	r3, [r0, #0]
 8017b5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017b60:	4798      	blx	r3
 8017b62:	8833      	ldrh	r3, [r6, #0]
 8017b64:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017b68:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017b6c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8017bdc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017b70:	fb03 1202 	mla	r2, r3, r2, r1
 8017b74:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017b78:	fb08 f303 	mul.w	r3, r8, r3
 8017b7c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017b80:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017b84:	4298      	cmp	r0, r3
 8017b86:	d21d      	bcs.n	8017bc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017b88:	eb00 080c 	add.w	r8, r0, ip
 8017b8c:	4540      	cmp	r0, r8
 8017b8e:	d20f      	bcs.n	8017bb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017b90:	f854 1b04 	ldr.w	r1, [r4], #4
 8017b94:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017b98:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017b9c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017ba0:	ea42 0209 	orr.w	r2, r2, r9
 8017ba4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017ba8:	430a      	orrs	r2, r1
 8017baa:	f820 2b02 	strh.w	r2, [r0], #2
 8017bae:	e7ed      	b.n	8017b8c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017bb0:	8832      	ldrh	r2, [r6, #0]
 8017bb2:	1bd2      	subs	r2, r2, r7
 8017bb4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017bb8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017bbc:	1bd2      	subs	r2, r2, r7
 8017bbe:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017bc2:	e7df      	b.n	8017b84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017bc4:	6828      	ldr	r0, [r5, #0]
 8017bc6:	6803      	ldr	r3, [r0, #0]
 8017bc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017bca:	4798      	blx	r3
 8017bcc:	b005      	add	sp, #20
 8017bce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017bd2:	bf00      	nop
 8017bd4:	200157f4 	.word	0x200157f4
 8017bd8:	200157ee 	.word	0x200157ee
 8017bdc:	fffff800 	.word	0xfffff800

08017be0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017be0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017be4:	460e      	mov	r6, r1
 8017be6:	b08e      	sub	sp, #56	; 0x38
 8017be8:	4604      	mov	r4, r0
 8017bea:	6808      	ldr	r0, [r1, #0]
 8017bec:	6849      	ldr	r1, [r1, #4]
 8017bee:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017dc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017bf2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017dcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017bf6:	461d      	mov	r5, r3
 8017bf8:	ab0a      	add	r3, sp, #40	; 0x28
 8017bfa:	c303      	stmia	r3!, {r0, r1}
 8017bfc:	6810      	ldr	r0, [r2, #0]
 8017bfe:	6851      	ldr	r1, [r2, #4]
 8017c00:	ab0c      	add	r3, sp, #48	; 0x30
 8017c02:	c303      	stmia	r3!, {r0, r1}
 8017c04:	a80a      	add	r0, sp, #40	; 0x28
 8017c06:	f7f9 f98d 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c0a:	4631      	mov	r1, r6
 8017c0c:	a80c      	add	r0, sp, #48	; 0x30
 8017c0e:	f7f9 f9b1 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c12:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8017c16:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017c1a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017c1e:	f8d8 0000 	ldr.w	r0, [r8]
 8017c22:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017c26:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017c2a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017c2e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017c32:	440c      	add	r4, r1
 8017c34:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017c38:	440a      	add	r2, r1
 8017c3a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017c3e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017c42:	4413      	add	r3, r2
 8017c44:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017c48:	6803      	ldr	r3, [r0, #0]
 8017c4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017c4c:	4798      	blx	r3
 8017c4e:	2dff      	cmp	r5, #255	; 0xff
 8017c50:	d124      	bne.n	8017c9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017c52:	f010 0f01 	tst.w	r0, #1
 8017c56:	f8d8 0000 	ldr.w	r0, [r8]
 8017c5a:	d022      	beq.n	8017ca2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017c5c:	2100      	movs	r1, #0
 8017c5e:	f8d0 c000 	ldr.w	ip, [r0]
 8017c62:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017c66:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017c6a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017c6e:	f04f 0e01 	mov.w	lr, #1
 8017c72:	f8cd e018 	str.w	lr, [sp, #24]
 8017c76:	f8b9 e000 	ldrh.w	lr, [r9]
 8017c7a:	9503      	str	r5, [sp, #12]
 8017c7c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017c80:	b2b6      	uxth	r6, r6
 8017c82:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017c86:	9102      	str	r1, [sp, #8]
 8017c88:	b2bf      	uxth	r7, r7
 8017c8a:	9601      	str	r6, [sp, #4]
 8017c8c:	9700      	str	r7, [sp, #0]
 8017c8e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017c92:	4621      	mov	r1, r4
 8017c94:	47a8      	blx	r5
 8017c96:	b00e      	add	sp, #56	; 0x38
 8017c98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017c9c:	f010 0f04 	tst.w	r0, #4
 8017ca0:	e7d9      	b.n	8017c56 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017ca2:	6803      	ldr	r3, [r0, #0]
 8017ca4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017ca6:	4798      	blx	r3
 8017ca8:	f8b9 3000 	ldrh.w	r3, [r9]
 8017cac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017cb0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017cb4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017cb8:	fb03 1202 	mla	r2, r3, r2, r1
 8017cbc:	ebac 0c07 	sub.w	ip, ip, r7
 8017cc0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017cc4:	435e      	muls	r6, r3
 8017cc6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017cca:	2dff      	cmp	r5, #255	; 0xff
 8017ccc:	eba3 0707 	sub.w	r7, r3, r7
 8017cd0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017cd4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017cd8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017cdc:	d049      	beq.n	8017d72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017cde:	43eb      	mvns	r3, r5
 8017ce0:	fa1f f985 	uxth.w	r9, r5
 8017ce4:	b2db      	uxtb	r3, r3
 8017ce6:	42b0      	cmp	r0, r6
 8017ce8:	d266      	bcs.n	8017db8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017cea:	eb00 0a0e 	add.w	sl, r0, lr
 8017cee:	4550      	cmp	r0, sl
 8017cf0:	4621      	mov	r1, r4
 8017cf2:	f104 0403 	add.w	r4, r4, #3
 8017cf6:	d25b      	bcs.n	8017db0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017cf8:	8802      	ldrh	r2, [r0, #0]
 8017cfa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017cfe:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017d02:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017d06:	fb11 f109 	smulbb	r1, r1, r9
 8017d0a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017d0e:	10d5      	asrs	r5, r2, #3
 8017d10:	fb08 1803 	mla	r8, r8, r3, r1
 8017d14:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017d18:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017d1c:	fb11 f109 	smulbb	r1, r1, r9
 8017d20:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017d24:	fb05 1503 	mla	r5, r5, r3, r1
 8017d28:	00d2      	lsls	r2, r2, #3
 8017d2a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017d2e:	b2d2      	uxtb	r2, r2
 8017d30:	fb11 f109 	smulbb	r1, r1, r9
 8017d34:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017d38:	fa1f f888 	uxth.w	r8, r8
 8017d3c:	fb02 1203 	mla	r2, r2, r3, r1
 8017d40:	b292      	uxth	r2, r2
 8017d42:	f108 0101 	add.w	r1, r8, #1
 8017d46:	b2ad      	uxth	r5, r5
 8017d48:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017d4c:	1c51      	adds	r1, r2, #1
 8017d4e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017d52:	1c69      	adds	r1, r5, #1
 8017d54:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017d58:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017d5c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017d60:	096d      	lsrs	r5, r5, #5
 8017d62:	ea42 0208 	orr.w	r2, r2, r8
 8017d66:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017d6a:	432a      	orrs	r2, r5
 8017d6c:	f820 2b02 	strh.w	r2, [r0], #2
 8017d70:	e7bd      	b.n	8017cee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017d72:	4a14      	ldr	r2, [pc, #80]	; (8017dc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017d74:	42b0      	cmp	r0, r6
 8017d76:	d21f      	bcs.n	8017db8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017d78:	eb00 050e 	add.w	r5, r0, lr
 8017d7c:	42a8      	cmp	r0, r5
 8017d7e:	4621      	mov	r1, r4
 8017d80:	f104 0403 	add.w	r4, r4, #3
 8017d84:	d210      	bcs.n	8017da8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017d86:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017d8a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017d8e:	00db      	lsls	r3, r3, #3
 8017d90:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017d94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017d98:	430b      	orrs	r3, r1
 8017d9a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017d9e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017da2:	f820 3b02 	strh.w	r3, [r0], #2
 8017da6:	e7e9      	b.n	8017d7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017da8:	4438      	add	r0, r7
 8017daa:	eb01 040c 	add.w	r4, r1, ip
 8017dae:	e7e1      	b.n	8017d74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017db0:	4438      	add	r0, r7
 8017db2:	eb01 040c 	add.w	r4, r1, ip
 8017db6:	e796      	b.n	8017ce6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017db8:	4b03      	ldr	r3, [pc, #12]	; (8017dc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017dba:	6818      	ldr	r0, [r3, #0]
 8017dbc:	6803      	ldr	r3, [r0, #0]
 8017dbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017dc0:	4798      	blx	r3
 8017dc2:	e768      	b.n	8017c96 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017dc4:	fffff800 	.word	0xfffff800
 8017dc8:	200157f4 	.word	0x200157f4
 8017dcc:	200157ee 	.word	0x200157ee

08017dd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017dd0:	b4f0      	push	{r4, r5, r6, r7}
 8017dd2:	4616      	mov	r6, r2
 8017dd4:	2e01      	cmp	r6, #1
 8017dd6:	461c      	mov	r4, r3
 8017dd8:	460d      	mov	r5, r1
 8017dda:	9a04      	ldr	r2, [sp, #16]
 8017ddc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017de0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017de4:	d012      	beq.n	8017e0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017de6:	d303      	bcc.n	8017df0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017de8:	2e02      	cmp	r6, #2
 8017dea:	d00a      	beq.n	8017e02 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017dec:	bcf0      	pop	{r4, r5, r6, r7}
 8017dee:	4770      	bx	lr
 8017df0:	6805      	ldr	r5, [r0, #0]
 8017df2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017df6:	68ed      	ldr	r5, [r5, #12]
 8017df8:	4613      	mov	r3, r2
 8017dfa:	46ac      	mov	ip, r5
 8017dfc:	4622      	mov	r2, r4
 8017dfe:	bcf0      	pop	{r4, r5, r6, r7}
 8017e00:	4760      	bx	ip
 8017e02:	4621      	mov	r1, r4
 8017e04:	4628      	mov	r0, r5
 8017e06:	bcf0      	pop	{r4, r5, r6, r7}
 8017e08:	f7ff bd94 	b.w	8017934 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017e0c:	4621      	mov	r1, r4
 8017e0e:	4628      	mov	r0, r5
 8017e10:	bcf0      	pop	{r4, r5, r6, r7}
 8017e12:	f7ff bee5 	b.w	8017be0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017e18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e1c:	4681      	mov	r9, r0
 8017e1e:	b093      	sub	sp, #76	; 0x4c
 8017e20:	6810      	ldr	r0, [r2, #0]
 8017e22:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017e26:	4f6d      	ldr	r7, [pc, #436]	; (8017fdc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017e28:	4688      	mov	r8, r1
 8017e2a:	6851      	ldr	r1, [r2, #4]
 8017e2c:	ac0e      	add	r4, sp, #56	; 0x38
 8017e2e:	c403      	stmia	r4!, {r0, r1}
 8017e30:	6818      	ldr	r0, [r3, #0]
 8017e32:	6859      	ldr	r1, [r3, #4]
 8017e34:	ac10      	add	r4, sp, #64	; 0x40
 8017e36:	4616      	mov	r6, r2
 8017e38:	c403      	stmia	r4!, {r0, r1}
 8017e3a:	a80e      	add	r0, sp, #56	; 0x38
 8017e3c:	f7f9 f872 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e40:	4631      	mov	r1, r6
 8017e42:	a810      	add	r0, sp, #64	; 0x40
 8017e44:	f7f9 f896 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e48:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017e4c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017e50:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017e54:	4e62      	ldr	r6, [pc, #392]	; (8017fe0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017e56:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017e5a:	6830      	ldr	r0, [r6, #0]
 8017e5c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017e60:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017e64:	4489      	add	r9, r1
 8017e66:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017e6a:	440a      	add	r2, r1
 8017e6c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017e70:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017e74:	4413      	add	r3, r2
 8017e76:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017e7a:	6803      	ldr	r3, [r0, #0]
 8017e7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017e7e:	4798      	blx	r3
 8017e80:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017e84:	6830      	ldr	r0, [r6, #0]
 8017e86:	d01d      	beq.n	8017ec4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017e88:	2200      	movs	r2, #0
 8017e8a:	6801      	ldr	r1, [r0, #0]
 8017e8c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017e90:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017e94:	220b      	movs	r2, #11
 8017e96:	9207      	str	r2, [sp, #28]
 8017e98:	883a      	ldrh	r2, [r7, #0]
 8017e9a:	9206      	str	r2, [sp, #24]
 8017e9c:	2201      	movs	r2, #1
 8017e9e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017ea2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017ea6:	9203      	str	r2, [sp, #12]
 8017ea8:	b2a4      	uxth	r4, r4
 8017eaa:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017eae:	9200      	str	r2, [sp, #0]
 8017eb0:	b2ad      	uxth	r5, r5
 8017eb2:	9502      	str	r5, [sp, #8]
 8017eb4:	9401      	str	r4, [sp, #4]
 8017eb6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017eb8:	4642      	mov	r2, r8
 8017eba:	4649      	mov	r1, r9
 8017ebc:	47a0      	blx	r4
 8017ebe:	b013      	add	sp, #76	; 0x4c
 8017ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ec4:	6803      	ldr	r3, [r0, #0]
 8017ec6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017ec8:	4798      	blx	r3
 8017eca:	883b      	ldrh	r3, [r7, #0]
 8017ecc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017ed0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017ed4:	fb03 1202 	mla	r2, r3, r2, r1
 8017ed8:	435d      	muls	r5, r3
 8017eda:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017ede:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017ee2:	920c      	str	r2, [sp, #48]	; 0x30
 8017ee4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017ee8:	1b12      	subs	r2, r2, r4
 8017eea:	920d      	str	r2, [sp, #52]	; 0x34
 8017eec:	0062      	lsls	r2, r4, #1
 8017eee:	1b1c      	subs	r4, r3, r4
 8017ef0:	0063      	lsls	r3, r4, #1
 8017ef2:	920a      	str	r2, [sp, #40]	; 0x28
 8017ef4:	930b      	str	r3, [sp, #44]	; 0x2c
 8017ef6:	f04f 0e04 	mov.w	lr, #4
 8017efa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017efc:	4298      	cmp	r0, r3
 8017efe:	d266      	bcs.n	8017fce <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017f00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f02:	eb00 0b03 	add.w	fp, r0, r3
 8017f06:	4558      	cmp	r0, fp
 8017f08:	d25c      	bcs.n	8017fc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017f0a:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017f0e:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017f12:	f858 2003 	ldr.w	r2, [r8, r3]
 8017f16:	0e11      	lsrs	r1, r2, #24
 8017f18:	d012      	beq.n	8017f40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017f1a:	29ff      	cmp	r1, #255	; 0xff
 8017f1c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017f20:	d110      	bne.n	8017f44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017f22:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017f26:	d10d      	bne.n	8017f44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017f28:	0953      	lsrs	r3, r2, #5
 8017f2a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017f2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017f32:	f027 0707 	bic.w	r7, r7, #7
 8017f36:	431f      	orrs	r7, r3
 8017f38:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017f3c:	433a      	orrs	r2, r7
 8017f3e:	8002      	strh	r2, [r0, #0]
 8017f40:	3002      	adds	r0, #2
 8017f42:	e7e0      	b.n	8017f06 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017f44:	fb0a f101 	mul.w	r1, sl, r1
 8017f48:	8806      	ldrh	r6, [r0, #0]
 8017f4a:	1c4b      	adds	r3, r1, #1
 8017f4c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017f50:	1235      	asrs	r5, r6, #8
 8017f52:	10f4      	asrs	r4, r6, #3
 8017f54:	121b      	asrs	r3, r3, #8
 8017f56:	00f6      	lsls	r6, r6, #3
 8017f58:	b299      	uxth	r1, r3
 8017f5a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017f5e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017f62:	b2f6      	uxtb	r6, r6
 8017f64:	43db      	mvns	r3, r3
 8017f66:	b2d2      	uxtb	r2, r2
 8017f68:	b2db      	uxtb	r3, r3
 8017f6a:	fb1c fc01 	smulbb	ip, ip, r1
 8017f6e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017f72:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017f76:	fb12 f201 	smulbb	r2, r2, r1
 8017f7a:	fb05 c503 	mla	r5, r5, r3, ip
 8017f7e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017f82:	b2ff      	uxtb	r7, r7
 8017f84:	fb06 2203 	mla	r2, r6, r3, r2
 8017f88:	b2ad      	uxth	r5, r5
 8017f8a:	fb17 f701 	smulbb	r7, r7, r1
 8017f8e:	b292      	uxth	r2, r2
 8017f90:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017f94:	fb04 7403 	mla	r4, r4, r3, r7
 8017f98:	f105 0c01 	add.w	ip, r5, #1
 8017f9c:	1c57      	adds	r7, r2, #1
 8017f9e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017fa2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017fa6:	b2a4      	uxth	r4, r4
 8017fa8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017fac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017fb0:	433d      	orrs	r5, r7
 8017fb2:	1c67      	adds	r7, r4, #1
 8017fb4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017fb8:	0964      	lsrs	r4, r4, #5
 8017fba:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017fbe:	4325      	orrs	r5, r4
 8017fc0:	8005      	strh	r5, [r0, #0]
 8017fc2:	e7bd      	b.n	8017f40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017fc4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017fc6:	4418      	add	r0, r3
 8017fc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017fca:	4499      	add	r9, r3
 8017fcc:	e795      	b.n	8017efa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017fce:	4b04      	ldr	r3, [pc, #16]	; (8017fe0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017fd0:	6818      	ldr	r0, [r3, #0]
 8017fd2:	6803      	ldr	r3, [r0, #0]
 8017fd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017fd6:	4798      	blx	r3
 8017fd8:	e771      	b.n	8017ebe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017fda:	bf00      	nop
 8017fdc:	200157ee 	.word	0x200157ee
 8017fe0:	200157f4 	.word	0x200157f4

08017fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fe8:	b087      	sub	sp, #28
 8017fea:	4680      	mov	r8, r0
 8017fec:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017ff0:	460d      	mov	r5, r1
 8017ff2:	4614      	mov	r4, r2
 8017ff4:	2e00      	cmp	r6, #0
 8017ff6:	f000 80b9 	beq.w	801816c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017ffa:	6810      	ldr	r0, [r2, #0]
 8017ffc:	6851      	ldr	r1, [r2, #4]
 8017ffe:	af02      	add	r7, sp, #8
 8018000:	c703      	stmia	r7!, {r0, r1}
 8018002:	6818      	ldr	r0, [r3, #0]
 8018004:	6859      	ldr	r1, [r3, #4]
 8018006:	af04      	add	r7, sp, #16
 8018008:	c703      	stmia	r7!, {r0, r1}
 801800a:	a802      	add	r0, sp, #8
 801800c:	f7f8 ff8a 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018010:	4621      	mov	r1, r4
 8018012:	a804      	add	r0, sp, #16
 8018014:	f7f8 ffae 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018018:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801801c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018020:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018024:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018028:	fb14 2103 	smlabb	r1, r4, r3, r2
 801802c:	eb08 0401 	add.w	r4, r8, r1
 8018030:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018034:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018038:	440a      	add	r2, r1
 801803a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801803e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018042:	4413      	add	r3, r2
 8018044:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018048:	4b4a      	ldr	r3, [pc, #296]	; (8018174 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801804a:	6818      	ldr	r0, [r3, #0]
 801804c:	6803      	ldr	r3, [r0, #0]
 801804e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018050:	4798      	blx	r3
 8018052:	4b49      	ldr	r3, [pc, #292]	; (8018178 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018054:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018058:	881a      	ldrh	r2, [r3, #0]
 801805a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801805e:	2eff      	cmp	r6, #255	; 0xff
 8018060:	fb02 c101 	mla	r1, r2, r1, ip
 8018064:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018068:	fb02 f207 	mul.w	r2, r2, r7
 801806c:	f105 0104 	add.w	r1, r5, #4
 8018070:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018074:	461d      	mov	r5, r3
 8018076:	d05a      	beq.n	801812e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018078:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801807c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018080:	b2b6      	uxth	r6, r6
 8018082:	fa1f fe8e 	uxth.w	lr, lr
 8018086:	9301      	str	r3, [sp, #4]
 8018088:	4282      	cmp	r2, r0
 801808a:	d96a      	bls.n	8018162 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801808c:	eb00 0b0a 	add.w	fp, r0, sl
 8018090:	4583      	cmp	fp, r0
 8018092:	d940      	bls.n	8018116 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018094:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018098:	8805      	ldrh	r5, [r0, #0]
 801809a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801809e:	122f      	asrs	r7, r5, #8
 80180a0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80180a4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80180a8:	fb17 f70e 	smulbb	r7, r7, lr
 80180ac:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80180b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80180b4:	00ed      	lsls	r5, r5, #3
 80180b6:	fb0c 7c06 	mla	ip, ip, r6, r7
 80180ba:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80180be:	10df      	asrs	r7, r3, #3
 80180c0:	b2ed      	uxtb	r5, r5
 80180c2:	00db      	lsls	r3, r3, #3
 80180c4:	fa1f fc8c 	uxth.w	ip, ip
 80180c8:	fb19 f90e 	smulbb	r9, r9, lr
 80180cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80180d0:	b2db      	uxtb	r3, r3
 80180d2:	fb15 f50e 	smulbb	r5, r5, lr
 80180d6:	fb07 9706 	mla	r7, r7, r6, r9
 80180da:	fb03 5306 	mla	r3, r3, r6, r5
 80180de:	f10c 0901 	add.w	r9, ip, #1
 80180e2:	b29b      	uxth	r3, r3
 80180e4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80180e8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80180ec:	f103 0c01 	add.w	ip, r3, #1
 80180f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80180f4:	b2bf      	uxth	r7, r7
 80180f6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80180fa:	ea4c 0c09 	orr.w	ip, ip, r9
 80180fe:	f107 0901 	add.w	r9, r7, #1
 8018102:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8018106:	097f      	lsrs	r7, r7, #5
 8018108:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801810c:	ea4c 0c07 	orr.w	ip, ip, r7
 8018110:	f820 cb02 	strh.w	ip, [r0], #2
 8018114:	e7bc      	b.n	8018090 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018116:	9b01      	ldr	r3, [sp, #4]
 8018118:	881b      	ldrh	r3, [r3, #0]
 801811a:	eba3 0308 	sub.w	r3, r3, r8
 801811e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018122:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018126:	eba3 0308 	sub.w	r3, r3, r8
 801812a:	441c      	add	r4, r3
 801812c:	e7ac      	b.n	8018088 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801812e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018132:	4282      	cmp	r2, r0
 8018134:	d915      	bls.n	8018162 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018136:	eb00 060a 	add.w	r6, r0, sl
 801813a:	4286      	cmp	r6, r0
 801813c:	d906      	bls.n	801814c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801813e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018142:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018146:	f820 3b02 	strh.w	r3, [r0], #2
 801814a:	e7f6      	b.n	801813a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801814c:	882b      	ldrh	r3, [r5, #0]
 801814e:	eba3 0308 	sub.w	r3, r3, r8
 8018152:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018156:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801815a:	eba3 0308 	sub.w	r3, r3, r8
 801815e:	441c      	add	r4, r3
 8018160:	e7e7      	b.n	8018132 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018162:	4b04      	ldr	r3, [pc, #16]	; (8018174 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018164:	6818      	ldr	r0, [r3, #0]
 8018166:	6803      	ldr	r3, [r0, #0]
 8018168:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801816a:	4798      	blx	r3
 801816c:	b007      	add	sp, #28
 801816e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018172:	bf00      	nop
 8018174:	200157f4 	.word	0x200157f4
 8018178:	200157ee 	.word	0x200157ee

0801817c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801817c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018180:	b091      	sub	sp, #68	; 0x44
 8018182:	4680      	mov	r8, r0
 8018184:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8018188:	460f      	mov	r7, r1
 801818a:	4614      	mov	r4, r2
 801818c:	2d00      	cmp	r5, #0
 801818e:	d051      	beq.n	8018234 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018190:	6810      	ldr	r0, [r2, #0]
 8018192:	6851      	ldr	r1, [r2, #4]
 8018194:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018398 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018198:	ae0c      	add	r6, sp, #48	; 0x30
 801819a:	c603      	stmia	r6!, {r0, r1}
 801819c:	6818      	ldr	r0, [r3, #0]
 801819e:	6859      	ldr	r1, [r3, #4]
 80181a0:	ae0e      	add	r6, sp, #56	; 0x38
 80181a2:	c603      	stmia	r6!, {r0, r1}
 80181a4:	a80c      	add	r0, sp, #48	; 0x30
 80181a6:	f7f8 febd 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80181aa:	4621      	mov	r1, r4
 80181ac:	a80e      	add	r0, sp, #56	; 0x38
 80181ae:	f7f8 fee1 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80181b2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80181b6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80181ba:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80181be:	f8d9 0000 	ldr.w	r0, [r9]
 80181c2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80181c6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80181ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 80181ce:	eb08 0401 	add.w	r4, r8, r1
 80181d2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80181d6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801839c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80181da:	440a      	add	r2, r1
 80181dc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80181e0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80181e4:	4413      	add	r3, r2
 80181e6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80181ea:	6803      	ldr	r3, [r0, #0]
 80181ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80181ee:	4798      	blx	r3
 80181f0:	f010 0f80 	tst.w	r0, #128	; 0x80
 80181f4:	f8d9 0000 	ldr.w	r0, [r9]
 80181f8:	d01f      	beq.n	801823a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80181fa:	2200      	movs	r2, #0
 80181fc:	6801      	ldr	r1, [r0, #0]
 80181fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018202:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018206:	220b      	movs	r2, #11
 8018208:	9207      	str	r2, [sp, #28]
 801820a:	f8b8 2000 	ldrh.w	r2, [r8]
 801820e:	9206      	str	r2, [sp, #24]
 8018210:	2201      	movs	r2, #1
 8018212:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018216:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801821a:	9203      	str	r2, [sp, #12]
 801821c:	fa1f f28a 	uxth.w	r2, sl
 8018220:	9202      	str	r2, [sp, #8]
 8018222:	b2b6      	uxth	r6, r6
 8018224:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018228:	9200      	str	r2, [sp, #0]
 801822a:	9601      	str	r6, [sp, #4]
 801822c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801822e:	463a      	mov	r2, r7
 8018230:	4621      	mov	r1, r4
 8018232:	47a8      	blx	r5
 8018234:	b011      	add	sp, #68	; 0x44
 8018236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801823a:	6803      	ldr	r3, [r0, #0]
 801823c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801823e:	4798      	blx	r3
 8018240:	f8b8 2000 	ldrh.w	r2, [r8]
 8018244:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018248:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801824c:	2dff      	cmp	r5, #255	; 0xff
 801824e:	fb02 1303 	mla	r3, r2, r3, r1
 8018252:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018256:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801825a:	fb0a fa02 	mul.w	sl, sl, r2
 801825e:	d062      	beq.n	8018326 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018260:	ea6f 0c05 	mvn.w	ip, r5
 8018264:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018268:	930a      	str	r3, [sp, #40]	; 0x28
 801826a:	b2ad      	uxth	r5, r5
 801826c:	fa5f fc8c 	uxtb.w	ip, ip
 8018270:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018274:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018276:	4298      	cmp	r0, r3
 8018278:	f080 8085 	bcs.w	8018386 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801827c:	eb00 0b09 	add.w	fp, r0, r9
 8018280:	4558      	cmp	r0, fp
 8018282:	d246      	bcs.n	8018312 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018284:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018288:	2303      	movs	r3, #3
 801828a:	2204      	movs	r2, #4
 801828c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018290:	eb07 0a0e 	add.w	sl, r7, lr
 8018294:	8803      	ldrh	r3, [r0, #0]
 8018296:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801829a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801829e:	1219      	asrs	r1, r3, #8
 80182a0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80182a4:	fb18 f805 	smulbb	r8, r8, r5
 80182a8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80182ac:	10da      	asrs	r2, r3, #3
 80182ae:	fb01 810c 	mla	r1, r1, ip, r8
 80182b2:	00db      	lsls	r3, r3, #3
 80182b4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80182b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80182bc:	b2db      	uxtb	r3, r3
 80182be:	fb18 f805 	smulbb	r8, r8, r5
 80182c2:	fb1e fe05 	smulbb	lr, lr, r5
 80182c6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80182ca:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80182ce:	b289      	uxth	r1, r1
 80182d0:	fb02 820c 	mla	r2, r2, ip, r8
 80182d4:	fb03 e30c 	mla	r3, r3, ip, lr
 80182d8:	b292      	uxth	r2, r2
 80182da:	b29b      	uxth	r3, r3
 80182dc:	f101 0801 	add.w	r8, r1, #1
 80182e0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80182e4:	f103 0e01 	add.w	lr, r3, #1
 80182e8:	f102 0801 	add.w	r8, r2, #1
 80182ec:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80182f0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80182f4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80182f8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80182fc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018300:	ea4e 0101 	orr.w	r1, lr, r1
 8018304:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018308:	ea41 0108 	orr.w	r1, r1, r8
 801830c:	f820 1b02 	strh.w	r1, [r0], #2
 8018310:	e7b6      	b.n	8018280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018312:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018314:	881b      	ldrh	r3, [r3, #0]
 8018316:	1b9b      	subs	r3, r3, r6
 8018318:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801831c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018320:	1b9b      	subs	r3, r3, r6
 8018322:	441c      	add	r4, r3
 8018324:	e7a6      	b.n	8018274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018326:	491b      	ldr	r1, [pc, #108]	; (8018394 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018328:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801832c:	2203      	movs	r2, #3
 801832e:	2504      	movs	r5, #4
 8018330:	4550      	cmp	r0, sl
 8018332:	d228      	bcs.n	8018386 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018334:	eb00 0c09 	add.w	ip, r0, r9
 8018338:	4560      	cmp	r0, ip
 801833a:	4623      	mov	r3, r4
 801833c:	d219      	bcs.n	8018372 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801833e:	f893 e000 	ldrb.w	lr, [r3]
 8018342:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018346:	eb07 0b0e 	add.w	fp, r7, lr
 801834a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801834e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018352:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018356:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801835a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801835e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018362:	ea43 030b 	orr.w	r3, r3, fp
 8018366:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801836a:	3401      	adds	r4, #1
 801836c:	f820 3b02 	strh.w	r3, [r0], #2
 8018370:	e7e2      	b.n	8018338 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018372:	f8b8 3000 	ldrh.w	r3, [r8]
 8018376:	1b9b      	subs	r3, r3, r6
 8018378:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801837c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018380:	1b9b      	subs	r3, r3, r6
 8018382:	441c      	add	r4, r3
 8018384:	e7d4      	b.n	8018330 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018386:	4b04      	ldr	r3, [pc, #16]	; (8018398 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018388:	6818      	ldr	r0, [r3, #0]
 801838a:	6803      	ldr	r3, [r0, #0]
 801838c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801838e:	4798      	blx	r3
 8018390:	e750      	b.n	8018234 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018392:	bf00      	nop
 8018394:	fffff800 	.word	0xfffff800
 8018398:	200157f4 	.word	0x200157f4
 801839c:	200157ee 	.word	0x200157ee

080183a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80183a0:	b430      	push	{r4, r5}
 80183a2:	780d      	ldrb	r5, [r1, #0]
 80183a4:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80183a8:	2d01      	cmp	r5, #1
 80183aa:	d00a      	beq.n	80183c2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80183ac:	d305      	bcc.n	80183ba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80183ae:	2d02      	cmp	r5, #2
 80183b0:	d10b      	bne.n	80183ca <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80183b2:	9402      	str	r4, [sp, #8]
 80183b4:	bc30      	pop	{r4, r5}
 80183b6:	f7ff be15 	b.w	8017fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80183ba:	9402      	str	r4, [sp, #8]
 80183bc:	bc30      	pop	{r4, r5}
 80183be:	f7ff bd2b 	b.w	8017e18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80183c2:	9402      	str	r4, [sp, #8]
 80183c4:	bc30      	pop	{r4, r5}
 80183c6:	f7ff bed9 	b.w	801817c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80183ca:	bc30      	pop	{r4, r5}
 80183cc:	4770      	bx	lr
	...

080183d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80183d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183d4:	4604      	mov	r4, r0
 80183d6:	b087      	sub	sp, #28
 80183d8:	6810      	ldr	r0, [r2, #0]
 80183da:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80183de:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8018618 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80183e2:	460e      	mov	r6, r1
 80183e4:	6851      	ldr	r1, [r2, #4]
 80183e6:	ad02      	add	r5, sp, #8
 80183e8:	c503      	stmia	r5!, {r0, r1}
 80183ea:	6818      	ldr	r0, [r3, #0]
 80183ec:	6859      	ldr	r1, [r3, #4]
 80183ee:	ad04      	add	r5, sp, #16
 80183f0:	4617      	mov	r7, r2
 80183f2:	c503      	stmia	r5!, {r0, r1}
 80183f4:	a802      	add	r0, sp, #8
 80183f6:	f7f8 fd95 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80183fa:	4639      	mov	r1, r7
 80183fc:	a804      	add	r0, sp, #16
 80183fe:	f7f8 fdb9 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018402:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018406:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801840a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801840e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018412:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018416:	fb11 2103 	smlabb	r1, r1, r3, r2
 801841a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801841e:	440e      	add	r6, r1
 8018420:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018424:	440a      	add	r2, r1
 8018426:	f8ad 2010 	strh.w	r2, [sp, #16]
 801842a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801842e:	4413      	add	r3, r2
 8018430:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018434:	4b77      	ldr	r3, [pc, #476]	; (8018614 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018436:	6818      	ldr	r0, [r3, #0]
 8018438:	6803      	ldr	r3, [r0, #0]
 801843a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801843c:	4798      	blx	r3
 801843e:	f8b9 b000 	ldrh.w	fp, [r9]
 8018442:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018446:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801844a:	fb0b 2303 	mla	r3, fp, r3, r2
 801844e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018452:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018456:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801845a:	fb05 f50b 	mul.w	r5, r5, fp
 801845e:	9300      	str	r3, [sp, #0]
 8018460:	d069      	beq.n	8018536 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018462:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018466:	4558      	cmp	r0, fp
 8018468:	f080 80cc 	bcs.w	8018604 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801846c:	9b00      	ldr	r3, [sp, #0]
 801846e:	18c3      	adds	r3, r0, r3
 8018470:	9301      	str	r3, [sp, #4]
 8018472:	4631      	mov	r1, r6
 8018474:	9b01      	ldr	r3, [sp, #4]
 8018476:	4298      	cmp	r0, r3
 8018478:	d24f      	bcs.n	801851a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801847a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801847e:	2a00      	cmp	r2, #0
 8018480:	d048      	beq.n	8018514 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018482:	fb0a f202 	mul.w	r2, sl, r2
 8018486:	1c53      	adds	r3, r2, #1
 8018488:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801848c:	121b      	asrs	r3, r3, #8
 801848e:	d041      	beq.n	8018514 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018490:	8802      	ldrh	r2, [r0, #0]
 8018492:	f8b4 c000 	ldrh.w	ip, [r4]
 8018496:	b29e      	uxth	r6, r3
 8018498:	1215      	asrs	r5, r2, #8
 801849a:	43db      	mvns	r3, r3
 801849c:	b2db      	uxtb	r3, r3
 801849e:	ea4f 272c 	mov.w	r7, ip, asr #8
 80184a2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80184a6:	fb15 f503 	smulbb	r5, r5, r3
 80184aa:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80184ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80184b2:	00d2      	lsls	r2, r2, #3
 80184b4:	fb07 5706 	mla	r7, r7, r6, r5
 80184b8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80184bc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80184c0:	b2d2      	uxtb	r2, r2
 80184c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80184c6:	b2bf      	uxth	r7, r7
 80184c8:	fb1e fe03 	smulbb	lr, lr, r3
 80184cc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80184d0:	fa5f fc8c 	uxtb.w	ip, ip
 80184d4:	fb12 f203 	smulbb	r2, r2, r3
 80184d8:	fb05 e506 	mla	r5, r5, r6, lr
 80184dc:	fb0c 2c06 	mla	ip, ip, r6, r2
 80184e0:	f107 0e01 	add.w	lr, r7, #1
 80184e4:	fa1f fc8c 	uxth.w	ip, ip
 80184e8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80184ec:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80184f0:	f10c 0701 	add.w	r7, ip, #1
 80184f4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80184f8:	b2ad      	uxth	r5, r5
 80184fa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80184fe:	ea47 070e 	orr.w	r7, r7, lr
 8018502:	f105 0e01 	add.w	lr, r5, #1
 8018506:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801850a:	096d      	lsrs	r5, r5, #5
 801850c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018510:	432f      	orrs	r7, r5
 8018512:	8007      	strh	r7, [r0, #0]
 8018514:	3002      	adds	r0, #2
 8018516:	3402      	adds	r4, #2
 8018518:	e7ac      	b.n	8018474 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801851a:	f8b9 3000 	ldrh.w	r3, [r9]
 801851e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018522:	eba3 0308 	sub.w	r3, r3, r8
 8018526:	eba6 0608 	sub.w	r6, r6, r8
 801852a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801852e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018532:	440e      	add	r6, r1
 8018534:	e797      	b.n	8018466 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018536:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801853a:	42a8      	cmp	r0, r5
 801853c:	d262      	bcs.n	8018604 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801853e:	9b00      	ldr	r3, [sp, #0]
 8018540:	4631      	mov	r1, r6
 8018542:	eb00 0b03 	add.w	fp, r0, r3
 8018546:	4558      	cmp	r0, fp
 8018548:	d24e      	bcs.n	80185e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801854a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801854e:	b12b      	cbz	r3, 801855c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018550:	2bff      	cmp	r3, #255	; 0xff
 8018552:	f8b4 e000 	ldrh.w	lr, [r4]
 8018556:	d104      	bne.n	8018562 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018558:	f8a0 e000 	strh.w	lr, [r0]
 801855c:	3002      	adds	r0, #2
 801855e:	3402      	adds	r4, #2
 8018560:	e7f1      	b.n	8018546 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018562:	8802      	ldrh	r2, [r0, #0]
 8018564:	b29f      	uxth	r7, r3
 8018566:	1216      	asrs	r6, r2, #8
 8018568:	43db      	mvns	r3, r3
 801856a:	b2db      	uxtb	r3, r3
 801856c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018570:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018574:	fb16 f603 	smulbb	r6, r6, r3
 8018578:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801857c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018580:	00d2      	lsls	r2, r2, #3
 8018582:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018586:	b2d2      	uxtb	r2, r2
 8018588:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801858c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018590:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018594:	fb1a fa03 	smulbb	sl, sl, r3
 8018598:	fa1f fc8c 	uxth.w	ip, ip
 801859c:	fb12 f303 	smulbb	r3, r2, r3
 80185a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80185a4:	fa5f fe8e 	uxtb.w	lr, lr
 80185a8:	fb06 a607 	mla	r6, r6, r7, sl
 80185ac:	f10c 0201 	add.w	r2, ip, #1
 80185b0:	fb0e 3307 	mla	r3, lr, r7, r3
 80185b4:	b2b6      	uxth	r6, r6
 80185b6:	b29b      	uxth	r3, r3
 80185b8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80185bc:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80185c0:	f106 0a01 	add.w	sl, r6, #1
 80185c4:	f103 0c01 	add.w	ip, r3, #1
 80185c8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80185cc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80185d0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80185d4:	0976      	lsrs	r6, r6, #5
 80185d6:	ea4c 0c02 	orr.w	ip, ip, r2
 80185da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80185de:	ea4c 0c06 	orr.w	ip, ip, r6
 80185e2:	f8a0 c000 	strh.w	ip, [r0]
 80185e6:	e7b9      	b.n	801855c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80185e8:	f8b9 3000 	ldrh.w	r3, [r9]
 80185ec:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80185f0:	eba3 0308 	sub.w	r3, r3, r8
 80185f4:	eba6 0608 	sub.w	r6, r6, r8
 80185f8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80185fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018600:	440e      	add	r6, r1
 8018602:	e79a      	b.n	801853a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018604:	4b03      	ldr	r3, [pc, #12]	; (8018614 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018606:	6818      	ldr	r0, [r3, #0]
 8018608:	6803      	ldr	r3, [r0, #0]
 801860a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801860c:	4798      	blx	r3
 801860e:	b007      	add	sp, #28
 8018610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018614:	200157f4 	.word	0x200157f4
 8018618:	200157ee 	.word	0x200157ee

0801861c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801861c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018620:	b089      	sub	sp, #36	; 0x24
 8018622:	4682      	mov	sl, r0
 8018624:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8018628:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801862a:	460f      	mov	r7, r1
 801862c:	4691      	mov	r9, r2
 801862e:	4698      	mov	r8, r3
 8018630:	2e00      	cmp	r6, #0
 8018632:	d036      	beq.n	80186a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018634:	4608      	mov	r0, r1
 8018636:	f7fc f863 	bl	8014700 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801863a:	4605      	mov	r5, r0
 801863c:	4638      	mov	r0, r7
 801863e:	f7fc f893 	bl	8014768 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018642:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018646:	4638      	mov	r0, r7
 8018648:	f8ad 9008 	strh.w	r9, [sp, #8]
 801864c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018650:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018654:	f7fc f940 	bl	80148d8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018658:	4605      	mov	r5, r0
 801865a:	4638      	mov	r0, r7
 801865c:	f7fc f96c 	bl	8014938 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018660:	4681      	mov	r9, r0
 8018662:	4638      	mov	r0, r7
 8018664:	f7fc f9bc 	bl	80149e0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018668:	280b      	cmp	r0, #11
 801866a:	d81a      	bhi.n	80186a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801866c:	e8df f000 	tbb	[pc, r0]
 8018670:	1906aebd 	.word	0x1906aebd
 8018674:	19191919 	.word	0x19191919
 8018678:	b5191919 	.word	0xb5191919
 801867c:	4bb0      	ldr	r3, [pc, #704]	; (8018940 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801867e:	6818      	ldr	r0, [r3, #0]
 8018680:	6803      	ldr	r3, [r0, #0]
 8018682:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018684:	4798      	blx	r3
 8018686:	2eff      	cmp	r6, #255	; 0xff
 8018688:	d121      	bne.n	80186ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801868a:	0683      	lsls	r3, r0, #26
 801868c:	d41f      	bmi.n	80186ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801868e:	4638      	mov	r0, r7
 8018690:	f7fc f8ea 	bl	8014868 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018694:	b940      	cbnz	r0, 80186a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018696:	4623      	mov	r3, r4
 8018698:	aa02      	add	r2, sp, #8
 801869a:	4629      	mov	r1, r5
 801869c:	4650      	mov	r0, sl
 801869e:	f7ff fa2f 	bl	8017b00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80186a2:	b009      	add	sp, #36	; 0x24
 80186a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186a8:	f10d 0818 	add.w	r8, sp, #24
 80186ac:	4639      	mov	r1, r7
 80186ae:	4640      	mov	r0, r8
 80186b0:	f7fc f88e 	bl	80147d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80186b4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80186b8:	af04      	add	r7, sp, #16
 80186ba:	e887 0003 	stmia.w	r7, {r0, r1}
 80186be:	4638      	mov	r0, r7
 80186c0:	4621      	mov	r1, r4
 80186c2:	f7f2 fc5b 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 80186c6:	4638      	mov	r0, r7
 80186c8:	f7f2 fc9b 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 80186cc:	b130      	cbz	r0, 80186dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80186ce:	4633      	mov	r3, r6
 80186d0:	4622      	mov	r2, r4
 80186d2:	a902      	add	r1, sp, #8
 80186d4:	4628      	mov	r0, r5
 80186d6:	f7ff f92d 	bl	8017934 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80186da:	e7e2      	b.n	80186a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80186dc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80186e0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80186e4:	4293      	cmp	r3, r2
 80186e6:	dd12      	ble.n	801870e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 80186e8:	1a9b      	subs	r3, r3, r2
 80186ea:	f9b4 0000 	ldrsh.w	r0, [r4]
 80186ee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80186f2:	f8ad 0018 	strh.w	r0, [sp, #24]
 80186f6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80186fa:	f8ad 101c 	strh.w	r1, [sp, #28]
 80186fe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018702:	4642      	mov	r2, r8
 8018704:	4633      	mov	r3, r6
 8018706:	a902      	add	r1, sp, #8
 8018708:	4628      	mov	r0, r5
 801870a:	f7ff f913 	bl	8017934 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801870e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018712:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018716:	4293      	cmp	r3, r2
 8018718:	dd12      	ble.n	8018740 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 801871a:	1a9b      	subs	r3, r3, r2
 801871c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018720:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018724:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018728:	f8ad 001a 	strh.w	r0, [sp, #26]
 801872c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018730:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018734:	23ff      	movs	r3, #255	; 0xff
 8018736:	4642      	mov	r2, r8
 8018738:	a902      	add	r1, sp, #8
 801873a:	4628      	mov	r0, r5
 801873c:	f7ff f8fa 	bl	8017934 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018740:	463b      	mov	r3, r7
 8018742:	aa02      	add	r2, sp, #8
 8018744:	4629      	mov	r1, r5
 8018746:	4650      	mov	r0, sl
 8018748:	f7ff f9da 	bl	8017b00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801874c:	88a2      	ldrh	r2, [r4, #4]
 801874e:	8823      	ldrh	r3, [r4, #0]
 8018750:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018754:	4413      	add	r3, r2
 8018756:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801875a:	440a      	add	r2, r1
 801875c:	b29b      	uxth	r3, r3
 801875e:	b292      	uxth	r2, r2
 8018760:	b211      	sxth	r1, r2
 8018762:	b218      	sxth	r0, r3
 8018764:	4288      	cmp	r0, r1
 8018766:	dd12      	ble.n	801878e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018768:	1a9b      	subs	r3, r3, r2
 801876a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801876e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018772:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018776:	f8ad 301c 	strh.w	r3, [sp, #28]
 801877a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801877e:	23ff      	movs	r3, #255	; 0xff
 8018780:	4642      	mov	r2, r8
 8018782:	a902      	add	r1, sp, #8
 8018784:	4628      	mov	r0, r5
 8018786:	f8ad 601a 	strh.w	r6, [sp, #26]
 801878a:	f7ff f8d3 	bl	8017934 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801878e:	88e2      	ldrh	r2, [r4, #6]
 8018790:	8863      	ldrh	r3, [r4, #2]
 8018792:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018796:	4413      	add	r3, r2
 8018798:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801879c:	440a      	add	r2, r1
 801879e:	b29b      	uxth	r3, r3
 80187a0:	b292      	uxth	r2, r2
 80187a2:	b211      	sxth	r1, r2
 80187a4:	b218      	sxth	r0, r3
 80187a6:	4288      	cmp	r0, r1
 80187a8:	f77f af7b 	ble.w	80186a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80187ac:	1a9b      	subs	r3, r3, r2
 80187ae:	f9b4 6000 	ldrsh.w	r6, [r4]
 80187b2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80187b6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80187ba:	f8ad 6018 	strh.w	r6, [sp, #24]
 80187be:	f8ad 101a 	strh.w	r1, [sp, #26]
 80187c2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80187c6:	23ff      	movs	r3, #255	; 0xff
 80187c8:	4642      	mov	r2, r8
 80187ca:	e782      	b.n	80186d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 80187cc:	4633      	mov	r3, r6
 80187ce:	4622      	mov	r2, r4
 80187d0:	a902      	add	r1, sp, #8
 80187d2:	4628      	mov	r0, r5
 80187d4:	f7ff fa04 	bl	8017be0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80187d8:	e763      	b.n	80186a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80187da:	9600      	str	r6, [sp, #0]
 80187dc:	4623      	mov	r3, r4
 80187de:	aa02      	add	r2, sp, #8
 80187e0:	4649      	mov	r1, r9
 80187e2:	4628      	mov	r0, r5
 80187e4:	f7ff fddc 	bl	80183a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80187e8:	e75b      	b.n	80186a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80187ea:	4638      	mov	r0, r7
 80187ec:	f7fc f83c 	bl	8014868 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80187f0:	b950      	cbnz	r0, 8018808 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 80187f2:	e9cd 6000 	strd	r6, r0, [sp]
 80187f6:	f8da 3000 	ldr.w	r3, [sl]
 80187fa:	aa02      	add	r2, sp, #8
 80187fc:	68de      	ldr	r6, [r3, #12]
 80187fe:	4629      	mov	r1, r5
 8018800:	4623      	mov	r3, r4
 8018802:	4650      	mov	r0, sl
 8018804:	47b0      	blx	r6
 8018806:	e74c      	b.n	80186a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018808:	f10d 0818 	add.w	r8, sp, #24
 801880c:	4639      	mov	r1, r7
 801880e:	4640      	mov	r0, r8
 8018810:	f7fb ffde 	bl	80147d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018814:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018818:	af04      	add	r7, sp, #16
 801881a:	e887 0003 	stmia.w	r7, {r0, r1}
 801881e:	4638      	mov	r0, r7
 8018820:	4621      	mov	r1, r4
 8018822:	f7f2 fbab 	bl	800af7c <_ZN8touchgfx4RectaNERKS0_>
 8018826:	4638      	mov	r0, r7
 8018828:	f7f2 fbeb 	bl	800b002 <_ZNK8touchgfx4Rect7isEmptyEv>
 801882c:	b138      	cbz	r0, 801883e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 801882e:	9600      	str	r6, [sp, #0]
 8018830:	4623      	mov	r3, r4
 8018832:	aa02      	add	r2, sp, #8
 8018834:	4649      	mov	r1, r9
 8018836:	4628      	mov	r0, r5
 8018838:	f7ff fdca 	bl	80183d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801883c:	e731      	b.n	80186a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801883e:	e9cd 6000 	strd	r6, r0, [sp]
 8018842:	f8da 3000 	ldr.w	r3, [sl]
 8018846:	aa02      	add	r2, sp, #8
 8018848:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801884c:	4629      	mov	r1, r5
 801884e:	463b      	mov	r3, r7
 8018850:	4650      	mov	r0, sl
 8018852:	47d8      	blx	fp
 8018854:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018858:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801885c:	4293      	cmp	r3, r2
 801885e:	dd13      	ble.n	8018888 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018860:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018864:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018868:	f8ad 0018 	strh.w	r0, [sp, #24]
 801886c:	1a9b      	subs	r3, r3, r2
 801886e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018872:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018876:	f8ad 301e 	strh.w	r3, [sp, #30]
 801887a:	9600      	str	r6, [sp, #0]
 801887c:	4643      	mov	r3, r8
 801887e:	aa02      	add	r2, sp, #8
 8018880:	4649      	mov	r1, r9
 8018882:	4628      	mov	r0, r5
 8018884:	f7ff fda4 	bl	80183d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018888:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801888c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018890:	4293      	cmp	r3, r2
 8018892:	dd13      	ble.n	80188bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018894:	1a9b      	subs	r3, r3, r2
 8018896:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801889a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801889e:	f8ad 2018 	strh.w	r2, [sp, #24]
 80188a2:	f8ad 001a 	strh.w	r0, [sp, #26]
 80188a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80188aa:	f8ad 101e 	strh.w	r1, [sp, #30]
 80188ae:	9600      	str	r6, [sp, #0]
 80188b0:	4643      	mov	r3, r8
 80188b2:	aa02      	add	r2, sp, #8
 80188b4:	4649      	mov	r1, r9
 80188b6:	4628      	mov	r0, r5
 80188b8:	f7ff fd8a 	bl	80183d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80188bc:	88a2      	ldrh	r2, [r4, #4]
 80188be:	8823      	ldrh	r3, [r4, #0]
 80188c0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80188c4:	4413      	add	r3, r2
 80188c6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80188ca:	440a      	add	r2, r1
 80188cc:	b29b      	uxth	r3, r3
 80188ce:	b292      	uxth	r2, r2
 80188d0:	b211      	sxth	r1, r2
 80188d2:	b218      	sxth	r0, r3
 80188d4:	4288      	cmp	r0, r1
 80188d6:	dd13      	ble.n	8018900 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 80188d8:	1a9b      	subs	r3, r3, r2
 80188da:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80188de:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80188e2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80188e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80188ea:	f8ad 001e 	strh.w	r0, [sp, #30]
 80188ee:	9600      	str	r6, [sp, #0]
 80188f0:	4643      	mov	r3, r8
 80188f2:	aa02      	add	r2, sp, #8
 80188f4:	4649      	mov	r1, r9
 80188f6:	4628      	mov	r0, r5
 80188f8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80188fc:	f7ff fd68 	bl	80183d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018900:	88e2      	ldrh	r2, [r4, #6]
 8018902:	8863      	ldrh	r3, [r4, #2]
 8018904:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018908:	4413      	add	r3, r2
 801890a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801890e:	440a      	add	r2, r1
 8018910:	b29b      	uxth	r3, r3
 8018912:	b292      	uxth	r2, r2
 8018914:	b211      	sxth	r1, r2
 8018916:	b218      	sxth	r0, r3
 8018918:	4288      	cmp	r0, r1
 801891a:	f77f aec2 	ble.w	80186a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801891e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018922:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018926:	f8ad 7018 	strh.w	r7, [sp, #24]
 801892a:	1a9b      	subs	r3, r3, r2
 801892c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018930:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018934:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018938:	9600      	str	r6, [sp, #0]
 801893a:	4643      	mov	r3, r8
 801893c:	e779      	b.n	8018832 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 801893e:	bf00      	nop
 8018940:	200157f4 	.word	0x200157f4

08018944 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018944:	b180      	cbz	r0, 8018968 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018946:	2903      	cmp	r1, #3
 8018948:	d81c      	bhi.n	8018984 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801894a:	e8df f001 	tbb	[pc, r1]
 801894e:	1d02      	.short	0x1d02
 8018950:	1f08      	.short	0x1f08
 8018952:	4b10      	ldr	r3, [pc, #64]	; (8018994 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018954:	8818      	ldrh	r0, [r3, #0]
 8018956:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801895a:	4240      	negs	r0, r0
 801895c:	4770      	bx	lr
 801895e:	4b0d      	ldr	r3, [pc, #52]	; (8018994 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018960:	8818      	ldrh	r0, [r3, #0]
 8018962:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018966:	4770      	bx	lr
 8018968:	2903      	cmp	r1, #3
 801896a:	d80b      	bhi.n	8018984 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801896c:	a301      	add	r3, pc, #4	; (adr r3, 8018974 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801896e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018972:	bf00      	nop
 8018974:	08018989 	.word	0x08018989
 8018978:	0801895f 	.word	0x0801895f
 801897c:	0801898d 	.word	0x0801898d
 8018980:	08018953 	.word	0x08018953
 8018984:	2000      	movs	r0, #0
 8018986:	4770      	bx	lr
 8018988:	2001      	movs	r0, #1
 801898a:	4770      	bx	lr
 801898c:	f04f 30ff 	mov.w	r0, #4294967295
 8018990:	4770      	bx	lr
 8018992:	bf00      	nop
 8018994:	200157ee 	.word	0x200157ee

08018998 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018998:	b180      	cbz	r0, 80189bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801899a:	2903      	cmp	r1, #3
 801899c:	d81c      	bhi.n	80189d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801899e:	e8df f001 	tbb	[pc, r1]
 80189a2:	021d      	.short	0x021d
 80189a4:	071f      	.short	0x071f
 80189a6:	4b10      	ldr	r3, [pc, #64]	; (80189e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80189a8:	8818      	ldrh	r0, [r3, #0]
 80189aa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80189ae:	4770      	bx	lr
 80189b0:	4b0d      	ldr	r3, [pc, #52]	; (80189e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80189b2:	8818      	ldrh	r0, [r3, #0]
 80189b4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80189b8:	4240      	negs	r0, r0
 80189ba:	4770      	bx	lr
 80189bc:	2903      	cmp	r1, #3
 80189be:	d80b      	bhi.n	80189d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80189c0:	a301      	add	r3, pc, #4	; (adr r3, 80189c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80189c2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80189c6:	bf00      	nop
 80189c8:	080189a7 	.word	0x080189a7
 80189cc:	080189e1 	.word	0x080189e1
 80189d0:	080189b1 	.word	0x080189b1
 80189d4:	080189dd 	.word	0x080189dd
 80189d8:	2000      	movs	r0, #0
 80189da:	4770      	bx	lr
 80189dc:	2001      	movs	r0, #1
 80189de:	4770      	bx	lr
 80189e0:	f04f 30ff 	mov.w	r0, #4294967295
 80189e4:	4770      	bx	lr
 80189e6:	bf00      	nop
 80189e8:	200157ee 	.word	0x200157ee

080189ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80189ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189f0:	b099      	sub	sp, #100	; 0x64
 80189f2:	910b      	str	r1, [sp, #44]	; 0x2c
 80189f4:	a914      	add	r1, sp, #80	; 0x50
 80189f6:	e881 000c 	stmia.w	r1, {r2, r3}
 80189fa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80189fe:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8018a02:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018a06:	9309      	str	r3, [sp, #36]	; 0x24
 8018a08:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8018a0c:	9310      	str	r3, [sp, #64]	; 0x40
 8018a0e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018a12:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8018a16:	930c      	str	r3, [sp, #48]	; 0x30
 8018a18:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8018a1c:	798f      	ldrb	r7, [r1, #6]
 8018a1e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8018a22:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8018a26:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8018a2a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8018a2e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8018a32:	431f      	orrs	r7, r3
 8018a34:	f000 8195 	beq.w	8018d62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018a38:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8018a3c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018a40:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018a44:	ea59 0903 	orrs.w	r9, r9, r3
 8018a48:	f000 818b 	beq.w	8018d62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018a4c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018a50:	b29b      	uxth	r3, r3
 8018a52:	2d00      	cmp	r5, #0
 8018a54:	f000 812e 	beq.w	8018cb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018a58:	1aed      	subs	r5, r5, r3
 8018a5a:	b2ad      	uxth	r5, r5
 8018a5c:	042b      	lsls	r3, r5, #16
 8018a5e:	d502      	bpl.n	8018a66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018a60:	1b64      	subs	r4, r4, r5
 8018a62:	b224      	sxth	r4, r4
 8018a64:	2500      	movs	r5, #0
 8018a66:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018a6a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8018a6e:	428c      	cmp	r4, r1
 8018a70:	b28b      	uxth	r3, r1
 8018a72:	bfbf      	itttt	lt
 8018a74:	18ed      	addlt	r5, r5, r3
 8018a76:	1b2c      	sublt	r4, r5, r4
 8018a78:	b2a5      	uxthlt	r5, r4
 8018a7a:	460c      	movlt	r4, r1
 8018a7c:	8891      	ldrh	r1, [r2, #4]
 8018a7e:	440b      	add	r3, r1
 8018a80:	b21b      	sxth	r3, r3
 8018a82:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a84:	88d3      	ldrh	r3, [r2, #6]
 8018a86:	8852      	ldrh	r2, [r2, #2]
 8018a88:	4413      	add	r3, r2
 8018a8a:	b21b      	sxth	r3, r3
 8018a8c:	930d      	str	r3, [sp, #52]	; 0x34
 8018a8e:	4bbe      	ldr	r3, [pc, #760]	; (8018d88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018a90:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018a92:	f893 b000 	ldrb.w	fp, [r3]
 8018a96:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018a9a:	f1dc 0300 	rsbs	r3, ip, #0
 8018a9e:	eb43 030c 	adc.w	r3, r3, ip
 8018aa2:	930e      	str	r3, [sp, #56]	; 0x38
 8018aa4:	4621      	mov	r1, r4
 8018aa6:	4653      	mov	r3, sl
 8018aa8:	a814      	add	r0, sp, #80	; 0x50
 8018aaa:	f7f8 f8b5 	bl	8010c18 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018aae:	4621      	mov	r1, r4
 8018ab0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018ab4:	4653      	mov	r3, sl
 8018ab6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018ab8:	a814      	add	r0, sp, #80	; 0x50
 8018aba:	f7f8 f8ca 	bl	8010c52 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018abe:	a918      	add	r1, sp, #96	; 0x60
 8018ac0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018ac4:	a817      	add	r0, sp, #92	; 0x5c
 8018ac6:	f7f8 f9eb 	bl	8010ea0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018aca:	f1ba 0f00 	cmp.w	sl, #0
 8018ace:	f040 80f4 	bne.w	8018cba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8018ad2:	f1bb 0f01 	cmp.w	fp, #1
 8018ad6:	f040 80f8 	bne.w	8018cca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018ada:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018adc:	2b00      	cmp	r3, #0
 8018ade:	f040 8145 	bne.w	8018d6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8018ae2:	b2ba      	uxth	r2, r7
 8018ae4:	b905      	cbnz	r5, 8018ae8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018ae6:	b16e      	cbz	r6, 8018b04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018ae8:	fb06 5302 	mla	r3, r6, r2, r5
 8018aec:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8018aee:	fb08 f303 	mul.w	r3, r8, r3
 8018af2:	4631      	mov	r1, r6
 8018af4:	f003 0607 	and.w	r6, r3, #7
 8018af8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018afc:	9328      	str	r3, [sp, #160]	; 0xa0
 8018afe:	eba9 0301 	sub.w	r3, r9, r1
 8018b02:	930a      	str	r3, [sp, #40]	; 0x28
 8018b04:	4651      	mov	r1, sl
 8018b06:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018b08:	f7ff ff1c 	bl	8018944 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018b0c:	4681      	mov	r9, r0
 8018b0e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018b10:	f7ff ff42 	bl	8018998 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018b14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018b16:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018b18:	eba3 0a01 	sub.w	sl, r3, r1
 8018b1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018b1e:	459a      	cmp	sl, r3
 8018b20:	bfa8      	it	ge
 8018b22:	469a      	movge	sl, r3
 8018b24:	f1ba 0f00 	cmp.w	sl, #0
 8018b28:	4683      	mov	fp, r0
 8018b2a:	f340 811a 	ble.w	8018d62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018b30:	1b64      	subs	r4, r4, r5
 8018b32:	1b1c      	subs	r4, r3, r4
 8018b34:	42bc      	cmp	r4, r7
 8018b36:	bfd4      	ite	le
 8018b38:	ebc5 0504 	rsble	r5, r5, r4
 8018b3c:	ebc5 0507 	rsbgt	r5, r5, r7
 8018b40:	2d00      	cmp	r5, #0
 8018b42:	f340 810e 	ble.w	8018d62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b46:	1b52      	subs	r2, r2, r5
 8018b48:	fb08 f302 	mul.w	r3, r8, r2
 8018b4c:	930f      	str	r3, [sp, #60]	; 0x3c
 8018b4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018b50:	2b00      	cmp	r3, #0
 8018b52:	f040 8116 	bne.w	8018d82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018b56:	4b8d      	ldr	r3, [pc, #564]	; (8018d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018b58:	6818      	ldr	r0, [r3, #0]
 8018b5a:	6803      	ldr	r3, [r0, #0]
 8018b5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018b5e:	4798      	blx	r3
 8018b60:	2301      	movs	r3, #1
 8018b62:	fa03 f308 	lsl.w	r3, r3, r8
 8018b66:	4a8a      	ldr	r2, [pc, #552]	; (8018d90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018b68:	3b01      	subs	r3, #1
 8018b6a:	b2db      	uxtb	r3, r3
 8018b6c:	8811      	ldrh	r1, [r2, #0]
 8018b6e:	930e      	str	r3, [sp, #56]	; 0x38
 8018b70:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018b74:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018b78:	fb01 2303 	mla	r3, r1, r3, r2
 8018b7c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018b80:	930a      	str	r3, [sp, #40]	; 0x28
 8018b82:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018b84:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018b88:	9313      	str	r3, [sp, #76]	; 0x4c
 8018b8a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018b8c:	0a19      	lsrs	r1, r3, #8
 8018b8e:	b2cb      	uxtb	r3, r1
 8018b90:	9312      	str	r3, [sp, #72]	; 0x48
 8018b92:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018b94:	b2db      	uxtb	r3, r3
 8018b96:	9311      	str	r3, [sp, #68]	; 0x44
 8018b98:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018b9a:	095a      	lsrs	r2, r3, #5
 8018b9c:	4b7d      	ldr	r3, [pc, #500]	; (8018d94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8018b9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018ba2:	400b      	ands	r3, r1
 8018ba4:	4313      	orrs	r3, r2
 8018ba6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018ba8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018bac:	4313      	orrs	r3, r2
 8018bae:	b29b      	uxth	r3, r3
 8018bb0:	9310      	str	r3, [sp, #64]	; 0x40
 8018bb2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018bb4:	781a      	ldrb	r2, [r3, #0]
 8018bb6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018bba:	4132      	asrs	r2, r6
 8018bbc:	fb05 b919 	mls	r9, r5, r9, fp
 8018bc0:	fb03 fb05 	mul.w	fp, r3, r5
 8018bc4:	b2d2      	uxtb	r2, r2
 8018bc6:	930d      	str	r3, [sp, #52]	; 0x34
 8018bc8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018bcc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018bd0:	f0c0 80f5 	bcc.w	8018dbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018bd4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018bd8:	46ae      	mov	lr, r5
 8018bda:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8018bde:	f0c0 80dd 	bcc.w	8018d9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8018be2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018be4:	4013      	ands	r3, r2
 8018be6:	d055      	beq.n	8018c94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018be8:	20ff      	movs	r0, #255	; 0xff
 8018bea:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018bec:	fb90 f1f1 	sdiv	r1, r0, r1
 8018bf0:	434b      	muls	r3, r1
 8018bf2:	2bfe      	cmp	r3, #254	; 0xfe
 8018bf4:	dd03      	ble.n	8018bfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018bf6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018bf8:	4281      	cmp	r1, r0
 8018bfa:	f000 80cd 	beq.w	8018d98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8018bfe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018c00:	f8bc 4000 	ldrh.w	r4, [ip]
 8018c04:	fb11 f303 	smulbb	r3, r1, r3
 8018c08:	b29b      	uxth	r3, r3
 8018c0a:	1c59      	adds	r1, r3, #1
 8018c0c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018c10:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018c14:	b29f      	uxth	r7, r3
 8018c16:	43db      	mvns	r3, r3
 8018c18:	b2db      	uxtb	r3, r3
 8018c1a:	9309      	str	r3, [sp, #36]	; 0x24
 8018c1c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018c1e:	1220      	asrs	r0, r4, #8
 8018c20:	fb13 f907 	smulbb	r9, r3, r7
 8018c24:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018c28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c2a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018c2e:	fb00 9003 	mla	r0, r0, r3, r9
 8018c32:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018c34:	10e1      	asrs	r1, r4, #3
 8018c36:	fb13 f907 	smulbb	r9, r3, r7
 8018c3a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018c3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c40:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018c44:	fb01 9103 	mla	r1, r1, r3, r9
 8018c48:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018c4a:	00e4      	lsls	r4, r4, #3
 8018c4c:	fb13 f707 	smulbb	r7, r3, r7
 8018c50:	b2e4      	uxtb	r4, r4
 8018c52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c54:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018c58:	fb04 7403 	mla	r4, r4, r3, r7
 8018c5c:	b280      	uxth	r0, r0
 8018c5e:	b2a4      	uxth	r4, r4
 8018c60:	1c43      	adds	r3, r0, #1
 8018c62:	f104 0901 	add.w	r9, r4, #1
 8018c66:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018c6a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018c6e:	b289      	uxth	r1, r1
 8018c70:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018c74:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018c78:	ea49 0000 	orr.w	r0, r9, r0
 8018c7c:	f101 0901 	add.w	r9, r1, #1
 8018c80:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018c84:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018c88:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018c8c:	ea40 0009 	orr.w	r0, r0, r9
 8018c90:	f8ac 0000 	strh.w	r0, [ip]
 8018c94:	4446      	add	r6, r8
 8018c96:	b2b6      	uxth	r6, r6
 8018c98:	2e07      	cmp	r6, #7
 8018c9a:	bf81      	itttt	hi
 8018c9c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8018c9e:	785a      	ldrbhi	r2, [r3, #1]
 8018ca0:	3301      	addhi	r3, #1
 8018ca2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018ca4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ca6:	bf9a      	itte	ls
 8018ca8:	fa42 f208 	asrls.w	r2, r2, r8
 8018cac:	b2d2      	uxtbls	r2, r2
 8018cae:	2600      	movhi	r6, #0
 8018cb0:	449c      	add	ip, r3
 8018cb2:	e792      	b.n	8018bda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018cb4:	441c      	add	r4, r3
 8018cb6:	b224      	sxth	r4, r4
 8018cb8:	e6d5      	b.n	8018a66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018cba:	f1ba 0f01 	cmp.w	sl, #1
 8018cbe:	f47f af0c 	bne.w	8018ada <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018cc2:	f1bb 0f01 	cmp.w	fp, #1
 8018cc6:	f47f af08 	bne.w	8018ada <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018cca:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018cce:	f8db 0000 	ldr.w	r0, [fp]
 8018cd2:	6803      	ldr	r3, [r0, #0]
 8018cd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018cd6:	4798      	blx	r3
 8018cd8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018cdc:	465a      	mov	r2, fp
 8018cde:	d006      	beq.n	8018cee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018ce0:	f1b8 0f04 	cmp.w	r8, #4
 8018ce4:	d140      	bne.n	8018d68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018ce6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ce8:	3300      	adds	r3, #0
 8018cea:	bf18      	it	ne
 8018cec:	2301      	movne	r3, #1
 8018cee:	0580      	lsls	r0, r0, #22
 8018cf0:	d56e      	bpl.n	8018dd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018cf2:	f1b8 0f08 	cmp.w	r8, #8
 8018cf6:	d16b      	bne.n	8018dd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018cf8:	2b00      	cmp	r3, #0
 8018cfa:	bf0c      	ite	eq
 8018cfc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8018d00:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018d04:	2d00      	cmp	r5, #0
 8018d06:	f47f aee8 	bne.w	8018ada <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018d0a:	2e00      	cmp	r6, #0
 8018d0c:	f47f aee5 	bne.w	8018ada <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018d10:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018d12:	19e3      	adds	r3, r4, r7
 8018d14:	4283      	cmp	r3, r0
 8018d16:	f73f aee0 	bgt.w	8018ada <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018d1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d1c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018d1e:	444b      	add	r3, r9
 8018d20:	4283      	cmp	r3, r0
 8018d22:	f73f aeda 	bgt.w	8018ada <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018d26:	6810      	ldr	r0, [r2, #0]
 8018d28:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018d2c:	6804      	ldr	r4, [r0, #0]
 8018d2e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018d32:	b2bf      	uxth	r7, r7
 8018d34:	f1b8 0f08 	cmp.w	r8, #8
 8018d38:	f04f 0500 	mov.w	r5, #0
 8018d3c:	bf18      	it	ne
 8018d3e:	3701      	addne	r7, #1
 8018d40:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018d44:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018d46:	9104      	str	r1, [sp, #16]
 8018d48:	bf18      	it	ne
 8018d4a:	f027 0701 	bicne.w	r7, r7, #1
 8018d4e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018d50:	bf18      	it	ne
 8018d52:	b2bf      	uxthne	r7, r7
 8018d54:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018d58:	e9cd 7900 	strd	r7, r9, [sp]
 8018d5c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018d5e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8018d60:	47a0      	blx	r4
 8018d62:	b019      	add	sp, #100	; 0x64
 8018d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d68:	2300      	movs	r3, #0
 8018d6a:	e7c0      	b.n	8018cee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018d6c:	2208      	movs	r2, #8
 8018d6e:	fb92 f3f8 	sdiv	r3, r2, r8
 8018d72:	1e5a      	subs	r2, r3, #1
 8018d74:	443a      	add	r2, r7
 8018d76:	fb92 f2f3 	sdiv	r2, r2, r3
 8018d7a:	fb12 f203 	smulbb	r2, r2, r3
 8018d7e:	b292      	uxth	r2, r2
 8018d80:	e6b0      	b.n	8018ae4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018d82:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018d84:	e6ec      	b.n	8018b60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018d86:	bf00      	nop
 8018d88:	200157ec 	.word	0x200157ec
 8018d8c:	200157f4 	.word	0x200157f4
 8018d90:	200157ee 	.word	0x200157ee
 8018d94:	00fff800 	.word	0x00fff800
 8018d98:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018d9a:	e779      	b.n	8018c90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018d9c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018d9e:	b153      	cbz	r3, 8018db6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018da0:	441e      	add	r6, r3
 8018da2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018da4:	b2b6      	uxth	r6, r6
 8018da6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018daa:	f006 0607 	and.w	r6, r6, #7
 8018dae:	781a      	ldrb	r2, [r3, #0]
 8018db0:	9328      	str	r3, [sp, #160]	; 0xa0
 8018db2:	4132      	asrs	r2, r6
 8018db4:	b2d2      	uxtb	r2, r2
 8018db6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018db8:	445b      	add	r3, fp
 8018dba:	930a      	str	r3, [sp, #40]	; 0x28
 8018dbc:	e706      	b.n	8018bcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018dbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018dc0:	2b00      	cmp	r3, #0
 8018dc2:	d1ce      	bne.n	8018d62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018dc4:	4b05      	ldr	r3, [pc, #20]	; (8018ddc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018dc6:	6818      	ldr	r0, [r3, #0]
 8018dc8:	6803      	ldr	r3, [r0, #0]
 8018dca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018dcc:	4798      	blx	r3
 8018dce:	e7c8      	b.n	8018d62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018dd0:	2b00      	cmp	r3, #0
 8018dd2:	f43f ae82 	beq.w	8018ada <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018dd6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018dda:	e793      	b.n	8018d04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018ddc:	200157f4 	.word	0x200157f4

08018de0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018de0:	b538      	push	{r3, r4, r5, lr}
 8018de2:	4c15      	ldr	r4, [pc, #84]	; (8018e38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018de4:	7823      	ldrb	r3, [r4, #0]
 8018de6:	f3bf 8f5b 	dmb	ish
 8018dea:	07da      	lsls	r2, r3, #31
 8018dec:	4605      	mov	r5, r0
 8018dee:	d40b      	bmi.n	8018e08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018df0:	4620      	mov	r0, r4
 8018df2:	f007 fd73 	bl	80208dc <__cxa_guard_acquire>
 8018df6:	b138      	cbz	r0, 8018e08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018df8:	4620      	mov	r0, r4
 8018dfa:	f007 fd7b 	bl	80208f4 <__cxa_guard_release>
 8018dfe:	4a0f      	ldr	r2, [pc, #60]	; (8018e3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018e00:	490f      	ldr	r1, [pc, #60]	; (8018e40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018e02:	4810      	ldr	r0, [pc, #64]	; (8018e44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018e04:	f007 fd63 	bl	80208ce <__aeabi_atexit>
 8018e08:	4c0f      	ldr	r4, [pc, #60]	; (8018e48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018e0a:	7823      	ldrb	r3, [r4, #0]
 8018e0c:	f3bf 8f5b 	dmb	ish
 8018e10:	07db      	lsls	r3, r3, #31
 8018e12:	d40b      	bmi.n	8018e2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018e14:	4620      	mov	r0, r4
 8018e16:	f007 fd61 	bl	80208dc <__cxa_guard_acquire>
 8018e1a:	b138      	cbz	r0, 8018e2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018e1c:	4620      	mov	r0, r4
 8018e1e:	f007 fd69 	bl	80208f4 <__cxa_guard_release>
 8018e22:	4a06      	ldr	r2, [pc, #24]	; (8018e3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018e24:	4909      	ldr	r1, [pc, #36]	; (8018e4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018e26:	480a      	ldr	r0, [pc, #40]	; (8018e50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018e28:	f007 fd51 	bl	80208ce <__aeabi_atexit>
 8018e2c:	4b05      	ldr	r3, [pc, #20]	; (8018e44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018e2e:	612b      	str	r3, [r5, #16]
 8018e30:	4b07      	ldr	r3, [pc, #28]	; (8018e50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018e32:	616b      	str	r3, [r5, #20]
 8018e34:	bd38      	pop	{r3, r4, r5, pc}
 8018e36:	bf00      	nop
 8018e38:	200158c8 	.word	0x200158c8
 8018e3c:	20000000 	.word	0x20000000
 8018e40:	08016ff1 	.word	0x08016ff1
 8018e44:	200000d0 	.word	0x200000d0
 8018e48:	200158cc 	.word	0x200158cc
 8018e4c:	08016fef 	.word	0x08016fef
 8018e50:	200000d4 	.word	0x200000d4

08018e54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018e54:	b538      	push	{r3, r4, r5, lr}
 8018e56:	4c15      	ldr	r4, [pc, #84]	; (8018eac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018e58:	7823      	ldrb	r3, [r4, #0]
 8018e5a:	f3bf 8f5b 	dmb	ish
 8018e5e:	07da      	lsls	r2, r3, #31
 8018e60:	4605      	mov	r5, r0
 8018e62:	d40b      	bmi.n	8018e7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018e64:	4620      	mov	r0, r4
 8018e66:	f007 fd39 	bl	80208dc <__cxa_guard_acquire>
 8018e6a:	b138      	cbz	r0, 8018e7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018e6c:	4620      	mov	r0, r4
 8018e6e:	f007 fd41 	bl	80208f4 <__cxa_guard_release>
 8018e72:	4a0f      	ldr	r2, [pc, #60]	; (8018eb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018e74:	490f      	ldr	r1, [pc, #60]	; (8018eb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018e76:	4810      	ldr	r0, [pc, #64]	; (8018eb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018e78:	f007 fd29 	bl	80208ce <__aeabi_atexit>
 8018e7c:	4c0f      	ldr	r4, [pc, #60]	; (8018ebc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018e7e:	7823      	ldrb	r3, [r4, #0]
 8018e80:	f3bf 8f5b 	dmb	ish
 8018e84:	07db      	lsls	r3, r3, #31
 8018e86:	d40b      	bmi.n	8018ea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018e88:	4620      	mov	r0, r4
 8018e8a:	f007 fd27 	bl	80208dc <__cxa_guard_acquire>
 8018e8e:	b138      	cbz	r0, 8018ea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018e90:	4620      	mov	r0, r4
 8018e92:	f007 fd2f 	bl	80208f4 <__cxa_guard_release>
 8018e96:	4a06      	ldr	r2, [pc, #24]	; (8018eb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018e98:	4909      	ldr	r1, [pc, #36]	; (8018ec0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018e9a:	480a      	ldr	r0, [pc, #40]	; (8018ec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018e9c:	f007 fd17 	bl	80208ce <__aeabi_atexit>
 8018ea0:	4b05      	ldr	r3, [pc, #20]	; (8018eb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018ea2:	60ab      	str	r3, [r5, #8]
 8018ea4:	4b07      	ldr	r3, [pc, #28]	; (8018ec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018ea6:	60eb      	str	r3, [r5, #12]
 8018ea8:	bd38      	pop	{r3, r4, r5, pc}
 8018eaa:	bf00      	nop
 8018eac:	200158a0 	.word	0x200158a0
 8018eb0:	20000000 	.word	0x20000000
 8018eb4:	08016ff5 	.word	0x08016ff5
 8018eb8:	200000a8 	.word	0x200000a8
 8018ebc:	200158a4 	.word	0x200158a4
 8018ec0:	08016ff3 	.word	0x08016ff3
 8018ec4:	200000ac 	.word	0x200000ac

08018ec8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018ec8:	b510      	push	{r4, lr}
 8018eca:	4604      	mov	r4, r0
 8018ecc:	f7ff ff88 	bl	8018de0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018ed0:	4620      	mov	r0, r4
 8018ed2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018ed6:	f7ff bfbd 	b.w	8018e54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018edc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018edc:	b538      	push	{r3, r4, r5, lr}
 8018ede:	4c15      	ldr	r4, [pc, #84]	; (8018f34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018ee0:	7823      	ldrb	r3, [r4, #0]
 8018ee2:	f3bf 8f5b 	dmb	ish
 8018ee6:	07da      	lsls	r2, r3, #31
 8018ee8:	4605      	mov	r5, r0
 8018eea:	d40b      	bmi.n	8018f04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018eec:	4620      	mov	r0, r4
 8018eee:	f007 fcf5 	bl	80208dc <__cxa_guard_acquire>
 8018ef2:	b138      	cbz	r0, 8018f04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018ef4:	4620      	mov	r0, r4
 8018ef6:	f007 fcfd 	bl	80208f4 <__cxa_guard_release>
 8018efa:	4a0f      	ldr	r2, [pc, #60]	; (8018f38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018efc:	490f      	ldr	r1, [pc, #60]	; (8018f3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018efe:	4810      	ldr	r0, [pc, #64]	; (8018f40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018f00:	f007 fce5 	bl	80208ce <__aeabi_atexit>
 8018f04:	4c0f      	ldr	r4, [pc, #60]	; (8018f44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018f06:	7823      	ldrb	r3, [r4, #0]
 8018f08:	f3bf 8f5b 	dmb	ish
 8018f0c:	07db      	lsls	r3, r3, #31
 8018f0e:	d40b      	bmi.n	8018f28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018f10:	4620      	mov	r0, r4
 8018f12:	f007 fce3 	bl	80208dc <__cxa_guard_acquire>
 8018f16:	b138      	cbz	r0, 8018f28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018f18:	4620      	mov	r0, r4
 8018f1a:	f007 fceb 	bl	80208f4 <__cxa_guard_release>
 8018f1e:	4a06      	ldr	r2, [pc, #24]	; (8018f38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018f20:	4909      	ldr	r1, [pc, #36]	; (8018f48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018f22:	480a      	ldr	r0, [pc, #40]	; (8018f4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018f24:	f007 fcd3 	bl	80208ce <__aeabi_atexit>
 8018f28:	4b05      	ldr	r3, [pc, #20]	; (8018f40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018f2a:	622b      	str	r3, [r5, #32]
 8018f2c:	4b07      	ldr	r3, [pc, #28]	; (8018f4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018f2e:	626b      	str	r3, [r5, #36]	; 0x24
 8018f30:	bd38      	pop	{r3, r4, r5, pc}
 8018f32:	bf00      	nop
 8018f34:	200158d0 	.word	0x200158d0
 8018f38:	20000000 	.word	0x20000000
 8018f3c:	08016fe9 	.word	0x08016fe9
 8018f40:	200000d8 	.word	0x200000d8
 8018f44:	200158d4 	.word	0x200158d4
 8018f48:	08016fe7 	.word	0x08016fe7
 8018f4c:	200000dc 	.word	0x200000dc

08018f50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018f50:	b538      	push	{r3, r4, r5, lr}
 8018f52:	4c15      	ldr	r4, [pc, #84]	; (8018fa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018f54:	7823      	ldrb	r3, [r4, #0]
 8018f56:	f3bf 8f5b 	dmb	ish
 8018f5a:	07da      	lsls	r2, r3, #31
 8018f5c:	4605      	mov	r5, r0
 8018f5e:	d40b      	bmi.n	8018f78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018f60:	4620      	mov	r0, r4
 8018f62:	f007 fcbb 	bl	80208dc <__cxa_guard_acquire>
 8018f66:	b138      	cbz	r0, 8018f78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018f68:	4620      	mov	r0, r4
 8018f6a:	f007 fcc3 	bl	80208f4 <__cxa_guard_release>
 8018f6e:	4a0f      	ldr	r2, [pc, #60]	; (8018fac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018f70:	490f      	ldr	r1, [pc, #60]	; (8018fb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018f72:	4810      	ldr	r0, [pc, #64]	; (8018fb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018f74:	f007 fcab 	bl	80208ce <__aeabi_atexit>
 8018f78:	4c0f      	ldr	r4, [pc, #60]	; (8018fb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018f7a:	7823      	ldrb	r3, [r4, #0]
 8018f7c:	f3bf 8f5b 	dmb	ish
 8018f80:	07db      	lsls	r3, r3, #31
 8018f82:	d40b      	bmi.n	8018f9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018f84:	4620      	mov	r0, r4
 8018f86:	f007 fca9 	bl	80208dc <__cxa_guard_acquire>
 8018f8a:	b138      	cbz	r0, 8018f9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018f8c:	4620      	mov	r0, r4
 8018f8e:	f007 fcb1 	bl	80208f4 <__cxa_guard_release>
 8018f92:	4a06      	ldr	r2, [pc, #24]	; (8018fac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018f94:	4909      	ldr	r1, [pc, #36]	; (8018fbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018f96:	480a      	ldr	r0, [pc, #40]	; (8018fc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018f98:	f007 fc99 	bl	80208ce <__aeabi_atexit>
 8018f9c:	4b05      	ldr	r3, [pc, #20]	; (8018fb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018f9e:	61ab      	str	r3, [r5, #24]
 8018fa0:	4b07      	ldr	r3, [pc, #28]	; (8018fc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018fa2:	61eb      	str	r3, [r5, #28]
 8018fa4:	bd38      	pop	{r3, r4, r5, pc}
 8018fa6:	bf00      	nop
 8018fa8:	200158a8 	.word	0x200158a8
 8018fac:	20000000 	.word	0x20000000
 8018fb0:	08016fed 	.word	0x08016fed
 8018fb4:	200000b0 	.word	0x200000b0
 8018fb8:	200158ac 	.word	0x200158ac
 8018fbc:	08016feb 	.word	0x08016feb
 8018fc0:	200000b4 	.word	0x200000b4

08018fc4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018fc4:	b510      	push	{r4, lr}
 8018fc6:	4604      	mov	r4, r0
 8018fc8:	f7ff ff88 	bl	8018edc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018fcc:	4620      	mov	r0, r4
 8018fce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018fd2:	f7ff bfbd 	b.w	8018f50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018fd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018fd8:	b538      	push	{r3, r4, r5, lr}
 8018fda:	4c15      	ldr	r4, [pc, #84]	; (8019030 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018fdc:	7823      	ldrb	r3, [r4, #0]
 8018fde:	f3bf 8f5b 	dmb	ish
 8018fe2:	07da      	lsls	r2, r3, #31
 8018fe4:	4605      	mov	r5, r0
 8018fe6:	d40b      	bmi.n	8019000 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018fe8:	4620      	mov	r0, r4
 8018fea:	f007 fc77 	bl	80208dc <__cxa_guard_acquire>
 8018fee:	b138      	cbz	r0, 8019000 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018ff0:	4620      	mov	r0, r4
 8018ff2:	f007 fc7f 	bl	80208f4 <__cxa_guard_release>
 8018ff6:	4a0f      	ldr	r2, [pc, #60]	; (8019034 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018ff8:	490f      	ldr	r1, [pc, #60]	; (8019038 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018ffa:	4810      	ldr	r0, [pc, #64]	; (801903c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018ffc:	f007 fc67 	bl	80208ce <__aeabi_atexit>
 8019000:	4c0f      	ldr	r4, [pc, #60]	; (8019040 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8019002:	7823      	ldrb	r3, [r4, #0]
 8019004:	f3bf 8f5b 	dmb	ish
 8019008:	07db      	lsls	r3, r3, #31
 801900a:	d40b      	bmi.n	8019024 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801900c:	4620      	mov	r0, r4
 801900e:	f007 fc65 	bl	80208dc <__cxa_guard_acquire>
 8019012:	b138      	cbz	r0, 8019024 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019014:	4620      	mov	r0, r4
 8019016:	f007 fc6d 	bl	80208f4 <__cxa_guard_release>
 801901a:	4a06      	ldr	r2, [pc, #24]	; (8019034 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801901c:	4909      	ldr	r1, [pc, #36]	; (8019044 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801901e:	480a      	ldr	r0, [pc, #40]	; (8019048 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019020:	f007 fc55 	bl	80208ce <__aeabi_atexit>
 8019024:	4b05      	ldr	r3, [pc, #20]	; (801903c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019026:	632b      	str	r3, [r5, #48]	; 0x30
 8019028:	4b07      	ldr	r3, [pc, #28]	; (8019048 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801902a:	636b      	str	r3, [r5, #52]	; 0x34
 801902c:	bd38      	pop	{r3, r4, r5, pc}
 801902e:	bf00      	nop
 8019030:	200158e0 	.word	0x200158e0
 8019034:	20000000 	.word	0x20000000
 8019038:	08016fe1 	.word	0x08016fe1
 801903c:	200000e8 	.word	0x200000e8
 8019040:	200158e4 	.word	0x200158e4
 8019044:	08016fdf 	.word	0x08016fdf
 8019048:	200000ec 	.word	0x200000ec

0801904c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801904c:	b538      	push	{r3, r4, r5, lr}
 801904e:	4c15      	ldr	r4, [pc, #84]	; (80190a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019050:	7823      	ldrb	r3, [r4, #0]
 8019052:	f3bf 8f5b 	dmb	ish
 8019056:	07da      	lsls	r2, r3, #31
 8019058:	4605      	mov	r5, r0
 801905a:	d40b      	bmi.n	8019074 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801905c:	4620      	mov	r0, r4
 801905e:	f007 fc3d 	bl	80208dc <__cxa_guard_acquire>
 8019062:	b138      	cbz	r0, 8019074 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019064:	4620      	mov	r0, r4
 8019066:	f007 fc45 	bl	80208f4 <__cxa_guard_release>
 801906a:	4a0f      	ldr	r2, [pc, #60]	; (80190a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801906c:	490f      	ldr	r1, [pc, #60]	; (80190ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801906e:	4810      	ldr	r0, [pc, #64]	; (80190b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019070:	f007 fc2d 	bl	80208ce <__aeabi_atexit>
 8019074:	4c0f      	ldr	r4, [pc, #60]	; (80190b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019076:	7823      	ldrb	r3, [r4, #0]
 8019078:	f3bf 8f5b 	dmb	ish
 801907c:	07db      	lsls	r3, r3, #31
 801907e:	d40b      	bmi.n	8019098 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019080:	4620      	mov	r0, r4
 8019082:	f007 fc2b 	bl	80208dc <__cxa_guard_acquire>
 8019086:	b138      	cbz	r0, 8019098 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019088:	4620      	mov	r0, r4
 801908a:	f007 fc33 	bl	80208f4 <__cxa_guard_release>
 801908e:	4a06      	ldr	r2, [pc, #24]	; (80190a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019090:	4909      	ldr	r1, [pc, #36]	; (80190b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019092:	480a      	ldr	r0, [pc, #40]	; (80190bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019094:	f007 fc1b 	bl	80208ce <__aeabi_atexit>
 8019098:	4b05      	ldr	r3, [pc, #20]	; (80190b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801909a:	62ab      	str	r3, [r5, #40]	; 0x28
 801909c:	4b07      	ldr	r3, [pc, #28]	; (80190bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801909e:	62eb      	str	r3, [r5, #44]	; 0x2c
 80190a0:	bd38      	pop	{r3, r4, r5, pc}
 80190a2:	bf00      	nop
 80190a4:	200158b0 	.word	0x200158b0
 80190a8:	20000000 	.word	0x20000000
 80190ac:	08016fe5 	.word	0x08016fe5
 80190b0:	200000b8 	.word	0x200000b8
 80190b4:	200158b4 	.word	0x200158b4
 80190b8:	08016fe3 	.word	0x08016fe3
 80190bc:	200000bc 	.word	0x200000bc

080190c0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80190c0:	b510      	push	{r4, lr}
 80190c2:	4604      	mov	r4, r0
 80190c4:	f7ff ff88 	bl	8018fd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80190c8:	4620      	mov	r0, r4
 80190ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80190ce:	f7ff bfbd 	b.w	801904c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080190d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80190d4:	b538      	push	{r3, r4, r5, lr}
 80190d6:	4c15      	ldr	r4, [pc, #84]	; (801912c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80190d8:	7823      	ldrb	r3, [r4, #0]
 80190da:	f3bf 8f5b 	dmb	ish
 80190de:	07da      	lsls	r2, r3, #31
 80190e0:	4605      	mov	r5, r0
 80190e2:	d40b      	bmi.n	80190fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80190e4:	4620      	mov	r0, r4
 80190e6:	f007 fbf9 	bl	80208dc <__cxa_guard_acquire>
 80190ea:	b138      	cbz	r0, 80190fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80190ec:	4620      	mov	r0, r4
 80190ee:	f007 fc01 	bl	80208f4 <__cxa_guard_release>
 80190f2:	4a0f      	ldr	r2, [pc, #60]	; (8019130 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80190f4:	490f      	ldr	r1, [pc, #60]	; (8019134 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80190f6:	4810      	ldr	r0, [pc, #64]	; (8019138 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80190f8:	f007 fbe9 	bl	80208ce <__aeabi_atexit>
 80190fc:	4c0f      	ldr	r4, [pc, #60]	; (801913c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80190fe:	7823      	ldrb	r3, [r4, #0]
 8019100:	f3bf 8f5b 	dmb	ish
 8019104:	07db      	lsls	r3, r3, #31
 8019106:	d40b      	bmi.n	8019120 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019108:	4620      	mov	r0, r4
 801910a:	f007 fbe7 	bl	80208dc <__cxa_guard_acquire>
 801910e:	b138      	cbz	r0, 8019120 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019110:	4620      	mov	r0, r4
 8019112:	f007 fbef 	bl	80208f4 <__cxa_guard_release>
 8019116:	4a06      	ldr	r2, [pc, #24]	; (8019130 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019118:	4909      	ldr	r1, [pc, #36]	; (8019140 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801911a:	480a      	ldr	r0, [pc, #40]	; (8019144 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801911c:	f007 fbd7 	bl	80208ce <__aeabi_atexit>
 8019120:	4b05      	ldr	r3, [pc, #20]	; (8019138 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019122:	652b      	str	r3, [r5, #80]	; 0x50
 8019124:	4b07      	ldr	r3, [pc, #28]	; (8019144 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019126:	656b      	str	r3, [r5, #84]	; 0x54
 8019128:	bd38      	pop	{r3, r4, r5, pc}
 801912a:	bf00      	nop
 801912c:	200158e8 	.word	0x200158e8
 8019130:	20000000 	.word	0x20000000
 8019134:	08016fd1 	.word	0x08016fd1
 8019138:	200000f0 	.word	0x200000f0
 801913c:	200158ec 	.word	0x200158ec
 8019140:	08016fcf 	.word	0x08016fcf
 8019144:	200000f4 	.word	0x200000f4

08019148 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019148:	b538      	push	{r3, r4, r5, lr}
 801914a:	4c15      	ldr	r4, [pc, #84]	; (80191a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801914c:	7823      	ldrb	r3, [r4, #0]
 801914e:	f3bf 8f5b 	dmb	ish
 8019152:	07da      	lsls	r2, r3, #31
 8019154:	4605      	mov	r5, r0
 8019156:	d40b      	bmi.n	8019170 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019158:	4620      	mov	r0, r4
 801915a:	f007 fbbf 	bl	80208dc <__cxa_guard_acquire>
 801915e:	b138      	cbz	r0, 8019170 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019160:	4620      	mov	r0, r4
 8019162:	f007 fbc7 	bl	80208f4 <__cxa_guard_release>
 8019166:	4a0f      	ldr	r2, [pc, #60]	; (80191a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019168:	490f      	ldr	r1, [pc, #60]	; (80191a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801916a:	4810      	ldr	r0, [pc, #64]	; (80191ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801916c:	f007 fbaf 	bl	80208ce <__aeabi_atexit>
 8019170:	4c0f      	ldr	r4, [pc, #60]	; (80191b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019172:	7823      	ldrb	r3, [r4, #0]
 8019174:	f3bf 8f5b 	dmb	ish
 8019178:	07db      	lsls	r3, r3, #31
 801917a:	d40b      	bmi.n	8019194 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801917c:	4620      	mov	r0, r4
 801917e:	f007 fbad 	bl	80208dc <__cxa_guard_acquire>
 8019182:	b138      	cbz	r0, 8019194 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019184:	4620      	mov	r0, r4
 8019186:	f007 fbb5 	bl	80208f4 <__cxa_guard_release>
 801918a:	4a06      	ldr	r2, [pc, #24]	; (80191a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801918c:	4909      	ldr	r1, [pc, #36]	; (80191b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801918e:	480a      	ldr	r0, [pc, #40]	; (80191b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019190:	f007 fb9d 	bl	80208ce <__aeabi_atexit>
 8019194:	4b05      	ldr	r3, [pc, #20]	; (80191ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019196:	64ab      	str	r3, [r5, #72]	; 0x48
 8019198:	4b07      	ldr	r3, [pc, #28]	; (80191b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801919a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801919c:	bd38      	pop	{r3, r4, r5, pc}
 801919e:	bf00      	nop
 80191a0:	200158f0 	.word	0x200158f0
 80191a4:	20000000 	.word	0x20000000
 80191a8:	08016fd5 	.word	0x08016fd5
 80191ac:	200000f8 	.word	0x200000f8
 80191b0:	200158f4 	.word	0x200158f4
 80191b4:	08016fd3 	.word	0x08016fd3
 80191b8:	200000fc 	.word	0x200000fc

080191bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80191bc:	b538      	push	{r3, r4, r5, lr}
 80191be:	4c15      	ldr	r4, [pc, #84]	; (8019214 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80191c0:	7823      	ldrb	r3, [r4, #0]
 80191c2:	f3bf 8f5b 	dmb	ish
 80191c6:	07da      	lsls	r2, r3, #31
 80191c8:	4605      	mov	r5, r0
 80191ca:	d40b      	bmi.n	80191e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80191cc:	4620      	mov	r0, r4
 80191ce:	f007 fb85 	bl	80208dc <__cxa_guard_acquire>
 80191d2:	b138      	cbz	r0, 80191e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80191d4:	4620      	mov	r0, r4
 80191d6:	f007 fb8d 	bl	80208f4 <__cxa_guard_release>
 80191da:	4a0f      	ldr	r2, [pc, #60]	; (8019218 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80191dc:	490f      	ldr	r1, [pc, #60]	; (801921c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80191de:	4810      	ldr	r0, [pc, #64]	; (8019220 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80191e0:	f007 fb75 	bl	80208ce <__aeabi_atexit>
 80191e4:	4c0f      	ldr	r4, [pc, #60]	; (8019224 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80191e6:	7823      	ldrb	r3, [r4, #0]
 80191e8:	f3bf 8f5b 	dmb	ish
 80191ec:	07db      	lsls	r3, r3, #31
 80191ee:	d40b      	bmi.n	8019208 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80191f0:	4620      	mov	r0, r4
 80191f2:	f007 fb73 	bl	80208dc <__cxa_guard_acquire>
 80191f6:	b138      	cbz	r0, 8019208 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80191f8:	4620      	mov	r0, r4
 80191fa:	f007 fb7b 	bl	80208f4 <__cxa_guard_release>
 80191fe:	4a06      	ldr	r2, [pc, #24]	; (8019218 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019200:	4909      	ldr	r1, [pc, #36]	; (8019228 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019202:	480a      	ldr	r0, [pc, #40]	; (801922c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019204:	f007 fb63 	bl	80208ce <__aeabi_atexit>
 8019208:	4b05      	ldr	r3, [pc, #20]	; (8019220 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801920a:	642b      	str	r3, [r5, #64]	; 0x40
 801920c:	4b07      	ldr	r3, [pc, #28]	; (801922c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801920e:	646b      	str	r3, [r5, #68]	; 0x44
 8019210:	bd38      	pop	{r3, r4, r5, pc}
 8019212:	bf00      	nop
 8019214:	200158b8 	.word	0x200158b8
 8019218:	20000000 	.word	0x20000000
 801921c:	08016fd9 	.word	0x08016fd9
 8019220:	200000c0 	.word	0x200000c0
 8019224:	200158bc 	.word	0x200158bc
 8019228:	08016fd7 	.word	0x08016fd7
 801922c:	200000c4 	.word	0x200000c4

08019230 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019230:	b538      	push	{r3, r4, r5, lr}
 8019232:	4c15      	ldr	r4, [pc, #84]	; (8019288 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019234:	7823      	ldrb	r3, [r4, #0]
 8019236:	f3bf 8f5b 	dmb	ish
 801923a:	07da      	lsls	r2, r3, #31
 801923c:	4605      	mov	r5, r0
 801923e:	d40b      	bmi.n	8019258 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019240:	4620      	mov	r0, r4
 8019242:	f007 fb4b 	bl	80208dc <__cxa_guard_acquire>
 8019246:	b138      	cbz	r0, 8019258 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019248:	4620      	mov	r0, r4
 801924a:	f007 fb53 	bl	80208f4 <__cxa_guard_release>
 801924e:	4a0f      	ldr	r2, [pc, #60]	; (801928c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019250:	490f      	ldr	r1, [pc, #60]	; (8019290 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019252:	4810      	ldr	r0, [pc, #64]	; (8019294 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019254:	f007 fb3b 	bl	80208ce <__aeabi_atexit>
 8019258:	4c0f      	ldr	r4, [pc, #60]	; (8019298 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801925a:	7823      	ldrb	r3, [r4, #0]
 801925c:	f3bf 8f5b 	dmb	ish
 8019260:	07db      	lsls	r3, r3, #31
 8019262:	d40b      	bmi.n	801927c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019264:	4620      	mov	r0, r4
 8019266:	f007 fb39 	bl	80208dc <__cxa_guard_acquire>
 801926a:	b138      	cbz	r0, 801927c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801926c:	4620      	mov	r0, r4
 801926e:	f007 fb41 	bl	80208f4 <__cxa_guard_release>
 8019272:	4a06      	ldr	r2, [pc, #24]	; (801928c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019274:	4909      	ldr	r1, [pc, #36]	; (801929c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019276:	480a      	ldr	r0, [pc, #40]	; (80192a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019278:	f007 fb29 	bl	80208ce <__aeabi_atexit>
 801927c:	4b05      	ldr	r3, [pc, #20]	; (8019294 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801927e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019280:	4b07      	ldr	r3, [pc, #28]	; (80192a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019282:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019284:	bd38      	pop	{r3, r4, r5, pc}
 8019286:	bf00      	nop
 8019288:	200158d8 	.word	0x200158d8
 801928c:	20000000 	.word	0x20000000
 8019290:	08016fdd 	.word	0x08016fdd
 8019294:	200000e0 	.word	0x200000e0
 8019298:	200158dc 	.word	0x200158dc
 801929c:	08016fdb 	.word	0x08016fdb
 80192a0:	200000e4 	.word	0x200000e4

080192a4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80192a4:	b510      	push	{r4, lr}
 80192a6:	4604      	mov	r4, r0
 80192a8:	f7ff ff14 	bl	80190d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80192ac:	4620      	mov	r0, r4
 80192ae:	f7ff ff85 	bl	80191bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80192b2:	4620      	mov	r0, r4
 80192b4:	f7ff ff48 	bl	8019148 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80192b8:	4620      	mov	r0, r4
 80192ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192be:	f7ff bfb7 	b.w	8019230 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080192c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80192c4:	b538      	push	{r3, r4, r5, lr}
 80192c6:	4c15      	ldr	r4, [pc, #84]	; (801931c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80192c8:	7823      	ldrb	r3, [r4, #0]
 80192ca:	f3bf 8f5b 	dmb	ish
 80192ce:	07da      	lsls	r2, r3, #31
 80192d0:	4605      	mov	r5, r0
 80192d2:	d40b      	bmi.n	80192ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80192d4:	4620      	mov	r0, r4
 80192d6:	f007 fb01 	bl	80208dc <__cxa_guard_acquire>
 80192da:	b138      	cbz	r0, 80192ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80192dc:	4620      	mov	r0, r4
 80192de:	f007 fb09 	bl	80208f4 <__cxa_guard_release>
 80192e2:	4a0f      	ldr	r2, [pc, #60]	; (8019320 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80192e4:	490f      	ldr	r1, [pc, #60]	; (8019324 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80192e6:	4810      	ldr	r0, [pc, #64]	; (8019328 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80192e8:	f007 faf1 	bl	80208ce <__aeabi_atexit>
 80192ec:	4c0f      	ldr	r4, [pc, #60]	; (801932c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80192ee:	7823      	ldrb	r3, [r4, #0]
 80192f0:	f3bf 8f5b 	dmb	ish
 80192f4:	07db      	lsls	r3, r3, #31
 80192f6:	d40b      	bmi.n	8019310 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80192f8:	4620      	mov	r0, r4
 80192fa:	f007 faef 	bl	80208dc <__cxa_guard_acquire>
 80192fe:	b138      	cbz	r0, 8019310 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019300:	4620      	mov	r0, r4
 8019302:	f007 faf7 	bl	80208f4 <__cxa_guard_release>
 8019306:	4a06      	ldr	r2, [pc, #24]	; (8019320 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019308:	4909      	ldr	r1, [pc, #36]	; (8019330 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801930a:	480a      	ldr	r0, [pc, #40]	; (8019334 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801930c:	f007 fadf 	bl	80208ce <__aeabi_atexit>
 8019310:	4b05      	ldr	r3, [pc, #20]	; (8019328 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019312:	662b      	str	r3, [r5, #96]	; 0x60
 8019314:	4b07      	ldr	r3, [pc, #28]	; (8019334 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019316:	666b      	str	r3, [r5, #100]	; 0x64
 8019318:	bd38      	pop	{r3, r4, r5, pc}
 801931a:	bf00      	nop
 801931c:	200158c0 	.word	0x200158c0
 8019320:	20000000 	.word	0x20000000
 8019324:	08016fc9 	.word	0x08016fc9
 8019328:	200000c8 	.word	0x200000c8
 801932c:	200158c4 	.word	0x200158c4
 8019330:	08016fc7 	.word	0x08016fc7
 8019334:	200000cc 	.word	0x200000cc

08019338 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019338:	b538      	push	{r3, r4, r5, lr}
 801933a:	4c15      	ldr	r4, [pc, #84]	; (8019390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801933c:	7823      	ldrb	r3, [r4, #0]
 801933e:	f3bf 8f5b 	dmb	ish
 8019342:	07da      	lsls	r2, r3, #31
 8019344:	4605      	mov	r5, r0
 8019346:	d40b      	bmi.n	8019360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019348:	4620      	mov	r0, r4
 801934a:	f007 fac7 	bl	80208dc <__cxa_guard_acquire>
 801934e:	b138      	cbz	r0, 8019360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019350:	4620      	mov	r0, r4
 8019352:	f007 facf 	bl	80208f4 <__cxa_guard_release>
 8019356:	4a0f      	ldr	r2, [pc, #60]	; (8019394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019358:	490f      	ldr	r1, [pc, #60]	; (8019398 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801935a:	4810      	ldr	r0, [pc, #64]	; (801939c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801935c:	f007 fab7 	bl	80208ce <__aeabi_atexit>
 8019360:	4c0f      	ldr	r4, [pc, #60]	; (80193a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019362:	7823      	ldrb	r3, [r4, #0]
 8019364:	f3bf 8f5b 	dmb	ish
 8019368:	07db      	lsls	r3, r3, #31
 801936a:	d40b      	bmi.n	8019384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801936c:	4620      	mov	r0, r4
 801936e:	f007 fab5 	bl	80208dc <__cxa_guard_acquire>
 8019372:	b138      	cbz	r0, 8019384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019374:	4620      	mov	r0, r4
 8019376:	f007 fabd 	bl	80208f4 <__cxa_guard_release>
 801937a:	4a06      	ldr	r2, [pc, #24]	; (8019394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801937c:	4909      	ldr	r1, [pc, #36]	; (80193a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801937e:	480a      	ldr	r0, [pc, #40]	; (80193a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019380:	f007 faa5 	bl	80208ce <__aeabi_atexit>
 8019384:	4b05      	ldr	r3, [pc, #20]	; (801939c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019386:	65ab      	str	r3, [r5, #88]	; 0x58
 8019388:	4b07      	ldr	r3, [pc, #28]	; (80193a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801938a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801938c:	bd38      	pop	{r3, r4, r5, pc}
 801938e:	bf00      	nop
 8019390:	20015898 	.word	0x20015898
 8019394:	20000000 	.word	0x20000000
 8019398:	08016fcd 	.word	0x08016fcd
 801939c:	200000a0 	.word	0x200000a0
 80193a0:	2001589c 	.word	0x2001589c
 80193a4:	08016fcb 	.word	0x08016fcb
 80193a8:	200000a4 	.word	0x200000a4

080193ac <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80193ac:	b510      	push	{r4, lr}
 80193ae:	4604      	mov	r4, r0
 80193b0:	f7ff ff88 	bl	80192c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80193b4:	4620      	mov	r0, r4
 80193b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80193ba:	f7ff bfbd 	b.w	8019338 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080193c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80193c0:	b538      	push	{r3, r4, r5, lr}
 80193c2:	4c15      	ldr	r4, [pc, #84]	; (8019418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80193c4:	7823      	ldrb	r3, [r4, #0]
 80193c6:	f3bf 8f5b 	dmb	ish
 80193ca:	07da      	lsls	r2, r3, #31
 80193cc:	4605      	mov	r5, r0
 80193ce:	d40b      	bmi.n	80193e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80193d0:	4620      	mov	r0, r4
 80193d2:	f007 fa83 	bl	80208dc <__cxa_guard_acquire>
 80193d6:	b138      	cbz	r0, 80193e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80193d8:	4620      	mov	r0, r4
 80193da:	f007 fa8b 	bl	80208f4 <__cxa_guard_release>
 80193de:	4a0f      	ldr	r2, [pc, #60]	; (801941c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80193e0:	490f      	ldr	r1, [pc, #60]	; (8019420 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80193e2:	4810      	ldr	r0, [pc, #64]	; (8019424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80193e4:	f007 fa73 	bl	80208ce <__aeabi_atexit>
 80193e8:	4c0f      	ldr	r4, [pc, #60]	; (8019428 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80193ea:	7823      	ldrb	r3, [r4, #0]
 80193ec:	f3bf 8f5b 	dmb	ish
 80193f0:	07db      	lsls	r3, r3, #31
 80193f2:	d40b      	bmi.n	801940c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80193f4:	4620      	mov	r0, r4
 80193f6:	f007 fa71 	bl	80208dc <__cxa_guard_acquire>
 80193fa:	b138      	cbz	r0, 801940c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80193fc:	4620      	mov	r0, r4
 80193fe:	f007 fa79 	bl	80208f4 <__cxa_guard_release>
 8019402:	4a06      	ldr	r2, [pc, #24]	; (801941c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019404:	4909      	ldr	r1, [pc, #36]	; (801942c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019406:	480a      	ldr	r0, [pc, #40]	; (8019430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019408:	f007 fa61 	bl	80208ce <__aeabi_atexit>
 801940c:	4b05      	ldr	r3, [pc, #20]	; (8019424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801940e:	672b      	str	r3, [r5, #112]	; 0x70
 8019410:	4b07      	ldr	r3, [pc, #28]	; (8019430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019412:	676b      	str	r3, [r5, #116]	; 0x74
 8019414:	bd38      	pop	{r3, r4, r5, pc}
 8019416:	bf00      	nop
 8019418:	20015890 	.word	0x20015890
 801941c:	20000000 	.word	0x20000000
 8019420:	08016fc1 	.word	0x08016fc1
 8019424:	20000098 	.word	0x20000098
 8019428:	20015894 	.word	0x20015894
 801942c:	08016fbf 	.word	0x08016fbf
 8019430:	2000009c 	.word	0x2000009c

08019434 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019434:	b538      	push	{r3, r4, r5, lr}
 8019436:	4c15      	ldr	r4, [pc, #84]	; (801948c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019438:	7823      	ldrb	r3, [r4, #0]
 801943a:	f3bf 8f5b 	dmb	ish
 801943e:	07da      	lsls	r2, r3, #31
 8019440:	4605      	mov	r5, r0
 8019442:	d40b      	bmi.n	801945c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019444:	4620      	mov	r0, r4
 8019446:	f007 fa49 	bl	80208dc <__cxa_guard_acquire>
 801944a:	b138      	cbz	r0, 801945c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801944c:	4620      	mov	r0, r4
 801944e:	f007 fa51 	bl	80208f4 <__cxa_guard_release>
 8019452:	4a0f      	ldr	r2, [pc, #60]	; (8019490 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019454:	490f      	ldr	r1, [pc, #60]	; (8019494 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019456:	4810      	ldr	r0, [pc, #64]	; (8019498 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019458:	f007 fa39 	bl	80208ce <__aeabi_atexit>
 801945c:	4c0f      	ldr	r4, [pc, #60]	; (801949c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801945e:	7823      	ldrb	r3, [r4, #0]
 8019460:	f3bf 8f5b 	dmb	ish
 8019464:	07db      	lsls	r3, r3, #31
 8019466:	d40b      	bmi.n	8019480 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019468:	4620      	mov	r0, r4
 801946a:	f007 fa37 	bl	80208dc <__cxa_guard_acquire>
 801946e:	b138      	cbz	r0, 8019480 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019470:	4620      	mov	r0, r4
 8019472:	f007 fa3f 	bl	80208f4 <__cxa_guard_release>
 8019476:	4a06      	ldr	r2, [pc, #24]	; (8019490 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019478:	4909      	ldr	r1, [pc, #36]	; (80194a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801947a:	480a      	ldr	r0, [pc, #40]	; (80194a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801947c:	f007 fa27 	bl	80208ce <__aeabi_atexit>
 8019480:	4b05      	ldr	r3, [pc, #20]	; (8019498 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019482:	66ab      	str	r3, [r5, #104]	; 0x68
 8019484:	4b07      	ldr	r3, [pc, #28]	; (80194a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019486:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019488:	bd38      	pop	{r3, r4, r5, pc}
 801948a:	bf00      	nop
 801948c:	20015888 	.word	0x20015888
 8019490:	20000000 	.word	0x20000000
 8019494:	08016fc5 	.word	0x08016fc5
 8019498:	20000090 	.word	0x20000090
 801949c:	2001588c 	.word	0x2001588c
 80194a0:	08016fc3 	.word	0x08016fc3
 80194a4:	20000094 	.word	0x20000094

080194a8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80194a8:	b510      	push	{r4, lr}
 80194aa:	4604      	mov	r4, r0
 80194ac:	f7ff ff88 	bl	80193c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80194b0:	4620      	mov	r0, r4
 80194b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80194b6:	f7ff bfbd 	b.w	8019434 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080194ba <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80194ba:	b510      	push	{r4, lr}
 80194bc:	4604      	mov	r4, r0
 80194be:	f7ff fff3 	bl	80194a8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80194c2:	4620      	mov	r0, r4
 80194c4:	f7ff ff72 	bl	80193ac <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80194c8:	4620      	mov	r0, r4
 80194ca:	f7ff fdf9 	bl	80190c0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80194ce:	4620      	mov	r0, r4
 80194d0:	f7ff fcfa 	bl	8018ec8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80194d4:	4620      	mov	r0, r4
 80194d6:	f7ff fd75 	bl	8018fc4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80194da:	4620      	mov	r0, r4
 80194dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80194e0:	f7ff bee0 	b.w	80192a4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080194e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80194e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194e8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80194ec:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80194f0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80194f4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80194f8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80194fc:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8019500:	8808      	ldrh	r0, [r1, #0]
 8019502:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019506:	2d00      	cmp	r5, #0
 8019508:	eb02 0a0c 	add.w	sl, r2, ip
 801950c:	f2c0 80b0 	blt.w	8019670 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019510:	45ab      	cmp	fp, r5
 8019512:	f340 80ad 	ble.w	8019670 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019516:	2c00      	cmp	r4, #0
 8019518:	f2c0 80a8 	blt.w	801966c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801951c:	45a6      	cmp	lr, r4
 801951e:	f340 80a5 	ble.w	801966c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019522:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019526:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801952a:	1c62      	adds	r2, r4, #1
 801952c:	f100 80a3 	bmi.w	8019676 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019530:	4596      	cmp	lr, r2
 8019532:	f340 80a0 	ble.w	8019676 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019536:	f1b9 0f00 	cmp.w	r9, #0
 801953a:	f000 809c 	beq.w	8019676 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801953e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019542:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019546:	3501      	adds	r5, #1
 8019548:	f100 8099 	bmi.w	801967e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801954c:	45ab      	cmp	fp, r5
 801954e:	f340 8096 	ble.w	801967e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019552:	2f00      	cmp	r7, #0
 8019554:	f000 8093 	beq.w	801967e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019558:	2c00      	cmp	r4, #0
 801955a:	f2c0 808e 	blt.w	801967a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801955e:	45a6      	cmp	lr, r4
 8019560:	f340 808b 	ble.w	801967a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019564:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019568:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801956c:	3401      	adds	r4, #1
 801956e:	f100 8089 	bmi.w	8019684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019572:	45a6      	cmp	lr, r4
 8019574:	f340 8086 	ble.w	8019684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019578:	f1b9 0f00 	cmp.w	r9, #0
 801957c:	f000 8082 	beq.w	8019684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019580:	44d6      	add	lr, sl
 8019582:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019586:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801958a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801958e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019592:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019596:	fb19 fe07 	smulbb	lr, r9, r7
 801959a:	ea44 0808 	orr.w	r8, r4, r8
 801959e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80195a2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80195a6:	f1c7 0210 	rsb	r2, r7, #16
 80195aa:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80195ae:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80195b2:	ea44 0c0c 	orr.w	ip, r4, ip
 80195b6:	eba2 0209 	sub.w	r2, r2, r9
 80195ba:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80195be:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80195c2:	fb04 f40c 	mul.w	r4, r4, ip
 80195c6:	fb02 4808 	mla	r8, r2, r8, r4
 80195ca:	041a      	lsls	r2, r3, #16
 80195cc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80195d0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80195d4:	4313      	orrs	r3, r2
 80195d6:	042a      	lsls	r2, r5, #16
 80195d8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80195dc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80195e0:	fb0e 8303 	mla	r3, lr, r3, r8
 80195e4:	432a      	orrs	r2, r5
 80195e6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80195ea:	fb07 3202 	mla	r2, r7, r2, r3
 80195ee:	0d53      	lsrs	r3, r2, #21
 80195f0:	0952      	lsrs	r2, r2, #5
 80195f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80195f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80195fa:	431a      	orrs	r2, r3
 80195fc:	b293      	uxth	r3, r2
 80195fe:	b2b4      	uxth	r4, r6
 8019600:	1202      	asrs	r2, r0, #8
 8019602:	43f6      	mvns	r6, r6
 8019604:	b2f6      	uxtb	r6, r6
 8019606:	121d      	asrs	r5, r3, #8
 8019608:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801960c:	fb12 f206 	smulbb	r2, r2, r6
 8019610:	10c7      	asrs	r7, r0, #3
 8019612:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019616:	00c0      	lsls	r0, r0, #3
 8019618:	fb05 2504 	mla	r5, r5, r4, r2
 801961c:	b2c0      	uxtb	r0, r0
 801961e:	10da      	asrs	r2, r3, #3
 8019620:	00db      	lsls	r3, r3, #3
 8019622:	b2db      	uxtb	r3, r3
 8019624:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019628:	fb10 f006 	smulbb	r0, r0, r6
 801962c:	b2ad      	uxth	r5, r5
 801962e:	fb03 0004 	mla	r0, r3, r4, r0
 8019632:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019636:	fb17 f706 	smulbb	r7, r7, r6
 801963a:	b280      	uxth	r0, r0
 801963c:	1c6b      	adds	r3, r5, #1
 801963e:	fb02 7204 	mla	r2, r2, r4, r7
 8019642:	b292      	uxth	r2, r2
 8019644:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019648:	1c43      	adds	r3, r0, #1
 801964a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801964e:	1c50      	adds	r0, r2, #1
 8019650:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019654:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019658:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801965c:	0952      	lsrs	r2, r2, #5
 801965e:	432b      	orrs	r3, r5
 8019660:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019664:	4313      	orrs	r3, r2
 8019666:	800b      	strh	r3, [r1, #0]
 8019668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801966c:	4680      	mov	r8, r0
 801966e:	e75c      	b.n	801952a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019670:	4684      	mov	ip, r0
 8019672:	4680      	mov	r8, r0
 8019674:	e767      	b.n	8019546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019676:	4684      	mov	ip, r0
 8019678:	e765      	b.n	8019546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801967a:	4605      	mov	r5, r0
 801967c:	e776      	b.n	801956c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801967e:	4603      	mov	r3, r0
 8019680:	4605      	mov	r5, r0
 8019682:	e782      	b.n	801958a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019684:	4603      	mov	r3, r0
 8019686:	e780      	b.n	801958a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801968c:	b099      	sub	sp, #100	; 0x64
 801968e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019692:	9215      	str	r2, [sp, #84]	; 0x54
 8019694:	9309      	str	r3, [sp, #36]	; 0x24
 8019696:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019698:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801969c:	930d      	str	r3, [sp, #52]	; 0x34
 801969e:	910c      	str	r1, [sp, #48]	; 0x30
 80196a0:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80196a4:	9016      	str	r0, [sp, #88]	; 0x58
 80196a6:	6850      	ldr	r0, [r2, #4]
 80196a8:	6812      	ldr	r2, [r2, #0]
 80196aa:	fb00 1303 	mla	r3, r0, r3, r1
 80196ae:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80196b2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80196b4:	681b      	ldr	r3, [r3, #0]
 80196b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80196b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80196ba:	685e      	ldr	r6, [r3, #4]
 80196bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80196be:	43db      	mvns	r3, r3
 80196c0:	b2db      	uxtb	r3, r3
 80196c2:	3604      	adds	r6, #4
 80196c4:	930a      	str	r3, [sp, #40]	; 0x28
 80196c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196c8:	2b00      	cmp	r3, #0
 80196ca:	dc03      	bgt.n	80196d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80196cc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80196ce:	2b00      	cmp	r3, #0
 80196d0:	f340 8225 	ble.w	8019b1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80196d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80196d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80196da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80196de:	1e48      	subs	r0, r1, #1
 80196e0:	1e57      	subs	r7, r2, #1
 80196e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196e4:	2b00      	cmp	r3, #0
 80196e6:	f340 80e3 	ble.w	80198b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80196ea:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80196ee:	ea4f 4325 	mov.w	r3, r5, asr #16
 80196f2:	d406      	bmi.n	8019702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80196f4:	4584      	cmp	ip, r0
 80196f6:	da04      	bge.n	8019702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80196f8:	2b00      	cmp	r3, #0
 80196fa:	db02      	blt.n	8019702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80196fc:	42bb      	cmp	r3, r7
 80196fe:	f2c0 80d8 	blt.w	80198b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019702:	f11c 0c01 	adds.w	ip, ip, #1
 8019706:	f100 80c9 	bmi.w	801989c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801970a:	4561      	cmp	r1, ip
 801970c:	f2c0 80c6 	blt.w	801989c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019710:	3301      	adds	r3, #1
 8019712:	f100 80c3 	bmi.w	801989c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019716:	429a      	cmp	r2, r3
 8019718:	f2c0 80c0 	blt.w	801989c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801971c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019720:	4647      	mov	r7, r8
 8019722:	f1bb 0f00 	cmp.w	fp, #0
 8019726:	f340 80e3 	ble.w	80198f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801972a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801972c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801972e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019732:	689b      	ldr	r3, [r3, #8]
 8019734:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019738:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801973c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019740:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019744:	f100 8121 	bmi.w	801998a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019748:	f103 39ff 	add.w	r9, r3, #4294967295
 801974c:	454a      	cmp	r2, r9
 801974e:	f280 811c 	bge.w	801998a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019752:	f1bc 0f00 	cmp.w	ip, #0
 8019756:	f2c0 8118 	blt.w	801998a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801975a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801975e:	45cc      	cmp	ip, r9
 8019760:	f280 8113 	bge.w	801998a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019764:	b21b      	sxth	r3, r3
 8019766:	fb0c 2203 	mla	r2, ip, r3, r2
 801976a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801976c:	eb04 0902 	add.w	r9, r4, r2
 8019770:	5ca2      	ldrb	r2, [r4, r2]
 8019772:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019776:	2800      	cmp	r0, #0
 8019778:	f000 80fe 	beq.w	8019978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801977c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019780:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019784:	9211      	str	r2, [sp, #68]	; 0x44
 8019786:	b151      	cbz	r1, 801979e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019788:	eb09 0203 	add.w	r2, r9, r3
 801978c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019790:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019794:	930f      	str	r3, [sp, #60]	; 0x3c
 8019796:	7853      	ldrb	r3, [r2, #1]
 8019798:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801979c:	9312      	str	r3, [sp, #72]	; 0x48
 801979e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80197a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80197a2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80197a6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80197aa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80197ae:	ea4c 0c03 	orr.w	ip, ip, r3
 80197b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80197b4:	041b      	lsls	r3, r3, #16
 80197b6:	fb10 f201 	smulbb	r2, r0, r1
 80197ba:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80197be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80197c2:	10d2      	asrs	r2, r2, #3
 80197c4:	4323      	orrs	r3, r4
 80197c6:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80197ca:	4353      	muls	r3, r2
 80197cc:	fb09 330c 	mla	r3, r9, ip, r3
 80197d0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80197d4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80197d8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80197dc:	ea4c 0e0e 	orr.w	lr, ip, lr
 80197e0:	f1c1 0c10 	rsb	ip, r1, #16
 80197e4:	ebac 0c00 	sub.w	ip, ip, r0
 80197e8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80197ec:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80197f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80197f2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80197f4:	0418      	lsls	r0, r3, #16
 80197f6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80197fa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80197fe:	4318      	orrs	r0, r3
 8019800:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019804:	fb02 c200 	mla	r2, r2, r0, ip
 8019808:	0d53      	lsrs	r3, r2, #21
 801980a:	0952      	lsrs	r2, r2, #5
 801980c:	8838      	ldrh	r0, [r7, #0]
 801980e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019812:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019816:	431a      	orrs	r2, r3
 8019818:	b292      	uxth	r2, r2
 801981a:	1201      	asrs	r1, r0, #8
 801981c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8019820:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019824:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019828:	fb11 f104 	smulbb	r1, r1, r4
 801982c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019830:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019834:	00c0      	lsls	r0, r0, #3
 8019836:	fb0c 1c03 	mla	ip, ip, r3, r1
 801983a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801983e:	10d1      	asrs	r1, r2, #3
 8019840:	b2c0      	uxtb	r0, r0
 8019842:	00d2      	lsls	r2, r2, #3
 8019844:	b2d2      	uxtb	r2, r2
 8019846:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801984a:	fb1e fe04 	smulbb	lr, lr, r4
 801984e:	fb10 f004 	smulbb	r0, r0, r4
 8019852:	fa1f fc8c 	uxth.w	ip, ip
 8019856:	fb01 e103 	mla	r1, r1, r3, lr
 801985a:	fb02 0303 	mla	r3, r2, r3, r0
 801985e:	b29a      	uxth	r2, r3
 8019860:	f10c 0301 	add.w	r3, ip, #1
 8019864:	b289      	uxth	r1, r1
 8019866:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801986a:	1c53      	adds	r3, r2, #1
 801986c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019870:	1c4a      	adds	r2, r1, #1
 8019872:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019876:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801987a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801987e:	0949      	lsrs	r1, r1, #5
 8019880:	ea43 030c 	orr.w	r3, r3, ip
 8019884:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019888:	430b      	orrs	r3, r1
 801988a:	803b      	strh	r3, [r7, #0]
 801988c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801988e:	449a      	add	sl, r3
 8019890:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019892:	3702      	adds	r7, #2
 8019894:	441d      	add	r5, r3
 8019896:	f10b 3bff 	add.w	fp, fp, #4294967295
 801989a:	e742      	b.n	8019722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801989c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801989e:	449a      	add	sl, r3
 80198a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80198a2:	441d      	add	r5, r3
 80198a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80198a6:	3b01      	subs	r3, #1
 80198a8:	9309      	str	r3, [sp, #36]	; 0x24
 80198aa:	f108 0802 	add.w	r8, r8, #2
 80198ae:	e718      	b.n	80196e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80198b0:	d023      	beq.n	80198fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80198b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80198b4:	9825      	ldr	r0, [sp, #148]	; 0x94
 80198b6:	3b01      	subs	r3, #1
 80198b8:	fb00 a003 	mla	r0, r0, r3, sl
 80198bc:	1400      	asrs	r0, r0, #16
 80198be:	f53f af2d 	bmi.w	801971c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80198c2:	3901      	subs	r1, #1
 80198c4:	4288      	cmp	r0, r1
 80198c6:	f6bf af29 	bge.w	801971c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80198ca:	9926      	ldr	r1, [sp, #152]	; 0x98
 80198cc:	fb01 5303 	mla	r3, r1, r3, r5
 80198d0:	141b      	asrs	r3, r3, #16
 80198d2:	f53f af23 	bmi.w	801971c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80198d6:	3a01      	subs	r2, #1
 80198d8:	4293      	cmp	r3, r2
 80198da:	f6bf af1f 	bge.w	801971c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80198de:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80198e2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80198e6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80198ea:	f1be 0f00 	cmp.w	lr, #0
 80198ee:	dc6c      	bgt.n	80199ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80198f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80198f2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80198f6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80198fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80198fc:	2b00      	cmp	r3, #0
 80198fe:	f340 810e 	ble.w	8019b1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019902:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019906:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801990a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801990e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019910:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019914:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019918:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801991c:	eef0 6a62 	vmov.f32	s13, s5
 8019920:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019924:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019928:	ee77 2a62 	vsub.f32	s5, s14, s5
 801992c:	ee16 aa90 	vmov	sl, s13
 8019930:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019934:	eef0 6a43 	vmov.f32	s13, s6
 8019938:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801993c:	ee12 2a90 	vmov	r2, s5
 8019940:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019944:	fb92 f3f3 	sdiv	r3, r2, r3
 8019948:	ee13 2a10 	vmov	r2, s6
 801994c:	9325      	str	r3, [sp, #148]	; 0x94
 801994e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019950:	fb92 f3f3 	sdiv	r3, r2, r3
 8019954:	9326      	str	r3, [sp, #152]	; 0x98
 8019956:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019958:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801995a:	3b01      	subs	r3, #1
 801995c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019960:	930c      	str	r3, [sp, #48]	; 0x30
 8019962:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019964:	bf08      	it	eq
 8019966:	4613      	moveq	r3, r2
 8019968:	ee16 5a90 	vmov	r5, s13
 801996c:	9309      	str	r3, [sp, #36]	; 0x24
 801996e:	eeb0 3a67 	vmov.f32	s6, s15
 8019972:	eef0 2a47 	vmov.f32	s5, s14
 8019976:	e6a6      	b.n	80196c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019978:	2900      	cmp	r1, #0
 801997a:	f43f af10 	beq.w	801979e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801997e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019982:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019986:	930f      	str	r3, [sp, #60]	; 0x3c
 8019988:	e709      	b.n	801979e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801998a:	f112 0901 	adds.w	r9, r2, #1
 801998e:	f53f af7d 	bmi.w	801988c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019992:	454b      	cmp	r3, r9
 8019994:	f6ff af7a 	blt.w	801988c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019998:	f11c 0901 	adds.w	r9, ip, #1
 801999c:	f53f af76 	bmi.w	801988c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80199a0:	45ce      	cmp	lr, r9
 80199a2:	f6ff af73 	blt.w	801988c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80199a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80199a8:	9202      	str	r2, [sp, #8]
 80199aa:	b21b      	sxth	r3, r3
 80199ac:	fa0f f28e 	sxth.w	r2, lr
 80199b0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80199b4:	e9cd c003 	strd	ip, r0, [sp, #12]
 80199b8:	9201      	str	r2, [sp, #4]
 80199ba:	9300      	str	r3, [sp, #0]
 80199bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80199be:	9816      	ldr	r0, [sp, #88]	; 0x58
 80199c0:	4633      	mov	r3, r6
 80199c2:	4639      	mov	r1, r7
 80199c4:	f7ff fd8e 	bl	80194e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80199c8:	e760      	b.n	801988c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80199ca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80199cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80199ce:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80199d2:	ea4f 422a 	mov.w	r2, sl, asr #16
 80199d6:	1429      	asrs	r1, r5, #16
 80199d8:	fb03 2101 	mla	r1, r3, r1, r2
 80199dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80199de:	440a      	add	r2, r1
 80199e0:	5c61      	ldrb	r1, [r4, r1]
 80199e2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80199e6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80199ea:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80199ee:	f1bc 0f00 	cmp.w	ip, #0
 80199f2:	f000 808c 	beq.w	8019b0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80199f6:	7857      	ldrb	r7, [r2, #1]
 80199f8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80199fc:	9413      	str	r4, [sp, #76]	; 0x4c
 80199fe:	b140      	cbz	r0, 8019a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019a00:	18d7      	adds	r7, r2, r3
 8019a02:	5cd3      	ldrb	r3, [r2, r3]
 8019a04:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019a08:	9310      	str	r3, [sp, #64]	; 0x40
 8019a0a:	787b      	ldrb	r3, [r7, #1]
 8019a0c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019a10:	9314      	str	r3, [sp, #80]	; 0x50
 8019a12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019a14:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019a16:	fb1c f200 	smulbb	r2, ip, r0
 8019a1a:	041f      	lsls	r7, r3, #16
 8019a1c:	10d2      	asrs	r2, r2, #3
 8019a1e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019a22:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019a26:	431f      	orrs	r7, r3
 8019a28:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019a2c:	9317      	str	r3, [sp, #92]	; 0x5c
 8019a2e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019a30:	041b      	lsls	r3, r3, #16
 8019a32:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8019a36:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019a3a:	ea43 030b 	orr.w	r3, r3, fp
 8019a3e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019a40:	4353      	muls	r3, r2
 8019a42:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019a46:	fb04 3707 	mla	r7, r4, r7, r3
 8019a4a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019a4e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019a52:	ea43 0b01 	orr.w	fp, r3, r1
 8019a56:	f1c0 0110 	rsb	r1, r0, #16
 8019a5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a5c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019a5e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019a62:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019a66:	fb0c 770b 	mla	r7, ip, fp, r7
 8019a6a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019a6e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019a72:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019a76:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019a7a:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019a7e:	fb02 770c 	mla	r7, r2, ip, r7
 8019a82:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019a84:	0d79      	lsrs	r1, r7, #21
 8019a86:	097f      	lsrs	r7, r7, #5
 8019a88:	8812      	ldrh	r2, [r2, #0]
 8019a8a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019a8e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019a92:	430f      	orrs	r7, r1
 8019a94:	b2bb      	uxth	r3, r7
 8019a96:	1211      	asrs	r1, r2, #8
 8019a98:	1218      	asrs	r0, r3, #8
 8019a9a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019a9e:	fb11 f104 	smulbb	r1, r1, r4
 8019aa2:	10d7      	asrs	r7, r2, #3
 8019aa4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019aa8:	00d2      	lsls	r2, r2, #3
 8019aaa:	fb00 1009 	mla	r0, r0, r9, r1
 8019aae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019ab2:	10d9      	asrs	r1, r3, #3
 8019ab4:	b2d2      	uxtb	r2, r2
 8019ab6:	00db      	lsls	r3, r3, #3
 8019ab8:	fb17 f704 	smulbb	r7, r7, r4
 8019abc:	fb12 f204 	smulbb	r2, r2, r4
 8019ac0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019ac4:	b2db      	uxtb	r3, r3
 8019ac6:	b280      	uxth	r0, r0
 8019ac8:	fb01 7109 	mla	r1, r1, r9, r7
 8019acc:	fb03 2309 	mla	r3, r3, r9, r2
 8019ad0:	b29b      	uxth	r3, r3
 8019ad2:	b289      	uxth	r1, r1
 8019ad4:	1c42      	adds	r2, r0, #1
 8019ad6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019ada:	1c4f      	adds	r7, r1, #1
 8019adc:	1c5a      	adds	r2, r3, #1
 8019ade:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019ae2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019ae6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019aea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019aee:	0949      	lsrs	r1, r1, #5
 8019af0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019af2:	4310      	orrs	r0, r2
 8019af4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019af8:	4308      	orrs	r0, r1
 8019afa:	f823 0b02 	strh.w	r0, [r3], #2
 8019afe:	930e      	str	r3, [sp, #56]	; 0x38
 8019b00:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019b02:	449a      	add	sl, r3
 8019b04:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b06:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019b0a:	441d      	add	r5, r3
 8019b0c:	e6ed      	b.n	80198ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8019b0e:	2800      	cmp	r0, #0
 8019b10:	f43f af7f 	beq.w	8019a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019b14:	5cd3      	ldrb	r3, [r2, r3]
 8019b16:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019b1a:	9310      	str	r3, [sp, #64]	; 0x40
 8019b1c:	e779      	b.n	8019a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019b1e:	b019      	add	sp, #100	; 0x64
 8019b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019b24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019b28:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8019b2c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019b30:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019b34:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019b38:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019b3c:	8808      	ldrh	r0, [r1, #0]
 8019b3e:	fb08 470e 	mla	r7, r8, lr, r4
 8019b42:	f1b8 0f00 	cmp.w	r8, #0
 8019b46:	eb02 0907 	add.w	r9, r2, r7
 8019b4a:	db67      	blt.n	8019c1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019b4c:	45c2      	cmp	sl, r8
 8019b4e:	dd65      	ble.n	8019c1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019b50:	2c00      	cmp	r4, #0
 8019b52:	db61      	blt.n	8019c18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019b54:	45a6      	cmp	lr, r4
 8019b56:	dd5f      	ble.n	8019c18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019b58:	5dd2      	ldrb	r2, [r2, r7]
 8019b5a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019b5e:	1c62      	adds	r2, r4, #1
 8019b60:	d45f      	bmi.n	8019c22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019b62:	4596      	cmp	lr, r2
 8019b64:	dd5d      	ble.n	8019c22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019b66:	2d00      	cmp	r5, #0
 8019b68:	d05b      	beq.n	8019c22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019b6a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019b6e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019b72:	f118 0801 	adds.w	r8, r8, #1
 8019b76:	d458      	bmi.n	8019c2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019b78:	45c2      	cmp	sl, r8
 8019b7a:	dd56      	ble.n	8019c2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019b7c:	2e00      	cmp	r6, #0
 8019b7e:	d054      	beq.n	8019c2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019b80:	2c00      	cmp	r4, #0
 8019b82:	db50      	blt.n	8019c26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019b84:	45a6      	cmp	lr, r4
 8019b86:	dd4e      	ble.n	8019c26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019b88:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019b8c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019b90:	3401      	adds	r4, #1
 8019b92:	d407      	bmi.n	8019ba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019b94:	45a6      	cmp	lr, r4
 8019b96:	dd05      	ble.n	8019ba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019b98:	b125      	cbz	r5, 8019ba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019b9a:	44ce      	add	lr, r9
 8019b9c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019ba0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019ba4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019ba8:	fb15 f406 	smulbb	r4, r5, r6
 8019bac:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019bb0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019bb4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019bb8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019bbc:	ea43 0c0c 	orr.w	ip, r3, ip
 8019bc0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019bc4:	f1c6 0310 	rsb	r3, r6, #16
 8019bc8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019bcc:	1b5b      	subs	r3, r3, r5
 8019bce:	ea4e 0707 	orr.w	r7, lr, r7
 8019bd2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019bd6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019bda:	437d      	muls	r5, r7
 8019bdc:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019be0:	0403      	lsls	r3, r0, #16
 8019be2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019be6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019bea:	4318      	orrs	r0, r3
 8019bec:	0413      	lsls	r3, r2, #16
 8019bee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019bf2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019bf6:	4313      	orrs	r3, r2
 8019bf8:	fb04 c000 	mla	r0, r4, r0, ip
 8019bfc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019c00:	fb06 0003 	mla	r0, r6, r3, r0
 8019c04:	0d43      	lsrs	r3, r0, #21
 8019c06:	0940      	lsrs	r0, r0, #5
 8019c08:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019c0c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019c10:	4318      	orrs	r0, r3
 8019c12:	8008      	strh	r0, [r1, #0]
 8019c14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019c18:	4684      	mov	ip, r0
 8019c1a:	e7a0      	b.n	8019b5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019c1c:	4607      	mov	r7, r0
 8019c1e:	4684      	mov	ip, r0
 8019c20:	e7a7      	b.n	8019b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019c22:	4607      	mov	r7, r0
 8019c24:	e7a5      	b.n	8019b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019c26:	4602      	mov	r2, r0
 8019c28:	e7b2      	b.n	8019b90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019c2a:	4602      	mov	r2, r0
 8019c2c:	e7ba      	b.n	8019ba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c32:	b093      	sub	sp, #76	; 0x4c
 8019c34:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019c38:	920f      	str	r2, [sp, #60]	; 0x3c
 8019c3a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019c3c:	9108      	str	r1, [sp, #32]
 8019c3e:	9306      	str	r3, [sp, #24]
 8019c40:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019c44:	9010      	str	r0, [sp, #64]	; 0x40
 8019c46:	6850      	ldr	r0, [r2, #4]
 8019c48:	6812      	ldr	r2, [r2, #0]
 8019c4a:	fb00 1303 	mla	r3, r0, r3, r1
 8019c4e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019c52:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019c54:	681b      	ldr	r3, [r3, #0]
 8019c56:	9307      	str	r3, [sp, #28]
 8019c58:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019c5a:	685f      	ldr	r7, [r3, #4]
 8019c5c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019c60:	3704      	adds	r7, #4
 8019c62:	9b08      	ldr	r3, [sp, #32]
 8019c64:	2b00      	cmp	r3, #0
 8019c66:	dc03      	bgt.n	8019c70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019c68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019c6a:	2b00      	cmp	r3, #0
 8019c6c:	f340 81b2 	ble.w	8019fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019c70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019c72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c76:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019c7a:	1e48      	subs	r0, r1, #1
 8019c7c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019c80:	9b06      	ldr	r3, [sp, #24]
 8019c82:	2b00      	cmp	r3, #0
 8019c84:	f340 80a9 	ble.w	8019dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019c88:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019c8c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019c90:	d406      	bmi.n	8019ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c92:	4586      	cmp	lr, r0
 8019c94:	da04      	bge.n	8019ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c96:	2b00      	cmp	r3, #0
 8019c98:	db02      	blt.n	8019ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c9a:	4563      	cmp	r3, ip
 8019c9c:	f2c0 809e 	blt.w	8019ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019ca0:	f11e 0e01 	adds.w	lr, lr, #1
 8019ca4:	f100 808f 	bmi.w	8019dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ca8:	4571      	cmp	r1, lr
 8019caa:	f2c0 808c 	blt.w	8019dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019cae:	3301      	adds	r3, #1
 8019cb0:	f100 8089 	bmi.w	8019dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019cb4:	429a      	cmp	r2, r3
 8019cb6:	f2c0 8086 	blt.w	8019dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019cba:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019cbe:	46c8      	mov	r8, r9
 8019cc0:	f1bb 0f00 	cmp.w	fp, #0
 8019cc4:	f340 80a6 	ble.w	8019e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019cc8:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019cca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ccc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019cd0:	689b      	ldr	r3, [r3, #8]
 8019cd2:	1422      	asrs	r2, r4, #16
 8019cd4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019cd8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019cdc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019ce0:	f100 80e3 	bmi.w	8019eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019ce4:	f103 3aff 	add.w	sl, r3, #4294967295
 8019ce8:	4552      	cmp	r2, sl
 8019cea:	f280 80de 	bge.w	8019eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019cee:	f1bc 0f00 	cmp.w	ip, #0
 8019cf2:	f2c0 80da 	blt.w	8019eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019cf6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019cfa:	45d4      	cmp	ip, sl
 8019cfc:	f280 80d5 	bge.w	8019eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019d00:	b21b      	sxth	r3, r3
 8019d02:	fb0c 2203 	mla	r2, ip, r3, r2
 8019d06:	9d07      	ldr	r5, [sp, #28]
 8019d08:	eb05 0a02 	add.w	sl, r5, r2
 8019d0c:	5caa      	ldrb	r2, [r5, r2]
 8019d0e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019d12:	2800      	cmp	r0, #0
 8019d14:	f000 80c0 	beq.w	8019e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019d18:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019d1c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019d20:	920b      	str	r2, [sp, #44]	; 0x2c
 8019d22:	b151      	cbz	r1, 8019d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019d24:	eb0a 0203 	add.w	r2, sl, r3
 8019d28:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019d2c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d30:	9309      	str	r3, [sp, #36]	; 0x24
 8019d32:	7853      	ldrb	r3, [r2, #1]
 8019d34:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d38:	930c      	str	r3, [sp, #48]	; 0x30
 8019d3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019d3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019d3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019d42:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019d46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019d4a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019d4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019d50:	041b      	lsls	r3, r3, #16
 8019d52:	fb10 f201 	smulbb	r2, r0, r1
 8019d56:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019d5a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019d5e:	10d2      	asrs	r2, r2, #3
 8019d60:	432b      	orrs	r3, r5
 8019d62:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019d66:	4353      	muls	r3, r2
 8019d68:	fb0a 330c 	mla	r3, sl, ip, r3
 8019d6c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019d70:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019d74:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019d78:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019d7c:	f1c1 0c10 	rsb	ip, r1, #16
 8019d80:	ebac 0c00 	sub.w	ip, ip, r0
 8019d84:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019d88:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019d8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d8e:	0418      	lsls	r0, r3, #16
 8019d90:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019d94:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019d98:	4318      	orrs	r0, r3
 8019d9a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019d9e:	fb02 c200 	mla	r2, r2, r0, ip
 8019da2:	0d53      	lsrs	r3, r2, #21
 8019da4:	0952      	lsrs	r2, r2, #5
 8019da6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019daa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019dae:	431a      	orrs	r2, r3
 8019db0:	f8a8 2000 	strh.w	r2, [r8]
 8019db4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019db6:	441c      	add	r4, r3
 8019db8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019dba:	f108 0802 	add.w	r8, r8, #2
 8019dbe:	441e      	add	r6, r3
 8019dc0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019dc4:	e77c      	b.n	8019cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019dc6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019dc8:	441c      	add	r4, r3
 8019dca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019dcc:	441e      	add	r6, r3
 8019dce:	9b06      	ldr	r3, [sp, #24]
 8019dd0:	3b01      	subs	r3, #1
 8019dd2:	9306      	str	r3, [sp, #24]
 8019dd4:	f109 0902 	add.w	r9, r9, #2
 8019dd8:	e752      	b.n	8019c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019dda:	d020      	beq.n	8019e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019ddc:	9b06      	ldr	r3, [sp, #24]
 8019dde:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019de0:	3b01      	subs	r3, #1
 8019de2:	fb00 4003 	mla	r0, r0, r3, r4
 8019de6:	1400      	asrs	r0, r0, #16
 8019de8:	f53f af67 	bmi.w	8019cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019dec:	3901      	subs	r1, #1
 8019dee:	4288      	cmp	r0, r1
 8019df0:	f6bf af63 	bge.w	8019cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019df4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019df6:	fb01 6303 	mla	r3, r1, r3, r6
 8019dfa:	141b      	asrs	r3, r3, #16
 8019dfc:	f53f af5d 	bmi.w	8019cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019e00:	3a01      	subs	r2, #1
 8019e02:	4293      	cmp	r3, r2
 8019e04:	f6bf af59 	bge.w	8019cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019e08:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019e0c:	46ca      	mov	sl, r9
 8019e0e:	f1b8 0f00 	cmp.w	r8, #0
 8019e12:	dc67      	bgt.n	8019ee4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019e14:	9b06      	ldr	r3, [sp, #24]
 8019e16:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019e1a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019e1e:	9b08      	ldr	r3, [sp, #32]
 8019e20:	2b00      	cmp	r3, #0
 8019e22:	f340 80d7 	ble.w	8019fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019e26:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e2e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019e32:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019e34:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e3c:	eeb0 6a62 	vmov.f32	s12, s5
 8019e40:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019e48:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e4c:	ee16 4a10 	vmov	r4, s12
 8019e50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e54:	eeb0 6a43 	vmov.f32	s12, s6
 8019e58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e5c:	ee12 2a90 	vmov	r2, s5
 8019e60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e64:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e68:	ee13 2a10 	vmov	r2, s6
 8019e6c:	931f      	str	r3, [sp, #124]	; 0x7c
 8019e6e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019e70:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e74:	9320      	str	r3, [sp, #128]	; 0x80
 8019e76:	9b08      	ldr	r3, [sp, #32]
 8019e78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019e7a:	3b01      	subs	r3, #1
 8019e7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019e80:	9308      	str	r3, [sp, #32]
 8019e82:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019e84:	bf08      	it	eq
 8019e86:	4613      	moveq	r3, r2
 8019e88:	ee16 6a10 	vmov	r6, s12
 8019e8c:	9306      	str	r3, [sp, #24]
 8019e8e:	eeb0 3a67 	vmov.f32	s6, s15
 8019e92:	eef0 2a47 	vmov.f32	s5, s14
 8019e96:	e6e4      	b.n	8019c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019e98:	2900      	cmp	r1, #0
 8019e9a:	f43f af4e 	beq.w	8019d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019e9e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019ea2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ea6:	9309      	str	r3, [sp, #36]	; 0x24
 8019ea8:	e747      	b.n	8019d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019eaa:	f112 0a01 	adds.w	sl, r2, #1
 8019eae:	d481      	bmi.n	8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019eb0:	4553      	cmp	r3, sl
 8019eb2:	f6ff af7f 	blt.w	8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019eb6:	f11c 0a01 	adds.w	sl, ip, #1
 8019eba:	f53f af7b 	bmi.w	8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019ebe:	45d6      	cmp	lr, sl
 8019ec0:	f6ff af78 	blt.w	8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019ec4:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019ec8:	b21b      	sxth	r3, r3
 8019eca:	fa0f f28e 	sxth.w	r2, lr
 8019ece:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019ed2:	9201      	str	r2, [sp, #4]
 8019ed4:	9300      	str	r3, [sp, #0]
 8019ed6:	9a07      	ldr	r2, [sp, #28]
 8019ed8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019eda:	463b      	mov	r3, r7
 8019edc:	4641      	mov	r1, r8
 8019ede:	f7ff fe21 	bl	8019b24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019ee2:	e767      	b.n	8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019ee4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ee6:	9d07      	ldr	r5, [sp, #28]
 8019ee8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019eec:	1422      	asrs	r2, r4, #16
 8019eee:	1431      	asrs	r1, r6, #16
 8019ef0:	fb03 2101 	mla	r1, r3, r1, r2
 8019ef4:	9a07      	ldr	r2, [sp, #28]
 8019ef6:	440a      	add	r2, r1
 8019ef8:	5c69      	ldrb	r1, [r5, r1]
 8019efa:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019efe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019f02:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019f06:	f1be 0f00 	cmp.w	lr, #0
 8019f0a:	d05c      	beq.n	8019fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019f0c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019f10:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019f14:	950d      	str	r5, [sp, #52]	; 0x34
 8019f16:	b150      	cbz	r0, 8019f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019f18:	eb02 0c03 	add.w	ip, r2, r3
 8019f1c:	5cd3      	ldrb	r3, [r2, r3]
 8019f1e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019f22:	930a      	str	r3, [sp, #40]	; 0x28
 8019f24:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019f28:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019f2c:	930e      	str	r3, [sp, #56]	; 0x38
 8019f2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019f30:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019f32:	fb1e f200 	smulbb	r2, lr, r0
 8019f36:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019f3a:	10d2      	asrs	r2, r2, #3
 8019f3c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019f40:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019f44:	ea4c 0c03 	orr.w	ip, ip, r3
 8019f48:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019f4c:	9311      	str	r3, [sp, #68]	; 0x44
 8019f4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f50:	041b      	lsls	r3, r3, #16
 8019f52:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019f56:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019f5a:	ea43 030b 	orr.w	r3, r3, fp
 8019f5e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019f60:	4353      	muls	r3, r2
 8019f62:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019f66:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019f6a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019f6e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019f72:	ea43 0b01 	orr.w	fp, r3, r1
 8019f76:	f1c0 0110 	rsb	r1, r0, #16
 8019f7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f7c:	eba1 0e0e 	sub.w	lr, r1, lr
 8019f80:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019f84:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019f88:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019f8c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019f90:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019f94:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019f98:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019f9c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019fa0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019fa4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019fa8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019fac:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019fb0:	ea43 0c0c 	orr.w	ip, r3, ip
 8019fb4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019fb6:	f82a cb02 	strh.w	ip, [sl], #2
 8019fba:	441c      	add	r4, r3
 8019fbc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019fbe:	f108 38ff 	add.w	r8, r8, #4294967295
 8019fc2:	441e      	add	r6, r3
 8019fc4:	e723      	b.n	8019e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019fc6:	2800      	cmp	r0, #0
 8019fc8:	d0b1      	beq.n	8019f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019fca:	5cd3      	ldrb	r3, [r2, r3]
 8019fcc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019fd0:	930a      	str	r3, [sp, #40]	; 0x28
 8019fd2:	e7ac      	b.n	8019f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019fd4:	b013      	add	sp, #76	; 0x4c
 8019fd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019fda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019fda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fde:	880d      	ldrh	r5, [r1, #0]
 8019fe0:	b087      	sub	sp, #28
 8019fe2:	10ef      	asrs	r7, r5, #3
 8019fe4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019fe8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019fec:	00ed      	lsls	r5, r5, #3
 8019fee:	9701      	str	r7, [sp, #4]
 8019ff0:	b2ed      	uxtb	r5, r5
 8019ff2:	9502      	str	r5, [sp, #8]
 8019ff4:	9d01      	ldr	r5, [sp, #4]
 8019ff6:	9103      	str	r1, [sp, #12]
 8019ff8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019ffc:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801a000:	9902      	ldr	r1, [sp, #8]
 801a002:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801a006:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801a00a:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801a00e:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801a012:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801a016:	022d      	lsls	r5, r5, #8
 801a018:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a01c:	fb06 0709 	mla	r7, r6, r9, r0
 801a020:	430d      	orrs	r5, r1
 801a022:	2e00      	cmp	r6, #0
 801a024:	eb02 0c07 	add.w	ip, r2, r7
 801a028:	9505      	str	r5, [sp, #20]
 801a02a:	f2c0 80b6 	blt.w	801a19a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a02e:	45b3      	cmp	fp, r6
 801a030:	f340 80b3 	ble.w	801a19a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a034:	2800      	cmp	r0, #0
 801a036:	f2c0 80ae 	blt.w	801a196 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a03a:	4581      	cmp	r9, r0
 801a03c:	f340 80ab 	ble.w	801a196 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a040:	5dd7      	ldrb	r7, [r2, r7]
 801a042:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a046:	441f      	add	r7, r3
 801a048:	1c42      	adds	r2, r0, #1
 801a04a:	f100 80a9 	bmi.w	801a1a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a04e:	4591      	cmp	r9, r2
 801a050:	f340 80a6 	ble.w	801a1a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a054:	2c00      	cmp	r4, #0
 801a056:	f000 80a3 	beq.w	801a1a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a05a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a05e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a062:	441d      	add	r5, r3
 801a064:	3601      	adds	r6, #1
 801a066:	f100 809f 	bmi.w	801a1a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a06a:	45b3      	cmp	fp, r6
 801a06c:	f340 809c 	ble.w	801a1a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a070:	f1be 0f00 	cmp.w	lr, #0
 801a074:	f000 8098 	beq.w	801a1a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a078:	2800      	cmp	r0, #0
 801a07a:	f2c0 8093 	blt.w	801a1a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a07e:	4581      	cmp	r9, r0
 801a080:	f340 8090 	ble.w	801a1a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a084:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a088:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a08c:	441e      	add	r6, r3
 801a08e:	3001      	adds	r0, #1
 801a090:	f100 808d 	bmi.w	801a1ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a094:	4581      	cmp	r9, r0
 801a096:	f340 808a 	ble.w	801a1ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a09a:	2c00      	cmp	r4, #0
 801a09c:	f000 8087 	beq.w	801a1ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a0a0:	44e1      	add	r9, ip
 801a0a2:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a0a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a0aa:	4413      	add	r3, r2
 801a0ac:	b2a4      	uxth	r4, r4
 801a0ae:	fa1f fe8e 	uxth.w	lr, lr
 801a0b2:	fb04 fb0e 	mul.w	fp, r4, lr
 801a0b6:	0124      	lsls	r4, r4, #4
 801a0b8:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a0bc:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801a0c0:	eba4 040b 	sub.w	r4, r4, fp
 801a0c4:	fa1f f08e 	uxth.w	r0, lr
 801a0c8:	b2a2      	uxth	r2, r4
 801a0ca:	78ac      	ldrb	r4, [r5, #2]
 801a0cc:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a0d0:	9901      	ldr	r1, [sp, #4]
 801a0d2:	eba9 0900 	sub.w	r9, r9, r0
 801a0d6:	fa1f f989 	uxth.w	r9, r9
 801a0da:	4354      	muls	r4, r2
 801a0dc:	fb09 440c 	mla	r4, r9, ip, r4
 801a0e0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a0e4:	fb00 440c 	mla	r4, r0, ip, r4
 801a0e8:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a0ec:	fa1f fe88 	uxth.w	lr, r8
 801a0f0:	ea6f 0808 	mvn.w	r8, r8
 801a0f4:	fa5f f888 	uxtb.w	r8, r8
 801a0f8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a0fc:	fb1a fa08 	smulbb	sl, sl, r8
 801a100:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a104:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a108:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a10c:	787c      	ldrb	r4, [r7, #1]
 801a10e:	782d      	ldrb	r5, [r5, #0]
 801a110:	783f      	ldrb	r7, [r7, #0]
 801a112:	fb02 fa0a 	mul.w	sl, r2, sl
 801a116:	fb09 aa04 	mla	sl, r9, r4, sl
 801a11a:	7874      	ldrb	r4, [r6, #1]
 801a11c:	436a      	muls	r2, r5
 801a11e:	7835      	ldrb	r5, [r6, #0]
 801a120:	fb00 aa04 	mla	sl, r0, r4, sl
 801a124:	fb09 2207 	mla	r2, r9, r7, r2
 801a128:	785c      	ldrb	r4, [r3, #1]
 801a12a:	781b      	ldrb	r3, [r3, #0]
 801a12c:	fb00 2005 	mla	r0, r0, r5, r2
 801a130:	fb0b a404 	mla	r4, fp, r4, sl
 801a134:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a138:	9b02      	ldr	r3, [sp, #8]
 801a13a:	fb11 fa08 	smulbb	sl, r1, r8
 801a13e:	fa1f fc8c 	uxth.w	ip, ip
 801a142:	fb13 f808 	smulbb	r8, r3, r8
 801a146:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a14a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a14e:	fb04 a40e 	mla	r4, r4, lr, sl
 801a152:	f10c 0301 	add.w	r3, ip, #1
 801a156:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a15a:	fa1f fe8e 	uxth.w	lr, lr
 801a15e:	b2a4      	uxth	r4, r4
 801a160:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a164:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801a168:	f104 0a01 	add.w	sl, r4, #1
 801a16c:	f10e 0c01 	add.w	ip, lr, #1
 801a170:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a174:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a178:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a17c:	0964      	lsrs	r4, r4, #5
 801a17e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a182:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801a186:	9b03      	ldr	r3, [sp, #12]
 801a188:	ea4c 0c04 	orr.w	ip, ip, r4
 801a18c:	f8a3 c000 	strh.w	ip, [r3]
 801a190:	b007      	add	sp, #28
 801a192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a196:	af05      	add	r7, sp, #20
 801a198:	e756      	b.n	801a048 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a19a:	ad05      	add	r5, sp, #20
 801a19c:	462f      	mov	r7, r5
 801a19e:	e761      	b.n	801a064 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a1a0:	ad05      	add	r5, sp, #20
 801a1a2:	e75f      	b.n	801a064 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a1a4:	ae05      	add	r6, sp, #20
 801a1a6:	e772      	b.n	801a08e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a1a8:	ab05      	add	r3, sp, #20
 801a1aa:	461e      	mov	r6, r3
 801a1ac:	e77e      	b.n	801a0ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a1ae:	ab05      	add	r3, sp, #20
 801a1b0:	e77c      	b.n	801a0ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a1b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a1b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1b6:	b095      	sub	sp, #84	; 0x54
 801a1b8:	9212      	str	r2, [sp, #72]	; 0x48
 801a1ba:	9309      	str	r3, [sp, #36]	; 0x24
 801a1bc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801a1be:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801a1c2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a1c4:	910e      	str	r1, [sp, #56]	; 0x38
 801a1c6:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801a1ca:	9013      	str	r0, [sp, #76]	; 0x4c
 801a1cc:	6850      	ldr	r0, [r2, #4]
 801a1ce:	6812      	ldr	r2, [r2, #0]
 801a1d0:	fb00 1303 	mla	r3, r0, r3, r1
 801a1d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a1d8:	930a      	str	r3, [sp, #40]	; 0x28
 801a1da:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a1dc:	681b      	ldr	r3, [r3, #0]
 801a1de:	930d      	str	r3, [sp, #52]	; 0x34
 801a1e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a1e2:	685c      	ldr	r4, [r3, #4]
 801a1e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a1e6:	43db      	mvns	r3, r3
 801a1e8:	b2db      	uxtb	r3, r3
 801a1ea:	3404      	adds	r4, #4
 801a1ec:	930b      	str	r3, [sp, #44]	; 0x2c
 801a1ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1f0:	2b00      	cmp	r3, #0
 801a1f2:	dc03      	bgt.n	801a1fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a1f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a1f6:	2b00      	cmp	r3, #0
 801a1f8:	f340 8255 	ble.w	801a6a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a1fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a1fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a202:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a206:	1e48      	subs	r0, r1, #1
 801a208:	1e55      	subs	r5, r2, #1
 801a20a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a20c:	2b00      	cmp	r3, #0
 801a20e:	f340 80f9 	ble.w	801a404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a212:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801a214:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a216:	1436      	asrs	r6, r6, #16
 801a218:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a21c:	d406      	bmi.n	801a22c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a21e:	4286      	cmp	r6, r0
 801a220:	da04      	bge.n	801a22c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a222:	2b00      	cmp	r3, #0
 801a224:	db02      	blt.n	801a22c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a226:	42ab      	cmp	r3, r5
 801a228:	f2c0 80ed 	blt.w	801a406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a22c:	3601      	adds	r6, #1
 801a22e:	f100 80da 	bmi.w	801a3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a232:	42b1      	cmp	r1, r6
 801a234:	f2c0 80d7 	blt.w	801a3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a238:	3301      	adds	r3, #1
 801a23a:	f100 80d4 	bmi.w	801a3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a23e:	429a      	cmp	r2, r3
 801a240:	f2c0 80d1 	blt.w	801a3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a244:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a246:	9311      	str	r3, [sp, #68]	; 0x44
 801a248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a24a:	930c      	str	r3, [sp, #48]	; 0x30
 801a24c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a24e:	2b00      	cmp	r3, #0
 801a250:	f340 80fa 	ble.w	801a448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a254:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a256:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a258:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a25a:	68c6      	ldr	r6, [r0, #12]
 801a25c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a25e:	141d      	asrs	r5, r3, #16
 801a260:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a264:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a266:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a268:	1400      	asrs	r0, r0, #16
 801a26a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a26e:	6892      	ldr	r2, [r2, #8]
 801a270:	f100 813e 	bmi.w	801a4f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a274:	1e57      	subs	r7, r2, #1
 801a276:	42b8      	cmp	r0, r7
 801a278:	f280 813a 	bge.w	801a4f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a27c:	2d00      	cmp	r5, #0
 801a27e:	f2c0 8137 	blt.w	801a4f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a282:	1e77      	subs	r7, r6, #1
 801a284:	42bd      	cmp	r5, r7
 801a286:	f280 8133 	bge.w	801a4f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a28a:	b212      	sxth	r2, r2
 801a28c:	fb05 0002 	mla	r0, r5, r2, r0
 801a290:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a292:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a296:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a29a:	182e      	adds	r6, r5, r0
 801a29c:	eb04 050a 	add.w	r5, r4, sl
 801a2a0:	2b00      	cmp	r3, #0
 801a2a2:	f000 8117 	beq.w	801a4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a2a6:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a2aa:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a2ae:	44a4      	add	ip, r4
 801a2b0:	2900      	cmp	r1, #0
 801a2b2:	f000 8117 	beq.w	801a4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a2b6:	18b0      	adds	r0, r6, r2
 801a2b8:	5cb2      	ldrb	r2, [r6, r2]
 801a2ba:	7840      	ldrb	r0, [r0, #1]
 801a2bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a2c0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a2c4:	4422      	add	r2, r4
 801a2c6:	4420      	add	r0, r4
 801a2c8:	b29b      	uxth	r3, r3
 801a2ca:	b289      	uxth	r1, r1
 801a2cc:	fb03 f901 	mul.w	r9, r3, r1
 801a2d0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a2d4:	011b      	lsls	r3, r3, #4
 801a2d6:	b289      	uxth	r1, r1
 801a2d8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a2dc:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a2e0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a2e2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a2e6:	f8b6 e000 	ldrh.w	lr, [r6]
 801a2ea:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a2ee:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a2f2:	eba3 0309 	sub.w	r3, r3, r9
 801a2f6:	b29b      	uxth	r3, r3
 801a2f8:	eba8 0801 	sub.w	r8, r8, r1
 801a2fc:	fa1f f888 	uxth.w	r8, r8
 801a300:	435f      	muls	r7, r3
 801a302:	fb08 770b 	mla	r7, r8, fp, r7
 801a306:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a30a:	9310      	str	r3, [sp, #64]	; 0x40
 801a30c:	fb01 770b 	mla	r7, r1, fp, r7
 801a310:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a314:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a316:	fb09 770b 	mla	r7, r9, fp, r7
 801a31a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a31e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a322:	fb1b fb03 	smulbb	fp, fp, r3
 801a326:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a32a:	fb07 b706 	mla	r7, r7, r6, fp
 801a32e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a330:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a334:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a338:	f89c c000 	ldrb.w	ip, [ip]
 801a33c:	435d      	muls	r5, r3
 801a33e:	fb08 550b 	mla	r5, r8, fp, r5
 801a342:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a346:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a348:	fb01 550b 	mla	r5, r1, fp, r5
 801a34c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a350:	fb09 550b 	mla	r5, r9, fp, r5
 801a354:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a358:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a35c:	fb1b fb03 	smulbb	fp, fp, r3
 801a360:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a362:	fb03 f30c 	mul.w	r3, r3, ip
 801a366:	f892 c000 	ldrb.w	ip, [r2]
 801a36a:	fb08 330a 	mla	r3, r8, sl, r3
 801a36e:	fb01 330c 	mla	r3, r1, ip, r3
 801a372:	f890 c000 	ldrb.w	ip, [r0]
 801a376:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a37a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a37e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a380:	fa5f fe8e 	uxtb.w	lr, lr
 801a384:	b2bf      	uxth	r7, r7
 801a386:	fb1e fe03 	smulbb	lr, lr, r3
 801a38a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a38e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a392:	fb05 b506 	mla	r5, r5, r6, fp
 801a396:	1c7b      	adds	r3, r7, #1
 801a398:	fb0c e606 	mla	r6, ip, r6, lr
 801a39c:	b2ad      	uxth	r5, r5
 801a39e:	b2b6      	uxth	r6, r6
 801a3a0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a3a4:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a3a8:	f105 0b01 	add.w	fp, r5, #1
 801a3ac:	1c77      	adds	r7, r6, #1
 801a3ae:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a3b2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a3b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a3ba:	096d      	lsrs	r5, r5, #5
 801a3bc:	431f      	orrs	r7, r3
 801a3be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a3c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a3c4:	433d      	orrs	r5, r7
 801a3c6:	801d      	strh	r5, [r3, #0]
 801a3c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a3ca:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a3cc:	3302      	adds	r3, #2
 801a3ce:	930c      	str	r3, [sp, #48]	; 0x30
 801a3d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a3d2:	4413      	add	r3, r2
 801a3d4:	931f      	str	r3, [sp, #124]	; 0x7c
 801a3d6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a3d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a3da:	4413      	add	r3, r2
 801a3dc:	9320      	str	r3, [sp, #128]	; 0x80
 801a3de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a3e0:	3b01      	subs	r3, #1
 801a3e2:	9311      	str	r3, [sp, #68]	; 0x44
 801a3e4:	e732      	b.n	801a24c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a3e6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a3e8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a3ea:	4433      	add	r3, r6
 801a3ec:	931f      	str	r3, [sp, #124]	; 0x7c
 801a3ee:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a3f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a3f2:	4433      	add	r3, r6
 801a3f4:	9320      	str	r3, [sp, #128]	; 0x80
 801a3f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a3f8:	3b01      	subs	r3, #1
 801a3fa:	9309      	str	r3, [sp, #36]	; 0x24
 801a3fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a3fe:	3302      	adds	r3, #2
 801a400:	930a      	str	r3, [sp, #40]	; 0x28
 801a402:	e702      	b.n	801a20a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a404:	d027      	beq.n	801a456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a406:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a408:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a40a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a40c:	3b01      	subs	r3, #1
 801a40e:	fb00 5003 	mla	r0, r0, r3, r5
 801a412:	1400      	asrs	r0, r0, #16
 801a414:	f53f af16 	bmi.w	801a244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a418:	3901      	subs	r1, #1
 801a41a:	4288      	cmp	r0, r1
 801a41c:	f6bf af12 	bge.w	801a244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a420:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a422:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a424:	fb01 0303 	mla	r3, r1, r3, r0
 801a428:	141b      	asrs	r3, r3, #16
 801a42a:	f53f af0b 	bmi.w	801a244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a42e:	3a01      	subs	r2, #1
 801a430:	4293      	cmp	r3, r2
 801a432:	f6bf af07 	bge.w	801a244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a436:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a438:	9311      	str	r3, [sp, #68]	; 0x44
 801a43a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a43e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a440:	930c      	str	r3, [sp, #48]	; 0x30
 801a442:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a444:	2b00      	cmp	r3, #0
 801a446:	dc70      	bgt.n	801a52a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a448:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a44a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a44c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a450:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a454:	930a      	str	r3, [sp, #40]	; 0x28
 801a456:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a458:	2b00      	cmp	r3, #0
 801a45a:	f340 8124 	ble.w	801a6a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a45e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a462:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a466:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a46a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a46c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a470:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a474:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a478:	eef0 6a62 	vmov.f32	s13, s5
 801a47c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a480:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a484:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a488:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a48c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a490:	eef0 6a43 	vmov.f32	s13, s6
 801a494:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a498:	ee12 2a90 	vmov	r2, s5
 801a49c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a4a0:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4a4:	ee13 2a10 	vmov	r2, s6
 801a4a8:	9321      	str	r3, [sp, #132]	; 0x84
 801a4aa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a4ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4b0:	9322      	str	r3, [sp, #136]	; 0x88
 801a4b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a4b6:	3b01      	subs	r3, #1
 801a4b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a4bc:	930e      	str	r3, [sp, #56]	; 0x38
 801a4be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a4c0:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a4c4:	bf08      	it	eq
 801a4c6:	4613      	moveq	r3, r2
 801a4c8:	9309      	str	r3, [sp, #36]	; 0x24
 801a4ca:	eeb0 3a67 	vmov.f32	s6, s15
 801a4ce:	eef0 2a47 	vmov.f32	s5, s14
 801a4d2:	e68c      	b.n	801a1ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a4d4:	b149      	cbz	r1, 801a4ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a4d6:	5cb2      	ldrb	r2, [r6, r2]
 801a4d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a4dc:	4422      	add	r2, r4
 801a4de:	4628      	mov	r0, r5
 801a4e0:	46ac      	mov	ip, r5
 801a4e2:	e6f1      	b.n	801a2c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a4e4:	4628      	mov	r0, r5
 801a4e6:	462a      	mov	r2, r5
 801a4e8:	e6ee      	b.n	801a2c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a4ea:	4628      	mov	r0, r5
 801a4ec:	462a      	mov	r2, r5
 801a4ee:	e7f7      	b.n	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a4f0:	1c47      	adds	r7, r0, #1
 801a4f2:	f53f af69 	bmi.w	801a3c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a4f6:	42ba      	cmp	r2, r7
 801a4f8:	f6ff af66 	blt.w	801a3c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a4fc:	1c6f      	adds	r7, r5, #1
 801a4fe:	f53f af63 	bmi.w	801a3c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a502:	42be      	cmp	r6, r7
 801a504:	f6ff af60 	blt.w	801a3c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a508:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a50a:	9002      	str	r0, [sp, #8]
 801a50c:	b236      	sxth	r6, r6
 801a50e:	b212      	sxth	r2, r2
 801a510:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a514:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a518:	9200      	str	r2, [sp, #0]
 801a51a:	9601      	str	r6, [sp, #4]
 801a51c:	4623      	mov	r3, r4
 801a51e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a522:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a524:	f7ff fd59 	bl	8019fda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a528:	e74e      	b.n	801a3c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a52a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a52c:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a52e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a530:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a532:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a536:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a538:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a53c:	142d      	asrs	r5, r5, #16
 801a53e:	1400      	asrs	r0, r0, #16
 801a540:	fb02 5000 	mla	r0, r2, r0, r5
 801a544:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a546:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a54a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a54e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a552:	182e      	adds	r6, r5, r0
 801a554:	eb04 0509 	add.w	r5, r4, r9
 801a558:	2b00      	cmp	r3, #0
 801a55a:	f000 8096 	beq.w	801a68a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a55e:	7877      	ldrb	r7, [r6, #1]
 801a560:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a564:	4427      	add	r7, r4
 801a566:	2900      	cmp	r1, #0
 801a568:	f000 8097 	beq.w	801a69a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a56c:	18b0      	adds	r0, r6, r2
 801a56e:	5cb2      	ldrb	r2, [r6, r2]
 801a570:	7840      	ldrb	r0, [r0, #1]
 801a572:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a576:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a57a:	4422      	add	r2, r4
 801a57c:	4420      	add	r0, r4
 801a57e:	b29b      	uxth	r3, r3
 801a580:	b289      	uxth	r1, r1
 801a582:	fb03 f801 	mul.w	r8, r3, r1
 801a586:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a588:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a58c:	f8b6 c000 	ldrh.w	ip, [r6]
 801a590:	78be      	ldrb	r6, [r7, #2]
 801a592:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a596:	011b      	lsls	r3, r3, #4
 801a598:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a59c:	b289      	uxth	r1, r1
 801a59e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a5a2:	eba3 0308 	sub.w	r3, r3, r8
 801a5a6:	b29b      	uxth	r3, r3
 801a5a8:	ebae 0e01 	sub.w	lr, lr, r1
 801a5ac:	fa1f fe8e 	uxth.w	lr, lr
 801a5b0:	435e      	muls	r6, r3
 801a5b2:	fb0e 660b 	mla	r6, lr, fp, r6
 801a5b6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a5ba:	9310      	str	r3, [sp, #64]	; 0x40
 801a5bc:	fb01 660b 	mla	r6, r1, fp, r6
 801a5c0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a5c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a5c6:	fb08 660b 	mla	r6, r8, fp, r6
 801a5ca:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a5ce:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a5d2:	fb1b fb03 	smulbb	fp, fp, r3
 801a5d6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a5da:	fb06 b60a 	mla	r6, r6, sl, fp
 801a5de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a5e0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a5e4:	787d      	ldrb	r5, [r7, #1]
 801a5e6:	783f      	ldrb	r7, [r7, #0]
 801a5e8:	435d      	muls	r5, r3
 801a5ea:	fb0e 550b 	mla	r5, lr, fp, r5
 801a5ee:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a5f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a5f4:	fb01 550b 	mla	r5, r1, fp, r5
 801a5f8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a5fc:	fb08 550b 	mla	r5, r8, fp, r5
 801a600:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a604:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a608:	fb1b fb03 	smulbb	fp, fp, r3
 801a60c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a60e:	437b      	muls	r3, r7
 801a610:	7817      	ldrb	r7, [r2, #0]
 801a612:	fb0e 3309 	mla	r3, lr, r9, r3
 801a616:	fb01 3307 	mla	r3, r1, r7, r3
 801a61a:	7807      	ldrb	r7, [r0, #0]
 801a61c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a620:	fb08 3707 	mla	r7, r8, r7, r3
 801a624:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a626:	fa5f fc8c 	uxtb.w	ip, ip
 801a62a:	fb1c fc03 	smulbb	ip, ip, r3
 801a62e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a632:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a636:	fb05 b50a 	mla	r5, r5, sl, fp
 801a63a:	fb07 c70a 	mla	r7, r7, sl, ip
 801a63e:	b2b6      	uxth	r6, r6
 801a640:	b2ad      	uxth	r5, r5
 801a642:	b2bf      	uxth	r7, r7
 801a644:	1c73      	adds	r3, r6, #1
 801a646:	1c7a      	adds	r2, r7, #1
 801a648:	f105 0b01 	add.w	fp, r5, #1
 801a64c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a650:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a654:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a658:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a65c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a660:	096d      	lsrs	r5, r5, #5
 801a662:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a664:	4316      	orrs	r6, r2
 801a666:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a66a:	432e      	orrs	r6, r5
 801a66c:	f823 6b02 	strh.w	r6, [r3], #2
 801a670:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a672:	930c      	str	r3, [sp, #48]	; 0x30
 801a674:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a676:	4413      	add	r3, r2
 801a678:	931f      	str	r3, [sp, #124]	; 0x7c
 801a67a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a67c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a67e:	4413      	add	r3, r2
 801a680:	9320      	str	r3, [sp, #128]	; 0x80
 801a682:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a684:	3b01      	subs	r3, #1
 801a686:	9311      	str	r3, [sp, #68]	; 0x44
 801a688:	e6db      	b.n	801a442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a68a:	b149      	cbz	r1, 801a6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a68c:	5cb2      	ldrb	r2, [r6, r2]
 801a68e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a692:	4422      	add	r2, r4
 801a694:	4628      	mov	r0, r5
 801a696:	462f      	mov	r7, r5
 801a698:	e771      	b.n	801a57e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a69a:	4628      	mov	r0, r5
 801a69c:	462a      	mov	r2, r5
 801a69e:	e76e      	b.n	801a57e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a6a0:	4628      	mov	r0, r5
 801a6a2:	462a      	mov	r2, r5
 801a6a4:	e7f7      	b.n	801a696 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a6a6:	b015      	add	sp, #84	; 0x54
 801a6a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a6ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a6ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6b0:	880f      	ldrh	r7, [r1, #0]
 801a6b2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a6b6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a6ba:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a6be:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a6c2:	023c      	lsls	r4, r7, #8
 801a6c4:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a6c8:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a6cc:	017c      	lsls	r4, r7, #5
 801a6ce:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a6d2:	00ff      	lsls	r7, r7, #3
 801a6d4:	ea4b 0404 	orr.w	r4, fp, r4
 801a6d8:	b2ff      	uxtb	r7, r7
 801a6da:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a6de:	4327      	orrs	r7, r4
 801a6e0:	2d00      	cmp	r5, #0
 801a6e2:	eb02 080a 	add.w	r8, r2, sl
 801a6e6:	9701      	str	r7, [sp, #4]
 801a6e8:	db7e      	blt.n	801a7e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a6ea:	45a9      	cmp	r9, r5
 801a6ec:	dd7c      	ble.n	801a7e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a6ee:	f1bc 0f00 	cmp.w	ip, #0
 801a6f2:	db77      	blt.n	801a7e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a6f4:	45e6      	cmp	lr, ip
 801a6f6:	dd75      	ble.n	801a7e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a6f8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a6fc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a700:	441f      	add	r7, r3
 801a702:	f11c 0201 	adds.w	r2, ip, #1
 801a706:	d472      	bmi.n	801a7ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a708:	4596      	cmp	lr, r2
 801a70a:	dd70      	ble.n	801a7ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a70c:	2800      	cmp	r0, #0
 801a70e:	d06e      	beq.n	801a7ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a710:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a714:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a718:	441c      	add	r4, r3
 801a71a:	3501      	adds	r5, #1
 801a71c:	d46b      	bmi.n	801a7f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a71e:	45a9      	cmp	r9, r5
 801a720:	dd69      	ble.n	801a7f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a722:	2e00      	cmp	r6, #0
 801a724:	d067      	beq.n	801a7f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a726:	f1bc 0f00 	cmp.w	ip, #0
 801a72a:	db62      	blt.n	801a7f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a72c:	45e6      	cmp	lr, ip
 801a72e:	dd60      	ble.n	801a7f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a730:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a734:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a738:	441d      	add	r5, r3
 801a73a:	f11c 0201 	adds.w	r2, ip, #1
 801a73e:	d45d      	bmi.n	801a7fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a740:	4596      	cmp	lr, r2
 801a742:	dd5b      	ble.n	801a7fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a744:	2800      	cmp	r0, #0
 801a746:	d059      	beq.n	801a7fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a748:	44c6      	add	lr, r8
 801a74a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a74e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a752:	4413      	add	r3, r2
 801a754:	b280      	uxth	r0, r0
 801a756:	b2b2      	uxth	r2, r6
 801a758:	fb00 f602 	mul.w	r6, r0, r2
 801a75c:	0100      	lsls	r0, r0, #4
 801a75e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a762:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a766:	1b80      	subs	r0, r0, r6
 801a768:	fa1f fc82 	uxth.w	ip, r2
 801a76c:	b282      	uxth	r2, r0
 801a76e:	78a0      	ldrb	r0, [r4, #2]
 801a770:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a774:	f897 9000 	ldrb.w	r9, [r7]
 801a778:	787f      	ldrb	r7, [r7, #1]
 801a77a:	eba8 080c 	sub.w	r8, r8, ip
 801a77e:	fa1f f888 	uxth.w	r8, r8
 801a782:	4350      	muls	r0, r2
 801a784:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a788:	78a8      	ldrb	r0, [r5, #2]
 801a78a:	fb0c e000 	mla	r0, ip, r0, lr
 801a78e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a792:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a796:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a79a:	f894 e000 	ldrb.w	lr, [r4]
 801a79e:	fb02 fe0e 	mul.w	lr, r2, lr
 801a7a2:	fb08 e909 	mla	r9, r8, r9, lr
 801a7a6:	f895 e000 	ldrb.w	lr, [r5]
 801a7aa:	fb0c 990e 	mla	r9, ip, lr, r9
 801a7ae:	f893 e000 	ldrb.w	lr, [r3]
 801a7b2:	785b      	ldrb	r3, [r3, #1]
 801a7b4:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a7b8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a7bc:	ea4e 0e00 	orr.w	lr, lr, r0
 801a7c0:	7860      	ldrb	r0, [r4, #1]
 801a7c2:	4350      	muls	r0, r2
 801a7c4:	786a      	ldrb	r2, [r5, #1]
 801a7c6:	fb08 0007 	mla	r0, r8, r7, r0
 801a7ca:	fb0c 0202 	mla	r2, ip, r2, r0
 801a7ce:	fb06 2303 	mla	r3, r6, r3, r2
 801a7d2:	095b      	lsrs	r3, r3, #5
 801a7d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a7d8:	ea4e 0303 	orr.w	r3, lr, r3
 801a7dc:	800b      	strh	r3, [r1, #0]
 801a7de:	b003      	add	sp, #12
 801a7e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a7e4:	af01      	add	r7, sp, #4
 801a7e6:	e78c      	b.n	801a702 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a7e8:	ac01      	add	r4, sp, #4
 801a7ea:	4627      	mov	r7, r4
 801a7ec:	e795      	b.n	801a71a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a7ee:	ac01      	add	r4, sp, #4
 801a7f0:	e793      	b.n	801a71a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a7f2:	ad01      	add	r5, sp, #4
 801a7f4:	e7a1      	b.n	801a73a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a7f6:	ab01      	add	r3, sp, #4
 801a7f8:	461d      	mov	r5, r3
 801a7fa:	e7ab      	b.n	801a754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a7fc:	ab01      	add	r3, sp, #4
 801a7fe:	e7a9      	b.n	801a754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a804:	b08f      	sub	sp, #60	; 0x3c
 801a806:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a80a:	920c      	str	r2, [sp, #48]	; 0x30
 801a80c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a80e:	910a      	str	r1, [sp, #40]	; 0x28
 801a810:	9306      	str	r3, [sp, #24]
 801a812:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a816:	900d      	str	r0, [sp, #52]	; 0x34
 801a818:	6850      	ldr	r0, [r2, #4]
 801a81a:	6812      	ldr	r2, [r2, #0]
 801a81c:	fb00 1303 	mla	r3, r0, r3, r1
 801a820:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a824:	9307      	str	r3, [sp, #28]
 801a826:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a828:	681b      	ldr	r3, [r3, #0]
 801a82a:	9308      	str	r3, [sp, #32]
 801a82c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a82e:	685c      	ldr	r4, [r3, #4]
 801a830:	3404      	adds	r4, #4
 801a832:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a834:	2b00      	cmp	r3, #0
 801a836:	dc03      	bgt.n	801a840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a838:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a83a:	2b00      	cmp	r3, #0
 801a83c:	f340 81d6 	ble.w	801abec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a840:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a842:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a846:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a84a:	1e48      	subs	r0, r1, #1
 801a84c:	1e56      	subs	r6, r2, #1
 801a84e:	9b06      	ldr	r3, [sp, #24]
 801a850:	2b00      	cmp	r3, #0
 801a852:	f340 80b7 	ble.w	801a9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a856:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a85a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a85e:	d406      	bmi.n	801a86e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a860:	4287      	cmp	r7, r0
 801a862:	da04      	bge.n	801a86e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a864:	2b00      	cmp	r3, #0
 801a866:	db02      	blt.n	801a86e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a868:	42b3      	cmp	r3, r6
 801a86a:	f2c0 80ac 	blt.w	801a9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a86e:	3701      	adds	r7, #1
 801a870:	f100 809d 	bmi.w	801a9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a874:	42b9      	cmp	r1, r7
 801a876:	f2c0 809a 	blt.w	801a9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a87a:	3301      	adds	r3, #1
 801a87c:	f100 8097 	bmi.w	801a9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a880:	429a      	cmp	r2, r3
 801a882:	f2c0 8094 	blt.w	801a9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a886:	9b06      	ldr	r3, [sp, #24]
 801a888:	930b      	str	r3, [sp, #44]	; 0x2c
 801a88a:	9b07      	ldr	r3, [sp, #28]
 801a88c:	9309      	str	r3, [sp, #36]	; 0x24
 801a88e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a890:	2b00      	cmp	r3, #0
 801a892:	f340 80b5 	ble.w	801aa00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a896:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a898:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a89a:	68c7      	ldr	r7, [r0, #12]
 801a89c:	6892      	ldr	r2, [r2, #8]
 801a89e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a8a2:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a8a6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a8aa:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a8ae:	f100 80fb 	bmi.w	801aaa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a8b2:	f102 3cff 	add.w	ip, r2, #4294967295
 801a8b6:	4560      	cmp	r0, ip
 801a8b8:	f280 80f6 	bge.w	801aaa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a8bc:	2e00      	cmp	r6, #0
 801a8be:	f2c0 80f3 	blt.w	801aaa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a8c2:	f107 3cff 	add.w	ip, r7, #4294967295
 801a8c6:	4566      	cmp	r6, ip
 801a8c8:	f280 80ee 	bge.w	801aaa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a8cc:	b212      	sxth	r2, r2
 801a8ce:	fb06 0002 	mla	r0, r6, r2, r0
 801a8d2:	9e08      	ldr	r6, [sp, #32]
 801a8d4:	1837      	adds	r7, r6, r0
 801a8d6:	5c30      	ldrb	r0, [r6, r0]
 801a8d8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a8dc:	eb04 0c08 	add.w	ip, r4, r8
 801a8e0:	2b00      	cmp	r3, #0
 801a8e2:	f000 80d3 	beq.w	801aa8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a8e6:	787e      	ldrb	r6, [r7, #1]
 801a8e8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a8ec:	4426      	add	r6, r4
 801a8ee:	2900      	cmp	r1, #0
 801a8f0:	f000 80d4 	beq.w	801aa9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a8f4:	18b8      	adds	r0, r7, r2
 801a8f6:	5cba      	ldrb	r2, [r7, r2]
 801a8f8:	7840      	ldrb	r0, [r0, #1]
 801a8fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a8fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a902:	4422      	add	r2, r4
 801a904:	4420      	add	r0, r4
 801a906:	b29b      	uxth	r3, r3
 801a908:	b289      	uxth	r1, r1
 801a90a:	fb03 f901 	mul.w	r9, r3, r1
 801a90e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a912:	011b      	lsls	r3, r3, #4
 801a914:	b289      	uxth	r1, r1
 801a916:	78b7      	ldrb	r7, [r6, #2]
 801a918:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a91c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a920:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a924:	eba3 0309 	sub.w	r3, r3, r9
 801a928:	b29b      	uxth	r3, r3
 801a92a:	ebae 0e01 	sub.w	lr, lr, r1
 801a92e:	fa1f fe8e 	uxth.w	lr, lr
 801a932:	435f      	muls	r7, r3
 801a934:	fb0e 770a 	mla	r7, lr, sl, r7
 801a938:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a93c:	fb01 770a 	mla	r7, r1, sl, r7
 801a940:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a944:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a948:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a94c:	f896 8000 	ldrb.w	r8, [r6]
 801a950:	7876      	ldrb	r6, [r6, #1]
 801a952:	fb03 f808 	mul.w	r8, r3, r8
 801a956:	fb0e 8807 	mla	r8, lr, r7, r8
 801a95a:	7817      	ldrb	r7, [r2, #0]
 801a95c:	fb01 8807 	mla	r8, r1, r7, r8
 801a960:	7807      	ldrb	r7, [r0, #0]
 801a962:	fb09 8707 	mla	r7, r9, r7, r8
 801a966:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a96a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a96e:	ea47 070a 	orr.w	r7, r7, sl
 801a972:	4373      	muls	r3, r6
 801a974:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a978:	fb0e 330c 	mla	r3, lr, ip, r3
 801a97c:	fb01 310a 	mla	r1, r1, sl, r3
 801a980:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a986:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a98a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a98e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a992:	ea47 070a 	orr.w	r7, r7, sl
 801a996:	801f      	strh	r7, [r3, #0]
 801a998:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a99a:	3302      	adds	r3, #2
 801a99c:	9309      	str	r3, [sp, #36]	; 0x24
 801a99e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a9a0:	449b      	add	fp, r3
 801a9a2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a9a4:	441d      	add	r5, r3
 801a9a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a9a8:	3b01      	subs	r3, #1
 801a9aa:	930b      	str	r3, [sp, #44]	; 0x2c
 801a9ac:	e76f      	b.n	801a88e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a9ae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a9b0:	449b      	add	fp, r3
 801a9b2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a9b4:	441d      	add	r5, r3
 801a9b6:	9b06      	ldr	r3, [sp, #24]
 801a9b8:	3b01      	subs	r3, #1
 801a9ba:	9306      	str	r3, [sp, #24]
 801a9bc:	9b07      	ldr	r3, [sp, #28]
 801a9be:	3302      	adds	r3, #2
 801a9c0:	9307      	str	r3, [sp, #28]
 801a9c2:	e744      	b.n	801a84e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a9c4:	d023      	beq.n	801aa0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a9c6:	9b06      	ldr	r3, [sp, #24]
 801a9c8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a9ca:	3b01      	subs	r3, #1
 801a9cc:	fb00 b003 	mla	r0, r0, r3, fp
 801a9d0:	1400      	asrs	r0, r0, #16
 801a9d2:	f53f af58 	bmi.w	801a886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a9d6:	3901      	subs	r1, #1
 801a9d8:	4288      	cmp	r0, r1
 801a9da:	f6bf af54 	bge.w	801a886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a9de:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a9e0:	fb01 5303 	mla	r3, r1, r3, r5
 801a9e4:	141b      	asrs	r3, r3, #16
 801a9e6:	f53f af4e 	bmi.w	801a886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a9ea:	3a01      	subs	r2, #1
 801a9ec:	4293      	cmp	r3, r2
 801a9ee:	f6bf af4a 	bge.w	801a886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a9f2:	9b06      	ldr	r3, [sp, #24]
 801a9f4:	9309      	str	r3, [sp, #36]	; 0x24
 801a9f6:	9b07      	ldr	r3, [sp, #28]
 801a9f8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a9fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a9fc:	2b00      	cmp	r3, #0
 801a9fe:	dc70      	bgt.n	801aae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801aa00:	9b06      	ldr	r3, [sp, #24]
 801aa02:	9a07      	ldr	r2, [sp, #28]
 801aa04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa08:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aa0c:	9307      	str	r3, [sp, #28]
 801aa0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aa10:	2b00      	cmp	r3, #0
 801aa12:	f340 80eb 	ble.w	801abec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801aa16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa1a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801aa1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801aa22:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801aa24:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa28:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa30:	eef0 6a62 	vmov.f32	s13, s5
 801aa34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aa3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa40:	ee16 ba90 	vmov	fp, s13
 801aa44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa48:	eef0 6a43 	vmov.f32	s13, s6
 801aa4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa50:	ee12 2a90 	vmov	r2, s5
 801aa54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa58:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa5c:	ee13 2a10 	vmov	r2, s6
 801aa60:	931b      	str	r3, [sp, #108]	; 0x6c
 801aa62:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801aa64:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa68:	931c      	str	r3, [sp, #112]	; 0x70
 801aa6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aa6c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801aa6e:	3b01      	subs	r3, #1
 801aa70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aa74:	930a      	str	r3, [sp, #40]	; 0x28
 801aa76:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801aa78:	bf08      	it	eq
 801aa7a:	4613      	moveq	r3, r2
 801aa7c:	ee16 5a90 	vmov	r5, s13
 801aa80:	9306      	str	r3, [sp, #24]
 801aa82:	eeb0 3a67 	vmov.f32	s6, s15
 801aa86:	eef0 2a47 	vmov.f32	s5, s14
 801aa8a:	e6d2      	b.n	801a832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801aa8c:	b149      	cbz	r1, 801aaa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801aa8e:	5cba      	ldrb	r2, [r7, r2]
 801aa90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa94:	4422      	add	r2, r4
 801aa96:	4660      	mov	r0, ip
 801aa98:	4666      	mov	r6, ip
 801aa9a:	e734      	b.n	801a906 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801aa9c:	4660      	mov	r0, ip
 801aa9e:	4662      	mov	r2, ip
 801aaa0:	e731      	b.n	801a906 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801aaa2:	4660      	mov	r0, ip
 801aaa4:	4662      	mov	r2, ip
 801aaa6:	e7f7      	b.n	801aa98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801aaa8:	f110 0c01 	adds.w	ip, r0, #1
 801aaac:	f53f af74 	bmi.w	801a998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aab0:	4562      	cmp	r2, ip
 801aab2:	f6ff af71 	blt.w	801a998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aab6:	f116 0c01 	adds.w	ip, r6, #1
 801aaba:	f53f af6d 	bmi.w	801a998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aabe:	4567      	cmp	r7, ip
 801aac0:	f6ff af6a 	blt.w	801a998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aac4:	b23f      	sxth	r7, r7
 801aac6:	b212      	sxth	r2, r2
 801aac8:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801aacc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801aad0:	9200      	str	r2, [sp, #0]
 801aad2:	9701      	str	r7, [sp, #4]
 801aad4:	4623      	mov	r3, r4
 801aad6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801aada:	980d      	ldr	r0, [sp, #52]	; 0x34
 801aadc:	f7ff fde6 	bl	801a6ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801aae0:	e75a      	b.n	801a998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aae2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801aae4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801aae8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801aaec:	1428      	asrs	r0, r5, #16
 801aaee:	fb02 6000 	mla	r0, r2, r0, r6
 801aaf2:	9e08      	ldr	r6, [sp, #32]
 801aaf4:	f816 8000 	ldrb.w	r8, [r6, r0]
 801aaf8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801aafc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ab00:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ab04:	1837      	adds	r7, r6, r0
 801ab06:	eb04 0c08 	add.w	ip, r4, r8
 801ab0a:	2b00      	cmp	r3, #0
 801ab0c:	d060      	beq.n	801abd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801ab0e:	787e      	ldrb	r6, [r7, #1]
 801ab10:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ab14:	4426      	add	r6, r4
 801ab16:	2900      	cmp	r1, #0
 801ab18:	d062      	beq.n	801abe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801ab1a:	18b8      	adds	r0, r7, r2
 801ab1c:	5cba      	ldrb	r2, [r7, r2]
 801ab1e:	7840      	ldrb	r0, [r0, #1]
 801ab20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ab24:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ab28:	4422      	add	r2, r4
 801ab2a:	4420      	add	r0, r4
 801ab2c:	b29b      	uxth	r3, r3
 801ab2e:	b289      	uxth	r1, r1
 801ab30:	fb03 f901 	mul.w	r9, r3, r1
 801ab34:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ab38:	011b      	lsls	r3, r3, #4
 801ab3a:	b289      	uxth	r1, r1
 801ab3c:	78b7      	ldrb	r7, [r6, #2]
 801ab3e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ab42:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ab46:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ab4a:	eba3 0309 	sub.w	r3, r3, r9
 801ab4e:	b29b      	uxth	r3, r3
 801ab50:	ebae 0e01 	sub.w	lr, lr, r1
 801ab54:	fa1f fe8e 	uxth.w	lr, lr
 801ab58:	435f      	muls	r7, r3
 801ab5a:	fb0e 770a 	mla	r7, lr, sl, r7
 801ab5e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ab62:	fb01 770a 	mla	r7, r1, sl, r7
 801ab66:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ab6a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ab6e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ab72:	f896 8000 	ldrb.w	r8, [r6]
 801ab76:	7876      	ldrb	r6, [r6, #1]
 801ab78:	fb03 f808 	mul.w	r8, r3, r8
 801ab7c:	fb0e 8807 	mla	r8, lr, r7, r8
 801ab80:	7817      	ldrb	r7, [r2, #0]
 801ab82:	fb01 8807 	mla	r8, r1, r7, r8
 801ab86:	7807      	ldrb	r7, [r0, #0]
 801ab88:	fb09 8707 	mla	r7, r9, r7, r8
 801ab8c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801ab90:	4373      	muls	r3, r6
 801ab92:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ab96:	7856      	ldrb	r6, [r2, #1]
 801ab98:	ea47 070a 	orr.w	r7, r7, sl
 801ab9c:	fb0e 330c 	mla	r3, lr, ip, r3
 801aba0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801aba4:	fb01 3306 	mla	r3, r1, r6, r3
 801aba8:	fb09 3a0a 	mla	sl, r9, sl, r3
 801abac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801abb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801abb2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801abb6:	ea47 070a 	orr.w	r7, r7, sl
 801abba:	f823 7b02 	strh.w	r7, [r3], #2
 801abbe:	930b      	str	r3, [sp, #44]	; 0x2c
 801abc0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801abc2:	449b      	add	fp, r3
 801abc4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801abc6:	441d      	add	r5, r3
 801abc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801abca:	3b01      	subs	r3, #1
 801abcc:	9309      	str	r3, [sp, #36]	; 0x24
 801abce:	e714      	b.n	801a9fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801abd0:	b149      	cbz	r1, 801abe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801abd2:	5cba      	ldrb	r2, [r7, r2]
 801abd4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801abd8:	4422      	add	r2, r4
 801abda:	4660      	mov	r0, ip
 801abdc:	4666      	mov	r6, ip
 801abde:	e7a5      	b.n	801ab2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801abe0:	4660      	mov	r0, ip
 801abe2:	4662      	mov	r2, ip
 801abe4:	e7a2      	b.n	801ab2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801abe6:	4660      	mov	r0, ip
 801abe8:	4662      	mov	r2, ip
 801abea:	e7f7      	b.n	801abdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801abec:	b00f      	add	sp, #60	; 0x3c
 801abee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801abf2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801abf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abf6:	b085      	sub	sp, #20
 801abf8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801abfc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801ac00:	9102      	str	r1, [sp, #8]
 801ac02:	2c00      	cmp	r4, #0
 801ac04:	fb04 710c 	mla	r1, r4, ip, r7
 801ac08:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801ac0c:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801ac10:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ac14:	eb02 0e01 	add.w	lr, r2, r1
 801ac18:	f2c0 8122 	blt.w	801ae60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ac1c:	45a0      	cmp	r8, r4
 801ac1e:	f340 811f 	ble.w	801ae60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ac22:	2f00      	cmp	r7, #0
 801ac24:	f2c0 811a 	blt.w	801ae5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ac28:	45bc      	cmp	ip, r7
 801ac2a:	f340 8117 	ble.w	801ae5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ac2e:	5c52      	ldrb	r2, [r2, r1]
 801ac30:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801ac34:	1c7a      	adds	r2, r7, #1
 801ac36:	f100 8116 	bmi.w	801ae66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ac3a:	4594      	cmp	ip, r2
 801ac3c:	f340 8113 	ble.w	801ae66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ac40:	2e00      	cmp	r6, #0
 801ac42:	f000 8112 	beq.w	801ae6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801ac46:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ac4a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ac4e:	3401      	adds	r4, #1
 801ac50:	f100 810f 	bmi.w	801ae72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ac54:	45a0      	cmp	r8, r4
 801ac56:	f340 810c 	ble.w	801ae72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ac5a:	2800      	cmp	r0, #0
 801ac5c:	f000 810c 	beq.w	801ae78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ac60:	2f00      	cmp	r7, #0
 801ac62:	f2c0 8104 	blt.w	801ae6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ac66:	45bc      	cmp	ip, r7
 801ac68:	f340 8101 	ble.w	801ae6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ac6c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ac70:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ac74:	3701      	adds	r7, #1
 801ac76:	f100 8102 	bmi.w	801ae7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ac7a:	45bc      	cmp	ip, r7
 801ac7c:	f340 80ff 	ble.w	801ae7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ac80:	2e00      	cmp	r6, #0
 801ac82:	f000 80fe 	beq.w	801ae82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ac86:	44f4      	add	ip, lr
 801ac88:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801ac8c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801ac90:	b2b6      	uxth	r6, r6
 801ac92:	b280      	uxth	r0, r0
 801ac94:	fb00 fe06 	mul.w	lr, r0, r6
 801ac98:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ac9c:	0136      	lsls	r6, r6, #4
 801ac9e:	eba6 070e 	sub.w	r7, r6, lr
 801aca2:	b280      	uxth	r0, r0
 801aca4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801aca8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801acac:	b2bf      	uxth	r7, r7
 801acae:	1a1b      	subs	r3, r3, r0
 801acb0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801acb4:	b29b      	uxth	r3, r3
 801acb6:	fb0a f607 	mul.w	r6, sl, r7
 801acba:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801acbe:	fb0b 6603 	mla	r6, fp, r3, r6
 801acc2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801acc6:	fb00 6609 	mla	r6, r0, r9, r6
 801acca:	fb0e 6608 	mla	r6, lr, r8, r6
 801acce:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801acd2:	9600      	str	r6, [sp, #0]
 801acd4:	2e00      	cmp	r6, #0
 801acd6:	f000 80be 	beq.w	801ae56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801acda:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801acde:	fb0b fc0c 	mul.w	ip, fp, ip
 801ace2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ace6:	fb0b f505 	mul.w	r5, fp, r5
 801acea:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801acee:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801acf2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801acf6:	44dc      	add	ip, fp
 801acf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801acfc:	9501      	str	r5, [sp, #4]
 801acfe:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ad02:	9503      	str	r5, [sp, #12]
 801ad04:	9d01      	ldr	r5, [sp, #4]
 801ad06:	9e02      	ldr	r6, [sp, #8]
 801ad08:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ad0c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ad10:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ad14:	fb0a fc0c 	mul.w	ip, sl, ip
 801ad18:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ad1c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ad20:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ad24:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ad28:	4465      	add	r5, ip
 801ad2a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ad2e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ad32:	fb09 fc0c 	mul.w	ip, r9, ip
 801ad36:	fb09 f904 	mul.w	r9, r9, r4
 801ad3a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ad3e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ad42:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ad46:	fb08 f404 	mul.w	r4, r8, r4
 801ad4a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ad4e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ad52:	fb08 f802 	mul.w	r8, r8, r2
 801ad56:	fb0a fa01 	mul.w	sl, sl, r1
 801ad5a:	0a22      	lsrs	r2, r4, #8
 801ad5c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ad60:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ad64:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ad68:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ad6c:	4414      	add	r4, r2
 801ad6e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ad72:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ad76:	0a2d      	lsrs	r5, r5, #8
 801ad78:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ad7c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ad80:	9a03      	ldr	r2, [sp, #12]
 801ad82:	8836      	ldrh	r6, [r6, #0]
 801ad84:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ad88:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ad8c:	437d      	muls	r5, r7
 801ad8e:	4461      	add	r1, ip
 801ad90:	0a24      	lsrs	r4, r4, #8
 801ad92:	fb02 5503 	mla	r5, r2, r3, r5
 801ad96:	0a09      	lsrs	r1, r1, #8
 801ad98:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ad9c:	fb04 540e 	mla	r4, r4, lr, r5
 801ada0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ada4:	fb01 4100 	mla	r1, r1, r0, r4
 801ada8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adac:	0a09      	lsrs	r1, r1, #8
 801adae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adb2:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801adb6:	fb07 f70a 	mul.w	r7, r7, sl
 801adba:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801adbe:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801adc2:	fb03 7101 	mla	r1, r3, r1, r7
 801adc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801adca:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801adce:	fb0e 1e08 	mla	lr, lr, r8, r1
 801add2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801add6:	fb00 e101 	mla	r1, r0, r1, lr
 801adda:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801adde:	9a00      	ldr	r2, [sp, #0]
 801ade0:	b287      	uxth	r7, r0
 801ade2:	437a      	muls	r2, r7
 801ade4:	0a09      	lsrs	r1, r1, #8
 801ade6:	1c53      	adds	r3, r2, #1
 801ade8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801adec:	4321      	orrs	r1, r4
 801adee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801adf2:	1235      	asrs	r5, r6, #8
 801adf4:	0c0a      	lsrs	r2, r1, #16
 801adf6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801adfa:	b2db      	uxtb	r3, r3
 801adfc:	fb12 f207 	smulbb	r2, r2, r7
 801ae00:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ae04:	fb05 2503 	mla	r5, r5, r3, r2
 801ae08:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ae0c:	10f2      	asrs	r2, r6, #3
 801ae0e:	b2c8      	uxtb	r0, r1
 801ae10:	00f6      	lsls	r6, r6, #3
 801ae12:	fb14 f407 	smulbb	r4, r4, r7
 801ae16:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ae1a:	b2f6      	uxtb	r6, r6
 801ae1c:	fb10 f007 	smulbb	r0, r0, r7
 801ae20:	fb02 4203 	mla	r2, r2, r3, r4
 801ae24:	b2ad      	uxth	r5, r5
 801ae26:	fb06 0303 	mla	r3, r6, r3, r0
 801ae2a:	b299      	uxth	r1, r3
 801ae2c:	b294      	uxth	r4, r2
 801ae2e:	1c6b      	adds	r3, r5, #1
 801ae30:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ae34:	1c62      	adds	r2, r4, #1
 801ae36:	1c4b      	adds	r3, r1, #1
 801ae38:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ae3c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ae40:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ae44:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ae48:	0952      	lsrs	r2, r2, #5
 801ae4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ae4e:	432b      	orrs	r3, r5
 801ae50:	4313      	orrs	r3, r2
 801ae52:	9a02      	ldr	r2, [sp, #8]
 801ae54:	8013      	strh	r3, [r2, #0]
 801ae56:	b005      	add	sp, #20
 801ae58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae5c:	2500      	movs	r5, #0
 801ae5e:	e6e9      	b.n	801ac34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ae60:	2100      	movs	r1, #0
 801ae62:	460d      	mov	r5, r1
 801ae64:	e6f3      	b.n	801ac4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ae66:	2100      	movs	r1, #0
 801ae68:	e6f1      	b.n	801ac4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ae6a:	4631      	mov	r1, r6
 801ae6c:	e6ef      	b.n	801ac4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ae6e:	2400      	movs	r4, #0
 801ae70:	e700      	b.n	801ac74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ae72:	2200      	movs	r2, #0
 801ae74:	4614      	mov	r4, r2
 801ae76:	e70b      	b.n	801ac90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ae78:	4602      	mov	r2, r0
 801ae7a:	4604      	mov	r4, r0
 801ae7c:	e708      	b.n	801ac90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ae7e:	2200      	movs	r2, #0
 801ae80:	e706      	b.n	801ac90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ae82:	4632      	mov	r2, r6
 801ae84:	e704      	b.n	801ac90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ae86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae8a:	b09f      	sub	sp, #124	; 0x7c
 801ae8c:	921b      	str	r2, [sp, #108]	; 0x6c
 801ae8e:	9309      	str	r3, [sp, #36]	; 0x24
 801ae90:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ae92:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ae96:	931c      	str	r3, [sp, #112]	; 0x70
 801ae98:	9119      	str	r1, [sp, #100]	; 0x64
 801ae9a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ae9e:	901d      	str	r0, [sp, #116]	; 0x74
 801aea0:	6850      	ldr	r0, [r2, #4]
 801aea2:	6812      	ldr	r2, [r2, #0]
 801aea4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801aea6:	fb00 1303 	mla	r3, r0, r3, r1
 801aeaa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aeae:	930c      	str	r3, [sp, #48]	; 0x30
 801aeb0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aeb2:	681b      	ldr	r3, [r3, #0]
 801aeb4:	9312      	str	r3, [sp, #72]	; 0x48
 801aeb6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aeb8:	685e      	ldr	r6, [r3, #4]
 801aeba:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801aebe:	930d      	str	r3, [sp, #52]	; 0x34
 801aec0:	3604      	adds	r6, #4
 801aec2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801aec4:	2b00      	cmp	r3, #0
 801aec6:	dc03      	bgt.n	801aed0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aec8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801aeca:	2b00      	cmp	r3, #0
 801aecc:	f340 8388 	ble.w	801b5e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801aed0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aed2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aed6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aeda:	1e48      	subs	r0, r1, #1
 801aedc:	1e57      	subs	r7, r2, #1
 801aede:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aee0:	2b00      	cmp	r3, #0
 801aee2:	f340 8195 	ble.w	801b210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aee6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aee8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801aeec:	ea4f 4325 	mov.w	r3, r5, asr #16
 801aef0:	d406      	bmi.n	801af00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aef2:	4584      	cmp	ip, r0
 801aef4:	da04      	bge.n	801af00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aef6:	2b00      	cmp	r3, #0
 801aef8:	db02      	blt.n	801af00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aefa:	42bb      	cmp	r3, r7
 801aefc:	f2c0 8189 	blt.w	801b212 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801af00:	f11c 0c01 	adds.w	ip, ip, #1
 801af04:	f100 8177 	bmi.w	801b1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801af08:	4561      	cmp	r1, ip
 801af0a:	f2c0 8174 	blt.w	801b1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801af0e:	3301      	adds	r3, #1
 801af10:	f100 8171 	bmi.w	801b1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801af14:	429a      	cmp	r2, r3
 801af16:	f2c0 816e 	blt.w	801b1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801af1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af1c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801af1e:	931a      	str	r3, [sp, #104]	; 0x68
 801af20:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801af22:	2b00      	cmp	r3, #0
 801af24:	f340 8193 	ble.w	801b24e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801af28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801af2a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801af2e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801af30:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801af34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801af36:	141b      	asrs	r3, r3, #16
 801af38:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801af3c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801af40:	f100 81d6 	bmi.w	801b2f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801af44:	f100 38ff 	add.w	r8, r0, #4294967295
 801af48:	4543      	cmp	r3, r8
 801af4a:	f280 81d1 	bge.w	801b2f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801af4e:	f1bc 0f00 	cmp.w	ip, #0
 801af52:	f2c0 81cd 	blt.w	801b2f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801af56:	f10e 38ff 	add.w	r8, lr, #4294967295
 801af5a:	45c4      	cmp	ip, r8
 801af5c:	f280 81c8 	bge.w	801b2f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801af60:	b200      	sxth	r0, r0
 801af62:	fb0c 3300 	mla	r3, ip, r0, r3
 801af66:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801af68:	eb04 0803 	add.w	r8, r4, r3
 801af6c:	5ce3      	ldrb	r3, [r4, r3]
 801af6e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801af72:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801af76:	2a00      	cmp	r2, #0
 801af78:	f000 81af 	beq.w	801b2da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801af7c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801af80:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801af84:	940e      	str	r4, [sp, #56]	; 0x38
 801af86:	0e24      	lsrs	r4, r4, #24
 801af88:	9415      	str	r4, [sp, #84]	; 0x54
 801af8a:	b179      	cbz	r1, 801afac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801af8c:	eb08 0c00 	add.w	ip, r8, r0
 801af90:	f818 0000 	ldrb.w	r0, [r8, r0]
 801af94:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801af98:	900a      	str	r0, [sp, #40]	; 0x28
 801af9a:	0e00      	lsrs	r0, r0, #24
 801af9c:	9013      	str	r0, [sp, #76]	; 0x4c
 801af9e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801afa2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801afa6:	900f      	str	r0, [sp, #60]	; 0x3c
 801afa8:	0e00      	lsrs	r0, r0, #24
 801afaa:	9016      	str	r0, [sp, #88]	; 0x58
 801afac:	b292      	uxth	r2, r2
 801afae:	b289      	uxth	r1, r1
 801afb0:	fb02 f901 	mul.w	r9, r2, r1
 801afb4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801afb8:	0112      	lsls	r2, r2, #4
 801afba:	eba2 0809 	sub.w	r8, r2, r9
 801afbe:	b289      	uxth	r1, r1
 801afc0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801afc4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801afc6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801afc8:	fa1f f888 	uxth.w	r8, r8
 801afcc:	1a52      	subs	r2, r2, r1
 801afce:	b292      	uxth	r2, r2
 801afd0:	fb08 f000 	mul.w	r0, r8, r0
 801afd4:	fb02 000e 	mla	r0, r2, lr, r0
 801afd8:	fb01 0004 	mla	r0, r1, r4, r0
 801afdc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801afde:	fb09 0004 	mla	r0, r9, r4, r0
 801afe2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801afe6:	2800      	cmp	r0, #0
 801afe8:	f000 80fa 	beq.w	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801afec:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801aff0:	d01b      	beq.n	801b02a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801aff2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801aff6:	fb0e fa0a 	mul.w	sl, lr, sl
 801affa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801affe:	fb0e fe03 	mul.w	lr, lr, r3
 801b002:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b006:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b00a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b00e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b012:	4453      	add	r3, sl
 801b014:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b018:	0a1b      	lsrs	r3, r3, #8
 801b01a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b01e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b022:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b026:	ea43 030c 	orr.w	r3, r3, ip
 801b02a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b02c:	2cff      	cmp	r4, #255	; 0xff
 801b02e:	d021      	beq.n	801b074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b030:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b032:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b036:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b038:	fb04 fb0b 	mul.w	fp, r4, fp
 801b03c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b03e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b042:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b044:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b048:	fb04 fa0a 	mul.w	sl, r4, sl
 801b04c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b050:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b054:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b058:	44de      	add	lr, fp
 801b05a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b05e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b062:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b066:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b06a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b06e:	ea4e 040a 	orr.w	r4, lr, sl
 801b072:	940e      	str	r4, [sp, #56]	; 0x38
 801b074:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b076:	2cff      	cmp	r4, #255	; 0xff
 801b078:	d021      	beq.n	801b0be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b07a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b07c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b080:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b082:	fb04 fb0b 	mul.w	fp, r4, fp
 801b086:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b088:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b08c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b08e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b092:	fb04 fa0a 	mul.w	sl, r4, sl
 801b096:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b09a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b09e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b0a2:	44de      	add	lr, fp
 801b0a4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b0a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b0ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b0b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b0b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b0b8:	ea4e 040a 	orr.w	r4, lr, sl
 801b0bc:	940a      	str	r4, [sp, #40]	; 0x28
 801b0be:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b0c0:	2cff      	cmp	r4, #255	; 0xff
 801b0c2:	d021      	beq.n	801b108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b0c4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b0c6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b0ca:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b0cc:	fb04 fb0b 	mul.w	fp, r4, fp
 801b0d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b0d2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b0d6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b0d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b0dc:	fb04 fa0a 	mul.w	sl, r4, sl
 801b0e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b0e4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b0e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b0ec:	44de      	add	lr, fp
 801b0ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b0f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b0f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b0fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b0fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b102:	ea4e 040a 	orr.w	r4, lr, sl
 801b106:	940f      	str	r4, [sp, #60]	; 0x3c
 801b108:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b10a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b10e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b110:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b114:	fb08 fc0c 	mul.w	ip, r8, ip
 801b118:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b11c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b120:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b122:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b126:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b12a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b12c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b130:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b134:	fb08 f80e 	mul.w	r8, r8, lr
 801b138:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b13c:	fb02 8303 	mla	r3, r2, r3, r8
 801b140:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b142:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b144:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b148:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b14a:	fb01 330a 	mla	r3, r1, sl, r3
 801b14e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801b152:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b154:	fb09 3901 	mla	r9, r9, r1, r3
 801b158:	4342      	muls	r2, r0
 801b15a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b15e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b162:	883b      	ldrh	r3, [r7, #0]
 801b164:	1c50      	adds	r0, r2, #1
 801b166:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b16a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b16e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b172:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b176:	1219      	asrs	r1, r3, #8
 801b178:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b17c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b180:	b2c0      	uxtb	r0, r0
 801b182:	fb12 f204 	smulbb	r2, r2, r4
 801b186:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b18a:	fb01 2100 	mla	r1, r1, r0, r2
 801b18e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b192:	10da      	asrs	r2, r3, #3
 801b194:	fa5f fc8c 	uxtb.w	ip, ip
 801b198:	00db      	lsls	r3, r3, #3
 801b19a:	fb1c fc04 	smulbb	ip, ip, r4
 801b19e:	b2db      	uxtb	r3, r3
 801b1a0:	b289      	uxth	r1, r1
 801b1a2:	fb03 c300 	mla	r3, r3, r0, ip
 801b1a6:	fa1f fc83 	uxth.w	ip, r3
 801b1aa:	1c4b      	adds	r3, r1, #1
 801b1ac:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b1b0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b1b4:	fb1e fe04 	smulbb	lr, lr, r4
 801b1b8:	f10c 0301 	add.w	r3, ip, #1
 801b1bc:	fb02 e200 	mla	r2, r2, r0, lr
 801b1c0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b1c4:	b292      	uxth	r2, r2
 801b1c6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b1ca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b1ce:	430b      	orrs	r3, r1
 801b1d0:	1c51      	adds	r1, r2, #1
 801b1d2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b1d6:	0952      	lsrs	r2, r2, #5
 801b1d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b1dc:	4313      	orrs	r3, r2
 801b1de:	803b      	strh	r3, [r7, #0]
 801b1e0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b1e2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b1e4:	441a      	add	r2, r3
 801b1e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b1e8:	9229      	str	r2, [sp, #164]	; 0xa4
 801b1ea:	441d      	add	r5, r3
 801b1ec:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b1ee:	3b01      	subs	r3, #1
 801b1f0:	3702      	adds	r7, #2
 801b1f2:	931a      	str	r3, [sp, #104]	; 0x68
 801b1f4:	e694      	b.n	801af20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b1f6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b1f8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b1fa:	441c      	add	r4, r3
 801b1fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b1fe:	9429      	str	r4, [sp, #164]	; 0xa4
 801b200:	441d      	add	r5, r3
 801b202:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b204:	3b01      	subs	r3, #1
 801b206:	9309      	str	r3, [sp, #36]	; 0x24
 801b208:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b20a:	3302      	adds	r3, #2
 801b20c:	930c      	str	r3, [sp, #48]	; 0x30
 801b20e:	e666      	b.n	801aede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b210:	d024      	beq.n	801b25c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b212:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b214:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b216:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b218:	3b01      	subs	r3, #1
 801b21a:	fb00 4003 	mla	r0, r0, r3, r4
 801b21e:	1400      	asrs	r0, r0, #16
 801b220:	f53f ae7b 	bmi.w	801af1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b224:	3901      	subs	r1, #1
 801b226:	4288      	cmp	r0, r1
 801b228:	f6bf ae77 	bge.w	801af1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b22c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b22e:	fb01 5303 	mla	r3, r1, r3, r5
 801b232:	141b      	asrs	r3, r3, #16
 801b234:	f53f ae71 	bmi.w	801af1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b238:	3a01      	subs	r2, #1
 801b23a:	4293      	cmp	r3, r2
 801b23c:	f6bf ae6d 	bge.w	801af1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b240:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b244:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b248:	f1bb 0f00 	cmp.w	fp, #0
 801b24c:	dc70      	bgt.n	801b330 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b24e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b250:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b254:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b256:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b25a:	930c      	str	r3, [sp, #48]	; 0x30
 801b25c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b25e:	2b00      	cmp	r3, #0
 801b260:	f340 81be 	ble.w	801b5e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b264:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b268:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b26c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b270:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b272:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b276:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b27a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b27e:	eef0 6a62 	vmov.f32	s13, s5
 801b282:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b286:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b28a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b28e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b292:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b296:	eef0 6a43 	vmov.f32	s13, s6
 801b29a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b29e:	ee12 2a90 	vmov	r2, s5
 801b2a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b2a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2aa:	ee13 2a10 	vmov	r2, s6
 801b2ae:	932b      	str	r3, [sp, #172]	; 0xac
 801b2b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b2b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2b6:	932c      	str	r3, [sp, #176]	; 0xb0
 801b2b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b2ba:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b2bc:	3b01      	subs	r3, #1
 801b2be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b2c2:	9319      	str	r3, [sp, #100]	; 0x64
 801b2c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b2c6:	bf08      	it	eq
 801b2c8:	4613      	moveq	r3, r2
 801b2ca:	ee16 5a90 	vmov	r5, s13
 801b2ce:	9309      	str	r3, [sp, #36]	; 0x24
 801b2d0:	eeb0 3a67 	vmov.f32	s6, s15
 801b2d4:	eef0 2a47 	vmov.f32	s5, s14
 801b2d8:	e5f3      	b.n	801aec2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b2da:	2900      	cmp	r1, #0
 801b2dc:	f43f ae66 	beq.w	801afac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b2e0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b2e4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b2e8:	900a      	str	r0, [sp, #40]	; 0x28
 801b2ea:	0e00      	lsrs	r0, r0, #24
 801b2ec:	9013      	str	r0, [sp, #76]	; 0x4c
 801b2ee:	e65d      	b.n	801afac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b2f0:	f113 0801 	adds.w	r8, r3, #1
 801b2f4:	f53f af74 	bmi.w	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b2f8:	4540      	cmp	r0, r8
 801b2fa:	f6ff af71 	blt.w	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b2fe:	f11c 0801 	adds.w	r8, ip, #1
 801b302:	f53f af6d 	bmi.w	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b306:	45c6      	cmp	lr, r8
 801b308:	f6ff af6a 	blt.w	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b30c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b30e:	9302      	str	r3, [sp, #8]
 801b310:	b200      	sxth	r0, r0
 801b312:	fa0f f38e 	sxth.w	r3, lr
 801b316:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b31a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b31e:	9301      	str	r3, [sp, #4]
 801b320:	9000      	str	r0, [sp, #0]
 801b322:	4633      	mov	r3, r6
 801b324:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b326:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b328:	4639      	mov	r1, r7
 801b32a:	f7ff fc62 	bl	801abf2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b32e:	e757      	b.n	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b330:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b332:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b334:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b338:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b33a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b33e:	1427      	asrs	r7, r4, #16
 801b340:	142b      	asrs	r3, r5, #16
 801b342:	fb01 7303 	mla	r3, r1, r3, r7
 801b346:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b348:	18e7      	adds	r7, r4, r3
 801b34a:	5ce3      	ldrb	r3, [r4, r3]
 801b34c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b350:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b354:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b358:	2a00      	cmp	r2, #0
 801b35a:	f000 8137 	beq.w	801b5cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b35e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b362:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b366:	9410      	str	r4, [sp, #64]	; 0x40
 801b368:	0e24      	lsrs	r4, r4, #24
 801b36a:	9417      	str	r4, [sp, #92]	; 0x5c
 801b36c:	b170      	cbz	r0, 801b38c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b36e:	eb07 0e01 	add.w	lr, r7, r1
 801b372:	5c79      	ldrb	r1, [r7, r1]
 801b374:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b378:	910b      	str	r1, [sp, #44]	; 0x2c
 801b37a:	0e09      	lsrs	r1, r1, #24
 801b37c:	9114      	str	r1, [sp, #80]	; 0x50
 801b37e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b382:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b386:	9111      	str	r1, [sp, #68]	; 0x44
 801b388:	0e09      	lsrs	r1, r1, #24
 801b38a:	9118      	str	r1, [sp, #96]	; 0x60
 801b38c:	b292      	uxth	r2, r2
 801b38e:	b280      	uxth	r0, r0
 801b390:	fb02 f800 	mul.w	r8, r2, r0
 801b394:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b398:	0112      	lsls	r2, r2, #4
 801b39a:	eba2 0e08 	sub.w	lr, r2, r8
 801b39e:	b280      	uxth	r0, r0
 801b3a0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b3a4:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b3a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b3a8:	fa1f fe8e 	uxth.w	lr, lr
 801b3ac:	1a12      	subs	r2, r2, r0
 801b3ae:	b292      	uxth	r2, r2
 801b3b0:	fb0e f101 	mul.w	r1, lr, r1
 801b3b4:	fb02 110c 	mla	r1, r2, ip, r1
 801b3b8:	fb00 1104 	mla	r1, r0, r4, r1
 801b3bc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b3be:	fb08 1104 	mla	r1, r8, r4, r1
 801b3c2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b3c6:	2900      	cmp	r1, #0
 801b3c8:	f000 80f5 	beq.w	801b5b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b3cc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b3d0:	d019      	beq.n	801b406 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b3d2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b3d6:	fb0c fa0a 	mul.w	sl, ip, sl
 801b3da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b3de:	fb0c fc03 	mul.w	ip, ip, r3
 801b3e2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b3e6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b3ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b3ee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b3f2:	4453      	add	r3, sl
 801b3f4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b3f8:	0a1b      	lsrs	r3, r3, #8
 801b3fa:	0a3f      	lsrs	r7, r7, #8
 801b3fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b400:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b404:	433b      	orrs	r3, r7
 801b406:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b408:	2cff      	cmp	r4, #255	; 0xff
 801b40a:	d020      	beq.n	801b44e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b40c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b40e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b412:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b414:	4367      	muls	r7, r4
 801b416:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b418:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b41c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b41e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b422:	fb04 fa0a 	mul.w	sl, r4, sl
 801b426:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b42a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b42e:	44bc      	add	ip, r7
 801b430:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b434:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b438:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b43c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b440:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b444:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b448:	ea4c 040a 	orr.w	r4, ip, sl
 801b44c:	9410      	str	r4, [sp, #64]	; 0x40
 801b44e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b450:	2cff      	cmp	r4, #255	; 0xff
 801b452:	d020      	beq.n	801b496 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b454:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b456:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b45a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b45c:	4367      	muls	r7, r4
 801b45e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b460:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b464:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b466:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b46a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b46e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b472:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b476:	44bc      	add	ip, r7
 801b478:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b47c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b480:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b484:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b488:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b48c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b490:	ea4c 040a 	orr.w	r4, ip, sl
 801b494:	940b      	str	r4, [sp, #44]	; 0x2c
 801b496:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b498:	2cff      	cmp	r4, #255	; 0xff
 801b49a:	d020      	beq.n	801b4de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b49c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b49e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b4a2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b4a4:	4367      	muls	r7, r4
 801b4a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b4a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b4ac:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b4ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b4b2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b4b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b4ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b4be:	44bc      	add	ip, r7
 801b4c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b4c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b4c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b4cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b4d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b4d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b4d8:	ea4c 040a 	orr.w	r4, ip, sl
 801b4dc:	9411      	str	r4, [sp, #68]	; 0x44
 801b4de:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b4e0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b4e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b4e6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b4ea:	fb0e f707 	mul.w	r7, lr, r7
 801b4ee:	fb02 770c 	mla	r7, r2, ip, r7
 801b4f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b4f6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b4f8:	fb00 770c 	mla	r7, r0, ip, r7
 801b4fc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b500:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b502:	fb08 770c 	mla	r7, r8, ip, r7
 801b506:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b50a:	fb0e fe0c 	mul.w	lr, lr, ip
 801b50e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b512:	fb02 e303 	mla	r3, r2, r3, lr
 801b516:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b518:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b51a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b51e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b520:	fb00 330a 	mla	r3, r0, sl, r3
 801b524:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b528:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b52c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b52e:	f8b9 0000 	ldrh.w	r0, [r9]
 801b532:	434b      	muls	r3, r1
 801b534:	0a3f      	lsrs	r7, r7, #8
 801b536:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b53a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b53e:	1c59      	adds	r1, r3, #1
 801b540:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b544:	ea47 070c 	orr.w	r7, r7, ip
 801b548:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b54c:	1202      	asrs	r2, r0, #8
 801b54e:	0c3b      	lsrs	r3, r7, #16
 801b550:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b554:	b2c9      	uxtb	r1, r1
 801b556:	fb13 f304 	smulbb	r3, r3, r4
 801b55a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b55e:	fb02 3201 	mla	r2, r2, r1, r3
 801b562:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b566:	10c3      	asrs	r3, r0, #3
 801b568:	b2ff      	uxtb	r7, r7
 801b56a:	00c0      	lsls	r0, r0, #3
 801b56c:	b292      	uxth	r2, r2
 801b56e:	fb1c fc04 	smulbb	ip, ip, r4
 801b572:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b576:	b2c0      	uxtb	r0, r0
 801b578:	fb17 f704 	smulbb	r7, r7, r4
 801b57c:	fb03 c301 	mla	r3, r3, r1, ip
 801b580:	fb00 7001 	mla	r0, r0, r1, r7
 801b584:	f102 0c01 	add.w	ip, r2, #1
 801b588:	b280      	uxth	r0, r0
 801b58a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b58e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b592:	1c42      	adds	r2, r0, #1
 801b594:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b598:	b29b      	uxth	r3, r3
 801b59a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b59e:	ea42 020c 	orr.w	r2, r2, ip
 801b5a2:	f103 0c01 	add.w	ip, r3, #1
 801b5a6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b5aa:	095b      	lsrs	r3, r3, #5
 801b5ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b5b0:	431a      	orrs	r2, r3
 801b5b2:	f8a9 2000 	strh.w	r2, [r9]
 801b5b6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b5b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b5ba:	441a      	add	r2, r3
 801b5bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5be:	9229      	str	r2, [sp, #164]	; 0xa4
 801b5c0:	f109 0902 	add.w	r9, r9, #2
 801b5c4:	441d      	add	r5, r3
 801b5c6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b5ca:	e63d      	b.n	801b248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b5cc:	2800      	cmp	r0, #0
 801b5ce:	f43f aedd 	beq.w	801b38c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b5d2:	5c79      	ldrb	r1, [r7, r1]
 801b5d4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b5d8:	910b      	str	r1, [sp, #44]	; 0x2c
 801b5da:	0e09      	lsrs	r1, r1, #24
 801b5dc:	9114      	str	r1, [sp, #80]	; 0x50
 801b5de:	e6d5      	b.n	801b38c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b5e0:	b01f      	add	sp, #124	; 0x7c
 801b5e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b5e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b5e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5ea:	b089      	sub	sp, #36	; 0x24
 801b5ec:	9101      	str	r1, [sp, #4]
 801b5ee:	9801      	ldr	r0, [sp, #4]
 801b5f0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b5f4:	8800      	ldrh	r0, [r0, #0]
 801b5f6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b5fa:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b5fe:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b602:	1206      	asrs	r6, r0, #8
 801b604:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b608:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b60c:	9602      	str	r6, [sp, #8]
 801b60e:	10c6      	asrs	r6, r0, #3
 801b610:	00c0      	lsls	r0, r0, #3
 801b612:	b2c0      	uxtb	r0, r0
 801b614:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b618:	9004      	str	r0, [sp, #16]
 801b61a:	2f00      	cmp	r7, #0
 801b61c:	fb07 100c 	mla	r0, r7, ip, r1
 801b620:	9603      	str	r6, [sp, #12]
 801b622:	eb02 0e00 	add.w	lr, r2, r0
 801b626:	f2c0 810a 	blt.w	801b83e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b62a:	45b8      	cmp	r8, r7
 801b62c:	f340 8107 	ble.w	801b83e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b630:	2900      	cmp	r1, #0
 801b632:	f2c0 8102 	blt.w	801b83a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b636:	458c      	cmp	ip, r1
 801b638:	f340 80ff 	ble.w	801b83a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b63c:	5c12      	ldrb	r2, [r2, r0]
 801b63e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b642:	1c4a      	adds	r2, r1, #1
 801b644:	f100 80fe 	bmi.w	801b844 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b648:	4594      	cmp	ip, r2
 801b64a:	f340 80fb 	ble.w	801b844 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b64e:	2d00      	cmp	r5, #0
 801b650:	f000 80fa 	beq.w	801b848 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b654:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b658:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b65c:	3701      	adds	r7, #1
 801b65e:	f100 80f7 	bmi.w	801b850 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b662:	45b8      	cmp	r8, r7
 801b664:	f340 80f4 	ble.w	801b850 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b668:	2c00      	cmp	r4, #0
 801b66a:	f000 80f4 	beq.w	801b856 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b66e:	2900      	cmp	r1, #0
 801b670:	eb0e 020c 	add.w	r2, lr, ip
 801b674:	f2c0 80ea 	blt.w	801b84c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b678:	458c      	cmp	ip, r1
 801b67a:	f340 80e7 	ble.w	801b84c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b67e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b682:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b686:	3101      	adds	r1, #1
 801b688:	f100 80e8 	bmi.w	801b85c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b68c:	458c      	cmp	ip, r1
 801b68e:	f340 80e5 	ble.w	801b85c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b692:	2d00      	cmp	r5, #0
 801b694:	f000 80e4 	beq.w	801b860 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b698:	7852      	ldrb	r2, [r2, #1]
 801b69a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b69e:	0e0b      	lsrs	r3, r1, #24
 801b6a0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b6a4:	9300      	str	r3, [sp, #0]
 801b6a6:	b2a4      	uxth	r4, r4
 801b6a8:	b2ab      	uxth	r3, r5
 801b6aa:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b6ae:	fb03 f904 	mul.w	r9, r3, r4
 801b6b2:	fb0a f505 	mul.w	r5, sl, r5
 801b6b6:	011b      	lsls	r3, r3, #4
 801b6b8:	eba3 0e09 	sub.w	lr, r3, r9
 801b6bc:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b6c0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b6c4:	0a28      	lsrs	r0, r5, #8
 801b6c6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b6ca:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b6ce:	4405      	add	r5, r0
 801b6d0:	0a2d      	lsrs	r5, r5, #8
 801b6d2:	fb0a f303 	mul.w	r3, sl, r3
 801b6d6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b6da:	9005      	str	r0, [sp, #20]
 801b6dc:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b6e0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b6e4:	0a1b      	lsrs	r3, r3, #8
 801b6e6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b6ea:	9306      	str	r3, [sp, #24]
 801b6ec:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b6f0:	fb0b f303 	mul.w	r3, fp, r3
 801b6f4:	0a1d      	lsrs	r5, r3, #8
 801b6f6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b6fa:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b6fe:	fb0b f606 	mul.w	r6, fp, r6
 801b702:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b706:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b70a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b70e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b712:	fb08 f707 	mul.w	r7, r8, r7
 801b716:	441d      	add	r5, r3
 801b718:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b71c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b720:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b724:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b728:	fb08 fc0c 	mul.w	ip, r8, ip
 801b72c:	0a1b      	lsrs	r3, r3, #8
 801b72e:	9307      	str	r3, [sp, #28]
 801b730:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b734:	0e0b      	lsrs	r3, r1, #24
 801b736:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b73a:	435f      	muls	r7, r3
 801b73c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b740:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b744:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b748:	4460      	add	r0, ip
 801b74a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b74e:	b2a4      	uxth	r4, r4
 801b750:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b754:	0a2d      	lsrs	r5, r5, #8
 801b756:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b75a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b75e:	fa1f fe8e 	uxth.w	lr, lr
 801b762:	4359      	muls	r1, r3
 801b764:	1b12      	subs	r2, r2, r4
 801b766:	9b05      	ldr	r3, [sp, #20]
 801b768:	44bc      	add	ip, r7
 801b76a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b76e:	b292      	uxth	r2, r2
 801b770:	fb05 f50e 	mul.w	r5, r5, lr
 801b774:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b778:	fb03 5502 	mla	r5, r3, r2, r5
 801b77c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b780:	9b06      	ldr	r3, [sp, #24]
 801b782:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b786:	0a36      	lsrs	r6, r6, #8
 801b788:	0a00      	lsrs	r0, r0, #8
 801b78a:	fb0c 5509 	mla	r5, ip, r9, r5
 801b78e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b792:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b796:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b79a:	fb00 5504 	mla	r5, r0, r4, r5
 801b79e:	fb0e f606 	mul.w	r6, lr, r6
 801b7a2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b7a6:	0a09      	lsrs	r1, r1, #8
 801b7a8:	9b07      	ldr	r3, [sp, #28]
 801b7aa:	fb02 6000 	mla	r0, r2, r0, r6
 801b7ae:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b7b2:	fb09 0001 	mla	r0, r9, r1, r0
 801b7b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b7ba:	fb0e fe0b 	mul.w	lr, lr, fp
 801b7be:	fb04 0003 	mla	r0, r4, r3, r0
 801b7c2:	fb02 e20a 	mla	r2, r2, sl, lr
 801b7c6:	9b00      	ldr	r3, [sp, #0]
 801b7c8:	fb04 2408 	mla	r4, r4, r8, r2
 801b7cc:	fb09 4903 	mla	r9, r9, r3, r4
 801b7d0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b7d4:	9b02      	ldr	r3, [sp, #8]
 801b7d6:	9a04      	ldr	r2, [sp, #16]
 801b7d8:	fa5f f989 	uxtb.w	r9, r9
 801b7dc:	fb03 f109 	mul.w	r1, r3, r9
 801b7e0:	9b03      	ldr	r3, [sp, #12]
 801b7e2:	0a2d      	lsrs	r5, r5, #8
 801b7e4:	0a00      	lsrs	r0, r0, #8
 801b7e6:	fb03 f309 	mul.w	r3, r3, r9
 801b7ea:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b7ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b7f2:	4305      	orrs	r5, r0
 801b7f4:	fb02 f909 	mul.w	r9, r2, r9
 801b7f8:	1c58      	adds	r0, r3, #1
 801b7fa:	1c4a      	adds	r2, r1, #1
 801b7fc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b800:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b804:	0a2b      	lsrs	r3, r5, #8
 801b806:	0c2a      	lsrs	r2, r5, #16
 801b808:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b80c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b810:	00db      	lsls	r3, r3, #3
 801b812:	0212      	lsls	r2, r2, #8
 801b814:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b818:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b81c:	4313      	orrs	r3, r2
 801b81e:	f109 0201 	add.w	r2, r9, #1
 801b822:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b826:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b82a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b82e:	431d      	orrs	r5, r3
 801b830:	9b01      	ldr	r3, [sp, #4]
 801b832:	801d      	strh	r5, [r3, #0]
 801b834:	b009      	add	sp, #36	; 0x24
 801b836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b83a:	2000      	movs	r0, #0
 801b83c:	e701      	b.n	801b642 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b83e:	2600      	movs	r6, #0
 801b840:	4630      	mov	r0, r6
 801b842:	e70b      	b.n	801b65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b844:	2600      	movs	r6, #0
 801b846:	e709      	b.n	801b65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b848:	462e      	mov	r6, r5
 801b84a:	e707      	b.n	801b65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b84c:	2700      	movs	r7, #0
 801b84e:	e71a      	b.n	801b686 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b850:	2100      	movs	r1, #0
 801b852:	460f      	mov	r7, r1
 801b854:	e723      	b.n	801b69e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b856:	4621      	mov	r1, r4
 801b858:	4627      	mov	r7, r4
 801b85a:	e720      	b.n	801b69e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b85c:	2100      	movs	r1, #0
 801b85e:	e71e      	b.n	801b69e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b860:	4629      	mov	r1, r5
 801b862:	e71c      	b.n	801b69e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b868:	b09b      	sub	sp, #108	; 0x6c
 801b86a:	9218      	str	r2, [sp, #96]	; 0x60
 801b86c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b86e:	9116      	str	r1, [sp, #88]	; 0x58
 801b870:	9307      	str	r3, [sp, #28]
 801b872:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b876:	9019      	str	r0, [sp, #100]	; 0x64
 801b878:	6850      	ldr	r0, [r2, #4]
 801b87a:	6812      	ldr	r2, [r2, #0]
 801b87c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b87e:	fb00 1303 	mla	r3, r0, r3, r1
 801b882:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b886:	930a      	str	r3, [sp, #40]	; 0x28
 801b888:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b88a:	681b      	ldr	r3, [r3, #0]
 801b88c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b88e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b890:	685e      	ldr	r6, [r3, #4]
 801b892:	3604      	adds	r6, #4
 801b894:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b896:	2b00      	cmp	r3, #0
 801b898:	dc03      	bgt.n	801b8a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b89a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b89c:	2b00      	cmp	r3, #0
 801b89e:	f340 8373 	ble.w	801bf88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b8a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b8a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b8a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b8ac:	1e48      	subs	r0, r1, #1
 801b8ae:	1e57      	subs	r7, r2, #1
 801b8b0:	9b07      	ldr	r3, [sp, #28]
 801b8b2:	2b00      	cmp	r3, #0
 801b8b4:	f340 8190 	ble.w	801bbd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b8b8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b8ba:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b8be:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b8c2:	d406      	bmi.n	801b8d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b8c4:	4584      	cmp	ip, r0
 801b8c6:	da04      	bge.n	801b8d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b8c8:	2b00      	cmp	r3, #0
 801b8ca:	db02      	blt.n	801b8d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b8cc:	42bb      	cmp	r3, r7
 801b8ce:	f2c0 8184 	blt.w	801bbda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b8d2:	f11c 0c01 	adds.w	ip, ip, #1
 801b8d6:	f100 8172 	bmi.w	801bbbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b8da:	4561      	cmp	r1, ip
 801b8dc:	f2c0 816f 	blt.w	801bbbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b8e0:	3301      	adds	r3, #1
 801b8e2:	f100 816c 	bmi.w	801bbbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b8e6:	429a      	cmp	r2, r3
 801b8e8:	f2c0 8169 	blt.w	801bbbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b8ec:	9b07      	ldr	r3, [sp, #28]
 801b8ee:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b8f0:	9317      	str	r3, [sp, #92]	; 0x5c
 801b8f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b8f4:	2b00      	cmp	r3, #0
 801b8f6:	f340 818e 	ble.w	801bc16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b8fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b8fc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b900:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b902:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b906:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b908:	141b      	asrs	r3, r3, #16
 801b90a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b90e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b912:	f100 81d1 	bmi.w	801bcb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b916:	f101 38ff 	add.w	r8, r1, #4294967295
 801b91a:	4543      	cmp	r3, r8
 801b91c:	f280 81cc 	bge.w	801bcb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b920:	f1bc 0f00 	cmp.w	ip, #0
 801b924:	f2c0 81c8 	blt.w	801bcb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b928:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b92c:	45c4      	cmp	ip, r8
 801b92e:	f280 81c3 	bge.w	801bcb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b932:	b209      	sxth	r1, r1
 801b934:	fb0c 3301 	mla	r3, ip, r1, r3
 801b938:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b93a:	eb04 0803 	add.w	r8, r4, r3
 801b93e:	5ce3      	ldrb	r3, [r4, r3]
 801b940:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b944:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b948:	2a00      	cmp	r2, #0
 801b94a:	f000 81aa 	beq.w	801bca2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b94e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b952:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b956:	940b      	str	r4, [sp, #44]	; 0x2c
 801b958:	0e24      	lsrs	r4, r4, #24
 801b95a:	9412      	str	r4, [sp, #72]	; 0x48
 801b95c:	b178      	cbz	r0, 801b97e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b95e:	eb08 0c01 	add.w	ip, r8, r1
 801b962:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b966:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b96a:	9108      	str	r1, [sp, #32]
 801b96c:	0e09      	lsrs	r1, r1, #24
 801b96e:	9110      	str	r1, [sp, #64]	; 0x40
 801b970:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b974:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b978:	910c      	str	r1, [sp, #48]	; 0x30
 801b97a:	0e09      	lsrs	r1, r1, #24
 801b97c:	9113      	str	r1, [sp, #76]	; 0x4c
 801b97e:	b292      	uxth	r2, r2
 801b980:	b280      	uxth	r0, r0
 801b982:	fb02 f900 	mul.w	r9, r2, r0
 801b986:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b98a:	0112      	lsls	r2, r2, #4
 801b98c:	eba2 0809 	sub.w	r8, r2, r9
 801b990:	b280      	uxth	r0, r0
 801b992:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b996:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b998:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b99a:	fa1f f888 	uxth.w	r8, r8
 801b99e:	1a12      	subs	r2, r2, r0
 801b9a0:	b292      	uxth	r2, r2
 801b9a2:	fb08 f101 	mul.w	r1, r8, r1
 801b9a6:	fb02 110e 	mla	r1, r2, lr, r1
 801b9aa:	fb00 1104 	mla	r1, r0, r4, r1
 801b9ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b9b0:	fb09 1104 	mla	r1, r9, r4, r1
 801b9b4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b9b8:	2900      	cmp	r1, #0
 801b9ba:	f000 80f5 	beq.w	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b9be:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b9c2:	d01b      	beq.n	801b9fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9c4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b9c8:	fb0e fa0a 	mul.w	sl, lr, sl
 801b9cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b9d0:	fb0e fe03 	mul.w	lr, lr, r3
 801b9d4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b9d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b9dc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b9e0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b9e4:	4453      	add	r3, sl
 801b9e6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b9ea:	0a1b      	lsrs	r3, r3, #8
 801b9ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b9f4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b9f8:	ea43 030c 	orr.w	r3, r3, ip
 801b9fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b9fe:	2cff      	cmp	r4, #255	; 0xff
 801ba00:	d021      	beq.n	801ba46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801ba02:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ba04:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ba08:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ba0a:	fb04 fb0b 	mul.w	fp, r4, fp
 801ba0e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ba10:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ba14:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ba16:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ba1a:	fb04 fa0a 	mul.w	sl, r4, sl
 801ba1e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ba22:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ba26:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ba2a:	44de      	add	lr, fp
 801ba2c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ba30:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ba34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba38:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ba3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba40:	ea4e 040a 	orr.w	r4, lr, sl
 801ba44:	940b      	str	r4, [sp, #44]	; 0x2c
 801ba46:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ba48:	2cff      	cmp	r4, #255	; 0xff
 801ba4a:	d021      	beq.n	801ba90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801ba4c:	9c08      	ldr	r4, [sp, #32]
 801ba4e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ba52:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ba54:	fb04 fb0b 	mul.w	fp, r4, fp
 801ba58:	9c08      	ldr	r4, [sp, #32]
 801ba5a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ba5e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ba60:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ba64:	fb04 fa0a 	mul.w	sl, r4, sl
 801ba68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ba6c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ba70:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ba74:	44de      	add	lr, fp
 801ba76:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ba7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ba7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba82:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ba86:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba8a:	ea4e 040a 	orr.w	r4, lr, sl
 801ba8e:	9408      	str	r4, [sp, #32]
 801ba90:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ba92:	2cff      	cmp	r4, #255	; 0xff
 801ba94:	d021      	beq.n	801bada <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ba96:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ba98:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ba9c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ba9e:	fb04 fb0b 	mul.w	fp, r4, fp
 801baa2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801baa4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801baa8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801baaa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801baae:	fb04 fa0a 	mul.w	sl, r4, sl
 801bab2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bab6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801baba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801babe:	44de      	add	lr, fp
 801bac0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bac4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bac8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bacc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bad0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bad4:	ea4e 040a 	orr.w	r4, lr, sl
 801bad8:	940c      	str	r4, [sp, #48]	; 0x30
 801bada:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801badc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bae0:	9c08      	ldr	r4, [sp, #32]
 801bae2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801bae6:	fb08 fc0c 	mul.w	ip, r8, ip
 801baea:	fb02 cc0e 	mla	ip, r2, lr, ip
 801baee:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801baf2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801baf4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801baf8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bafc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bafe:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bb02:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801bb06:	fb08 f80e 	mul.w	r8, r8, lr
 801bb0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bb0e:	fb02 8303 	mla	r3, r2, r3, r8
 801bb12:	9a08      	ldr	r2, [sp, #32]
 801bb14:	f8b7 8000 	ldrh.w	r8, [r7]
 801bb18:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801bb1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bb1e:	fb00 330a 	mla	r3, r0, sl, r3
 801bb22:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801bb26:	fb09 3900 	mla	r9, r9, r0, r3
 801bb2a:	43c9      	mvns	r1, r1
 801bb2c:	ea4f 2228 	mov.w	r2, r8, asr #8
 801bb30:	fa5f fe81 	uxtb.w	lr, r1
 801bb34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb38:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bb3c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801bb40:	fb02 f20e 	mul.w	r2, r2, lr
 801bb44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb48:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801bb4c:	ea4c 0c09 	orr.w	ip, ip, r9
 801bb50:	1c53      	adds	r3, r2, #1
 801bb52:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801bb56:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801bb5a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801bb5e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bb62:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bb66:	4a63      	ldr	r2, [pc, #396]	; (801bcf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801bb68:	fb00 f00e 	mul.w	r0, r0, lr
 801bb6c:	b2db      	uxtb	r3, r3
 801bb6e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801bb72:	1c43      	adds	r3, r0, #1
 801bb74:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bb78:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801bb7c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801bb80:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bb84:	b2c9      	uxtb	r1, r1
 801bb86:	00db      	lsls	r3, r3, #3
 801bb88:	fb01 f10e 	mul.w	r1, r1, lr
 801bb8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bb90:	4313      	orrs	r3, r2
 801bb92:	1c4a      	adds	r2, r1, #1
 801bb94:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bb98:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801bb9c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801bba0:	ea4c 0c03 	orr.w	ip, ip, r3
 801bba4:	f8a7 c000 	strh.w	ip, [r7]
 801bba8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bbaa:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bbac:	441a      	add	r2, r3
 801bbae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bbb0:	9225      	str	r2, [sp, #148]	; 0x94
 801bbb2:	441d      	add	r5, r3
 801bbb4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bbb6:	3b01      	subs	r3, #1
 801bbb8:	3702      	adds	r7, #2
 801bbba:	9317      	str	r3, [sp, #92]	; 0x5c
 801bbbc:	e699      	b.n	801b8f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bbbe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bbc0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bbc2:	441c      	add	r4, r3
 801bbc4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bbc6:	9425      	str	r4, [sp, #148]	; 0x94
 801bbc8:	441d      	add	r5, r3
 801bbca:	9b07      	ldr	r3, [sp, #28]
 801bbcc:	3b01      	subs	r3, #1
 801bbce:	9307      	str	r3, [sp, #28]
 801bbd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bbd2:	3302      	adds	r3, #2
 801bbd4:	930a      	str	r3, [sp, #40]	; 0x28
 801bbd6:	e66b      	b.n	801b8b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bbd8:	d024      	beq.n	801bc24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801bbda:	9b07      	ldr	r3, [sp, #28]
 801bbdc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801bbde:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bbe0:	3b01      	subs	r3, #1
 801bbe2:	fb00 4003 	mla	r0, r0, r3, r4
 801bbe6:	1400      	asrs	r0, r0, #16
 801bbe8:	f53f ae80 	bmi.w	801b8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bbec:	3901      	subs	r1, #1
 801bbee:	4288      	cmp	r0, r1
 801bbf0:	f6bf ae7c 	bge.w	801b8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bbf4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801bbf6:	fb01 5303 	mla	r3, r1, r3, r5
 801bbfa:	141b      	asrs	r3, r3, #16
 801bbfc:	f53f ae76 	bmi.w	801b8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bc00:	3a01      	subs	r2, #1
 801bc02:	4293      	cmp	r3, r2
 801bc04:	f6bf ae72 	bge.w	801b8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bc08:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801bc0c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801bc10:	f1bb 0f00 	cmp.w	fp, #0
 801bc14:	dc70      	bgt.n	801bcf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bc16:	9b07      	ldr	r3, [sp, #28]
 801bc18:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bc1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bc1e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bc22:	930a      	str	r3, [sp, #40]	; 0x28
 801bc24:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bc26:	2b00      	cmp	r3, #0
 801bc28:	f340 81ae 	ble.w	801bf88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bc2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bc30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bc34:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bc38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bc3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bc42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bc46:	eef0 6a62 	vmov.f32	s13, s5
 801bc4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bc4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bc52:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bc56:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801bc5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bc5e:	eef0 6a43 	vmov.f32	s13, s6
 801bc62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bc66:	ee12 2a90 	vmov	r2, s5
 801bc6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc6e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc72:	ee13 2a10 	vmov	r2, s6
 801bc76:	9327      	str	r3, [sp, #156]	; 0x9c
 801bc78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc7e:	9328      	str	r3, [sp, #160]	; 0xa0
 801bc80:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bc82:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bc84:	3b01      	subs	r3, #1
 801bc86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bc8a:	9316      	str	r3, [sp, #88]	; 0x58
 801bc8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc8e:	bf08      	it	eq
 801bc90:	4613      	moveq	r3, r2
 801bc92:	ee16 5a90 	vmov	r5, s13
 801bc96:	9307      	str	r3, [sp, #28]
 801bc98:	eeb0 3a67 	vmov.f32	s6, s15
 801bc9c:	eef0 2a47 	vmov.f32	s5, s14
 801bca0:	e5f8      	b.n	801b894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bca2:	2800      	cmp	r0, #0
 801bca4:	f43f ae6b 	beq.w	801b97e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bca8:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bcac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bcb0:	9108      	str	r1, [sp, #32]
 801bcb2:	0e09      	lsrs	r1, r1, #24
 801bcb4:	9110      	str	r1, [sp, #64]	; 0x40
 801bcb6:	e662      	b.n	801b97e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bcb8:	f113 0801 	adds.w	r8, r3, #1
 801bcbc:	f53f af74 	bmi.w	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bcc0:	4541      	cmp	r1, r8
 801bcc2:	f6ff af71 	blt.w	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bcc6:	f11c 0801 	adds.w	r8, ip, #1
 801bcca:	f53f af6d 	bmi.w	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bcce:	45c6      	cmp	lr, r8
 801bcd0:	f6ff af6a 	blt.w	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bcd4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801bcd8:	b209      	sxth	r1, r1
 801bcda:	fa0f f38e 	sxth.w	r3, lr
 801bcde:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801bce2:	9301      	str	r3, [sp, #4]
 801bce4:	9100      	str	r1, [sp, #0]
 801bce6:	4633      	mov	r3, r6
 801bce8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bcea:	9819      	ldr	r0, [sp, #100]	; 0x64
 801bcec:	4639      	mov	r1, r7
 801bcee:	f7ff fc7a 	bl	801b5e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801bcf2:	e759      	b.n	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bcf4:	fffff800 	.word	0xfffff800
 801bcf8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bcfa:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bcfc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bd00:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bd02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bd06:	1427      	asrs	r7, r4, #16
 801bd08:	142b      	asrs	r3, r5, #16
 801bd0a:	fb01 7303 	mla	r3, r1, r3, r7
 801bd0e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bd10:	18e7      	adds	r7, r4, r3
 801bd12:	5ce3      	ldrb	r3, [r4, r3]
 801bd14:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bd18:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bd1c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bd20:	2a00      	cmp	r2, #0
 801bd22:	f000 8127 	beq.w	801bf74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bd26:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bd2a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bd2e:	940d      	str	r4, [sp, #52]	; 0x34
 801bd30:	0e24      	lsrs	r4, r4, #24
 801bd32:	9414      	str	r4, [sp, #80]	; 0x50
 801bd34:	b170      	cbz	r0, 801bd54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bd36:	eb07 0e01 	add.w	lr, r7, r1
 801bd3a:	5c79      	ldrb	r1, [r7, r1]
 801bd3c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bd40:	9109      	str	r1, [sp, #36]	; 0x24
 801bd42:	0e09      	lsrs	r1, r1, #24
 801bd44:	9111      	str	r1, [sp, #68]	; 0x44
 801bd46:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bd4a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bd4e:	910e      	str	r1, [sp, #56]	; 0x38
 801bd50:	0e09      	lsrs	r1, r1, #24
 801bd52:	9115      	str	r1, [sp, #84]	; 0x54
 801bd54:	b292      	uxth	r2, r2
 801bd56:	b280      	uxth	r0, r0
 801bd58:	fb02 f800 	mul.w	r8, r2, r0
 801bd5c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bd60:	0112      	lsls	r2, r2, #4
 801bd62:	eba2 0e08 	sub.w	lr, r2, r8
 801bd66:	b280      	uxth	r0, r0
 801bd68:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801bd6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd6e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd70:	fa1f fe8e 	uxth.w	lr, lr
 801bd74:	1a09      	subs	r1, r1, r0
 801bd76:	b289      	uxth	r1, r1
 801bd78:	fb0e f202 	mul.w	r2, lr, r2
 801bd7c:	fb01 220c 	mla	r2, r1, ip, r2
 801bd80:	fb00 2204 	mla	r2, r0, r4, r2
 801bd84:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bd86:	fb08 2204 	mla	r2, r8, r4, r2
 801bd8a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bd8e:	2a00      	cmp	r2, #0
 801bd90:	f000 80e5 	beq.w	801bf5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bd94:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bd98:	d019      	beq.n	801bdce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bd9a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bd9e:	fb0c fa0a 	mul.w	sl, ip, sl
 801bda2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bda6:	fb0c fc03 	mul.w	ip, ip, r3
 801bdaa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bdae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bdb2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bdb6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bdba:	4453      	add	r3, sl
 801bdbc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bdc0:	0a1b      	lsrs	r3, r3, #8
 801bdc2:	0a3f      	lsrs	r7, r7, #8
 801bdc4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bdc8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bdcc:	433b      	orrs	r3, r7
 801bdce:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bdd0:	2cff      	cmp	r4, #255	; 0xff
 801bdd2:	d020      	beq.n	801be16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bdd4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bdd6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bdda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bddc:	4367      	muls	r7, r4
 801bdde:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bde0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bde4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bde6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bdea:	fb04 fa0a 	mul.w	sl, r4, sl
 801bdee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bdf2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bdf6:	44bc      	add	ip, r7
 801bdf8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bdfc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801be00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801be04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801be08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801be0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be10:	ea4c 040a 	orr.w	r4, ip, sl
 801be14:	940d      	str	r4, [sp, #52]	; 0x34
 801be16:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801be18:	2cff      	cmp	r4, #255	; 0xff
 801be1a:	d020      	beq.n	801be5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801be1c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801be1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801be22:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801be24:	4367      	muls	r7, r4
 801be26:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801be28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801be2c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801be2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801be32:	fb04 fa0a 	mul.w	sl, r4, sl
 801be36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801be3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801be3e:	44bc      	add	ip, r7
 801be40:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801be44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801be48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801be4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801be50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801be54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be58:	ea4c 040a 	orr.w	r4, ip, sl
 801be5c:	9409      	str	r4, [sp, #36]	; 0x24
 801be5e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801be60:	2cff      	cmp	r4, #255	; 0xff
 801be62:	d020      	beq.n	801bea6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801be64:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801be66:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801be6a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801be6c:	4367      	muls	r7, r4
 801be6e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801be70:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801be74:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801be76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801be7a:	fb04 fa0a 	mul.w	sl, r4, sl
 801be7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801be82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801be86:	44bc      	add	ip, r7
 801be88:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801be8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801be90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801be94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801be98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801be9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bea0:	ea4c 040a 	orr.w	r4, ip, sl
 801bea4:	940e      	str	r4, [sp, #56]	; 0x38
 801bea6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bea8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801beac:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801beae:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801beb2:	fb0e f707 	mul.w	r7, lr, r7
 801beb6:	fb01 770c 	mla	r7, r1, ip, r7
 801beba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bebe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bec0:	fb00 770c 	mla	r7, r0, ip, r7
 801bec4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bec8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801beca:	fb08 770c 	mla	r7, r8, ip, r7
 801bece:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bed2:	fb0e fe0c 	mul.w	lr, lr, ip
 801bed6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801beda:	fb01 e303 	mla	r3, r1, r3, lr
 801bede:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bee0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bee4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bee6:	fb00 330a 	mla	r3, r0, sl, r3
 801beea:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801beee:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bef2:	f8b9 3000 	ldrh.w	r3, [r9]
 801bef6:	43d2      	mvns	r2, r2
 801bef8:	1218      	asrs	r0, r3, #8
 801befa:	b2d2      	uxtb	r2, r2
 801befc:	10d9      	asrs	r1, r3, #3
 801befe:	0a3f      	lsrs	r7, r7, #8
 801bf00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bf08:	00db      	lsls	r3, r3, #3
 801bf0a:	4350      	muls	r0, r2
 801bf0c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bf10:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bf14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bf18:	b2db      	uxtb	r3, r3
 801bf1a:	ea47 070c 	orr.w	r7, r7, ip
 801bf1e:	4351      	muls	r1, r2
 801bf20:	4353      	muls	r3, r2
 801bf22:	1c42      	adds	r2, r0, #1
 801bf24:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bf28:	0c3a      	lsrs	r2, r7, #16
 801bf2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bf2e:	4a18      	ldr	r2, [pc, #96]	; (801bf90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bf30:	b2c0      	uxtb	r0, r0
 801bf32:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bf36:	1c4a      	adds	r2, r1, #1
 801bf38:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bf3c:	0a3a      	lsrs	r2, r7, #8
 801bf3e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bf42:	00c9      	lsls	r1, r1, #3
 801bf44:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bf48:	4301      	orrs	r1, r0
 801bf4a:	1c58      	adds	r0, r3, #1
 801bf4c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bf50:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bf54:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bf58:	4308      	orrs	r0, r1
 801bf5a:	f8a9 0000 	strh.w	r0, [r9]
 801bf5e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bf60:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bf62:	441a      	add	r2, r3
 801bf64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bf66:	9225      	str	r2, [sp, #148]	; 0x94
 801bf68:	f109 0902 	add.w	r9, r9, #2
 801bf6c:	441d      	add	r5, r3
 801bf6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bf72:	e64d      	b.n	801bc10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bf74:	2800      	cmp	r0, #0
 801bf76:	f43f aeed 	beq.w	801bd54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bf7a:	5c79      	ldrb	r1, [r7, r1]
 801bf7c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bf80:	9109      	str	r1, [sp, #36]	; 0x24
 801bf82:	0e09      	lsrs	r1, r1, #24
 801bf84:	9111      	str	r1, [sp, #68]	; 0x44
 801bf86:	e6e5      	b.n	801bd54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bf88:	b01b      	add	sp, #108	; 0x6c
 801bf8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf8e:	bf00      	nop
 801bf90:	fffff800 	.word	0xfffff800

0801bf94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bf94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf98:	b085      	sub	sp, #20
 801bf9a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801bf9e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bfa2:	9103      	str	r1, [sp, #12]
 801bfa4:	fb00 7406 	mla	r4, r0, r6, r7
 801bfa8:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bfac:	2800      	cmp	r0, #0
 801bfae:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bfb2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bfb6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bfba:	9501      	str	r5, [sp, #4]
 801bfbc:	eb03 0904 	add.w	r9, r3, r4
 801bfc0:	f2c0 8150 	blt.w	801c264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bfc4:	4583      	cmp	fp, r0
 801bfc6:	f340 814d 	ble.w	801c264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bfca:	2f00      	cmp	r7, #0
 801bfcc:	f2c0 8146 	blt.w	801c25c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bfd0:	42be      	cmp	r6, r7
 801bfd2:	f340 8143 	ble.w	801c25c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bfd6:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bfda:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bfde:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bfe2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bfe6:	4355      	muls	r5, r2
 801bfe8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bfec:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bff0:	fb0c f203 	mul.w	r2, ip, r3
 801bff4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bff8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801bffc:	441d      	add	r5, r3
 801bffe:	f102 0320 	add.w	r3, r2, #32
 801c002:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c006:	0a1b      	lsrs	r3, r3, #8
 801c008:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c00c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c010:	431c      	orrs	r4, r3
 801c012:	1c7b      	adds	r3, r7, #1
 801c014:	f100 812b 	bmi.w	801c26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c018:	429e      	cmp	r6, r3
 801c01a:	f340 8128 	ble.w	801c26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c01e:	2900      	cmp	r1, #0
 801c020:	f000 8128 	beq.w	801c274 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c024:	9a01      	ldr	r2, [sp, #4]
 801c026:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c02a:	8855      	ldrh	r5, [r2, #2]
 801c02c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c030:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c034:	fb08 f802 	mul.w	r8, r8, r2
 801c038:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c03c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c040:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c044:	435d      	muls	r5, r3
 801c046:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c04a:	44d0      	add	r8, sl
 801c04c:	f105 0a20 	add.w	sl, r5, #32
 801c050:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c054:	0a2d      	lsrs	r5, r5, #8
 801c056:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c05a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c05e:	432a      	orrs	r2, r5
 801c060:	3001      	adds	r0, #1
 801c062:	f100 810d 	bmi.w	801c280 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c066:	4583      	cmp	fp, r0
 801c068:	f340 810a 	ble.w	801c280 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c06c:	f1be 0f00 	cmp.w	lr, #0
 801c070:	f000 810b 	beq.w	801c28a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c074:	2f00      	cmp	r7, #0
 801c076:	f2c0 8100 	blt.w	801c27a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c07a:	42be      	cmp	r6, r7
 801c07c:	f340 80fd 	ble.w	801c27a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c080:	9801      	ldr	r0, [sp, #4]
 801c082:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c086:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c08a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c08e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c092:	fb0a fa00 	mul.w	sl, sl, r0
 801c096:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c09a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c09e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c0a2:	fb05 f808 	mul.w	r8, r5, r8
 801c0a6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c0aa:	4482      	add	sl, r0
 801c0ac:	f108 0020 	add.w	r0, r8, #32
 801c0b0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c0b4:	0a00      	lsrs	r0, r0, #8
 801c0b6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c0ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c0be:	ea4b 0b00 	orr.w	fp, fp, r0
 801c0c2:	3701      	adds	r7, #1
 801c0c4:	f100 80e6 	bmi.w	801c294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c0c8:	42be      	cmp	r6, r7
 801c0ca:	f340 80e3 	ble.w	801c294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c0ce:	2900      	cmp	r1, #0
 801c0d0:	f000 80e3 	beq.w	801c29a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c0d4:	3601      	adds	r6, #1
 801c0d6:	9801      	ldr	r0, [sp, #4]
 801c0d8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c0dc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c0e0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c0e4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c0e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c0ec:	fb09 f906 	mul.w	r9, r9, r6
 801c0f0:	fb07 f800 	mul.w	r8, r7, r0
 801c0f4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c0f8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c0fc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c100:	44d1      	add	r9, sl
 801c102:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c106:	f108 0020 	add.w	r0, r8, #32
 801c10a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c10e:	0a00      	lsrs	r0, r0, #8
 801c110:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c114:	4330      	orrs	r0, r6
 801c116:	b28e      	uxth	r6, r1
 801c118:	fa1f f98e 	uxth.w	r9, lr
 801c11c:	fb06 f809 	mul.w	r8, r6, r9
 801c120:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c124:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c128:	0136      	lsls	r6, r6, #4
 801c12a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c12e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c132:	9601      	str	r6, [sp, #4]
 801c134:	ea4a 0404 	orr.w	r4, sl, r4
 801c138:	fa1f f689 	uxth.w	r6, r9
 801c13c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c140:	fb11 f90e 	smulbb	r9, r1, lr
 801c144:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c148:	9602      	str	r6, [sp, #8]
 801c14a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c14e:	4626      	mov	r6, r4
 801c150:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c154:	f1ce 0410 	rsb	r4, lr, #16
 801c158:	1a64      	subs	r4, r4, r1
 801c15a:	ea4a 0202 	orr.w	r2, sl, r2
 801c15e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c162:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c166:	434a      	muls	r2, r1
 801c168:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c16c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c170:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c174:	fb04 2406 	mla	r4, r4, r6, r2
 801c178:	ea4a 0000 	orr.w	r0, sl, r0
 801c17c:	fb09 4200 	mla	r2, r9, r0, r4
 801c180:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c184:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c188:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c18c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c190:	9c01      	ldr	r4, [sp, #4]
 801c192:	9e02      	ldr	r6, [sp, #8]
 801c194:	9903      	ldr	r1, [sp, #12]
 801c196:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801c19a:	1ba4      	subs	r4, r4, r6
 801c19c:	9e01      	ldr	r6, [sp, #4]
 801c19e:	8808      	ldrh	r0, [r1, #0]
 801c1a0:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801c1a4:	eba6 0608 	sub.w	r6, r6, r8
 801c1a8:	b2b6      	uxth	r6, r6
 801c1aa:	b2a4      	uxth	r4, r4
 801c1ac:	4373      	muls	r3, r6
 801c1ae:	fb0c 3304 	mla	r3, ip, r4, r3
 801c1b2:	9c02      	ldr	r4, [sp, #8]
 801c1b4:	fb04 3505 	mla	r5, r4, r5, r3
 801c1b8:	fb08 5707 	mla	r7, r8, r7, r5
 801c1bc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c1c0:	b289      	uxth	r1, r1
 801c1c2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c1c6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c1ca:	434f      	muls	r7, r1
 801c1cc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c1d0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c1d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c1d8:	1c7b      	adds	r3, r7, #1
 801c1da:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c1de:	ea42 0e0e 	orr.w	lr, r2, lr
 801c1e2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c1e6:	fa1f f28e 	uxth.w	r2, lr
 801c1ea:	1203      	asrs	r3, r0, #8
 801c1ec:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c1f0:	b2ff      	uxtb	r7, r7
 801c1f2:	1215      	asrs	r5, r2, #8
 801c1f4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c1f8:	fb13 f307 	smulbb	r3, r3, r7
 801c1fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c200:	fb05 3501 	mla	r5, r5, r1, r3
 801c204:	10c3      	asrs	r3, r0, #3
 801c206:	10d4      	asrs	r4, r2, #3
 801c208:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c20c:	fb13 f307 	smulbb	r3, r3, r7
 801c210:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c214:	fb04 3401 	mla	r4, r4, r1, r3
 801c218:	00c3      	lsls	r3, r0, #3
 801c21a:	00d2      	lsls	r2, r2, #3
 801c21c:	b2db      	uxtb	r3, r3
 801c21e:	fb13 f307 	smulbb	r3, r3, r7
 801c222:	b2d2      	uxtb	r2, r2
 801c224:	fb02 3101 	mla	r1, r2, r1, r3
 801c228:	b2ad      	uxth	r5, r5
 801c22a:	b289      	uxth	r1, r1
 801c22c:	b2a4      	uxth	r4, r4
 801c22e:	1c6b      	adds	r3, r5, #1
 801c230:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c234:	1c62      	adds	r2, r4, #1
 801c236:	1c4b      	adds	r3, r1, #1
 801c238:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c23c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c240:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c244:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c248:	0964      	lsrs	r4, r4, #5
 801c24a:	432b      	orrs	r3, r5
 801c24c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c250:	9a03      	ldr	r2, [sp, #12]
 801c252:	4323      	orrs	r3, r4
 801c254:	8013      	strh	r3, [r2, #0]
 801c256:	b005      	add	sp, #20
 801c258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c25c:	f04f 0c00 	mov.w	ip, #0
 801c260:	4664      	mov	r4, ip
 801c262:	e6d6      	b.n	801c012 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c264:	2300      	movs	r3, #0
 801c266:	469c      	mov	ip, r3
 801c268:	461a      	mov	r2, r3
 801c26a:	461c      	mov	r4, r3
 801c26c:	e6f8      	b.n	801c060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c26e:	2300      	movs	r3, #0
 801c270:	461a      	mov	r2, r3
 801c272:	e6f5      	b.n	801c060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c274:	460b      	mov	r3, r1
 801c276:	460a      	mov	r2, r1
 801c278:	e6f2      	b.n	801c060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c27a:	2500      	movs	r5, #0
 801c27c:	46ab      	mov	fp, r5
 801c27e:	e720      	b.n	801c0c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c280:	2700      	movs	r7, #0
 801c282:	463d      	mov	r5, r7
 801c284:	4638      	mov	r0, r7
 801c286:	46bb      	mov	fp, r7
 801c288:	e745      	b.n	801c116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c28a:	4677      	mov	r7, lr
 801c28c:	4675      	mov	r5, lr
 801c28e:	4670      	mov	r0, lr
 801c290:	46f3      	mov	fp, lr
 801c292:	e740      	b.n	801c116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c294:	2700      	movs	r7, #0
 801c296:	4638      	mov	r0, r7
 801c298:	e73d      	b.n	801c116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c29a:	460f      	mov	r7, r1
 801c29c:	4608      	mov	r0, r1
 801c29e:	e73a      	b.n	801c116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2a4:	b097      	sub	sp, #92	; 0x5c
 801c2a6:	9214      	str	r2, [sp, #80]	; 0x50
 801c2a8:	9308      	str	r3, [sp, #32]
 801c2aa:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c2ac:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c2b0:	9312      	str	r3, [sp, #72]	; 0x48
 801c2b2:	9111      	str	r1, [sp, #68]	; 0x44
 801c2b4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c2b8:	9015      	str	r0, [sp, #84]	; 0x54
 801c2ba:	6850      	ldr	r0, [r2, #4]
 801c2bc:	6812      	ldr	r2, [r2, #0]
 801c2be:	fb00 1303 	mla	r3, r0, r3, r1
 801c2c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c2c6:	9309      	str	r3, [sp, #36]	; 0x24
 801c2c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c2ca:	681b      	ldr	r3, [r3, #0]
 801c2cc:	930b      	str	r3, [sp, #44]	; 0x2c
 801c2ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c2d0:	685b      	ldr	r3, [r3, #4]
 801c2d2:	930c      	str	r3, [sp, #48]	; 0x30
 801c2d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c2d8:	930a      	str	r3, [sp, #40]	; 0x28
 801c2da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c2dc:	2b00      	cmp	r3, #0
 801c2de:	dc03      	bgt.n	801c2e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c2e0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c2e2:	2b00      	cmp	r3, #0
 801c2e4:	f340 83cb 	ble.w	801ca7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c2e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c2ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c2ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c2f2:	1e48      	subs	r0, r1, #1
 801c2f4:	1e55      	subs	r5, r2, #1
 801c2f6:	9b08      	ldr	r3, [sp, #32]
 801c2f8:	2b00      	cmp	r3, #0
 801c2fa:	f340 81a3 	ble.w	801c644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c2fe:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c300:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c302:	1436      	asrs	r6, r6, #16
 801c304:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c308:	d406      	bmi.n	801c318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c30a:	4286      	cmp	r6, r0
 801c30c:	da04      	bge.n	801c318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c30e:	2b00      	cmp	r3, #0
 801c310:	db02      	blt.n	801c318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c312:	42ab      	cmp	r3, r5
 801c314:	f2c0 8197 	blt.w	801c646 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c318:	3601      	adds	r6, #1
 801c31a:	f100 8184 	bmi.w	801c626 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c31e:	42b1      	cmp	r1, r6
 801c320:	f2c0 8181 	blt.w	801c626 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c324:	3301      	adds	r3, #1
 801c326:	f100 817e 	bmi.w	801c626 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c32a:	429a      	cmp	r2, r3
 801c32c:	f2c0 817b 	blt.w	801c626 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c330:	9b08      	ldr	r3, [sp, #32]
 801c332:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c334:	9313      	str	r3, [sp, #76]	; 0x4c
 801c336:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c33a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c33c:	2b00      	cmp	r3, #0
 801c33e:	f340 81a4 	ble.w	801c68a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c342:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c344:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c346:	1418      	asrs	r0, r3, #16
 801c348:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c34a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c34e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c350:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c354:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c356:	142d      	asrs	r5, r5, #16
 801c358:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c35c:	f100 81f8 	bmi.w	801c750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c360:	f102 3eff 	add.w	lr, r2, #4294967295
 801c364:	4575      	cmp	r5, lr
 801c366:	f280 81f3 	bge.w	801c750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c36a:	2800      	cmp	r0, #0
 801c36c:	f2c0 81f0 	blt.w	801c750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c370:	f103 3eff 	add.w	lr, r3, #4294967295
 801c374:	4570      	cmp	r0, lr
 801c376:	f280 81eb 	bge.w	801c750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c37a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c37c:	b212      	sxth	r2, r2
 801c37e:	fb00 5002 	mla	r0, r0, r2, r5
 801c382:	fa1f fe81 	uxth.w	lr, r1
 801c386:	eb03 0a00 	add.w	sl, r3, r0
 801c38a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c38e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c392:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c396:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c39a:	b29b      	uxth	r3, r3
 801c39c:	f1bc 0f00 	cmp.w	ip, #0
 801c3a0:	f000 81b9 	beq.w	801c716 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c3a4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c3a8:	940d      	str	r4, [sp, #52]	; 0x34
 801c3aa:	eb0a 0b02 	add.w	fp, sl, r2
 801c3ae:	fa1f fa8c 	uxth.w	sl, ip
 801c3b2:	fb0a fe0e 	mul.w	lr, sl, lr
 801c3b6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c3ba:	fa1f fa8a 	uxth.w	sl, sl
 801c3be:	eba5 050e 	sub.w	r5, r5, lr
 801c3c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c3c6:	940e      	str	r4, [sp, #56]	; 0x38
 801c3c8:	eba3 030a 	sub.w	r3, r3, sl
 801c3cc:	b2ad      	uxth	r5, r5
 801c3ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c3d0:	b29b      	uxth	r3, r3
 801c3d2:	fb08 f505 	mul.w	r5, r8, r5
 801c3d6:	fb09 5303 	mla	r3, r9, r3, r5
 801c3da:	fb0a 3304 	mla	r3, sl, r4, r3
 801c3de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c3e0:	fb0e 3304 	mla	r3, lr, r4, r3
 801c3e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c3e8:	2b00      	cmp	r3, #0
 801c3ea:	f000 810f 	beq.w	801c60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c3ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c3f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c3f4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c3f8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c3fc:	f000 8190 	beq.w	801c720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c400:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c404:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c408:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c40c:	fb09 f000 	mul.w	r0, r9, r0
 801c410:	fb0a fe0e 	mul.w	lr, sl, lr
 801c414:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c418:	f100 0b20 	add.w	fp, r0, #32
 801c41c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c420:	44ce      	add	lr, r9
 801c422:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c426:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c42a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c42e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c432:	ea4e 0909 	orr.w	r9, lr, r9
 801c436:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c43a:	8868      	ldrh	r0, [r5, #2]
 801c43c:	d019      	beq.n	801c472 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c43e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c442:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c446:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c44a:	fb08 f800 	mul.w	r8, r8, r0
 801c44e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c452:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c456:	f108 0b20 	add.w	fp, r8, #32
 801c45a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c45e:	4486      	add	lr, r0
 801c460:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c464:	0a00      	lsrs	r0, r0, #8
 801c466:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c46a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c46e:	ea4e 0000 	orr.w	r0, lr, r0
 801c472:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c476:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c47a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c47e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c482:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c486:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c48a:	ea4e 0909 	orr.w	r9, lr, r9
 801c48e:	ea4a 0000 	orr.w	r0, sl, r0
 801c492:	f1bc 0f00 	cmp.w	ip, #0
 801c496:	f000 8145 	beq.w	801c724 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c49a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c49e:	3a01      	subs	r2, #1
 801c4a0:	0052      	lsls	r2, r2, #1
 801c4a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c4a4:	3202      	adds	r2, #2
 801c4a6:	2cff      	cmp	r4, #255	; 0xff
 801c4a8:	eb05 0e02 	add.w	lr, r5, r2
 801c4ac:	5aaa      	ldrh	r2, [r5, r2]
 801c4ae:	d018      	beq.n	801c4e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c4b0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c4b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c4b8:	fb04 fa02 	mul.w	sl, r4, r2
 801c4bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c4c0:	fb08 f805 	mul.w	r8, r8, r5
 801c4c4:	f10a 0520 	add.w	r5, sl, #32
 801c4c8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c4cc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c4d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c4d4:	4442      	add	r2, r8
 801c4d6:	0a2d      	lsrs	r5, r5, #8
 801c4d8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c4dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c4e0:	432a      	orrs	r2, r5
 801c4e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c4e4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c4e8:	2cff      	cmp	r4, #255	; 0xff
 801c4ea:	d01a      	beq.n	801c522 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c4ec:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c4f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c4f4:	fb04 fa05 	mul.w	sl, r4, r5
 801c4f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c4fc:	fb08 f80e 	mul.w	r8, r8, lr
 801c500:	f10a 0e20 	add.w	lr, sl, #32
 801c504:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c508:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c50c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c510:	4445      	add	r5, r8
 801c512:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c516:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c51a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c51e:	ea45 050e 	orr.w	r5, r5, lr
 801c522:	fb1c fe01 	smulbb	lr, ip, r1
 801c526:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c52a:	f1cc 0810 	rsb	r8, ip, #16
 801c52e:	eba8 0801 	sub.w	r8, r8, r1
 801c532:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c536:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c53a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c53e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c542:	4341      	muls	r1, r0
 801c544:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c548:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c54c:	ea4a 0202 	orr.w	r2, sl, r2
 801c550:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c554:	fb09 1108 	mla	r1, r9, r8, r1
 801c558:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c55c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c560:	fb0c 1102 	mla	r1, ip, r2, r1
 801c564:	ea4b 0505 	orr.w	r5, fp, r5
 801c568:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c56c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c570:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c574:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c578:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c57c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c580:	fa1f f28e 	uxth.w	r2, lr
 801c584:	2bff      	cmp	r3, #255	; 0xff
 801c586:	d103      	bne.n	801c590 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c588:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c58a:	29ff      	cmp	r1, #255	; 0xff
 801c58c:	f000 80de 	beq.w	801c74c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c590:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c592:	8838      	ldrh	r0, [r7, #0]
 801c594:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c596:	434b      	muls	r3, r1
 801c598:	f103 0c01 	add.w	ip, r3, #1
 801c59c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c5a0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c5a4:	fa5f fc83 	uxtb.w	ip, r3
 801c5a8:	1203      	asrs	r3, r0, #8
 801c5aa:	1215      	asrs	r5, r2, #8
 801c5ac:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c5b0:	fb13 f30c 	smulbb	r3, r3, ip
 801c5b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c5b8:	fb05 3501 	mla	r5, r5, r1, r3
 801c5bc:	10c3      	asrs	r3, r0, #3
 801c5be:	10d1      	asrs	r1, r2, #3
 801c5c0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c5c4:	fb13 f30c 	smulbb	r3, r3, ip
 801c5c8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c5cc:	fb01 3104 	mla	r1, r1, r4, r3
 801c5d0:	00c3      	lsls	r3, r0, #3
 801c5d2:	00d2      	lsls	r2, r2, #3
 801c5d4:	b2db      	uxtb	r3, r3
 801c5d6:	b2d2      	uxtb	r2, r2
 801c5d8:	fb13 f30c 	smulbb	r3, r3, ip
 801c5dc:	b2ad      	uxth	r5, r5
 801c5de:	fb02 3304 	mla	r3, r2, r4, r3
 801c5e2:	b29a      	uxth	r2, r3
 801c5e4:	1c6b      	adds	r3, r5, #1
 801c5e6:	b289      	uxth	r1, r1
 801c5e8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c5ec:	1c53      	adds	r3, r2, #1
 801c5ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c5f2:	1c4a      	adds	r2, r1, #1
 801c5f4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c5f8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c5fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c600:	0949      	lsrs	r1, r1, #5
 801c602:	432b      	orrs	r3, r5
 801c604:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c608:	430b      	orrs	r3, r1
 801c60a:	803b      	strh	r3, [r7, #0]
 801c60c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c60e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c610:	4413      	add	r3, r2
 801c612:	9321      	str	r3, [sp, #132]	; 0x84
 801c614:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c616:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c618:	441a      	add	r2, r3
 801c61a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c61c:	9222      	str	r2, [sp, #136]	; 0x88
 801c61e:	3b01      	subs	r3, #1
 801c620:	3702      	adds	r7, #2
 801c622:	9313      	str	r3, [sp, #76]	; 0x4c
 801c624:	e689      	b.n	801c33a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c626:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c628:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c62a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c62c:	4433      	add	r3, r6
 801c62e:	9321      	str	r3, [sp, #132]	; 0x84
 801c630:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c632:	441c      	add	r4, r3
 801c634:	9b08      	ldr	r3, [sp, #32]
 801c636:	9422      	str	r4, [sp, #136]	; 0x88
 801c638:	3b01      	subs	r3, #1
 801c63a:	9308      	str	r3, [sp, #32]
 801c63c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c63e:	3302      	adds	r3, #2
 801c640:	9309      	str	r3, [sp, #36]	; 0x24
 801c642:	e658      	b.n	801c2f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c644:	d028      	beq.n	801c698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c646:	9b08      	ldr	r3, [sp, #32]
 801c648:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c64a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c64c:	3b01      	subs	r3, #1
 801c64e:	fb00 5003 	mla	r0, r0, r3, r5
 801c652:	1400      	asrs	r0, r0, #16
 801c654:	f53f ae6c 	bmi.w	801c330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c658:	3901      	subs	r1, #1
 801c65a:	4288      	cmp	r0, r1
 801c65c:	f6bf ae68 	bge.w	801c330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c660:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c662:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c664:	fb01 0303 	mla	r3, r1, r3, r0
 801c668:	141b      	asrs	r3, r3, #16
 801c66a:	f53f ae61 	bmi.w	801c330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c66e:	3a01      	subs	r2, #1
 801c670:	4293      	cmp	r3, r2
 801c672:	f6bf ae5d 	bge.w	801c330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c676:	9b08      	ldr	r3, [sp, #32]
 801c678:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c67c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c67e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c682:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c684:	2b00      	cmp	r3, #0
 801c686:	f300 8082 	bgt.w	801c78e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c68a:	9b08      	ldr	r3, [sp, #32]
 801c68c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c690:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c692:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c696:	9309      	str	r3, [sp, #36]	; 0x24
 801c698:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c69a:	2b00      	cmp	r3, #0
 801c69c:	f340 81ef 	ble.w	801ca7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c6a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c6a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c6a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c6ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c6ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c6b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c6b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c6ba:	eef0 6a62 	vmov.f32	s13, s5
 801c6be:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c6c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c6c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c6ca:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c6ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c6d2:	eef0 6a43 	vmov.f32	s13, s6
 801c6d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c6da:	ee12 2a90 	vmov	r2, s5
 801c6de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c6e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c6e6:	ee13 2a10 	vmov	r2, s6
 801c6ea:	9323      	str	r3, [sp, #140]	; 0x8c
 801c6ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c6ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801c6f2:	9324      	str	r3, [sp, #144]	; 0x90
 801c6f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c6f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c6f8:	3b01      	subs	r3, #1
 801c6fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c6fe:	9311      	str	r3, [sp, #68]	; 0x44
 801c700:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c702:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c706:	bf08      	it	eq
 801c708:	4613      	moveq	r3, r2
 801c70a:	9308      	str	r3, [sp, #32]
 801c70c:	eeb0 3a67 	vmov.f32	s6, s15
 801c710:	eef0 2a47 	vmov.f32	s5, s14
 801c714:	e5e1      	b.n	801c2da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c716:	fb08 f505 	mul.w	r5, r8, r5
 801c71a:	fb09 5303 	mla	r3, r9, r3, r5
 801c71e:	e661      	b.n	801c3e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c720:	4681      	mov	r9, r0
 801c722:	e688      	b.n	801c436 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c724:	f1c1 0210 	rsb	r2, r1, #16
 801c728:	4341      	muls	r1, r0
 801c72a:	fb09 1902 	mla	r9, r9, r2, r1
 801c72e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c732:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c736:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c73a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c73e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c742:	ea42 0909 	orr.w	r9, r2, r9
 801c746:	fa1f f289 	uxth.w	r2, r9
 801c74a:	e71b      	b.n	801c584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c74c:	803a      	strh	r2, [r7, #0]
 801c74e:	e75d      	b.n	801c60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c750:	f115 0e01 	adds.w	lr, r5, #1
 801c754:	f53f af5a 	bmi.w	801c60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c758:	4572      	cmp	r2, lr
 801c75a:	f6ff af57 	blt.w	801c60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c75e:	f110 0e01 	adds.w	lr, r0, #1
 801c762:	f53f af53 	bmi.w	801c60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c766:	4573      	cmp	r3, lr
 801c768:	f6ff af50 	blt.w	801c60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c76c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c76e:	9502      	str	r5, [sp, #8]
 801c770:	b21b      	sxth	r3, r3
 801c772:	b212      	sxth	r2, r2
 801c774:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c778:	9301      	str	r3, [sp, #4]
 801c77a:	9200      	str	r2, [sp, #0]
 801c77c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c780:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c784:	4639      	mov	r1, r7
 801c786:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c788:	f7ff fc04 	bl	801bf94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c78c:	e73e      	b.n	801c60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c78e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c790:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c794:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c796:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c79a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c79c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c7a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c7a2:	141f      	asrs	r7, r3, #16
 801c7a4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c7a6:	141b      	asrs	r3, r3, #16
 801c7a8:	fb01 3707 	mla	r7, r1, r7, r3
 801c7ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c7ae:	fa1f fc82 	uxth.w	ip, r2
 801c7b2:	eb03 0a07 	add.w	sl, r3, r7
 801c7b6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c7ba:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c7be:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c7c2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c7c6:	b29b      	uxth	r3, r3
 801c7c8:	2d00      	cmp	r5, #0
 801c7ca:	f000 813d 	beq.w	801ca48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c7ce:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c7d2:	940f      	str	r4, [sp, #60]	; 0x3c
 801c7d4:	eb0a 0b01 	add.w	fp, sl, r1
 801c7d8:	fa1f fa85 	uxth.w	sl, r5
 801c7dc:	fb0a fc0c 	mul.w	ip, sl, ip
 801c7e0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c7e4:	fa1f fa8a 	uxth.w	sl, sl
 801c7e8:	eba0 000c 	sub.w	r0, r0, ip
 801c7ec:	eba3 030a 	sub.w	r3, r3, sl
 801c7f0:	b280      	uxth	r0, r0
 801c7f2:	fb08 f000 	mul.w	r0, r8, r0
 801c7f6:	b29b      	uxth	r3, r3
 801c7f8:	fb09 0303 	mla	r3, r9, r3, r0
 801c7fc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c7fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c802:	9410      	str	r4, [sp, #64]	; 0x40
 801c804:	fb0a 3300 	mla	r3, sl, r0, r3
 801c808:	fb0c 3304 	mla	r3, ip, r4, r3
 801c80c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c810:	2b00      	cmp	r3, #0
 801c812:	f000 810b 	beq.w	801ca2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c816:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c818:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c81a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c81e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c822:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c826:	f000 8114 	beq.w	801ca52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c82a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c82e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c832:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c836:	fb09 f707 	mul.w	r7, r9, r7
 801c83a:	fb0a fc0c 	mul.w	ip, sl, ip
 801c83e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c842:	f107 0b20 	add.w	fp, r7, #32
 801c846:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c84a:	44cc      	add	ip, r9
 801c84c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c850:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c854:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c858:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c85c:	ea4c 0909 	orr.w	r9, ip, r9
 801c860:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c864:	8847      	ldrh	r7, [r0, #2]
 801c866:	d019      	beq.n	801c89c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c868:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c86c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c870:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c874:	fb08 f807 	mul.w	r8, r8, r7
 801c878:	fb0a fc0c 	mul.w	ip, sl, ip
 801c87c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c880:	f108 0b20 	add.w	fp, r8, #32
 801c884:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c888:	44bc      	add	ip, r7
 801c88a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c88e:	0a3f      	lsrs	r7, r7, #8
 801c890:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c894:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c898:	ea4c 0707 	orr.w	r7, ip, r7
 801c89c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c8a0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c8a4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c8a8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c8ac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c8b0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c8b4:	ea4c 0909 	orr.w	r9, ip, r9
 801c8b8:	ea4a 0707 	orr.w	r7, sl, r7
 801c8bc:	2d00      	cmp	r5, #0
 801c8be:	f000 80ca 	beq.w	801ca56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c8c2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c8c6:	3901      	subs	r1, #1
 801c8c8:	0049      	lsls	r1, r1, #1
 801c8ca:	3102      	adds	r1, #2
 801c8cc:	eb00 0c01 	add.w	ip, r0, r1
 801c8d0:	5a41      	ldrh	r1, [r0, r1]
 801c8d2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c8d4:	28ff      	cmp	r0, #255	; 0xff
 801c8d6:	d019      	beq.n	801c90c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c8d8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c8da:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c8de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c8e2:	fb04 fa01 	mul.w	sl, r4, r1
 801c8e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c8ea:	fb08 f800 	mul.w	r8, r8, r0
 801c8ee:	f10a 0020 	add.w	r0, sl, #32
 801c8f2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c8f6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c8fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c8fe:	4441      	add	r1, r8
 801c900:	0a00      	lsrs	r0, r0, #8
 801c902:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c906:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c90a:	4301      	orrs	r1, r0
 801c90c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c90e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c912:	2cff      	cmp	r4, #255	; 0xff
 801c914:	d01a      	beq.n	801c94c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c916:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c91a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c91e:	fb04 fa00 	mul.w	sl, r4, r0
 801c922:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c926:	fb08 f80c 	mul.w	r8, r8, ip
 801c92a:	f10a 0c20 	add.w	ip, sl, #32
 801c92e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c932:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c936:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c93a:	4440      	add	r0, r8
 801c93c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c940:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c944:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c948:	ea40 000c 	orr.w	r0, r0, ip
 801c94c:	fb15 fc02 	smulbb	ip, r5, r2
 801c950:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c954:	f1c5 0810 	rsb	r8, r5, #16
 801c958:	eba8 0802 	sub.w	r8, r8, r2
 801c95c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c960:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c964:	437a      	muls	r2, r7
 801c966:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c96a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c96e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c972:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c976:	fb09 2208 	mla	r2, r9, r8, r2
 801c97a:	ea4a 0101 	orr.w	r1, sl, r1
 801c97e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c982:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c986:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c98a:	fb05 2201 	mla	r2, r5, r1, r2
 801c98e:	ea4b 0000 	orr.w	r0, fp, r0
 801c992:	fb0c 2200 	mla	r2, ip, r0, r2
 801c996:	0d57      	lsrs	r7, r2, #21
 801c998:	0952      	lsrs	r2, r2, #5
 801c99a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c99e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c9a2:	433a      	orrs	r2, r7
 801c9a4:	2bff      	cmp	r3, #255	; 0xff
 801c9a6:	b292      	uxth	r2, r2
 801c9a8:	d102      	bne.n	801c9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c9aa:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c9ac:	29ff      	cmp	r1, #255	; 0xff
 801c9ae:	d063      	beq.n	801ca78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c9b0:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c9b2:	f8be 1000 	ldrh.w	r1, [lr]
 801c9b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c9b8:	4343      	muls	r3, r0
 801c9ba:	1c58      	adds	r0, r3, #1
 801c9bc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c9c0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c9c4:	1208      	asrs	r0, r1, #8
 801c9c6:	b2db      	uxtb	r3, r3
 801c9c8:	1215      	asrs	r5, r2, #8
 801c9ca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c9ce:	fb10 f003 	smulbb	r0, r0, r3
 801c9d2:	10cf      	asrs	r7, r1, #3
 801c9d4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c9d8:	00c9      	lsls	r1, r1, #3
 801c9da:	fb05 0504 	mla	r5, r5, r4, r0
 801c9de:	b2c9      	uxtb	r1, r1
 801c9e0:	10d0      	asrs	r0, r2, #3
 801c9e2:	00d2      	lsls	r2, r2, #3
 801c9e4:	fb11 f103 	smulbb	r1, r1, r3
 801c9e8:	b2d2      	uxtb	r2, r2
 801c9ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c9ee:	fb02 1204 	mla	r2, r2, r4, r1
 801c9f2:	fb17 f703 	smulbb	r7, r7, r3
 801c9f6:	b2ad      	uxth	r5, r5
 801c9f8:	b292      	uxth	r2, r2
 801c9fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c9fe:	fb00 7004 	mla	r0, r0, r4, r7
 801ca02:	1c6b      	adds	r3, r5, #1
 801ca04:	1c57      	adds	r7, r2, #1
 801ca06:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ca0a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ca0e:	b280      	uxth	r0, r0
 801ca10:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ca14:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ca18:	433d      	orrs	r5, r7
 801ca1a:	1c47      	adds	r7, r0, #1
 801ca1c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ca20:	097f      	lsrs	r7, r7, #5
 801ca22:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ca26:	433d      	orrs	r5, r7
 801ca28:	f8ae 5000 	strh.w	r5, [lr]
 801ca2c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ca2e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801ca30:	4413      	add	r3, r2
 801ca32:	9321      	str	r3, [sp, #132]	; 0x84
 801ca34:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801ca36:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ca38:	441a      	add	r2, r3
 801ca3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ca3c:	9222      	str	r2, [sp, #136]	; 0x88
 801ca3e:	3b01      	subs	r3, #1
 801ca40:	f10e 0e02 	add.w	lr, lr, #2
 801ca44:	9313      	str	r3, [sp, #76]	; 0x4c
 801ca46:	e61c      	b.n	801c682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801ca48:	fb08 f000 	mul.w	r0, r8, r0
 801ca4c:	fb09 0303 	mla	r3, r9, r3, r0
 801ca50:	e6dc      	b.n	801c80c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801ca52:	46b9      	mov	r9, r7
 801ca54:	e704      	b.n	801c860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801ca56:	f1c2 0110 	rsb	r1, r2, #16
 801ca5a:	437a      	muls	r2, r7
 801ca5c:	fb09 2901 	mla	r9, r9, r1, r2
 801ca60:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ca64:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ca68:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801ca6c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ca70:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ca74:	4302      	orrs	r2, r0
 801ca76:	e795      	b.n	801c9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801ca78:	f8ae 2000 	strh.w	r2, [lr]
 801ca7c:	e7d6      	b.n	801ca2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801ca7e:	b017      	add	sp, #92	; 0x5c
 801ca80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ca84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ca84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca88:	b085      	sub	sp, #20
 801ca8a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ca8e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ca92:	9103      	str	r1, [sp, #12]
 801ca94:	fb00 7406 	mla	r4, r0, r6, r7
 801ca98:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801ca9c:	2800      	cmp	r0, #0
 801ca9e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801caa2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801caa6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801caaa:	9501      	str	r5, [sp, #4]
 801caac:	eb02 0904 	add.w	r9, r2, r4
 801cab0:	f2c0 8141 	blt.w	801cd36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cab4:	4583      	cmp	fp, r0
 801cab6:	f340 813e 	ble.w	801cd36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801caba:	2f00      	cmp	r7, #0
 801cabc:	f2c0 8137 	blt.w	801cd2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cac0:	42be      	cmp	r6, r7
 801cac2:	f340 8134 	ble.w	801cd2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cac6:	f812 c004 	ldrb.w	ip, [r2, r4]
 801caca:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801cace:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cad2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801cad6:	4355      	muls	r5, r2
 801cad8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cadc:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801cae0:	fb0c f203 	mul.w	r2, ip, r3
 801cae4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cae8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801caec:	441d      	add	r5, r3
 801caee:	f102 0320 	add.w	r3, r2, #32
 801caf2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801caf6:	0a1b      	lsrs	r3, r3, #8
 801caf8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cafc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cb00:	431c      	orrs	r4, r3
 801cb02:	1c7b      	adds	r3, r7, #1
 801cb04:	f100 811c 	bmi.w	801cd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cb08:	429e      	cmp	r6, r3
 801cb0a:	f340 8119 	ble.w	801cd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cb0e:	2900      	cmp	r1, #0
 801cb10:	f000 8119 	beq.w	801cd46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801cb14:	9a01      	ldr	r2, [sp, #4]
 801cb16:	f899 3001 	ldrb.w	r3, [r9, #1]
 801cb1a:	8855      	ldrh	r5, [r2, #2]
 801cb1c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cb20:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801cb24:	fb08 f802 	mul.w	r8, r8, r2
 801cb28:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb2c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801cb30:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801cb34:	435d      	muls	r5, r3
 801cb36:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cb3a:	44d0      	add	r8, sl
 801cb3c:	f105 0a20 	add.w	sl, r5, #32
 801cb40:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801cb44:	0a2d      	lsrs	r5, r5, #8
 801cb46:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801cb4a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb4e:	432a      	orrs	r2, r5
 801cb50:	3001      	adds	r0, #1
 801cb52:	f100 80fe 	bmi.w	801cd52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801cb56:	4583      	cmp	fp, r0
 801cb58:	f340 80fb 	ble.w	801cd52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801cb5c:	f1be 0f00 	cmp.w	lr, #0
 801cb60:	f000 80fc 	beq.w	801cd5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801cb64:	2f00      	cmp	r7, #0
 801cb66:	f2c0 80f1 	blt.w	801cd4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801cb6a:	42be      	cmp	r6, r7
 801cb6c:	f340 80ee 	ble.w	801cd4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801cb70:	9801      	ldr	r0, [sp, #4]
 801cb72:	f819 5006 	ldrb.w	r5, [r9, r6]
 801cb76:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801cb7a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cb7e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801cb82:	fb0a fa00 	mul.w	sl, sl, r0
 801cb86:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801cb8a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801cb8e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801cb92:	fb05 f808 	mul.w	r8, r5, r8
 801cb96:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801cb9a:	4482      	add	sl, r0
 801cb9c:	f108 0020 	add.w	r0, r8, #32
 801cba0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cba4:	0a00      	lsrs	r0, r0, #8
 801cba6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801cbaa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cbae:	ea4b 0b00 	orr.w	fp, fp, r0
 801cbb2:	3701      	adds	r7, #1
 801cbb4:	f100 80d7 	bmi.w	801cd66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801cbb8:	42be      	cmp	r6, r7
 801cbba:	f340 80d4 	ble.w	801cd66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801cbbe:	2900      	cmp	r1, #0
 801cbc0:	f000 80d4 	beq.w	801cd6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801cbc4:	3601      	adds	r6, #1
 801cbc6:	9801      	ldr	r0, [sp, #4]
 801cbc8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801cbcc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801cbd0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801cbd4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801cbd8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cbdc:	fb09 f906 	mul.w	r9, r9, r6
 801cbe0:	fb07 f800 	mul.w	r8, r7, r0
 801cbe4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801cbe8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801cbec:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801cbf0:	44d1      	add	r9, sl
 801cbf2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801cbf6:	f108 0020 	add.w	r0, r8, #32
 801cbfa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cbfe:	0a00      	lsrs	r0, r0, #8
 801cc00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cc04:	4330      	orrs	r0, r6
 801cc06:	b28e      	uxth	r6, r1
 801cc08:	fa1f f98e 	uxth.w	r9, lr
 801cc0c:	fb06 f809 	mul.w	r8, r6, r9
 801cc10:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801cc14:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801cc18:	0136      	lsls	r6, r6, #4
 801cc1a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cc1e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801cc22:	9601      	str	r6, [sp, #4]
 801cc24:	ea4a 0404 	orr.w	r4, sl, r4
 801cc28:	fa1f f689 	uxth.w	r6, r9
 801cc2c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cc30:	fb11 f90e 	smulbb	r9, r1, lr
 801cc34:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801cc38:	9602      	str	r6, [sp, #8]
 801cc3a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cc3e:	4626      	mov	r6, r4
 801cc40:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cc44:	f1ce 0410 	rsb	r4, lr, #16
 801cc48:	1a64      	subs	r4, r4, r1
 801cc4a:	ea4a 0202 	orr.w	r2, sl, r2
 801cc4e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801cc52:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cc56:	434a      	muls	r2, r1
 801cc58:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801cc5c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cc60:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cc64:	fb04 2406 	mla	r4, r4, r6, r2
 801cc68:	ea4a 0000 	orr.w	r0, sl, r0
 801cc6c:	fb09 4200 	mla	r2, r9, r0, r4
 801cc70:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801cc74:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801cc78:	9801      	ldr	r0, [sp, #4]
 801cc7a:	9903      	ldr	r1, [sp, #12]
 801cc7c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801cc80:	ea44 0b0b 	orr.w	fp, r4, fp
 801cc84:	9c02      	ldr	r4, [sp, #8]
 801cc86:	8809      	ldrh	r1, [r1, #0]
 801cc88:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801cc8c:	1b00      	subs	r0, r0, r4
 801cc8e:	9c01      	ldr	r4, [sp, #4]
 801cc90:	eba4 0608 	sub.w	r6, r4, r8
 801cc94:	b2b6      	uxth	r6, r6
 801cc96:	b280      	uxth	r0, r0
 801cc98:	4373      	muls	r3, r6
 801cc9a:	fb0c 3300 	mla	r3, ip, r0, r3
 801cc9e:	9802      	ldr	r0, [sp, #8]
 801cca0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801cca4:	fb00 3505 	mla	r5, r0, r5, r3
 801cca8:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ccac:	fb08 5707 	mla	r7, r8, r7, r5
 801ccb0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ccb4:	120b      	asrs	r3, r1, #8
 801ccb6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ccba:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ccbe:	b2ff      	uxtb	r7, r7
 801ccc0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ccc4:	10c8      	asrs	r0, r1, #3
 801ccc6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ccca:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ccce:	00c9      	lsls	r1, r1, #3
 801ccd0:	437b      	muls	r3, r7
 801ccd2:	ea42 0e0e 	orr.w	lr, r2, lr
 801ccd6:	b2c9      	uxtb	r1, r1
 801ccd8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ccdc:	fa1f f28e 	uxth.w	r2, lr
 801cce0:	4378      	muls	r0, r7
 801cce2:	434f      	muls	r7, r1
 801cce4:	1c59      	adds	r1, r3, #1
 801cce6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ccea:	1213      	asrs	r3, r2, #8
 801ccec:	f023 0307 	bic.w	r3, r3, #7
 801ccf0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ccf4:	1c41      	adds	r1, r0, #1
 801ccf6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ccfa:	10d1      	asrs	r1, r2, #3
 801ccfc:	f021 0103 	bic.w	r1, r1, #3
 801cd00:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cd04:	021b      	lsls	r3, r3, #8
 801cd06:	00c9      	lsls	r1, r1, #3
 801cd08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cd0c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cd10:	430b      	orrs	r3, r1
 801cd12:	1c79      	adds	r1, r7, #1
 801cd14:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cd18:	00d2      	lsls	r2, r2, #3
 801cd1a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cd1e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cd22:	431a      	orrs	r2, r3
 801cd24:	9b03      	ldr	r3, [sp, #12]
 801cd26:	801a      	strh	r2, [r3, #0]
 801cd28:	b005      	add	sp, #20
 801cd2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd2e:	f04f 0c00 	mov.w	ip, #0
 801cd32:	4664      	mov	r4, ip
 801cd34:	e6e5      	b.n	801cb02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cd36:	2300      	movs	r3, #0
 801cd38:	469c      	mov	ip, r3
 801cd3a:	461a      	mov	r2, r3
 801cd3c:	461c      	mov	r4, r3
 801cd3e:	e707      	b.n	801cb50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cd40:	2300      	movs	r3, #0
 801cd42:	461a      	mov	r2, r3
 801cd44:	e704      	b.n	801cb50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cd46:	460b      	mov	r3, r1
 801cd48:	460a      	mov	r2, r1
 801cd4a:	e701      	b.n	801cb50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cd4c:	2500      	movs	r5, #0
 801cd4e:	46ab      	mov	fp, r5
 801cd50:	e72f      	b.n	801cbb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cd52:	2700      	movs	r7, #0
 801cd54:	463d      	mov	r5, r7
 801cd56:	4638      	mov	r0, r7
 801cd58:	46bb      	mov	fp, r7
 801cd5a:	e754      	b.n	801cc06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cd5c:	4677      	mov	r7, lr
 801cd5e:	4675      	mov	r5, lr
 801cd60:	4670      	mov	r0, lr
 801cd62:	46f3      	mov	fp, lr
 801cd64:	e74f      	b.n	801cc06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cd66:	2700      	movs	r7, #0
 801cd68:	4638      	mov	r0, r7
 801cd6a:	e74c      	b.n	801cc06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cd6c:	460f      	mov	r7, r1
 801cd6e:	4608      	mov	r0, r1
 801cd70:	e749      	b.n	801cc06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cd74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cd74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd78:	b093      	sub	sp, #76	; 0x4c
 801cd7a:	9210      	str	r2, [sp, #64]	; 0x40
 801cd7c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cd7e:	910e      	str	r1, [sp, #56]	; 0x38
 801cd80:	9306      	str	r3, [sp, #24]
 801cd82:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cd86:	9011      	str	r0, [sp, #68]	; 0x44
 801cd88:	6850      	ldr	r0, [r2, #4]
 801cd8a:	6812      	ldr	r2, [r2, #0]
 801cd8c:	fb00 1303 	mla	r3, r0, r3, r1
 801cd90:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cd94:	9307      	str	r3, [sp, #28]
 801cd96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cd98:	681b      	ldr	r3, [r3, #0]
 801cd9a:	9308      	str	r3, [sp, #32]
 801cd9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cd9e:	685b      	ldr	r3, [r3, #4]
 801cda0:	9309      	str	r3, [sp, #36]	; 0x24
 801cda2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cda4:	2b00      	cmp	r3, #0
 801cda6:	dc03      	bgt.n	801cdb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cda8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cdaa:	2b00      	cmp	r3, #0
 801cdac:	f340 83b4 	ble.w	801d518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cdb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cdb2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cdb6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cdba:	1e48      	subs	r0, r1, #1
 801cdbc:	1e55      	subs	r5, r2, #1
 801cdbe:	9b06      	ldr	r3, [sp, #24]
 801cdc0:	2b00      	cmp	r3, #0
 801cdc2:	f340 8163 	ble.w	801d08c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801cdc6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801cdc8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cdca:	1436      	asrs	r6, r6, #16
 801cdcc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cdd0:	d406      	bmi.n	801cde0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cdd2:	4286      	cmp	r6, r0
 801cdd4:	da04      	bge.n	801cde0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cdd6:	2b00      	cmp	r3, #0
 801cdd8:	db02      	blt.n	801cde0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cdda:	42ab      	cmp	r3, r5
 801cddc:	f2c0 8157 	blt.w	801d08e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801cde0:	3601      	adds	r6, #1
 801cde2:	f100 8144 	bmi.w	801d06e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cde6:	42b1      	cmp	r1, r6
 801cde8:	f2c0 8141 	blt.w	801d06e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cdec:	3301      	adds	r3, #1
 801cdee:	f100 813e 	bmi.w	801d06e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cdf2:	429a      	cmp	r2, r3
 801cdf4:	f2c0 813b 	blt.w	801d06e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cdf8:	9b06      	ldr	r3, [sp, #24]
 801cdfa:	9f07      	ldr	r7, [sp, #28]
 801cdfc:	930f      	str	r3, [sp, #60]	; 0x3c
 801cdfe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ce02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ce04:	2b00      	cmp	r3, #0
 801ce06:	f340 8164 	ble.w	801d0d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801ce0a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ce0c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ce0e:	1418      	asrs	r0, r3, #16
 801ce10:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce12:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ce16:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ce18:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ce1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ce1e:	142d      	asrs	r5, r5, #16
 801ce20:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ce24:	f100 81ee 	bmi.w	801d204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ce28:	f102 3eff 	add.w	lr, r2, #4294967295
 801ce2c:	4575      	cmp	r5, lr
 801ce2e:	f280 81e9 	bge.w	801d204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ce32:	2800      	cmp	r0, #0
 801ce34:	f2c0 81e6 	blt.w	801d204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ce38:	f103 3eff 	add.w	lr, r3, #4294967295
 801ce3c:	4570      	cmp	r0, lr
 801ce3e:	f280 81e1 	bge.w	801d204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ce42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ce44:	b212      	sxth	r2, r2
 801ce46:	fb00 5002 	mla	r0, r0, r2, r5
 801ce4a:	fa1f fe81 	uxth.w	lr, r1
 801ce4e:	eb03 0a00 	add.w	sl, r3, r0
 801ce52:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ce56:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ce5a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ce5e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801ce62:	b29b      	uxth	r3, r3
 801ce64:	f1bc 0f00 	cmp.w	ip, #0
 801ce68:	f000 8179 	beq.w	801d15e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801ce6c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ce70:	940a      	str	r4, [sp, #40]	; 0x28
 801ce72:	eb0a 0b02 	add.w	fp, sl, r2
 801ce76:	fa1f fa8c 	uxth.w	sl, ip
 801ce7a:	fb0a fe0e 	mul.w	lr, sl, lr
 801ce7e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ce82:	fa1f fa8a 	uxth.w	sl, sl
 801ce86:	eba5 050e 	sub.w	r5, r5, lr
 801ce8a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ce8e:	940b      	str	r4, [sp, #44]	; 0x2c
 801ce90:	eba3 030a 	sub.w	r3, r3, sl
 801ce94:	b2ad      	uxth	r5, r5
 801ce96:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ce98:	b29b      	uxth	r3, r3
 801ce9a:	fb08 f505 	mul.w	r5, r8, r5
 801ce9e:	fb09 5303 	mla	r3, r9, r3, r5
 801cea2:	fb0a 3304 	mla	r3, sl, r4, r3
 801cea6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cea8:	fb0e 3304 	mla	r3, lr, r4, r3
 801ceac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ceb0:	2b00      	cmp	r3, #0
 801ceb2:	f000 80cf 	beq.w	801d054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ceb6:	9c08      	ldr	r4, [sp, #32]
 801ceb8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cebc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cec0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cec4:	f000 8150 	beq.w	801d168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801cec8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cecc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ced0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ced4:	fb09 f000 	mul.w	r0, r9, r0
 801ced8:	fb0a fe0e 	mul.w	lr, sl, lr
 801cedc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cee0:	f100 0b20 	add.w	fp, r0, #32
 801cee4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cee8:	44ce      	add	lr, r9
 801ceea:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ceee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cef2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cef6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cefa:	ea4e 0909 	orr.w	r9, lr, r9
 801cefe:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cf02:	8868      	ldrh	r0, [r5, #2]
 801cf04:	d019      	beq.n	801cf3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cf06:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cf0a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cf0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf12:	fb08 f800 	mul.w	r8, r8, r0
 801cf16:	fb0a fe0e 	mul.w	lr, sl, lr
 801cf1a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cf1e:	f108 0b20 	add.w	fp, r8, #32
 801cf22:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cf26:	4486      	add	lr, r0
 801cf28:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cf2c:	0a00      	lsrs	r0, r0, #8
 801cf2e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cf32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf36:	ea4e 0000 	orr.w	r0, lr, r0
 801cf3a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cf3e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cf42:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cf46:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cf4a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cf4e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cf52:	ea4e 0909 	orr.w	r9, lr, r9
 801cf56:	ea4a 0000 	orr.w	r0, sl, r0
 801cf5a:	f1bc 0f00 	cmp.w	ip, #0
 801cf5e:	f000 8105 	beq.w	801d16c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cf62:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cf66:	3a01      	subs	r2, #1
 801cf68:	0052      	lsls	r2, r2, #1
 801cf6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cf6c:	3202      	adds	r2, #2
 801cf6e:	2cff      	cmp	r4, #255	; 0xff
 801cf70:	eb05 0e02 	add.w	lr, r5, r2
 801cf74:	5aaa      	ldrh	r2, [r5, r2]
 801cf76:	d018      	beq.n	801cfaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801cf78:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801cf7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf80:	fb04 fa02 	mul.w	sl, r4, r2
 801cf84:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cf88:	fb08 f805 	mul.w	r8, r8, r5
 801cf8c:	f10a 0520 	add.w	r5, sl, #32
 801cf90:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cf94:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cf98:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cf9c:	4442      	add	r2, r8
 801cf9e:	0a2d      	lsrs	r5, r5, #8
 801cfa0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cfa4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cfa8:	432a      	orrs	r2, r5
 801cfaa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cfac:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cfb0:	2cff      	cmp	r4, #255	; 0xff
 801cfb2:	d01a      	beq.n	801cfea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cfb4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cfb8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cfbc:	fb04 fa05 	mul.w	sl, r4, r5
 801cfc0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cfc4:	fb08 f80e 	mul.w	r8, r8, lr
 801cfc8:	f10a 0e20 	add.w	lr, sl, #32
 801cfcc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cfd0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cfd4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cfd8:	4445      	add	r5, r8
 801cfda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cfde:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cfe2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cfe6:	ea45 050e 	orr.w	r5, r5, lr
 801cfea:	fb1c fe01 	smulbb	lr, ip, r1
 801cfee:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cff2:	f1cc 0810 	rsb	r8, ip, #16
 801cff6:	eba8 0801 	sub.w	r8, r8, r1
 801cffa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cffe:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d002:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d006:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d00a:	4341      	muls	r1, r0
 801d00c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d010:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d014:	ea4a 0202 	orr.w	r2, sl, r2
 801d018:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d01c:	fb09 1108 	mla	r1, r9, r8, r1
 801d020:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d024:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d028:	fb0c 1102 	mla	r1, ip, r2, r1
 801d02c:	ea4b 0505 	orr.w	r5, fp, r5
 801d030:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d034:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d038:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d03c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d040:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d044:	ea42 0e0e 	orr.w	lr, r2, lr
 801d048:	fa1f f28e 	uxth.w	r2, lr
 801d04c:	2bff      	cmp	r3, #255	; 0xff
 801d04e:	f040 80a1 	bne.w	801d194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d052:	803a      	strh	r2, [r7, #0]
 801d054:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d056:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d058:	4413      	add	r3, r2
 801d05a:	931d      	str	r3, [sp, #116]	; 0x74
 801d05c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d05e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d060:	441a      	add	r2, r3
 801d062:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d064:	921e      	str	r2, [sp, #120]	; 0x78
 801d066:	3b01      	subs	r3, #1
 801d068:	3702      	adds	r7, #2
 801d06a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d06c:	e6c9      	b.n	801ce02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d06e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d070:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801d072:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801d074:	4433      	add	r3, r6
 801d076:	931d      	str	r3, [sp, #116]	; 0x74
 801d078:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d07a:	441c      	add	r4, r3
 801d07c:	9b06      	ldr	r3, [sp, #24]
 801d07e:	941e      	str	r4, [sp, #120]	; 0x78
 801d080:	3b01      	subs	r3, #1
 801d082:	9306      	str	r3, [sp, #24]
 801d084:	9b07      	ldr	r3, [sp, #28]
 801d086:	3302      	adds	r3, #2
 801d088:	9307      	str	r3, [sp, #28]
 801d08a:	e698      	b.n	801cdbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d08c:	d028      	beq.n	801d0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d08e:	9b06      	ldr	r3, [sp, #24]
 801d090:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d092:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801d094:	3b01      	subs	r3, #1
 801d096:	fb00 5003 	mla	r0, r0, r3, r5
 801d09a:	1400      	asrs	r0, r0, #16
 801d09c:	f53f aeac 	bmi.w	801cdf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d0a0:	3901      	subs	r1, #1
 801d0a2:	4288      	cmp	r0, r1
 801d0a4:	f6bf aea8 	bge.w	801cdf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d0a8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d0aa:	981e      	ldr	r0, [sp, #120]	; 0x78
 801d0ac:	fb01 0303 	mla	r3, r1, r3, r0
 801d0b0:	141b      	asrs	r3, r3, #16
 801d0b2:	f53f aea1 	bmi.w	801cdf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d0b6:	3a01      	subs	r2, #1
 801d0b8:	4293      	cmp	r3, r2
 801d0ba:	f6bf ae9d 	bge.w	801cdf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d0be:	9b06      	ldr	r3, [sp, #24]
 801d0c0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d0c4:	930f      	str	r3, [sp, #60]	; 0x3c
 801d0c6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d0ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d0cc:	2b00      	cmp	r3, #0
 801d0ce:	f300 80b6 	bgt.w	801d23e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d0d2:	9b06      	ldr	r3, [sp, #24]
 801d0d4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d0d8:	9b07      	ldr	r3, [sp, #28]
 801d0da:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d0de:	9307      	str	r3, [sp, #28]
 801d0e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d0e2:	2b00      	cmp	r3, #0
 801d0e4:	f340 8218 	ble.w	801d518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d0e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d0ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d0f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d0f4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d0f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d0fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d0fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d102:	eef0 6a62 	vmov.f32	s13, s5
 801d106:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d10a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d10e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d112:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801d116:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d11a:	eef0 6a43 	vmov.f32	s13, s6
 801d11e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d122:	ee12 2a90 	vmov	r2, s5
 801d126:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d12a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d12e:	ee13 2a10 	vmov	r2, s6
 801d132:	931f      	str	r3, [sp, #124]	; 0x7c
 801d134:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d136:	fb92 f3f3 	sdiv	r3, r2, r3
 801d13a:	9320      	str	r3, [sp, #128]	; 0x80
 801d13c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d13e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d140:	3b01      	subs	r3, #1
 801d142:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d146:	930e      	str	r3, [sp, #56]	; 0x38
 801d148:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d14a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801d14e:	bf08      	it	eq
 801d150:	4613      	moveq	r3, r2
 801d152:	9306      	str	r3, [sp, #24]
 801d154:	eeb0 3a67 	vmov.f32	s6, s15
 801d158:	eef0 2a47 	vmov.f32	s5, s14
 801d15c:	e621      	b.n	801cda2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d15e:	fb08 f505 	mul.w	r5, r8, r5
 801d162:	fb09 5303 	mla	r3, r9, r3, r5
 801d166:	e6a1      	b.n	801ceac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d168:	4681      	mov	r9, r0
 801d16a:	e6c8      	b.n	801cefe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d16c:	f1c1 0210 	rsb	r2, r1, #16
 801d170:	4341      	muls	r1, r0
 801d172:	fb09 1902 	mla	r9, r9, r2, r1
 801d176:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d17a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d17e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d182:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d186:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d18a:	ea42 0909 	orr.w	r9, r2, r9
 801d18e:	fa1f f289 	uxth.w	r2, r9
 801d192:	e75b      	b.n	801d04c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d194:	f8b7 c000 	ldrh.w	ip, [r7]
 801d198:	43db      	mvns	r3, r3
 801d19a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d19e:	fa5f fe83 	uxtb.w	lr, r3
 801d1a2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d1a6:	fb00 f00e 	mul.w	r0, r0, lr
 801d1aa:	1c41      	adds	r1, r0, #1
 801d1ac:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d1b0:	1211      	asrs	r1, r2, #8
 801d1b2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d1b6:	f021 0107 	bic.w	r1, r1, #7
 801d1ba:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d1be:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d1c2:	48d7      	ldr	r0, [pc, #860]	; (801d520 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d1c4:	fb05 f50e 	mul.w	r5, r5, lr
 801d1c8:	b2c9      	uxtb	r1, r1
 801d1ca:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d1ce:	1c69      	adds	r1, r5, #1
 801d1d0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d1d4:	10d1      	asrs	r1, r2, #3
 801d1d6:	f021 0103 	bic.w	r1, r1, #3
 801d1da:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d1de:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d1e2:	b2db      	uxtb	r3, r3
 801d1e4:	00c9      	lsls	r1, r1, #3
 801d1e6:	fb03 f30e 	mul.w	r3, r3, lr
 801d1ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d1ee:	4301      	orrs	r1, r0
 801d1f0:	1c58      	adds	r0, r3, #1
 801d1f2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d1f6:	00d2      	lsls	r2, r2, #3
 801d1f8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d1fc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d200:	430a      	orrs	r2, r1
 801d202:	e726      	b.n	801d052 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d204:	f115 0e01 	adds.w	lr, r5, #1
 801d208:	f53f af24 	bmi.w	801d054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d20c:	4572      	cmp	r2, lr
 801d20e:	f6ff af21 	blt.w	801d054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d212:	f110 0e01 	adds.w	lr, r0, #1
 801d216:	f53f af1d 	bmi.w	801d054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d21a:	4573      	cmp	r3, lr
 801d21c:	f6ff af1a 	blt.w	801d054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d220:	b21b      	sxth	r3, r3
 801d222:	b212      	sxth	r2, r2
 801d224:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d228:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d22c:	9301      	str	r3, [sp, #4]
 801d22e:	9200      	str	r2, [sp, #0]
 801d230:	4639      	mov	r1, r7
 801d232:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d236:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d238:	f7ff fc24 	bl	801ca84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d23c:	e70a      	b.n	801d054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d23e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d240:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d244:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d246:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d24a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d24c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d250:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d252:	141f      	asrs	r7, r3, #16
 801d254:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d256:	141b      	asrs	r3, r3, #16
 801d258:	fb01 3707 	mla	r7, r1, r7, r3
 801d25c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d25e:	fa1f fc82 	uxth.w	ip, r2
 801d262:	eb03 0a07 	add.w	sl, r3, r7
 801d266:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d26a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d26e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d272:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d276:	b29b      	uxth	r3, r3
 801d278:	2d00      	cmp	r5, #0
 801d27a:	f000 80fe 	beq.w	801d47a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d27e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d282:	940c      	str	r4, [sp, #48]	; 0x30
 801d284:	eb0a 0b01 	add.w	fp, sl, r1
 801d288:	fa1f fa85 	uxth.w	sl, r5
 801d28c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d290:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d294:	fa1f fa8a 	uxth.w	sl, sl
 801d298:	eba0 000c 	sub.w	r0, r0, ip
 801d29c:	eba3 030a 	sub.w	r3, r3, sl
 801d2a0:	b280      	uxth	r0, r0
 801d2a2:	fb08 f000 	mul.w	r0, r8, r0
 801d2a6:	b29b      	uxth	r3, r3
 801d2a8:	fb09 0303 	mla	r3, r9, r3, r0
 801d2ac:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d2ae:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d2b2:	940d      	str	r4, [sp, #52]	; 0x34
 801d2b4:	fb0a 3300 	mla	r3, sl, r0, r3
 801d2b8:	fb0c 3304 	mla	r3, ip, r4, r3
 801d2bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d2c0:	2b00      	cmp	r3, #0
 801d2c2:	f000 80cc 	beq.w	801d45e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d2c6:	9808      	ldr	r0, [sp, #32]
 801d2c8:	9c08      	ldr	r4, [sp, #32]
 801d2ca:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d2ce:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d2d2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d2d6:	f000 80d5 	beq.w	801d484 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d2da:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d2de:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d2e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d2e6:	fb09 f707 	mul.w	r7, r9, r7
 801d2ea:	fb0a fc0c 	mul.w	ip, sl, ip
 801d2ee:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d2f2:	f107 0b20 	add.w	fp, r7, #32
 801d2f6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d2fa:	44cc      	add	ip, r9
 801d2fc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d300:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d304:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d308:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d30c:	ea4c 0909 	orr.w	r9, ip, r9
 801d310:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d314:	8847      	ldrh	r7, [r0, #2]
 801d316:	d019      	beq.n	801d34c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d318:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d31c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d320:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d324:	fb08 f807 	mul.w	r8, r8, r7
 801d328:	fb0a fc0c 	mul.w	ip, sl, ip
 801d32c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d330:	f108 0b20 	add.w	fp, r8, #32
 801d334:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d338:	44bc      	add	ip, r7
 801d33a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d33e:	0a3f      	lsrs	r7, r7, #8
 801d340:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d344:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d348:	ea4c 0707 	orr.w	r7, ip, r7
 801d34c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d350:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d354:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d358:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d35c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d360:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d364:	ea4c 0909 	orr.w	r9, ip, r9
 801d368:	ea4a 0707 	orr.w	r7, sl, r7
 801d36c:	2d00      	cmp	r5, #0
 801d36e:	f000 808b 	beq.w	801d488 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d372:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d376:	3901      	subs	r1, #1
 801d378:	0049      	lsls	r1, r1, #1
 801d37a:	3102      	adds	r1, #2
 801d37c:	eb00 0c01 	add.w	ip, r0, r1
 801d380:	5a41      	ldrh	r1, [r0, r1]
 801d382:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d384:	28ff      	cmp	r0, #255	; 0xff
 801d386:	d019      	beq.n	801d3bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d388:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d38a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d38e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d392:	fb04 fa01 	mul.w	sl, r4, r1
 801d396:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d39a:	fb08 f800 	mul.w	r8, r8, r0
 801d39e:	f10a 0020 	add.w	r0, sl, #32
 801d3a2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d3a6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d3aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d3ae:	4441      	add	r1, r8
 801d3b0:	0a00      	lsrs	r0, r0, #8
 801d3b2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d3b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d3ba:	4301      	orrs	r1, r0
 801d3bc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d3be:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d3c2:	2cff      	cmp	r4, #255	; 0xff
 801d3c4:	d01a      	beq.n	801d3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d3c6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d3ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d3ce:	fb04 fa00 	mul.w	sl, r4, r0
 801d3d2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d3d6:	fb08 f80c 	mul.w	r8, r8, ip
 801d3da:	f10a 0c20 	add.w	ip, sl, #32
 801d3de:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d3e2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d3e6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d3ea:	4440      	add	r0, r8
 801d3ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d3f0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d3f4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d3f8:	ea40 000c 	orr.w	r0, r0, ip
 801d3fc:	fb15 fc02 	smulbb	ip, r5, r2
 801d400:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d404:	f1c5 0810 	rsb	r8, r5, #16
 801d408:	eba8 0802 	sub.w	r8, r8, r2
 801d40c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d410:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d414:	437a      	muls	r2, r7
 801d416:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d41a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d41e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d422:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d426:	fb09 2208 	mla	r2, r9, r8, r2
 801d42a:	ea4a 0101 	orr.w	r1, sl, r1
 801d42e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d432:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d436:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d43a:	fb05 2201 	mla	r2, r5, r1, r2
 801d43e:	ea4b 0000 	orr.w	r0, fp, r0
 801d442:	fb0c 2200 	mla	r2, ip, r0, r2
 801d446:	0d57      	lsrs	r7, r2, #21
 801d448:	0952      	lsrs	r2, r2, #5
 801d44a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d44e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d452:	433a      	orrs	r2, r7
 801d454:	2bff      	cmp	r3, #255	; 0xff
 801d456:	b292      	uxth	r2, r2
 801d458:	d127      	bne.n	801d4aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d45a:	f8ae 2000 	strh.w	r2, [lr]
 801d45e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d460:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d462:	4413      	add	r3, r2
 801d464:	931d      	str	r3, [sp, #116]	; 0x74
 801d466:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d468:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d46a:	441a      	add	r2, r3
 801d46c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d46e:	921e      	str	r2, [sp, #120]	; 0x78
 801d470:	3b01      	subs	r3, #1
 801d472:	f10e 0e02 	add.w	lr, lr, #2
 801d476:	930f      	str	r3, [sp, #60]	; 0x3c
 801d478:	e627      	b.n	801d0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d47a:	fb08 f000 	mul.w	r0, r8, r0
 801d47e:	fb09 0303 	mla	r3, r9, r3, r0
 801d482:	e71b      	b.n	801d2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d484:	46b9      	mov	r9, r7
 801d486:	e743      	b.n	801d310 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d488:	f1c2 0110 	rsb	r1, r2, #16
 801d48c:	437a      	muls	r2, r7
 801d48e:	fb09 2901 	mla	r9, r9, r1, r2
 801d492:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d496:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d49a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d49e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d4a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d4a6:	4302      	orrs	r2, r0
 801d4a8:	e7d4      	b.n	801d454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d4aa:	f8be 7000 	ldrh.w	r7, [lr]
 801d4ae:	4c1c      	ldr	r4, [pc, #112]	; (801d520 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d4b0:	43db      	mvns	r3, r3
 801d4b2:	1238      	asrs	r0, r7, #8
 801d4b4:	fa5f fc83 	uxtb.w	ip, r3
 801d4b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d4bc:	10fd      	asrs	r5, r7, #3
 801d4be:	fb00 f00c 	mul.w	r0, r0, ip
 801d4c2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d4c6:	fb05 f10c 	mul.w	r1, r5, ip
 801d4ca:	1c45      	adds	r5, r0, #1
 801d4cc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d4d0:	1215      	asrs	r5, r2, #8
 801d4d2:	f025 0507 	bic.w	r5, r5, #7
 801d4d6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d4da:	1c4d      	adds	r5, r1, #1
 801d4dc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d4e0:	10d1      	asrs	r1, r2, #3
 801d4e2:	f021 0103 	bic.w	r1, r1, #3
 801d4e6:	00fb      	lsls	r3, r7, #3
 801d4e8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d4ec:	b2db      	uxtb	r3, r3
 801d4ee:	b2c0      	uxtb	r0, r0
 801d4f0:	00c9      	lsls	r1, r1, #3
 801d4f2:	fb03 f30c 	mul.w	r3, r3, ip
 801d4f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d4fa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d4fe:	4308      	orrs	r0, r1
 801d500:	1c59      	adds	r1, r3, #1
 801d502:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d506:	00d2      	lsls	r2, r2, #3
 801d508:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d50c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d510:	4318      	orrs	r0, r3
 801d512:	f8ae 0000 	strh.w	r0, [lr]
 801d516:	e7a2      	b.n	801d45e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d518:	b013      	add	sp, #76	; 0x4c
 801d51a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d51e:	bf00      	nop
 801d520:	fffff800 	.word	0xfffff800

0801d524 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d524:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d528:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d52c:	fb05 4c03 	mla	ip, r5, r3, r4
 801d530:	2d00      	cmp	r5, #0
 801d532:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d536:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d53a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d53e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d542:	8808      	ldrh	r0, [r1, #0]
 801d544:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d548:	f2c0 80a7 	blt.w	801d69a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d54c:	45aa      	cmp	sl, r5
 801d54e:	f340 80a4 	ble.w	801d69a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d552:	2c00      	cmp	r4, #0
 801d554:	f2c0 809f 	blt.w	801d696 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d558:	42a3      	cmp	r3, r4
 801d55a:	f340 809c 	ble.w	801d696 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d55e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d562:	1c62      	adds	r2, r4, #1
 801d564:	f100 809c 	bmi.w	801d6a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d568:	4293      	cmp	r3, r2
 801d56a:	f340 8099 	ble.w	801d6a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d56e:	f1b9 0f00 	cmp.w	r9, #0
 801d572:	f000 8095 	beq.w	801d6a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d576:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d57a:	3501      	adds	r5, #1
 801d57c:	f100 8094 	bmi.w	801d6a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d580:	45aa      	cmp	sl, r5
 801d582:	f340 8091 	ble.w	801d6a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d586:	2f00      	cmp	r7, #0
 801d588:	f000 808e 	beq.w	801d6a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d58c:	2c00      	cmp	r4, #0
 801d58e:	f2c0 8089 	blt.w	801d6a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d592:	42a3      	cmp	r3, r4
 801d594:	f340 8086 	ble.w	801d6a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d598:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d59c:	3401      	adds	r4, #1
 801d59e:	f100 8086 	bmi.w	801d6ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d5a2:	42a3      	cmp	r3, r4
 801d5a4:	f340 8083 	ble.w	801d6ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d5a8:	f1b9 0f00 	cmp.w	r9, #0
 801d5ac:	d07f      	beq.n	801d6ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d5ae:	3301      	adds	r3, #1
 801d5b0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d5b4:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d5b8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d5bc:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d5c0:	fb19 fe07 	smulbb	lr, r9, r7
 801d5c4:	ea44 0808 	orr.w	r8, r4, r8
 801d5c8:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d5cc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d5d0:	f1c7 0210 	rsb	r2, r7, #16
 801d5d4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d5d8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d5dc:	ea44 0c0c 	orr.w	ip, r4, ip
 801d5e0:	eba2 0209 	sub.w	r2, r2, r9
 801d5e4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d5e8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d5ec:	fb04 f40c 	mul.w	r4, r4, ip
 801d5f0:	fb02 4808 	mla	r8, r2, r8, r4
 801d5f4:	041a      	lsls	r2, r3, #16
 801d5f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d5fa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d5fe:	4313      	orrs	r3, r2
 801d600:	042a      	lsls	r2, r5, #16
 801d602:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d606:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d60a:	fb0e 8303 	mla	r3, lr, r3, r8
 801d60e:	432a      	orrs	r2, r5
 801d610:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d614:	fb07 3202 	mla	r2, r7, r2, r3
 801d618:	0d53      	lsrs	r3, r2, #21
 801d61a:	0952      	lsrs	r2, r2, #5
 801d61c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d620:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d624:	431a      	orrs	r2, r3
 801d626:	b293      	uxth	r3, r2
 801d628:	b2b4      	uxth	r4, r6
 801d62a:	1202      	asrs	r2, r0, #8
 801d62c:	43f6      	mvns	r6, r6
 801d62e:	b2f6      	uxtb	r6, r6
 801d630:	121d      	asrs	r5, r3, #8
 801d632:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d636:	fb12 f206 	smulbb	r2, r2, r6
 801d63a:	10c7      	asrs	r7, r0, #3
 801d63c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d640:	00c0      	lsls	r0, r0, #3
 801d642:	fb05 2504 	mla	r5, r5, r4, r2
 801d646:	b2c0      	uxtb	r0, r0
 801d648:	10da      	asrs	r2, r3, #3
 801d64a:	00db      	lsls	r3, r3, #3
 801d64c:	b2db      	uxtb	r3, r3
 801d64e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d652:	fb10 f006 	smulbb	r0, r0, r6
 801d656:	b2ad      	uxth	r5, r5
 801d658:	fb03 0004 	mla	r0, r3, r4, r0
 801d65c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d660:	fb17 f706 	smulbb	r7, r7, r6
 801d664:	b280      	uxth	r0, r0
 801d666:	1c6b      	adds	r3, r5, #1
 801d668:	fb02 7204 	mla	r2, r2, r4, r7
 801d66c:	b292      	uxth	r2, r2
 801d66e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d672:	1c43      	adds	r3, r0, #1
 801d674:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d678:	1c50      	adds	r0, r2, #1
 801d67a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d67e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d682:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d686:	0952      	lsrs	r2, r2, #5
 801d688:	432b      	orrs	r3, r5
 801d68a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d68e:	4313      	orrs	r3, r2
 801d690:	800b      	strh	r3, [r1, #0]
 801d692:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d696:	4680      	mov	r8, r0
 801d698:	e763      	b.n	801d562 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d69a:	4684      	mov	ip, r0
 801d69c:	4680      	mov	r8, r0
 801d69e:	e76c      	b.n	801d57a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d6a0:	4684      	mov	ip, r0
 801d6a2:	e76a      	b.n	801d57a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d6a4:	4605      	mov	r5, r0
 801d6a6:	e779      	b.n	801d59c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d6a8:	4603      	mov	r3, r0
 801d6aa:	4605      	mov	r5, r0
 801d6ac:	e782      	b.n	801d5b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d6ae:	4603      	mov	r3, r0
 801d6b0:	e780      	b.n	801d5b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d6b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d6b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6b6:	b093      	sub	sp, #76	; 0x4c
 801d6b8:	461d      	mov	r5, r3
 801d6ba:	9210      	str	r2, [sp, #64]	; 0x40
 801d6bc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d6be:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d6c2:	920b      	str	r2, [sp, #44]	; 0x2c
 801d6c4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d6c8:	910a      	str	r1, [sp, #40]	; 0x28
 801d6ca:	6859      	ldr	r1, [r3, #4]
 801d6cc:	681b      	ldr	r3, [r3, #0]
 801d6ce:	9011      	str	r0, [sp, #68]	; 0x44
 801d6d0:	fb01 2707 	mla	r7, r1, r7, r2
 801d6d4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d6d8:	9307      	str	r3, [sp, #28]
 801d6da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d6dc:	681b      	ldr	r3, [r3, #0]
 801d6de:	9309      	str	r3, [sp, #36]	; 0x24
 801d6e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d6e2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d6e6:	43db      	mvns	r3, r3
 801d6e8:	b2db      	uxtb	r3, r3
 801d6ea:	9308      	str	r3, [sp, #32]
 801d6ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d6ee:	2b00      	cmp	r3, #0
 801d6f0:	dc03      	bgt.n	801d6fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d6f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d6f4:	2b00      	cmp	r3, #0
 801d6f6:	f340 8203 	ble.w	801db00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d6fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d6fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d700:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d704:	1e48      	subs	r0, r1, #1
 801d706:	f102 3cff 	add.w	ip, r2, #4294967295
 801d70a:	2d00      	cmp	r5, #0
 801d70c:	f340 80da 	ble.w	801d8c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d710:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d714:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d718:	d406      	bmi.n	801d728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d71a:	4586      	cmp	lr, r0
 801d71c:	da04      	bge.n	801d728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d71e:	2b00      	cmp	r3, #0
 801d720:	db02      	blt.n	801d728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d722:	4563      	cmp	r3, ip
 801d724:	f2c0 80cf 	blt.w	801d8c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d728:	f11e 0e01 	adds.w	lr, lr, #1
 801d72c:	f100 80c1 	bmi.w	801d8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d730:	4571      	cmp	r1, lr
 801d732:	f2c0 80be 	blt.w	801d8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d736:	3301      	adds	r3, #1
 801d738:	f100 80bb 	bmi.w	801d8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d73c:	429a      	cmp	r2, r3
 801d73e:	f2c0 80b8 	blt.w	801d8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d742:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d746:	46a9      	mov	r9, r5
 801d748:	f1b9 0f00 	cmp.w	r9, #0
 801d74c:	f340 80d8 	ble.w	801d900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d750:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d752:	1421      	asrs	r1, r4, #16
 801d754:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d758:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d75c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d760:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d764:	f100 8111 	bmi.w	801d98a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d768:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d76c:	4551      	cmp	r1, sl
 801d76e:	f280 810c 	bge.w	801d98a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d772:	2800      	cmp	r0, #0
 801d774:	f2c0 8109 	blt.w	801d98a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d778:	f103 3aff 	add.w	sl, r3, #4294967295
 801d77c:	4550      	cmp	r0, sl
 801d77e:	f280 8104 	bge.w	801d98a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d782:	fa0f f38e 	sxth.w	r3, lr
 801d786:	fb00 1103 	mla	r1, r0, r3, r1
 801d78a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d78c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d790:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d794:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d798:	f1bc 0f00 	cmp.w	ip, #0
 801d79c:	d007      	beq.n	801d7ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d79e:	005b      	lsls	r3, r3, #1
 801d7a0:	eb0a 0003 	add.w	r0, sl, r3
 801d7a4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d7a8:	930c      	str	r3, [sp, #48]	; 0x30
 801d7aa:	8843      	ldrh	r3, [r0, #2]
 801d7ac:	930d      	str	r3, [sp, #52]	; 0x34
 801d7ae:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d7b2:	fb12 f30c 	smulbb	r3, r2, ip
 801d7b6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d7ba:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d7be:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d7c2:	10db      	asrs	r3, r3, #3
 801d7c4:	ea40 000e 	orr.w	r0, r0, lr
 801d7c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d7cc:	f1cc 0e10 	rsb	lr, ip, #16
 801d7d0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d7d4:	ebae 0e02 	sub.w	lr, lr, r2
 801d7d8:	ea4a 0101 	orr.w	r1, sl, r1
 801d7dc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d7e0:	4351      	muls	r1, r2
 801d7e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d7e4:	9f08      	ldr	r7, [sp, #32]
 801d7e6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d7ea:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d7ee:	0410      	lsls	r0, r2, #16
 801d7f0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d7f4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d7f8:	4310      	orrs	r0, r2
 801d7fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d7fc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d7fe:	0412      	lsls	r2, r2, #16
 801d800:	fb03 e000 	mla	r0, r3, r0, lr
 801d804:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d808:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d80c:	ea42 020e 	orr.w	r2, r2, lr
 801d810:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d814:	fb03 0302 	mla	r3, r3, r2, r0
 801d818:	0d5a      	lsrs	r2, r3, #21
 801d81a:	095b      	lsrs	r3, r3, #5
 801d81c:	f8b8 0000 	ldrh.w	r0, [r8]
 801d820:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d824:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d828:	4313      	orrs	r3, r2
 801d82a:	b29b      	uxth	r3, r3
 801d82c:	1201      	asrs	r1, r0, #8
 801d82e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d832:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d836:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d83a:	fb11 f107 	smulbb	r1, r1, r7
 801d83e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d842:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d846:	00c0      	lsls	r0, r0, #3
 801d848:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d84c:	b2c0      	uxtb	r0, r0
 801d84e:	10d9      	asrs	r1, r3, #3
 801d850:	00db      	lsls	r3, r3, #3
 801d852:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d856:	b2db      	uxtb	r3, r3
 801d858:	fb10 f007 	smulbb	r0, r0, r7
 801d85c:	fa1f fc8c 	uxth.w	ip, ip
 801d860:	fb03 0302 	mla	r3, r3, r2, r0
 801d864:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d868:	fb1e fe07 	smulbb	lr, lr, r7
 801d86c:	fb01 e102 	mla	r1, r1, r2, lr
 801d870:	b29a      	uxth	r2, r3
 801d872:	f10c 0301 	add.w	r3, ip, #1
 801d876:	b289      	uxth	r1, r1
 801d878:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d87c:	1c53      	adds	r3, r2, #1
 801d87e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d882:	1c4a      	adds	r2, r1, #1
 801d884:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d888:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d88c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d890:	0949      	lsrs	r1, r1, #5
 801d892:	ea43 030c 	orr.w	r3, r3, ip
 801d896:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d89a:	430b      	orrs	r3, r1
 801d89c:	f8a8 3000 	strh.w	r3, [r8]
 801d8a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d8a2:	441c      	add	r4, r3
 801d8a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d8a6:	f108 0802 	add.w	r8, r8, #2
 801d8aa:	441e      	add	r6, r3
 801d8ac:	f109 39ff 	add.w	r9, r9, #4294967295
 801d8b0:	e74a      	b.n	801d748 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d8b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d8b4:	441c      	add	r4, r3
 801d8b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d8b8:	441e      	add	r6, r3
 801d8ba:	9b07      	ldr	r3, [sp, #28]
 801d8bc:	3302      	adds	r3, #2
 801d8be:	3d01      	subs	r5, #1
 801d8c0:	9307      	str	r3, [sp, #28]
 801d8c2:	e722      	b.n	801d70a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d8c4:	d022      	beq.n	801d90c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d8c6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d8c8:	1e6b      	subs	r3, r5, #1
 801d8ca:	fb00 4003 	mla	r0, r0, r3, r4
 801d8ce:	1400      	asrs	r0, r0, #16
 801d8d0:	f53f af37 	bmi.w	801d742 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d8d4:	3901      	subs	r1, #1
 801d8d6:	4288      	cmp	r0, r1
 801d8d8:	f6bf af33 	bge.w	801d742 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d8dc:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d8de:	fb01 6303 	mla	r3, r1, r3, r6
 801d8e2:	141b      	asrs	r3, r3, #16
 801d8e4:	f53f af2d 	bmi.w	801d742 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d8e8:	3a01      	subs	r2, #1
 801d8ea:	4293      	cmp	r3, r2
 801d8ec:	f6bf af29 	bge.w	801d742 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d8f0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d8f4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d8f8:	46a8      	mov	r8, r5
 801d8fa:	f1b8 0f00 	cmp.w	r8, #0
 801d8fe:	dc5e      	bgt.n	801d9be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d900:	9b07      	ldr	r3, [sp, #28]
 801d902:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d906:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d90a:	9307      	str	r3, [sp, #28]
 801d90c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d90e:	2b00      	cmp	r3, #0
 801d910:	f340 80f6 	ble.w	801db00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d914:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d918:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d91c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d920:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d922:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d926:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d92a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d92e:	eef0 6a62 	vmov.f32	s13, s5
 801d932:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d936:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d93a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d93e:	ee16 4a90 	vmov	r4, s13
 801d942:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d946:	eef0 6a43 	vmov.f32	s13, s6
 801d94a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d94e:	ee12 2a90 	vmov	r2, s5
 801d952:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d956:	fb92 f3f3 	sdiv	r3, r2, r3
 801d95a:	ee13 2a10 	vmov	r2, s6
 801d95e:	931f      	str	r3, [sp, #124]	; 0x7c
 801d960:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d962:	fb92 f3f3 	sdiv	r3, r2, r3
 801d966:	9320      	str	r3, [sp, #128]	; 0x80
 801d968:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d96a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d96c:	3b01      	subs	r3, #1
 801d96e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d972:	930a      	str	r3, [sp, #40]	; 0x28
 801d974:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d976:	ee16 6a90 	vmov	r6, s13
 801d97a:	bf14      	ite	ne
 801d97c:	461d      	movne	r5, r3
 801d97e:	4615      	moveq	r5, r2
 801d980:	eeb0 3a67 	vmov.f32	s6, s15
 801d984:	eef0 2a47 	vmov.f32	s5, s14
 801d988:	e6b0      	b.n	801d6ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d98a:	f111 0a01 	adds.w	sl, r1, #1
 801d98e:	d487      	bmi.n	801d8a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d990:	45d6      	cmp	lr, sl
 801d992:	db85      	blt.n	801d8a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d994:	f110 0a01 	adds.w	sl, r0, #1
 801d998:	d482      	bmi.n	801d8a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d99a:	4553      	cmp	r3, sl
 801d99c:	db80      	blt.n	801d8a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d99e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d9a0:	9101      	str	r1, [sp, #4]
 801d9a2:	b21b      	sxth	r3, r3
 801d9a4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d9a8:	9300      	str	r3, [sp, #0]
 801d9aa:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d9ae:	fa0f f38e 	sxth.w	r3, lr
 801d9b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d9b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d9b6:	4641      	mov	r1, r8
 801d9b8:	f7ff fdb4 	bl	801d524 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d9bc:	e770      	b.n	801d8a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d9be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d9c0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d9c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d9c6:	1430      	asrs	r0, r6, #16
 801d9c8:	1423      	asrs	r3, r4, #16
 801d9ca:	fb01 3000 	mla	r0, r1, r0, r3
 801d9ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d9d0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d9d4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d9d8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d9dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d9e0:	8858      	ldrh	r0, [r3, #2]
 801d9e2:	f1be 0f00 	cmp.w	lr, #0
 801d9e6:	d00b      	beq.n	801da00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d9e8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d9ec:	3901      	subs	r1, #1
 801d9ee:	0049      	lsls	r1, r1, #1
 801d9f0:	3102      	adds	r1, #2
 801d9f2:	eb03 0b01 	add.w	fp, r3, r1
 801d9f6:	5a5b      	ldrh	r3, [r3, r1]
 801d9f8:	930e      	str	r3, [sp, #56]	; 0x38
 801d9fa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d9fe:	930f      	str	r3, [sp, #60]	; 0x3c
 801da00:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801da04:	fb12 f30e 	smulbb	r3, r2, lr
 801da08:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801da0c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801da10:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801da14:	10db      	asrs	r3, r3, #3
 801da16:	ea41 010c 	orr.w	r1, r1, ip
 801da1a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801da1e:	f1ce 0c10 	rsb	ip, lr, #16
 801da22:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801da26:	ebac 0c02 	sub.w	ip, ip, r2
 801da2a:	ea4b 0000 	orr.w	r0, fp, r0
 801da2e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801da32:	4350      	muls	r0, r2
 801da34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801da36:	9f08      	ldr	r7, [sp, #32]
 801da38:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801da3c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801da40:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801da44:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801da48:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801da4a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801da4c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801da50:	0412      	lsls	r2, r2, #16
 801da52:	ea4b 0101 	orr.w	r1, fp, r1
 801da56:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801da5a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801da5e:	fb03 c101 	mla	r1, r3, r1, ip
 801da62:	4302      	orrs	r2, r0
 801da64:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801da68:	fb03 1202 	mla	r2, r3, r2, r1
 801da6c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801da70:	0952      	lsrs	r2, r2, #5
 801da72:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801da76:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801da7a:	f8b9 2000 	ldrh.w	r2, [r9]
 801da7e:	ea4b 0303 	orr.w	r3, fp, r3
 801da82:	b29b      	uxth	r3, r3
 801da84:	1211      	asrs	r1, r2, #8
 801da86:	1218      	asrs	r0, r3, #8
 801da88:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801da8c:	fb11 f107 	smulbb	r1, r1, r7
 801da90:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801da94:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801da98:	00d2      	lsls	r2, r2, #3
 801da9a:	fb00 100a 	mla	r0, r0, sl, r1
 801da9e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801daa2:	10d9      	asrs	r1, r3, #3
 801daa4:	b2d2      	uxtb	r2, r2
 801daa6:	00db      	lsls	r3, r3, #3
 801daa8:	fb1c fc07 	smulbb	ip, ip, r7
 801daac:	fb12 f207 	smulbb	r2, r2, r7
 801dab0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dab4:	b2db      	uxtb	r3, r3
 801dab6:	b280      	uxth	r0, r0
 801dab8:	fb01 c10a 	mla	r1, r1, sl, ip
 801dabc:	fb03 230a 	mla	r3, r3, sl, r2
 801dac0:	b29b      	uxth	r3, r3
 801dac2:	b289      	uxth	r1, r1
 801dac4:	1c42      	adds	r2, r0, #1
 801dac6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801daca:	f101 0c01 	add.w	ip, r1, #1
 801dace:	1c5a      	adds	r2, r3, #1
 801dad0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801dad4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801dad8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dada:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801dade:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dae2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dae6:	4310      	orrs	r0, r2
 801dae8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801daec:	441c      	add	r4, r3
 801daee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801daf0:	ea40 000c 	orr.w	r0, r0, ip
 801daf4:	f829 0b02 	strh.w	r0, [r9], #2
 801daf8:	441e      	add	r6, r3
 801dafa:	f108 38ff 	add.w	r8, r8, #4294967295
 801dafe:	e6fc      	b.n	801d8fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801db00:	b013      	add	sp, #76	; 0x4c
 801db02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801db06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801db06:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801db0a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801db0e:	fb0e 4703 	mla	r7, lr, r3, r4
 801db12:	f1be 0f00 	cmp.w	lr, #0
 801db16:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801db1a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801db1e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801db22:	8808      	ldrh	r0, [r1, #0]
 801db24:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801db28:	db60      	blt.n	801dbec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801db2a:	45f1      	cmp	r9, lr
 801db2c:	dd5e      	ble.n	801dbec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801db2e:	2c00      	cmp	r4, #0
 801db30:	db5a      	blt.n	801dbe8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801db32:	42a3      	cmp	r3, r4
 801db34:	dd58      	ble.n	801dbe8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801db36:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801db3a:	1c62      	adds	r2, r4, #1
 801db3c:	d459      	bmi.n	801dbf2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801db3e:	4293      	cmp	r3, r2
 801db40:	dd57      	ble.n	801dbf2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801db42:	2d00      	cmp	r5, #0
 801db44:	d055      	beq.n	801dbf2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801db46:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801db4a:	f11e 0e01 	adds.w	lr, lr, #1
 801db4e:	d454      	bmi.n	801dbfa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801db50:	45f1      	cmp	r9, lr
 801db52:	dd52      	ble.n	801dbfa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801db54:	2e00      	cmp	r6, #0
 801db56:	d050      	beq.n	801dbfa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801db58:	2c00      	cmp	r4, #0
 801db5a:	db4c      	blt.n	801dbf6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801db5c:	42a3      	cmp	r3, r4
 801db5e:	dd4a      	ble.n	801dbf6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801db60:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801db64:	3401      	adds	r4, #1
 801db66:	d405      	bmi.n	801db74 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801db68:	42a3      	cmp	r3, r4
 801db6a:	dd03      	ble.n	801db74 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801db6c:	b115      	cbz	r5, 801db74 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801db6e:	3301      	adds	r3, #1
 801db70:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801db74:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801db78:	fb15 f406 	smulbb	r4, r5, r6
 801db7c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801db80:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801db84:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801db88:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801db8c:	ea43 0c0c 	orr.w	ip, r3, ip
 801db90:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801db94:	f1c6 0310 	rsb	r3, r6, #16
 801db98:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801db9c:	1b5b      	subs	r3, r3, r5
 801db9e:	ea4e 0707 	orr.w	r7, lr, r7
 801dba2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801dba6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801dbaa:	437d      	muls	r5, r7
 801dbac:	fb03 5c0c 	mla	ip, r3, ip, r5
 801dbb0:	0403      	lsls	r3, r0, #16
 801dbb2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dbb6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dbba:	4318      	orrs	r0, r3
 801dbbc:	0413      	lsls	r3, r2, #16
 801dbbe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dbc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dbc6:	4313      	orrs	r3, r2
 801dbc8:	fb04 c000 	mla	r0, r4, r0, ip
 801dbcc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801dbd0:	fb06 0003 	mla	r0, r6, r3, r0
 801dbd4:	0d43      	lsrs	r3, r0, #21
 801dbd6:	0940      	lsrs	r0, r0, #5
 801dbd8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dbdc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dbe0:	4318      	orrs	r0, r3
 801dbe2:	8008      	strh	r0, [r1, #0]
 801dbe4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dbe8:	4684      	mov	ip, r0
 801dbea:	e7a6      	b.n	801db3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801dbec:	4607      	mov	r7, r0
 801dbee:	4684      	mov	ip, r0
 801dbf0:	e7ab      	b.n	801db4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dbf2:	4607      	mov	r7, r0
 801dbf4:	e7a9      	b.n	801db4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dbf6:	4602      	mov	r2, r0
 801dbf8:	e7b4      	b.n	801db64 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801dbfa:	4602      	mov	r2, r0
 801dbfc:	e7ba      	b.n	801db74 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801dbfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dbfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc02:	b08f      	sub	sp, #60	; 0x3c
 801dc04:	461d      	mov	r5, r3
 801dc06:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801dc08:	920c      	str	r2, [sp, #48]	; 0x30
 801dc0a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801dc0e:	9107      	str	r1, [sp, #28]
 801dc10:	6859      	ldr	r1, [r3, #4]
 801dc12:	681b      	ldr	r3, [r3, #0]
 801dc14:	900d      	str	r0, [sp, #52]	; 0x34
 801dc16:	fb01 2707 	mla	r7, r1, r7, r2
 801dc1a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801dc1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc20:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801dc24:	f8d3 8000 	ldr.w	r8, [r3]
 801dc28:	9b07      	ldr	r3, [sp, #28]
 801dc2a:	2b00      	cmp	r3, #0
 801dc2c:	dc03      	bgt.n	801dc36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801dc2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dc30:	2b00      	cmp	r3, #0
 801dc32:	f340 8181 	ble.w	801df38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801dc36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc3c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dc40:	1e48      	subs	r0, r1, #1
 801dc42:	f102 3cff 	add.w	ip, r2, #4294967295
 801dc46:	2d00      	cmp	r5, #0
 801dc48:	f340 809b 	ble.w	801dd82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801dc4c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dc50:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dc54:	d406      	bmi.n	801dc64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dc56:	4586      	cmp	lr, r0
 801dc58:	da04      	bge.n	801dc64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dc5a:	2b00      	cmp	r3, #0
 801dc5c:	db02      	blt.n	801dc64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dc5e:	4563      	cmp	r3, ip
 801dc60:	f2c0 8090 	blt.w	801dd84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dc64:	f11e 0e01 	adds.w	lr, lr, #1
 801dc68:	f100 8084 	bmi.w	801dd74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801dc6c:	4571      	cmp	r1, lr
 801dc6e:	f2c0 8081 	blt.w	801dd74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801dc72:	3301      	adds	r3, #1
 801dc74:	d47e      	bmi.n	801dd74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801dc76:	429a      	cmp	r2, r3
 801dc78:	db7c      	blt.n	801dd74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801dc7a:	46aa      	mov	sl, r5
 801dc7c:	46b9      	mov	r9, r7
 801dc7e:	f1ba 0f00 	cmp.w	sl, #0
 801dc82:	f340 8099 	ble.w	801ddb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801dc86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc88:	1421      	asrs	r1, r4, #16
 801dc8a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801dc8e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dc92:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801dc96:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801dc9a:	f100 80d0 	bmi.w	801de3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dc9e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801dca2:	4559      	cmp	r1, fp
 801dca4:	f280 80cb 	bge.w	801de3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dca8:	2800      	cmp	r0, #0
 801dcaa:	f2c0 80c8 	blt.w	801de3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dcae:	f103 3bff 	add.w	fp, r3, #4294967295
 801dcb2:	4558      	cmp	r0, fp
 801dcb4:	f280 80c3 	bge.w	801de3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dcb8:	fa0f fe8e 	sxth.w	lr, lr
 801dcbc:	fb00 110e 	mla	r1, r0, lr, r1
 801dcc0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dcc4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801dcc8:	8841      	ldrh	r1, [r0, #2]
 801dcca:	f1bc 0f00 	cmp.w	ip, #0
 801dcce:	d00b      	beq.n	801dce8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801dcd0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801dcd4:	3b01      	subs	r3, #1
 801dcd6:	005b      	lsls	r3, r3, #1
 801dcd8:	3302      	adds	r3, #2
 801dcda:	eb00 0e03 	add.w	lr, r0, r3
 801dcde:	5ac3      	ldrh	r3, [r0, r3]
 801dce0:	9308      	str	r3, [sp, #32]
 801dce2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801dce6:	9309      	str	r3, [sp, #36]	; 0x24
 801dce8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801dcec:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dcf0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801dcf4:	ea40 000b 	orr.w	r0, r0, fp
 801dcf8:	fb12 f30c 	smulbb	r3, r2, ip
 801dcfc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dd00:	10db      	asrs	r3, r3, #3
 801dd02:	f1cc 0e10 	rsb	lr, ip, #16
 801dd06:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dd0a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dd0e:	ebae 0e02 	sub.w	lr, lr, r2
 801dd12:	ea4b 0101 	orr.w	r1, fp, r1
 801dd16:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dd1a:	4351      	muls	r1, r2
 801dd1c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dd1e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dd22:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dd26:	0410      	lsls	r0, r2, #16
 801dd28:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dd2c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dd30:	4310      	orrs	r0, r2
 801dd32:	9a08      	ldr	r2, [sp, #32]
 801dd34:	9908      	ldr	r1, [sp, #32]
 801dd36:	0412      	lsls	r2, r2, #16
 801dd38:	fb03 e000 	mla	r0, r3, r0, lr
 801dd3c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dd40:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801dd44:	ea42 020e 	orr.w	r2, r2, lr
 801dd48:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dd4c:	fb03 0302 	mla	r3, r3, r2, r0
 801dd50:	0d5a      	lsrs	r2, r3, #21
 801dd52:	095b      	lsrs	r3, r3, #5
 801dd54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dd58:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dd5c:	4313      	orrs	r3, r2
 801dd5e:	f8a9 3000 	strh.w	r3, [r9]
 801dd62:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dd64:	441c      	add	r4, r3
 801dd66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dd68:	f109 0902 	add.w	r9, r9, #2
 801dd6c:	441e      	add	r6, r3
 801dd6e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801dd72:	e784      	b.n	801dc7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801dd74:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dd76:	441c      	add	r4, r3
 801dd78:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dd7a:	3d01      	subs	r5, #1
 801dd7c:	441e      	add	r6, r3
 801dd7e:	3702      	adds	r7, #2
 801dd80:	e761      	b.n	801dc46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dd82:	d01d      	beq.n	801ddc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801dd84:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801dd86:	1e6b      	subs	r3, r5, #1
 801dd88:	fb00 4003 	mla	r0, r0, r3, r4
 801dd8c:	1400      	asrs	r0, r0, #16
 801dd8e:	f53f af74 	bmi.w	801dc7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dd92:	3901      	subs	r1, #1
 801dd94:	4288      	cmp	r0, r1
 801dd96:	f6bf af70 	bge.w	801dc7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dd9a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801dd9c:	fb01 6303 	mla	r3, r1, r3, r6
 801dda0:	141b      	asrs	r3, r3, #16
 801dda2:	f53f af6a 	bmi.w	801dc7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dda6:	3a01      	subs	r2, #1
 801dda8:	4293      	cmp	r3, r2
 801ddaa:	f6bf af66 	bge.w	801dc7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ddae:	46a9      	mov	r9, r5
 801ddb0:	46ba      	mov	sl, r7
 801ddb2:	f1b9 0f00 	cmp.w	r9, #0
 801ddb6:	dc5a      	bgt.n	801de6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801ddb8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ddbc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ddc0:	9b07      	ldr	r3, [sp, #28]
 801ddc2:	2b00      	cmp	r3, #0
 801ddc4:	f340 80b8 	ble.w	801df38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ddc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ddcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ddd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ddd4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ddd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ddda:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ddde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dde2:	eef0 6a62 	vmov.f32	s13, s5
 801dde6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ddea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ddee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ddf2:	ee16 4a90 	vmov	r4, s13
 801ddf6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ddfa:	eef0 6a43 	vmov.f32	s13, s6
 801ddfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de02:	ee12 2a90 	vmov	r2, s5
 801de06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801de0e:	ee13 2a10 	vmov	r2, s6
 801de12:	931b      	str	r3, [sp, #108]	; 0x6c
 801de14:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801de16:	fb92 f3f3 	sdiv	r3, r2, r3
 801de1a:	931c      	str	r3, [sp, #112]	; 0x70
 801de1c:	9b07      	ldr	r3, [sp, #28]
 801de1e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801de20:	3b01      	subs	r3, #1
 801de22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de26:	9307      	str	r3, [sp, #28]
 801de28:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801de2a:	ee16 6a90 	vmov	r6, s13
 801de2e:	bf14      	ite	ne
 801de30:	461d      	movne	r5, r3
 801de32:	4615      	moveq	r5, r2
 801de34:	eeb0 3a67 	vmov.f32	s6, s15
 801de38:	eef0 2a47 	vmov.f32	s5, s14
 801de3c:	e6f4      	b.n	801dc28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801de3e:	f111 0b01 	adds.w	fp, r1, #1
 801de42:	d48e      	bmi.n	801dd62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801de44:	45de      	cmp	lr, fp
 801de46:	db8c      	blt.n	801dd62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801de48:	f110 0b01 	adds.w	fp, r0, #1
 801de4c:	d489      	bmi.n	801dd62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801de4e:	455b      	cmp	r3, fp
 801de50:	db87      	blt.n	801dd62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801de52:	b21b      	sxth	r3, r3
 801de54:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801de58:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801de5c:	9300      	str	r3, [sp, #0]
 801de5e:	4642      	mov	r2, r8
 801de60:	fa0f f38e 	sxth.w	r3, lr
 801de64:	4649      	mov	r1, r9
 801de66:	980d      	ldr	r0, [sp, #52]	; 0x34
 801de68:	f7ff fe4d 	bl	801db06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801de6c:	e779      	b.n	801dd62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801de6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801de70:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801de74:	1420      	asrs	r0, r4, #16
 801de76:	1431      	asrs	r1, r6, #16
 801de78:	fb03 0101 	mla	r1, r3, r1, r0
 801de7c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801de80:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801de84:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801de88:	8841      	ldrh	r1, [r0, #2]
 801de8a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801de8e:	f1be 0f00 	cmp.w	lr, #0
 801de92:	d00b      	beq.n	801deac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801de94:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801de98:	3b01      	subs	r3, #1
 801de9a:	005b      	lsls	r3, r3, #1
 801de9c:	3302      	adds	r3, #2
 801de9e:	eb00 0b03 	add.w	fp, r0, r3
 801dea2:	5ac3      	ldrh	r3, [r0, r3]
 801dea4:	930a      	str	r3, [sp, #40]	; 0x28
 801dea6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801deaa:	930b      	str	r3, [sp, #44]	; 0x2c
 801deac:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801deb0:	fb12 f30e 	smulbb	r3, r2, lr
 801deb4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801deb8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801debc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dec0:	10db      	asrs	r3, r3, #3
 801dec2:	ea40 000c 	orr.w	r0, r0, ip
 801dec6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801deca:	f1ce 0c10 	rsb	ip, lr, #16
 801dece:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ded2:	ebac 0c02 	sub.w	ip, ip, r2
 801ded6:	ea4b 0101 	orr.w	r1, fp, r1
 801deda:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dede:	4351      	muls	r1, r2
 801dee0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dee2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dee6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801deea:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801deee:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801def2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801def4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801def6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801defa:	0412      	lsls	r2, r2, #16
 801defc:	ea4b 0000 	orr.w	r0, fp, r0
 801df00:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801df04:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801df08:	fb03 c000 	mla	r0, r3, r0, ip
 801df0c:	ea42 0b0b 	orr.w	fp, r2, fp
 801df10:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801df14:	fb03 000b 	mla	r0, r3, fp, r0
 801df18:	0d43      	lsrs	r3, r0, #21
 801df1a:	0940      	lsrs	r0, r0, #5
 801df1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801df20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801df24:	4318      	orrs	r0, r3
 801df26:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801df28:	f82a 0b02 	strh.w	r0, [sl], #2
 801df2c:	441c      	add	r4, r3
 801df2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801df30:	f109 39ff 	add.w	r9, r9, #4294967295
 801df34:	441e      	add	r6, r3
 801df36:	e73c      	b.n	801ddb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801df38:	b00f      	add	sp, #60	; 0x3c
 801df3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801df3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801df3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df42:	b085      	sub	sp, #20
 801df44:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801df48:	9102      	str	r1, [sp, #8]
 801df4a:	2c00      	cmp	r4, #0
 801df4c:	fb04 7103 	mla	r1, r4, r3, r7
 801df50:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801df54:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801df58:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801df5c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801df60:	f2c0 811b 	blt.w	801e19a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801df64:	45a6      	cmp	lr, r4
 801df66:	f340 8118 	ble.w	801e19a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801df6a:	2f00      	cmp	r7, #0
 801df6c:	f2c0 8113 	blt.w	801e196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801df70:	42bb      	cmp	r3, r7
 801df72:	f340 8110 	ble.w	801e196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801df76:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801df7a:	1c7a      	adds	r2, r7, #1
 801df7c:	f100 8110 	bmi.w	801e1a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801df80:	4293      	cmp	r3, r2
 801df82:	f340 810d 	ble.w	801e1a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801df86:	2e00      	cmp	r6, #0
 801df88:	f000 810c 	beq.w	801e1a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801df8c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801df90:	3401      	adds	r4, #1
 801df92:	f100 810b 	bmi.w	801e1ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801df96:	45a6      	cmp	lr, r4
 801df98:	f340 8108 	ble.w	801e1ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801df9c:	2800      	cmp	r0, #0
 801df9e:	f000 8108 	beq.w	801e1b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801dfa2:	2f00      	cmp	r7, #0
 801dfa4:	f2c0 8100 	blt.w	801e1a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dfa8:	42bb      	cmp	r3, r7
 801dfaa:	f340 80fd 	ble.w	801e1a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dfae:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801dfb2:	3701      	adds	r7, #1
 801dfb4:	f100 8100 	bmi.w	801e1b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dfb8:	42bb      	cmp	r3, r7
 801dfba:	f340 80fd 	ble.w	801e1b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dfbe:	2e00      	cmp	r6, #0
 801dfc0:	f000 80fc 	beq.w	801e1bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801dfc4:	3301      	adds	r3, #1
 801dfc6:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801dfca:	b2b6      	uxth	r6, r6
 801dfcc:	b280      	uxth	r0, r0
 801dfce:	fb00 fe06 	mul.w	lr, r0, r6
 801dfd2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dfd6:	0136      	lsls	r6, r6, #4
 801dfd8:	eba6 070e 	sub.w	r7, r6, lr
 801dfdc:	b280      	uxth	r0, r0
 801dfde:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801dfe2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dfe6:	b2bf      	uxth	r7, r7
 801dfe8:	1a1b      	subs	r3, r3, r0
 801dfea:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801dfee:	b29b      	uxth	r3, r3
 801dff0:	fb0a f607 	mul.w	r6, sl, r7
 801dff4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dff8:	fb0b 6603 	mla	r6, fp, r3, r6
 801dffc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e000:	fb00 6609 	mla	r6, r0, r9, r6
 801e004:	fb0e 6608 	mla	r6, lr, r8, r6
 801e008:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e00c:	9600      	str	r6, [sp, #0]
 801e00e:	2e00      	cmp	r6, #0
 801e010:	f000 80be 	beq.w	801e190 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e014:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e018:	fb0b fc0c 	mul.w	ip, fp, ip
 801e01c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e020:	fb0b f505 	mul.w	r5, fp, r5
 801e024:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e028:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e02c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e030:	44dc      	add	ip, fp
 801e032:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e036:	9501      	str	r5, [sp, #4]
 801e038:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e03c:	9503      	str	r5, [sp, #12]
 801e03e:	9d01      	ldr	r5, [sp, #4]
 801e040:	9e02      	ldr	r6, [sp, #8]
 801e042:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e046:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e04a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e04e:	fb0a fc0c 	mul.w	ip, sl, ip
 801e052:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e056:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e05a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e05e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e062:	4465      	add	r5, ip
 801e064:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e068:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e06c:	fb09 fc0c 	mul.w	ip, r9, ip
 801e070:	fb09 f904 	mul.w	r9, r9, r4
 801e074:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e078:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e07c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e080:	fb08 f404 	mul.w	r4, r8, r4
 801e084:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e088:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e08c:	fb08 f802 	mul.w	r8, r8, r2
 801e090:	fb0a fa01 	mul.w	sl, sl, r1
 801e094:	0a22      	lsrs	r2, r4, #8
 801e096:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e09a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e09e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e0a2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e0a6:	4414      	add	r4, r2
 801e0a8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e0ac:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e0b0:	0a2d      	lsrs	r5, r5, #8
 801e0b2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e0b6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e0ba:	9a03      	ldr	r2, [sp, #12]
 801e0bc:	8836      	ldrh	r6, [r6, #0]
 801e0be:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e0c2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e0c6:	437d      	muls	r5, r7
 801e0c8:	4461      	add	r1, ip
 801e0ca:	0a24      	lsrs	r4, r4, #8
 801e0cc:	fb02 5503 	mla	r5, r2, r3, r5
 801e0d0:	0a09      	lsrs	r1, r1, #8
 801e0d2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e0d6:	fb04 540e 	mla	r4, r4, lr, r5
 801e0da:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e0de:	fb01 4100 	mla	r1, r1, r0, r4
 801e0e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e0e6:	0a09      	lsrs	r1, r1, #8
 801e0e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e0ec:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e0f0:	fb07 f70a 	mul.w	r7, r7, sl
 801e0f4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e0f8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e0fc:	fb03 7101 	mla	r1, r3, r1, r7
 801e100:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e104:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e108:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e10c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e110:	fb00 e101 	mla	r1, r0, r1, lr
 801e114:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801e118:	9a00      	ldr	r2, [sp, #0]
 801e11a:	b287      	uxth	r7, r0
 801e11c:	437a      	muls	r2, r7
 801e11e:	0a09      	lsrs	r1, r1, #8
 801e120:	1c53      	adds	r3, r2, #1
 801e122:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e126:	4321      	orrs	r1, r4
 801e128:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e12c:	1235      	asrs	r5, r6, #8
 801e12e:	0c0a      	lsrs	r2, r1, #16
 801e130:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e134:	b2db      	uxtb	r3, r3
 801e136:	fb12 f207 	smulbb	r2, r2, r7
 801e13a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e13e:	fb05 2503 	mla	r5, r5, r3, r2
 801e142:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e146:	10f2      	asrs	r2, r6, #3
 801e148:	b2c8      	uxtb	r0, r1
 801e14a:	00f6      	lsls	r6, r6, #3
 801e14c:	fb14 f407 	smulbb	r4, r4, r7
 801e150:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e154:	b2f6      	uxtb	r6, r6
 801e156:	fb10 f007 	smulbb	r0, r0, r7
 801e15a:	fb02 4203 	mla	r2, r2, r3, r4
 801e15e:	b2ad      	uxth	r5, r5
 801e160:	fb06 0303 	mla	r3, r6, r3, r0
 801e164:	b299      	uxth	r1, r3
 801e166:	b294      	uxth	r4, r2
 801e168:	1c6b      	adds	r3, r5, #1
 801e16a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e16e:	1c62      	adds	r2, r4, #1
 801e170:	1c4b      	adds	r3, r1, #1
 801e172:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e176:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e17a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e17e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e182:	0952      	lsrs	r2, r2, #5
 801e184:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e188:	432b      	orrs	r3, r5
 801e18a:	4313      	orrs	r3, r2
 801e18c:	9a02      	ldr	r2, [sp, #8]
 801e18e:	8013      	strh	r3, [r2, #0]
 801e190:	b005      	add	sp, #20
 801e192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e196:	2500      	movs	r5, #0
 801e198:	e6ef      	b.n	801df7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e19a:	2100      	movs	r1, #0
 801e19c:	460d      	mov	r5, r1
 801e19e:	e6f7      	b.n	801df90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e1a0:	2100      	movs	r1, #0
 801e1a2:	e6f5      	b.n	801df90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e1a4:	4631      	mov	r1, r6
 801e1a6:	e6f3      	b.n	801df90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e1a8:	2400      	movs	r4, #0
 801e1aa:	e702      	b.n	801dfb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e1ac:	2200      	movs	r2, #0
 801e1ae:	4614      	mov	r4, r2
 801e1b0:	e70b      	b.n	801dfca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e1b2:	4602      	mov	r2, r0
 801e1b4:	4604      	mov	r4, r0
 801e1b6:	e708      	b.n	801dfca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e1b8:	2200      	movs	r2, #0
 801e1ba:	e706      	b.n	801dfca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e1bc:	4632      	mov	r2, r6
 801e1be:	e704      	b.n	801dfca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e1c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e1c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1c4:	b09d      	sub	sp, #116	; 0x74
 801e1c6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801e1ca:	9219      	str	r2, [sp, #100]	; 0x64
 801e1cc:	9307      	str	r3, [sp, #28]
 801e1ce:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801e1d0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801e1d4:	931a      	str	r3, [sp, #104]	; 0x68
 801e1d6:	9117      	str	r1, [sp, #92]	; 0x5c
 801e1d8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801e1dc:	901b      	str	r0, [sp, #108]	; 0x6c
 801e1de:	6850      	ldr	r0, [r2, #4]
 801e1e0:	6812      	ldr	r2, [r2, #0]
 801e1e2:	fb00 1303 	mla	r3, r0, r3, r1
 801e1e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e1ea:	930a      	str	r3, [sp, #40]	; 0x28
 801e1ec:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e1ee:	681b      	ldr	r3, [r3, #0]
 801e1f0:	9310      	str	r3, [sp, #64]	; 0x40
 801e1f2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e1f6:	930b      	str	r3, [sp, #44]	; 0x2c
 801e1f8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e1fa:	2b00      	cmp	r3, #0
 801e1fc:	dc03      	bgt.n	801e206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e1fe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e200:	2b00      	cmp	r3, #0
 801e202:	f340 8375 	ble.w	801e8f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e206:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e208:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e20c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e210:	1e48      	subs	r0, r1, #1
 801e212:	1e57      	subs	r7, r2, #1
 801e214:	9b07      	ldr	r3, [sp, #28]
 801e216:	2b00      	cmp	r3, #0
 801e218:	f340 818e 	ble.w	801e538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e21c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e220:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e224:	d406      	bmi.n	801e234 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e226:	4584      	cmp	ip, r0
 801e228:	da04      	bge.n	801e234 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e22a:	2b00      	cmp	r3, #0
 801e22c:	db02      	blt.n	801e234 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e22e:	42bb      	cmp	r3, r7
 801e230:	f2c0 8183 	blt.w	801e53a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e234:	f11c 0c01 	adds.w	ip, ip, #1
 801e238:	f100 8173 	bmi.w	801e522 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e23c:	4561      	cmp	r1, ip
 801e23e:	f2c0 8170 	blt.w	801e522 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e242:	3301      	adds	r3, #1
 801e244:	f100 816d 	bmi.w	801e522 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e248:	429a      	cmp	r2, r3
 801e24a:	f2c0 816a 	blt.w	801e522 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e24e:	9b07      	ldr	r3, [sp, #28]
 801e250:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e252:	9318      	str	r3, [sp, #96]	; 0x60
 801e254:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e256:	2b00      	cmp	r3, #0
 801e258:	f340 818c 	ble.w	801e574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e25c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e25e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e260:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e264:	689b      	ldr	r3, [r3, #8]
 801e266:	1422      	asrs	r2, r4, #16
 801e268:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e26c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e270:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e274:	f100 81cd 	bmi.w	801e612 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e278:	f103 38ff 	add.w	r8, r3, #4294967295
 801e27c:	4542      	cmp	r2, r8
 801e27e:	f280 81c8 	bge.w	801e612 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e282:	f1bc 0f00 	cmp.w	ip, #0
 801e286:	f2c0 81c4 	blt.w	801e612 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e28a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e28e:	45c4      	cmp	ip, r8
 801e290:	f280 81bf 	bge.w	801e612 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e294:	b21b      	sxth	r3, r3
 801e296:	fb0c 2203 	mla	r2, ip, r3, r2
 801e29a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e29c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e2a0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e2a4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e2a8:	2800      	cmp	r0, #0
 801e2aa:	f000 81a9 	beq.w	801e600 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e2ae:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e2b2:	950c      	str	r5, [sp, #48]	; 0x30
 801e2b4:	0e2d      	lsrs	r5, r5, #24
 801e2b6:	9513      	str	r5, [sp, #76]	; 0x4c
 801e2b8:	b181      	cbz	r1, 801e2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e2ba:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e2be:	3b01      	subs	r3, #1
 801e2c0:	009b      	lsls	r3, r3, #2
 801e2c2:	3304      	adds	r3, #4
 801e2c4:	eb08 0c03 	add.w	ip, r8, r3
 801e2c8:	f858 3003 	ldr.w	r3, [r8, r3]
 801e2cc:	9308      	str	r3, [sp, #32]
 801e2ce:	0e1b      	lsrs	r3, r3, #24
 801e2d0:	9311      	str	r3, [sp, #68]	; 0x44
 801e2d2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e2d6:	930d      	str	r3, [sp, #52]	; 0x34
 801e2d8:	0e1b      	lsrs	r3, r3, #24
 801e2da:	9314      	str	r3, [sp, #80]	; 0x50
 801e2dc:	b280      	uxth	r0, r0
 801e2de:	b289      	uxth	r1, r1
 801e2e0:	fb00 f901 	mul.w	r9, r0, r1
 801e2e4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e2e8:	0100      	lsls	r0, r0, #4
 801e2ea:	eba0 0809 	sub.w	r8, r0, r9
 801e2ee:	b289      	uxth	r1, r1
 801e2f0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e2f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e2f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e2f8:	fa1f f888 	uxth.w	r8, r8
 801e2fc:	1a5b      	subs	r3, r3, r1
 801e2fe:	b29b      	uxth	r3, r3
 801e300:	fb08 f000 	mul.w	r0, r8, r0
 801e304:	fb03 000e 	mla	r0, r3, lr, r0
 801e308:	fb01 0005 	mla	r0, r1, r5, r0
 801e30c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e30e:	fb09 0005 	mla	r0, r9, r5, r0
 801e312:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e316:	2800      	cmp	r0, #0
 801e318:	f000 80fa 	beq.w	801e510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e31c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e320:	d01b      	beq.n	801e35a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e322:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e326:	fb0e fa0a 	mul.w	sl, lr, sl
 801e32a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e32e:	fb0e fe02 	mul.w	lr, lr, r2
 801e332:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e336:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e33a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e33e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e342:	4452      	add	r2, sl
 801e344:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e348:	0a12      	lsrs	r2, r2, #8
 801e34a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e34e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e352:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e356:	ea42 020c 	orr.w	r2, r2, ip
 801e35a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e35c:	2dff      	cmp	r5, #255	; 0xff
 801e35e:	d021      	beq.n	801e3a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e360:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e362:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e366:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e368:	fb05 fb0b 	mul.w	fp, r5, fp
 801e36c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e36e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e372:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e374:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e378:	fb05 fa0a 	mul.w	sl, r5, sl
 801e37c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e380:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e384:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e388:	44de      	add	lr, fp
 801e38a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e38e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e392:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e396:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e39a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e39e:	ea4e 050a 	orr.w	r5, lr, sl
 801e3a2:	950c      	str	r5, [sp, #48]	; 0x30
 801e3a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e3a6:	2dff      	cmp	r5, #255	; 0xff
 801e3a8:	d021      	beq.n	801e3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e3aa:	9d08      	ldr	r5, [sp, #32]
 801e3ac:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e3b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e3b2:	fb05 fb0b 	mul.w	fp, r5, fp
 801e3b6:	9d08      	ldr	r5, [sp, #32]
 801e3b8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e3bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e3be:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e3c2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e3c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e3ca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e3ce:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e3d2:	44de      	add	lr, fp
 801e3d4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e3d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e3dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e3e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e3e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e3e8:	ea4e 050a 	orr.w	r5, lr, sl
 801e3ec:	9508      	str	r5, [sp, #32]
 801e3ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e3f0:	2dff      	cmp	r5, #255	; 0xff
 801e3f2:	d021      	beq.n	801e438 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e3f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e3f6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e3fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e3fc:	fb05 fb0b 	mul.w	fp, r5, fp
 801e400:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e402:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e406:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e408:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e40c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e410:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e414:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e418:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e41c:	44de      	add	lr, fp
 801e41e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e422:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e426:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e42a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e42e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e432:	ea4e 050a 	orr.w	r5, lr, sl
 801e436:	950d      	str	r5, [sp, #52]	; 0x34
 801e438:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e43a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e43e:	9d08      	ldr	r5, [sp, #32]
 801e440:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e444:	fb08 fc0c 	mul.w	ip, r8, ip
 801e448:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e44c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e450:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e452:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e456:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e45a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e45c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e460:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e464:	fb08 f80e 	mul.w	r8, r8, lr
 801e468:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e46c:	fb03 8202 	mla	r2, r3, r2, r8
 801e470:	9b08      	ldr	r3, [sp, #32]
 801e472:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e474:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e478:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e47a:	fb01 220a 	mla	r2, r1, sl, r2
 801e47e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e482:	fb09 2901 	mla	r9, r9, r1, r2
 801e486:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e488:	883b      	ldrh	r3, [r7, #0]
 801e48a:	4342      	muls	r2, r0
 801e48c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e490:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e494:	1c50      	adds	r0, r2, #1
 801e496:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e49a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e49e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e4a2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e4a6:	1219      	asrs	r1, r3, #8
 801e4a8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e4ac:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e4b0:	b2c0      	uxtb	r0, r0
 801e4b2:	fb12 f205 	smulbb	r2, r2, r5
 801e4b6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e4ba:	fb01 2100 	mla	r1, r1, r0, r2
 801e4be:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e4c2:	10da      	asrs	r2, r3, #3
 801e4c4:	fa5f fc8c 	uxtb.w	ip, ip
 801e4c8:	00db      	lsls	r3, r3, #3
 801e4ca:	fb1c fc05 	smulbb	ip, ip, r5
 801e4ce:	b2db      	uxtb	r3, r3
 801e4d0:	b289      	uxth	r1, r1
 801e4d2:	fb03 c300 	mla	r3, r3, r0, ip
 801e4d6:	fa1f fc83 	uxth.w	ip, r3
 801e4da:	1c4b      	adds	r3, r1, #1
 801e4dc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e4e0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e4e4:	fb1e fe05 	smulbb	lr, lr, r5
 801e4e8:	f10c 0301 	add.w	r3, ip, #1
 801e4ec:	fb02 e200 	mla	r2, r2, r0, lr
 801e4f0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e4f4:	b292      	uxth	r2, r2
 801e4f6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e4fa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e4fe:	430b      	orrs	r3, r1
 801e500:	1c51      	adds	r1, r2, #1
 801e502:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e506:	0952      	lsrs	r2, r2, #5
 801e508:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e50c:	4313      	orrs	r3, r2
 801e50e:	803b      	strh	r3, [r7, #0]
 801e510:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e512:	441c      	add	r4, r3
 801e514:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e516:	441e      	add	r6, r3
 801e518:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e51a:	3b01      	subs	r3, #1
 801e51c:	3702      	adds	r7, #2
 801e51e:	9318      	str	r3, [sp, #96]	; 0x60
 801e520:	e698      	b.n	801e254 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e522:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e524:	441c      	add	r4, r3
 801e526:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e528:	441e      	add	r6, r3
 801e52a:	9b07      	ldr	r3, [sp, #28]
 801e52c:	3b01      	subs	r3, #1
 801e52e:	9307      	str	r3, [sp, #28]
 801e530:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e532:	3302      	adds	r3, #2
 801e534:	930a      	str	r3, [sp, #40]	; 0x28
 801e536:	e66d      	b.n	801e214 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e538:	d023      	beq.n	801e582 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e53a:	9b07      	ldr	r3, [sp, #28]
 801e53c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e53e:	3b01      	subs	r3, #1
 801e540:	fb00 4003 	mla	r0, r0, r3, r4
 801e544:	1400      	asrs	r0, r0, #16
 801e546:	f53f ae82 	bmi.w	801e24e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e54a:	3901      	subs	r1, #1
 801e54c:	4288      	cmp	r0, r1
 801e54e:	f6bf ae7e 	bge.w	801e24e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e552:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e554:	fb01 6303 	mla	r3, r1, r3, r6
 801e558:	141b      	asrs	r3, r3, #16
 801e55a:	f53f ae78 	bmi.w	801e24e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e55e:	3a01      	subs	r2, #1
 801e560:	4293      	cmp	r3, r2
 801e562:	f6bf ae74 	bge.w	801e24e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e566:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e56a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e56e:	f1bb 0f00 	cmp.w	fp, #0
 801e572:	dc6c      	bgt.n	801e64e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e574:	9b07      	ldr	r3, [sp, #28]
 801e576:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e57a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e57c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e580:	930a      	str	r3, [sp, #40]	; 0x28
 801e582:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e584:	2b00      	cmp	r3, #0
 801e586:	f340 81b3 	ble.w	801e8f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e58a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e58e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e592:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e596:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e598:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e59c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e5a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e5a4:	eef0 6a62 	vmov.f32	s13, s5
 801e5a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e5ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e5b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e5b4:	ee16 4a90 	vmov	r4, s13
 801e5b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e5bc:	eef0 6a43 	vmov.f32	s13, s6
 801e5c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e5c4:	ee12 2a90 	vmov	r2, s5
 801e5c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e5cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5d0:	ee13 2a10 	vmov	r2, s6
 801e5d4:	9329      	str	r3, [sp, #164]	; 0xa4
 801e5d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e5d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5dc:	932a      	str	r3, [sp, #168]	; 0xa8
 801e5de:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e5e0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e5e2:	3b01      	subs	r3, #1
 801e5e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e5e8:	9317      	str	r3, [sp, #92]	; 0x5c
 801e5ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e5ec:	bf08      	it	eq
 801e5ee:	4613      	moveq	r3, r2
 801e5f0:	ee16 6a90 	vmov	r6, s13
 801e5f4:	9307      	str	r3, [sp, #28]
 801e5f6:	eeb0 3a67 	vmov.f32	s6, s15
 801e5fa:	eef0 2a47 	vmov.f32	s5, s14
 801e5fe:	e5fb      	b.n	801e1f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e600:	2900      	cmp	r1, #0
 801e602:	f43f ae6b 	beq.w	801e2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e606:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e60a:	9308      	str	r3, [sp, #32]
 801e60c:	0e1b      	lsrs	r3, r3, #24
 801e60e:	9311      	str	r3, [sp, #68]	; 0x44
 801e610:	e664      	b.n	801e2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e612:	f112 0801 	adds.w	r8, r2, #1
 801e616:	f53f af7b 	bmi.w	801e510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e61a:	4543      	cmp	r3, r8
 801e61c:	f6ff af78 	blt.w	801e510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e620:	f11c 0801 	adds.w	r8, ip, #1
 801e624:	f53f af74 	bmi.w	801e510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e628:	45c6      	cmp	lr, r8
 801e62a:	f6ff af71 	blt.w	801e510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e62e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e630:	9201      	str	r2, [sp, #4]
 801e632:	fa0f f28e 	sxth.w	r2, lr
 801e636:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e63a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e63e:	9200      	str	r2, [sp, #0]
 801e640:	b21b      	sxth	r3, r3
 801e642:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e644:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e646:	4639      	mov	r1, r7
 801e648:	f7ff fc79 	bl	801df3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e64c:	e760      	b.n	801e510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e64e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e650:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e652:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e656:	1427      	asrs	r7, r4, #16
 801e658:	1433      	asrs	r3, r6, #16
 801e65a:	fb01 7303 	mla	r3, r1, r3, r7
 801e65e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e662:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e666:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e66a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e66e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e672:	2a00      	cmp	r2, #0
 801e674:	f000 8133 	beq.w	801e8de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e678:	687d      	ldr	r5, [r7, #4]
 801e67a:	950e      	str	r5, [sp, #56]	; 0x38
 801e67c:	0e2d      	lsrs	r5, r5, #24
 801e67e:	9515      	str	r5, [sp, #84]	; 0x54
 801e680:	b178      	cbz	r0, 801e6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e682:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e686:	3901      	subs	r1, #1
 801e688:	0089      	lsls	r1, r1, #2
 801e68a:	3104      	adds	r1, #4
 801e68c:	eb07 0e01 	add.w	lr, r7, r1
 801e690:	5879      	ldr	r1, [r7, r1]
 801e692:	9109      	str	r1, [sp, #36]	; 0x24
 801e694:	0e09      	lsrs	r1, r1, #24
 801e696:	9112      	str	r1, [sp, #72]	; 0x48
 801e698:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e69c:	910f      	str	r1, [sp, #60]	; 0x3c
 801e69e:	0e09      	lsrs	r1, r1, #24
 801e6a0:	9116      	str	r1, [sp, #88]	; 0x58
 801e6a2:	b292      	uxth	r2, r2
 801e6a4:	b280      	uxth	r0, r0
 801e6a6:	fb02 f800 	mul.w	r8, r2, r0
 801e6aa:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e6ae:	0112      	lsls	r2, r2, #4
 801e6b0:	eba2 0e08 	sub.w	lr, r2, r8
 801e6b4:	b280      	uxth	r0, r0
 801e6b6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e6ba:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e6bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e6be:	fa1f fe8e 	uxth.w	lr, lr
 801e6c2:	1a12      	subs	r2, r2, r0
 801e6c4:	b292      	uxth	r2, r2
 801e6c6:	fb0e f101 	mul.w	r1, lr, r1
 801e6ca:	fb02 110c 	mla	r1, r2, ip, r1
 801e6ce:	fb00 1105 	mla	r1, r0, r5, r1
 801e6d2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e6d4:	fb08 1105 	mla	r1, r8, r5, r1
 801e6d8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e6dc:	2900      	cmp	r1, #0
 801e6de:	f000 80f5 	beq.w	801e8cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e6e2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e6e6:	d019      	beq.n	801e71c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e6e8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e6ec:	fb0c fa0a 	mul.w	sl, ip, sl
 801e6f0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e6f4:	fb0c fc03 	mul.w	ip, ip, r3
 801e6f8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e6fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e700:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e704:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e708:	4453      	add	r3, sl
 801e70a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e70e:	0a1b      	lsrs	r3, r3, #8
 801e710:	0a3f      	lsrs	r7, r7, #8
 801e712:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e716:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e71a:	433b      	orrs	r3, r7
 801e71c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e71e:	2dff      	cmp	r5, #255	; 0xff
 801e720:	d020      	beq.n	801e764 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e722:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e724:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e728:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e72a:	436f      	muls	r7, r5
 801e72c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e72e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e732:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e734:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e738:	fb05 fa0a 	mul.w	sl, r5, sl
 801e73c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e740:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e744:	44bc      	add	ip, r7
 801e746:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e74a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e74e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e752:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e756:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e75a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e75e:	ea4c 050a 	orr.w	r5, ip, sl
 801e762:	950e      	str	r5, [sp, #56]	; 0x38
 801e764:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e766:	2dff      	cmp	r5, #255	; 0xff
 801e768:	d020      	beq.n	801e7ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e76a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e76c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e770:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e772:	436f      	muls	r7, r5
 801e774:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e776:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e77a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e77c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e780:	fb05 fa0a 	mul.w	sl, r5, sl
 801e784:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e788:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e78c:	44bc      	add	ip, r7
 801e78e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e792:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e796:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e79a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e79e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e7a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e7a6:	ea4c 050a 	orr.w	r5, ip, sl
 801e7aa:	9509      	str	r5, [sp, #36]	; 0x24
 801e7ac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e7ae:	2dff      	cmp	r5, #255	; 0xff
 801e7b0:	d020      	beq.n	801e7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e7b2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e7b4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e7b8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e7ba:	436f      	muls	r7, r5
 801e7bc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e7be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e7c2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e7c4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e7c8:	fb05 fa0a 	mul.w	sl, r5, sl
 801e7cc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e7d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e7d4:	44bc      	add	ip, r7
 801e7d6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e7da:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e7de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e7e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e7e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e7ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e7ee:	ea4c 050a 	orr.w	r5, ip, sl
 801e7f2:	950f      	str	r5, [sp, #60]	; 0x3c
 801e7f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e7f6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e7fa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e7fc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e800:	fb0e f707 	mul.w	r7, lr, r7
 801e804:	fb02 770c 	mla	r7, r2, ip, r7
 801e808:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e80c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e80e:	fb00 770c 	mla	r7, r0, ip, r7
 801e812:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e816:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e818:	fb08 770c 	mla	r7, r8, ip, r7
 801e81c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e820:	fb0e fe0c 	mul.w	lr, lr, ip
 801e824:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e828:	fb02 e303 	mla	r3, r2, r3, lr
 801e82c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e82e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e830:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e834:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e836:	fb00 330a 	mla	r3, r0, sl, r3
 801e83a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e83e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e842:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e844:	f8b9 0000 	ldrh.w	r0, [r9]
 801e848:	4359      	muls	r1, r3
 801e84a:	0a3f      	lsrs	r7, r7, #8
 801e84c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e850:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e854:	1c4b      	adds	r3, r1, #1
 801e856:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e85a:	ea47 070c 	orr.w	r7, r7, ip
 801e85e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e862:	1202      	asrs	r2, r0, #8
 801e864:	0c3b      	lsrs	r3, r7, #16
 801e866:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e86a:	b2c9      	uxtb	r1, r1
 801e86c:	fb13 f305 	smulbb	r3, r3, r5
 801e870:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e874:	fb02 3201 	mla	r2, r2, r1, r3
 801e878:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e87c:	10c3      	asrs	r3, r0, #3
 801e87e:	b2ff      	uxtb	r7, r7
 801e880:	00c0      	lsls	r0, r0, #3
 801e882:	b2c0      	uxtb	r0, r0
 801e884:	fb17 f705 	smulbb	r7, r7, r5
 801e888:	fb00 7001 	mla	r0, r0, r1, r7
 801e88c:	b292      	uxth	r2, r2
 801e88e:	fb1c fc05 	smulbb	ip, ip, r5
 801e892:	b280      	uxth	r0, r0
 801e894:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e898:	fb03 c301 	mla	r3, r3, r1, ip
 801e89c:	1c51      	adds	r1, r2, #1
 801e89e:	f100 0c01 	add.w	ip, r0, #1
 801e8a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e8a6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e8aa:	b29b      	uxth	r3, r3
 801e8ac:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e8b0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e8b4:	ea4c 0202 	orr.w	r2, ip, r2
 801e8b8:	f103 0c01 	add.w	ip, r3, #1
 801e8bc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e8c0:	095b      	lsrs	r3, r3, #5
 801e8c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e8c6:	431a      	orrs	r2, r3
 801e8c8:	f8a9 2000 	strh.w	r2, [r9]
 801e8cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e8ce:	441c      	add	r4, r3
 801e8d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e8d2:	f109 0902 	add.w	r9, r9, #2
 801e8d6:	441e      	add	r6, r3
 801e8d8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e8dc:	e647      	b.n	801e56e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e8de:	2800      	cmp	r0, #0
 801e8e0:	f43f aedf 	beq.w	801e6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e8e4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e8e8:	9109      	str	r1, [sp, #36]	; 0x24
 801e8ea:	0e09      	lsrs	r1, r1, #24
 801e8ec:	9112      	str	r1, [sp, #72]	; 0x48
 801e8ee:	e6d8      	b.n	801e6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e8f0:	b01d      	add	sp, #116	; 0x74
 801e8f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e8f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e8f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8fa:	b085      	sub	sp, #20
 801e8fc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e900:	9102      	str	r1, [sp, #8]
 801e902:	2c00      	cmp	r4, #0
 801e904:	fb04 7103 	mla	r1, r4, r3, r7
 801e908:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e90c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e910:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e914:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e918:	f2c0 810c 	blt.w	801eb34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e91c:	45a6      	cmp	lr, r4
 801e91e:	f340 8109 	ble.w	801eb34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e922:	2f00      	cmp	r7, #0
 801e924:	f2c0 8104 	blt.w	801eb30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e928:	42bb      	cmp	r3, r7
 801e92a:	f340 8101 	ble.w	801eb30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e92e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e932:	1c7a      	adds	r2, r7, #1
 801e934:	f100 8101 	bmi.w	801eb3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e938:	4293      	cmp	r3, r2
 801e93a:	f340 80fe 	ble.w	801eb3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e93e:	2e00      	cmp	r6, #0
 801e940:	f000 80fd 	beq.w	801eb3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e944:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e948:	3401      	adds	r4, #1
 801e94a:	f100 80fc 	bmi.w	801eb46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e94e:	45a6      	cmp	lr, r4
 801e950:	f340 80f9 	ble.w	801eb46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e954:	2800      	cmp	r0, #0
 801e956:	f000 80f9 	beq.w	801eb4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e95a:	2f00      	cmp	r7, #0
 801e95c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e960:	f2c0 80ef 	blt.w	801eb42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e964:	42bb      	cmp	r3, r7
 801e966:	f340 80ec 	ble.w	801eb42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e96a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e96e:	3701      	adds	r7, #1
 801e970:	f100 80ef 	bmi.w	801eb52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e974:	42bb      	cmp	r3, r7
 801e976:	f340 80ec 	ble.w	801eb52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e97a:	2e00      	cmp	r6, #0
 801e97c:	f000 80eb 	beq.w	801eb56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e980:	6852      	ldr	r2, [r2, #4]
 801e982:	b2b6      	uxth	r6, r6
 801e984:	b280      	uxth	r0, r0
 801e986:	fb00 fe06 	mul.w	lr, r0, r6
 801e98a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e98e:	0136      	lsls	r6, r6, #4
 801e990:	eba6 070e 	sub.w	r7, r6, lr
 801e994:	b280      	uxth	r0, r0
 801e996:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e99a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e99e:	b2bf      	uxth	r7, r7
 801e9a0:	1a1b      	subs	r3, r3, r0
 801e9a2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e9a6:	b29b      	uxth	r3, r3
 801e9a8:	fb07 f60a 	mul.w	r6, r7, sl
 801e9ac:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e9b0:	fb0b 6603 	mla	r6, fp, r3, r6
 801e9b4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e9b8:	fb00 6609 	mla	r6, r0, r9, r6
 801e9bc:	fb0e 6608 	mla	r6, lr, r8, r6
 801e9c0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e9c4:	9600      	str	r6, [sp, #0]
 801e9c6:	2e00      	cmp	r6, #0
 801e9c8:	f000 80af 	beq.w	801eb2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e9cc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e9d0:	fb0b fc0c 	mul.w	ip, fp, ip
 801e9d4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e9d8:	fb0b f505 	mul.w	r5, fp, r5
 801e9dc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e9e0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e9e4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e9e8:	44dc      	add	ip, fp
 801e9ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9ee:	9501      	str	r5, [sp, #4]
 801e9f0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e9f4:	9503      	str	r5, [sp, #12]
 801e9f6:	9d01      	ldr	r5, [sp, #4]
 801e9f8:	9e02      	ldr	r6, [sp, #8]
 801e9fa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e9fe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ea02:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ea06:	fb0a fc0c 	mul.w	ip, sl, ip
 801ea0a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ea0e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ea12:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ea16:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ea1a:	4465      	add	r5, ip
 801ea1c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ea20:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ea24:	fb09 fc0c 	mul.w	ip, r9, ip
 801ea28:	fb09 f904 	mul.w	r9, r9, r4
 801ea2c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ea30:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ea34:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ea38:	fb08 f404 	mul.w	r4, r8, r4
 801ea3c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ea40:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ea44:	fb08 f802 	mul.w	r8, r8, r2
 801ea48:	fb0a fa01 	mul.w	sl, sl, r1
 801ea4c:	0a22      	lsrs	r2, r4, #8
 801ea4e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ea52:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ea56:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ea5a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ea5e:	4414      	add	r4, r2
 801ea60:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ea64:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ea68:	0a2d      	lsrs	r5, r5, #8
 801ea6a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ea6e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ea72:	9a03      	ldr	r2, [sp, #12]
 801ea74:	8836      	ldrh	r6, [r6, #0]
 801ea76:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ea7a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ea7e:	437d      	muls	r5, r7
 801ea80:	4461      	add	r1, ip
 801ea82:	0a24      	lsrs	r4, r4, #8
 801ea84:	fb02 5503 	mla	r5, r2, r3, r5
 801ea88:	0a09      	lsrs	r1, r1, #8
 801ea8a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ea8e:	fb04 540e 	mla	r4, r4, lr, r5
 801ea92:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ea96:	fb01 4100 	mla	r1, r1, r0, r4
 801ea9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ea9e:	0a09      	lsrs	r1, r1, #8
 801eaa0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eaa4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801eaa8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801eaac:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801eab0:	fb07 f70a 	mul.w	r7, r7, sl
 801eab4:	fb03 7101 	mla	r1, r3, r1, r7
 801eab8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801eabc:	9b00      	ldr	r3, [sp, #0]
 801eabe:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801eac2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801eac6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801eaca:	fb00 e101 	mla	r1, r0, r1, lr
 801eace:	43da      	mvns	r2, r3
 801ead0:	1233      	asrs	r3, r6, #8
 801ead2:	b2d2      	uxtb	r2, r2
 801ead4:	10f0      	asrs	r0, r6, #3
 801ead6:	0a09      	lsrs	r1, r1, #8
 801ead8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801eadc:	00f6      	lsls	r6, r6, #3
 801eade:	4353      	muls	r3, r2
 801eae0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801eae4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801eae8:	b2f6      	uxtb	r6, r6
 801eaea:	4321      	orrs	r1, r4
 801eaec:	4350      	muls	r0, r2
 801eaee:	4356      	muls	r6, r2
 801eaf0:	1c5a      	adds	r2, r3, #1
 801eaf2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801eaf6:	0c0b      	lsrs	r3, r1, #16
 801eaf8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eafc:	1c42      	adds	r2, r0, #1
 801eafe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801eb02:	0a0a      	lsrs	r2, r1, #8
 801eb04:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801eb08:	021b      	lsls	r3, r3, #8
 801eb0a:	00d2      	lsls	r2, r2, #3
 801eb0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb10:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801eb14:	4313      	orrs	r3, r2
 801eb16:	1c72      	adds	r2, r6, #1
 801eb18:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801eb1c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801eb20:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801eb24:	4319      	orrs	r1, r3
 801eb26:	9b02      	ldr	r3, [sp, #8]
 801eb28:	8019      	strh	r1, [r3, #0]
 801eb2a:	b005      	add	sp, #20
 801eb2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb30:	2500      	movs	r5, #0
 801eb32:	e6fe      	b.n	801e932 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801eb34:	2100      	movs	r1, #0
 801eb36:	460d      	mov	r5, r1
 801eb38:	e706      	b.n	801e948 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801eb3a:	2100      	movs	r1, #0
 801eb3c:	e704      	b.n	801e948 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801eb3e:	4631      	mov	r1, r6
 801eb40:	e702      	b.n	801e948 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801eb42:	2400      	movs	r4, #0
 801eb44:	e713      	b.n	801e96e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801eb46:	2200      	movs	r2, #0
 801eb48:	4614      	mov	r4, r2
 801eb4a:	e71a      	b.n	801e982 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801eb4c:	4602      	mov	r2, r0
 801eb4e:	4604      	mov	r4, r0
 801eb50:	e717      	b.n	801e982 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801eb52:	2200      	movs	r2, #0
 801eb54:	e715      	b.n	801e982 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801eb56:	4632      	mov	r2, r6
 801eb58:	e713      	b.n	801e982 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801eb5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eb5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb60:	b09b      	sub	sp, #108	; 0x6c
 801eb62:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801eb66:	9218      	str	r2, [sp, #96]	; 0x60
 801eb68:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801eb6a:	9116      	str	r1, [sp, #88]	; 0x58
 801eb6c:	9307      	str	r3, [sp, #28]
 801eb6e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801eb72:	9019      	str	r0, [sp, #100]	; 0x64
 801eb74:	6850      	ldr	r0, [r2, #4]
 801eb76:	6812      	ldr	r2, [r2, #0]
 801eb78:	fb00 1303 	mla	r3, r0, r3, r1
 801eb7c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eb80:	930a      	str	r3, [sp, #40]	; 0x28
 801eb82:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eb84:	681b      	ldr	r3, [r3, #0]
 801eb86:	930f      	str	r3, [sp, #60]	; 0x3c
 801eb88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801eb8a:	2b00      	cmp	r3, #0
 801eb8c:	dc03      	bgt.n	801eb96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801eb8e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801eb90:	2b00      	cmp	r3, #0
 801eb92:	f340 8386 	ble.w	801f2a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801eb96:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eb98:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eb9c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eba0:	1e48      	subs	r0, r1, #1
 801eba2:	1e57      	subs	r7, r2, #1
 801eba4:	9b07      	ldr	r3, [sp, #28]
 801eba6:	2b00      	cmp	r3, #0
 801eba8:	f340 8166 	ble.w	801ee78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ebac:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ebb0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ebb4:	d406      	bmi.n	801ebc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ebb6:	4584      	cmp	ip, r0
 801ebb8:	da04      	bge.n	801ebc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ebba:	2b00      	cmp	r3, #0
 801ebbc:	db02      	blt.n	801ebc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ebbe:	42bb      	cmp	r3, r7
 801ebc0:	f2c0 815b 	blt.w	801ee7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801ebc4:	f11c 0c01 	adds.w	ip, ip, #1
 801ebc8:	f100 814b 	bmi.w	801ee62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ebcc:	4561      	cmp	r1, ip
 801ebce:	f2c0 8148 	blt.w	801ee62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ebd2:	3301      	adds	r3, #1
 801ebd4:	f100 8145 	bmi.w	801ee62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ebd8:	429a      	cmp	r2, r3
 801ebda:	f2c0 8142 	blt.w	801ee62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ebde:	9b07      	ldr	r3, [sp, #28]
 801ebe0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ebe2:	9317      	str	r3, [sp, #92]	; 0x5c
 801ebe4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ebe6:	2b00      	cmp	r3, #0
 801ebe8:	f340 8165 	ble.w	801eeb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ebec:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801ebee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ebf0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ebf4:	689b      	ldr	r3, [r3, #8]
 801ebf6:	1422      	asrs	r2, r4, #16
 801ebf8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ebfc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ec00:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ec04:	f100 81d5 	bmi.w	801efb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ec08:	f103 38ff 	add.w	r8, r3, #4294967295
 801ec0c:	4542      	cmp	r2, r8
 801ec0e:	f280 81d0 	bge.w	801efb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ec12:	f1bc 0f00 	cmp.w	ip, #0
 801ec16:	f2c0 81cc 	blt.w	801efb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ec1a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ec1e:	45c4      	cmp	ip, r8
 801ec20:	f280 81c7 	bge.w	801efb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ec24:	b21b      	sxth	r3, r3
 801ec26:	fb0c 2203 	mla	r2, ip, r3, r2
 801ec2a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ec2c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ec30:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ec34:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ec38:	2900      	cmp	r1, #0
 801ec3a:	f000 8182 	beq.w	801ef42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801ec3e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ec42:	950b      	str	r5, [sp, #44]	; 0x2c
 801ec44:	0e2d      	lsrs	r5, r5, #24
 801ec46:	9512      	str	r5, [sp, #72]	; 0x48
 801ec48:	b180      	cbz	r0, 801ec6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ec4a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ec4e:	3b01      	subs	r3, #1
 801ec50:	009b      	lsls	r3, r3, #2
 801ec52:	3304      	adds	r3, #4
 801ec54:	eb08 0c03 	add.w	ip, r8, r3
 801ec58:	f858 3003 	ldr.w	r3, [r8, r3]
 801ec5c:	9308      	str	r3, [sp, #32]
 801ec5e:	0e1b      	lsrs	r3, r3, #24
 801ec60:	9310      	str	r3, [sp, #64]	; 0x40
 801ec62:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ec66:	930c      	str	r3, [sp, #48]	; 0x30
 801ec68:	0e1b      	lsrs	r3, r3, #24
 801ec6a:	9313      	str	r3, [sp, #76]	; 0x4c
 801ec6c:	b289      	uxth	r1, r1
 801ec6e:	b280      	uxth	r0, r0
 801ec70:	fb01 f900 	mul.w	r9, r1, r0
 801ec74:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ec78:	0109      	lsls	r1, r1, #4
 801ec7a:	eba1 0809 	sub.w	r8, r1, r9
 801ec7e:	b280      	uxth	r0, r0
 801ec80:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801ec84:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ec86:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ec88:	fa1f f888 	uxth.w	r8, r8
 801ec8c:	1a09      	subs	r1, r1, r0
 801ec8e:	b289      	uxth	r1, r1
 801ec90:	fb08 f303 	mul.w	r3, r8, r3
 801ec94:	fb01 330e 	mla	r3, r1, lr, r3
 801ec98:	fb00 3305 	mla	r3, r0, r5, r3
 801ec9c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec9e:	fb09 3305 	mla	r3, r9, r5, r3
 801eca2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eca6:	2b00      	cmp	r3, #0
 801eca8:	f000 80d2 	beq.w	801ee50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ecac:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ecb0:	d01b      	beq.n	801ecea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801ecb2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801ecb6:	fb0e fa0a 	mul.w	sl, lr, sl
 801ecba:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ecbe:	fb0e fe02 	mul.w	lr, lr, r2
 801ecc2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ecc6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ecca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ecce:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ecd2:	4452      	add	r2, sl
 801ecd4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ecd8:	0a12      	lsrs	r2, r2, #8
 801ecda:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecde:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ece2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ece6:	ea42 020c 	orr.w	r2, r2, ip
 801ecea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ecec:	2dff      	cmp	r5, #255	; 0xff
 801ecee:	d021      	beq.n	801ed34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801ecf0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ecf2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ecf6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ecf8:	fb05 fb0b 	mul.w	fp, r5, fp
 801ecfc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ecfe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ed02:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ed04:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ed08:	fb05 fa0a 	mul.w	sl, r5, sl
 801ed0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ed10:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ed14:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ed18:	44de      	add	lr, fp
 801ed1a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ed1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ed22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed26:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ed2a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed2e:	ea4e 050a 	orr.w	r5, lr, sl
 801ed32:	950b      	str	r5, [sp, #44]	; 0x2c
 801ed34:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ed36:	2dff      	cmp	r5, #255	; 0xff
 801ed38:	d021      	beq.n	801ed7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801ed3a:	9d08      	ldr	r5, [sp, #32]
 801ed3c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ed40:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ed42:	fb05 fb0b 	mul.w	fp, r5, fp
 801ed46:	9d08      	ldr	r5, [sp, #32]
 801ed48:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ed4c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ed4e:	fb05 fa0e 	mul.w	sl, r5, lr
 801ed52:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ed56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ed5a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ed5e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ed62:	44de      	add	lr, fp
 801ed64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ed68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ed6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ed74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed78:	ea4e 050a 	orr.w	r5, lr, sl
 801ed7c:	9508      	str	r5, [sp, #32]
 801ed7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ed80:	2dff      	cmp	r5, #255	; 0xff
 801ed82:	d021      	beq.n	801edc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801ed84:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ed86:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ed8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ed8c:	fb05 fb0b 	mul.w	fp, r5, fp
 801ed90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ed92:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ed96:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ed98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ed9c:	fb05 fa0a 	mul.w	sl, r5, sl
 801eda0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eda4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eda8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801edac:	44de      	add	lr, fp
 801edae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801edb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801edb6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801edba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801edbe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801edc2:	ea4e 050a 	orr.w	r5, lr, sl
 801edc6:	950c      	str	r5, [sp, #48]	; 0x30
 801edc8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801edca:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801edce:	9d08      	ldr	r5, [sp, #32]
 801edd0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801edd4:	fb08 fc0c 	mul.w	ip, r8, ip
 801edd8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801eddc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ede0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ede2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ede6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801edea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801edec:	fb09 cc0e 	mla	ip, r9, lr, ip
 801edf0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801edf4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801edf8:	fb08 f80e 	mul.w	r8, r8, lr
 801edfc:	fb01 8202 	mla	r2, r1, r2, r8
 801ee00:	9908      	ldr	r1, [sp, #32]
 801ee02:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ee06:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ee08:	fb00 220a 	mla	r2, r0, sl, r2
 801ee0c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801ee10:	fb09 2900 	mla	r9, r9, r0, r2
 801ee14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ee18:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ee1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ee20:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ee24:	ea4c 0c09 	orr.w	ip, ip, r9
 801ee28:	2bff      	cmp	r3, #255	; 0xff
 801ee2a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ee2e:	f040 8091 	bne.w	801ef54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ee32:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ee36:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801ee3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ee3e:	f022 0207 	bic.w	r2, r2, #7
 801ee42:	431a      	orrs	r2, r3
 801ee44:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ee48:	ea4c 0c02 	orr.w	ip, ip, r2
 801ee4c:	f8a7 c000 	strh.w	ip, [r7]
 801ee50:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ee52:	441c      	add	r4, r3
 801ee54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee56:	441e      	add	r6, r3
 801ee58:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ee5a:	3b01      	subs	r3, #1
 801ee5c:	3702      	adds	r7, #2
 801ee5e:	9317      	str	r3, [sp, #92]	; 0x5c
 801ee60:	e6c0      	b.n	801ebe4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ee62:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ee64:	441c      	add	r4, r3
 801ee66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee68:	441e      	add	r6, r3
 801ee6a:	9b07      	ldr	r3, [sp, #28]
 801ee6c:	3b01      	subs	r3, #1
 801ee6e:	9307      	str	r3, [sp, #28]
 801ee70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ee72:	3302      	adds	r3, #2
 801ee74:	930a      	str	r3, [sp, #40]	; 0x28
 801ee76:	e695      	b.n	801eba4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ee78:	d024      	beq.n	801eec4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ee7a:	9b07      	ldr	r3, [sp, #28]
 801ee7c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ee7e:	3b01      	subs	r3, #1
 801ee80:	fb00 4003 	mla	r0, r0, r3, r4
 801ee84:	1400      	asrs	r0, r0, #16
 801ee86:	f53f aeaa 	bmi.w	801ebde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ee8a:	3901      	subs	r1, #1
 801ee8c:	4288      	cmp	r0, r1
 801ee8e:	f6bf aea6 	bge.w	801ebde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ee92:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ee94:	fb01 6303 	mla	r3, r1, r3, r6
 801ee98:	141b      	asrs	r3, r3, #16
 801ee9a:	f53f aea0 	bmi.w	801ebde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ee9e:	3a01      	subs	r2, #1
 801eea0:	4293      	cmp	r3, r2
 801eea2:	f6bf ae9c 	bge.w	801ebde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eea6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801eeaa:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801eeae:	f1bb 0f00 	cmp.w	fp, #0
 801eeb2:	f300 809a 	bgt.w	801efea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801eeb6:	9b07      	ldr	r3, [sp, #28]
 801eeb8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eebc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eebe:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801eec2:	930a      	str	r3, [sp, #40]	; 0x28
 801eec4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801eec6:	2b00      	cmp	r3, #0
 801eec8:	f340 81eb 	ble.w	801f2a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801eecc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eed0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eed4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eed8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eeda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eede:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eee2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eee6:	eef0 6a62 	vmov.f32	s13, s5
 801eeea:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eeee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eef2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eef6:	ee16 4a90 	vmov	r4, s13
 801eefa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eefe:	eef0 6a43 	vmov.f32	s13, s6
 801ef02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ef06:	ee12 2a90 	vmov	r2, s5
 801ef0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ef0e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ef12:	ee13 2a10 	vmov	r2, s6
 801ef16:	9327      	str	r3, [sp, #156]	; 0x9c
 801ef18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ef1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ef1e:	9328      	str	r3, [sp, #160]	; 0xa0
 801ef20:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ef22:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ef24:	3b01      	subs	r3, #1
 801ef26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ef2a:	9316      	str	r3, [sp, #88]	; 0x58
 801ef2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ef2e:	bf08      	it	eq
 801ef30:	4613      	moveq	r3, r2
 801ef32:	ee16 6a90 	vmov	r6, s13
 801ef36:	9307      	str	r3, [sp, #28]
 801ef38:	eeb0 3a67 	vmov.f32	s6, s15
 801ef3c:	eef0 2a47 	vmov.f32	s5, s14
 801ef40:	e622      	b.n	801eb88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ef42:	2800      	cmp	r0, #0
 801ef44:	f43f ae92 	beq.w	801ec6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ef48:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ef4c:	9308      	str	r3, [sp, #32]
 801ef4e:	0e1b      	lsrs	r3, r3, #24
 801ef50:	9310      	str	r3, [sp, #64]	; 0x40
 801ef52:	e68b      	b.n	801ec6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ef54:	8839      	ldrh	r1, [r7, #0]
 801ef56:	4dd4      	ldr	r5, [pc, #848]	; (801f2a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ef58:	43db      	mvns	r3, r3
 801ef5a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ef5e:	fa5f f883 	uxtb.w	r8, r3
 801ef62:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ef66:	fb0e fe08 	mul.w	lr, lr, r8
 801ef6a:	10c8      	asrs	r0, r1, #3
 801ef6c:	00cb      	lsls	r3, r1, #3
 801ef6e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ef72:	f10e 0101 	add.w	r1, lr, #1
 801ef76:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ef7a:	fb00 f008 	mul.w	r0, r0, r8
 801ef7e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ef82:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ef86:	f100 0e01 	add.w	lr, r0, #1
 801ef8a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ef8e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ef92:	b2db      	uxtb	r3, r3
 801ef94:	b2c9      	uxtb	r1, r1
 801ef96:	00d2      	lsls	r2, r2, #3
 801ef98:	fb03 f308 	mul.w	r3, r3, r8
 801ef9c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801efa0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801efa4:	430a      	orrs	r2, r1
 801efa6:	1c59      	adds	r1, r3, #1
 801efa8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801efac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801efb0:	e748      	b.n	801ee44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801efb2:	f112 0801 	adds.w	r8, r2, #1
 801efb6:	f53f af4b 	bmi.w	801ee50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801efba:	4543      	cmp	r3, r8
 801efbc:	f6ff af48 	blt.w	801ee50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801efc0:	f11c 0801 	adds.w	r8, ip, #1
 801efc4:	f53f af44 	bmi.w	801ee50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801efc8:	45c6      	cmp	lr, r8
 801efca:	f6ff af41 	blt.w	801ee50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801efce:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801efd2:	fa0f f28e 	sxth.w	r2, lr
 801efd6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801efda:	9200      	str	r2, [sp, #0]
 801efdc:	b21b      	sxth	r3, r3
 801efde:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801efe0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801efe2:	4639      	mov	r1, r7
 801efe4:	f7ff fc87 	bl	801e8f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801efe8:	e732      	b.n	801ee50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801efea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801efec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801efee:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801eff2:	1421      	asrs	r1, r4, #16
 801eff4:	1433      	asrs	r3, r6, #16
 801eff6:	fb07 1303 	mla	r3, r7, r3, r1
 801effa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801effc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f000:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f004:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f008:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f00c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f010:	2a00      	cmp	r2, #0
 801f012:	f000 8107 	beq.w	801f224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f016:	684d      	ldr	r5, [r1, #4]
 801f018:	950d      	str	r5, [sp, #52]	; 0x34
 801f01a:	0e2d      	lsrs	r5, r5, #24
 801f01c:	9514      	str	r5, [sp, #80]	; 0x50
 801f01e:	b178      	cbz	r0, 801f040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f020:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801f024:	3f01      	subs	r7, #1
 801f026:	00bf      	lsls	r7, r7, #2
 801f028:	3704      	adds	r7, #4
 801f02a:	eb01 0e07 	add.w	lr, r1, r7
 801f02e:	59c9      	ldr	r1, [r1, r7]
 801f030:	9109      	str	r1, [sp, #36]	; 0x24
 801f032:	0e09      	lsrs	r1, r1, #24
 801f034:	9111      	str	r1, [sp, #68]	; 0x44
 801f036:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f03a:	910e      	str	r1, [sp, #56]	; 0x38
 801f03c:	0e09      	lsrs	r1, r1, #24
 801f03e:	9115      	str	r1, [sp, #84]	; 0x54
 801f040:	b292      	uxth	r2, r2
 801f042:	b280      	uxth	r0, r0
 801f044:	fb02 f900 	mul.w	r9, r2, r0
 801f048:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f04c:	0112      	lsls	r2, r2, #4
 801f04e:	eba2 0e09 	sub.w	lr, r2, r9
 801f052:	b280      	uxth	r0, r0
 801f054:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801f058:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f05a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f05c:	fa1f fe8e 	uxth.w	lr, lr
 801f060:	1a09      	subs	r1, r1, r0
 801f062:	b289      	uxth	r1, r1
 801f064:	fb0e f202 	mul.w	r2, lr, r2
 801f068:	fb01 220c 	mla	r2, r1, ip, r2
 801f06c:	fb00 2205 	mla	r2, r0, r5, r2
 801f070:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f072:	fb09 2205 	mla	r2, r9, r5, r2
 801f076:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f07a:	2a00      	cmp	r2, #0
 801f07c:	f000 80c9 	beq.w	801f212 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f080:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f084:	d019      	beq.n	801f0ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f086:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f08a:	fb0c fa0a 	mul.w	sl, ip, sl
 801f08e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f092:	fb0c fc03 	mul.w	ip, ip, r3
 801f096:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f09a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f09e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f0a2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f0a6:	4453      	add	r3, sl
 801f0a8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f0ac:	0a1b      	lsrs	r3, r3, #8
 801f0ae:	0a3f      	lsrs	r7, r7, #8
 801f0b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f0b4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f0b8:	433b      	orrs	r3, r7
 801f0ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f0bc:	2dff      	cmp	r5, #255	; 0xff
 801f0be:	d020      	beq.n	801f102 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f0c0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f0c2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f0c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f0c8:	436f      	muls	r7, r5
 801f0ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f0cc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f0d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f0d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f0d6:	fb05 fa0a 	mul.w	sl, r5, sl
 801f0da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f0de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f0e2:	44bc      	add	ip, r7
 801f0e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f0e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f0ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f0f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f0f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f0f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f0fc:	ea4c 050a 	orr.w	r5, ip, sl
 801f100:	950d      	str	r5, [sp, #52]	; 0x34
 801f102:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f104:	2dff      	cmp	r5, #255	; 0xff
 801f106:	d020      	beq.n	801f14a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f108:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f10a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f10e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f110:	436f      	muls	r7, r5
 801f112:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f114:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f118:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f11a:	fb05 fa0c 	mul.w	sl, r5, ip
 801f11e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f122:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f126:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f12a:	44bc      	add	ip, r7
 801f12c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f130:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f134:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f138:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f13c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f140:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f144:	ea4c 050a 	orr.w	r5, ip, sl
 801f148:	9509      	str	r5, [sp, #36]	; 0x24
 801f14a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f14c:	2dff      	cmp	r5, #255	; 0xff
 801f14e:	d020      	beq.n	801f192 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f150:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f152:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f156:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f158:	436f      	muls	r7, r5
 801f15a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f15c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f160:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f162:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f166:	fb05 fa0a 	mul.w	sl, r5, sl
 801f16a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f16e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f172:	44bc      	add	ip, r7
 801f174:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f178:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f17c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f180:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f184:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f188:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f18c:	ea4c 050a 	orr.w	r5, ip, sl
 801f190:	950e      	str	r5, [sp, #56]	; 0x38
 801f192:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f194:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f198:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f19a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f19e:	fb0e f707 	mul.w	r7, lr, r7
 801f1a2:	fb01 770c 	mla	r7, r1, ip, r7
 801f1a6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f1aa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f1ac:	fb00 770c 	mla	r7, r0, ip, r7
 801f1b0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f1b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f1b6:	fb09 770c 	mla	r7, r9, ip, r7
 801f1ba:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f1be:	fb0e fe0c 	mul.w	lr, lr, ip
 801f1c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f1c6:	fb01 e303 	mla	r3, r1, r3, lr
 801f1ca:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f1cc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f1d0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f1d2:	fb00 330a 	mla	r3, r0, sl, r3
 801f1d6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801f1da:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f1de:	0a3f      	lsrs	r7, r7, #8
 801f1e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f1e4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f1e8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f1ec:	ea47 070c 	orr.w	r7, r7, ip
 801f1f0:	2aff      	cmp	r2, #255	; 0xff
 801f1f2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f1f6:	d11e      	bne.n	801f236 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f1f8:	097a      	lsrs	r2, r7, #5
 801f1fa:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801f1fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f202:	f023 0307 	bic.w	r3, r3, #7
 801f206:	4313      	orrs	r3, r2
 801f208:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f20c:	431f      	orrs	r7, r3
 801f20e:	f8a8 7000 	strh.w	r7, [r8]
 801f212:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f214:	441c      	add	r4, r3
 801f216:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f218:	f108 0802 	add.w	r8, r8, #2
 801f21c:	441e      	add	r6, r3
 801f21e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f222:	e644      	b.n	801eeae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f224:	2800      	cmp	r0, #0
 801f226:	f43f af0b 	beq.w	801f040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f22a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f22e:	9109      	str	r1, [sp, #36]	; 0x24
 801f230:	0e09      	lsrs	r1, r1, #24
 801f232:	9111      	str	r1, [sp, #68]	; 0x44
 801f234:	e704      	b.n	801f040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f236:	f8b8 1000 	ldrh.w	r1, [r8]
 801f23a:	43d2      	mvns	r2, r2
 801f23c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f240:	fa5f fe82 	uxtb.w	lr, r2
 801f244:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f248:	fb0c fc0e 	mul.w	ip, ip, lr
 801f24c:	10c8      	asrs	r0, r1, #3
 801f24e:	00ca      	lsls	r2, r1, #3
 801f250:	f10c 0101 	add.w	r1, ip, #1
 801f254:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f258:	0c39      	lsrs	r1, r7, #16
 801f25a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f25e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f262:	4911      	ldr	r1, [pc, #68]	; (801f2a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f264:	fb00 f00e 	mul.w	r0, r0, lr
 801f268:	fa5f fc8c 	uxtb.w	ip, ip
 801f26c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f270:	b2d2      	uxtb	r2, r2
 801f272:	1c41      	adds	r1, r0, #1
 801f274:	fb02 f20e 	mul.w	r2, r2, lr
 801f278:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f27c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f280:	1c51      	adds	r1, r2, #1
 801f282:	00c0      	lsls	r0, r0, #3
 801f284:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f288:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f28c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f290:	ea4c 0c00 	orr.w	ip, ip, r0
 801f294:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f298:	ea47 0c0c 	orr.w	ip, r7, ip
 801f29c:	f8a8 c000 	strh.w	ip, [r8]
 801f2a0:	e7b7      	b.n	801f212 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f2a2:	b01b      	add	sp, #108	; 0x6c
 801f2a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f2a8:	fffff800 	.word	0xfffff800

0801f2ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f2ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f2b0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f2b4:	2d00      	cmp	r5, #0
 801f2b6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f2ba:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f2be:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f2c2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f2c6:	fb05 0e03 	mla	lr, r5, r3, r0
 801f2ca:	f2c0 808c 	blt.w	801f3e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f2ce:	45a9      	cmp	r9, r5
 801f2d0:	f340 8089 	ble.w	801f3e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f2d4:	2800      	cmp	r0, #0
 801f2d6:	f2c0 8084 	blt.w	801f3e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f2da:	4580      	cmp	r8, r0
 801f2dc:	f340 8081 	ble.w	801f3e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f2e0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f2e4:	f01e 0f01 	tst.w	lr, #1
 801f2e8:	5d16      	ldrb	r6, [r2, r4]
 801f2ea:	bf0c      	ite	eq
 801f2ec:	f006 060f 	andeq.w	r6, r6, #15
 801f2f0:	1136      	asrne	r6, r6, #4
 801f2f2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f2f6:	b2f6      	uxtb	r6, r6
 801f2f8:	1c44      	adds	r4, r0, #1
 801f2fa:	d477      	bmi.n	801f3ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f2fc:	45a0      	cmp	r8, r4
 801f2fe:	dd75      	ble.n	801f3ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f300:	2f00      	cmp	r7, #0
 801f302:	d075      	beq.n	801f3f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f304:	f10e 0a01 	add.w	sl, lr, #1
 801f308:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f30c:	f01a 0f01 	tst.w	sl, #1
 801f310:	5d14      	ldrb	r4, [r2, r4]
 801f312:	bf0c      	ite	eq
 801f314:	f004 040f 	andeq.w	r4, r4, #15
 801f318:	1124      	asrne	r4, r4, #4
 801f31a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f31e:	b2e4      	uxtb	r4, r4
 801f320:	3501      	adds	r5, #1
 801f322:	d469      	bmi.n	801f3f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f324:	45a9      	cmp	r9, r5
 801f326:	dd67      	ble.n	801f3f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f328:	f1bc 0f00 	cmp.w	ip, #0
 801f32c:	d067      	beq.n	801f3fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f32e:	2800      	cmp	r0, #0
 801f330:	db60      	blt.n	801f3f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f332:	4580      	cmp	r8, r0
 801f334:	dd5e      	ble.n	801f3f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f336:	eb03 090e 	add.w	r9, r3, lr
 801f33a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f33e:	f019 0f01 	tst.w	r9, #1
 801f342:	5d55      	ldrb	r5, [r2, r5]
 801f344:	bf0c      	ite	eq
 801f346:	f005 050f 	andeq.w	r5, r5, #15
 801f34a:	112d      	asrne	r5, r5, #4
 801f34c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f350:	b2ed      	uxtb	r5, r5
 801f352:	3001      	adds	r0, #1
 801f354:	d456      	bmi.n	801f404 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f356:	4580      	cmp	r8, r0
 801f358:	dd54      	ble.n	801f404 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f35a:	2f00      	cmp	r7, #0
 801f35c:	d054      	beq.n	801f408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f35e:	3301      	adds	r3, #1
 801f360:	449e      	add	lr, r3
 801f362:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f366:	f01e 0f01 	tst.w	lr, #1
 801f36a:	5cd0      	ldrb	r0, [r2, r3]
 801f36c:	bf0c      	ite	eq
 801f36e:	f000 000f 	andeq.w	r0, r0, #15
 801f372:	1100      	asrne	r0, r0, #4
 801f374:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f378:	b2c3      	uxtb	r3, r0
 801f37a:	b2ba      	uxth	r2, r7
 801f37c:	fa1f fc8c 	uxth.w	ip, ip
 801f380:	fb02 f00c 	mul.w	r0, r2, ip
 801f384:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f388:	0112      	lsls	r2, r2, #4
 801f38a:	fa1f fc8c 	uxth.w	ip, ip
 801f38e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f392:	1a12      	subs	r2, r2, r0
 801f394:	eba7 070c 	sub.w	r7, r7, ip
 801f398:	b292      	uxth	r2, r2
 801f39a:	b2bf      	uxth	r7, r7
 801f39c:	4362      	muls	r2, r4
 801f39e:	fb06 2207 	mla	r2, r6, r7, r2
 801f3a2:	fb0c 2505 	mla	r5, ip, r5, r2
 801f3a6:	fb00 5303 	mla	r3, r0, r3, r5
 801f3aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f3ae:	b1b3      	cbz	r3, 801f3de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f3b0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f3b4:	435a      	muls	r2, r3
 801f3b6:	1c53      	adds	r3, r2, #1
 801f3b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f3bc:	4a2d      	ldr	r2, [pc, #180]	; (801f474 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f3be:	121b      	asrs	r3, r3, #8
 801f3c0:	6812      	ldr	r2, [r2, #0]
 801f3c2:	2bff      	cmp	r3, #255	; 0xff
 801f3c4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f3c8:	d120      	bne.n	801f40c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f3ca:	4b2b      	ldr	r3, [pc, #172]	; (801f478 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f3cc:	0950      	lsrs	r0, r2, #5
 801f3ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f3d2:	4033      	ands	r3, r6
 801f3d4:	4318      	orrs	r0, r3
 801f3d6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f3da:	4302      	orrs	r2, r0
 801f3dc:	800a      	strh	r2, [r1, #0]
 801f3de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f3e2:	2600      	movs	r6, #0
 801f3e4:	e788      	b.n	801f2f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f3e6:	2400      	movs	r4, #0
 801f3e8:	4626      	mov	r6, r4
 801f3ea:	e799      	b.n	801f320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f3ec:	2400      	movs	r4, #0
 801f3ee:	e797      	b.n	801f320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f3f0:	463c      	mov	r4, r7
 801f3f2:	e795      	b.n	801f320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f3f4:	2500      	movs	r5, #0
 801f3f6:	e7ac      	b.n	801f352 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f3f8:	2300      	movs	r3, #0
 801f3fa:	461d      	mov	r5, r3
 801f3fc:	e7bd      	b.n	801f37a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f3fe:	4663      	mov	r3, ip
 801f400:	4665      	mov	r5, ip
 801f402:	e7ba      	b.n	801f37a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f404:	2300      	movs	r3, #0
 801f406:	e7b8      	b.n	801f37a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f408:	463b      	mov	r3, r7
 801f40a:	e7b6      	b.n	801f37a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f40c:	880d      	ldrh	r5, [r1, #0]
 801f40e:	b29f      	uxth	r7, r3
 801f410:	122c      	asrs	r4, r5, #8
 801f412:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f416:	43db      	mvns	r3, r3
 801f418:	b2db      	uxtb	r3, r3
 801f41a:	fb10 f007 	smulbb	r0, r0, r7
 801f41e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f422:	fb04 0403 	mla	r4, r4, r3, r0
 801f426:	b2f6      	uxtb	r6, r6
 801f428:	10e8      	asrs	r0, r5, #3
 801f42a:	b2d2      	uxtb	r2, r2
 801f42c:	00ed      	lsls	r5, r5, #3
 801f42e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f432:	fb12 f207 	smulbb	r2, r2, r7
 801f436:	fb16 f607 	smulbb	r6, r6, r7
 801f43a:	b2ed      	uxtb	r5, r5
 801f43c:	b2a4      	uxth	r4, r4
 801f43e:	fb00 6603 	mla	r6, r0, r3, r6
 801f442:	fb05 2303 	mla	r3, r5, r3, r2
 801f446:	b29a      	uxth	r2, r3
 801f448:	1c63      	adds	r3, r4, #1
 801f44a:	b2b0      	uxth	r0, r6
 801f44c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f450:	1c53      	adds	r3, r2, #1
 801f452:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f456:	1c42      	adds	r2, r0, #1
 801f458:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f45c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f460:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f464:	0940      	lsrs	r0, r0, #5
 801f466:	4323      	orrs	r3, r4
 801f468:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f46c:	4303      	orrs	r3, r0
 801f46e:	800b      	strh	r3, [r1, #0]
 801f470:	e7b5      	b.n	801f3de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f472:	bf00      	nop
 801f474:	20015804 	.word	0x20015804
 801f478:	00fff800 	.word	0x00fff800

0801f47c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f47c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f480:	b097      	sub	sp, #92	; 0x5c
 801f482:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f486:	9214      	str	r2, [sp, #80]	; 0x50
 801f488:	9309      	str	r3, [sp, #36]	; 0x24
 801f48a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f48c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f490:	910d      	str	r1, [sp, #52]	; 0x34
 801f492:	930f      	str	r3, [sp, #60]	; 0x3c
 801f494:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f498:	9015      	str	r0, [sp, #84]	; 0x54
 801f49a:	6850      	ldr	r0, [r2, #4]
 801f49c:	6812      	ldr	r2, [r2, #0]
 801f49e:	fb00 1303 	mla	r3, r0, r3, r1
 801f4a2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f4a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f4a8:	689b      	ldr	r3, [r3, #8]
 801f4aa:	3301      	adds	r3, #1
 801f4ac:	f023 0301 	bic.w	r3, r3, #1
 801f4b0:	930a      	str	r3, [sp, #40]	; 0x28
 801f4b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f4b4:	681f      	ldr	r7, [r3, #0]
 801f4b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f4b8:	2b00      	cmp	r3, #0
 801f4ba:	dc03      	bgt.n	801f4c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f4bc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f4be:	2b00      	cmp	r3, #0
 801f4c0:	f340 8287 	ble.w	801f9d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f4c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f4c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f4ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f4ce:	1e48      	subs	r0, r1, #1
 801f4d0:	f102 3cff 	add.w	ip, r2, #4294967295
 801f4d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4d6:	2b00      	cmp	r3, #0
 801f4d8:	f340 80c4 	ble.w	801f664 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f4dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f4e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f4e4:	d406      	bmi.n	801f4f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f4e6:	4586      	cmp	lr, r0
 801f4e8:	da04      	bge.n	801f4f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f4ea:	2b00      	cmp	r3, #0
 801f4ec:	db02      	blt.n	801f4f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f4ee:	4563      	cmp	r3, ip
 801f4f0:	f2c0 80b9 	blt.w	801f666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f4f4:	f11e 0e01 	adds.w	lr, lr, #1
 801f4f8:	f100 80aa 	bmi.w	801f650 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f4fc:	4571      	cmp	r1, lr
 801f4fe:	f2c0 80a7 	blt.w	801f650 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f502:	3301      	adds	r3, #1
 801f504:	f100 80a4 	bmi.w	801f650 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f508:	429a      	cmp	r2, r3
 801f50a:	f2c0 80a1 	blt.w	801f650 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f50e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f510:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f514:	930e      	str	r3, [sp, #56]	; 0x38
 801f516:	46c8      	mov	r8, r9
 801f518:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f51a:	2b00      	cmp	r3, #0
 801f51c:	f340 80c3 	ble.w	801f6a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f520:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f522:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f526:	1423      	asrs	r3, r4, #16
 801f528:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f52c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f530:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f534:	f100 814d 	bmi.w	801f7d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f538:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f53c:	455b      	cmp	r3, fp
 801f53e:	f280 8148 	bge.w	801f7d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f542:	2800      	cmp	r0, #0
 801f544:	f2c0 8145 	blt.w	801f7d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f548:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f54c:	4558      	cmp	r0, fp
 801f54e:	f280 8140 	bge.w	801f7d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f552:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f554:	fb00 3305 	mla	r3, r0, r5, r3
 801f558:	0858      	lsrs	r0, r3, #1
 801f55a:	07dd      	lsls	r5, r3, #31
 801f55c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f560:	bf54      	ite	pl
 801f562:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f566:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f56a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f56e:	fa5f fc8c 	uxtb.w	ip, ip
 801f572:	2a00      	cmp	r2, #0
 801f574:	f000 80db 	beq.w	801f72e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f578:	1c58      	adds	r0, r3, #1
 801f57a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f57e:	07c0      	lsls	r0, r0, #31
 801f580:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f584:	bf54      	ite	pl
 801f586:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f58a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f58e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f592:	fa5f f08e 	uxtb.w	r0, lr
 801f596:	9010      	str	r0, [sp, #64]	; 0x40
 801f598:	b1c9      	cbz	r1, 801f5ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f59a:	4453      	add	r3, sl
 801f59c:	0858      	lsrs	r0, r3, #1
 801f59e:	07dd      	lsls	r5, r3, #31
 801f5a0:	5c38      	ldrb	r0, [r7, r0]
 801f5a2:	bf54      	ite	pl
 801f5a4:	f000 000f 	andpl.w	r0, r0, #15
 801f5a8:	1100      	asrmi	r0, r0, #4
 801f5aa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f5ae:	3301      	adds	r3, #1
 801f5b0:	b2c0      	uxtb	r0, r0
 801f5b2:	900b      	str	r0, [sp, #44]	; 0x2c
 801f5b4:	0858      	lsrs	r0, r3, #1
 801f5b6:	07dd      	lsls	r5, r3, #31
 801f5b8:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f5bc:	bf54      	ite	pl
 801f5be:	f00e 030f 	andpl.w	r3, lr, #15
 801f5c2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f5c6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f5ca:	b2db      	uxtb	r3, r3
 801f5cc:	9311      	str	r3, [sp, #68]	; 0x44
 801f5ce:	b292      	uxth	r2, r2
 801f5d0:	b289      	uxth	r1, r1
 801f5d2:	fb02 f301 	mul.w	r3, r2, r1
 801f5d6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f5da:	0112      	lsls	r2, r2, #4
 801f5dc:	b289      	uxth	r1, r1
 801f5de:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f5e2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f5e4:	1ad2      	subs	r2, r2, r3
 801f5e6:	1a40      	subs	r0, r0, r1
 801f5e8:	b292      	uxth	r2, r2
 801f5ea:	436a      	muls	r2, r5
 801f5ec:	b280      	uxth	r0, r0
 801f5ee:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f5f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f5f4:	fb01 c102 	mla	r1, r1, r2, ip
 801f5f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f5fa:	fb03 1302 	mla	r3, r3, r2, r1
 801f5fe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f602:	b1db      	cbz	r3, 801f63c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f604:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f606:	4353      	muls	r3, r2
 801f608:	1c5a      	adds	r2, r3, #1
 801f60a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f60e:	4ac6      	ldr	r2, [pc, #792]	; (801f928 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f610:	121b      	asrs	r3, r3, #8
 801f612:	6812      	ldr	r2, [r2, #0]
 801f614:	2bff      	cmp	r3, #255	; 0xff
 801f616:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f61a:	f040 8099 	bne.w	801f750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f61e:	0953      	lsrs	r3, r2, #5
 801f620:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f624:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f628:	f02c 0c07 	bic.w	ip, ip, #7
 801f62c:	ea43 0c0c 	orr.w	ip, r3, ip
 801f630:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f634:	ea4c 0202 	orr.w	r2, ip, r2
 801f638:	f8a8 2000 	strh.w	r2, [r8]
 801f63c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f63e:	441c      	add	r4, r3
 801f640:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f642:	441e      	add	r6, r3
 801f644:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f646:	3b01      	subs	r3, #1
 801f648:	f108 0802 	add.w	r8, r8, #2
 801f64c:	930e      	str	r3, [sp, #56]	; 0x38
 801f64e:	e763      	b.n	801f518 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f650:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f652:	441c      	add	r4, r3
 801f654:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f656:	441e      	add	r6, r3
 801f658:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f65a:	3b01      	subs	r3, #1
 801f65c:	9309      	str	r3, [sp, #36]	; 0x24
 801f65e:	f109 0902 	add.w	r9, r9, #2
 801f662:	e737      	b.n	801f4d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f664:	d024      	beq.n	801f6b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f666:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f668:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f66a:	3b01      	subs	r3, #1
 801f66c:	fb00 4003 	mla	r0, r0, r3, r4
 801f670:	1400      	asrs	r0, r0, #16
 801f672:	f53f af4c 	bmi.w	801f50e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f676:	3901      	subs	r1, #1
 801f678:	4288      	cmp	r0, r1
 801f67a:	f6bf af48 	bge.w	801f50e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f67e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f680:	fb01 6303 	mla	r3, r1, r3, r6
 801f684:	141b      	asrs	r3, r3, #16
 801f686:	f53f af42 	bmi.w	801f50e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f68a:	3a01      	subs	r2, #1
 801f68c:	4293      	cmp	r3, r2
 801f68e:	f6bf af3e 	bge.w	801f50e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f692:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f696:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f69a:	930e      	str	r3, [sp, #56]	; 0x38
 801f69c:	46c8      	mov	r8, r9
 801f69e:	f1bb 0f00 	cmp.w	fp, #0
 801f6a2:	f300 80b7 	bgt.w	801f814 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f6a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6a8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f6ac:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f6b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f6b2:	2b00      	cmp	r3, #0
 801f6b4:	f340 818d 	ble.w	801f9d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f6b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f6bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f6c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f6c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f6c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f6ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f6ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f6d2:	eef0 6a62 	vmov.f32	s13, s5
 801f6d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f6da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f6e2:	ee16 4a90 	vmov	r4, s13
 801f6e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f6ea:	eef0 6a43 	vmov.f32	s13, s6
 801f6ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f6f2:	ee12 2a90 	vmov	r2, s5
 801f6f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f6fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6fe:	ee13 2a10 	vmov	r2, s6
 801f702:	9323      	str	r3, [sp, #140]	; 0x8c
 801f704:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f706:	fb92 f3f3 	sdiv	r3, r2, r3
 801f70a:	9324      	str	r3, [sp, #144]	; 0x90
 801f70c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f70e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f710:	3b01      	subs	r3, #1
 801f712:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f716:	930d      	str	r3, [sp, #52]	; 0x34
 801f718:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f71a:	bf08      	it	eq
 801f71c:	4613      	moveq	r3, r2
 801f71e:	ee16 6a90 	vmov	r6, s13
 801f722:	9309      	str	r3, [sp, #36]	; 0x24
 801f724:	eeb0 3a67 	vmov.f32	s6, s15
 801f728:	eef0 2a47 	vmov.f32	s5, s14
 801f72c:	e6c3      	b.n	801f4b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f72e:	2900      	cmp	r1, #0
 801f730:	f43f af4d 	beq.w	801f5ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f734:	eb0a 0003 	add.w	r0, sl, r3
 801f738:	0843      	lsrs	r3, r0, #1
 801f73a:	07c0      	lsls	r0, r0, #31
 801f73c:	5cfb      	ldrb	r3, [r7, r3]
 801f73e:	bf54      	ite	pl
 801f740:	f003 030f 	andpl.w	r3, r3, #15
 801f744:	111b      	asrmi	r3, r3, #4
 801f746:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f74a:	b2db      	uxtb	r3, r3
 801f74c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f74e:	e73e      	b.n	801f5ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f750:	f8b8 e000 	ldrh.w	lr, [r8]
 801f754:	fa1f fb83 	uxth.w	fp, r3
 801f758:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f75c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f760:	43db      	mvns	r3, r3
 801f762:	b2db      	uxtb	r3, r3
 801f764:	fb11 f10b 	smulbb	r1, r1, fp
 801f768:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f76c:	fb00 1003 	mla	r0, r0, r3, r1
 801f770:	fa5f fc8c 	uxtb.w	ip, ip
 801f774:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f778:	b2d2      	uxtb	r2, r2
 801f77a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f77e:	b280      	uxth	r0, r0
 801f780:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f784:	fb1c fc0b 	smulbb	ip, ip, fp
 801f788:	fa5f fe8e 	uxtb.w	lr, lr
 801f78c:	fb12 fb0b 	smulbb	fp, r2, fp
 801f790:	fb01 cc03 	mla	ip, r1, r3, ip
 801f794:	fb0e bb03 	mla	fp, lr, r3, fp
 801f798:	1c43      	adds	r3, r0, #1
 801f79a:	fa1f fc8c 	uxth.w	ip, ip
 801f79e:	fa1f fb8b 	uxth.w	fp, fp
 801f7a2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f7a6:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f7aa:	f10c 0101 	add.w	r1, ip, #1
 801f7ae:	f10b 0001 	add.w	r0, fp, #1
 801f7b2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f7b6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f7ba:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f7be:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f7c2:	4318      	orrs	r0, r3
 801f7c4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f7c8:	ea40 000c 	orr.w	r0, r0, ip
 801f7cc:	f8a8 0000 	strh.w	r0, [r8]
 801f7d0:	e734      	b.n	801f63c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f7d2:	f113 0b01 	adds.w	fp, r3, #1
 801f7d6:	f53f af31 	bmi.w	801f63c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f7da:	45dc      	cmp	ip, fp
 801f7dc:	f6ff af2e 	blt.w	801f63c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f7e0:	f110 0b01 	adds.w	fp, r0, #1
 801f7e4:	f53f af2a 	bmi.w	801f63c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f7e8:	45de      	cmp	lr, fp
 801f7ea:	f6ff af27 	blt.w	801f63c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f7ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f7f0:	9302      	str	r3, [sp, #8]
 801f7f2:	fa0f f38e 	sxth.w	r3, lr
 801f7f6:	9301      	str	r3, [sp, #4]
 801f7f8:	fa0f f38c 	sxth.w	r3, ip
 801f7fc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f800:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f804:	9300      	str	r3, [sp, #0]
 801f806:	463a      	mov	r2, r7
 801f808:	4653      	mov	r3, sl
 801f80a:	4641      	mov	r1, r8
 801f80c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f80e:	f7ff fd4d 	bl	801f2ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f812:	e713      	b.n	801f63c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f814:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f816:	1422      	asrs	r2, r4, #16
 801f818:	1433      	asrs	r3, r6, #16
 801f81a:	fb05 2303 	mla	r3, r5, r3, r2
 801f81e:	085a      	lsrs	r2, r3, #1
 801f820:	07dd      	lsls	r5, r3, #31
 801f822:	5cba      	ldrb	r2, [r7, r2]
 801f824:	bf54      	ite	pl
 801f826:	f002 020f 	andpl.w	r2, r2, #15
 801f82a:	1112      	asrmi	r2, r2, #4
 801f82c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f830:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f834:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f838:	b2d2      	uxtb	r2, r2
 801f83a:	2900      	cmp	r1, #0
 801f83c:	d076      	beq.n	801f92c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f83e:	f103 0e01 	add.w	lr, r3, #1
 801f842:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f846:	f01e 0f01 	tst.w	lr, #1
 801f84a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f84e:	bf0c      	ite	eq
 801f850:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f854:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f858:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f85c:	fa5f f58c 	uxtb.w	r5, ip
 801f860:	9512      	str	r5, [sp, #72]	; 0x48
 801f862:	b300      	cbz	r0, 801f8a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f864:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f866:	442b      	add	r3, r5
 801f868:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f86c:	07dd      	lsls	r5, r3, #31
 801f86e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f872:	bf54      	ite	pl
 801f874:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f878:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f87c:	3301      	adds	r3, #1
 801f87e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f882:	fa5f f58c 	uxtb.w	r5, ip
 801f886:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f88a:	950c      	str	r5, [sp, #48]	; 0x30
 801f88c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f890:	07dd      	lsls	r5, r3, #31
 801f892:	bf54      	ite	pl
 801f894:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f898:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f89c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f8a0:	fa5f f38c 	uxtb.w	r3, ip
 801f8a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801f8a6:	b289      	uxth	r1, r1
 801f8a8:	b280      	uxth	r0, r0
 801f8aa:	fb01 f300 	mul.w	r3, r1, r0
 801f8ae:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f8b2:	0109      	lsls	r1, r1, #4
 801f8b4:	b280      	uxth	r0, r0
 801f8b6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f8ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f8bc:	1ac9      	subs	r1, r1, r3
 801f8be:	ebac 0c00 	sub.w	ip, ip, r0
 801f8c2:	b289      	uxth	r1, r1
 801f8c4:	4369      	muls	r1, r5
 801f8c6:	fa1f fc8c 	uxth.w	ip, ip
 801f8ca:	fb02 120c 	mla	r2, r2, ip, r1
 801f8ce:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f8d0:	fb00 2001 	mla	r0, r0, r1, r2
 801f8d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f8d6:	fb03 0302 	mla	r3, r3, r2, r0
 801f8da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8de:	b1d3      	cbz	r3, 801f916 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f8e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f8e2:	4353      	muls	r3, r2
 801f8e4:	1c5a      	adds	r2, r3, #1
 801f8e6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f8ea:	4a0f      	ldr	r2, [pc, #60]	; (801f928 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f8ec:	121b      	asrs	r3, r3, #8
 801f8ee:	6812      	ldr	r2, [r2, #0]
 801f8f0:	2bff      	cmp	r3, #255	; 0xff
 801f8f2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f8f6:	d12d      	bne.n	801f954 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f8f8:	0953      	lsrs	r3, r2, #5
 801f8fa:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f8fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f902:	f02c 0c07 	bic.w	ip, ip, #7
 801f906:	ea43 0c0c 	orr.w	ip, r3, ip
 801f90a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f90e:	ea4c 0202 	orr.w	r2, ip, r2
 801f912:	f8a8 2000 	strh.w	r2, [r8]
 801f916:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f918:	441c      	add	r4, r3
 801f91a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f91c:	f108 0802 	add.w	r8, r8, #2
 801f920:	441e      	add	r6, r3
 801f922:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f926:	e6ba      	b.n	801f69e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f928:	20015804 	.word	0x20015804
 801f92c:	2800      	cmp	r0, #0
 801f92e:	d0ba      	beq.n	801f8a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f930:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f932:	442b      	add	r3, r5
 801f934:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f938:	07db      	lsls	r3, r3, #31
 801f93a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f93e:	bf54      	ite	pl
 801f940:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f944:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f948:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f94c:	fa5f f38c 	uxtb.w	r3, ip
 801f950:	930c      	str	r3, [sp, #48]	; 0x30
 801f952:	e7a8      	b.n	801f8a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f954:	f8b8 e000 	ldrh.w	lr, [r8]
 801f958:	fa1f fa83 	uxth.w	sl, r3
 801f95c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f960:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f964:	43db      	mvns	r3, r3
 801f966:	b2db      	uxtb	r3, r3
 801f968:	fb11 f10a 	smulbb	r1, r1, sl
 801f96c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f970:	fb00 1003 	mla	r0, r0, r3, r1
 801f974:	b2d2      	uxtb	r2, r2
 801f976:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f97a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f97e:	fa5f fe8e 	uxtb.w	lr, lr
 801f982:	fb12 f20a 	smulbb	r2, r2, sl
 801f986:	fb0e 2203 	mla	r2, lr, r3, r2
 801f98a:	fa5f fc8c 	uxtb.w	ip, ip
 801f98e:	b280      	uxth	r0, r0
 801f990:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f994:	b292      	uxth	r2, r2
 801f996:	fb1c fc0a 	smulbb	ip, ip, sl
 801f99a:	fb01 cc03 	mla	ip, r1, r3, ip
 801f99e:	1c43      	adds	r3, r0, #1
 801f9a0:	1c51      	adds	r1, r2, #1
 801f9a2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f9a6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f9aa:	fa1f fc8c 	uxth.w	ip, ip
 801f9ae:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f9b2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f9b6:	4308      	orrs	r0, r1
 801f9b8:	f10c 0101 	add.w	r1, ip, #1
 801f9bc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f9c0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f9c4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f9c8:	ea40 000c 	orr.w	r0, r0, ip
 801f9cc:	f8a8 0000 	strh.w	r0, [r8]
 801f9d0:	e7a1      	b.n	801f916 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f9d2:	b017      	add	sp, #92	; 0x5c
 801f9d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f9d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f9d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f9dc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f9e0:	2d00      	cmp	r5, #0
 801f9e2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f9e6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f9ea:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f9ee:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f9f2:	fb05 0e03 	mla	lr, r5, r3, r0
 801f9f6:	f2c0 80b0 	blt.w	801fb5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f9fa:	45a9      	cmp	r9, r5
 801f9fc:	f340 80ad 	ble.w	801fb5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fa00:	2800      	cmp	r0, #0
 801fa02:	f2c0 80a8 	blt.w	801fb56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fa06:	4580      	cmp	r8, r0
 801fa08:	f340 80a5 	ble.w	801fb56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fa0c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fa10:	f01e 0f01 	tst.w	lr, #1
 801fa14:	5d16      	ldrb	r6, [r2, r4]
 801fa16:	bf0c      	ite	eq
 801fa18:	f006 060f 	andeq.w	r6, r6, #15
 801fa1c:	1136      	asrne	r6, r6, #4
 801fa1e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801fa22:	b2f6      	uxtb	r6, r6
 801fa24:	1c44      	adds	r4, r0, #1
 801fa26:	f100 809b 	bmi.w	801fb60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fa2a:	45a0      	cmp	r8, r4
 801fa2c:	f340 8098 	ble.w	801fb60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fa30:	2f00      	cmp	r7, #0
 801fa32:	f000 8097 	beq.w	801fb64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801fa36:	f10e 0a01 	add.w	sl, lr, #1
 801fa3a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801fa3e:	f01a 0f01 	tst.w	sl, #1
 801fa42:	5d14      	ldrb	r4, [r2, r4]
 801fa44:	bf0c      	ite	eq
 801fa46:	f004 040f 	andeq.w	r4, r4, #15
 801fa4a:	1124      	asrne	r4, r4, #4
 801fa4c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801fa50:	b2e4      	uxtb	r4, r4
 801fa52:	3501      	adds	r5, #1
 801fa54:	f100 808a 	bmi.w	801fb6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fa58:	45a9      	cmp	r9, r5
 801fa5a:	f340 8087 	ble.w	801fb6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fa5e:	f1bc 0f00 	cmp.w	ip, #0
 801fa62:	f000 8086 	beq.w	801fb72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801fa66:	2800      	cmp	r0, #0
 801fa68:	db7e      	blt.n	801fb68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fa6a:	4580      	cmp	r8, r0
 801fa6c:	dd7c      	ble.n	801fb68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fa6e:	eb03 090e 	add.w	r9, r3, lr
 801fa72:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801fa76:	f019 0f01 	tst.w	r9, #1
 801fa7a:	5d55      	ldrb	r5, [r2, r5]
 801fa7c:	bf0c      	ite	eq
 801fa7e:	f005 050f 	andeq.w	r5, r5, #15
 801fa82:	112d      	asrne	r5, r5, #4
 801fa84:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801fa88:	b2ed      	uxtb	r5, r5
 801fa8a:	3001      	adds	r0, #1
 801fa8c:	d474      	bmi.n	801fb78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fa8e:	4580      	cmp	r8, r0
 801fa90:	dd72      	ble.n	801fb78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fa92:	2f00      	cmp	r7, #0
 801fa94:	d072      	beq.n	801fb7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801fa96:	3301      	adds	r3, #1
 801fa98:	449e      	add	lr, r3
 801fa9a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801fa9e:	f01e 0f01 	tst.w	lr, #1
 801faa2:	5cd0      	ldrb	r0, [r2, r3]
 801faa4:	bf0c      	ite	eq
 801faa6:	f000 000f 	andeq.w	r0, r0, #15
 801faaa:	1100      	asrne	r0, r0, #4
 801faac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fab0:	b2c3      	uxtb	r3, r0
 801fab2:	b2ba      	uxth	r2, r7
 801fab4:	fa1f fc8c 	uxth.w	ip, ip
 801fab8:	fb02 f00c 	mul.w	r0, r2, ip
 801fabc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801fac0:	0112      	lsls	r2, r2, #4
 801fac2:	fa1f fc8c 	uxth.w	ip, ip
 801fac6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801faca:	1a12      	subs	r2, r2, r0
 801facc:	eba7 070c 	sub.w	r7, r7, ip
 801fad0:	b292      	uxth	r2, r2
 801fad2:	b2bf      	uxth	r7, r7
 801fad4:	4362      	muls	r2, r4
 801fad6:	fb06 2207 	mla	r2, r6, r7, r2
 801fada:	fb0c 2505 	mla	r5, ip, r5, r2
 801fade:	fb00 5303 	mla	r3, r0, r3, r5
 801fae2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fae6:	b3a3      	cbz	r3, 801fb52 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801fae8:	4a25      	ldr	r2, [pc, #148]	; (801fb80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801faea:	880e      	ldrh	r6, [r1, #0]
 801faec:	6815      	ldr	r5, [r2, #0]
 801faee:	1234      	asrs	r4, r6, #8
 801faf0:	b29a      	uxth	r2, r3
 801faf2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801faf6:	43db      	mvns	r3, r3
 801faf8:	b2db      	uxtb	r3, r3
 801fafa:	fb10 f002 	smulbb	r0, r0, r2
 801fafe:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801fb02:	fb04 0403 	mla	r4, r4, r3, r0
 801fb06:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801fb0a:	10f0      	asrs	r0, r6, #3
 801fb0c:	b2ed      	uxtb	r5, r5
 801fb0e:	00f6      	lsls	r6, r6, #3
 801fb10:	fb17 f702 	smulbb	r7, r7, r2
 801fb14:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fb18:	fb15 f202 	smulbb	r2, r5, r2
 801fb1c:	b2f6      	uxtb	r6, r6
 801fb1e:	b2a4      	uxth	r4, r4
 801fb20:	fb00 7003 	mla	r0, r0, r3, r7
 801fb24:	fb06 2303 	mla	r3, r6, r3, r2
 801fb28:	b29a      	uxth	r2, r3
 801fb2a:	1c63      	adds	r3, r4, #1
 801fb2c:	b280      	uxth	r0, r0
 801fb2e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fb32:	1c53      	adds	r3, r2, #1
 801fb34:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fb38:	1c42      	adds	r2, r0, #1
 801fb3a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fb3e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801fb42:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fb46:	0940      	lsrs	r0, r0, #5
 801fb48:	4323      	orrs	r3, r4
 801fb4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fb4e:	4303      	orrs	r3, r0
 801fb50:	800b      	strh	r3, [r1, #0]
 801fb52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fb56:	2600      	movs	r6, #0
 801fb58:	e764      	b.n	801fa24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801fb5a:	2400      	movs	r4, #0
 801fb5c:	4626      	mov	r6, r4
 801fb5e:	e778      	b.n	801fa52 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fb60:	2400      	movs	r4, #0
 801fb62:	e776      	b.n	801fa52 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fb64:	463c      	mov	r4, r7
 801fb66:	e774      	b.n	801fa52 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fb68:	2500      	movs	r5, #0
 801fb6a:	e78e      	b.n	801fa8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801fb6c:	2300      	movs	r3, #0
 801fb6e:	461d      	mov	r5, r3
 801fb70:	e79f      	b.n	801fab2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fb72:	4663      	mov	r3, ip
 801fb74:	4665      	mov	r5, ip
 801fb76:	e79c      	b.n	801fab2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fb78:	2300      	movs	r3, #0
 801fb7a:	e79a      	b.n	801fab2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fb7c:	463b      	mov	r3, r7
 801fb7e:	e798      	b.n	801fab2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fb80:	20015804 	.word	0x20015804

0801fb84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb88:	b093      	sub	sp, #76	; 0x4c
 801fb8a:	461d      	mov	r5, r3
 801fb8c:	920c      	str	r2, [sp, #48]	; 0x30
 801fb8e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fb90:	9107      	str	r1, [sp, #28]
 801fb92:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fb96:	9011      	str	r0, [sp, #68]	; 0x44
 801fb98:	6850      	ldr	r0, [r2, #4]
 801fb9a:	6812      	ldr	r2, [r2, #0]
 801fb9c:	fb00 1303 	mla	r3, r0, r3, r1
 801fba0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fba4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fba6:	689b      	ldr	r3, [r3, #8]
 801fba8:	3301      	adds	r3, #1
 801fbaa:	f023 0301 	bic.w	r3, r3, #1
 801fbae:	9306      	str	r3, [sp, #24]
 801fbb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fbb2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801fbb6:	681f      	ldr	r7, [r3, #0]
 801fbb8:	9b07      	ldr	r3, [sp, #28]
 801fbba:	2b00      	cmp	r3, #0
 801fbbc:	dc03      	bgt.n	801fbc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801fbbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fbc0:	2b00      	cmp	r3, #0
 801fbc2:	f340 8267 	ble.w	8020094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fbc6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fbc8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fbcc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fbd0:	1e48      	subs	r0, r1, #1
 801fbd2:	f102 3cff 	add.w	ip, r2, #4294967295
 801fbd6:	2d00      	cmp	r5, #0
 801fbd8:	f340 80b8 	ble.w	801fd4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801fbdc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fbe0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fbe4:	d406      	bmi.n	801fbf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fbe6:	4586      	cmp	lr, r0
 801fbe8:	da04      	bge.n	801fbf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fbea:	2b00      	cmp	r3, #0
 801fbec:	db02      	blt.n	801fbf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fbee:	4563      	cmp	r3, ip
 801fbf0:	f2c0 80ad 	blt.w	801fd4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801fbf4:	f11e 0e01 	adds.w	lr, lr, #1
 801fbf8:	f100 80a0 	bmi.w	801fd3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fbfc:	4571      	cmp	r1, lr
 801fbfe:	f2c0 809d 	blt.w	801fd3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fc02:	3301      	adds	r3, #1
 801fc04:	f100 809a 	bmi.w	801fd3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fc08:	429a      	cmp	r2, r3
 801fc0a:	f2c0 8097 	blt.w	801fd3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fc0e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801fc12:	9509      	str	r5, [sp, #36]	; 0x24
 801fc14:	46c8      	mov	r8, r9
 801fc16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc18:	2b00      	cmp	r3, #0
 801fc1a:	f340 80b6 	ble.w	801fd8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801fc1e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801fc22:	9308      	str	r3, [sp, #32]
 801fc24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fc26:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fc2a:	1423      	asrs	r3, r4, #16
 801fc2c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fc30:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fc34:	f100 813e 	bmi.w	801feb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fc38:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fc3c:	455b      	cmp	r3, fp
 801fc3e:	f280 8139 	bge.w	801feb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fc42:	2800      	cmp	r0, #0
 801fc44:	f2c0 8136 	blt.w	801feb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fc48:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fc4c:	4558      	cmp	r0, fp
 801fc4e:	f280 8131 	bge.w	801feb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fc52:	9a06      	ldr	r2, [sp, #24]
 801fc54:	fb00 3302 	mla	r3, r0, r2, r3
 801fc58:	0858      	lsrs	r0, r3, #1
 801fc5a:	07da      	lsls	r2, r3, #31
 801fc5c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fc60:	9a08      	ldr	r2, [sp, #32]
 801fc62:	bf54      	ite	pl
 801fc64:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fc68:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fc6c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fc70:	fa5f fc8c 	uxtb.w	ip, ip
 801fc74:	2a00      	cmp	r2, #0
 801fc76:	f000 80cb 	beq.w	801fe10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fc7a:	1c58      	adds	r0, r3, #1
 801fc7c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fc80:	07c0      	lsls	r0, r0, #31
 801fc82:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fc86:	bf54      	ite	pl
 801fc88:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fc8c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fc90:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fc94:	fa5f fe8e 	uxtb.w	lr, lr
 801fc98:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801fc9c:	b1b9      	cbz	r1, 801fcce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fc9e:	4453      	add	r3, sl
 801fca0:	0858      	lsrs	r0, r3, #1
 801fca2:	07da      	lsls	r2, r3, #31
 801fca4:	5c38      	ldrb	r0, [r7, r0]
 801fca6:	bf54      	ite	pl
 801fca8:	f000 000f 	andpl.w	r0, r0, #15
 801fcac:	1100      	asrmi	r0, r0, #4
 801fcae:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fcb2:	b2c0      	uxtb	r0, r0
 801fcb4:	900a      	str	r0, [sp, #40]	; 0x28
 801fcb6:	1c58      	adds	r0, r3, #1
 801fcb8:	0843      	lsrs	r3, r0, #1
 801fcba:	07c2      	lsls	r2, r0, #31
 801fcbc:	5cfb      	ldrb	r3, [r7, r3]
 801fcbe:	bf54      	ite	pl
 801fcc0:	f003 030f 	andpl.w	r3, r3, #15
 801fcc4:	111b      	asrmi	r3, r3, #4
 801fcc6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fcca:	b2db      	uxtb	r3, r3
 801fccc:	930e      	str	r3, [sp, #56]	; 0x38
 801fcce:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fcd2:	b289      	uxth	r1, r1
 801fcd4:	fb02 f301 	mul.w	r3, r2, r1
 801fcd8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fcdc:	0112      	lsls	r2, r2, #4
 801fcde:	b289      	uxth	r1, r1
 801fce0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801fce4:	1a40      	subs	r0, r0, r1
 801fce6:	fa1f fe80 	uxth.w	lr, r0
 801fcea:	1ad2      	subs	r2, r2, r3
 801fcec:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fcee:	b292      	uxth	r2, r2
 801fcf0:	4342      	muls	r2, r0
 801fcf2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801fcf6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fcf8:	fb01 c102 	mla	r1, r1, r2, ip
 801fcfc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fcfe:	fb03 1302 	mla	r3, r3, r2, r1
 801fd02:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fd06:	2bff      	cmp	r3, #255	; 0xff
 801fd08:	f040 8093 	bne.w	801fe32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fd0c:	4bbe      	ldr	r3, [pc, #760]	; (8020008 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fd0e:	681a      	ldr	r2, [r3, #0]
 801fd10:	4bbe      	ldr	r3, [pc, #760]	; (802000c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fd12:	0951      	lsrs	r1, r2, #5
 801fd14:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fd18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fd1c:	430b      	orrs	r3, r1
 801fd1e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fd22:	4313      	orrs	r3, r2
 801fd24:	f8a8 3000 	strh.w	r3, [r8]
 801fd28:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fd2a:	441c      	add	r4, r3
 801fd2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd2e:	441e      	add	r6, r3
 801fd30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd32:	3b01      	subs	r3, #1
 801fd34:	f108 0802 	add.w	r8, r8, #2
 801fd38:	9309      	str	r3, [sp, #36]	; 0x24
 801fd3a:	e76c      	b.n	801fc16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fd3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fd3e:	441c      	add	r4, r3
 801fd40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd42:	3d01      	subs	r5, #1
 801fd44:	441e      	add	r6, r3
 801fd46:	f109 0902 	add.w	r9, r9, #2
 801fd4a:	e744      	b.n	801fbd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fd4c:	d021      	beq.n	801fd92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fd4e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fd50:	1e6b      	subs	r3, r5, #1
 801fd52:	fb00 4003 	mla	r0, r0, r3, r4
 801fd56:	1400      	asrs	r0, r0, #16
 801fd58:	f53f af59 	bmi.w	801fc0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fd5c:	3901      	subs	r1, #1
 801fd5e:	4288      	cmp	r0, r1
 801fd60:	f6bf af55 	bge.w	801fc0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fd64:	9920      	ldr	r1, [sp, #128]	; 0x80
 801fd66:	fb01 6303 	mla	r3, r1, r3, r6
 801fd6a:	141b      	asrs	r3, r3, #16
 801fd6c:	f53f af4f 	bmi.w	801fc0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fd70:	3a01      	subs	r2, #1
 801fd72:	4293      	cmp	r3, r2
 801fd74:	f6bf af4b 	bge.w	801fc0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fd78:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fd7c:	9308      	str	r3, [sp, #32]
 801fd7e:	46a8      	mov	r8, r5
 801fd80:	46ce      	mov	lr, r9
 801fd82:	f1b8 0f00 	cmp.w	r8, #0
 801fd86:	f300 80b5 	bgt.w	801fef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fd8a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fd8e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fd92:	9b07      	ldr	r3, [sp, #28]
 801fd94:	2b00      	cmp	r3, #0
 801fd96:	f340 817d 	ble.w	8020094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fd9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fd9e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fda2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fda6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fda8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fdac:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fdb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fdb4:	eef0 6a62 	vmov.f32	s13, s5
 801fdb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fdbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fdc0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fdc4:	ee16 4a90 	vmov	r4, s13
 801fdc8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fdcc:	eef0 6a43 	vmov.f32	s13, s6
 801fdd0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fdd4:	ee12 2a90 	vmov	r2, s5
 801fdd8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fddc:	fb92 f3f3 	sdiv	r3, r2, r3
 801fde0:	ee13 2a10 	vmov	r2, s6
 801fde4:	931f      	str	r3, [sp, #124]	; 0x7c
 801fde6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fde8:	fb92 f3f3 	sdiv	r3, r2, r3
 801fdec:	9320      	str	r3, [sp, #128]	; 0x80
 801fdee:	9b07      	ldr	r3, [sp, #28]
 801fdf0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fdf2:	3b01      	subs	r3, #1
 801fdf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fdf8:	9307      	str	r3, [sp, #28]
 801fdfa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fdfc:	ee16 6a90 	vmov	r6, s13
 801fe00:	bf14      	ite	ne
 801fe02:	461d      	movne	r5, r3
 801fe04:	4615      	moveq	r5, r2
 801fe06:	eeb0 3a67 	vmov.f32	s6, s15
 801fe0a:	eef0 2a47 	vmov.f32	s5, s14
 801fe0e:	e6d3      	b.n	801fbb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fe10:	2900      	cmp	r1, #0
 801fe12:	f43f af5c 	beq.w	801fcce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fe16:	eb0a 0003 	add.w	r0, sl, r3
 801fe1a:	0843      	lsrs	r3, r0, #1
 801fe1c:	07c0      	lsls	r0, r0, #31
 801fe1e:	5cfb      	ldrb	r3, [r7, r3]
 801fe20:	bf54      	ite	pl
 801fe22:	f003 030f 	andpl.w	r3, r3, #15
 801fe26:	111b      	asrmi	r3, r3, #4
 801fe28:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fe2c:	b2db      	uxtb	r3, r3
 801fe2e:	930a      	str	r3, [sp, #40]	; 0x28
 801fe30:	e74d      	b.n	801fcce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fe32:	2b00      	cmp	r3, #0
 801fe34:	f43f af78 	beq.w	801fd28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fe38:	4a73      	ldr	r2, [pc, #460]	; (8020008 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fe3a:	f8b8 c000 	ldrh.w	ip, [r8]
 801fe3e:	6810      	ldr	r0, [r2, #0]
 801fe40:	fa1f fe83 	uxth.w	lr, r3
 801fe44:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fe48:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fe4c:	43db      	mvns	r3, r3
 801fe4e:	b2db      	uxtb	r3, r3
 801fe50:	fb12 f20e 	smulbb	r2, r2, lr
 801fe54:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fe58:	fb01 2103 	mla	r1, r1, r3, r2
 801fe5c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fe60:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fe64:	b2c0      	uxtb	r0, r0
 801fe66:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fe6a:	fb1b fb0e 	smulbb	fp, fp, lr
 801fe6e:	b289      	uxth	r1, r1
 801fe70:	fb10 fe0e 	smulbb	lr, r0, lr
 801fe74:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fe78:	fa5f fc8c 	uxtb.w	ip, ip
 801fe7c:	fb02 b203 	mla	r2, r2, r3, fp
 801fe80:	1c48      	adds	r0, r1, #1
 801fe82:	fb0c e303 	mla	r3, ip, r3, lr
 801fe86:	b292      	uxth	r2, r2
 801fe88:	b29b      	uxth	r3, r3
 801fe8a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fe8e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fe92:	f102 0b01 	add.w	fp, r2, #1
 801fe96:	1c59      	adds	r1, r3, #1
 801fe98:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fe9c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fea0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fea4:	0952      	lsrs	r2, r2, #5
 801fea6:	4301      	orrs	r1, r0
 801fea8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801feac:	4311      	orrs	r1, r2
 801feae:	f8a8 1000 	strh.w	r1, [r8]
 801feb2:	e739      	b.n	801fd28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801feb4:	f113 0b01 	adds.w	fp, r3, #1
 801feb8:	f53f af36 	bmi.w	801fd28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801febc:	45dc      	cmp	ip, fp
 801febe:	f6ff af33 	blt.w	801fd28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fec2:	f110 0b01 	adds.w	fp, r0, #1
 801fec6:	f53f af2f 	bmi.w	801fd28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801feca:	45de      	cmp	lr, fp
 801fecc:	f6ff af2c 	blt.w	801fd28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fed0:	9a08      	ldr	r2, [sp, #32]
 801fed2:	9302      	str	r3, [sp, #8]
 801fed4:	fa0f f38e 	sxth.w	r3, lr
 801fed8:	9301      	str	r3, [sp, #4]
 801feda:	fa0f f38c 	sxth.w	r3, ip
 801fede:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fee2:	9105      	str	r1, [sp, #20]
 801fee4:	9300      	str	r3, [sp, #0]
 801fee6:	463a      	mov	r2, r7
 801fee8:	4653      	mov	r3, sl
 801feea:	4641      	mov	r1, r8
 801feec:	9811      	ldr	r0, [sp, #68]	; 0x44
 801feee:	f7ff fd73 	bl	801f9d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fef2:	e719      	b.n	801fd28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fef4:	9906      	ldr	r1, [sp, #24]
 801fef6:	1422      	asrs	r2, r4, #16
 801fef8:	1433      	asrs	r3, r6, #16
 801fefa:	fb01 2303 	mla	r3, r1, r3, r2
 801fefe:	085a      	lsrs	r2, r3, #1
 801ff00:	07d9      	lsls	r1, r3, #31
 801ff02:	5cba      	ldrb	r2, [r7, r2]
 801ff04:	bf54      	ite	pl
 801ff06:	f002 020f 	andpl.w	r2, r2, #15
 801ff0a:	1112      	asrmi	r2, r2, #4
 801ff0c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ff10:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ff14:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ff18:	b2d2      	uxtb	r2, r2
 801ff1a:	2800      	cmp	r0, #0
 801ff1c:	d062      	beq.n	801ffe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801ff1e:	f103 0a01 	add.w	sl, r3, #1
 801ff22:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801ff26:	f01a 0f01 	tst.w	sl, #1
 801ff2a:	5c79      	ldrb	r1, [r7, r1]
 801ff2c:	bf0c      	ite	eq
 801ff2e:	f001 010f 	andeq.w	r1, r1, #15
 801ff32:	1109      	asrne	r1, r1, #4
 801ff34:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ff38:	b2c9      	uxtb	r1, r1
 801ff3a:	910f      	str	r1, [sp, #60]	; 0x3c
 801ff3c:	f1bc 0f00 	cmp.w	ip, #0
 801ff40:	d019      	beq.n	801ff76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801ff42:	9908      	ldr	r1, [sp, #32]
 801ff44:	440b      	add	r3, r1
 801ff46:	0859      	lsrs	r1, r3, #1
 801ff48:	f013 0f01 	tst.w	r3, #1
 801ff4c:	5c79      	ldrb	r1, [r7, r1]
 801ff4e:	bf0c      	ite	eq
 801ff50:	f001 010f 	andeq.w	r1, r1, #15
 801ff54:	1109      	asrne	r1, r1, #4
 801ff56:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ff5a:	b2c9      	uxtb	r1, r1
 801ff5c:	3301      	adds	r3, #1
 801ff5e:	910b      	str	r1, [sp, #44]	; 0x2c
 801ff60:	0859      	lsrs	r1, r3, #1
 801ff62:	07db      	lsls	r3, r3, #31
 801ff64:	5c79      	ldrb	r1, [r7, r1]
 801ff66:	bf54      	ite	pl
 801ff68:	f001 010f 	andpl.w	r1, r1, #15
 801ff6c:	1109      	asrmi	r1, r1, #4
 801ff6e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ff72:	b2c9      	uxtb	r1, r1
 801ff74:	9110      	str	r1, [sp, #64]	; 0x40
 801ff76:	b280      	uxth	r0, r0
 801ff78:	fa1f fc8c 	uxth.w	ip, ip
 801ff7c:	fb00 f30c 	mul.w	r3, r0, ip
 801ff80:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801ff84:	0100      	lsls	r0, r0, #4
 801ff86:	fa1f fc8c 	uxth.w	ip, ip
 801ff8a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801ff8e:	eba1 010c 	sub.w	r1, r1, ip
 801ff92:	fa1f fa81 	uxth.w	sl, r1
 801ff96:	1ac0      	subs	r0, r0, r3
 801ff98:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ff9a:	b280      	uxth	r0, r0
 801ff9c:	4348      	muls	r0, r1
 801ff9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801ffa0:	fb02 020a 	mla	r2, r2, sl, r0
 801ffa4:	fb0c 2c01 	mla	ip, ip, r1, r2
 801ffa8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ffaa:	fb03 c302 	mla	r3, r3, r2, ip
 801ffae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ffb2:	2bff      	cmp	r3, #255	; 0xff
 801ffb4:	d12c      	bne.n	8020010 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801ffb6:	4b14      	ldr	r3, [pc, #80]	; (8020008 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801ffb8:	681a      	ldr	r2, [r3, #0]
 801ffba:	4b14      	ldr	r3, [pc, #80]	; (802000c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801ffbc:	0951      	lsrs	r1, r2, #5
 801ffbe:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801ffc2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ffc6:	430b      	orrs	r3, r1
 801ffc8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ffcc:	4313      	orrs	r3, r2
 801ffce:	f8ae 3000 	strh.w	r3, [lr]
 801ffd2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ffd4:	441c      	add	r4, r3
 801ffd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffd8:	f10e 0e02 	add.w	lr, lr, #2
 801ffdc:	441e      	add	r6, r3
 801ffde:	f108 38ff 	add.w	r8, r8, #4294967295
 801ffe2:	e6ce      	b.n	801fd82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801ffe4:	f1bc 0f00 	cmp.w	ip, #0
 801ffe8:	d0c5      	beq.n	801ff76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801ffea:	9908      	ldr	r1, [sp, #32]
 801ffec:	440b      	add	r3, r1
 801ffee:	0859      	lsrs	r1, r3, #1
 801fff0:	07db      	lsls	r3, r3, #31
 801fff2:	5c79      	ldrb	r1, [r7, r1]
 801fff4:	bf54      	ite	pl
 801fff6:	f001 010f 	andpl.w	r1, r1, #15
 801fffa:	1109      	asrmi	r1, r1, #4
 801fffc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020000:	b2c9      	uxtb	r1, r1
 8020002:	910b      	str	r1, [sp, #44]	; 0x2c
 8020004:	e7b7      	b.n	801ff76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020006:	bf00      	nop
 8020008:	20015804 	.word	0x20015804
 802000c:	fffff800 	.word	0xfffff800
 8020010:	2b00      	cmp	r3, #0
 8020012:	d0de      	beq.n	801ffd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020014:	4a21      	ldr	r2, [pc, #132]	; (802009c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8020016:	f8be c000 	ldrh.w	ip, [lr]
 802001a:	6810      	ldr	r0, [r2, #0]
 802001c:	fa1f fa83 	uxth.w	sl, r3
 8020020:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020024:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020028:	43db      	mvns	r3, r3
 802002a:	b2db      	uxtb	r3, r3
 802002c:	fb12 f20a 	smulbb	r2, r2, sl
 8020030:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020034:	fb01 2103 	mla	r1, r1, r3, r2
 8020038:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802003c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020040:	b2c0      	uxtb	r0, r0
 8020042:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020046:	fa5f fc8c 	uxtb.w	ip, ip
 802004a:	fb10 f00a 	smulbb	r0, r0, sl
 802004e:	fb0c 0003 	mla	r0, ip, r3, r0
 8020052:	b289      	uxth	r1, r1
 8020054:	fb1b fb0a 	smulbb	fp, fp, sl
 8020058:	b280      	uxth	r0, r0
 802005a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802005e:	fb02 b203 	mla	r2, r2, r3, fp
 8020062:	1c4b      	adds	r3, r1, #1
 8020064:	f100 0b01 	add.w	fp, r0, #1
 8020068:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802006c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020070:	b292      	uxth	r2, r2
 8020072:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020076:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802007a:	ea4b 0101 	orr.w	r1, fp, r1
 802007e:	f102 0b01 	add.w	fp, r2, #1
 8020082:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020086:	0952      	lsrs	r2, r2, #5
 8020088:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802008c:	4311      	orrs	r1, r2
 802008e:	f8ae 1000 	strh.w	r1, [lr]
 8020092:	e79e      	b.n	801ffd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020094:	b013      	add	sp, #76	; 0x4c
 8020096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802009a:	bf00      	nop
 802009c:	20015804 	.word	0x20015804

080200a0 <CRC_Lock>:
 80200a0:	b530      	push	{r4, r5, lr}
 80200a2:	4a20      	ldr	r2, [pc, #128]	; (8020124 <CRC_Lock+0x84>)
 80200a4:	6813      	ldr	r3, [r2, #0]
 80200a6:	f023 0301 	bic.w	r3, r3, #1
 80200aa:	6013      	str	r3, [r2, #0]
 80200ac:	4b1e      	ldr	r3, [pc, #120]	; (8020128 <CRC_Lock+0x88>)
 80200ae:	681a      	ldr	r2, [r3, #0]
 80200b0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80200b4:	4022      	ands	r2, r4
 80200b6:	f24c 2540 	movw	r5, #49728	; 0xc240
 80200ba:	42aa      	cmp	r2, r5
 80200bc:	d005      	beq.n	80200ca <CRC_Lock+0x2a>
 80200be:	681b      	ldr	r3, [r3, #0]
 80200c0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80200c4:	4023      	ands	r3, r4
 80200c6:	4293      	cmp	r3, r2
 80200c8:	d124      	bne.n	8020114 <CRC_Lock+0x74>
 80200ca:	4b18      	ldr	r3, [pc, #96]	; (802012c <CRC_Lock+0x8c>)
 80200cc:	681b      	ldr	r3, [r3, #0]
 80200ce:	bb0b      	cbnz	r3, 8020114 <CRC_Lock+0x74>
 80200d0:	4b17      	ldr	r3, [pc, #92]	; (8020130 <CRC_Lock+0x90>)
 80200d2:	681a      	ldr	r2, [r3, #0]
 80200d4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80200d8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80200dc:	d00d      	beq.n	80200fa <CRC_Lock+0x5a>
 80200de:	681a      	ldr	r2, [r3, #0]
 80200e0:	f240 4483 	movw	r4, #1155	; 0x483
 80200e4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80200e8:	42a2      	cmp	r2, r4
 80200ea:	d006      	beq.n	80200fa <CRC_Lock+0x5a>
 80200ec:	681b      	ldr	r3, [r3, #0]
 80200ee:	f240 4285 	movw	r2, #1157	; 0x485
 80200f2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80200f6:	4293      	cmp	r3, r2
 80200f8:	d10c      	bne.n	8020114 <CRC_Lock+0x74>
 80200fa:	4b0e      	ldr	r3, [pc, #56]	; (8020134 <CRC_Lock+0x94>)
 80200fc:	2201      	movs	r2, #1
 80200fe:	601a      	str	r2, [r3, #0]
 8020100:	681a      	ldr	r2, [r3, #0]
 8020102:	2a00      	cmp	r2, #0
 8020104:	d1fc      	bne.n	8020100 <CRC_Lock+0x60>
 8020106:	4b0c      	ldr	r3, [pc, #48]	; (8020138 <CRC_Lock+0x98>)
 8020108:	6018      	str	r0, [r3, #0]
 802010a:	6818      	ldr	r0, [r3, #0]
 802010c:	1a43      	subs	r3, r0, r1
 802010e:	4258      	negs	r0, r3
 8020110:	4158      	adcs	r0, r3
 8020112:	bd30      	pop	{r4, r5, pc}
 8020114:	4b09      	ldr	r3, [pc, #36]	; (802013c <CRC_Lock+0x9c>)
 8020116:	2201      	movs	r2, #1
 8020118:	601a      	str	r2, [r3, #0]
 802011a:	681a      	ldr	r2, [r3, #0]
 802011c:	2a00      	cmp	r2, #0
 802011e:	d1fc      	bne.n	802011a <CRC_Lock+0x7a>
 8020120:	4b07      	ldr	r3, [pc, #28]	; (8020140 <CRC_Lock+0xa0>)
 8020122:	e7f1      	b.n	8020108 <CRC_Lock+0x68>
 8020124:	e0002000 	.word	0xe0002000
 8020128:	e000ed00 	.word	0xe000ed00
 802012c:	e0042000 	.word	0xe0042000
 8020130:	5c001000 	.word	0x5c001000
 8020134:	58024c08 	.word	0x58024c08
 8020138:	58024c00 	.word	0x58024c00
 802013c:	40023008 	.word	0x40023008
 8020140:	40023000 	.word	0x40023000

08020144 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020144:	6101      	str	r1, [r0, #16]
 8020146:	4770      	bx	lr

08020148 <_ZN8touchgfx8Gestures4tickEv>:
 8020148:	7b83      	ldrb	r3, [r0, #14]
 802014a:	b14b      	cbz	r3, 8020160 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802014c:	8903      	ldrh	r3, [r0, #8]
 802014e:	3301      	adds	r3, #1
 8020150:	b29b      	uxth	r3, r3
 8020152:	2b07      	cmp	r3, #7
 8020154:	8103      	strh	r3, [r0, #8]
 8020156:	bf81      	itttt	hi
 8020158:	2300      	movhi	r3, #0
 802015a:	8143      	strhhi	r3, [r0, #10]
 802015c:	8183      	strhhi	r3, [r0, #12]
 802015e:	7383      	strbhi	r3, [r0, #14]
 8020160:	4770      	bx	lr
	...

08020164 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020164:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020168:	4698      	mov	r8, r3
 802016a:	8883      	ldrh	r3, [r0, #4]
 802016c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020170:	eba8 0303 	sub.w	r3, r8, r3
 8020174:	b21b      	sxth	r3, r3
 8020176:	4604      	mov	r4, r0
 8020178:	2b00      	cmp	r3, #0
 802017a:	4617      	mov	r7, r2
 802017c:	4a18      	ldr	r2, [pc, #96]	; (80201e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802017e:	9200      	str	r2, [sp, #0]
 8020180:	bfb8      	it	lt
 8020182:	425b      	neglt	r3, r3
 8020184:	8aa2      	ldrh	r2, [r4, #20]
 8020186:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802018a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802018e:	b21b      	sxth	r3, r3
 8020190:	460e      	mov	r6, r1
 8020192:	4293      	cmp	r3, r2
 8020194:	88c1      	ldrh	r1, [r0, #6]
 8020196:	f8ad 1008 	strh.w	r1, [sp, #8]
 802019a:	f04f 0000 	mov.w	r0, #0
 802019e:	f88d 0004 	strb.w	r0, [sp, #4]
 80201a2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80201a6:	dc07      	bgt.n	80201b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80201a8:	1a69      	subs	r1, r5, r1
 80201aa:	b209      	sxth	r1, r1
 80201ac:	2900      	cmp	r1, #0
 80201ae:	bfb8      	it	lt
 80201b0:	4249      	neglt	r1, r1
 80201b2:	b209      	sxth	r1, r1
 80201b4:	428a      	cmp	r2, r1
 80201b6:	da10      	bge.n	80201da <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80201b8:	6920      	ldr	r0, [r4, #16]
 80201ba:	6803      	ldr	r3, [r0, #0]
 80201bc:	4669      	mov	r1, sp
 80201be:	685b      	ldr	r3, [r3, #4]
 80201c0:	4798      	blx	r3
 80201c2:	eba8 0606 	sub.w	r6, r8, r6
 80201c6:	2300      	movs	r3, #0
 80201c8:	1bef      	subs	r7, r5, r7
 80201ca:	2001      	movs	r0, #1
 80201cc:	8123      	strh	r3, [r4, #8]
 80201ce:	8166      	strh	r6, [r4, #10]
 80201d0:	81a7      	strh	r7, [r4, #12]
 80201d2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80201d6:	80e5      	strh	r5, [r4, #6]
 80201d8:	73a0      	strb	r0, [r4, #14]
 80201da:	b004      	add	sp, #16
 80201dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80201e0:	08024608 	.word	0x08024608

080201e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80201e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80201e6:	461e      	mov	r6, r3
 80201e8:	1e4b      	subs	r3, r1, #1
 80201ea:	2b01      	cmp	r3, #1
 80201ec:	b085      	sub	sp, #20
 80201ee:	4604      	mov	r4, r0
 80201f0:	460d      	mov	r5, r1
 80201f2:	4617      	mov	r7, r2
 80201f4:	d84b      	bhi.n	802028e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80201f6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80201fa:	1cd3      	adds	r3, r2, #3
 80201fc:	b29b      	uxth	r3, r3
 80201fe:	2b06      	cmp	r3, #6
 8020200:	d916      	bls.n	8020230 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020202:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80202a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020206:	f8cd c004 	str.w	ip, [sp, #4]
 802020a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802020e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020212:	6900      	ldr	r0, [r0, #16]
 8020214:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020218:	f04f 0c00 	mov.w	ip, #0
 802021c:	f88d c008 	strb.w	ip, [sp, #8]
 8020220:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020224:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020228:	6803      	ldr	r3, [r0, #0]
 802022a:	a901      	add	r1, sp, #4
 802022c:	689b      	ldr	r3, [r3, #8]
 802022e:	4798      	blx	r3
 8020230:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020234:	1cd3      	adds	r3, r2, #3
 8020236:	b29b      	uxth	r3, r3
 8020238:	2b06      	cmp	r3, #6
 802023a:	d916      	bls.n	802026a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802023c:	f8df c064 	ldr.w	ip, [pc, #100]	; 80202a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020240:	f8cd c004 	str.w	ip, [sp, #4]
 8020244:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020248:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802024c:	6920      	ldr	r0, [r4, #16]
 802024e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020252:	f04f 0c01 	mov.w	ip, #1
 8020256:	f88d c008 	strb.w	ip, [sp, #8]
 802025a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802025e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020262:	6803      	ldr	r3, [r0, #0]
 8020264:	a901      	add	r1, sp, #4
 8020266:	689b      	ldr	r3, [r3, #8]
 8020268:	4798      	blx	r3
 802026a:	4b0d      	ldr	r3, [pc, #52]	; (80202a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802026c:	9301      	str	r3, [sp, #4]
 802026e:	6920      	ldr	r0, [r4, #16]
 8020270:	f88d 5008 	strb.w	r5, [sp, #8]
 8020274:	2300      	movs	r3, #0
 8020276:	f8ad 700a 	strh.w	r7, [sp, #10]
 802027a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802027e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020282:	6803      	ldr	r3, [r0, #0]
 8020284:	a901      	add	r1, sp, #4
 8020286:	681b      	ldr	r3, [r3, #0]
 8020288:	4798      	blx	r3
 802028a:	b005      	add	sp, #20
 802028c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802028e:	2900      	cmp	r1, #0
 8020290:	d1eb      	bne.n	802026a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020292:	80a2      	strh	r2, [r4, #4]
 8020294:	80c6      	strh	r6, [r0, #6]
 8020296:	60a1      	str	r1, [r4, #8]
 8020298:	81a1      	strh	r1, [r4, #12]
 802029a:	73a1      	strb	r1, [r4, #14]
 802029c:	e7e5      	b.n	802026a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802029e:	bf00      	nop
 80202a0:	080245f4 	.word	0x080245f4
 80202a4:	0802461c 	.word	0x0802461c

080202a8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80202a8:	10c9      	asrs	r1, r1, #3
 80202aa:	2900      	cmp	r1, #0
 80202ac:	bfb8      	it	lt
 80202ae:	4249      	neglt	r1, r1
 80202b0:	2801      	cmp	r0, #1
 80202b2:	d108      	bne.n	80202c6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80202b4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80202b8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80202bc:	4601      	mov	r1, r0
 80202be:	dd02      	ble.n	80202c6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80202c0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80202c4:	4770      	bx	lr
 80202c6:	29ff      	cmp	r1, #255	; 0xff
 80202c8:	bfa8      	it	ge
 80202ca:	21ff      	movge	r1, #255	; 0xff
 80202cc:	4608      	mov	r0, r1
 80202ce:	4770      	bx	lr

080202d0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80202d0:	b410      	push	{r4}
 80202d2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80202d6:	429c      	cmp	r4, r3
 80202d8:	d803      	bhi.n	80202e2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80202da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80202de:	f7ef b97d 	b.w	800f5dc <_ZN8touchgfx7Outline6lineToEii>
 80202e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80202e6:	4770      	bx	lr

080202e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80202e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202ec:	b08b      	sub	sp, #44	; 0x2c
 80202ee:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80202f2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80202f6:	9308      	str	r3, [sp, #32]
 80202f8:	4606      	mov	r6, r0
 80202fa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80202fe:	9309      	str	r3, [sp, #36]	; 0x24
 8020300:	468a      	mov	sl, r1
 8020302:	f7ef fad8 	bl	800f8b6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8020306:	68b5      	ldr	r5, [r6, #8]
 8020308:	4604      	mov	r4, r0
 802030a:	2d00      	cmp	r5, #0
 802030c:	d044      	beq.n	8020398 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802030e:	6873      	ldr	r3, [r6, #4]
 8020310:	42ab      	cmp	r3, r5
 8020312:	d33d      	bcc.n	8020390 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8020314:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8020318:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802031c:	eb02 0b03 	add.w	fp, r2, r3
 8020320:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8020324:	fb02 1203 	mla	r2, r2, r3, r1
 8020328:	9205      	str	r2, [sp, #20]
 802032a:	1e6a      	subs	r2, r5, #1
 802032c:	9204      	str	r2, [sp, #16]
 802032e:	f04f 0800 	mov.w	r8, #0
 8020332:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8020336:	f9b4 7000 	ldrsh.w	r7, [r4]
 802033a:	454b      	cmp	r3, r9
 802033c:	463a      	mov	r2, r7
 802033e:	d008      	beq.n	8020352 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020340:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8020344:	eb03 0b09 	add.w	fp, r3, r9
 8020348:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802034c:	fb03 1309 	mla	r3, r3, r9, r1
 8020350:	9305      	str	r3, [sp, #20]
 8020352:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8020356:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802035a:	4498      	add	r8, r3
 802035c:	9b04      	ldr	r3, [sp, #16]
 802035e:	3b01      	subs	r3, #1
 8020360:	9304      	str	r3, [sp, #16]
 8020362:	9b04      	ldr	r3, [sp, #16]
 8020364:	3301      	adds	r3, #1
 8020366:	d015      	beq.n	8020394 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020368:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802036c:	42bb      	cmp	r3, r7
 802036e:	d117      	bne.n	80203a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020370:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8020374:	9b04      	ldr	r3, [sp, #16]
 8020376:	4548      	cmp	r0, r9
 8020378:	f103 33ff 	add.w	r3, r3, #4294967295
 802037c:	d17f      	bne.n	802047e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802037e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8020382:	4401      	add	r1, r0
 8020384:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020388:	4480      	add	r8, r0
 802038a:	e7e9      	b.n	8020360 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802038c:	461f      	mov	r7, r3
 802038e:	e044      	b.n	802041a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8020390:	2000      	movs	r0, #0
 8020392:	e002      	b.n	802039a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8020394:	2900      	cmp	r1, #0
 8020396:	d16f      	bne.n	8020478 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8020398:	2001      	movs	r0, #1
 802039a:	b00b      	add	sp, #44	; 0x2c
 802039c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203a0:	2900      	cmp	r1, #0
 80203a2:	d030      	beq.n	8020406 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80203a4:	2f00      	cmp	r7, #0
 80203a6:	db29      	blt.n	80203fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80203a8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80203ac:	42bb      	cmp	r3, r7
 80203ae:	dd25      	ble.n	80203fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80203b0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80203b4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80203b8:	f7ff ff76 	bl	80202a8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80203bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203be:	fb10 f003 	smulbb	r0, r0, r3
 80203c2:	b280      	uxth	r0, r0
 80203c4:	1c41      	adds	r1, r0, #1
 80203c6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80203ca:	1209      	asrs	r1, r1, #8
 80203cc:	f011 0fff 	tst.w	r1, #255	; 0xff
 80203d0:	d014      	beq.n	80203fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80203d2:	9808      	ldr	r0, [sp, #32]
 80203d4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80203d6:	b2c9      	uxtb	r1, r1
 80203d8:	b2ba      	uxth	r2, r7
 80203da:	9102      	str	r1, [sp, #8]
 80203dc:	2101      	movs	r1, #1
 80203de:	4413      	add	r3, r2
 80203e0:	9101      	str	r1, [sp, #4]
 80203e2:	4402      	add	r2, r0
 80203e4:	fa0f f18b 	sxth.w	r1, fp
 80203e8:	f8da 0000 	ldr.w	r0, [sl]
 80203ec:	9100      	str	r1, [sp, #0]
 80203ee:	6941      	ldr	r1, [r0, #20]
 80203f0:	b21b      	sxth	r3, r3
 80203f2:	460d      	mov	r5, r1
 80203f4:	b212      	sxth	r2, r2
 80203f6:	9905      	ldr	r1, [sp, #20]
 80203f8:	4650      	mov	r0, sl
 80203fa:	47a8      	blx	r5
 80203fc:	9b04      	ldr	r3, [sp, #16]
 80203fe:	3301      	adds	r3, #1
 8020400:	f107 0201 	add.w	r2, r7, #1
 8020404:	d0c8      	beq.n	8020398 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020406:	f9b4 7000 	ldrsh.w	r7, [r4]
 802040a:	1abb      	subs	r3, r7, r2
 802040c:	2b00      	cmp	r3, #0
 802040e:	dd31      	ble.n	8020474 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020410:	2a00      	cmp	r2, #0
 8020412:	dabb      	bge.n	802038c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8020414:	2f00      	cmp	r7, #0
 8020416:	dd2d      	ble.n	8020474 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020418:	2200      	movs	r2, #0
 802041a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802041e:	19d1      	adds	r1, r2, r7
 8020420:	4299      	cmp	r1, r3
 8020422:	db02      	blt.n	802042a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8020424:	1a9f      	subs	r7, r3, r2
 8020426:	2f00      	cmp	r7, #0
 8020428:	dd24      	ble.n	8020474 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802042a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802042e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020432:	f7ff ff39 	bl	80202a8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8020436:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020438:	fb10 f003 	smulbb	r0, r0, r3
 802043c:	b280      	uxth	r0, r0
 802043e:	1c41      	adds	r1, r0, #1
 8020440:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020444:	1209      	asrs	r1, r1, #8
 8020446:	f011 0fff 	tst.w	r1, #255	; 0xff
 802044a:	d013      	beq.n	8020474 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802044c:	9808      	ldr	r0, [sp, #32]
 802044e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020450:	b292      	uxth	r2, r2
 8020452:	b2c9      	uxtb	r1, r1
 8020454:	4413      	add	r3, r2
 8020456:	9102      	str	r1, [sp, #8]
 8020458:	4402      	add	r2, r0
 802045a:	b23f      	sxth	r7, r7
 802045c:	f8da 0000 	ldr.w	r0, [sl]
 8020460:	9701      	str	r7, [sp, #4]
 8020462:	fa0f f18b 	sxth.w	r1, fp
 8020466:	9100      	str	r1, [sp, #0]
 8020468:	6947      	ldr	r7, [r0, #20]
 802046a:	9905      	ldr	r1, [sp, #20]
 802046c:	b21b      	sxth	r3, r3
 802046e:	b212      	sxth	r2, r2
 8020470:	4650      	mov	r0, sl
 8020472:	47b8      	blx	r7
 8020474:	464b      	mov	r3, r9
 8020476:	e75c      	b.n	8020332 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020478:	2f00      	cmp	r7, #0
 802047a:	da95      	bge.n	80203a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802047c:	e78c      	b.n	8020398 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802047e:	2900      	cmp	r1, #0
 8020480:	d0f8      	beq.n	8020474 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020482:	e78f      	b.n	80203a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020484 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020484:	4b4c      	ldr	r3, [pc, #304]	; (80205b8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020486:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802048a:	2500      	movs	r5, #0
 802048c:	f100 0620 	add.w	r6, r0, #32
 8020490:	4604      	mov	r4, r0
 8020492:	e9c0 3100 	strd	r3, r1, [r0]
 8020496:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802049a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802049e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80204a2:	f100 0718 	add.w	r7, r0, #24
 80204a6:	4630      	mov	r0, r6
 80204a8:	4690      	mov	r8, r2
 80204aa:	f7ee fbcf 	bl	800ec4c <_ZN8touchgfx7OutlineC1Ev>
 80204ae:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80204b2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80204b6:	2301      	movs	r3, #1
 80204b8:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80204bc:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80204c0:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80204c4:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80204c8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80204cc:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80204d0:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80204d4:	f9b8 2000 	ldrsh.w	r2, [r8]
 80204d8:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80204dc:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80204e0:	9500      	str	r5, [sp, #0]
 80204e2:	4410      	add	r0, r2
 80204e4:	b280      	uxth	r0, r0
 80204e6:	fa0f fa80 	sxth.w	sl, r0
 80204ea:	45aa      	cmp	sl, r5
 80204ec:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80204f0:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80204f4:	dd5c      	ble.n	80205b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80204f6:	4591      	cmp	r9, r2
 80204f8:	dd5a      	ble.n	80205b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80204fa:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80204fe:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8020502:	440b      	add	r3, r1
 8020504:	b29b      	uxth	r3, r3
 8020506:	b21d      	sxth	r5, r3
 8020508:	2d00      	cmp	r5, #0
 802050a:	dd51      	ble.n	80205b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802050c:	458e      	cmp	lr, r1
 802050e:	dd4f      	ble.n	80205b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020510:	45d1      	cmp	r9, sl
 8020512:	bfb8      	it	lt
 8020514:	fa1f f089 	uxthlt.w	r0, r9
 8020518:	45ae      	cmp	lr, r5
 802051a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802051e:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8020522:	bfb8      	it	lt
 8020524:	fa1f f38e 	uxthlt.w	r3, lr
 8020528:	1a80      	subs	r0, r0, r2
 802052a:	1a5b      	subs	r3, r3, r1
 802052c:	f8ad 0004 	strh.w	r0, [sp, #4]
 8020530:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020534:	f8ad 2000 	strh.w	r2, [sp]
 8020538:	f8ad 1002 	strh.w	r1, [sp, #2]
 802053c:	466d      	mov	r5, sp
 802053e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8020542:	e887 0003 	stmia.w	r7, {r0, r1}
 8020546:	f8dc 3000 	ldr.w	r3, [ip]
 802054a:	4660      	mov	r0, ip
 802054c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802054e:	4639      	mov	r1, r7
 8020550:	4798      	blx	r3
 8020552:	6861      	ldr	r1, [r4, #4]
 8020554:	4628      	mov	r0, r5
 8020556:	3104      	adds	r1, #4
 8020558:	f7f0 fd0c 	bl	8010f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802055c:	4638      	mov	r0, r7
 802055e:	f7f0 fce1 	bl	8010f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020562:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020566:	f8bd 2000 	ldrh.w	r2, [sp]
 802056a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802056e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020572:	4630      	mov	r0, r6
 8020574:	f7ee fb4e 	bl	800ec14 <_ZN8touchgfx7Outline5resetEv>
 8020578:	f9bd 3000 	ldrsh.w	r3, [sp]
 802057c:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020580:	015b      	lsls	r3, r3, #5
 8020582:	60a3      	str	r3, [r4, #8]
 8020584:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020588:	015b      	lsls	r3, r3, #5
 802058a:	60e3      	str	r3, [r4, #12]
 802058c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020590:	015b      	lsls	r3, r3, #5
 8020592:	6123      	str	r3, [r4, #16]
 8020594:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020598:	015b      	lsls	r3, r3, #5
 802059a:	6163      	str	r3, [r4, #20]
 802059c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80205a0:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80205a4:	4620      	mov	r0, r4
 80205a6:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80205aa:	b002      	add	sp, #8
 80205ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80205b0:	2300      	movs	r3, #0
 80205b2:	9301      	str	r3, [sp, #4]
 80205b4:	e7c2      	b.n	802053c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 80205b6:	bf00      	nop
 80205b8:	08023e1c 	.word	0x08023e1c

080205bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80205bc:	b510      	push	{r4, lr}
 80205be:	4b07      	ldr	r3, [pc, #28]	; (80205dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80205c0:	781b      	ldrb	r3, [r3, #0]
 80205c2:	2b01      	cmp	r3, #1
 80205c4:	d108      	bne.n	80205d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80205c6:	6843      	ldr	r3, [r0, #4]
 80205c8:	6814      	ldr	r4, [r2, #0]
 80205ca:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80205ce:	680b      	ldr	r3, [r1, #0]
 80205d0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80205d4:	6013      	str	r3, [r2, #0]
 80205d6:	600c      	str	r4, [r1, #0]
 80205d8:	bd10      	pop	{r4, pc}
 80205da:	bf00      	nop
 80205dc:	200157ec 	.word	0x200157ec

080205e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80205e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80205e2:	ab02      	add	r3, sp, #8
 80205e4:	4604      	mov	r4, r0
 80205e6:	f843 2d08 	str.w	r2, [r3, #-8]!
 80205ea:	9101      	str	r1, [sp, #4]
 80205ec:	461a      	mov	r2, r3
 80205ee:	a901      	add	r1, sp, #4
 80205f0:	f7ff ffe4 	bl	80205bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80205f4:	68a3      	ldr	r3, [r4, #8]
 80205f6:	9901      	ldr	r1, [sp, #4]
 80205f8:	9a00      	ldr	r2, [sp, #0]
 80205fa:	1ac9      	subs	r1, r1, r3
 80205fc:	68e3      	ldr	r3, [r4, #12]
 80205fe:	9101      	str	r1, [sp, #4]
 8020600:	1ad2      	subs	r2, r2, r3
 8020602:	2a00      	cmp	r2, #0
 8020604:	9200      	str	r2, [sp, #0]
 8020606:	db1c      	blt.n	8020642 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8020608:	6963      	ldr	r3, [r4, #20]
 802060a:	429a      	cmp	r2, r3
 802060c:	bfac      	ite	ge
 802060e:	2002      	movge	r0, #2
 8020610:	2000      	movlt	r0, #0
 8020612:	2900      	cmp	r1, #0
 8020614:	db17      	blt.n	8020646 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8020616:	6923      	ldr	r3, [r4, #16]
 8020618:	4299      	cmp	r1, r3
 802061a:	bfac      	ite	ge
 802061c:	2308      	movge	r3, #8
 802061e:	2300      	movlt	r3, #0
 8020620:	4303      	orrs	r3, r0
 8020622:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8020626:	b2dd      	uxtb	r5, r3
 8020628:	b978      	cbnz	r0, 802064a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802062a:	f104 0020 	add.w	r0, r4, #32
 802062e:	f7ff fe4f 	bl	80202d0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020632:	9b01      	ldr	r3, [sp, #4]
 8020634:	65e3      	str	r3, [r4, #92]	; 0x5c
 8020636:	9b00      	ldr	r3, [sp, #0]
 8020638:	6623      	str	r3, [r4, #96]	; 0x60
 802063a:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802063e:	b002      	add	sp, #8
 8020640:	bd70      	pop	{r4, r5, r6, pc}
 8020642:	2001      	movs	r0, #1
 8020644:	e7e5      	b.n	8020612 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020646:	2304      	movs	r3, #4
 8020648:	e7ea      	b.n	8020620 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802064a:	b113      	cbz	r3, 8020652 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802064c:	ea10 0305 	ands.w	r3, r0, r5
 8020650:	d11d      	bne.n	802068e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 8020652:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020656:	f104 0620 	add.w	r6, r4, #32
 802065a:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802065e:	b193      	cbz	r3, 8020686 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8020660:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020664:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020668:	4298      	cmp	r0, r3
 802066a:	d802      	bhi.n	8020672 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802066c:	4630      	mov	r0, r6
 802066e:	f7ee ffcf 	bl	800f610 <_ZN8touchgfx7Outline6moveToEii>
 8020672:	2300      	movs	r3, #0
 8020674:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020678:	2301      	movs	r3, #1
 802067a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802067e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020682:	4630      	mov	r0, r6
 8020684:	e7d3      	b.n	802062e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020686:	4630      	mov	r0, r6
 8020688:	f7ff fe22 	bl	80202d0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802068c:	e7f7      	b.n	802067e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802068e:	461d      	mov	r5, r3
 8020690:	e7cf      	b.n	8020632 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

08020692 <_ZN8touchgfx6Canvas5closeEv>:
 8020692:	b538      	push	{r3, r4, r5, lr}
 8020694:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020698:	4604      	mov	r4, r0
 802069a:	b993      	cbnz	r3, 80206c2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802069c:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80206a0:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80206a4:	4213      	tst	r3, r2
 80206a6:	d10c      	bne.n	80206c2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80206a8:	f100 0520 	add.w	r5, r0, #32
 80206ac:	b123      	cbz	r3, 80206b8 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80206ae:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80206b2:	4628      	mov	r0, r5
 80206b4:	f7ff fe0c 	bl	80202d0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80206b8:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80206bc:	4628      	mov	r0, r5
 80206be:	f7ff fe07 	bl	80202d0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80206c2:	2300      	movs	r3, #0
 80206c4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80206c8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80206cc:	4298      	cmp	r0, r3
 80206ce:	bf34      	ite	cc
 80206d0:	2000      	movcc	r0, #0
 80206d2:	2001      	movcs	r0, #1
 80206d4:	bd38      	pop	{r3, r4, r5, pc}
	...

080206d8 <_ZN8touchgfx6Canvas6renderEh>:
 80206d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80206dc:	4604      	mov	r4, r0
 80206de:	6840      	ldr	r0, [r0, #4]
 80206e0:	6803      	ldr	r3, [r0, #0]
 80206e2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80206e4:	460d      	mov	r5, r1
 80206e6:	4798      	blx	r3
 80206e8:	fb10 f105 	smulbb	r1, r0, r5
 80206ec:	b289      	uxth	r1, r1
 80206ee:	1c4d      	adds	r5, r1, #1
 80206f0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80206f4:	122d      	asrs	r5, r5, #8
 80206f6:	f000 8098 	beq.w	802082a <_ZN8touchgfx6Canvas6renderEh+0x152>
 80206fa:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80206fe:	2b00      	cmp	r3, #0
 8020700:	f000 8093 	beq.w	802082a <_ZN8touchgfx6Canvas6renderEh+0x152>
 8020704:	4620      	mov	r0, r4
 8020706:	f7ff ffc4 	bl	8020692 <_ZN8touchgfx6Canvas5closeEv>
 802070a:	4607      	mov	r7, r0
 802070c:	2800      	cmp	r0, #0
 802070e:	d043      	beq.n	8020798 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8020710:	6863      	ldr	r3, [r4, #4]
 8020712:	4e47      	ldr	r6, [pc, #284]	; (8020830 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 8020714:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8020716:	6837      	ldr	r7, [r6, #0]
 8020718:	6803      	ldr	r3, [r0, #0]
 802071a:	689b      	ldr	r3, [r3, #8]
 802071c:	4798      	blx	r3
 802071e:	4601      	mov	r1, r0
 8020720:	4638      	mov	r0, r7
 8020722:	f7eb fb11 	bl	800bd48 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8020726:	4607      	mov	r7, r0
 8020728:	f7e2 f8f8 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 802072c:	6803      	ldr	r3, [r0, #0]
 802072e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020730:	4798      	blx	r3
 8020732:	4680      	mov	r8, r0
 8020734:	f7e2 f8f2 	bl	800291c <_ZN8touchgfx3HAL3lcdEv>
 8020738:	6803      	ldr	r3, [r0, #0]
 802073a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802073c:	4798      	blx	r3
 802073e:	280b      	cmp	r0, #11
 8020740:	d858      	bhi.n	80207f4 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 8020742:	e8df f000 	tbb	[pc, r0]
 8020746:	594e      	.short	0x594e
 8020748:	2d570669 	.word	0x2d570669
 802074c:	6262623d 	.word	0x6262623d
 8020750:	6262      	.short	0x6262
 8020752:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020756:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802075a:	2208      	movs	r2, #8
 802075c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020760:	fb08 2303 	mla	r3, r8, r3, r2
 8020764:	441f      	add	r7, r3
 8020766:	424b      	negs	r3, r1
 8020768:	f003 0307 	and.w	r3, r3, #7
 802076c:	f001 0107 	and.w	r1, r1, #7
 8020770:	bf58      	it	pl
 8020772:	4259      	negpl	r1, r3
 8020774:	b2c9      	uxtb	r1, r1
 8020776:	b2ed      	uxtb	r5, r5
 8020778:	e9cd 1500 	strd	r1, r5, [sp]
 802077c:	6860      	ldr	r0, [r4, #4]
 802077e:	fa0f f388 	sxth.w	r3, r8
 8020782:	463a      	mov	r2, r7
 8020784:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020786:	f104 0020 	add.w	r0, r4, #32
 802078a:	f7ff fdad 	bl	80202e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802078e:	4607      	mov	r7, r0
 8020790:	6830      	ldr	r0, [r6, #0]
 8020792:	6803      	ldr	r3, [r0, #0]
 8020794:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020796:	4798      	blx	r3
 8020798:	4638      	mov	r0, r7
 802079a:	b002      	add	sp, #8
 802079c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80207a0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80207a4:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80207a8:	2204      	movs	r2, #4
 80207aa:	fb91 f2f2 	sdiv	r2, r1, r2
 80207ae:	fb08 2303 	mla	r3, r8, r3, r2
 80207b2:	441f      	add	r7, r3
 80207b4:	424b      	negs	r3, r1
 80207b6:	f003 0303 	and.w	r3, r3, #3
 80207ba:	f001 0103 	and.w	r1, r1, #3
 80207be:	e7d7      	b.n	8020770 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80207c0:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80207c4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80207c8:	2900      	cmp	r1, #0
 80207ca:	f04f 0202 	mov.w	r2, #2
 80207ce:	fb91 f2f2 	sdiv	r2, r1, r2
 80207d2:	f001 0101 	and.w	r1, r1, #1
 80207d6:	fb08 2303 	mla	r3, r8, r3, r2
 80207da:	441f      	add	r7, r3
 80207dc:	bfb8      	it	lt
 80207de:	4249      	neglt	r1, r1
 80207e0:	e7c8      	b.n	8020774 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80207e2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80207e6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80207ea:	fb08 f303 	mul.w	r3, r8, r3
 80207ee:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80207f2:	441f      	add	r7, r3
 80207f4:	2100      	movs	r1, #0
 80207f6:	e7be      	b.n	8020776 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80207f8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80207fc:	fb08 f203 	mul.w	r2, r8, r3
 8020800:	8b23      	ldrh	r3, [r4, #24]
 8020802:	2103      	movs	r1, #3
 8020804:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020808:	e7f3      	b.n	80207f2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802080a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802080e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020812:	fb08 2303 	mla	r3, r8, r3, r2
 8020816:	e7ec      	b.n	80207f2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020818:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802081c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020820:	fb08 f303 	mul.w	r3, r8, r3
 8020824:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020828:	e7e3      	b.n	80207f2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802082a:	2701      	movs	r7, #1
 802082c:	e7b4      	b.n	8020798 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 802082e:	bf00      	nop
 8020830:	200157f4 	.word	0x200157f4

08020834 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020834:	b513      	push	{r0, r1, r4, lr}
 8020836:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802083a:	4604      	mov	r4, r0
 802083c:	e9cd 2100 	strd	r2, r1, [sp]
 8020840:	b1a3      	cbz	r3, 802086c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020842:	466a      	mov	r2, sp
 8020844:	a901      	add	r1, sp, #4
 8020846:	4620      	mov	r0, r4
 8020848:	f7ff feb8 	bl	80205bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802084c:	68a3      	ldr	r3, [r4, #8]
 802084e:	9901      	ldr	r1, [sp, #4]
 8020850:	9a00      	ldr	r2, [sp, #0]
 8020852:	1ac9      	subs	r1, r1, r3
 8020854:	68e3      	ldr	r3, [r4, #12]
 8020856:	9101      	str	r1, [sp, #4]
 8020858:	1ad2      	subs	r2, r2, r3
 802085a:	2a00      	cmp	r2, #0
 802085c:	9200      	str	r2, [sp, #0]
 802085e:	da0b      	bge.n	8020878 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020860:	2301      	movs	r3, #1
 8020862:	2900      	cmp	r1, #0
 8020864:	da0e      	bge.n	8020884 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020866:	f043 0304 	orr.w	r3, r3, #4
 802086a:	e013      	b.n	8020894 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802086c:	f7ff ff11 	bl	8020692 <_ZN8touchgfx6Canvas5closeEv>
 8020870:	2800      	cmp	r0, #0
 8020872:	d1e6      	bne.n	8020842 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020874:	b002      	add	sp, #8
 8020876:	bd10      	pop	{r4, pc}
 8020878:	6963      	ldr	r3, [r4, #20]
 802087a:	429a      	cmp	r2, r3
 802087c:	bfac      	ite	ge
 802087e:	2302      	movge	r3, #2
 8020880:	2300      	movlt	r3, #0
 8020882:	e7ee      	b.n	8020862 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020884:	6920      	ldr	r0, [r4, #16]
 8020886:	4281      	cmp	r1, r0
 8020888:	bfac      	ite	ge
 802088a:	2008      	movge	r0, #8
 802088c:	2000      	movlt	r0, #0
 802088e:	4318      	orrs	r0, r3
 8020890:	b2c3      	uxtb	r3, r0
 8020892:	b158      	cbz	r0, 80208ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020894:	2201      	movs	r2, #1
 8020896:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802089a:	9901      	ldr	r1, [sp, #4]
 802089c:	9a00      	ldr	r2, [sp, #0]
 802089e:	66a1      	str	r1, [r4, #104]	; 0x68
 80208a0:	66e2      	str	r2, [r4, #108]	; 0x6c
 80208a2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80208a6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80208aa:	e7e3      	b.n	8020874 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80208ac:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80208b0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80208b4:	4298      	cmp	r0, r3
 80208b6:	d803      	bhi.n	80208c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80208b8:	f104 0020 	add.w	r0, r4, #32
 80208bc:	f7ee fea8 	bl	800f610 <_ZN8touchgfx7Outline6moveToEii>
 80208c0:	2300      	movs	r3, #0
 80208c2:	2201      	movs	r2, #1
 80208c4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80208c8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80208cc:	e7e5      	b.n	802089a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080208ce <__aeabi_atexit>:
 80208ce:	460b      	mov	r3, r1
 80208d0:	4601      	mov	r1, r0
 80208d2:	4618      	mov	r0, r3
 80208d4:	f000 b8d8 	b.w	8020a88 <__cxa_atexit>

080208d8 <_ZdlPvj>:
 80208d8:	f000 b812 	b.w	8020900 <_ZdlPv>

080208dc <__cxa_guard_acquire>:
 80208dc:	6803      	ldr	r3, [r0, #0]
 80208de:	07db      	lsls	r3, r3, #31
 80208e0:	d406      	bmi.n	80208f0 <__cxa_guard_acquire+0x14>
 80208e2:	7843      	ldrb	r3, [r0, #1]
 80208e4:	b103      	cbz	r3, 80208e8 <__cxa_guard_acquire+0xc>
 80208e6:	deff      	udf	#255	; 0xff
 80208e8:	2301      	movs	r3, #1
 80208ea:	7043      	strb	r3, [r0, #1]
 80208ec:	4618      	mov	r0, r3
 80208ee:	4770      	bx	lr
 80208f0:	2000      	movs	r0, #0
 80208f2:	4770      	bx	lr

080208f4 <__cxa_guard_release>:
 80208f4:	2301      	movs	r3, #1
 80208f6:	6003      	str	r3, [r0, #0]
 80208f8:	4770      	bx	lr

080208fa <__cxa_pure_virtual>:
 80208fa:	b508      	push	{r3, lr}
 80208fc:	f000 f80e 	bl	802091c <_ZSt9terminatev>

08020900 <_ZdlPv>:
 8020900:	f000 ba0e 	b.w	8020d20 <free>

08020904 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020904:	b508      	push	{r3, lr}
 8020906:	4780      	blx	r0
 8020908:	f000 f892 	bl	8020a30 <abort>

0802090c <_ZSt13get_terminatev>:
 802090c:	4b02      	ldr	r3, [pc, #8]	; (8020918 <_ZSt13get_terminatev+0xc>)
 802090e:	6818      	ldr	r0, [r3, #0]
 8020910:	f3bf 8f5b 	dmb	ish
 8020914:	4770      	bx	lr
 8020916:	bf00      	nop
 8020918:	20000100 	.word	0x20000100

0802091c <_ZSt9terminatev>:
 802091c:	b508      	push	{r3, lr}
 802091e:	f7ff fff5 	bl	802090c <_ZSt13get_terminatev>
 8020922:	f7ff ffef 	bl	8020904 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08020928 <ceilf>:
 8020928:	ee10 3a10 	vmov	r3, s0
 802092c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020930:	3a7f      	subs	r2, #127	; 0x7f
 8020932:	2a16      	cmp	r2, #22
 8020934:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020938:	dc2a      	bgt.n	8020990 <ceilf+0x68>
 802093a:	2a00      	cmp	r2, #0
 802093c:	da11      	bge.n	8020962 <ceilf+0x3a>
 802093e:	eddf 7a19 	vldr	s15, [pc, #100]	; 80209a4 <ceilf+0x7c>
 8020942:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020946:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802094a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802094e:	dd05      	ble.n	802095c <ceilf+0x34>
 8020950:	2b00      	cmp	r3, #0
 8020952:	db23      	blt.n	802099c <ceilf+0x74>
 8020954:	2900      	cmp	r1, #0
 8020956:	bf18      	it	ne
 8020958:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802095c:	ee00 3a10 	vmov	s0, r3
 8020960:	4770      	bx	lr
 8020962:	4911      	ldr	r1, [pc, #68]	; (80209a8 <ceilf+0x80>)
 8020964:	4111      	asrs	r1, r2
 8020966:	420b      	tst	r3, r1
 8020968:	d0fa      	beq.n	8020960 <ceilf+0x38>
 802096a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80209a4 <ceilf+0x7c>
 802096e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020972:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020976:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802097a:	ddef      	ble.n	802095c <ceilf+0x34>
 802097c:	2b00      	cmp	r3, #0
 802097e:	bfc2      	ittt	gt
 8020980:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020984:	fa40 f202 	asrgt.w	r2, r0, r2
 8020988:	189b      	addgt	r3, r3, r2
 802098a:	ea23 0301 	bic.w	r3, r3, r1
 802098e:	e7e5      	b.n	802095c <ceilf+0x34>
 8020990:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020994:	d3e4      	bcc.n	8020960 <ceilf+0x38>
 8020996:	ee30 0a00 	vadd.f32	s0, s0, s0
 802099a:	4770      	bx	lr
 802099c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80209a0:	e7dc      	b.n	802095c <ceilf+0x34>
 80209a2:	bf00      	nop
 80209a4:	7149f2ca 	.word	0x7149f2ca
 80209a8:	007fffff 	.word	0x007fffff

080209ac <floorf>:
 80209ac:	ee10 3a10 	vmov	r3, s0
 80209b0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80209b4:	3a7f      	subs	r2, #127	; 0x7f
 80209b6:	2a16      	cmp	r2, #22
 80209b8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80209bc:	dc2a      	bgt.n	8020a14 <floorf+0x68>
 80209be:	2a00      	cmp	r2, #0
 80209c0:	da11      	bge.n	80209e6 <floorf+0x3a>
 80209c2:	eddf 7a18 	vldr	s15, [pc, #96]	; 8020a24 <floorf+0x78>
 80209c6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80209ca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80209ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80209d2:	dd05      	ble.n	80209e0 <floorf+0x34>
 80209d4:	2b00      	cmp	r3, #0
 80209d6:	da23      	bge.n	8020a20 <floorf+0x74>
 80209d8:	4a13      	ldr	r2, [pc, #76]	; (8020a28 <floorf+0x7c>)
 80209da:	2900      	cmp	r1, #0
 80209dc:	bf18      	it	ne
 80209de:	4613      	movne	r3, r2
 80209e0:	ee00 3a10 	vmov	s0, r3
 80209e4:	4770      	bx	lr
 80209e6:	4911      	ldr	r1, [pc, #68]	; (8020a2c <floorf+0x80>)
 80209e8:	4111      	asrs	r1, r2
 80209ea:	420b      	tst	r3, r1
 80209ec:	d0fa      	beq.n	80209e4 <floorf+0x38>
 80209ee:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8020a24 <floorf+0x78>
 80209f2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80209f6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80209fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80209fe:	ddef      	ble.n	80209e0 <floorf+0x34>
 8020a00:	2b00      	cmp	r3, #0
 8020a02:	bfbe      	ittt	lt
 8020a04:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8020a08:	fa40 f202 	asrlt.w	r2, r0, r2
 8020a0c:	189b      	addlt	r3, r3, r2
 8020a0e:	ea23 0301 	bic.w	r3, r3, r1
 8020a12:	e7e5      	b.n	80209e0 <floorf+0x34>
 8020a14:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020a18:	d3e4      	bcc.n	80209e4 <floorf+0x38>
 8020a1a:	ee30 0a00 	vadd.f32	s0, s0, s0
 8020a1e:	4770      	bx	lr
 8020a20:	2300      	movs	r3, #0
 8020a22:	e7dd      	b.n	80209e0 <floorf+0x34>
 8020a24:	7149f2ca 	.word	0x7149f2ca
 8020a28:	bf800000 	.word	0xbf800000
 8020a2c:	007fffff 	.word	0x007fffff

08020a30 <abort>:
 8020a30:	b508      	push	{r3, lr}
 8020a32:	2006      	movs	r0, #6
 8020a34:	f000 fe02 	bl	802163c <raise>
 8020a38:	2001      	movs	r0, #1
 8020a3a:	f7e1 fc97 	bl	800236c <_exit>
	...

08020a40 <__assert_func>:
 8020a40:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020a42:	4614      	mov	r4, r2
 8020a44:	461a      	mov	r2, r3
 8020a46:	4b09      	ldr	r3, [pc, #36]	; (8020a6c <__assert_func+0x2c>)
 8020a48:	681b      	ldr	r3, [r3, #0]
 8020a4a:	4605      	mov	r5, r0
 8020a4c:	68d8      	ldr	r0, [r3, #12]
 8020a4e:	b14c      	cbz	r4, 8020a64 <__assert_func+0x24>
 8020a50:	4b07      	ldr	r3, [pc, #28]	; (8020a70 <__assert_func+0x30>)
 8020a52:	9100      	str	r1, [sp, #0]
 8020a54:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020a58:	4906      	ldr	r1, [pc, #24]	; (8020a74 <__assert_func+0x34>)
 8020a5a:	462b      	mov	r3, r5
 8020a5c:	f000 f8fe 	bl	8020c5c <fiprintf>
 8020a60:	f7ff ffe6 	bl	8020a30 <abort>
 8020a64:	4b04      	ldr	r3, [pc, #16]	; (8020a78 <__assert_func+0x38>)
 8020a66:	461c      	mov	r4, r3
 8020a68:	e7f3      	b.n	8020a52 <__assert_func+0x12>
 8020a6a:	bf00      	nop
 8020a6c:	20000104 	.word	0x20000104
 8020a70:	080248e4 	.word	0x080248e4
 8020a74:	080248f1 	.word	0x080248f1
 8020a78:	08023867 	.word	0x08023867

08020a7c <atexit>:
 8020a7c:	2300      	movs	r3, #0
 8020a7e:	4601      	mov	r1, r0
 8020a80:	461a      	mov	r2, r3
 8020a82:	4618      	mov	r0, r3
 8020a84:	f000 bf0c 	b.w	80218a0 <__register_exitproc>

08020a88 <__cxa_atexit>:
 8020a88:	b510      	push	{r4, lr}
 8020a8a:	4c05      	ldr	r4, [pc, #20]	; (8020aa0 <__cxa_atexit+0x18>)
 8020a8c:	4613      	mov	r3, r2
 8020a8e:	b12c      	cbz	r4, 8020a9c <__cxa_atexit+0x14>
 8020a90:	460a      	mov	r2, r1
 8020a92:	4601      	mov	r1, r0
 8020a94:	2002      	movs	r0, #2
 8020a96:	f000 ff03 	bl	80218a0 <__register_exitproc>
 8020a9a:	bd10      	pop	{r4, pc}
 8020a9c:	4620      	mov	r0, r4
 8020a9e:	e7fc      	b.n	8020a9a <__cxa_atexit+0x12>
 8020aa0:	080218a1 	.word	0x080218a1

08020aa4 <__errno>:
 8020aa4:	4b01      	ldr	r3, [pc, #4]	; (8020aac <__errno+0x8>)
 8020aa6:	6818      	ldr	r0, [r3, #0]
 8020aa8:	4770      	bx	lr
 8020aaa:	bf00      	nop
 8020aac:	20000104 	.word	0x20000104

08020ab0 <std>:
 8020ab0:	2300      	movs	r3, #0
 8020ab2:	b510      	push	{r4, lr}
 8020ab4:	4604      	mov	r4, r0
 8020ab6:	e9c0 3300 	strd	r3, r3, [r0]
 8020aba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8020abe:	6083      	str	r3, [r0, #8]
 8020ac0:	8181      	strh	r1, [r0, #12]
 8020ac2:	6643      	str	r3, [r0, #100]	; 0x64
 8020ac4:	81c2      	strh	r2, [r0, #14]
 8020ac6:	6183      	str	r3, [r0, #24]
 8020ac8:	4619      	mov	r1, r3
 8020aca:	2208      	movs	r2, #8
 8020acc:	305c      	adds	r0, #92	; 0x5c
 8020ace:	f000 f93d 	bl	8020d4c <memset>
 8020ad2:	4b05      	ldr	r3, [pc, #20]	; (8020ae8 <std+0x38>)
 8020ad4:	6263      	str	r3, [r4, #36]	; 0x24
 8020ad6:	4b05      	ldr	r3, [pc, #20]	; (8020aec <std+0x3c>)
 8020ad8:	62a3      	str	r3, [r4, #40]	; 0x28
 8020ada:	4b05      	ldr	r3, [pc, #20]	; (8020af0 <std+0x40>)
 8020adc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8020ade:	4b05      	ldr	r3, [pc, #20]	; (8020af4 <std+0x44>)
 8020ae0:	6224      	str	r4, [r4, #32]
 8020ae2:	6323      	str	r3, [r4, #48]	; 0x30
 8020ae4:	bd10      	pop	{r4, pc}
 8020ae6:	bf00      	nop
 8020ae8:	08021675 	.word	0x08021675
 8020aec:	08021697 	.word	0x08021697
 8020af0:	080216cf 	.word	0x080216cf
 8020af4:	080216f3 	.word	0x080216f3

08020af8 <_cleanup_r>:
 8020af8:	4901      	ldr	r1, [pc, #4]	; (8020b00 <_cleanup_r+0x8>)
 8020afa:	f000 b8c1 	b.w	8020c80 <_fwalk_reent>
 8020afe:	bf00      	nop
 8020b00:	08021a91 	.word	0x08021a91

08020b04 <__sfmoreglue>:
 8020b04:	b570      	push	{r4, r5, r6, lr}
 8020b06:	2268      	movs	r2, #104	; 0x68
 8020b08:	1e4d      	subs	r5, r1, #1
 8020b0a:	4355      	muls	r5, r2
 8020b0c:	460e      	mov	r6, r1
 8020b0e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8020b12:	f000 f98f 	bl	8020e34 <_malloc_r>
 8020b16:	4604      	mov	r4, r0
 8020b18:	b140      	cbz	r0, 8020b2c <__sfmoreglue+0x28>
 8020b1a:	2100      	movs	r1, #0
 8020b1c:	e9c0 1600 	strd	r1, r6, [r0]
 8020b20:	300c      	adds	r0, #12
 8020b22:	60a0      	str	r0, [r4, #8]
 8020b24:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020b28:	f000 f910 	bl	8020d4c <memset>
 8020b2c:	4620      	mov	r0, r4
 8020b2e:	bd70      	pop	{r4, r5, r6, pc}

08020b30 <__sfp_lock_acquire>:
 8020b30:	4801      	ldr	r0, [pc, #4]	; (8020b38 <__sfp_lock_acquire+0x8>)
 8020b32:	f000 b8ea 	b.w	8020d0a <__retarget_lock_acquire_recursive>
 8020b36:	bf00      	nop
 8020b38:	200158fa 	.word	0x200158fa

08020b3c <__sfp_lock_release>:
 8020b3c:	4801      	ldr	r0, [pc, #4]	; (8020b44 <__sfp_lock_release+0x8>)
 8020b3e:	f000 b8e6 	b.w	8020d0e <__retarget_lock_release_recursive>
 8020b42:	bf00      	nop
 8020b44:	200158fa 	.word	0x200158fa

08020b48 <__sinit_lock_acquire>:
 8020b48:	4801      	ldr	r0, [pc, #4]	; (8020b50 <__sinit_lock_acquire+0x8>)
 8020b4a:	f000 b8de 	b.w	8020d0a <__retarget_lock_acquire_recursive>
 8020b4e:	bf00      	nop
 8020b50:	200158fb 	.word	0x200158fb

08020b54 <__sinit_lock_release>:
 8020b54:	4801      	ldr	r0, [pc, #4]	; (8020b5c <__sinit_lock_release+0x8>)
 8020b56:	f000 b8da 	b.w	8020d0e <__retarget_lock_release_recursive>
 8020b5a:	bf00      	nop
 8020b5c:	200158fb 	.word	0x200158fb

08020b60 <__sinit>:
 8020b60:	b510      	push	{r4, lr}
 8020b62:	4604      	mov	r4, r0
 8020b64:	f7ff fff0 	bl	8020b48 <__sinit_lock_acquire>
 8020b68:	69a3      	ldr	r3, [r4, #24]
 8020b6a:	b11b      	cbz	r3, 8020b74 <__sinit+0x14>
 8020b6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020b70:	f7ff bff0 	b.w	8020b54 <__sinit_lock_release>
 8020b74:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020b78:	6523      	str	r3, [r4, #80]	; 0x50
 8020b7a:	4b13      	ldr	r3, [pc, #76]	; (8020bc8 <__sinit+0x68>)
 8020b7c:	4a13      	ldr	r2, [pc, #76]	; (8020bcc <__sinit+0x6c>)
 8020b7e:	681b      	ldr	r3, [r3, #0]
 8020b80:	62a2      	str	r2, [r4, #40]	; 0x28
 8020b82:	42a3      	cmp	r3, r4
 8020b84:	bf04      	itt	eq
 8020b86:	2301      	moveq	r3, #1
 8020b88:	61a3      	streq	r3, [r4, #24]
 8020b8a:	4620      	mov	r0, r4
 8020b8c:	f000 f820 	bl	8020bd0 <__sfp>
 8020b90:	6060      	str	r0, [r4, #4]
 8020b92:	4620      	mov	r0, r4
 8020b94:	f000 f81c 	bl	8020bd0 <__sfp>
 8020b98:	60a0      	str	r0, [r4, #8]
 8020b9a:	4620      	mov	r0, r4
 8020b9c:	f000 f818 	bl	8020bd0 <__sfp>
 8020ba0:	2200      	movs	r2, #0
 8020ba2:	60e0      	str	r0, [r4, #12]
 8020ba4:	2104      	movs	r1, #4
 8020ba6:	6860      	ldr	r0, [r4, #4]
 8020ba8:	f7ff ff82 	bl	8020ab0 <std>
 8020bac:	68a0      	ldr	r0, [r4, #8]
 8020bae:	2201      	movs	r2, #1
 8020bb0:	2109      	movs	r1, #9
 8020bb2:	f7ff ff7d 	bl	8020ab0 <std>
 8020bb6:	68e0      	ldr	r0, [r4, #12]
 8020bb8:	2202      	movs	r2, #2
 8020bba:	2112      	movs	r1, #18
 8020bbc:	f7ff ff78 	bl	8020ab0 <std>
 8020bc0:	2301      	movs	r3, #1
 8020bc2:	61a3      	str	r3, [r4, #24]
 8020bc4:	e7d2      	b.n	8020b6c <__sinit+0xc>
 8020bc6:	bf00      	nop
 8020bc8:	08024980 	.word	0x08024980
 8020bcc:	08020af9 	.word	0x08020af9

08020bd0 <__sfp>:
 8020bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020bd2:	4607      	mov	r7, r0
 8020bd4:	f7ff ffac 	bl	8020b30 <__sfp_lock_acquire>
 8020bd8:	4b1e      	ldr	r3, [pc, #120]	; (8020c54 <__sfp+0x84>)
 8020bda:	681e      	ldr	r6, [r3, #0]
 8020bdc:	69b3      	ldr	r3, [r6, #24]
 8020bde:	b913      	cbnz	r3, 8020be6 <__sfp+0x16>
 8020be0:	4630      	mov	r0, r6
 8020be2:	f7ff ffbd 	bl	8020b60 <__sinit>
 8020be6:	3648      	adds	r6, #72	; 0x48
 8020be8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020bec:	3b01      	subs	r3, #1
 8020bee:	d503      	bpl.n	8020bf8 <__sfp+0x28>
 8020bf0:	6833      	ldr	r3, [r6, #0]
 8020bf2:	b30b      	cbz	r3, 8020c38 <__sfp+0x68>
 8020bf4:	6836      	ldr	r6, [r6, #0]
 8020bf6:	e7f7      	b.n	8020be8 <__sfp+0x18>
 8020bf8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020bfc:	b9d5      	cbnz	r5, 8020c34 <__sfp+0x64>
 8020bfe:	4b16      	ldr	r3, [pc, #88]	; (8020c58 <__sfp+0x88>)
 8020c00:	60e3      	str	r3, [r4, #12]
 8020c02:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020c06:	6665      	str	r5, [r4, #100]	; 0x64
 8020c08:	f000 f87e 	bl	8020d08 <__retarget_lock_init_recursive>
 8020c0c:	f7ff ff96 	bl	8020b3c <__sfp_lock_release>
 8020c10:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8020c14:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020c18:	6025      	str	r5, [r4, #0]
 8020c1a:	61a5      	str	r5, [r4, #24]
 8020c1c:	2208      	movs	r2, #8
 8020c1e:	4629      	mov	r1, r5
 8020c20:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020c24:	f000 f892 	bl	8020d4c <memset>
 8020c28:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020c2c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8020c30:	4620      	mov	r0, r4
 8020c32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020c34:	3468      	adds	r4, #104	; 0x68
 8020c36:	e7d9      	b.n	8020bec <__sfp+0x1c>
 8020c38:	2104      	movs	r1, #4
 8020c3a:	4638      	mov	r0, r7
 8020c3c:	f7ff ff62 	bl	8020b04 <__sfmoreglue>
 8020c40:	4604      	mov	r4, r0
 8020c42:	6030      	str	r0, [r6, #0]
 8020c44:	2800      	cmp	r0, #0
 8020c46:	d1d5      	bne.n	8020bf4 <__sfp+0x24>
 8020c48:	f7ff ff78 	bl	8020b3c <__sfp_lock_release>
 8020c4c:	230c      	movs	r3, #12
 8020c4e:	603b      	str	r3, [r7, #0]
 8020c50:	e7ee      	b.n	8020c30 <__sfp+0x60>
 8020c52:	bf00      	nop
 8020c54:	08024980 	.word	0x08024980
 8020c58:	ffff0001 	.word	0xffff0001

08020c5c <fiprintf>:
 8020c5c:	b40e      	push	{r1, r2, r3}
 8020c5e:	b503      	push	{r0, r1, lr}
 8020c60:	4601      	mov	r1, r0
 8020c62:	ab03      	add	r3, sp, #12
 8020c64:	4805      	ldr	r0, [pc, #20]	; (8020c7c <fiprintf+0x20>)
 8020c66:	f853 2b04 	ldr.w	r2, [r3], #4
 8020c6a:	6800      	ldr	r0, [r0, #0]
 8020c6c:	9301      	str	r3, [sp, #4]
 8020c6e:	f000 f97f 	bl	8020f70 <_vfiprintf_r>
 8020c72:	b002      	add	sp, #8
 8020c74:	f85d eb04 	ldr.w	lr, [sp], #4
 8020c78:	b003      	add	sp, #12
 8020c7a:	4770      	bx	lr
 8020c7c:	20000104 	.word	0x20000104

08020c80 <_fwalk_reent>:
 8020c80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020c84:	4606      	mov	r6, r0
 8020c86:	4688      	mov	r8, r1
 8020c88:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020c8c:	2700      	movs	r7, #0
 8020c8e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020c92:	f1b9 0901 	subs.w	r9, r9, #1
 8020c96:	d505      	bpl.n	8020ca4 <_fwalk_reent+0x24>
 8020c98:	6824      	ldr	r4, [r4, #0]
 8020c9a:	2c00      	cmp	r4, #0
 8020c9c:	d1f7      	bne.n	8020c8e <_fwalk_reent+0xe>
 8020c9e:	4638      	mov	r0, r7
 8020ca0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020ca4:	89ab      	ldrh	r3, [r5, #12]
 8020ca6:	2b01      	cmp	r3, #1
 8020ca8:	d907      	bls.n	8020cba <_fwalk_reent+0x3a>
 8020caa:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020cae:	3301      	adds	r3, #1
 8020cb0:	d003      	beq.n	8020cba <_fwalk_reent+0x3a>
 8020cb2:	4629      	mov	r1, r5
 8020cb4:	4630      	mov	r0, r6
 8020cb6:	47c0      	blx	r8
 8020cb8:	4307      	orrs	r7, r0
 8020cba:	3568      	adds	r5, #104	; 0x68
 8020cbc:	e7e9      	b.n	8020c92 <_fwalk_reent+0x12>
	...

08020cc0 <__libc_init_array>:
 8020cc0:	b570      	push	{r4, r5, r6, lr}
 8020cc2:	4d0d      	ldr	r5, [pc, #52]	; (8020cf8 <__libc_init_array+0x38>)
 8020cc4:	4c0d      	ldr	r4, [pc, #52]	; (8020cfc <__libc_init_array+0x3c>)
 8020cc6:	1b64      	subs	r4, r4, r5
 8020cc8:	10a4      	asrs	r4, r4, #2
 8020cca:	2600      	movs	r6, #0
 8020ccc:	42a6      	cmp	r6, r4
 8020cce:	d109      	bne.n	8020ce4 <__libc_init_array+0x24>
 8020cd0:	4d0b      	ldr	r5, [pc, #44]	; (8020d00 <__libc_init_array+0x40>)
 8020cd2:	4c0c      	ldr	r4, [pc, #48]	; (8020d04 <__libc_init_array+0x44>)
 8020cd4:	f000 ffd0 	bl	8021c78 <_init>
 8020cd8:	1b64      	subs	r4, r4, r5
 8020cda:	10a4      	asrs	r4, r4, #2
 8020cdc:	2600      	movs	r6, #0
 8020cde:	42a6      	cmp	r6, r4
 8020ce0:	d105      	bne.n	8020cee <__libc_init_array+0x2e>
 8020ce2:	bd70      	pop	{r4, r5, r6, pc}
 8020ce4:	f855 3b04 	ldr.w	r3, [r5], #4
 8020ce8:	4798      	blx	r3
 8020cea:	3601      	adds	r6, #1
 8020cec:	e7ee      	b.n	8020ccc <__libc_init_array+0xc>
 8020cee:	f855 3b04 	ldr.w	r3, [r5], #4
 8020cf2:	4798      	blx	r3
 8020cf4:	3601      	adds	r6, #1
 8020cf6:	e7f2      	b.n	8020cde <__libc_init_array+0x1e>
 8020cf8:	080c3554 	.word	0x080c3554
 8020cfc:	080c3554 	.word	0x080c3554
 8020d00:	080c3554 	.word	0x080c3554
 8020d04:	080c3568 	.word	0x080c3568

08020d08 <__retarget_lock_init_recursive>:
 8020d08:	4770      	bx	lr

08020d0a <__retarget_lock_acquire_recursive>:
 8020d0a:	4770      	bx	lr

08020d0c <__retarget_lock_release>:
 8020d0c:	4770      	bx	lr

08020d0e <__retarget_lock_release_recursive>:
 8020d0e:	4770      	bx	lr

08020d10 <malloc>:
 8020d10:	4b02      	ldr	r3, [pc, #8]	; (8020d1c <malloc+0xc>)
 8020d12:	4601      	mov	r1, r0
 8020d14:	6818      	ldr	r0, [r3, #0]
 8020d16:	f000 b88d 	b.w	8020e34 <_malloc_r>
 8020d1a:	bf00      	nop
 8020d1c:	20000104 	.word	0x20000104

08020d20 <free>:
 8020d20:	4b02      	ldr	r3, [pc, #8]	; (8020d2c <free+0xc>)
 8020d22:	4601      	mov	r1, r0
 8020d24:	6818      	ldr	r0, [r3, #0]
 8020d26:	f000 b819 	b.w	8020d5c <_free_r>
 8020d2a:	bf00      	nop
 8020d2c:	20000104 	.word	0x20000104

08020d30 <memcpy>:
 8020d30:	440a      	add	r2, r1
 8020d32:	4291      	cmp	r1, r2
 8020d34:	f100 33ff 	add.w	r3, r0, #4294967295
 8020d38:	d100      	bne.n	8020d3c <memcpy+0xc>
 8020d3a:	4770      	bx	lr
 8020d3c:	b510      	push	{r4, lr}
 8020d3e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020d42:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020d46:	4291      	cmp	r1, r2
 8020d48:	d1f9      	bne.n	8020d3e <memcpy+0xe>
 8020d4a:	bd10      	pop	{r4, pc}

08020d4c <memset>:
 8020d4c:	4402      	add	r2, r0
 8020d4e:	4603      	mov	r3, r0
 8020d50:	4293      	cmp	r3, r2
 8020d52:	d100      	bne.n	8020d56 <memset+0xa>
 8020d54:	4770      	bx	lr
 8020d56:	f803 1b01 	strb.w	r1, [r3], #1
 8020d5a:	e7f9      	b.n	8020d50 <memset+0x4>

08020d5c <_free_r>:
 8020d5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020d5e:	2900      	cmp	r1, #0
 8020d60:	d044      	beq.n	8020dec <_free_r+0x90>
 8020d62:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020d66:	9001      	str	r0, [sp, #4]
 8020d68:	2b00      	cmp	r3, #0
 8020d6a:	f1a1 0404 	sub.w	r4, r1, #4
 8020d6e:	bfb8      	it	lt
 8020d70:	18e4      	addlt	r4, r4, r3
 8020d72:	f000 ff41 	bl	8021bf8 <__malloc_lock>
 8020d76:	4a1e      	ldr	r2, [pc, #120]	; (8020df0 <_free_r+0x94>)
 8020d78:	9801      	ldr	r0, [sp, #4]
 8020d7a:	6813      	ldr	r3, [r2, #0]
 8020d7c:	b933      	cbnz	r3, 8020d8c <_free_r+0x30>
 8020d7e:	6063      	str	r3, [r4, #4]
 8020d80:	6014      	str	r4, [r2, #0]
 8020d82:	b003      	add	sp, #12
 8020d84:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020d88:	f000 bf3c 	b.w	8021c04 <__malloc_unlock>
 8020d8c:	42a3      	cmp	r3, r4
 8020d8e:	d908      	bls.n	8020da2 <_free_r+0x46>
 8020d90:	6825      	ldr	r5, [r4, #0]
 8020d92:	1961      	adds	r1, r4, r5
 8020d94:	428b      	cmp	r3, r1
 8020d96:	bf01      	itttt	eq
 8020d98:	6819      	ldreq	r1, [r3, #0]
 8020d9a:	685b      	ldreq	r3, [r3, #4]
 8020d9c:	1949      	addeq	r1, r1, r5
 8020d9e:	6021      	streq	r1, [r4, #0]
 8020da0:	e7ed      	b.n	8020d7e <_free_r+0x22>
 8020da2:	461a      	mov	r2, r3
 8020da4:	685b      	ldr	r3, [r3, #4]
 8020da6:	b10b      	cbz	r3, 8020dac <_free_r+0x50>
 8020da8:	42a3      	cmp	r3, r4
 8020daa:	d9fa      	bls.n	8020da2 <_free_r+0x46>
 8020dac:	6811      	ldr	r1, [r2, #0]
 8020dae:	1855      	adds	r5, r2, r1
 8020db0:	42a5      	cmp	r5, r4
 8020db2:	d10b      	bne.n	8020dcc <_free_r+0x70>
 8020db4:	6824      	ldr	r4, [r4, #0]
 8020db6:	4421      	add	r1, r4
 8020db8:	1854      	adds	r4, r2, r1
 8020dba:	42a3      	cmp	r3, r4
 8020dbc:	6011      	str	r1, [r2, #0]
 8020dbe:	d1e0      	bne.n	8020d82 <_free_r+0x26>
 8020dc0:	681c      	ldr	r4, [r3, #0]
 8020dc2:	685b      	ldr	r3, [r3, #4]
 8020dc4:	6053      	str	r3, [r2, #4]
 8020dc6:	4421      	add	r1, r4
 8020dc8:	6011      	str	r1, [r2, #0]
 8020dca:	e7da      	b.n	8020d82 <_free_r+0x26>
 8020dcc:	d902      	bls.n	8020dd4 <_free_r+0x78>
 8020dce:	230c      	movs	r3, #12
 8020dd0:	6003      	str	r3, [r0, #0]
 8020dd2:	e7d6      	b.n	8020d82 <_free_r+0x26>
 8020dd4:	6825      	ldr	r5, [r4, #0]
 8020dd6:	1961      	adds	r1, r4, r5
 8020dd8:	428b      	cmp	r3, r1
 8020dda:	bf04      	itt	eq
 8020ddc:	6819      	ldreq	r1, [r3, #0]
 8020dde:	685b      	ldreq	r3, [r3, #4]
 8020de0:	6063      	str	r3, [r4, #4]
 8020de2:	bf04      	itt	eq
 8020de4:	1949      	addeq	r1, r1, r5
 8020de6:	6021      	streq	r1, [r4, #0]
 8020de8:	6054      	str	r4, [r2, #4]
 8020dea:	e7ca      	b.n	8020d82 <_free_r+0x26>
 8020dec:	b003      	add	sp, #12
 8020dee:	bd30      	pop	{r4, r5, pc}
 8020df0:	200158fc 	.word	0x200158fc

08020df4 <sbrk_aligned>:
 8020df4:	b570      	push	{r4, r5, r6, lr}
 8020df6:	4e0e      	ldr	r6, [pc, #56]	; (8020e30 <sbrk_aligned+0x3c>)
 8020df8:	460c      	mov	r4, r1
 8020dfa:	6831      	ldr	r1, [r6, #0]
 8020dfc:	4605      	mov	r5, r0
 8020dfe:	b911      	cbnz	r1, 8020e06 <sbrk_aligned+0x12>
 8020e00:	f000 fbe4 	bl	80215cc <_sbrk_r>
 8020e04:	6030      	str	r0, [r6, #0]
 8020e06:	4621      	mov	r1, r4
 8020e08:	4628      	mov	r0, r5
 8020e0a:	f000 fbdf 	bl	80215cc <_sbrk_r>
 8020e0e:	1c43      	adds	r3, r0, #1
 8020e10:	d00a      	beq.n	8020e28 <sbrk_aligned+0x34>
 8020e12:	1cc4      	adds	r4, r0, #3
 8020e14:	f024 0403 	bic.w	r4, r4, #3
 8020e18:	42a0      	cmp	r0, r4
 8020e1a:	d007      	beq.n	8020e2c <sbrk_aligned+0x38>
 8020e1c:	1a21      	subs	r1, r4, r0
 8020e1e:	4628      	mov	r0, r5
 8020e20:	f000 fbd4 	bl	80215cc <_sbrk_r>
 8020e24:	3001      	adds	r0, #1
 8020e26:	d101      	bne.n	8020e2c <sbrk_aligned+0x38>
 8020e28:	f04f 34ff 	mov.w	r4, #4294967295
 8020e2c:	4620      	mov	r0, r4
 8020e2e:	bd70      	pop	{r4, r5, r6, pc}
 8020e30:	20015900 	.word	0x20015900

08020e34 <_malloc_r>:
 8020e34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020e38:	1ccd      	adds	r5, r1, #3
 8020e3a:	f025 0503 	bic.w	r5, r5, #3
 8020e3e:	3508      	adds	r5, #8
 8020e40:	2d0c      	cmp	r5, #12
 8020e42:	bf38      	it	cc
 8020e44:	250c      	movcc	r5, #12
 8020e46:	2d00      	cmp	r5, #0
 8020e48:	4607      	mov	r7, r0
 8020e4a:	db01      	blt.n	8020e50 <_malloc_r+0x1c>
 8020e4c:	42a9      	cmp	r1, r5
 8020e4e:	d905      	bls.n	8020e5c <_malloc_r+0x28>
 8020e50:	230c      	movs	r3, #12
 8020e52:	603b      	str	r3, [r7, #0]
 8020e54:	2600      	movs	r6, #0
 8020e56:	4630      	mov	r0, r6
 8020e58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020e5c:	4e2e      	ldr	r6, [pc, #184]	; (8020f18 <_malloc_r+0xe4>)
 8020e5e:	f000 fecb 	bl	8021bf8 <__malloc_lock>
 8020e62:	6833      	ldr	r3, [r6, #0]
 8020e64:	461c      	mov	r4, r3
 8020e66:	bb34      	cbnz	r4, 8020eb6 <_malloc_r+0x82>
 8020e68:	4629      	mov	r1, r5
 8020e6a:	4638      	mov	r0, r7
 8020e6c:	f7ff ffc2 	bl	8020df4 <sbrk_aligned>
 8020e70:	1c43      	adds	r3, r0, #1
 8020e72:	4604      	mov	r4, r0
 8020e74:	d14d      	bne.n	8020f12 <_malloc_r+0xde>
 8020e76:	6834      	ldr	r4, [r6, #0]
 8020e78:	4626      	mov	r6, r4
 8020e7a:	2e00      	cmp	r6, #0
 8020e7c:	d140      	bne.n	8020f00 <_malloc_r+0xcc>
 8020e7e:	6823      	ldr	r3, [r4, #0]
 8020e80:	4631      	mov	r1, r6
 8020e82:	4638      	mov	r0, r7
 8020e84:	eb04 0803 	add.w	r8, r4, r3
 8020e88:	f000 fba0 	bl	80215cc <_sbrk_r>
 8020e8c:	4580      	cmp	r8, r0
 8020e8e:	d13a      	bne.n	8020f06 <_malloc_r+0xd2>
 8020e90:	6821      	ldr	r1, [r4, #0]
 8020e92:	3503      	adds	r5, #3
 8020e94:	1a6d      	subs	r5, r5, r1
 8020e96:	f025 0503 	bic.w	r5, r5, #3
 8020e9a:	3508      	adds	r5, #8
 8020e9c:	2d0c      	cmp	r5, #12
 8020e9e:	bf38      	it	cc
 8020ea0:	250c      	movcc	r5, #12
 8020ea2:	4629      	mov	r1, r5
 8020ea4:	4638      	mov	r0, r7
 8020ea6:	f7ff ffa5 	bl	8020df4 <sbrk_aligned>
 8020eaa:	3001      	adds	r0, #1
 8020eac:	d02b      	beq.n	8020f06 <_malloc_r+0xd2>
 8020eae:	6823      	ldr	r3, [r4, #0]
 8020eb0:	442b      	add	r3, r5
 8020eb2:	6023      	str	r3, [r4, #0]
 8020eb4:	e00e      	b.n	8020ed4 <_malloc_r+0xa0>
 8020eb6:	6822      	ldr	r2, [r4, #0]
 8020eb8:	1b52      	subs	r2, r2, r5
 8020eba:	d41e      	bmi.n	8020efa <_malloc_r+0xc6>
 8020ebc:	2a0b      	cmp	r2, #11
 8020ebe:	d916      	bls.n	8020eee <_malloc_r+0xba>
 8020ec0:	1961      	adds	r1, r4, r5
 8020ec2:	42a3      	cmp	r3, r4
 8020ec4:	6025      	str	r5, [r4, #0]
 8020ec6:	bf18      	it	ne
 8020ec8:	6059      	strne	r1, [r3, #4]
 8020eca:	6863      	ldr	r3, [r4, #4]
 8020ecc:	bf08      	it	eq
 8020ece:	6031      	streq	r1, [r6, #0]
 8020ed0:	5162      	str	r2, [r4, r5]
 8020ed2:	604b      	str	r3, [r1, #4]
 8020ed4:	4638      	mov	r0, r7
 8020ed6:	f104 060b 	add.w	r6, r4, #11
 8020eda:	f000 fe93 	bl	8021c04 <__malloc_unlock>
 8020ede:	f026 0607 	bic.w	r6, r6, #7
 8020ee2:	1d23      	adds	r3, r4, #4
 8020ee4:	1af2      	subs	r2, r6, r3
 8020ee6:	d0b6      	beq.n	8020e56 <_malloc_r+0x22>
 8020ee8:	1b9b      	subs	r3, r3, r6
 8020eea:	50a3      	str	r3, [r4, r2]
 8020eec:	e7b3      	b.n	8020e56 <_malloc_r+0x22>
 8020eee:	6862      	ldr	r2, [r4, #4]
 8020ef0:	42a3      	cmp	r3, r4
 8020ef2:	bf0c      	ite	eq
 8020ef4:	6032      	streq	r2, [r6, #0]
 8020ef6:	605a      	strne	r2, [r3, #4]
 8020ef8:	e7ec      	b.n	8020ed4 <_malloc_r+0xa0>
 8020efa:	4623      	mov	r3, r4
 8020efc:	6864      	ldr	r4, [r4, #4]
 8020efe:	e7b2      	b.n	8020e66 <_malloc_r+0x32>
 8020f00:	4634      	mov	r4, r6
 8020f02:	6876      	ldr	r6, [r6, #4]
 8020f04:	e7b9      	b.n	8020e7a <_malloc_r+0x46>
 8020f06:	230c      	movs	r3, #12
 8020f08:	603b      	str	r3, [r7, #0]
 8020f0a:	4638      	mov	r0, r7
 8020f0c:	f000 fe7a 	bl	8021c04 <__malloc_unlock>
 8020f10:	e7a1      	b.n	8020e56 <_malloc_r+0x22>
 8020f12:	6025      	str	r5, [r4, #0]
 8020f14:	e7de      	b.n	8020ed4 <_malloc_r+0xa0>
 8020f16:	bf00      	nop
 8020f18:	200158fc 	.word	0x200158fc

08020f1c <__sfputc_r>:
 8020f1c:	6893      	ldr	r3, [r2, #8]
 8020f1e:	3b01      	subs	r3, #1
 8020f20:	2b00      	cmp	r3, #0
 8020f22:	b410      	push	{r4}
 8020f24:	6093      	str	r3, [r2, #8]
 8020f26:	da08      	bge.n	8020f3a <__sfputc_r+0x1e>
 8020f28:	6994      	ldr	r4, [r2, #24]
 8020f2a:	42a3      	cmp	r3, r4
 8020f2c:	db01      	blt.n	8020f32 <__sfputc_r+0x16>
 8020f2e:	290a      	cmp	r1, #10
 8020f30:	d103      	bne.n	8020f3a <__sfputc_r+0x1e>
 8020f32:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020f36:	f000 bbe1 	b.w	80216fc <__swbuf_r>
 8020f3a:	6813      	ldr	r3, [r2, #0]
 8020f3c:	1c58      	adds	r0, r3, #1
 8020f3e:	6010      	str	r0, [r2, #0]
 8020f40:	7019      	strb	r1, [r3, #0]
 8020f42:	4608      	mov	r0, r1
 8020f44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020f48:	4770      	bx	lr

08020f4a <__sfputs_r>:
 8020f4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020f4c:	4606      	mov	r6, r0
 8020f4e:	460f      	mov	r7, r1
 8020f50:	4614      	mov	r4, r2
 8020f52:	18d5      	adds	r5, r2, r3
 8020f54:	42ac      	cmp	r4, r5
 8020f56:	d101      	bne.n	8020f5c <__sfputs_r+0x12>
 8020f58:	2000      	movs	r0, #0
 8020f5a:	e007      	b.n	8020f6c <__sfputs_r+0x22>
 8020f5c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020f60:	463a      	mov	r2, r7
 8020f62:	4630      	mov	r0, r6
 8020f64:	f7ff ffda 	bl	8020f1c <__sfputc_r>
 8020f68:	1c43      	adds	r3, r0, #1
 8020f6a:	d1f3      	bne.n	8020f54 <__sfputs_r+0xa>
 8020f6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020f70 <_vfiprintf_r>:
 8020f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f74:	460d      	mov	r5, r1
 8020f76:	b09d      	sub	sp, #116	; 0x74
 8020f78:	4614      	mov	r4, r2
 8020f7a:	4698      	mov	r8, r3
 8020f7c:	4606      	mov	r6, r0
 8020f7e:	b118      	cbz	r0, 8020f88 <_vfiprintf_r+0x18>
 8020f80:	6983      	ldr	r3, [r0, #24]
 8020f82:	b90b      	cbnz	r3, 8020f88 <_vfiprintf_r+0x18>
 8020f84:	f7ff fdec 	bl	8020b60 <__sinit>
 8020f88:	4b89      	ldr	r3, [pc, #548]	; (80211b0 <_vfiprintf_r+0x240>)
 8020f8a:	429d      	cmp	r5, r3
 8020f8c:	d11b      	bne.n	8020fc6 <_vfiprintf_r+0x56>
 8020f8e:	6875      	ldr	r5, [r6, #4]
 8020f90:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020f92:	07d9      	lsls	r1, r3, #31
 8020f94:	d405      	bmi.n	8020fa2 <_vfiprintf_r+0x32>
 8020f96:	89ab      	ldrh	r3, [r5, #12]
 8020f98:	059a      	lsls	r2, r3, #22
 8020f9a:	d402      	bmi.n	8020fa2 <_vfiprintf_r+0x32>
 8020f9c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020f9e:	f7ff feb4 	bl	8020d0a <__retarget_lock_acquire_recursive>
 8020fa2:	89ab      	ldrh	r3, [r5, #12]
 8020fa4:	071b      	lsls	r3, r3, #28
 8020fa6:	d501      	bpl.n	8020fac <_vfiprintf_r+0x3c>
 8020fa8:	692b      	ldr	r3, [r5, #16]
 8020faa:	b9eb      	cbnz	r3, 8020fe8 <_vfiprintf_r+0x78>
 8020fac:	4629      	mov	r1, r5
 8020fae:	4630      	mov	r0, r6
 8020fb0:	f000 fc08 	bl	80217c4 <__swsetup_r>
 8020fb4:	b1c0      	cbz	r0, 8020fe8 <_vfiprintf_r+0x78>
 8020fb6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020fb8:	07dc      	lsls	r4, r3, #31
 8020fba:	d50e      	bpl.n	8020fda <_vfiprintf_r+0x6a>
 8020fbc:	f04f 30ff 	mov.w	r0, #4294967295
 8020fc0:	b01d      	add	sp, #116	; 0x74
 8020fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020fc6:	4b7b      	ldr	r3, [pc, #492]	; (80211b4 <_vfiprintf_r+0x244>)
 8020fc8:	429d      	cmp	r5, r3
 8020fca:	d101      	bne.n	8020fd0 <_vfiprintf_r+0x60>
 8020fcc:	68b5      	ldr	r5, [r6, #8]
 8020fce:	e7df      	b.n	8020f90 <_vfiprintf_r+0x20>
 8020fd0:	4b79      	ldr	r3, [pc, #484]	; (80211b8 <_vfiprintf_r+0x248>)
 8020fd2:	429d      	cmp	r5, r3
 8020fd4:	bf08      	it	eq
 8020fd6:	68f5      	ldreq	r5, [r6, #12]
 8020fd8:	e7da      	b.n	8020f90 <_vfiprintf_r+0x20>
 8020fda:	89ab      	ldrh	r3, [r5, #12]
 8020fdc:	0598      	lsls	r0, r3, #22
 8020fde:	d4ed      	bmi.n	8020fbc <_vfiprintf_r+0x4c>
 8020fe0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020fe2:	f7ff fe94 	bl	8020d0e <__retarget_lock_release_recursive>
 8020fe6:	e7e9      	b.n	8020fbc <_vfiprintf_r+0x4c>
 8020fe8:	2300      	movs	r3, #0
 8020fea:	9309      	str	r3, [sp, #36]	; 0x24
 8020fec:	2320      	movs	r3, #32
 8020fee:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020ff2:	f8cd 800c 	str.w	r8, [sp, #12]
 8020ff6:	2330      	movs	r3, #48	; 0x30
 8020ff8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80211bc <_vfiprintf_r+0x24c>
 8020ffc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8021000:	f04f 0901 	mov.w	r9, #1
 8021004:	4623      	mov	r3, r4
 8021006:	469a      	mov	sl, r3
 8021008:	f813 2b01 	ldrb.w	r2, [r3], #1
 802100c:	b10a      	cbz	r2, 8021012 <_vfiprintf_r+0xa2>
 802100e:	2a25      	cmp	r2, #37	; 0x25
 8021010:	d1f9      	bne.n	8021006 <_vfiprintf_r+0x96>
 8021012:	ebba 0b04 	subs.w	fp, sl, r4
 8021016:	d00b      	beq.n	8021030 <_vfiprintf_r+0xc0>
 8021018:	465b      	mov	r3, fp
 802101a:	4622      	mov	r2, r4
 802101c:	4629      	mov	r1, r5
 802101e:	4630      	mov	r0, r6
 8021020:	f7ff ff93 	bl	8020f4a <__sfputs_r>
 8021024:	3001      	adds	r0, #1
 8021026:	f000 80aa 	beq.w	802117e <_vfiprintf_r+0x20e>
 802102a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802102c:	445a      	add	r2, fp
 802102e:	9209      	str	r2, [sp, #36]	; 0x24
 8021030:	f89a 3000 	ldrb.w	r3, [sl]
 8021034:	2b00      	cmp	r3, #0
 8021036:	f000 80a2 	beq.w	802117e <_vfiprintf_r+0x20e>
 802103a:	2300      	movs	r3, #0
 802103c:	f04f 32ff 	mov.w	r2, #4294967295
 8021040:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8021044:	f10a 0a01 	add.w	sl, sl, #1
 8021048:	9304      	str	r3, [sp, #16]
 802104a:	9307      	str	r3, [sp, #28]
 802104c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8021050:	931a      	str	r3, [sp, #104]	; 0x68
 8021052:	4654      	mov	r4, sl
 8021054:	2205      	movs	r2, #5
 8021056:	f814 1b01 	ldrb.w	r1, [r4], #1
 802105a:	4858      	ldr	r0, [pc, #352]	; (80211bc <_vfiprintf_r+0x24c>)
 802105c:	f7df f8c8 	bl	80001f0 <memchr>
 8021060:	9a04      	ldr	r2, [sp, #16]
 8021062:	b9d8      	cbnz	r0, 802109c <_vfiprintf_r+0x12c>
 8021064:	06d1      	lsls	r1, r2, #27
 8021066:	bf44      	itt	mi
 8021068:	2320      	movmi	r3, #32
 802106a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802106e:	0713      	lsls	r3, r2, #28
 8021070:	bf44      	itt	mi
 8021072:	232b      	movmi	r3, #43	; 0x2b
 8021074:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8021078:	f89a 3000 	ldrb.w	r3, [sl]
 802107c:	2b2a      	cmp	r3, #42	; 0x2a
 802107e:	d015      	beq.n	80210ac <_vfiprintf_r+0x13c>
 8021080:	9a07      	ldr	r2, [sp, #28]
 8021082:	4654      	mov	r4, sl
 8021084:	2000      	movs	r0, #0
 8021086:	f04f 0c0a 	mov.w	ip, #10
 802108a:	4621      	mov	r1, r4
 802108c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021090:	3b30      	subs	r3, #48	; 0x30
 8021092:	2b09      	cmp	r3, #9
 8021094:	d94e      	bls.n	8021134 <_vfiprintf_r+0x1c4>
 8021096:	b1b0      	cbz	r0, 80210c6 <_vfiprintf_r+0x156>
 8021098:	9207      	str	r2, [sp, #28]
 802109a:	e014      	b.n	80210c6 <_vfiprintf_r+0x156>
 802109c:	eba0 0308 	sub.w	r3, r0, r8
 80210a0:	fa09 f303 	lsl.w	r3, r9, r3
 80210a4:	4313      	orrs	r3, r2
 80210a6:	9304      	str	r3, [sp, #16]
 80210a8:	46a2      	mov	sl, r4
 80210aa:	e7d2      	b.n	8021052 <_vfiprintf_r+0xe2>
 80210ac:	9b03      	ldr	r3, [sp, #12]
 80210ae:	1d19      	adds	r1, r3, #4
 80210b0:	681b      	ldr	r3, [r3, #0]
 80210b2:	9103      	str	r1, [sp, #12]
 80210b4:	2b00      	cmp	r3, #0
 80210b6:	bfbb      	ittet	lt
 80210b8:	425b      	neglt	r3, r3
 80210ba:	f042 0202 	orrlt.w	r2, r2, #2
 80210be:	9307      	strge	r3, [sp, #28]
 80210c0:	9307      	strlt	r3, [sp, #28]
 80210c2:	bfb8      	it	lt
 80210c4:	9204      	strlt	r2, [sp, #16]
 80210c6:	7823      	ldrb	r3, [r4, #0]
 80210c8:	2b2e      	cmp	r3, #46	; 0x2e
 80210ca:	d10c      	bne.n	80210e6 <_vfiprintf_r+0x176>
 80210cc:	7863      	ldrb	r3, [r4, #1]
 80210ce:	2b2a      	cmp	r3, #42	; 0x2a
 80210d0:	d135      	bne.n	802113e <_vfiprintf_r+0x1ce>
 80210d2:	9b03      	ldr	r3, [sp, #12]
 80210d4:	1d1a      	adds	r2, r3, #4
 80210d6:	681b      	ldr	r3, [r3, #0]
 80210d8:	9203      	str	r2, [sp, #12]
 80210da:	2b00      	cmp	r3, #0
 80210dc:	bfb8      	it	lt
 80210de:	f04f 33ff 	movlt.w	r3, #4294967295
 80210e2:	3402      	adds	r4, #2
 80210e4:	9305      	str	r3, [sp, #20]
 80210e6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80211cc <_vfiprintf_r+0x25c>
 80210ea:	7821      	ldrb	r1, [r4, #0]
 80210ec:	2203      	movs	r2, #3
 80210ee:	4650      	mov	r0, sl
 80210f0:	f7df f87e 	bl	80001f0 <memchr>
 80210f4:	b140      	cbz	r0, 8021108 <_vfiprintf_r+0x198>
 80210f6:	2340      	movs	r3, #64	; 0x40
 80210f8:	eba0 000a 	sub.w	r0, r0, sl
 80210fc:	fa03 f000 	lsl.w	r0, r3, r0
 8021100:	9b04      	ldr	r3, [sp, #16]
 8021102:	4303      	orrs	r3, r0
 8021104:	3401      	adds	r4, #1
 8021106:	9304      	str	r3, [sp, #16]
 8021108:	f814 1b01 	ldrb.w	r1, [r4], #1
 802110c:	482c      	ldr	r0, [pc, #176]	; (80211c0 <_vfiprintf_r+0x250>)
 802110e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8021112:	2206      	movs	r2, #6
 8021114:	f7df f86c 	bl	80001f0 <memchr>
 8021118:	2800      	cmp	r0, #0
 802111a:	d03f      	beq.n	802119c <_vfiprintf_r+0x22c>
 802111c:	4b29      	ldr	r3, [pc, #164]	; (80211c4 <_vfiprintf_r+0x254>)
 802111e:	bb1b      	cbnz	r3, 8021168 <_vfiprintf_r+0x1f8>
 8021120:	9b03      	ldr	r3, [sp, #12]
 8021122:	3307      	adds	r3, #7
 8021124:	f023 0307 	bic.w	r3, r3, #7
 8021128:	3308      	adds	r3, #8
 802112a:	9303      	str	r3, [sp, #12]
 802112c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802112e:	443b      	add	r3, r7
 8021130:	9309      	str	r3, [sp, #36]	; 0x24
 8021132:	e767      	b.n	8021004 <_vfiprintf_r+0x94>
 8021134:	fb0c 3202 	mla	r2, ip, r2, r3
 8021138:	460c      	mov	r4, r1
 802113a:	2001      	movs	r0, #1
 802113c:	e7a5      	b.n	802108a <_vfiprintf_r+0x11a>
 802113e:	2300      	movs	r3, #0
 8021140:	3401      	adds	r4, #1
 8021142:	9305      	str	r3, [sp, #20]
 8021144:	4619      	mov	r1, r3
 8021146:	f04f 0c0a 	mov.w	ip, #10
 802114a:	4620      	mov	r0, r4
 802114c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8021150:	3a30      	subs	r2, #48	; 0x30
 8021152:	2a09      	cmp	r2, #9
 8021154:	d903      	bls.n	802115e <_vfiprintf_r+0x1ee>
 8021156:	2b00      	cmp	r3, #0
 8021158:	d0c5      	beq.n	80210e6 <_vfiprintf_r+0x176>
 802115a:	9105      	str	r1, [sp, #20]
 802115c:	e7c3      	b.n	80210e6 <_vfiprintf_r+0x176>
 802115e:	fb0c 2101 	mla	r1, ip, r1, r2
 8021162:	4604      	mov	r4, r0
 8021164:	2301      	movs	r3, #1
 8021166:	e7f0      	b.n	802114a <_vfiprintf_r+0x1da>
 8021168:	ab03      	add	r3, sp, #12
 802116a:	9300      	str	r3, [sp, #0]
 802116c:	462a      	mov	r2, r5
 802116e:	4b16      	ldr	r3, [pc, #88]	; (80211c8 <_vfiprintf_r+0x258>)
 8021170:	a904      	add	r1, sp, #16
 8021172:	4630      	mov	r0, r6
 8021174:	f3af 8000 	nop.w
 8021178:	4607      	mov	r7, r0
 802117a:	1c78      	adds	r0, r7, #1
 802117c:	d1d6      	bne.n	802112c <_vfiprintf_r+0x1bc>
 802117e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021180:	07d9      	lsls	r1, r3, #31
 8021182:	d405      	bmi.n	8021190 <_vfiprintf_r+0x220>
 8021184:	89ab      	ldrh	r3, [r5, #12]
 8021186:	059a      	lsls	r2, r3, #22
 8021188:	d402      	bmi.n	8021190 <_vfiprintf_r+0x220>
 802118a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802118c:	f7ff fdbf 	bl	8020d0e <__retarget_lock_release_recursive>
 8021190:	89ab      	ldrh	r3, [r5, #12]
 8021192:	065b      	lsls	r3, r3, #25
 8021194:	f53f af12 	bmi.w	8020fbc <_vfiprintf_r+0x4c>
 8021198:	9809      	ldr	r0, [sp, #36]	; 0x24
 802119a:	e711      	b.n	8020fc0 <_vfiprintf_r+0x50>
 802119c:	ab03      	add	r3, sp, #12
 802119e:	9300      	str	r3, [sp, #0]
 80211a0:	462a      	mov	r2, r5
 80211a2:	4b09      	ldr	r3, [pc, #36]	; (80211c8 <_vfiprintf_r+0x258>)
 80211a4:	a904      	add	r1, sp, #16
 80211a6:	4630      	mov	r0, r6
 80211a8:	f000 f880 	bl	80212ac <_printf_i>
 80211ac:	e7e4      	b.n	8021178 <_vfiprintf_r+0x208>
 80211ae:	bf00      	nop
 80211b0:	08024940 	.word	0x08024940
 80211b4:	08024960 	.word	0x08024960
 80211b8:	08024920 	.word	0x08024920
 80211bc:	08024984 	.word	0x08024984
 80211c0:	0802498e 	.word	0x0802498e
 80211c4:	00000000 	.word	0x00000000
 80211c8:	08020f4b 	.word	0x08020f4b
 80211cc:	0802498a 	.word	0x0802498a

080211d0 <_printf_common>:
 80211d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80211d4:	4616      	mov	r6, r2
 80211d6:	4699      	mov	r9, r3
 80211d8:	688a      	ldr	r2, [r1, #8]
 80211da:	690b      	ldr	r3, [r1, #16]
 80211dc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80211e0:	4293      	cmp	r3, r2
 80211e2:	bfb8      	it	lt
 80211e4:	4613      	movlt	r3, r2
 80211e6:	6033      	str	r3, [r6, #0]
 80211e8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80211ec:	4607      	mov	r7, r0
 80211ee:	460c      	mov	r4, r1
 80211f0:	b10a      	cbz	r2, 80211f6 <_printf_common+0x26>
 80211f2:	3301      	adds	r3, #1
 80211f4:	6033      	str	r3, [r6, #0]
 80211f6:	6823      	ldr	r3, [r4, #0]
 80211f8:	0699      	lsls	r1, r3, #26
 80211fa:	bf42      	ittt	mi
 80211fc:	6833      	ldrmi	r3, [r6, #0]
 80211fe:	3302      	addmi	r3, #2
 8021200:	6033      	strmi	r3, [r6, #0]
 8021202:	6825      	ldr	r5, [r4, #0]
 8021204:	f015 0506 	ands.w	r5, r5, #6
 8021208:	d106      	bne.n	8021218 <_printf_common+0x48>
 802120a:	f104 0a19 	add.w	sl, r4, #25
 802120e:	68e3      	ldr	r3, [r4, #12]
 8021210:	6832      	ldr	r2, [r6, #0]
 8021212:	1a9b      	subs	r3, r3, r2
 8021214:	42ab      	cmp	r3, r5
 8021216:	dc26      	bgt.n	8021266 <_printf_common+0x96>
 8021218:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802121c:	1e13      	subs	r3, r2, #0
 802121e:	6822      	ldr	r2, [r4, #0]
 8021220:	bf18      	it	ne
 8021222:	2301      	movne	r3, #1
 8021224:	0692      	lsls	r2, r2, #26
 8021226:	d42b      	bmi.n	8021280 <_printf_common+0xb0>
 8021228:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802122c:	4649      	mov	r1, r9
 802122e:	4638      	mov	r0, r7
 8021230:	47c0      	blx	r8
 8021232:	3001      	adds	r0, #1
 8021234:	d01e      	beq.n	8021274 <_printf_common+0xa4>
 8021236:	6823      	ldr	r3, [r4, #0]
 8021238:	68e5      	ldr	r5, [r4, #12]
 802123a:	6832      	ldr	r2, [r6, #0]
 802123c:	f003 0306 	and.w	r3, r3, #6
 8021240:	2b04      	cmp	r3, #4
 8021242:	bf08      	it	eq
 8021244:	1aad      	subeq	r5, r5, r2
 8021246:	68a3      	ldr	r3, [r4, #8]
 8021248:	6922      	ldr	r2, [r4, #16]
 802124a:	bf0c      	ite	eq
 802124c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021250:	2500      	movne	r5, #0
 8021252:	4293      	cmp	r3, r2
 8021254:	bfc4      	itt	gt
 8021256:	1a9b      	subgt	r3, r3, r2
 8021258:	18ed      	addgt	r5, r5, r3
 802125a:	2600      	movs	r6, #0
 802125c:	341a      	adds	r4, #26
 802125e:	42b5      	cmp	r5, r6
 8021260:	d11a      	bne.n	8021298 <_printf_common+0xc8>
 8021262:	2000      	movs	r0, #0
 8021264:	e008      	b.n	8021278 <_printf_common+0xa8>
 8021266:	2301      	movs	r3, #1
 8021268:	4652      	mov	r2, sl
 802126a:	4649      	mov	r1, r9
 802126c:	4638      	mov	r0, r7
 802126e:	47c0      	blx	r8
 8021270:	3001      	adds	r0, #1
 8021272:	d103      	bne.n	802127c <_printf_common+0xac>
 8021274:	f04f 30ff 	mov.w	r0, #4294967295
 8021278:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802127c:	3501      	adds	r5, #1
 802127e:	e7c6      	b.n	802120e <_printf_common+0x3e>
 8021280:	18e1      	adds	r1, r4, r3
 8021282:	1c5a      	adds	r2, r3, #1
 8021284:	2030      	movs	r0, #48	; 0x30
 8021286:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802128a:	4422      	add	r2, r4
 802128c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021290:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021294:	3302      	adds	r3, #2
 8021296:	e7c7      	b.n	8021228 <_printf_common+0x58>
 8021298:	2301      	movs	r3, #1
 802129a:	4622      	mov	r2, r4
 802129c:	4649      	mov	r1, r9
 802129e:	4638      	mov	r0, r7
 80212a0:	47c0      	blx	r8
 80212a2:	3001      	adds	r0, #1
 80212a4:	d0e6      	beq.n	8021274 <_printf_common+0xa4>
 80212a6:	3601      	adds	r6, #1
 80212a8:	e7d9      	b.n	802125e <_printf_common+0x8e>
	...

080212ac <_printf_i>:
 80212ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80212b0:	7e0f      	ldrb	r7, [r1, #24]
 80212b2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80212b4:	2f78      	cmp	r7, #120	; 0x78
 80212b6:	4691      	mov	r9, r2
 80212b8:	4680      	mov	r8, r0
 80212ba:	460c      	mov	r4, r1
 80212bc:	469a      	mov	sl, r3
 80212be:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80212c2:	d807      	bhi.n	80212d4 <_printf_i+0x28>
 80212c4:	2f62      	cmp	r7, #98	; 0x62
 80212c6:	d80a      	bhi.n	80212de <_printf_i+0x32>
 80212c8:	2f00      	cmp	r7, #0
 80212ca:	f000 80d8 	beq.w	802147e <_printf_i+0x1d2>
 80212ce:	2f58      	cmp	r7, #88	; 0x58
 80212d0:	f000 80a3 	beq.w	802141a <_printf_i+0x16e>
 80212d4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80212d8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80212dc:	e03a      	b.n	8021354 <_printf_i+0xa8>
 80212de:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80212e2:	2b15      	cmp	r3, #21
 80212e4:	d8f6      	bhi.n	80212d4 <_printf_i+0x28>
 80212e6:	a101      	add	r1, pc, #4	; (adr r1, 80212ec <_printf_i+0x40>)
 80212e8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80212ec:	08021345 	.word	0x08021345
 80212f0:	08021359 	.word	0x08021359
 80212f4:	080212d5 	.word	0x080212d5
 80212f8:	080212d5 	.word	0x080212d5
 80212fc:	080212d5 	.word	0x080212d5
 8021300:	080212d5 	.word	0x080212d5
 8021304:	08021359 	.word	0x08021359
 8021308:	080212d5 	.word	0x080212d5
 802130c:	080212d5 	.word	0x080212d5
 8021310:	080212d5 	.word	0x080212d5
 8021314:	080212d5 	.word	0x080212d5
 8021318:	08021465 	.word	0x08021465
 802131c:	08021389 	.word	0x08021389
 8021320:	08021447 	.word	0x08021447
 8021324:	080212d5 	.word	0x080212d5
 8021328:	080212d5 	.word	0x080212d5
 802132c:	08021487 	.word	0x08021487
 8021330:	080212d5 	.word	0x080212d5
 8021334:	08021389 	.word	0x08021389
 8021338:	080212d5 	.word	0x080212d5
 802133c:	080212d5 	.word	0x080212d5
 8021340:	0802144f 	.word	0x0802144f
 8021344:	682b      	ldr	r3, [r5, #0]
 8021346:	1d1a      	adds	r2, r3, #4
 8021348:	681b      	ldr	r3, [r3, #0]
 802134a:	602a      	str	r2, [r5, #0]
 802134c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021350:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021354:	2301      	movs	r3, #1
 8021356:	e0a3      	b.n	80214a0 <_printf_i+0x1f4>
 8021358:	6820      	ldr	r0, [r4, #0]
 802135a:	6829      	ldr	r1, [r5, #0]
 802135c:	0606      	lsls	r6, r0, #24
 802135e:	f101 0304 	add.w	r3, r1, #4
 8021362:	d50a      	bpl.n	802137a <_printf_i+0xce>
 8021364:	680e      	ldr	r6, [r1, #0]
 8021366:	602b      	str	r3, [r5, #0]
 8021368:	2e00      	cmp	r6, #0
 802136a:	da03      	bge.n	8021374 <_printf_i+0xc8>
 802136c:	232d      	movs	r3, #45	; 0x2d
 802136e:	4276      	negs	r6, r6
 8021370:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021374:	485e      	ldr	r0, [pc, #376]	; (80214f0 <_printf_i+0x244>)
 8021376:	230a      	movs	r3, #10
 8021378:	e019      	b.n	80213ae <_printf_i+0x102>
 802137a:	680e      	ldr	r6, [r1, #0]
 802137c:	602b      	str	r3, [r5, #0]
 802137e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021382:	bf18      	it	ne
 8021384:	b236      	sxthne	r6, r6
 8021386:	e7ef      	b.n	8021368 <_printf_i+0xbc>
 8021388:	682b      	ldr	r3, [r5, #0]
 802138a:	6820      	ldr	r0, [r4, #0]
 802138c:	1d19      	adds	r1, r3, #4
 802138e:	6029      	str	r1, [r5, #0]
 8021390:	0601      	lsls	r1, r0, #24
 8021392:	d501      	bpl.n	8021398 <_printf_i+0xec>
 8021394:	681e      	ldr	r6, [r3, #0]
 8021396:	e002      	b.n	802139e <_printf_i+0xf2>
 8021398:	0646      	lsls	r6, r0, #25
 802139a:	d5fb      	bpl.n	8021394 <_printf_i+0xe8>
 802139c:	881e      	ldrh	r6, [r3, #0]
 802139e:	4854      	ldr	r0, [pc, #336]	; (80214f0 <_printf_i+0x244>)
 80213a0:	2f6f      	cmp	r7, #111	; 0x6f
 80213a2:	bf0c      	ite	eq
 80213a4:	2308      	moveq	r3, #8
 80213a6:	230a      	movne	r3, #10
 80213a8:	2100      	movs	r1, #0
 80213aa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80213ae:	6865      	ldr	r5, [r4, #4]
 80213b0:	60a5      	str	r5, [r4, #8]
 80213b2:	2d00      	cmp	r5, #0
 80213b4:	bfa2      	ittt	ge
 80213b6:	6821      	ldrge	r1, [r4, #0]
 80213b8:	f021 0104 	bicge.w	r1, r1, #4
 80213bc:	6021      	strge	r1, [r4, #0]
 80213be:	b90e      	cbnz	r6, 80213c4 <_printf_i+0x118>
 80213c0:	2d00      	cmp	r5, #0
 80213c2:	d04d      	beq.n	8021460 <_printf_i+0x1b4>
 80213c4:	4615      	mov	r5, r2
 80213c6:	fbb6 f1f3 	udiv	r1, r6, r3
 80213ca:	fb03 6711 	mls	r7, r3, r1, r6
 80213ce:	5dc7      	ldrb	r7, [r0, r7]
 80213d0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80213d4:	4637      	mov	r7, r6
 80213d6:	42bb      	cmp	r3, r7
 80213d8:	460e      	mov	r6, r1
 80213da:	d9f4      	bls.n	80213c6 <_printf_i+0x11a>
 80213dc:	2b08      	cmp	r3, #8
 80213de:	d10b      	bne.n	80213f8 <_printf_i+0x14c>
 80213e0:	6823      	ldr	r3, [r4, #0]
 80213e2:	07de      	lsls	r6, r3, #31
 80213e4:	d508      	bpl.n	80213f8 <_printf_i+0x14c>
 80213e6:	6923      	ldr	r3, [r4, #16]
 80213e8:	6861      	ldr	r1, [r4, #4]
 80213ea:	4299      	cmp	r1, r3
 80213ec:	bfde      	ittt	le
 80213ee:	2330      	movle	r3, #48	; 0x30
 80213f0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80213f4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80213f8:	1b52      	subs	r2, r2, r5
 80213fa:	6122      	str	r2, [r4, #16]
 80213fc:	f8cd a000 	str.w	sl, [sp]
 8021400:	464b      	mov	r3, r9
 8021402:	aa03      	add	r2, sp, #12
 8021404:	4621      	mov	r1, r4
 8021406:	4640      	mov	r0, r8
 8021408:	f7ff fee2 	bl	80211d0 <_printf_common>
 802140c:	3001      	adds	r0, #1
 802140e:	d14c      	bne.n	80214aa <_printf_i+0x1fe>
 8021410:	f04f 30ff 	mov.w	r0, #4294967295
 8021414:	b004      	add	sp, #16
 8021416:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802141a:	4835      	ldr	r0, [pc, #212]	; (80214f0 <_printf_i+0x244>)
 802141c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8021420:	6829      	ldr	r1, [r5, #0]
 8021422:	6823      	ldr	r3, [r4, #0]
 8021424:	f851 6b04 	ldr.w	r6, [r1], #4
 8021428:	6029      	str	r1, [r5, #0]
 802142a:	061d      	lsls	r5, r3, #24
 802142c:	d514      	bpl.n	8021458 <_printf_i+0x1ac>
 802142e:	07df      	lsls	r7, r3, #31
 8021430:	bf44      	itt	mi
 8021432:	f043 0320 	orrmi.w	r3, r3, #32
 8021436:	6023      	strmi	r3, [r4, #0]
 8021438:	b91e      	cbnz	r6, 8021442 <_printf_i+0x196>
 802143a:	6823      	ldr	r3, [r4, #0]
 802143c:	f023 0320 	bic.w	r3, r3, #32
 8021440:	6023      	str	r3, [r4, #0]
 8021442:	2310      	movs	r3, #16
 8021444:	e7b0      	b.n	80213a8 <_printf_i+0xfc>
 8021446:	6823      	ldr	r3, [r4, #0]
 8021448:	f043 0320 	orr.w	r3, r3, #32
 802144c:	6023      	str	r3, [r4, #0]
 802144e:	2378      	movs	r3, #120	; 0x78
 8021450:	4828      	ldr	r0, [pc, #160]	; (80214f4 <_printf_i+0x248>)
 8021452:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8021456:	e7e3      	b.n	8021420 <_printf_i+0x174>
 8021458:	0659      	lsls	r1, r3, #25
 802145a:	bf48      	it	mi
 802145c:	b2b6      	uxthmi	r6, r6
 802145e:	e7e6      	b.n	802142e <_printf_i+0x182>
 8021460:	4615      	mov	r5, r2
 8021462:	e7bb      	b.n	80213dc <_printf_i+0x130>
 8021464:	682b      	ldr	r3, [r5, #0]
 8021466:	6826      	ldr	r6, [r4, #0]
 8021468:	6961      	ldr	r1, [r4, #20]
 802146a:	1d18      	adds	r0, r3, #4
 802146c:	6028      	str	r0, [r5, #0]
 802146e:	0635      	lsls	r5, r6, #24
 8021470:	681b      	ldr	r3, [r3, #0]
 8021472:	d501      	bpl.n	8021478 <_printf_i+0x1cc>
 8021474:	6019      	str	r1, [r3, #0]
 8021476:	e002      	b.n	802147e <_printf_i+0x1d2>
 8021478:	0670      	lsls	r0, r6, #25
 802147a:	d5fb      	bpl.n	8021474 <_printf_i+0x1c8>
 802147c:	8019      	strh	r1, [r3, #0]
 802147e:	2300      	movs	r3, #0
 8021480:	6123      	str	r3, [r4, #16]
 8021482:	4615      	mov	r5, r2
 8021484:	e7ba      	b.n	80213fc <_printf_i+0x150>
 8021486:	682b      	ldr	r3, [r5, #0]
 8021488:	1d1a      	adds	r2, r3, #4
 802148a:	602a      	str	r2, [r5, #0]
 802148c:	681d      	ldr	r5, [r3, #0]
 802148e:	6862      	ldr	r2, [r4, #4]
 8021490:	2100      	movs	r1, #0
 8021492:	4628      	mov	r0, r5
 8021494:	f7de feac 	bl	80001f0 <memchr>
 8021498:	b108      	cbz	r0, 802149e <_printf_i+0x1f2>
 802149a:	1b40      	subs	r0, r0, r5
 802149c:	6060      	str	r0, [r4, #4]
 802149e:	6863      	ldr	r3, [r4, #4]
 80214a0:	6123      	str	r3, [r4, #16]
 80214a2:	2300      	movs	r3, #0
 80214a4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80214a8:	e7a8      	b.n	80213fc <_printf_i+0x150>
 80214aa:	6923      	ldr	r3, [r4, #16]
 80214ac:	462a      	mov	r2, r5
 80214ae:	4649      	mov	r1, r9
 80214b0:	4640      	mov	r0, r8
 80214b2:	47d0      	blx	sl
 80214b4:	3001      	adds	r0, #1
 80214b6:	d0ab      	beq.n	8021410 <_printf_i+0x164>
 80214b8:	6823      	ldr	r3, [r4, #0]
 80214ba:	079b      	lsls	r3, r3, #30
 80214bc:	d413      	bmi.n	80214e6 <_printf_i+0x23a>
 80214be:	68e0      	ldr	r0, [r4, #12]
 80214c0:	9b03      	ldr	r3, [sp, #12]
 80214c2:	4298      	cmp	r0, r3
 80214c4:	bfb8      	it	lt
 80214c6:	4618      	movlt	r0, r3
 80214c8:	e7a4      	b.n	8021414 <_printf_i+0x168>
 80214ca:	2301      	movs	r3, #1
 80214cc:	4632      	mov	r2, r6
 80214ce:	4649      	mov	r1, r9
 80214d0:	4640      	mov	r0, r8
 80214d2:	47d0      	blx	sl
 80214d4:	3001      	adds	r0, #1
 80214d6:	d09b      	beq.n	8021410 <_printf_i+0x164>
 80214d8:	3501      	adds	r5, #1
 80214da:	68e3      	ldr	r3, [r4, #12]
 80214dc:	9903      	ldr	r1, [sp, #12]
 80214de:	1a5b      	subs	r3, r3, r1
 80214e0:	42ab      	cmp	r3, r5
 80214e2:	dcf2      	bgt.n	80214ca <_printf_i+0x21e>
 80214e4:	e7eb      	b.n	80214be <_printf_i+0x212>
 80214e6:	2500      	movs	r5, #0
 80214e8:	f104 0619 	add.w	r6, r4, #25
 80214ec:	e7f5      	b.n	80214da <_printf_i+0x22e>
 80214ee:	bf00      	nop
 80214f0:	08024995 	.word	0x08024995
 80214f4:	080249a6 	.word	0x080249a6

080214f8 <cleanup_glue>:
 80214f8:	b538      	push	{r3, r4, r5, lr}
 80214fa:	460c      	mov	r4, r1
 80214fc:	6809      	ldr	r1, [r1, #0]
 80214fe:	4605      	mov	r5, r0
 8021500:	b109      	cbz	r1, 8021506 <cleanup_glue+0xe>
 8021502:	f7ff fff9 	bl	80214f8 <cleanup_glue>
 8021506:	4621      	mov	r1, r4
 8021508:	4628      	mov	r0, r5
 802150a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802150e:	f7ff bc25 	b.w	8020d5c <_free_r>
	...

08021514 <_reclaim_reent>:
 8021514:	4b2c      	ldr	r3, [pc, #176]	; (80215c8 <_reclaim_reent+0xb4>)
 8021516:	681b      	ldr	r3, [r3, #0]
 8021518:	4283      	cmp	r3, r0
 802151a:	b570      	push	{r4, r5, r6, lr}
 802151c:	4604      	mov	r4, r0
 802151e:	d051      	beq.n	80215c4 <_reclaim_reent+0xb0>
 8021520:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8021522:	b143      	cbz	r3, 8021536 <_reclaim_reent+0x22>
 8021524:	68db      	ldr	r3, [r3, #12]
 8021526:	2b00      	cmp	r3, #0
 8021528:	d14a      	bne.n	80215c0 <_reclaim_reent+0xac>
 802152a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802152c:	6819      	ldr	r1, [r3, #0]
 802152e:	b111      	cbz	r1, 8021536 <_reclaim_reent+0x22>
 8021530:	4620      	mov	r0, r4
 8021532:	f7ff fc13 	bl	8020d5c <_free_r>
 8021536:	6961      	ldr	r1, [r4, #20]
 8021538:	b111      	cbz	r1, 8021540 <_reclaim_reent+0x2c>
 802153a:	4620      	mov	r0, r4
 802153c:	f7ff fc0e 	bl	8020d5c <_free_r>
 8021540:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8021542:	b111      	cbz	r1, 802154a <_reclaim_reent+0x36>
 8021544:	4620      	mov	r0, r4
 8021546:	f7ff fc09 	bl	8020d5c <_free_r>
 802154a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802154c:	b111      	cbz	r1, 8021554 <_reclaim_reent+0x40>
 802154e:	4620      	mov	r0, r4
 8021550:	f7ff fc04 	bl	8020d5c <_free_r>
 8021554:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021556:	b111      	cbz	r1, 802155e <_reclaim_reent+0x4a>
 8021558:	4620      	mov	r0, r4
 802155a:	f7ff fbff 	bl	8020d5c <_free_r>
 802155e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8021560:	b111      	cbz	r1, 8021568 <_reclaim_reent+0x54>
 8021562:	4620      	mov	r0, r4
 8021564:	f7ff fbfa 	bl	8020d5c <_free_r>
 8021568:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802156a:	b111      	cbz	r1, 8021572 <_reclaim_reent+0x5e>
 802156c:	4620      	mov	r0, r4
 802156e:	f7ff fbf5 	bl	8020d5c <_free_r>
 8021572:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021574:	b111      	cbz	r1, 802157c <_reclaim_reent+0x68>
 8021576:	4620      	mov	r0, r4
 8021578:	f7ff fbf0 	bl	8020d5c <_free_r>
 802157c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802157e:	b111      	cbz	r1, 8021586 <_reclaim_reent+0x72>
 8021580:	4620      	mov	r0, r4
 8021582:	f7ff fbeb 	bl	8020d5c <_free_r>
 8021586:	69a3      	ldr	r3, [r4, #24]
 8021588:	b1e3      	cbz	r3, 80215c4 <_reclaim_reent+0xb0>
 802158a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802158c:	4620      	mov	r0, r4
 802158e:	4798      	blx	r3
 8021590:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8021592:	b1b9      	cbz	r1, 80215c4 <_reclaim_reent+0xb0>
 8021594:	4620      	mov	r0, r4
 8021596:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802159a:	f7ff bfad 	b.w	80214f8 <cleanup_glue>
 802159e:	5949      	ldr	r1, [r1, r5]
 80215a0:	b941      	cbnz	r1, 80215b4 <_reclaim_reent+0xa0>
 80215a2:	3504      	adds	r5, #4
 80215a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80215a6:	2d80      	cmp	r5, #128	; 0x80
 80215a8:	68d9      	ldr	r1, [r3, #12]
 80215aa:	d1f8      	bne.n	802159e <_reclaim_reent+0x8a>
 80215ac:	4620      	mov	r0, r4
 80215ae:	f7ff fbd5 	bl	8020d5c <_free_r>
 80215b2:	e7ba      	b.n	802152a <_reclaim_reent+0x16>
 80215b4:	680e      	ldr	r6, [r1, #0]
 80215b6:	4620      	mov	r0, r4
 80215b8:	f7ff fbd0 	bl	8020d5c <_free_r>
 80215bc:	4631      	mov	r1, r6
 80215be:	e7ef      	b.n	80215a0 <_reclaim_reent+0x8c>
 80215c0:	2500      	movs	r5, #0
 80215c2:	e7ef      	b.n	80215a4 <_reclaim_reent+0x90>
 80215c4:	bd70      	pop	{r4, r5, r6, pc}
 80215c6:	bf00      	nop
 80215c8:	20000104 	.word	0x20000104

080215cc <_sbrk_r>:
 80215cc:	b538      	push	{r3, r4, r5, lr}
 80215ce:	4d06      	ldr	r5, [pc, #24]	; (80215e8 <_sbrk_r+0x1c>)
 80215d0:	2300      	movs	r3, #0
 80215d2:	4604      	mov	r4, r0
 80215d4:	4608      	mov	r0, r1
 80215d6:	602b      	str	r3, [r5, #0]
 80215d8:	f7e0 fef6 	bl	80023c8 <_sbrk>
 80215dc:	1c43      	adds	r3, r0, #1
 80215de:	d102      	bne.n	80215e6 <_sbrk_r+0x1a>
 80215e0:	682b      	ldr	r3, [r5, #0]
 80215e2:	b103      	cbz	r3, 80215e6 <_sbrk_r+0x1a>
 80215e4:	6023      	str	r3, [r4, #0]
 80215e6:	bd38      	pop	{r3, r4, r5, pc}
 80215e8:	20015a0c 	.word	0x20015a0c

080215ec <_raise_r>:
 80215ec:	291f      	cmp	r1, #31
 80215ee:	b538      	push	{r3, r4, r5, lr}
 80215f0:	4604      	mov	r4, r0
 80215f2:	460d      	mov	r5, r1
 80215f4:	d904      	bls.n	8021600 <_raise_r+0x14>
 80215f6:	2316      	movs	r3, #22
 80215f8:	6003      	str	r3, [r0, #0]
 80215fa:	f04f 30ff 	mov.w	r0, #4294967295
 80215fe:	bd38      	pop	{r3, r4, r5, pc}
 8021600:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8021602:	b112      	cbz	r2, 802160a <_raise_r+0x1e>
 8021604:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021608:	b94b      	cbnz	r3, 802161e <_raise_r+0x32>
 802160a:	4620      	mov	r0, r4
 802160c:	f000 f830 	bl	8021670 <_getpid_r>
 8021610:	462a      	mov	r2, r5
 8021612:	4601      	mov	r1, r0
 8021614:	4620      	mov	r0, r4
 8021616:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802161a:	f000 b817 	b.w	802164c <_kill_r>
 802161e:	2b01      	cmp	r3, #1
 8021620:	d00a      	beq.n	8021638 <_raise_r+0x4c>
 8021622:	1c59      	adds	r1, r3, #1
 8021624:	d103      	bne.n	802162e <_raise_r+0x42>
 8021626:	2316      	movs	r3, #22
 8021628:	6003      	str	r3, [r0, #0]
 802162a:	2001      	movs	r0, #1
 802162c:	e7e7      	b.n	80215fe <_raise_r+0x12>
 802162e:	2400      	movs	r4, #0
 8021630:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021634:	4628      	mov	r0, r5
 8021636:	4798      	blx	r3
 8021638:	2000      	movs	r0, #0
 802163a:	e7e0      	b.n	80215fe <_raise_r+0x12>

0802163c <raise>:
 802163c:	4b02      	ldr	r3, [pc, #8]	; (8021648 <raise+0xc>)
 802163e:	4601      	mov	r1, r0
 8021640:	6818      	ldr	r0, [r3, #0]
 8021642:	f7ff bfd3 	b.w	80215ec <_raise_r>
 8021646:	bf00      	nop
 8021648:	20000104 	.word	0x20000104

0802164c <_kill_r>:
 802164c:	b538      	push	{r3, r4, r5, lr}
 802164e:	4d07      	ldr	r5, [pc, #28]	; (802166c <_kill_r+0x20>)
 8021650:	2300      	movs	r3, #0
 8021652:	4604      	mov	r4, r0
 8021654:	4608      	mov	r0, r1
 8021656:	4611      	mov	r1, r2
 8021658:	602b      	str	r3, [r5, #0]
 802165a:	f7e0 fe7f 	bl	800235c <_kill>
 802165e:	1c43      	adds	r3, r0, #1
 8021660:	d102      	bne.n	8021668 <_kill_r+0x1c>
 8021662:	682b      	ldr	r3, [r5, #0]
 8021664:	b103      	cbz	r3, 8021668 <_kill_r+0x1c>
 8021666:	6023      	str	r3, [r4, #0]
 8021668:	bd38      	pop	{r3, r4, r5, pc}
 802166a:	bf00      	nop
 802166c:	20015a0c 	.word	0x20015a0c

08021670 <_getpid_r>:
 8021670:	f7e0 be72 	b.w	8002358 <_getpid>

08021674 <__sread>:
 8021674:	b510      	push	{r4, lr}
 8021676:	460c      	mov	r4, r1
 8021678:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802167c:	f000 fac8 	bl	8021c10 <_read_r>
 8021680:	2800      	cmp	r0, #0
 8021682:	bfab      	itete	ge
 8021684:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021686:	89a3      	ldrhlt	r3, [r4, #12]
 8021688:	181b      	addge	r3, r3, r0
 802168a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802168e:	bfac      	ite	ge
 8021690:	6563      	strge	r3, [r4, #84]	; 0x54
 8021692:	81a3      	strhlt	r3, [r4, #12]
 8021694:	bd10      	pop	{r4, pc}

08021696 <__swrite>:
 8021696:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802169a:	461f      	mov	r7, r3
 802169c:	898b      	ldrh	r3, [r1, #12]
 802169e:	05db      	lsls	r3, r3, #23
 80216a0:	4605      	mov	r5, r0
 80216a2:	460c      	mov	r4, r1
 80216a4:	4616      	mov	r6, r2
 80216a6:	d505      	bpl.n	80216b4 <__swrite+0x1e>
 80216a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80216ac:	2302      	movs	r3, #2
 80216ae:	2200      	movs	r2, #0
 80216b0:	f000 fa2a 	bl	8021b08 <_lseek_r>
 80216b4:	89a3      	ldrh	r3, [r4, #12]
 80216b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80216ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80216be:	81a3      	strh	r3, [r4, #12]
 80216c0:	4632      	mov	r2, r6
 80216c2:	463b      	mov	r3, r7
 80216c4:	4628      	mov	r0, r5
 80216c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80216ca:	f000 b869 	b.w	80217a0 <_write_r>

080216ce <__sseek>:
 80216ce:	b510      	push	{r4, lr}
 80216d0:	460c      	mov	r4, r1
 80216d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80216d6:	f000 fa17 	bl	8021b08 <_lseek_r>
 80216da:	1c43      	adds	r3, r0, #1
 80216dc:	89a3      	ldrh	r3, [r4, #12]
 80216de:	bf15      	itete	ne
 80216e0:	6560      	strne	r0, [r4, #84]	; 0x54
 80216e2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80216e6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80216ea:	81a3      	strheq	r3, [r4, #12]
 80216ec:	bf18      	it	ne
 80216ee:	81a3      	strhne	r3, [r4, #12]
 80216f0:	bd10      	pop	{r4, pc}

080216f2 <__sclose>:
 80216f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80216f6:	f000 b935 	b.w	8021964 <_close_r>
	...

080216fc <__swbuf_r>:
 80216fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80216fe:	460e      	mov	r6, r1
 8021700:	4614      	mov	r4, r2
 8021702:	4605      	mov	r5, r0
 8021704:	b118      	cbz	r0, 802170e <__swbuf_r+0x12>
 8021706:	6983      	ldr	r3, [r0, #24]
 8021708:	b90b      	cbnz	r3, 802170e <__swbuf_r+0x12>
 802170a:	f7ff fa29 	bl	8020b60 <__sinit>
 802170e:	4b21      	ldr	r3, [pc, #132]	; (8021794 <__swbuf_r+0x98>)
 8021710:	429c      	cmp	r4, r3
 8021712:	d12b      	bne.n	802176c <__swbuf_r+0x70>
 8021714:	686c      	ldr	r4, [r5, #4]
 8021716:	69a3      	ldr	r3, [r4, #24]
 8021718:	60a3      	str	r3, [r4, #8]
 802171a:	89a3      	ldrh	r3, [r4, #12]
 802171c:	071a      	lsls	r2, r3, #28
 802171e:	d52f      	bpl.n	8021780 <__swbuf_r+0x84>
 8021720:	6923      	ldr	r3, [r4, #16]
 8021722:	b36b      	cbz	r3, 8021780 <__swbuf_r+0x84>
 8021724:	6923      	ldr	r3, [r4, #16]
 8021726:	6820      	ldr	r0, [r4, #0]
 8021728:	1ac0      	subs	r0, r0, r3
 802172a:	6963      	ldr	r3, [r4, #20]
 802172c:	b2f6      	uxtb	r6, r6
 802172e:	4283      	cmp	r3, r0
 8021730:	4637      	mov	r7, r6
 8021732:	dc04      	bgt.n	802173e <__swbuf_r+0x42>
 8021734:	4621      	mov	r1, r4
 8021736:	4628      	mov	r0, r5
 8021738:	f000 f9aa 	bl	8021a90 <_fflush_r>
 802173c:	bb30      	cbnz	r0, 802178c <__swbuf_r+0x90>
 802173e:	68a3      	ldr	r3, [r4, #8]
 8021740:	3b01      	subs	r3, #1
 8021742:	60a3      	str	r3, [r4, #8]
 8021744:	6823      	ldr	r3, [r4, #0]
 8021746:	1c5a      	adds	r2, r3, #1
 8021748:	6022      	str	r2, [r4, #0]
 802174a:	701e      	strb	r6, [r3, #0]
 802174c:	6963      	ldr	r3, [r4, #20]
 802174e:	3001      	adds	r0, #1
 8021750:	4283      	cmp	r3, r0
 8021752:	d004      	beq.n	802175e <__swbuf_r+0x62>
 8021754:	89a3      	ldrh	r3, [r4, #12]
 8021756:	07db      	lsls	r3, r3, #31
 8021758:	d506      	bpl.n	8021768 <__swbuf_r+0x6c>
 802175a:	2e0a      	cmp	r6, #10
 802175c:	d104      	bne.n	8021768 <__swbuf_r+0x6c>
 802175e:	4621      	mov	r1, r4
 8021760:	4628      	mov	r0, r5
 8021762:	f000 f995 	bl	8021a90 <_fflush_r>
 8021766:	b988      	cbnz	r0, 802178c <__swbuf_r+0x90>
 8021768:	4638      	mov	r0, r7
 802176a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802176c:	4b0a      	ldr	r3, [pc, #40]	; (8021798 <__swbuf_r+0x9c>)
 802176e:	429c      	cmp	r4, r3
 8021770:	d101      	bne.n	8021776 <__swbuf_r+0x7a>
 8021772:	68ac      	ldr	r4, [r5, #8]
 8021774:	e7cf      	b.n	8021716 <__swbuf_r+0x1a>
 8021776:	4b09      	ldr	r3, [pc, #36]	; (802179c <__swbuf_r+0xa0>)
 8021778:	429c      	cmp	r4, r3
 802177a:	bf08      	it	eq
 802177c:	68ec      	ldreq	r4, [r5, #12]
 802177e:	e7ca      	b.n	8021716 <__swbuf_r+0x1a>
 8021780:	4621      	mov	r1, r4
 8021782:	4628      	mov	r0, r5
 8021784:	f000 f81e 	bl	80217c4 <__swsetup_r>
 8021788:	2800      	cmp	r0, #0
 802178a:	d0cb      	beq.n	8021724 <__swbuf_r+0x28>
 802178c:	f04f 37ff 	mov.w	r7, #4294967295
 8021790:	e7ea      	b.n	8021768 <__swbuf_r+0x6c>
 8021792:	bf00      	nop
 8021794:	08024940 	.word	0x08024940
 8021798:	08024960 	.word	0x08024960
 802179c:	08024920 	.word	0x08024920

080217a0 <_write_r>:
 80217a0:	b538      	push	{r3, r4, r5, lr}
 80217a2:	4d07      	ldr	r5, [pc, #28]	; (80217c0 <_write_r+0x20>)
 80217a4:	4604      	mov	r4, r0
 80217a6:	4608      	mov	r0, r1
 80217a8:	4611      	mov	r1, r2
 80217aa:	2200      	movs	r2, #0
 80217ac:	602a      	str	r2, [r5, #0]
 80217ae:	461a      	mov	r2, r3
 80217b0:	f7e0 fdf0 	bl	8002394 <_write>
 80217b4:	1c43      	adds	r3, r0, #1
 80217b6:	d102      	bne.n	80217be <_write_r+0x1e>
 80217b8:	682b      	ldr	r3, [r5, #0]
 80217ba:	b103      	cbz	r3, 80217be <_write_r+0x1e>
 80217bc:	6023      	str	r3, [r4, #0]
 80217be:	bd38      	pop	{r3, r4, r5, pc}
 80217c0:	20015a0c 	.word	0x20015a0c

080217c4 <__swsetup_r>:
 80217c4:	4b32      	ldr	r3, [pc, #200]	; (8021890 <__swsetup_r+0xcc>)
 80217c6:	b570      	push	{r4, r5, r6, lr}
 80217c8:	681d      	ldr	r5, [r3, #0]
 80217ca:	4606      	mov	r6, r0
 80217cc:	460c      	mov	r4, r1
 80217ce:	b125      	cbz	r5, 80217da <__swsetup_r+0x16>
 80217d0:	69ab      	ldr	r3, [r5, #24]
 80217d2:	b913      	cbnz	r3, 80217da <__swsetup_r+0x16>
 80217d4:	4628      	mov	r0, r5
 80217d6:	f7ff f9c3 	bl	8020b60 <__sinit>
 80217da:	4b2e      	ldr	r3, [pc, #184]	; (8021894 <__swsetup_r+0xd0>)
 80217dc:	429c      	cmp	r4, r3
 80217de:	d10f      	bne.n	8021800 <__swsetup_r+0x3c>
 80217e0:	686c      	ldr	r4, [r5, #4]
 80217e2:	89a3      	ldrh	r3, [r4, #12]
 80217e4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80217e8:	0719      	lsls	r1, r3, #28
 80217ea:	d42c      	bmi.n	8021846 <__swsetup_r+0x82>
 80217ec:	06dd      	lsls	r5, r3, #27
 80217ee:	d411      	bmi.n	8021814 <__swsetup_r+0x50>
 80217f0:	2309      	movs	r3, #9
 80217f2:	6033      	str	r3, [r6, #0]
 80217f4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80217f8:	81a3      	strh	r3, [r4, #12]
 80217fa:	f04f 30ff 	mov.w	r0, #4294967295
 80217fe:	e03e      	b.n	802187e <__swsetup_r+0xba>
 8021800:	4b25      	ldr	r3, [pc, #148]	; (8021898 <__swsetup_r+0xd4>)
 8021802:	429c      	cmp	r4, r3
 8021804:	d101      	bne.n	802180a <__swsetup_r+0x46>
 8021806:	68ac      	ldr	r4, [r5, #8]
 8021808:	e7eb      	b.n	80217e2 <__swsetup_r+0x1e>
 802180a:	4b24      	ldr	r3, [pc, #144]	; (802189c <__swsetup_r+0xd8>)
 802180c:	429c      	cmp	r4, r3
 802180e:	bf08      	it	eq
 8021810:	68ec      	ldreq	r4, [r5, #12]
 8021812:	e7e6      	b.n	80217e2 <__swsetup_r+0x1e>
 8021814:	0758      	lsls	r0, r3, #29
 8021816:	d512      	bpl.n	802183e <__swsetup_r+0x7a>
 8021818:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802181a:	b141      	cbz	r1, 802182e <__swsetup_r+0x6a>
 802181c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021820:	4299      	cmp	r1, r3
 8021822:	d002      	beq.n	802182a <__swsetup_r+0x66>
 8021824:	4630      	mov	r0, r6
 8021826:	f7ff fa99 	bl	8020d5c <_free_r>
 802182a:	2300      	movs	r3, #0
 802182c:	6363      	str	r3, [r4, #52]	; 0x34
 802182e:	89a3      	ldrh	r3, [r4, #12]
 8021830:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021834:	81a3      	strh	r3, [r4, #12]
 8021836:	2300      	movs	r3, #0
 8021838:	6063      	str	r3, [r4, #4]
 802183a:	6923      	ldr	r3, [r4, #16]
 802183c:	6023      	str	r3, [r4, #0]
 802183e:	89a3      	ldrh	r3, [r4, #12]
 8021840:	f043 0308 	orr.w	r3, r3, #8
 8021844:	81a3      	strh	r3, [r4, #12]
 8021846:	6923      	ldr	r3, [r4, #16]
 8021848:	b94b      	cbnz	r3, 802185e <__swsetup_r+0x9a>
 802184a:	89a3      	ldrh	r3, [r4, #12]
 802184c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021850:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021854:	d003      	beq.n	802185e <__swsetup_r+0x9a>
 8021856:	4621      	mov	r1, r4
 8021858:	4630      	mov	r0, r6
 802185a:	f000 f98d 	bl	8021b78 <__smakebuf_r>
 802185e:	89a0      	ldrh	r0, [r4, #12]
 8021860:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021864:	f010 0301 	ands.w	r3, r0, #1
 8021868:	d00a      	beq.n	8021880 <__swsetup_r+0xbc>
 802186a:	2300      	movs	r3, #0
 802186c:	60a3      	str	r3, [r4, #8]
 802186e:	6963      	ldr	r3, [r4, #20]
 8021870:	425b      	negs	r3, r3
 8021872:	61a3      	str	r3, [r4, #24]
 8021874:	6923      	ldr	r3, [r4, #16]
 8021876:	b943      	cbnz	r3, 802188a <__swsetup_r+0xc6>
 8021878:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802187c:	d1ba      	bne.n	80217f4 <__swsetup_r+0x30>
 802187e:	bd70      	pop	{r4, r5, r6, pc}
 8021880:	0781      	lsls	r1, r0, #30
 8021882:	bf58      	it	pl
 8021884:	6963      	ldrpl	r3, [r4, #20]
 8021886:	60a3      	str	r3, [r4, #8]
 8021888:	e7f4      	b.n	8021874 <__swsetup_r+0xb0>
 802188a:	2000      	movs	r0, #0
 802188c:	e7f7      	b.n	802187e <__swsetup_r+0xba>
 802188e:	bf00      	nop
 8021890:	20000104 	.word	0x20000104
 8021894:	08024940 	.word	0x08024940
 8021898:	08024960 	.word	0x08024960
 802189c:	08024920 	.word	0x08024920

080218a0 <__register_exitproc>:
 80218a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80218a4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021960 <__register_exitproc+0xc0>
 80218a8:	4606      	mov	r6, r0
 80218aa:	f8d8 0000 	ldr.w	r0, [r8]
 80218ae:	461f      	mov	r7, r3
 80218b0:	460d      	mov	r5, r1
 80218b2:	4691      	mov	r9, r2
 80218b4:	f7ff fa29 	bl	8020d0a <__retarget_lock_acquire_recursive>
 80218b8:	4b25      	ldr	r3, [pc, #148]	; (8021950 <__register_exitproc+0xb0>)
 80218ba:	681c      	ldr	r4, [r3, #0]
 80218bc:	b934      	cbnz	r4, 80218cc <__register_exitproc+0x2c>
 80218be:	4c25      	ldr	r4, [pc, #148]	; (8021954 <__register_exitproc+0xb4>)
 80218c0:	601c      	str	r4, [r3, #0]
 80218c2:	4b25      	ldr	r3, [pc, #148]	; (8021958 <__register_exitproc+0xb8>)
 80218c4:	b113      	cbz	r3, 80218cc <__register_exitproc+0x2c>
 80218c6:	681b      	ldr	r3, [r3, #0]
 80218c8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80218cc:	6863      	ldr	r3, [r4, #4]
 80218ce:	2b1f      	cmp	r3, #31
 80218d0:	dd07      	ble.n	80218e2 <__register_exitproc+0x42>
 80218d2:	f8d8 0000 	ldr.w	r0, [r8]
 80218d6:	f7ff fa1a 	bl	8020d0e <__retarget_lock_release_recursive>
 80218da:	f04f 30ff 	mov.w	r0, #4294967295
 80218de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80218e2:	b34e      	cbz	r6, 8021938 <__register_exitproc+0x98>
 80218e4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80218e8:	b988      	cbnz	r0, 802190e <__register_exitproc+0x6e>
 80218ea:	4b1c      	ldr	r3, [pc, #112]	; (802195c <__register_exitproc+0xbc>)
 80218ec:	b923      	cbnz	r3, 80218f8 <__register_exitproc+0x58>
 80218ee:	f8d8 0000 	ldr.w	r0, [r8]
 80218f2:	f7ff fa0b 	bl	8020d0c <__retarget_lock_release>
 80218f6:	e7f0      	b.n	80218da <__register_exitproc+0x3a>
 80218f8:	f44f 7084 	mov.w	r0, #264	; 0x108
 80218fc:	f7ff fa08 	bl	8020d10 <malloc>
 8021900:	2800      	cmp	r0, #0
 8021902:	d0f4      	beq.n	80218ee <__register_exitproc+0x4e>
 8021904:	2300      	movs	r3, #0
 8021906:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802190a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802190e:	6863      	ldr	r3, [r4, #4]
 8021910:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021914:	2201      	movs	r2, #1
 8021916:	409a      	lsls	r2, r3
 8021918:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802191c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021920:	4313      	orrs	r3, r2
 8021922:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021926:	2e02      	cmp	r6, #2
 8021928:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802192c:	bf02      	ittt	eq
 802192e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8021932:	4313      	orreq	r3, r2
 8021934:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021938:	6863      	ldr	r3, [r4, #4]
 802193a:	f8d8 0000 	ldr.w	r0, [r8]
 802193e:	1c5a      	adds	r2, r3, #1
 8021940:	3302      	adds	r3, #2
 8021942:	6062      	str	r2, [r4, #4]
 8021944:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021948:	f7ff f9e1 	bl	8020d0e <__retarget_lock_release_recursive>
 802194c:	2000      	movs	r0, #0
 802194e:	e7c6      	b.n	80218de <__register_exitproc+0x3e>
 8021950:	20015a9c 	.word	0x20015a9c
 8021954:	20015a10 	.word	0x20015a10
 8021958:	080249b8 	.word	0x080249b8
 802195c:	08020d11 	.word	0x08020d11
 8021960:	20000168 	.word	0x20000168

08021964 <_close_r>:
 8021964:	b538      	push	{r3, r4, r5, lr}
 8021966:	4d06      	ldr	r5, [pc, #24]	; (8021980 <_close_r+0x1c>)
 8021968:	2300      	movs	r3, #0
 802196a:	4604      	mov	r4, r0
 802196c:	4608      	mov	r0, r1
 802196e:	602b      	str	r3, [r5, #0]
 8021970:	f7e0 fd1e 	bl	80023b0 <_close>
 8021974:	1c43      	adds	r3, r0, #1
 8021976:	d102      	bne.n	802197e <_close_r+0x1a>
 8021978:	682b      	ldr	r3, [r5, #0]
 802197a:	b103      	cbz	r3, 802197e <_close_r+0x1a>
 802197c:	6023      	str	r3, [r4, #0]
 802197e:	bd38      	pop	{r3, r4, r5, pc}
 8021980:	20015a0c 	.word	0x20015a0c

08021984 <__sflush_r>:
 8021984:	898a      	ldrh	r2, [r1, #12]
 8021986:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802198a:	4605      	mov	r5, r0
 802198c:	0710      	lsls	r0, r2, #28
 802198e:	460c      	mov	r4, r1
 8021990:	d458      	bmi.n	8021a44 <__sflush_r+0xc0>
 8021992:	684b      	ldr	r3, [r1, #4]
 8021994:	2b00      	cmp	r3, #0
 8021996:	dc05      	bgt.n	80219a4 <__sflush_r+0x20>
 8021998:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802199a:	2b00      	cmp	r3, #0
 802199c:	dc02      	bgt.n	80219a4 <__sflush_r+0x20>
 802199e:	2000      	movs	r0, #0
 80219a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80219a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80219a6:	2e00      	cmp	r6, #0
 80219a8:	d0f9      	beq.n	802199e <__sflush_r+0x1a>
 80219aa:	2300      	movs	r3, #0
 80219ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80219b0:	682f      	ldr	r7, [r5, #0]
 80219b2:	602b      	str	r3, [r5, #0]
 80219b4:	d032      	beq.n	8021a1c <__sflush_r+0x98>
 80219b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80219b8:	89a3      	ldrh	r3, [r4, #12]
 80219ba:	075a      	lsls	r2, r3, #29
 80219bc:	d505      	bpl.n	80219ca <__sflush_r+0x46>
 80219be:	6863      	ldr	r3, [r4, #4]
 80219c0:	1ac0      	subs	r0, r0, r3
 80219c2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80219c4:	b10b      	cbz	r3, 80219ca <__sflush_r+0x46>
 80219c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80219c8:	1ac0      	subs	r0, r0, r3
 80219ca:	2300      	movs	r3, #0
 80219cc:	4602      	mov	r2, r0
 80219ce:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80219d0:	6a21      	ldr	r1, [r4, #32]
 80219d2:	4628      	mov	r0, r5
 80219d4:	47b0      	blx	r6
 80219d6:	1c43      	adds	r3, r0, #1
 80219d8:	89a3      	ldrh	r3, [r4, #12]
 80219da:	d106      	bne.n	80219ea <__sflush_r+0x66>
 80219dc:	6829      	ldr	r1, [r5, #0]
 80219de:	291d      	cmp	r1, #29
 80219e0:	d82c      	bhi.n	8021a3c <__sflush_r+0xb8>
 80219e2:	4a2a      	ldr	r2, [pc, #168]	; (8021a8c <__sflush_r+0x108>)
 80219e4:	40ca      	lsrs	r2, r1
 80219e6:	07d6      	lsls	r6, r2, #31
 80219e8:	d528      	bpl.n	8021a3c <__sflush_r+0xb8>
 80219ea:	2200      	movs	r2, #0
 80219ec:	6062      	str	r2, [r4, #4]
 80219ee:	04d9      	lsls	r1, r3, #19
 80219f0:	6922      	ldr	r2, [r4, #16]
 80219f2:	6022      	str	r2, [r4, #0]
 80219f4:	d504      	bpl.n	8021a00 <__sflush_r+0x7c>
 80219f6:	1c42      	adds	r2, r0, #1
 80219f8:	d101      	bne.n	80219fe <__sflush_r+0x7a>
 80219fa:	682b      	ldr	r3, [r5, #0]
 80219fc:	b903      	cbnz	r3, 8021a00 <__sflush_r+0x7c>
 80219fe:	6560      	str	r0, [r4, #84]	; 0x54
 8021a00:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021a02:	602f      	str	r7, [r5, #0]
 8021a04:	2900      	cmp	r1, #0
 8021a06:	d0ca      	beq.n	802199e <__sflush_r+0x1a>
 8021a08:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021a0c:	4299      	cmp	r1, r3
 8021a0e:	d002      	beq.n	8021a16 <__sflush_r+0x92>
 8021a10:	4628      	mov	r0, r5
 8021a12:	f7ff f9a3 	bl	8020d5c <_free_r>
 8021a16:	2000      	movs	r0, #0
 8021a18:	6360      	str	r0, [r4, #52]	; 0x34
 8021a1a:	e7c1      	b.n	80219a0 <__sflush_r+0x1c>
 8021a1c:	6a21      	ldr	r1, [r4, #32]
 8021a1e:	2301      	movs	r3, #1
 8021a20:	4628      	mov	r0, r5
 8021a22:	47b0      	blx	r6
 8021a24:	1c41      	adds	r1, r0, #1
 8021a26:	d1c7      	bne.n	80219b8 <__sflush_r+0x34>
 8021a28:	682b      	ldr	r3, [r5, #0]
 8021a2a:	2b00      	cmp	r3, #0
 8021a2c:	d0c4      	beq.n	80219b8 <__sflush_r+0x34>
 8021a2e:	2b1d      	cmp	r3, #29
 8021a30:	d001      	beq.n	8021a36 <__sflush_r+0xb2>
 8021a32:	2b16      	cmp	r3, #22
 8021a34:	d101      	bne.n	8021a3a <__sflush_r+0xb6>
 8021a36:	602f      	str	r7, [r5, #0]
 8021a38:	e7b1      	b.n	802199e <__sflush_r+0x1a>
 8021a3a:	89a3      	ldrh	r3, [r4, #12]
 8021a3c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021a40:	81a3      	strh	r3, [r4, #12]
 8021a42:	e7ad      	b.n	80219a0 <__sflush_r+0x1c>
 8021a44:	690f      	ldr	r7, [r1, #16]
 8021a46:	2f00      	cmp	r7, #0
 8021a48:	d0a9      	beq.n	802199e <__sflush_r+0x1a>
 8021a4a:	0793      	lsls	r3, r2, #30
 8021a4c:	680e      	ldr	r6, [r1, #0]
 8021a4e:	bf08      	it	eq
 8021a50:	694b      	ldreq	r3, [r1, #20]
 8021a52:	600f      	str	r7, [r1, #0]
 8021a54:	bf18      	it	ne
 8021a56:	2300      	movne	r3, #0
 8021a58:	eba6 0807 	sub.w	r8, r6, r7
 8021a5c:	608b      	str	r3, [r1, #8]
 8021a5e:	f1b8 0f00 	cmp.w	r8, #0
 8021a62:	dd9c      	ble.n	802199e <__sflush_r+0x1a>
 8021a64:	6a21      	ldr	r1, [r4, #32]
 8021a66:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021a68:	4643      	mov	r3, r8
 8021a6a:	463a      	mov	r2, r7
 8021a6c:	4628      	mov	r0, r5
 8021a6e:	47b0      	blx	r6
 8021a70:	2800      	cmp	r0, #0
 8021a72:	dc06      	bgt.n	8021a82 <__sflush_r+0xfe>
 8021a74:	89a3      	ldrh	r3, [r4, #12]
 8021a76:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021a7a:	81a3      	strh	r3, [r4, #12]
 8021a7c:	f04f 30ff 	mov.w	r0, #4294967295
 8021a80:	e78e      	b.n	80219a0 <__sflush_r+0x1c>
 8021a82:	4407      	add	r7, r0
 8021a84:	eba8 0800 	sub.w	r8, r8, r0
 8021a88:	e7e9      	b.n	8021a5e <__sflush_r+0xda>
 8021a8a:	bf00      	nop
 8021a8c:	20400001 	.word	0x20400001

08021a90 <_fflush_r>:
 8021a90:	b538      	push	{r3, r4, r5, lr}
 8021a92:	690b      	ldr	r3, [r1, #16]
 8021a94:	4605      	mov	r5, r0
 8021a96:	460c      	mov	r4, r1
 8021a98:	b913      	cbnz	r3, 8021aa0 <_fflush_r+0x10>
 8021a9a:	2500      	movs	r5, #0
 8021a9c:	4628      	mov	r0, r5
 8021a9e:	bd38      	pop	{r3, r4, r5, pc}
 8021aa0:	b118      	cbz	r0, 8021aaa <_fflush_r+0x1a>
 8021aa2:	6983      	ldr	r3, [r0, #24]
 8021aa4:	b90b      	cbnz	r3, 8021aaa <_fflush_r+0x1a>
 8021aa6:	f7ff f85b 	bl	8020b60 <__sinit>
 8021aaa:	4b14      	ldr	r3, [pc, #80]	; (8021afc <_fflush_r+0x6c>)
 8021aac:	429c      	cmp	r4, r3
 8021aae:	d11b      	bne.n	8021ae8 <_fflush_r+0x58>
 8021ab0:	686c      	ldr	r4, [r5, #4]
 8021ab2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021ab6:	2b00      	cmp	r3, #0
 8021ab8:	d0ef      	beq.n	8021a9a <_fflush_r+0xa>
 8021aba:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8021abc:	07d0      	lsls	r0, r2, #31
 8021abe:	d404      	bmi.n	8021aca <_fflush_r+0x3a>
 8021ac0:	0599      	lsls	r1, r3, #22
 8021ac2:	d402      	bmi.n	8021aca <_fflush_r+0x3a>
 8021ac4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021ac6:	f7ff f920 	bl	8020d0a <__retarget_lock_acquire_recursive>
 8021aca:	4628      	mov	r0, r5
 8021acc:	4621      	mov	r1, r4
 8021ace:	f7ff ff59 	bl	8021984 <__sflush_r>
 8021ad2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021ad4:	07da      	lsls	r2, r3, #31
 8021ad6:	4605      	mov	r5, r0
 8021ad8:	d4e0      	bmi.n	8021a9c <_fflush_r+0xc>
 8021ada:	89a3      	ldrh	r3, [r4, #12]
 8021adc:	059b      	lsls	r3, r3, #22
 8021ade:	d4dd      	bmi.n	8021a9c <_fflush_r+0xc>
 8021ae0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021ae2:	f7ff f914 	bl	8020d0e <__retarget_lock_release_recursive>
 8021ae6:	e7d9      	b.n	8021a9c <_fflush_r+0xc>
 8021ae8:	4b05      	ldr	r3, [pc, #20]	; (8021b00 <_fflush_r+0x70>)
 8021aea:	429c      	cmp	r4, r3
 8021aec:	d101      	bne.n	8021af2 <_fflush_r+0x62>
 8021aee:	68ac      	ldr	r4, [r5, #8]
 8021af0:	e7df      	b.n	8021ab2 <_fflush_r+0x22>
 8021af2:	4b04      	ldr	r3, [pc, #16]	; (8021b04 <_fflush_r+0x74>)
 8021af4:	429c      	cmp	r4, r3
 8021af6:	bf08      	it	eq
 8021af8:	68ec      	ldreq	r4, [r5, #12]
 8021afa:	e7da      	b.n	8021ab2 <_fflush_r+0x22>
 8021afc:	08024940 	.word	0x08024940
 8021b00:	08024960 	.word	0x08024960
 8021b04:	08024920 	.word	0x08024920

08021b08 <_lseek_r>:
 8021b08:	b538      	push	{r3, r4, r5, lr}
 8021b0a:	4d07      	ldr	r5, [pc, #28]	; (8021b28 <_lseek_r+0x20>)
 8021b0c:	4604      	mov	r4, r0
 8021b0e:	4608      	mov	r0, r1
 8021b10:	4611      	mov	r1, r2
 8021b12:	2200      	movs	r2, #0
 8021b14:	602a      	str	r2, [r5, #0]
 8021b16:	461a      	mov	r2, r3
 8021b18:	f7e0 fc54 	bl	80023c4 <_lseek>
 8021b1c:	1c43      	adds	r3, r0, #1
 8021b1e:	d102      	bne.n	8021b26 <_lseek_r+0x1e>
 8021b20:	682b      	ldr	r3, [r5, #0]
 8021b22:	b103      	cbz	r3, 8021b26 <_lseek_r+0x1e>
 8021b24:	6023      	str	r3, [r4, #0]
 8021b26:	bd38      	pop	{r3, r4, r5, pc}
 8021b28:	20015a0c 	.word	0x20015a0c

08021b2c <__swhatbuf_r>:
 8021b2c:	b570      	push	{r4, r5, r6, lr}
 8021b2e:	460e      	mov	r6, r1
 8021b30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021b34:	2900      	cmp	r1, #0
 8021b36:	b096      	sub	sp, #88	; 0x58
 8021b38:	4614      	mov	r4, r2
 8021b3a:	461d      	mov	r5, r3
 8021b3c:	da08      	bge.n	8021b50 <__swhatbuf_r+0x24>
 8021b3e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8021b42:	2200      	movs	r2, #0
 8021b44:	602a      	str	r2, [r5, #0]
 8021b46:	061a      	lsls	r2, r3, #24
 8021b48:	d410      	bmi.n	8021b6c <__swhatbuf_r+0x40>
 8021b4a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021b4e:	e00e      	b.n	8021b6e <__swhatbuf_r+0x42>
 8021b50:	466a      	mov	r2, sp
 8021b52:	f000 f86f 	bl	8021c34 <_fstat_r>
 8021b56:	2800      	cmp	r0, #0
 8021b58:	dbf1      	blt.n	8021b3e <__swhatbuf_r+0x12>
 8021b5a:	9a01      	ldr	r2, [sp, #4]
 8021b5c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021b60:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021b64:	425a      	negs	r2, r3
 8021b66:	415a      	adcs	r2, r3
 8021b68:	602a      	str	r2, [r5, #0]
 8021b6a:	e7ee      	b.n	8021b4a <__swhatbuf_r+0x1e>
 8021b6c:	2340      	movs	r3, #64	; 0x40
 8021b6e:	2000      	movs	r0, #0
 8021b70:	6023      	str	r3, [r4, #0]
 8021b72:	b016      	add	sp, #88	; 0x58
 8021b74:	bd70      	pop	{r4, r5, r6, pc}
	...

08021b78 <__smakebuf_r>:
 8021b78:	898b      	ldrh	r3, [r1, #12]
 8021b7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021b7c:	079d      	lsls	r5, r3, #30
 8021b7e:	4606      	mov	r6, r0
 8021b80:	460c      	mov	r4, r1
 8021b82:	d507      	bpl.n	8021b94 <__smakebuf_r+0x1c>
 8021b84:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021b88:	6023      	str	r3, [r4, #0]
 8021b8a:	6123      	str	r3, [r4, #16]
 8021b8c:	2301      	movs	r3, #1
 8021b8e:	6163      	str	r3, [r4, #20]
 8021b90:	b002      	add	sp, #8
 8021b92:	bd70      	pop	{r4, r5, r6, pc}
 8021b94:	ab01      	add	r3, sp, #4
 8021b96:	466a      	mov	r2, sp
 8021b98:	f7ff ffc8 	bl	8021b2c <__swhatbuf_r>
 8021b9c:	9900      	ldr	r1, [sp, #0]
 8021b9e:	4605      	mov	r5, r0
 8021ba0:	4630      	mov	r0, r6
 8021ba2:	f7ff f947 	bl	8020e34 <_malloc_r>
 8021ba6:	b948      	cbnz	r0, 8021bbc <__smakebuf_r+0x44>
 8021ba8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021bac:	059a      	lsls	r2, r3, #22
 8021bae:	d4ef      	bmi.n	8021b90 <__smakebuf_r+0x18>
 8021bb0:	f023 0303 	bic.w	r3, r3, #3
 8021bb4:	f043 0302 	orr.w	r3, r3, #2
 8021bb8:	81a3      	strh	r3, [r4, #12]
 8021bba:	e7e3      	b.n	8021b84 <__smakebuf_r+0xc>
 8021bbc:	4b0d      	ldr	r3, [pc, #52]	; (8021bf4 <__smakebuf_r+0x7c>)
 8021bbe:	62b3      	str	r3, [r6, #40]	; 0x28
 8021bc0:	89a3      	ldrh	r3, [r4, #12]
 8021bc2:	6020      	str	r0, [r4, #0]
 8021bc4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021bc8:	81a3      	strh	r3, [r4, #12]
 8021bca:	9b00      	ldr	r3, [sp, #0]
 8021bcc:	6163      	str	r3, [r4, #20]
 8021bce:	9b01      	ldr	r3, [sp, #4]
 8021bd0:	6120      	str	r0, [r4, #16]
 8021bd2:	b15b      	cbz	r3, 8021bec <__smakebuf_r+0x74>
 8021bd4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021bd8:	4630      	mov	r0, r6
 8021bda:	f000 f83d 	bl	8021c58 <_isatty_r>
 8021bde:	b128      	cbz	r0, 8021bec <__smakebuf_r+0x74>
 8021be0:	89a3      	ldrh	r3, [r4, #12]
 8021be2:	f023 0303 	bic.w	r3, r3, #3
 8021be6:	f043 0301 	orr.w	r3, r3, #1
 8021bea:	81a3      	strh	r3, [r4, #12]
 8021bec:	89a0      	ldrh	r0, [r4, #12]
 8021bee:	4305      	orrs	r5, r0
 8021bf0:	81a5      	strh	r5, [r4, #12]
 8021bf2:	e7cd      	b.n	8021b90 <__smakebuf_r+0x18>
 8021bf4:	08020af9 	.word	0x08020af9

08021bf8 <__malloc_lock>:
 8021bf8:	4801      	ldr	r0, [pc, #4]	; (8021c00 <__malloc_lock+0x8>)
 8021bfa:	f7ff b886 	b.w	8020d0a <__retarget_lock_acquire_recursive>
 8021bfe:	bf00      	nop
 8021c00:	200158f9 	.word	0x200158f9

08021c04 <__malloc_unlock>:
 8021c04:	4801      	ldr	r0, [pc, #4]	; (8021c0c <__malloc_unlock+0x8>)
 8021c06:	f7ff b882 	b.w	8020d0e <__retarget_lock_release_recursive>
 8021c0a:	bf00      	nop
 8021c0c:	200158f9 	.word	0x200158f9

08021c10 <_read_r>:
 8021c10:	b538      	push	{r3, r4, r5, lr}
 8021c12:	4d07      	ldr	r5, [pc, #28]	; (8021c30 <_read_r+0x20>)
 8021c14:	4604      	mov	r4, r0
 8021c16:	4608      	mov	r0, r1
 8021c18:	4611      	mov	r1, r2
 8021c1a:	2200      	movs	r2, #0
 8021c1c:	602a      	str	r2, [r5, #0]
 8021c1e:	461a      	mov	r2, r3
 8021c20:	f7e0 fbaa 	bl	8002378 <_read>
 8021c24:	1c43      	adds	r3, r0, #1
 8021c26:	d102      	bne.n	8021c2e <_read_r+0x1e>
 8021c28:	682b      	ldr	r3, [r5, #0]
 8021c2a:	b103      	cbz	r3, 8021c2e <_read_r+0x1e>
 8021c2c:	6023      	str	r3, [r4, #0]
 8021c2e:	bd38      	pop	{r3, r4, r5, pc}
 8021c30:	20015a0c 	.word	0x20015a0c

08021c34 <_fstat_r>:
 8021c34:	b538      	push	{r3, r4, r5, lr}
 8021c36:	4d07      	ldr	r5, [pc, #28]	; (8021c54 <_fstat_r+0x20>)
 8021c38:	2300      	movs	r3, #0
 8021c3a:	4604      	mov	r4, r0
 8021c3c:	4608      	mov	r0, r1
 8021c3e:	4611      	mov	r1, r2
 8021c40:	602b      	str	r3, [r5, #0]
 8021c42:	f7e0 fbb8 	bl	80023b6 <_fstat>
 8021c46:	1c43      	adds	r3, r0, #1
 8021c48:	d102      	bne.n	8021c50 <_fstat_r+0x1c>
 8021c4a:	682b      	ldr	r3, [r5, #0]
 8021c4c:	b103      	cbz	r3, 8021c50 <_fstat_r+0x1c>
 8021c4e:	6023      	str	r3, [r4, #0]
 8021c50:	bd38      	pop	{r3, r4, r5, pc}
 8021c52:	bf00      	nop
 8021c54:	20015a0c 	.word	0x20015a0c

08021c58 <_isatty_r>:
 8021c58:	b538      	push	{r3, r4, r5, lr}
 8021c5a:	4d06      	ldr	r5, [pc, #24]	; (8021c74 <_isatty_r+0x1c>)
 8021c5c:	2300      	movs	r3, #0
 8021c5e:	4604      	mov	r4, r0
 8021c60:	4608      	mov	r0, r1
 8021c62:	602b      	str	r3, [r5, #0]
 8021c64:	f7e0 fbac 	bl	80023c0 <_isatty>
 8021c68:	1c43      	adds	r3, r0, #1
 8021c6a:	d102      	bne.n	8021c72 <_isatty_r+0x1a>
 8021c6c:	682b      	ldr	r3, [r5, #0]
 8021c6e:	b103      	cbz	r3, 8021c72 <_isatty_r+0x1a>
 8021c70:	6023      	str	r3, [r4, #0]
 8021c72:	bd38      	pop	{r3, r4, r5, pc}
 8021c74:	20015a0c 	.word	0x20015a0c

08021c78 <_init>:
 8021c78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021c7a:	bf00      	nop
 8021c7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021c7e:	bc08      	pop	{r3}
 8021c80:	469e      	mov	lr, r3
 8021c82:	4770      	bx	lr

08021c84 <_fini>:
 8021c84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021c86:	bf00      	nop
 8021c88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021c8a:	bc08      	pop	{r3}
 8021c8c:	469e      	mov	lr, r3
 8021c8e:	4770      	bx	lr
