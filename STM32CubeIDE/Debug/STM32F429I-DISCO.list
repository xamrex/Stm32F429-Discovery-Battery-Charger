
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021da0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002d2c  08021f50  08021f50  00031f50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000162e  08024c7c  08024c7c  00034c7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000094  080262ac  080262ac  000362ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000224  08026340  08026340  00036340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0009d2a8  08026564  08026564  00036564  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080c380c  080c380c  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080c380c  080c380c  000d380c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080c3814  080c3814  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080c3814  080c3814  000d3814  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080c3828  080c3828  000d3828  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080c3830  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00015940  2000016c  080c399c  000e016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20015aac  080c399c  000e5aac  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .debug_line   000521d6  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ef8f8  00000000  00000000  00132372  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 000150fe  00000000  00000000  00221c6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000030d0  00000000  00000000  00236d68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011aff5  00000000  00000000  00239e38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00007080  00000000  00000000  00354e30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00035eb6  00000000  00000000  0035beb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030c36  00000000  00000000  00391d66  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  003c299c  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008eb8  00000000  00000000  003c2a6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021f38 	.word	0x08021f38

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021f38 	.word	0x08021f38

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fd8b 	bl	80060d8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 fcdd 	bl	8020f80 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f001 f933 	bl	8001830 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080c3830 	.word	0x080c3830
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20015aac 	.word	0x20015aac

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f020 facf 	bl	8020b98 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	200157ff 	.word	0x200157ff

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 fb4c 	bl	8001e50 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b fbd3 	bl	800bf74 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a be30 	b.w	800b45c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f020 f9c9 	bl	8020b98 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	200157f8 	.word	0x200157f8
 800085c:	200157f4 	.word	0x200157f4
 8000860:	200157f6 	.word	0x200157f6

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f020 fa43 	bl	8020d00 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021fa8 	.word	0x08021fa8
 8000898:	08021fe0 	.word	0x08021fe0
 800089c:	0802202e 	.word	0x0802202e
 80008a0:	200157fe 	.word	0x200157fe

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f020 fa1f 	bl	8020d00 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	200157f4 	.word	0x200157f4
 80008d0:	200157f6 	.word	0x200157f6
 80008d4:	08022073 	.word	0x08022073
 80008d8:	080220d6 	.word	0x080220d6
 80008dc:	0802202e 	.word	0x0802202e
 80008e0:	200157fa 	.word	0x200157fa
 80008e4:	200157fc 	.word	0x200157fc

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f008 f8f2 	bl	8008ad8 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f020 f9fd 	bl	8020d00 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f008 f9aa 	bl	8008c64 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	080221f4 	.word	0x080221f4
 8000928:	0802223d 	.word	0x0802223d
 800092c:	0802226c 	.word	0x0802226c
 8000930:	20000198 	.word	0x20000198
 8000934:	080222e6 	.word	0x080222e6

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f008 b920 	b.w	8008b84 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f008 b954 	b.w	8008bf8 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f008 b913 	b.w	8008b84 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f008 b9bd 	b.w	8008cf0 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f008 f9f2 	bl	8008d74 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f008 f9eb 	bl	8008d74 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20003a54 	.word	0x20003a54
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	080224b0 	.word	0x080224b0
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f020 f8ad 	bl	8020b98 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	20015800 	.word	0x20015800

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b fbd7 	bl	800c220 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	080224b0 	.word	0x080224b0

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f020 f927 	bl	8020d00 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08022328 	.word	0x08022328
 8000ac0:	08022343 	.word	0x08022343
 8000ac4:	0802238d 	.word	0x0802238d

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f020 f909 	bl	8020d00 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08022328 	.word	0x08022328
 8000afc:	08022405 	.word	0x08022405
 8000b00:	0802238d 	.word	0x0802238d

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f020 f896 	bl	8020d00 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08022450 	.word	0x08022450
 8000c48:	0802246a 	.word	0x0802246a
 8000c4c:	0802238d 	.word	0x0802238d
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 703c 	movw	r0, #10044	; 0x273c
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bf80 	b.w	8002c8c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 ff97 	bl	800acc6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08022568 	.word	0x08022568

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fef4 	bl	8020b98 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 ff83 	bl	800acc6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08022534 	.word	0x08022534

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 7144 	movw	r1, #10052	; 0x2744
 8000dd6:	f01f fedf 	bl	8020b98 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 ff6d 	bl	800acc6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08022500 	.word	0x08022500

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f feca 	bl	8020b98 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 501d 	add.w	r0, r0, #10048	; 0x2740
 8000e14:	3030      	adds	r0, #48	; 0x30
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	0802259c 	.word	0x0802259c

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f642 110c 	movw	r1, #10508	; 0x290c
 8000e52:	f01f fea1 	bl	8020b98 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 fbfc 	bl	800265c <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 fbfd 	bl	8002664 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fd8f 	bl	8014998 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f004 f98a 	bl	800519c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 fced 	bl	8014868 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fe7f 	bl	8020b9c <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 ff03 	bl	800acc8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fefe 	bl	800acc8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fef9 	bl	800acc8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2770 	str.w	r2, [r3, #1904]	; 0x770
 8000ee0:	f503 60f6 	add.w	r0, r3, #1968	; 0x7b0
 8000ee4:	f004 f9d6 	bl	8005294 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f004 f9c6 	bl	8005280 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fec9 	bl	8002c8c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f ff1e 	bl	8020d3c <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fe57 	bl	8020bb4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	20015864 	.word	0x20015864
 8000f18:	200038d0 	.word	0x200038d0
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	20002914 	.word	0x20002914
 8000f2c:	0802259c 	.word	0x0802259c
 8000f30:	08022500 	.word	0x08022500
 8000f34:	08022534 	.word	0x08022534
 8000f38:	08022568 	.word	0x08022568
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003854 	.word	0x20003854

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003854 	.word	0x20003854

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fe22 	bl	8017bac <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20002ab0 	.word	0x20002ab0
 8000fe4:	20002ab4 	.word	0x20002ab4
 8000fe8:	08021f98 	.word	0x08021f98
 8000fec:	200038d4 	.word	0x200038d4
 8000ff0:	20003854 	.word	0x20003854
 8000ff4:	20015800 	.word	0x20015800
 8000ff8:	200157f4 	.word	0x200157f4
 8000ffc:	200157fa 	.word	0x200157fa
 8001000:	01000001 	.word	0x01000001
 8001004:	200157f6 	.word	0x200157f6
 8001008:	200157fc 	.word	0x200157fc
 800100c:	200157f8 	.word	0x200157f8
 8001010:	08022124 	.word	0x08022124

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002ab4 	.word	0x20002ab4

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003950 	.word	0x20003950
 8001064:	2000394e 	.word	0x2000394e

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f00a fa3d 	bl	800b506 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f010 fa66 	bl	8011560 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f00a ba0c 	b.w	800b4d4 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f00a ba10 	b.w	800b4ec <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	2000394c 	.word	0x2000394c

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f00a b9ca 	b.w	800b468 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f00a bb23 	b.w	800b71e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 fac2 	bl	80076b4 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a ff17 	bl	800bf74 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 fab0 	bl	80076b4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	20015800 	.word	0x20015800
 800116c:	40016800 	.word	0x40016800
 8001170:	20003950 	.word	0x20003950
 8001174:	2000394e 	.word	0x2000394e

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 ffa4 	bl	80080d6 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003bc4 	.word	0x20003bc4

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.MeasurementsEverySec[i];
 800119c:	4910      	ldr	r1, [pc, #64]	; (80011e0 <CountAvgFrom60sec+0x44>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.MeasurementsEverySec[i];
 80011a2:	f503 7236 	add.w	r2, r3, #728	; 0x2d8
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.MeasurementsEverySec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.MeasurementsEverySec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
		ladowarka.AverageFromLastMin=result/60;
 80011c0:	eddd 6a01 	vldr	s13, [sp, #4]
 80011c4:	eddf 7a07 	vldr	s15, [pc, #28]	; 80011e4 <CountAvgFrom60sec+0x48>
 80011c8:	4b07      	ldr	r3, [pc, #28]	; (80011e8 <CountAvgFrom60sec+0x4c>)
 80011ca:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80011ce:	ed83 7a00 	vstr	s14, [r3]
	return result/60;
 80011d2:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011d6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011da:	b002      	add	sp, #8
 80011dc:	4770      	bx	lr
 80011de:	bf00      	nop
 80011e0:	20003c5c 	.word	0x20003c5c
 80011e4:	42700000 	.word	0x42700000
 80011e8:	200048c4 	.word	0x200048c4

080011ec <SetCurrent>:
				napiecie=a*current+b;
 80011ec:	f06f 0301 	mvn.w	r3, #1
 80011f0:	4358      	muls	r0, r3
 80011f2:	f600 703c 	addw	r0, r0, #3900	; 0xf3c
 80011f6:	f640 73ff 	movw	r3, #4095	; 0xfff
 80011fa:	4298      	cmp	r0, r3
 80011fc:	bfa8      	it	ge
 80011fe:	4618      	movge	r0, r3
}
 8001200:	f640 431c 	movw	r3, #3100	; 0xc1c
 8001204:	4298      	cmp	r0, r3
 8001206:	bfb8      	it	lt
 8001208:	4618      	movlt	r0, r3
 800120a:	4770      	bx	lr

0800120c <SetProperVoltage>:
int  SetProperVoltage(int current){
 800120c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001210:	ed2d 8b02 	vpush	{d8}
	while ( (ladowarka.ChargingCurrent > ladowarka.LoadingCurrent*(1.00f + inrange)) || (ladowarka.ChargingCurrent < ladowarka.LoadingCurrent*(1.00f - inrange)))
 8001214:	4c77      	ldr	r4, [pc, #476]	; (80013f4 <SetProperVoltage+0x1e8>)
int  SetProperVoltage(int current){
 8001216:	ee08 0a90 	vmov	s17, r0
 800121a:	b083      	sub	sp, #12
	int counter = 0;
 800121c:	2600      	movs	r6, #0
	while ( (ladowarka.ChargingCurrent > ladowarka.LoadingCurrent*(1.00f + inrange)) || (ladowarka.ChargingCurrent < ladowarka.LoadingCurrent*(1.00f - inrange)))
 800121e:	f504 6546 	add.w	r5, r4, #3168	; 0xc60
 8001222:	ed95 7a00 	vldr	s14, [r5]
 8001226:	edd4 7a03 	vldr	s15, [r4, #12]
 800122a:	ed9f 8a73 	vldr	s16, [pc, #460]	; 80013f8 <SetProperVoltage+0x1ec>
 800122e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001232:	ee67 7a88 	vmul.f32	s15, s15, s16
 8001236:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800123a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800123e:	dc14      	bgt.n	800126a <SetProperVoltage+0x5e>
 8001240:	ed95 7a00 	vldr	s14, [r5]
 8001244:	edd4 7a03 	vldr	s15, [r4, #12]
 8001248:	eddf 6a6c 	vldr	s13, [pc, #432]	; 80013fc <SetProperVoltage+0x1f0>
 800124c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001250:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001254:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001258:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800125c:	d405      	bmi.n	800126a <SetProperVoltage+0x5e>
}
 800125e:	4630      	mov	r0, r6
 8001260:	b003      	add	sp, #12
 8001262:	ecbd 8b02 	vpop	{d8}
 8001266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			HAL_ADC_Start(&hadc3);
 800126a:	4f65      	ldr	r7, [pc, #404]	; (8001400 <SetProperVoltage+0x1f4>)
			HAL_ADC_Start(&hadc2);
 800126c:	f8df b1ac 	ldr.w	fp, [pc, #428]	; 800141c <SetProperVoltage+0x210>
			HAL_ADC_Start(&hadc1);
 8001270:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 8001420 <SetProperVoltage+0x214>
		counter++;
 8001274:	3601      	adds	r6, #1
 8001276:	230a      	movs	r3, #10
			HAL_ADC_Start(&hadc3);
 8001278:	4638      	mov	r0, r7
 800127a:	9301      	str	r3, [sp, #4]
 800127c:	f005 f820 	bl	80062c0 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc3, HAL_MAX_DELAY);
 8001280:	f04f 31ff 	mov.w	r1, #4294967295
 8001284:	4638      	mov	r0, r7
 8001286:	f005 f88f 	bl	80063a8 <HAL_ADC_PollForConversion>
			value += HAL_ADC_GetValue(&hadc3);
 800128a:	f8df 9198 	ldr.w	r9, [pc, #408]	; 8001424 <SetProperVoltage+0x218>
			value2 += HAL_ADC_GetValue(&hadc2);
 800128e:	f8df 8198 	ldr.w	r8, [pc, #408]	; 8001428 <SetProperVoltage+0x21c>
			value += HAL_ADC_GetValue(&hadc3);
 8001292:	4638      	mov	r0, r7
 8001294:	f005 f8d7 	bl	8006446 <HAL_ADC_GetValue>
 8001298:	f8d9 1000 	ldr.w	r1, [r9]
 800129c:	4408      	add	r0, r1
 800129e:	f8c9 0000 	str.w	r0, [r9]
			HAL_ADC_Start(&hadc2);
 80012a2:	4658      	mov	r0, fp
 80012a4:	f005 f80c 	bl	80062c0 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc2, HAL_MAX_DELAY);
 80012a8:	f04f 31ff 	mov.w	r1, #4294967295
 80012ac:	4658      	mov	r0, fp
 80012ae:	f005 f87b 	bl	80063a8 <HAL_ADC_PollForConversion>
			value2 += HAL_ADC_GetValue(&hadc2);
 80012b2:	4658      	mov	r0, fp
 80012b4:	f005 f8c7 	bl	8006446 <HAL_ADC_GetValue>
 80012b8:	f8d8 1000 	ldr.w	r1, [r8]
 80012bc:	4408      	add	r0, r1
 80012be:	f8c8 0000 	str.w	r0, [r8]
			HAL_ADC_Start(&hadc1);
 80012c2:	4650      	mov	r0, sl
 80012c4:	f004 fffc 	bl	80062c0 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80012c8:	f04f 31ff 	mov.w	r1, #4294967295
 80012cc:	4650      	mov	r0, sl
 80012ce:	f005 f86b 	bl	80063a8 <HAL_ADC_PollForConversion>
			value3 += HAL_ADC_GetValue(&hadc1);
 80012d2:	4650      	mov	r0, sl
 80012d4:	f005 f8b7 	bl	8006446 <HAL_ADC_GetValue>
 80012d8:	4b4a      	ldr	r3, [pc, #296]	; (8001404 <SetProperVoltage+0x1f8>)
 80012da:	6819      	ldr	r1, [r3, #0]
 80012dc:	4408      	add	r0, r1
 80012de:	6018      	str	r0, [r3, #0]
		for (int i=0;i<10;i++){
 80012e0:	9b01      	ldr	r3, [sp, #4]
 80012e2:	3b01      	subs	r3, #1
 80012e4:	d1c8      	bne.n	8001278 <SetProperVoltage+0x6c>
		ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 80012e6:	4b47      	ldr	r3, [pc, #284]	; (8001404 <SetProperVoltage+0x1f8>)
 80012e8:	4947      	ldr	r1, [pc, #284]	; (8001408 <SetProperVoltage+0x1fc>)
 80012ea:	681a      	ldr	r2, [r3, #0]
		ladowarka.VccVoltage=(Vref*4095.0f)/ladowarka.VccVoltage;
 80012ec:	eddf 6a47 	vldr	s13, [pc, #284]	; 800140c <SetProperVoltage+0x200>
		ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 80012f0:	200a      	movs	r0, #10
 80012f2:	fbb2 f2f0 	udiv	r2, r2, r0
 80012f6:	ee07 2a90 	vmov	s15, r2
 80012fa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012fe:	ed81 7a00 	vstr	s14, [r1]
		ladowarka.VccVoltage=(Vref*4095.0f)/ladowarka.VccVoltage;
 8001302:	ed91 7a00 	vldr	s14, [r1]
 8001306:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800130a:	edc1 7a00 	vstr	s15, [r1]
		ladowarka.BatteryVoltage=(value/10) * ladowarka.VccVoltage / 4095.0f; //Batt voltage
 800130e:	f8d9 2000 	ldr.w	r2, [r9]
 8001312:	fbb2 f3f0 	udiv	r3, r2, r0
 8001316:	ee07 3a90 	vmov	s15, r3
 800131a:	ed91 7a00 	vldr	s14, [r1]
 800131e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001322:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001326:	ed9f 7a3a 	vldr	s14, [pc, #232]	; 8001410 <SetProperVoltage+0x204>
 800132a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800132e:	edc4 6a00 	vstr	s13, [r4]
		ladowarka.ChargingCurrent=(value2/10) * ladowarka.VccVoltage / 4095.0f; // Batt+resistor voltage
 8001332:	f8d8 3000 	ldr.w	r3, [r8]
 8001336:	fbb3 f3f0 	udiv	r3, r3, r0
 800133a:	ee07 3a90 	vmov	s15, r3
 800133e:	edd1 6a00 	vldr	s13, [r1]
 8001342:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001346:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800134a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800134e:	edc5 6a00 	vstr	s13, [r5]
		ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; // Resistor is 1Ohm, so current equals Voltage, its multipled by 1000 to have result in [mA]
 8001352:	ed95 7a00 	vldr	s14, [r5]
 8001356:	edd4 7a00 	vldr	s15, [r4]
		if (ladowarka.ChargingCurrent < ladowarka.LoadingCurrent * (1.00f - inrange) ){ ladowarka.adjustment--;} //lower voltage = highest current
 800135a:	eddf 6a28 	vldr	s13, [pc, #160]	; 80013fc <SetProperVoltage+0x1f0>
		ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; // Resistor is 1Ohm, so current equals Voltage, its multipled by 1000 to have result in [mA]
 800135e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001362:	eddf 7a2c 	vldr	s15, [pc, #176]	; 8001414 <SetProperVoltage+0x208>
 8001366:	ee27 7a27 	vmul.f32	s14, s14, s15
 800136a:	ed85 7a00 	vstr	s14, [r5]
		if (ladowarka.ChargingCurrent < ladowarka.LoadingCurrent * (1.00f - inrange) ){ ladowarka.adjustment--;} //lower voltage = highest current
 800136e:	edd5 7a00 	vldr	s15, [r5]
 8001372:	ed94 7a03 	vldr	s14, [r4, #12]
 8001376:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800137a:	ee27 7a26 	vmul.f32	s14, s14, s13
 800137e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001386:	d521      	bpl.n	80013cc <SetProperVoltage+0x1c0>
 8001388:	f8d4 3c74 	ldr.w	r3, [r4, #3188]	; 0xc74
 800138c:	3b01      	subs	r3, #1
		else if (ladowarka.ChargingCurrent > ladowarka.LoadingCurrent * (1.00f + inrange) ){ ladowarka.adjustment++;}
 800138e:	f8c4 3c74 	str.w	r3, [r4, #3188]	; 0xc74
		int setCrnt=SetCurrent(current)+ladowarka.adjustment;
 8001392:	ee18 0a90 	vmov	r0, s17
 8001396:	f7ff ff29 	bl	80011ec <SetCurrent>
 800139a:	f8d4 3c74 	ldr.w	r3, [r4, #3188]	; 0xc74
 800139e:	eb00 0a03 	add.w	sl, r0, r3
		HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, setCrnt);
 80013a2:	4653      	mov	r3, sl
 80013a4:	481c      	ldr	r0, [pc, #112]	; (8001418 <SetProperVoltage+0x20c>)
 80013a6:	2200      	movs	r2, #0
 80013a8:	2110      	movs	r1, #16
 80013aa:	f005 f9ae 	bl	800670a <HAL_DAC_SetValue>
		if (setCrnt>4093 || setCrnt<2) return 0;
 80013ae:	f1aa 0a02 	sub.w	sl, sl, #2
 80013b2:	f640 73fb 	movw	r3, #4091	; 0xffb
 80013b6:	459a      	cmp	sl, r3
 80013b8:	f04f 0300 	mov.w	r3, #0
 80013bc:	d817      	bhi.n	80013ee <SetProperVoltage+0x1e2>
		value=0;value2=0;value3=0;
 80013be:	4a11      	ldr	r2, [pc, #68]	; (8001404 <SetProperVoltage+0x1f8>)
 80013c0:	f8c9 3000 	str.w	r3, [r9]
 80013c4:	f8c8 3000 	str.w	r3, [r8]
 80013c8:	6013      	str	r3, [r2, #0]
 80013ca:	e72a      	b.n	8001222 <SetProperVoltage+0x16>
		else if (ladowarka.ChargingCurrent > ladowarka.LoadingCurrent * (1.00f + inrange) ){ ladowarka.adjustment++;}
 80013cc:	ed95 7a00 	vldr	s14, [r5]
 80013d0:	edd4 7a03 	vldr	s15, [r4, #12]
 80013d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80013d8:	ee67 7a88 	vmul.f32	s15, s15, s16
 80013dc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80013e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013e4:	ddd5      	ble.n	8001392 <SetProperVoltage+0x186>
 80013e6:	f8d4 3c74 	ldr.w	r3, [r4, #3188]	; 0xc74
 80013ea:	3301      	adds	r3, #1
 80013ec:	e7cf      	b.n	800138e <SetProperVoltage+0x182>
		if (setCrnt>4093 || setCrnt<2) return 0;
 80013ee:	461e      	mov	r6, r3
 80013f0:	e735      	b.n	800125e <SetProperVoltage+0x52>
 80013f2:	bf00      	nop
 80013f4:	20003c5c 	.word	0x20003c5c
 80013f8:	3f83d70a 	.word	0x3f83d70a
 80013fc:	3f7851ec 	.word	0x3f7851ec
 8001400:	200039f0 	.word	0x200039f0
 8001404:	200048f0 	.word	0x200048f0
 8001408:	200048c8 	.word	0x200048c8
 800140c:	459ad79a 	.word	0x459ad79a
 8001410:	457ff000 	.word	0x457ff000
 8001414:	447a0000 	.word	0x447a0000
 8001418:	20003a40 	.word	0x20003a40
 800141c:	200039a8 	.word	0x200039a8
 8001420:	20003960 	.word	0x20003960
 8001424:	200048e0 	.word	0x200048e0
 8001428:	200048e8 	.word	0x200048e8

0800142c <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 800142c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.
	  static volatile uint32_t value3=0; //actual value of adc vrefint

	  static int sec0to59=0;

		if(ladowarka.Passed100ms){ //interruption form timer7
 8001430:	4cbe      	ldr	r4, [pc, #760]	; (800172c <ZadanieDwa+0x300>)
			ladowarka.Passed100ms=0; //clear flag

					//Masure batt voltage
					HAL_ADC_Start(&hadc3);
 8001432:	4dbf      	ldr	r5, [pc, #764]	; (8001730 <ZadanieDwa+0x304>)
		if(ladowarka.Passed100ms){ //interruption form timer7
 8001434:	f8d4 3c50 	ldr.w	r3, [r4, #3152]	; 0xc50
 8001438:	2b00      	cmp	r3, #0
 800143a:	f000 80e2 	beq.w	8001602 <ZadanieDwa+0x1d6>
			ladowarka.Passed100ms=0; //clear flag
 800143e:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc3);
 8001440:	4628      	mov	r0, r5
			ladowarka.Passed100ms=0; //clear flag
 8001442:	f8c4 3c50 	str.w	r3, [r4, #3152]	; 0xc50
					value += HAL_ADC_GetValue(&hadc3);
 8001446:	f8df 8328 	ldr.w	r8, [pc, #808]	; 8001770 <ZadanieDwa+0x344>

					//Measure batt and resistor voltage
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
 800144a:	4fba      	ldr	r7, [pc, #744]	; (8001734 <ZadanieDwa+0x308>)

					//Measure Vref voltage
					HAL_ADC_Start(&hadc1);
					value3 += HAL_ADC_GetValue(&hadc1);
 800144c:	4eba      	ldr	r6, [pc, #744]	; (8001738 <ZadanieDwa+0x30c>)
					HAL_ADC_Start(&hadc3);
 800144e:	f004 ff37 	bl	80062c0 <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc3);
 8001452:	4628      	mov	r0, r5
 8001454:	f004 fff7 	bl	8006446 <HAL_ADC_GetValue>
 8001458:	f8d8 3000 	ldr.w	r3, [r8]
 800145c:	4418      	add	r0, r3
 800145e:	f8c8 0000 	str.w	r0, [r8]
					HAL_ADC_Start(&hadc2);
 8001462:	48b6      	ldr	r0, [pc, #728]	; (800173c <ZadanieDwa+0x310>)
 8001464:	f004 ff2c 	bl	80062c0 <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001468:	48b4      	ldr	r0, [pc, #720]	; (800173c <ZadanieDwa+0x310>)
 800146a:	f004 ffec 	bl	8006446 <HAL_ADC_GetValue>
 800146e:	683b      	ldr	r3, [r7, #0]
 8001470:	4418      	add	r0, r3
 8001472:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc1);
 8001474:	48b2      	ldr	r0, [pc, #712]	; (8001740 <ZadanieDwa+0x314>)
 8001476:	f004 ff23 	bl	80062c0 <HAL_ADC_Start>
					value3 += HAL_ADC_GetValue(&hadc1);
 800147a:	48b1      	ldr	r0, [pc, #708]	; (8001740 <ZadanieDwa+0x314>)
 800147c:	f004 ffe3 	bl	8006446 <HAL_ADC_GetValue>
 8001480:	6833      	ldr	r3, [r6, #0]
 8001482:	4418      	add	r0, r3
 8001484:	6030      	str	r0, [r6, #0]
					liczbaPomiarow++;
 8001486:	48af      	ldr	r0, [pc, #700]	; (8001744 <ZadanieDwa+0x318>)
 8001488:	6803      	ldr	r3, [r0, #0]
 800148a:	f04f 0c0a 	mov.w	ip, #10
 800148e:	3301      	adds	r3, #1
 8001490:	6003      	str	r3, [r0, #0]
 8001492:	fb93 f2fc 	sdiv	r2, r3, ip
 8001496:	fb0c 3312 	mls	r3, ip, r2, r3

					/****** after 1sec ->10ticks every 100ms********/

					if(liczbaPomiarow%10==0){ //After 1 sec
 800149a:	2b00      	cmp	r3, #0
 800149c:	f040 80b1 	bne.w	8001602 <ZadanieDwa+0x1d6>

						ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 80014a0:	6833      	ldr	r3, [r6, #0]
 80014a2:	fbb3 f3fc 	udiv	r3, r3, ip
 80014a6:	ee07 3a90 	vmov	s15, r3
 80014aa:	4ba7      	ldr	r3, [pc, #668]	; (8001748 <ZadanieDwa+0x31c>)
						ladowarka.VccVoltage=(Vref*4095.0f)/ladowarka.VccVoltage;
 80014ac:	eddf 6aa7 	vldr	s13, [pc, #668]	; 800174c <ZadanieDwa+0x320>
						ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 80014b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80014b4:	edc3 7a00 	vstr	s15, [r3]
						ladowarka.VccVoltage=(Vref*4095.0f)/ladowarka.VccVoltage;
 80014b8:	ed93 7a00 	vldr	s14, [r3]
 80014bc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80014c0:	edc3 7a00 	vstr	s15, [r3]

						ladowarka.BatteryVoltage=(value/10) * ladowarka.VccVoltage / 4095.0f; //Batt voltage
 80014c4:	f8d8 1000 	ldr.w	r1, [r8]
 80014c8:	fbb1 f2fc 	udiv	r2, r1, ip
 80014cc:	ee07 2a90 	vmov	s15, r2
 80014d0:	ed93 7a00 	vldr	s14, [r3]
 80014d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80014d8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014dc:	ed9f 7a9c 	vldr	s14, [pc, #624]	; 8001750 <ZadanieDwa+0x324>
 80014e0:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80014e4:	edc4 6a00 	vstr	s13, [r4]
						ladowarka.ChargingCurrent=(value2/10) * ladowarka.VccVoltage / 4095.0f; // Batt+resistor voltage
 80014e8:	683a      	ldr	r2, [r7, #0]
 80014ea:	fbb2 f2fc 	udiv	r2, r2, ip
 80014ee:	ee07 2a90 	vmov	s15, r2
 80014f2:	edd3 6a00 	vldr	s13, [r3]
 80014f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80014fa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80014fe:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001502:	ed43 6a03 	vstr	s13, [r3, #-12]


						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; // Resistor is 1Ohm, so current equals Voltage, its multipled by 1000 to have result in [mA]
 8001506:	ed53 7a03 	vldr	s15, [r3, #-12]
 800150a:	ed94 7a00 	vldr	s14, [r4]
 800150e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001512:	ed9f 7a90 	vldr	s14, [pc, #576]	; 8001754 <ZadanieDwa+0x328>
 8001516:	ee67 7a87 	vmul.f32	s15, s15, s14
 800151a:	ed43 7a03 	vstr	s15, [r3, #-12]
						if (ladowarka.ChargingCurrent <=0 ) ladowarka.ChargingCurrent=0;
 800151e:	ed53 7a03 	vldr	s15, [r3, #-12]
 8001522:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800152a:	bf9c      	itt	ls
 800152c:	2200      	movls	r2, #0
 800152e:	f843 2c0c 	strls.w	r2, [r3, #-12]

						if (ladowarka.BatteryVoltage<MinBattVoltage){ladowarka.NoBattFlag=1;} else {ladowarka.NoBattFlag=0;}
 8001532:	ed94 7a00 	vldr	s14, [r4]
 8001536:	eddf 7a88 	vldr	s15, [pc, #544]	; 8001758 <ZadanieDwa+0x32c>
 800153a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800153e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001542:	bf4c      	ite	mi
 8001544:	2301      	movmi	r3, #1
 8001546:	2300      	movpl	r3, #0
 8001548:	f8c4 3c70 	str.w	r3, [r4, #3184]	; 0xc70

						// if charging started
						if (ladowarka.ChargeStarted ){
 800154c:	6963      	ldr	r3, [r4, #20]
 800154e:	2b00      	cmp	r3, #0
 8001550:	d051      	beq.n	80015f6 <ZadanieDwa+0x1ca>
							if (ladowarka.ChargingTimeInSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; ladowarka.AverageFromLastMin = ladowarka.BatteryVoltage; ladowarka.PlotPointOnMinutesGraph=1; }//for measurement 0 add results to array immediatly, and plot it on both graphs
 8001552:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 8001556:	2b00      	cmp	r3, #0
 8001558:	dc07      	bgt.n	800156a <ZadanieDwa+0x13e>
 800155a:	6823      	ldr	r3, [r4, #0]
 800155c:	61e3      	str	r3, [r4, #28]
 800155e:	4b7f      	ldr	r3, [pc, #508]	; (800175c <ZadanieDwa+0x330>)
 8001560:	6822      	ldr	r2, [r4, #0]
 8001562:	601a      	str	r2, [r3, #0]
 8001564:	2301      	movs	r3, #1
 8001566:	f8c4 3c58 	str.w	r3, [r4, #3160]	; 0xc58


							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //update  max battery voltage value.
 800156a:	ed94 7a00 	vldr	s14, [r4]
 800156e:	edd4 7a01 	vldr	s15, [r4, #4]
 8001572:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800157a:	bfc4      	itt	gt
 800157c:	6823      	ldrgt	r3, [r4, #0]
 800157e:	6063      	strgt	r3, [r4, #4]
							if (ladowarka.BatteryVoltage<ladowarka.MinBatteryVotage) ladowarka.MinBatteryVotage=ladowarka.BatteryVoltage; //update Min battery voltage value.
 8001580:	ed94 7a00 	vldr	s14, [r4]
 8001584:	edd4 7a02 	vldr	s15, [r4, #8]
 8001588:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800158c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001590:	bf44      	itt	mi
 8001592:	6823      	ldrmi	r3, [r4, #0]
 8001594:	60a3      	strmi	r3, [r4, #8]

							if(ladowarka.ChargingCompleted==0){
 8001596:	f8d4 3c64 	ldr.w	r3, [r4, #3172]	; 0xc64
 800159a:	b923      	cbnz	r3, 80015a6 <ZadanieDwa+0x17a>
							ladowarka.ChargingTimeInSec++; //if charging is ongoing, update charging time (add 1sec)
 800159c:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 80015a0:	3301      	adds	r3, #1
 80015a2:	f8c4 3c5c 	str.w	r3, [r4, #3164]	; 0xc5c
							}
							ladowarka.PlotPointOnSecGraph=1; //allow to plot  on graph

							/********* every 1 sec add result to array********/
							ladowarka.MeasurementsEverySec[sec0to59++]=ladowarka.BatteryVoltage;
 80015a6:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 8001774 <ZadanieDwa+0x348>
							ladowarka.PlotPointOnSecGraph=1; //allow to plot  on graph
 80015aa:	2301      	movs	r3, #1
 80015ac:	f8c4 3c54 	str.w	r3, [r4, #3156]	; 0xc54
							ladowarka.MeasurementsEverySec[sec0to59++]=ladowarka.BatteryVoltage;
 80015b0:	f8d9 3000 	ldr.w	r3, [r9]
 80015b4:	6821      	ldr	r1, [r4, #0]
 80015b6:	1c5a      	adds	r2, r3, #1
 80015b8:	f503 7336 	add.w	r3, r3, #728	; 0x2d8
 80015bc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
							if (sec0to59>59) {	// if there is 10 elements in array (10 sec passed) average it, and put into NapiecieBaterii array
 80015c0:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.MeasurementsEverySec[sec0to59++]=ladowarka.BatteryVoltage;
 80015c2:	f8c9 2000 	str.w	r2, [r9]
 80015c6:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	// if there is 10 elements in array (10 sec passed) average it, and put into NapiecieBaterii array
 80015c8:	dd15      	ble.n	80015f6 <ZadanieDwa+0x1ca>
								//jesli ladujemy to dodaj wartosc do tablicy
								CountAvgFrom60sec();
 80015ca:	f7ff fde7 	bl	800119c <CountAvgFrom60sec>
								if (ladowarka.ChargingCompleted==0){
 80015ce:	f8d4 3c64 	ldr.w	r3, [r4, #3172]	; 0xc64
 80015d2:	b953      	cbnz	r3, 80015ea <ZadanieDwa+0x1be>
									ladowarka.NapiecieBaterii[ladowarka.ChargingTimeInSec/60]=ladowarka.AverageFromLastMin; // average
 80015d4:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 80015d8:	223c      	movs	r2, #60	; 0x3c
 80015da:	fb93 f3f2 	sdiv	r3, r3, r2
 80015de:	4a5f      	ldr	r2, [pc, #380]	; (800175c <ZadanieDwa+0x330>)
 80015e0:	3306      	adds	r3, #6
 80015e2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80015e6:	6812      	ldr	r2, [r2, #0]
 80015e8:	605a      	str	r2, [r3, #4]
								}

								sec0to59=0;
 80015ea:	2300      	movs	r3, #0
 80015ec:	f8c9 3000 	str.w	r3, [r9]

								ladowarka.PlotPointOnMinutesGraph=1;//allow to plot on graph.
 80015f0:	2301      	movs	r3, #1
 80015f2:	f8c4 3c58 	str.w	r3, [r4, #3160]	; 0xc58
							}

						}


						liczbaPomiarow=0; //after 1 sec set it to 0
 80015f6:	2300      	movs	r3, #0
						value=0; //reset batt voltage measurement
 80015f8:	f8c8 3000 	str.w	r3, [r8]
						liczbaPomiarow=0; //after 1 sec set it to 0
 80015fc:	6003      	str	r3, [r0, #0]
						value2=0; //reset  Batt and resistor voltage
 80015fe:	603b      	str	r3, [r7, #0]
						value3=0; //reset  Vrefin.
 8001600:	6033      	str	r3, [r6, #0]
					}

					}

					/*************** Generate OpAmp voltage when batt voltage is low -> set current to 1/2 value***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.OpAmpVoltageSet==0 && ladowarka.BatteryVoltage<MinBattVltgForFastCharging){
 8001602:	6963      	ldr	r3, [r4, #20]
 8001604:	2b01      	cmp	r3, #1
 8001606:	f040 8085 	bne.w	8001714 <ZadanieDwa+0x2e8>
 800160a:	69a3      	ldr	r3, [r4, #24]
 800160c:	2b00      	cmp	r3, #0
 800160e:	f040 8081 	bne.w	8001714 <ZadanieDwa+0x2e8>
 8001612:	ed94 7a00 	vldr	s14, [r4]
 8001616:	eddf 7a52 	vldr	s15, [pc, #328]	; 8001760 <ZadanieDwa+0x334>
 800161a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800161e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001622:	d577      	bpl.n	8001714 <ZadanieDwa+0x2e8>
						SetProperVoltage(ladowarka.LoadingCurrent/2);
 8001624:	68e0      	ldr	r0, [r4, #12]
 8001626:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800162a:	1040      	asrs	r0, r0, #1
 800162c:	f7ff fdee 	bl	800120c <SetProperVoltage>
						volatile int count=SetProperVoltage(ladowarka.LoadingCurrent);
						ladowarka.OpAmpVoltageSet=1;
					}

					/*********************** Safery mecahnizm over precharging -> Max battery Voltage***********************/
					if (ladowarka.BatteryVoltage>MaxBattVoltage){
 8001630:	ed94 7a00 	vldr	s14, [r4]
 8001634:	eddf 7a4b 	vldr	s15, [pc, #300]	; 8001764 <ZadanieDwa+0x338>
 8001638:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800163c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
						ladowarka.ChargingCompleted=1;
 8001640:	bfc4      	itt	gt
 8001642:	2301      	movgt	r3, #1
 8001644:	f8c4 3c64 	strgt.w	r3, [r4, #3172]	; 0xc64
					}

					/*********************** Safery mecahnizm  over precharging> dV/dT***********************/
					if(ladowarka.ChargingTimeInSec > 20*60){ //if chargin time is longer than 20min
 8001648:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 800164c:	f5b3 6f96 	cmp.w	r3, #1200	; 0x4b0
 8001650:	dd3d      	ble.n	80016ce <ZadanieDwa+0x2a2>
						//check if masurement [20] is lower than 19mins ago -> masurement[1], and if actual measurement-1min -> masurement[19] is lower than 20 mins ago -> measurement[0]
						if ( (ladowarka.NapiecieBaterii[ladowarka.ChargingTimeInSec/60])  < (ladowarka.NapiecieBaterii[(ladowarka.ChargingTimeInSec/60)-19]) ){
 8001652:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 8001656:	263c      	movs	r6, #60	; 0x3c
 8001658:	fb93 f3f6 	sdiv	r3, r3, r6
 800165c:	3306      	adds	r3, #6
 800165e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8001662:	ed93 7a01 	vldr	s14, [r3, #4]
 8001666:	f8d4 2c5c 	ldr.w	r2, [r4, #3164]	; 0xc5c
 800166a:	fb92 f2f6 	sdiv	r2, r2, r6
 800166e:	3a0d      	subs	r2, #13
 8001670:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8001674:	edd2 7a01 	vldr	s15, [r2, #4]
 8001678:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800167c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001680:	d525      	bpl.n	80016ce <ZadanieDwa+0x2a2>
							HAL_GPIO_WritePin(Led_green_GPIO_Port, Led_green_Pin,GPIO_PIN_SET); //to be deleted
 8001682:	2201      	movs	r2, #1
 8001684:	4838      	ldr	r0, [pc, #224]	; (8001768 <ZadanieDwa+0x33c>)
 8001686:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800168a:	f005 fa35 	bl	8006af8 <HAL_GPIO_WritePin>
								if ( ladowarka.NapiecieBaterii[((ladowarka.ChargingTimeInSec/60)-1)]  < (ladowarka.NapiecieBaterii[(ladowarka.ChargingTimeInSec/60)-20]) ){
 800168e:	f8d4 2c5c 	ldr.w	r2, [r4, #3164]	; 0xc5c
 8001692:	fb92 f2f6 	sdiv	r2, r2, r6
 8001696:	3205      	adds	r2, #5
 8001698:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800169c:	ed92 7a01 	vldr	s14, [r2, #4]
 80016a0:	f8d4 3c5c 	ldr.w	r3, [r4, #3164]	; 0xc5c
 80016a4:	fb93 f3f6 	sdiv	r3, r3, r6
 80016a8:	3b0e      	subs	r3, #14
 80016aa:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80016ae:	edd3 7a01 	vldr	s15, [r3, #4]
 80016b2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80016b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016ba:	d508      	bpl.n	80016ce <ZadanieDwa+0x2a2>
									HAL_GPIO_WritePin(Led_Red_GPIO_Port, Led_Red_Pin,GPIO_PIN_SET); //to be deleted
 80016bc:	482a      	ldr	r0, [pc, #168]	; (8001768 <ZadanieDwa+0x33c>)
 80016be:	2201      	movs	r2, #1
 80016c0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80016c4:	f005 fa18 	bl	8006af8 <HAL_GPIO_WritePin>
									ladowarka.ChargingCompleted=1;
 80016c8:	2301      	movs	r3, #1
 80016ca:	f8c4 3c64 	str.w	r3, [r4, #3172]	; 0xc64
								}
						}
					}

					/************** check if chargin should be stopped*****************/
					if(ladowarka.ChargeStarted==1 && (ladowarka.ChargingTimeInSec >= ladowarka.ChargingTime*60*60)) ladowarka.ChargingCompleted=1;
 80016ce:	6962      	ldr	r2, [r4, #20]
 80016d0:	2a01      	cmp	r2, #1
 80016d2:	d109      	bne.n	80016e8 <ZadanieDwa+0x2bc>
 80016d4:	f8d4 1c5c 	ldr.w	r1, [r4, #3164]	; 0xc5c
 80016d8:	6923      	ldr	r3, [r4, #16]
 80016da:	f44f 6061 	mov.w	r0, #3600	; 0xe10
 80016de:	4343      	muls	r3, r0
 80016e0:	4299      	cmp	r1, r3
 80016e2:	bfa8      	it	ge
 80016e4:	f8c4 2c64 	strge.w	r2, [r4, #3172]	; 0xc64

					if (ladowarka.ChargingCompleted==1){
 80016e8:	f8d4 3c64 	ldr.w	r3, [r4, #3172]	; 0xc64
 80016ec:	2b01      	cmp	r3, #1
 80016ee:	d102      	bne.n	80016f6 <ZadanieDwa+0x2ca>
						SetProperVoltage(CurrentAfterCharging);  //Sets CurrentAfterCharging
 80016f0:	200a      	movs	r0, #10
 80016f2:	f7ff fd8b 	bl	800120c <SetProperVoltage>
					}

					if (ladowarka.NoBattFlag==1 ){
 80016f6:	f8d4 3c70 	ldr.w	r3, [r4, #3184]	; 0xc70
 80016fa:	2b01      	cmp	r3, #1
 80016fc:	d106      	bne.n	800170c <ZadanieDwa+0x2e0>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095);  //No battery -> dont charge
 80016fe:	481b      	ldr	r0, [pc, #108]	; (800176c <ZadanieDwa+0x340>)
 8001700:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001704:	2200      	movs	r2, #0
 8001706:	2110      	movs	r1, #16
 8001708:	f004 ffff 	bl	800670a <HAL_DAC_SetValue>
						}


    osDelay(1); //should stay??
 800170c:	2001      	movs	r0, #1
 800170e:	f007 f9c9 	bl	8008aa4 <osDelay>
  {
 8001712:	e68f      	b.n	8001434 <ZadanieDwa+0x8>
					else if(ladowarka.ChargeStarted==1 && ladowarka.OpAmpVoltageSet==0 ) { //if START button on GUI pressed and op amp voltage is not set yet.
 8001714:	6966      	ldr	r6, [r4, #20]
 8001716:	2e01      	cmp	r6, #1
 8001718:	d18a      	bne.n	8001630 <ZadanieDwa+0x204>
 800171a:	69a3      	ldr	r3, [r4, #24]
 800171c:	2b00      	cmp	r3, #0
 800171e:	d187      	bne.n	8001630 <ZadanieDwa+0x204>
						volatile int count=SetProperVoltage(ladowarka.LoadingCurrent);
 8001720:	68e0      	ldr	r0, [r4, #12]
 8001722:	f7ff fd73 	bl	800120c <SetProperVoltage>
 8001726:	9001      	str	r0, [sp, #4]
						ladowarka.OpAmpVoltageSet=1;
 8001728:	61a6      	str	r6, [r4, #24]
 800172a:	e781      	b.n	8001630 <ZadanieDwa+0x204>
 800172c:	20003c5c 	.word	0x20003c5c
 8001730:	200039f0 	.word	0x200039f0
 8001734:	200048e4 	.word	0x200048e4
 8001738:	200048ec 	.word	0x200048ec
 800173c:	200039a8 	.word	0x200039a8
 8001740:	20003960 	.word	0x20003960
 8001744:	200048d4 	.word	0x200048d4
 8001748:	200048c8 	.word	0x200048c8
 800174c:	459ad79a 	.word	0x459ad79a
 8001750:	457ff000 	.word	0x457ff000
 8001754:	447a0000 	.word	0x447a0000
 8001758:	3f333333 	.word	0x3f333333
 800175c:	200048c4 	.word	0x200048c4
 8001760:	3f666666 	.word	0x3f666666
 8001764:	3fcccccd 	.word	0x3fcccccd
 8001768:	40021800 	.word	0x40021800
 800176c:	20003a40 	.word	0x20003a40
 8001770:	200048dc 	.word	0x200048dc
 8001774:	200048d8 	.word	0x200048d8

08001778 <SystemClock_Config>:
{
 8001778:	b5f0      	push	{r4, r5, r6, r7, lr}
 800177a:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800177c:	2210      	movs	r2, #16
 800177e:	2100      	movs	r1, #0
 8001780:	a80a      	add	r0, sp, #40	; 0x28
 8001782:	f01f fc43 	bl	802100c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001786:	2214      	movs	r2, #20
 8001788:	2100      	movs	r1, #0
 800178a:	a803      	add	r0, sp, #12
 800178c:	f01f fc3e 	bl	802100c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001790:	2100      	movs	r1, #0
 8001792:	2230      	movs	r2, #48	; 0x30
 8001794:	a814      	add	r0, sp, #80	; 0x50
 8001796:	f01f fc39 	bl	802100c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800179a:	2400      	movs	r4, #0
 800179c:	4b22      	ldr	r3, [pc, #136]	; (8001828 <SystemClock_Config+0xb0>)
 800179e:	9401      	str	r4, [sp, #4]
 80017a0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80017a2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80017a6:	641a      	str	r2, [r3, #64]	; 0x40
 80017a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80017ae:	9301      	str	r3, [sp, #4]
 80017b0:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80017b2:	4b1e      	ldr	r3, [pc, #120]	; (800182c <SystemClock_Config+0xb4>)
 80017b4:	9402      	str	r4, [sp, #8]
 80017b6:	681a      	ldr	r2, [r3, #0]
 80017b8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80017bc:	601a      	str	r2, [r3, #0]
 80017be:	681b      	ldr	r3, [r3, #0]
 80017c0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80017c4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80017c6:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80017c8:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80017ca:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80017ce:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80017d2:	2502      	movs	r5, #2
 80017d4:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80017d8:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80017dc:	2708      	movs	r7, #8
 80017de:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80017e2:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80017e4:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 80017e6:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80017ea:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80017ec:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80017ee:	f005 ff7f 	bl	80076f0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80017f2:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80017f4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80017f8:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80017fc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001800:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001804:	a803      	add	r0, sp, #12
 8001806:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001808:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800180a:	f006 f949 	bl	8007aa0 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800180e:	23c0      	movs	r3, #192	; 0xc0
 8001810:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001812:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001814:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001818:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800181a:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800181c:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800181e:	f006 fa19 	bl	8007c54 <HAL_RCCEx_PeriphCLKConfig>
}
 8001822:	b021      	add	sp, #132	; 0x84
 8001824:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001826:	bf00      	nop
 8001828:	40023800 	.word	0x40023800
 800182c:	40007000 	.word	0x40007000

08001830 <main>:
{
 8001830:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001834:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001836:	f004 fc5d 	bl	80060f4 <HAL_Init>
  SystemClock_Config();
 800183a:	f7ff ff9d 	bl	8001778 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800183e:	2214      	movs	r2, #20
 8001840:	2100      	movs	r1, #0
 8001842:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001844:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001846:	f01f fbe1 	bl	802100c <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800184a:	4bc6      	ldr	r3, [pc, #792]	; (8001b64 <main+0x334>)
 800184c:	9400      	str	r4, [sp, #0]
 800184e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001850:	48c5      	ldr	r0, [pc, #788]	; (8001b68 <main+0x338>)
  hi2c3.Instance = I2C3;
 8001852:	4ec6      	ldr	r6, [pc, #792]	; (8001b6c <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001854:	f042 0220 	orr.w	r2, r2, #32
 8001858:	631a      	str	r2, [r3, #48]	; 0x30
 800185a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800185c:	f002 0220 	and.w	r2, r2, #32
 8001860:	9200      	str	r2, [sp, #0]
 8001862:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001864:	9401      	str	r4, [sp, #4]
 8001866:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001868:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800186c:	631a      	str	r2, [r3, #48]	; 0x30
 800186e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001870:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001874:	9201      	str	r2, [sp, #4]
 8001876:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001878:	9402      	str	r4, [sp, #8]
 800187a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800187c:	f042 0204 	orr.w	r2, r2, #4
 8001880:	631a      	str	r2, [r3, #48]	; 0x30
 8001882:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001884:	f002 0204 	and.w	r2, r2, #4
 8001888:	9202      	str	r2, [sp, #8]
 800188a:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800188c:	9403      	str	r4, [sp, #12]
 800188e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001890:	f042 0201 	orr.w	r2, r2, #1
 8001894:	631a      	str	r2, [r3, #48]	; 0x30
 8001896:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001898:	f002 0201 	and.w	r2, r2, #1
 800189c:	9203      	str	r2, [sp, #12]
 800189e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80018a0:	9404      	str	r4, [sp, #16]
 80018a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80018a4:	f042 0202 	orr.w	r2, r2, #2
 80018a8:	631a      	str	r2, [r3, #48]	; 0x30
 80018aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80018ac:	f002 0202 	and.w	r2, r2, #2
 80018b0:	9204      	str	r2, [sp, #16]
 80018b2:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80018b4:	9405      	str	r4, [sp, #20]
 80018b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80018b8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80018bc:	631a      	str	r2, [r3, #48]	; 0x30
 80018be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80018c0:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80018c4:	9205      	str	r2, [sp, #20]
 80018c6:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80018c8:	9406      	str	r4, [sp, #24]
 80018ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80018cc:	f042 0210 	orr.w	r2, r2, #16
 80018d0:	631a      	str	r2, [r3, #48]	; 0x30
 80018d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80018d4:	f002 0210 	and.w	r2, r2, #16
 80018d8:	9206      	str	r2, [sp, #24]
 80018da:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80018dc:	9407      	str	r4, [sp, #28]
 80018de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80018e0:	f042 0208 	orr.w	r2, r2, #8
 80018e4:	631a      	str	r2, [r3, #48]	; 0x30
 80018e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018e8:	f003 0308 	and.w	r3, r3, #8
 80018ec:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ee:	4622      	mov	r2, r4
 80018f0:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80018f2:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018f4:	f005 f900 	bl	8006af8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80018f8:	489d      	ldr	r0, [pc, #628]	; (8001b70 <main+0x340>)
 80018fa:	4622      	mov	r2, r4
 80018fc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001900:	f005 f8fa 	bl	8006af8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001904:	489b      	ldr	r0, [pc, #620]	; (8001b74 <main+0x344>)
 8001906:	4622      	mov	r2, r4
 8001908:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800190c:	f005 f8f4 	bl	8006af8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, Led_green_Pin|Led_Red_Pin, GPIO_PIN_RESET);
 8001910:	4622      	mov	r2, r4
 8001912:	4899      	ldr	r0, [pc, #612]	; (8001b78 <main+0x348>)
 8001914:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001918:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOG, Led_green_Pin|Led_Red_Pin, GPIO_PIN_RESET);
 800191a:	f005 f8ed 	bl	8006af8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800191e:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001920:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001924:	4890      	ldr	r0, [pc, #576]	; (8001b68 <main+0x338>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001926:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001928:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800192a:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800192e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001930:	f004 fffa 	bl	8006928 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001934:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001938:	488d      	ldr	r0, [pc, #564]	; (8001b70 <main+0x340>)
 800193a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800193c:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001940:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001944:	f004 fff0 	bl	8006928 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001948:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800194c:	4889      	ldr	r0, [pc, #548]	; (8001b74 <main+0x344>)
 800194e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001950:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001954:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001958:	f004 ffe6 	bl	8006928 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800195c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = Led_green_Pin|Led_Red_Pin;
 800195e:	f44f 42c0 	mov.w	r2, #24576	; 0x6000
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001962:	4885      	ldr	r0, [pc, #532]	; (8001b78 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001964:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001968:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800196c:	f004 ffdc 	bl	8006928 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001970:	4882      	ldr	r0, [pc, #520]	; (8001b7c <main+0x34c>)
 8001972:	4a83      	ldr	r2, [pc, #524]	; (8001b80 <main+0x350>)
 8001974:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001976:	f004 fe57 	bl	8006628 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800197a:	4b82      	ldr	r3, [pc, #520]	; (8001b84 <main+0x354>)
 800197c:	4a82      	ldr	r2, [pc, #520]	; (8001b88 <main+0x358>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800197e:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001980:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001984:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001986:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800198a:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800198e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001992:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001996:	f005 fa91 	bl	8006ebc <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800199a:	2110      	movs	r1, #16
 800199c:	4630      	mov	r0, r6
 800199e:	f005 fccd 	bl	800733c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80019a2:	4621      	mov	r1, r4
 80019a4:	4630      	mov	r0, r6
 80019a6:	f005 fce8 	bl	800737a <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80019aa:	4878      	ldr	r0, [pc, #480]	; (8001b8c <main+0x35c>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80019ac:	4978      	ldr	r1, [pc, #480]	; (8001b90 <main+0x360>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80019ae:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80019b0:	f44f 7282 	mov.w	r2, #260	; 0x104
 80019b4:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80019b8:	f44f 7600 	mov.w	r6, #512	; 0x200
 80019bc:	2218      	movs	r2, #24
 80019be:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80019c2:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80019c4:	4e73      	ldr	r6, [pc, #460]	; (8001b94 <main+0x364>)
  hspi5.Init.CRCPolynomial = 10;
 80019c6:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80019c8:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80019cc:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80019d0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80019d4:	f006 fb42 	bl	800805c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80019d8:	4a6f      	ldr	r2, [pc, #444]	; (8001b98 <main+0x368>)
  SdramTiming.LoadToActiveDelay = 2;
 80019da:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80019dc:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80019e0:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80019e4:	2240      	movs	r2, #64	; 0x40
 80019e6:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80019ea:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80019ee:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80019f2:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 80019f6:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80019f8:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80019fc:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001a00:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001a02:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001a06:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 8001a08:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001a0c:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001a10:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001a14:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 8001a16:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RCDDelay = 2;
 8001a1a:	9713      	str	r7, [sp, #76]	; 0x4c
  SdramTiming.RowCycleDelay = 7;
 8001a1c:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001a20:	f006 fa42 	bl	8007ea8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001a24:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001a28:	a909      	add	r1, sp, #36	; 0x24
 8001a2a:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 8001a2c:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001a30:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001a32:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001a34:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001a36:	f006 fa57 	bl	8007ee8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001a3a:	4628      	mov	r0, r5
 8001a3c:	f004 fb86 	bl	800614c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001a40:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001a44:	a909      	add	r1, sp, #36	; 0x24
 8001a46:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001a48:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001a4c:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001a50:	f006 fa4a 	bl	8007ee8 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001a54:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001a56:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001a5a:	a909      	add	r1, sp, #36	; 0x24
 8001a5c:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001a5e:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001a62:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001a66:	f006 fa3f 	bl	8007ee8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001a6a:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001a6e:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001a70:	9b08      	ldr	r3, [sp, #32]
 8001a72:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001a74:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001a78:	a909      	add	r1, sp, #36	; 0x24
 8001a7a:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001a7c:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8001a80:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001a82:	f006 fa31 	bl	8007ee8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001a86:	f240 516a 	movw	r1, #1386	; 0x56a
 8001a8a:	4630      	mov	r0, r6
 8001a8c:	f006 fa43 	bl	8007f16 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001a90:	2234      	movs	r2, #52	; 0x34
 8001a92:	4621      	mov	r1, r4
 8001a94:	eb0d 0002 	add.w	r0, sp, r2
 8001a98:	f01f fab8 	bl	802100c <memset>
  hltdc.Instance = LTDC;
 8001a9c:	4e3f      	ldr	r6, [pc, #252]	; (8001b9c <main+0x36c>)
 8001a9e:	4b40      	ldr	r3, [pc, #256]	; (8001ba0 <main+0x370>)
  hltdc.Init.Backcolor.Blue = 0;
 8001aa0:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001aa2:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 8001aa6:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 8001aa8:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 8001aac:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 8001ab0:	2303      	movs	r3, #3
 8001ab2:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001ab6:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001aba:	f240 1343 	movw	r3, #323	; 0x143
 8001abe:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001ac2:	f240 1917 	movw	r9, #279	; 0x117
 8001ac6:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001aca:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 8001acc:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001ad0:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001ad4:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 8001ad6:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001ada:	f005 fcf3 	bl	80074c4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001ade:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001ae0:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001ae2:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001ae6:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 8001aea:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001aec:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001af0:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8001af4:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001af8:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 8001afa:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001afe:	4630      	mov	r0, r6
 8001b00:	4622      	mov	r2, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001b02:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 8001b06:	4e27      	ldr	r6, [pc, #156]	; (8001ba4 <main+0x374>)
  pLayerCfg.ImageHeight = 320;
 8001b08:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 8001b0a:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001b0c:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001b10:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001b14:	f005 fda1 	bl	800765a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001b18:	4b23      	ldr	r3, [pc, #140]	; (8001ba8 <main+0x378>)
 8001b1a:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8001b1c:	681b      	ldr	r3, [r3, #0]
  hdac.Instance = DAC;
 8001b1e:	f8df 909c 	ldr.w	r9, [pc, #156]	; 8001bbc <main+0x38c>
  LcdDrv->Init();
 8001b22:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001b24:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 8001b26:	4e21      	ldr	r6, [pc, #132]	; (8001bac <main+0x37c>)
  LcdDrv->DisplayOff();
 8001b28:	68db      	ldr	r3, [r3, #12]
 8001b2a:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001b2c:	4b20      	ldr	r3, [pc, #128]	; (8001bb0 <main+0x380>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001b2e:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001b32:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001b36:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001b38:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001b3c:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001b40:	f004 fdf5 	bl	800672e <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001b44:	4629      	mov	r1, r5
 8001b46:	4630      	mov	r0, r6
 8001b48:	f004 feaa 	bl	80068a0 <HAL_DMA2D_ConfigLayer>
  htim7.Instance = TIM7;
 8001b4c:	4e19      	ldr	r6, [pc, #100]	; (8001bb4 <main+0x384>)
  htim7.Init.Prescaler = 8400-1;
 8001b4e:	4a1a      	ldr	r2, [pc, #104]	; (8001bb8 <main+0x388>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b50:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 8001b52:	f242 03cf 	movw	r3, #8399	; 0x20cf
 8001b56:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001b5a:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1;
 8001b5c:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001b60:	60f3      	str	r3, [r6, #12]
 8001b62:	e02d      	b.n	8001bc0 <main+0x390>
 8001b64:	40023800 	.word	0x40023800
 8001b68:	40020800 	.word	0x40020800
 8001b6c:	20003a94 	.word	0x20003a94
 8001b70:	40020400 	.word	0x40020400
 8001b74:	40020c00 	.word	0x40020c00
 8001b78:	40021800 	.word	0x40021800
 8001b7c:	20003a38 	.word	0x20003a38
 8001b80:	40023000 	.word	0x40023000
 8001b84:	40005c00 	.word	0x40005c00
 8001b88:	000186a0 	.word	0x000186a0
 8001b8c:	20003bc4 	.word	0x20003bc4
 8001b90:	40015000 	.word	0x40015000
 8001b94:	20003b90 	.word	0x20003b90
 8001b98:	a0000140 	.word	0xa0000140
 8001b9c:	20003ae8 	.word	0x20003ae8
 8001ba0:	40016800 	.word	0x40016800
 8001ba4:	20003958 	.word	0x20003958
 8001ba8:	2000001c 	.word	0x2000001c
 8001bac:	20003a54 	.word	0x20003a54
 8001bb0:	4002b000 	.word	0x4002b000
 8001bb4:	20003c1c 	.word	0x20003c1c
 8001bb8:	40001400 	.word	0x40001400
 8001bbc:	20003a40 	.word	0x20003a40
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001bc0:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001bc4:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001bc6:	f006 fde3 	bl	8008790 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001bca:	a90d      	add	r1, sp, #52	; 0x34
 8001bcc:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001bce:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001bd2:	f006 fdf7 	bl	80087c4 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 8001bd6:	4b51      	ldr	r3, [pc, #324]	; (8001d1c <main+0x4ec>)
 8001bd8:	f8c9 3000 	str.w	r3, [r9]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001bdc:	4648      	mov	r0, r9
  DAC_ChannelConfTypeDef sConfig = {0};
 8001bde:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001be2:	f004 fd31 	bl	8006648 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001be6:	4642      	mov	r2, r8
 8001be8:	a90d      	add	r1, sp, #52	; 0x34
 8001bea:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001bec:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001bf0:	f004 fd6a 	bl	80066c8 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001bf4:	4621      	mov	r1, r4
 8001bf6:	4642      	mov	r2, r8
 8001bf8:	a80d      	add	r0, sp, #52	; 0x34
 8001bfa:	f01f fa07 	bl	802100c <memset>
  hadc2.Instance = ADC2;
 8001bfe:	4a48      	ldr	r2, [pc, #288]	; (8001d20 <main+0x4f0>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001c00:	4b48      	ldr	r3, [pc, #288]	; (8001d24 <main+0x4f4>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8001c02:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001c04:	f44f 3b80 	mov.w	fp, #65536	; 0x10000
 8001c08:	e9c2 3b00 	strd	r3, fp, [r2]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001c0c:	4610      	mov	r0, r2
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001c0e:	4b46      	ldr	r3, [pc, #280]	; (8001d28 <main+0x4f8>)
 8001c10:	6293      	str	r3, [r2, #40]	; 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 8001c12:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 8001c14:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001c16:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001c1a:	62d4      	str	r4, [r2, #44]	; 0x2c
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001c1c:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 8001c1e:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8001c20:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001c24:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001c26:	f004 faa5 	bl	8006174 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001c2a:	4a3d      	ldr	r2, [pc, #244]	; (8001d20 <main+0x4f0>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001c2c:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001c30:	a90d      	add	r1, sp, #52	; 0x34
 8001c32:	4610      	mov	r0, r2
  sConfig.Rank = 1;
 8001c34:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  hadc3.Instance = ADC3;
 8001c38:	4f3c      	ldr	r7, [pc, #240]	; (8001d2c <main+0x4fc>)
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001c3a:	f004 fc07 	bl	800644c <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001c3e:	4621      	mov	r1, r4
 8001c40:	4642      	mov	r2, r8
 8001c42:	a80d      	add	r0, sp, #52	; 0x34
 8001c44:	f01f f9e2 	bl	802100c <memset>
  hadc3.Instance = ADC3;
 8001c48:	4a39      	ldr	r2, [pc, #228]	; (8001d30 <main+0x500>)
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001c4a:	4b37      	ldr	r3, [pc, #220]	; (8001d28 <main+0x4f8>)
 8001c4c:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8001c4e:	4638      	mov	r0, r7
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001c50:	e9c7 2b00 	strd	r2, fp, [r7]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8001c54:	60bc      	str	r4, [r7, #8]
  hadc3.Init.ScanConvMode = DISABLE;
 8001c56:	613c      	str	r4, [r7, #16]
  hadc3.Init.ContinuousConvMode = ENABLE;
 8001c58:	763d      	strb	r5, [r7, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8001c5a:	f887 4020 	strb.w	r4, [r7, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001c5e:	62fc      	str	r4, [r7, #44]	; 0x2c
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001c60:	60fc      	str	r4, [r7, #12]
  hadc3.Init.NbrOfConversion = 1;
 8001c62:	61fd      	str	r5, [r7, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 8001c64:	f887 4030 	strb.w	r4, [r7, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001c68:	617d      	str	r5, [r7, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8001c6a:	f004 fa83 	bl	8006174 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001c6e:	a90d      	add	r1, sp, #52	; 0x34
 8001c70:	4638      	mov	r0, r7
  sConfig.Rank = 1;
 8001c72:	e9cd 550d 	strd	r5, r5, [sp, #52]	; 0x34
  hadc1.Instance = ADC1;
 8001c76:	4f2f      	ldr	r7, [pc, #188]	; (8001d34 <main+0x504>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001c78:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001c7c:	f004 fbe6 	bl	800644c <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001c80:	4621      	mov	r1, r4
 8001c82:	4642      	mov	r2, r8
 8001c84:	a80d      	add	r0, sp, #52	; 0x34
 8001c86:	f01f f9c1 	bl	802100c <memset>
  hadc1.Instance = ADC1;
 8001c8a:	4a2b      	ldr	r2, [pc, #172]	; (8001d38 <main+0x508>)
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001c8c:	4b26      	ldr	r3, [pc, #152]	; (8001d28 <main+0x4f8>)
 8001c8e:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001c90:	4638      	mov	r0, r7
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001c92:	e9c7 2b00 	strd	r2, fp, [r7]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001c96:	60bc      	str	r4, [r7, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001c98:	613c      	str	r4, [r7, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8001c9a:	763d      	strb	r5, [r7, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001c9c:	f887 4020 	strb.w	r4, [r7, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001ca0:	62fc      	str	r4, [r7, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001ca2:	60fc      	str	r4, [r7, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001ca4:	61fd      	str	r5, [r7, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001ca6:	f887 4030 	strb.w	r4, [r7, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001caa:	617d      	str	r5, [r7, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001cac:	f004 fa62 	bl	8006174 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 8001cb0:	2311      	movs	r3, #17
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001cb2:	a90d      	add	r1, sp, #52	; 0x34
 8001cb4:	4638      	mov	r0, r7
  sConfig.Rank = 1;
 8001cb6:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001cba:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001cbe:	f004 fbc5 	bl	800644c <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 8001cc2:	f7fe fc90 	bl	80005e6 <MX_TouchGFX_Init>
  ladowarka.VccVoltage=3.3f;
 8001cc6:	4b1d      	ldr	r3, [pc, #116]	; (8001d3c <main+0x50c>)
 8001cc8:	491d      	ldr	r1, [pc, #116]	; (8001d40 <main+0x510>)
 8001cca:	f603 426c 	addw	r2, r3, #3180	; 0xc6c
  HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 8001cce:	4648      	mov	r0, r9
  ladowarka.VccVoltage=3.3f;
 8001cd0:	6011      	str	r1, [r2, #0]
  ladowarka.MinBatteryVotage=1.4;
 8001cd2:	4a1c      	ldr	r2, [pc, #112]	; (8001d44 <main+0x514>)
 8001cd4:	609a      	str	r2, [r3, #8]
  HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 8001cd6:	4641      	mov	r1, r8
  ladowarka.adjustment=0;
 8001cd8:	f8c3 4c74 	str.w	r4, [r3, #3188]	; 0xc74
  HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 8001cdc:	f004 fcc7 	bl	800666e <HAL_DAC_Start>
  HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //sets max voltage on opAmp to not charge battery.
 8001ce0:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001ce4:	4622      	mov	r2, r4
 8001ce6:	4641      	mov	r1, r8
 8001ce8:	4648      	mov	r0, r9
 8001cea:	f004 fd0e 	bl	800670a <HAL_DAC_SetValue>
  HAL_TIM_Base_Start_IT(&htim7); //timer seven start
 8001cee:	4630      	mov	r0, r6
 8001cf0:	f006 fc31 	bl	8008556 <HAL_TIM_Base_Start_IT>
  osKernelInitialize();
 8001cf4:	f006 fe46 	bl	8008984 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cf8:	4a13      	ldr	r2, [pc, #76]	; (8001d48 <main+0x518>)
 8001cfa:	4814      	ldr	r0, [pc, #80]	; (8001d4c <main+0x51c>)
 8001cfc:	4621      	mov	r1, r4
 8001cfe:	f006 fe7b 	bl	80089f8 <osThreadNew>
 8001d02:	4b13      	ldr	r3, [pc, #76]	; (8001d50 <main+0x520>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 8001d04:	4a13      	ldr	r2, [pc, #76]	; (8001d54 <main+0x524>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001d06:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 8001d08:	4621      	mov	r1, r4
 8001d0a:	4813      	ldr	r0, [pc, #76]	; (8001d58 <main+0x528>)
 8001d0c:	f006 fe74 	bl	80089f8 <osThreadNew>
 8001d10:	4b12      	ldr	r3, [pc, #72]	; (8001d5c <main+0x52c>)
 8001d12:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001d14:	f006 fe50 	bl	80089b8 <osKernelStart>
  while (1)
 8001d18:	e7fe      	b.n	8001d18 <main+0x4e8>
 8001d1a:	bf00      	nop
 8001d1c:	40007400 	.word	0x40007400
 8001d20:	200039a8 	.word	0x200039a8
 8001d24:	40012100 	.word	0x40012100
 8001d28:	0f000001 	.word	0x0f000001
 8001d2c:	200039f0 	.word	0x200039f0
 8001d30:	40012200 	.word	0x40012200
 8001d34:	20003960 	.word	0x20003960
 8001d38:	40012000 	.word	0x40012000
 8001d3c:	20003c5c 	.word	0x20003c5c
 8001d40:	40533333 	.word	0x40533333
 8001d44:	3fb33333 	.word	0x3fb33333
 8001d48:	080225bc 	.word	0x080225bc
 8001d4c:	080005eb 	.word	0x080005eb
 8001d50:	20003954 	.word	0x20003954
 8001d54:	080225e0 	.word	0x080225e0
 8001d58:	0800142d 	.word	0x0800142d
 8001d5c:	2000395c 	.word	0x2000395c

08001d60 <IOE_Init>:
 8001d60:	4770      	bx	lr

08001d62 <IOE_ITConfig>:
 8001d62:	4770      	bx	lr

08001d64 <IOE_Write>:
{
 8001d64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001d66:	4b09      	ldr	r3, [pc, #36]	; (8001d8c <IOE_Write+0x28>)
 8001d68:	f88d 2017 	strb.w	r2, [sp, #23]
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	9302      	str	r3, [sp, #8]
 8001d70:	f10d 0217 	add.w	r2, sp, #23
 8001d74:	2301      	movs	r3, #1
 8001d76:	9200      	str	r2, [sp, #0]
 8001d78:	9301      	str	r3, [sp, #4]
 8001d7a:	460a      	mov	r2, r1
 8001d7c:	4601      	mov	r1, r0
 8001d7e:	4804      	ldr	r0, [pc, #16]	; (8001d90 <IOE_Write+0x2c>)
 8001d80:	f005 f944 	bl	800700c <HAL_I2C_Mem_Write>
}
 8001d84:	b007      	add	sp, #28
 8001d86:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d8a:	bf00      	nop
 8001d8c:	2000000c 	.word	0x2000000c
 8001d90:	20003a94 	.word	0x20003a94

08001d94 <IOE_Read>:
{
 8001d94:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001d96:	2300      	movs	r3, #0
 8001d98:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d9c:	4b08      	ldr	r3, [pc, #32]	; (8001dc0 <IOE_Read+0x2c>)
 8001d9e:	681b      	ldr	r3, [r3, #0]
 8001da0:	9302      	str	r3, [sp, #8]
{
 8001da2:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001da4:	2301      	movs	r3, #1
 8001da6:	f10d 0117 	add.w	r1, sp, #23
 8001daa:	9100      	str	r1, [sp, #0]
 8001dac:	9301      	str	r3, [sp, #4]
 8001dae:	4601      	mov	r1, r0
 8001db0:	4804      	ldr	r0, [pc, #16]	; (8001dc4 <IOE_Read+0x30>)
 8001db2:	f005 f9bb 	bl	800712c <HAL_I2C_Mem_Read>
}
 8001db6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001dba:	b007      	add	sp, #28
 8001dbc:	f85d fb04 	ldr.w	pc, [sp], #4
 8001dc0:	2000000c 	.word	0x2000000c
 8001dc4:	20003a94 	.word	0x20003a94

08001dc8 <IOE_ReadMultiple>:
{
 8001dc8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001dca:	4c08      	ldr	r4, [pc, #32]	; (8001dec <IOE_ReadMultiple+0x24>)
 8001dcc:	6824      	ldr	r4, [r4, #0]
 8001dce:	9200      	str	r2, [sp, #0]
 8001dd0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001dd4:	460a      	mov	r2, r1
 8001dd6:	2301      	movs	r3, #1
 8001dd8:	4601      	mov	r1, r0
 8001dda:	4805      	ldr	r0, [pc, #20]	; (8001df0 <IOE_ReadMultiple+0x28>)
 8001ddc:	f005 f9a6 	bl	800712c <HAL_I2C_Mem_Read>
}
 8001de0:	3800      	subs	r0, #0
 8001de2:	bf18      	it	ne
 8001de4:	2001      	movne	r0, #1
 8001de6:	b004      	add	sp, #16
 8001de8:	bd10      	pop	{r4, pc}
 8001dea:	bf00      	nop
 8001dec:	2000000c 	.word	0x2000000c
 8001df0:	20003a94 	.word	0x20003a94

08001df4 <IOE_Delay>:
 8001df4:	f004 b9aa 	b.w	800614c <HAL_Delay>

08001df8 <LCD_IO_Init>:
{
 8001df8:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dfa:	4806      	ldr	r0, [pc, #24]	; (8001e14 <LCD_IO_Init+0x1c>)
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	2104      	movs	r1, #4
 8001e00:	f004 fe7a 	bl	8006af8 <HAL_GPIO_WritePin>
}
 8001e04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e08:	4802      	ldr	r0, [pc, #8]	; (8001e14 <LCD_IO_Init+0x1c>)
 8001e0a:	2201      	movs	r2, #1
 8001e0c:	2104      	movs	r1, #4
 8001e0e:	f004 be73 	b.w	8006af8 <HAL_GPIO_WritePin>
 8001e12:	bf00      	nop
 8001e14:	40020800 	.word	0x40020800

08001e18 <LCD_IO_WriteData>:
{
 8001e18:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e1a:	4d0b      	ldr	r5, [pc, #44]	; (8001e48 <LCD_IO_WriteData+0x30>)
{
 8001e1c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e1e:	2201      	movs	r2, #1
 8001e20:	480a      	ldr	r0, [pc, #40]	; (8001e4c <LCD_IO_WriteData+0x34>)
 8001e22:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e26:	f004 fe67 	bl	8006af8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e2a:	2200      	movs	r2, #0
 8001e2c:	2104      	movs	r1, #4
 8001e2e:	4628      	mov	r0, r5
 8001e30:	f004 fe62 	bl	8006af8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001e34:	4620      	mov	r0, r4
 8001e36:	f7ff f99f 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e3a:	4628      	mov	r0, r5
 8001e3c:	2201      	movs	r2, #1
}
 8001e3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e42:	2104      	movs	r1, #4
 8001e44:	f004 be58 	b.w	8006af8 <HAL_GPIO_WritePin>
 8001e48:	40020800 	.word	0x40020800
 8001e4c:	40020c00 	.word	0x40020c00

08001e50 <LCD_IO_WriteReg>:
{
 8001e50:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e52:	4d0b      	ldr	r5, [pc, #44]	; (8001e80 <LCD_IO_WriteReg+0x30>)
{
 8001e54:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e56:	2200      	movs	r2, #0
 8001e58:	480a      	ldr	r0, [pc, #40]	; (8001e84 <LCD_IO_WriteReg+0x34>)
 8001e5a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e5e:	f004 fe4b 	bl	8006af8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e62:	2200      	movs	r2, #0
 8001e64:	2104      	movs	r1, #4
 8001e66:	4628      	mov	r0, r5
 8001e68:	f004 fe46 	bl	8006af8 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001e6c:	4620      	mov	r0, r4
 8001e6e:	f7ff f983 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e72:	4628      	mov	r0, r5
 8001e74:	2201      	movs	r2, #1
}
 8001e76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e7a:	2104      	movs	r1, #4
 8001e7c:	f004 be3c 	b.w	8006af8 <HAL_GPIO_WritePin>
 8001e80:	40020800 	.word	0x40020800
 8001e84:	40020c00 	.word	0x40020c00

08001e88 <LCD_IO_ReadData>:
{
 8001e88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e8a:	4e14      	ldr	r6, [pc, #80]	; (8001edc <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e8c:	4f14      	ldr	r7, [pc, #80]	; (8001ee0 <LCD_IO_ReadData+0x58>)
{
 8001e8e:	4605      	mov	r5, r0
 8001e90:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e92:	4630      	mov	r0, r6
 8001e94:	2200      	movs	r2, #0
 8001e96:	2104      	movs	r1, #4
 8001e98:	f004 fe2e 	bl	8006af8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e9c:	2200      	movs	r2, #0
 8001e9e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ea2:	4638      	mov	r0, r7
 8001ea4:	f004 fe28 	bl	8006af8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001ea8:	4628      	mov	r0, r5
 8001eaa:	f7ff f965 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001eae:	4b0d      	ldr	r3, [pc, #52]	; (8001ee4 <LCD_IO_ReadData+0x5c>)
 8001eb0:	480d      	ldr	r0, [pc, #52]	; (8001ee8 <LCD_IO_ReadData+0x60>)
 8001eb2:	681b      	ldr	r3, [r3, #0]
 8001eb4:	4622      	mov	r2, r4
 8001eb6:	a901      	add	r1, sp, #4
 8001eb8:	f006 faab 	bl	8008412 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ebc:	4638      	mov	r0, r7
 8001ebe:	2201      	movs	r2, #1
 8001ec0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001ec4:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ec6:	f004 fe17 	bl	8006af8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001eca:	4630      	mov	r0, r6
 8001ecc:	2201      	movs	r2, #1
 8001ece:	2104      	movs	r1, #4
 8001ed0:	f004 fe12 	bl	8006af8 <HAL_GPIO_WritePin>
}
 8001ed4:	4620      	mov	r0, r4
 8001ed6:	b003      	add	sp, #12
 8001ed8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001eda:	bf00      	nop
 8001edc:	40020800 	.word	0x40020800
 8001ee0:	40020c00 	.word	0x40020c00
 8001ee4:	20000010 	.word	0x20000010
 8001ee8:	20003bc4 	.word	0x20003bc4

08001eec <LCD_Delay>:
  HAL_Delay(Delay);
 8001eec:	f004 b92e 	b.w	800614c <HAL_Delay>

08001ef0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001ef0:	6802      	ldr	r2, [r0, #0]
 8001ef2:	4b08      	ldr	r3, [pc, #32]	; (8001f14 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001ef4:	429a      	cmp	r2, r3
{
 8001ef6:	b510      	push	{r4, lr}
 8001ef8:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001efa:	d101      	bne.n	8001f00 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001efc:	f004 f914 	bl	8006128 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001f00:	6822      	ldr	r2, [r4, #0]
 8001f02:	4b05      	ldr	r3, [pc, #20]	; (8001f18 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001f04:	429a      	cmp	r2, r3
	  ladowarka.Passed100ms=1;
 8001f06:	bf02      	ittt	eq
 8001f08:	4b04      	ldreq	r3, [pc, #16]	; (8001f1c <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001f0a:	2201      	moveq	r2, #1
 8001f0c:	f8c3 2c50 	streq.w	r2, [r3, #3152]	; 0xc50
  }

  /* USER CODE END Callback 1 */
}
 8001f10:	bd10      	pop	{r4, pc}
 8001f12:	bf00      	nop
 8001f14:	40010400 	.word	0x40010400
 8001f18:	40001400 	.word	0x40001400
 8001f1c:	20003c5c 	.word	0x20003c5c

08001f20 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001f20:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001f22:	4b0e      	ldr	r3, [pc, #56]	; (8001f5c <HAL_MspInit+0x3c>)
 8001f24:	2200      	movs	r2, #0
 8001f26:	9200      	str	r2, [sp, #0]
 8001f28:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001f2a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001f2e:	6459      	str	r1, [r3, #68]	; 0x44
 8001f30:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001f32:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001f36:	9100      	str	r1, [sp, #0]
 8001f38:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001f3a:	9201      	str	r2, [sp, #4]
 8001f3c:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001f3e:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001f42:	6419      	str	r1, [r3, #64]	; 0x40
 8001f44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f46:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001f4a:	9301      	str	r3, [sp, #4]
 8001f4c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001f4e:	210f      	movs	r1, #15
 8001f50:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001f54:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001f56:	f004 bb27 	b.w	80065a8 <HAL_NVIC_SetPriority>
 8001f5a:	bf00      	nop
 8001f5c:	40023800 	.word	0x40023800

08001f60 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001f60:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f62:	2214      	movs	r2, #20
{
 8001f64:	b08a      	sub	sp, #40	; 0x28
 8001f66:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f68:	2100      	movs	r1, #0
 8001f6a:	eb0d 0002 	add.w	r0, sp, r2
 8001f6e:	f01f f84d 	bl	802100c <memset>
  if(hadc->Instance==ADC1)
 8001f72:	6823      	ldr	r3, [r4, #0]
 8001f74:	4a26      	ldr	r2, [pc, #152]	; (8002010 <HAL_ADC_MspInit+0xb0>)
 8001f76:	4293      	cmp	r3, r2
 8001f78:	d10d      	bne.n	8001f96 <HAL_ADC_MspInit+0x36>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001f7a:	2300      	movs	r3, #0
 8001f7c:	9300      	str	r3, [sp, #0]
 8001f7e:	4b25      	ldr	r3, [pc, #148]	; (8002014 <HAL_ADC_MspInit+0xb4>)
 8001f80:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f82:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001f86:	645a      	str	r2, [r3, #68]	; 0x44
 8001f88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f8a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001f8e:	9300      	str	r3, [sp, #0]
 8001f90:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 8001f92:	b00a      	add	sp, #40	; 0x28
 8001f94:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001f96:	4a20      	ldr	r2, [pc, #128]	; (8002018 <HAL_ADC_MspInit+0xb8>)
 8001f98:	4293      	cmp	r3, r2
 8001f9a:	d11e      	bne.n	8001fda <HAL_ADC_MspInit+0x7a>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001f9c:	4b1d      	ldr	r3, [pc, #116]	; (8002014 <HAL_ADC_MspInit+0xb4>)
 8001f9e:	2100      	movs	r1, #0
 8001fa0:	9101      	str	r1, [sp, #4]
 8001fa2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001fa4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001fa8:	645a      	str	r2, [r3, #68]	; 0x44
 8001faa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001fac:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001fb0:	9201      	str	r2, [sp, #4]
 8001fb2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fb4:	9102      	str	r1, [sp, #8]
 8001fb6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fb8:	f042 0201 	orr.w	r2, r2, #1
 8001fbc:	631a      	str	r2, [r3, #48]	; 0x30
 8001fbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fc0:	f003 0301 	and.w	r3, r3, #1
 8001fc4:	9302      	str	r3, [sp, #8]
 8001fc6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001fc8:	2304      	movs	r3, #4
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001fca:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fcc:	4813      	ldr	r0, [pc, #76]	; (800201c <HAL_ADC_MspInit+0xbc>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001fce:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fd0:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001fd2:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fd4:	f004 fca8 	bl	8006928 <HAL_GPIO_Init>
}
 8001fd8:	e7db      	b.n	8001f92 <HAL_ADC_MspInit+0x32>
  else if(hadc->Instance==ADC3)
 8001fda:	4a11      	ldr	r2, [pc, #68]	; (8002020 <HAL_ADC_MspInit+0xc0>)
 8001fdc:	4293      	cmp	r3, r2
 8001fde:	d1d8      	bne.n	8001f92 <HAL_ADC_MspInit+0x32>
    __HAL_RCC_ADC3_CLK_ENABLE();
 8001fe0:	4b0c      	ldr	r3, [pc, #48]	; (8002014 <HAL_ADC_MspInit+0xb4>)
 8001fe2:	2100      	movs	r1, #0
 8001fe4:	9103      	str	r1, [sp, #12]
 8001fe6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001fe8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001fec:	645a      	str	r2, [r3, #68]	; 0x44
 8001fee:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ff0:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001ff4:	9203      	str	r2, [sp, #12]
 8001ff6:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ff8:	9104      	str	r1, [sp, #16]
 8001ffa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ffc:	f042 0201 	orr.w	r2, r2, #1
 8002000:	631a      	str	r2, [r3, #48]	; 0x30
 8002002:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002004:	f003 0301 	and.w	r3, r3, #1
 8002008:	9304      	str	r3, [sp, #16]
 800200a:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 800200c:	2302      	movs	r3, #2
 800200e:	e7dc      	b.n	8001fca <HAL_ADC_MspInit+0x6a>
 8002010:	40012000 	.word	0x40012000
 8002014:	40023800 	.word	0x40023800
 8002018:	40012100 	.word	0x40012100
 800201c:	40020000 	.word	0x40020000
 8002020:	40012200 	.word	0x40012200

08002024 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002024:	6802      	ldr	r2, [r0, #0]
 8002026:	4b09      	ldr	r3, [pc, #36]	; (800204c <HAL_CRC_MspInit+0x28>)
 8002028:	429a      	cmp	r2, r3
{
 800202a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800202c:	d10b      	bne.n	8002046 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800202e:	2300      	movs	r3, #0
 8002030:	9301      	str	r3, [sp, #4]
 8002032:	4b07      	ldr	r3, [pc, #28]	; (8002050 <HAL_CRC_MspInit+0x2c>)
 8002034:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002036:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800203a:	631a      	str	r2, [r3, #48]	; 0x30
 800203c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800203e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002042:	9301      	str	r3, [sp, #4]
 8002044:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002046:	b002      	add	sp, #8
 8002048:	4770      	bx	lr
 800204a:	bf00      	nop
 800204c:	40023000 	.word	0x40023000
 8002050:	40023800 	.word	0x40023800

08002054 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8002054:	b510      	push	{r4, lr}
 8002056:	4604      	mov	r4, r0
 8002058:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800205a:	2214      	movs	r2, #20
 800205c:	2100      	movs	r1, #0
 800205e:	a803      	add	r0, sp, #12
 8002060:	f01e ffd4 	bl	802100c <memset>
  if(hdac->Instance==DAC)
 8002064:	6822      	ldr	r2, [r4, #0]
 8002066:	4b12      	ldr	r3, [pc, #72]	; (80020b0 <HAL_DAC_MspInit+0x5c>)
 8002068:	429a      	cmp	r2, r3
 800206a:	d11e      	bne.n	80020aa <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 800206c:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8002070:	2100      	movs	r1, #0
 8002072:	9101      	str	r1, [sp, #4]
 8002074:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002076:	480f      	ldr	r0, [pc, #60]	; (80020b4 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8002078:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800207c:	641a      	str	r2, [r3, #64]	; 0x40
 800207e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002080:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8002084:	9201      	str	r2, [sp, #4]
 8002086:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002088:	9102      	str	r1, [sp, #8]
 800208a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800208c:	f042 0201 	orr.w	r2, r2, #1
 8002090:	631a      	str	r2, [r3, #48]	; 0x30
 8002092:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002094:	f003 0301 	and.w	r3, r3, #1
 8002098:	9302      	str	r3, [sp, #8]
 800209a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800209c:	2220      	movs	r2, #32
 800209e:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020a0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80020a2:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020a6:	f004 fc3f 	bl	8006928 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 80020aa:	b008      	add	sp, #32
 80020ac:	bd10      	pop	{r4, pc}
 80020ae:	bf00      	nop
 80020b0:	40007400 	.word	0x40007400
 80020b4:	40020000 	.word	0x40020000

080020b8 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80020b8:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80020ba:	4b0f      	ldr	r3, [pc, #60]	; (80020f8 <HAL_DMA2D_MspInit+0x40>)
 80020bc:	6802      	ldr	r2, [r0, #0]
 80020be:	429a      	cmp	r2, r3
 80020c0:	d116      	bne.n	80020f0 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80020c2:	2200      	movs	r2, #0
 80020c4:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 80020c8:	9201      	str	r2, [sp, #4]
 80020ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80020cc:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80020d0:	6319      	str	r1, [r3, #48]	; 0x30
 80020d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020d4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80020d8:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80020da:	2105      	movs	r1, #5
 80020dc:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80020de:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80020e0:	f004 fa62 	bl	80065a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80020e4:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80020e6:	b003      	add	sp, #12
 80020e8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80020ec:	f004 ba8e 	b.w	800660c <HAL_NVIC_EnableIRQ>
}
 80020f0:	b003      	add	sp, #12
 80020f2:	f85d fb04 	ldr.w	pc, [sp], #4
 80020f6:	bf00      	nop
 80020f8:	4002b000 	.word	0x4002b000

080020fc <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80020fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002100:	4604      	mov	r4, r0
 8002102:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002104:	2214      	movs	r2, #20
 8002106:	2100      	movs	r1, #0
 8002108:	a803      	add	r0, sp, #12
 800210a:	f01e ff7f 	bl	802100c <memset>
  if(hi2c->Instance==I2C3)
 800210e:	6822      	ldr	r2, [r4, #0]
 8002110:	4b24      	ldr	r3, [pc, #144]	; (80021a4 <HAL_I2C_MspInit+0xa8>)
 8002112:	429a      	cmp	r2, r3
 8002114:	d143      	bne.n	800219e <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002116:	4c24      	ldr	r4, [pc, #144]	; (80021a8 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002118:	4824      	ldr	r0, [pc, #144]	; (80021ac <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800211a:	2500      	movs	r5, #0
 800211c:	9500      	str	r5, [sp, #0]
 800211e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002120:	f043 0304 	orr.w	r3, r3, #4
 8002124:	6323      	str	r3, [r4, #48]	; 0x30
 8002126:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002128:	f003 0304 	and.w	r3, r3, #4
 800212c:	9300      	str	r3, [sp, #0]
 800212e:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002130:	9501      	str	r5, [sp, #4]
 8002132:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002134:	f043 0301 	orr.w	r3, r3, #1
 8002138:	6323      	str	r3, [r4, #48]	; 0x30
 800213a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800213c:	f003 0301 	and.w	r3, r3, #1
 8002140:	9301      	str	r3, [sp, #4]
 8002142:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002144:	f04f 0912 	mov.w	r9, #18
 8002148:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800214c:	f04f 0801 	mov.w	r8, #1
 8002150:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002152:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002154:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002156:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800215a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800215e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002160:	f004 fbe2 	bl	8006928 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002164:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002168:	4811      	ldr	r0, [pc, #68]	; (80021b0 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800216a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800216c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800216e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002172:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002176:	f004 fbd7 	bl	8006928 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 800217a:	9502      	str	r5, [sp, #8]
 800217c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800217e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002182:	6423      	str	r3, [r4, #64]	; 0x40
 8002184:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002186:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800218a:	9302      	str	r3, [sp, #8]
 800218c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800218e:	6a23      	ldr	r3, [r4, #32]
 8002190:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002194:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002196:	6a23      	ldr	r3, [r4, #32]
 8002198:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800219c:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800219e:	b009      	add	sp, #36	; 0x24
 80021a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80021a4:	40005c00 	.word	0x40005c00
 80021a8:	40023800 	.word	0x40023800
 80021ac:	40020800 	.word	0x40020800
 80021b0:	40020000 	.word	0x40020000

080021b4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80021b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80021b6:	4604      	mov	r4, r0
 80021b8:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021ba:	2214      	movs	r2, #20
 80021bc:	2100      	movs	r1, #0
 80021be:	a807      	add	r0, sp, #28
 80021c0:	f01e ff24 	bl	802100c <memset>
  if(hltdc->Instance==LTDC)
 80021c4:	6822      	ldr	r2, [r4, #0]
 80021c6:	4b57      	ldr	r3, [pc, #348]	; (8002324 <HAL_LTDC_MspInit+0x170>)
 80021c8:	429a      	cmp	r2, r3
 80021ca:	f040 80a8 	bne.w	800231e <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80021ce:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 80021d2:	2500      	movs	r5, #0
 80021d4:	9500      	str	r5, [sp, #0]
 80021d6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021d8:	4853      	ldr	r0, [pc, #332]	; (8002328 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80021da:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80021de:	645a      	str	r2, [r3, #68]	; 0x44
 80021e0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80021e2:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80021e6:	9200      	str	r2, [sp, #0]
 80021e8:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80021ea:	9501      	str	r5, [sp, #4]
 80021ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80021ee:	f042 0220 	orr.w	r2, r2, #32
 80021f2:	631a      	str	r2, [r3, #48]	; 0x30
 80021f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80021f6:	f002 0220 	and.w	r2, r2, #32
 80021fa:	9201      	str	r2, [sp, #4]
 80021fc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80021fe:	9502      	str	r5, [sp, #8]
 8002200:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002202:	f042 0201 	orr.w	r2, r2, #1
 8002206:	631a      	str	r2, [r3, #48]	; 0x30
 8002208:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800220a:	f002 0201 	and.w	r2, r2, #1
 800220e:	9202      	str	r2, [sp, #8]
 8002210:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002212:	9503      	str	r5, [sp, #12]
 8002214:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002216:	f042 0202 	orr.w	r2, r2, #2
 800221a:	631a      	str	r2, [r3, #48]	; 0x30
 800221c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800221e:	f002 0202 	and.w	r2, r2, #2
 8002222:	9203      	str	r2, [sp, #12]
 8002224:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002226:	9504      	str	r5, [sp, #16]
 8002228:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800222a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800222e:	631a      	str	r2, [r3, #48]	; 0x30
 8002230:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002232:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8002236:	9204      	str	r2, [sp, #16]
 8002238:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800223a:	9505      	str	r5, [sp, #20]
 800223c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800223e:	f042 0204 	orr.w	r2, r2, #4
 8002242:	631a      	str	r2, [r3, #48]	; 0x30
 8002244:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002246:	f002 0204 	and.w	r2, r2, #4
 800224a:	9205      	str	r2, [sp, #20]
 800224c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800224e:	9506      	str	r5, [sp, #24]
 8002250:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002252:	f042 0208 	orr.w	r2, r2, #8
 8002256:	631a      	str	r2, [r3, #48]	; 0x30
 8002258:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800225a:	f003 0308 	and.w	r3, r3, #8
 800225e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002260:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002262:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002264:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002266:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002268:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800226c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800226e:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002272:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002274:	f004 fb58 	bl	8006928 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002278:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800227c:	482b      	ldr	r0, [pc, #172]	; (800232c <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800227e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002280:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002282:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002286:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002288:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800228c:	f004 fb4c 	bl	8006928 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002290:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002292:	4827      	ldr	r0, [pc, #156]	; (8002330 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002294:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002296:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002298:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800229c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022a0:	f004 fb42 	bl	8006928 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80022a4:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022a8:	4821      	ldr	r0, [pc, #132]	; (8002330 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022aa:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022ac:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022ae:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80022b2:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022b6:	f004 fb37 	bl	8006928 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80022ba:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022be:	481d      	ldr	r0, [pc, #116]	; (8002334 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022c0:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022c2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022c4:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80022c8:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022cc:	f004 fb2c 	bl	8006928 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80022d0:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022d2:	4819      	ldr	r0, [pc, #100]	; (8002338 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022d4:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022d6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022d8:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80022dc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022e0:	f004 fb22 	bl	8006928 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80022e4:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022e6:	4815      	ldr	r0, [pc, #84]	; (800233c <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022e8:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022ea:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022ec:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80022f0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022f4:	f004 fb18 	bl	8006928 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80022f8:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022fc:	480d      	ldr	r0, [pc, #52]	; (8002334 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80022fe:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002300:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002302:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002306:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800230a:	f004 fb0d 	bl	8006928 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800230e:	2058      	movs	r0, #88	; 0x58
 8002310:	462a      	mov	r2, r5
 8002312:	2105      	movs	r1, #5
 8002314:	f004 f948 	bl	80065a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002318:	2058      	movs	r0, #88	; 0x58
 800231a:	f004 f977 	bl	800660c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 800231e:	b00d      	add	sp, #52	; 0x34
 8002320:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002322:	bf00      	nop
 8002324:	40016800 	.word	0x40016800
 8002328:	40021400 	.word	0x40021400
 800232c:	40020000 	.word	0x40020000
 8002330:	40020400 	.word	0x40020400
 8002334:	40021800 	.word	0x40021800
 8002338:	40020800 	.word	0x40020800
 800233c:	40020c00 	.word	0x40020c00

08002340 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002340:	b510      	push	{r4, lr}
 8002342:	4604      	mov	r4, r0
 8002344:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002346:	2214      	movs	r2, #20
 8002348:	2100      	movs	r1, #0
 800234a:	a803      	add	r0, sp, #12
 800234c:	f01e fe5e 	bl	802100c <memset>
  if(hspi->Instance==SPI5)
 8002350:	6822      	ldr	r2, [r4, #0]
 8002352:	4b14      	ldr	r3, [pc, #80]	; (80023a4 <HAL_SPI_MspInit+0x64>)
 8002354:	429a      	cmp	r2, r3
 8002356:	d123      	bne.n	80023a0 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002358:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800235c:	2100      	movs	r1, #0
 800235e:	9101      	str	r1, [sp, #4]
 8002360:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002362:	4811      	ldr	r0, [pc, #68]	; (80023a8 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002364:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8002368:	645a      	str	r2, [r3, #68]	; 0x44
 800236a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800236c:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8002370:	9201      	str	r2, [sp, #4]
 8002372:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002374:	9102      	str	r1, [sp, #8]
 8002376:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002378:	f042 0220 	orr.w	r2, r2, #32
 800237c:	631a      	str	r2, [r3, #48]	; 0x30
 800237e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002380:	f003 0320 	and.w	r3, r3, #32
 8002384:	9302      	str	r3, [sp, #8]
 8002386:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002388:	f44f 7260 	mov.w	r2, #896	; 0x380
 800238c:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800238e:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002390:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002394:	2305      	movs	r3, #5
 8002396:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800239a:	a903      	add	r1, sp, #12
 800239c:	f004 fac4 	bl	8006928 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80023a0:	b008      	add	sp, #32
 80023a2:	bd10      	pop	{r4, pc}
 80023a4:	40015000 	.word	0x40015000
 80023a8:	40021400 	.word	0x40021400

080023ac <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80023ac:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 80023ae:	4b0f      	ldr	r3, [pc, #60]	; (80023ec <HAL_TIM_Base_MspInit+0x40>)
 80023b0:	6802      	ldr	r2, [r0, #0]
 80023b2:	429a      	cmp	r2, r3
 80023b4:	d116      	bne.n	80023e4 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 80023b6:	2200      	movs	r2, #0
 80023b8:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 80023bc:	9201      	str	r2, [sp, #4]
 80023be:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80023c0:	f041 0120 	orr.w	r1, r1, #32
 80023c4:	6419      	str	r1, [r3, #64]	; 0x40
 80023c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023c8:	f003 0320 	and.w	r3, r3, #32
 80023cc:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 80023ce:	2105      	movs	r1, #5
 80023d0:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 80023d2:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 80023d4:	f004 f8e8 	bl	80065a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 80023d8:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 80023da:	b003      	add	sp, #12
 80023dc:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 80023e0:	f004 b914 	b.w	800660c <HAL_NVIC_EnableIRQ>
}
 80023e4:	b003      	add	sp, #12
 80023e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80023ea:	bf00      	nop
 80023ec:	40001400 	.word	0x40001400

080023f0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80023f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80023f4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80023f6:	2300      	movs	r3, #0
 80023f8:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80023fa:	4b2b      	ldr	r3, [pc, #172]	; (80024a8 <HAL_SDRAM_MspInit+0xb8>)
 80023fc:	681c      	ldr	r4, [r3, #0]
 80023fe:	2c00      	cmp	r4, #0
 8002400:	d14f      	bne.n	80024a2 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002402:	f04f 0801 	mov.w	r8, #1
 8002406:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 800240a:	4b28      	ldr	r3, [pc, #160]	; (80024ac <HAL_SDRAM_MspInit+0xbc>)
 800240c:	9400      	str	r4, [sp, #0]
 800240e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002410:	4827      	ldr	r0, [pc, #156]	; (80024b0 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002412:	ea42 0208 	orr.w	r2, r2, r8
 8002416:	639a      	str	r2, [r3, #56]	; 0x38
 8002418:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800241a:	ea03 0308 	and.w	r3, r3, r8
 800241e:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002420:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002422:	2603      	movs	r6, #3
 8002424:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002426:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002428:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800242a:	f64f 033f 	movw	r3, #63551	; 0xf83f
 800242e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002432:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002436:	f004 fa77 	bl	8006928 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800243a:	481e      	ldr	r0, [pc, #120]	; (80024b4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800243c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800243e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002440:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002444:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002448:	f004 fa6e 	bl	8006928 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800244c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002450:	4819      	ldr	r0, [pc, #100]	; (80024b8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002452:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002454:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002456:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800245a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800245e:	f004 fa63 	bl	8006928 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002462:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002466:	4815      	ldr	r0, [pc, #84]	; (80024bc <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002468:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800246a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800246c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002470:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002474:	f004 fa58 	bl	8006928 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002478:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800247c:	4810      	ldr	r0, [pc, #64]	; (80024c0 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800247e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002480:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002482:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002486:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800248a:	f004 fa4d 	bl	8006928 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800248e:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002490:	480c      	ldr	r0, [pc, #48]	; (80024c4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002492:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002494:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002496:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800249a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800249e:	f004 fa43 	bl	8006928 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80024a2:	b006      	add	sp, #24
 80024a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80024a8:	200048f4 	.word	0x200048f4
 80024ac:	40023800 	.word	0x40023800
 80024b0:	40021400 	.word	0x40021400
 80024b4:	40020800 	.word	0x40020800
 80024b8:	40021800 	.word	0x40021800
 80024bc:	40021000 	.word	0x40021000
 80024c0:	40020c00 	.word	0x40020c00
 80024c4:	40020400 	.word	0x40020400

080024c8 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80024c8:	b530      	push	{r4, r5, lr}
 80024ca:	4601      	mov	r1, r0
 80024cc:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 80024ce:	2200      	movs	r2, #0
 80024d0:	202c      	movs	r0, #44	; 0x2c
 80024d2:	f004 f869 	bl	80065a8 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 80024d6:	202c      	movs	r0, #44	; 0x2c
 80024d8:	f004 f898 	bl	800660c <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 80024dc:	2500      	movs	r5, #0
 80024de:	4b15      	ldr	r3, [pc, #84]	; (8002534 <HAL_InitTick+0x6c>)
 80024e0:	9502      	str	r5, [sp, #8]
 80024e2:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 80024e4:	4c14      	ldr	r4, [pc, #80]	; (8002538 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 80024e6:	f042 0202 	orr.w	r2, r2, #2
 80024ea:	645a      	str	r2, [r3, #68]	; 0x44
 80024ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80024ee:	f003 0302 	and.w	r3, r3, #2
 80024f2:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80024f4:	a901      	add	r1, sp, #4
 80024f6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 80024f8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80024fa:	f005 fb8d 	bl	8007c18 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80024fe:	f005 fb7b 	bl	8007bf8 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8002502:	4b0e      	ldr	r3, [pc, #56]	; (800253c <HAL_InitTick+0x74>)
 8002504:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 8002506:	f240 33e7 	movw	r3, #999	; 0x3e7
 800250a:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 800250c:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 800250e:	4b0c      	ldr	r3, [pc, #48]	; (8002540 <HAL_InitTick+0x78>)
 8002510:	fbb0 f0f3 	udiv	r0, r0, r3
 8002514:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 8002516:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8002518:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 800251a:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 800251c:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 800251e:	f006 f937 	bl	8008790 <HAL_TIM_Base_Init>
 8002522:	b920      	cbnz	r0, 800252e <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 8002524:	4620      	mov	r0, r4
 8002526:	f006 f816 	bl	8008556 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 800252a:	b009      	add	sp, #36	; 0x24
 800252c:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 800252e:	2001      	movs	r0, #1
 8002530:	e7fb      	b.n	800252a <HAL_InitTick+0x62>
 8002532:	bf00      	nop
 8002534:	40023800 	.word	0x40023800
 8002538:	200048f8 	.word	0x200048f8
 800253c:	40010400 	.word	0x40010400
 8002540:	000f4240 	.word	0x000f4240

08002544 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002544:	4770      	bx	lr

08002546 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002546:	e7fe      	b.n	8002546 <HardFault_Handler>

08002548 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002548:	e7fe      	b.n	8002548 <MemManage_Handler>

0800254a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800254a:	e7fe      	b.n	800254a <BusFault_Handler>

0800254c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800254c:	e7fe      	b.n	800254c <UsageFault_Handler>

0800254e <DebugMon_Handler>:
 800254e:	4770      	bx	lr

08002550 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8002550:	4801      	ldr	r0, [pc, #4]	; (8002558 <TIM8_UP_TIM13_IRQHandler+0x8>)
 8002552:	f006 b814 	b.w	800857e <HAL_TIM_IRQHandler>
 8002556:	bf00      	nop
 8002558:	200048f8 	.word	0x200048f8

0800255c <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 800255c:	4801      	ldr	r0, [pc, #4]	; (8002564 <TIM7_IRQHandler+0x8>)
 800255e:	f006 b80e 	b.w	800857e <HAL_TIM_IRQHandler>
 8002562:	bf00      	nop
 8002564:	20003c1c 	.word	0x20003c1c

08002568 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002568:	4801      	ldr	r0, [pc, #4]	; (8002570 <LTDC_IRQHandler+0x8>)
 800256a:	f005 b819 	b.w	80075a0 <HAL_LTDC_IRQHandler>
 800256e:	bf00      	nop
 8002570:	20003ae8 	.word	0x20003ae8

08002574 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002574:	4801      	ldr	r0, [pc, #4]	; (800257c <DMA2D_IRQHandler+0x8>)
 8002576:	f004 b908 	b.w	800678a <HAL_DMA2D_IRQHandler>
 800257a:	bf00      	nop
 800257c:	20003a54 	.word	0x20003a54

08002580 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002580:	2001      	movs	r0, #1
 8002582:	4770      	bx	lr

08002584 <_kill>:

int _kill(int pid, int sig)
{
 8002584:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002586:	f01e fbed 	bl	8020d64 <__errno>
 800258a:	2316      	movs	r3, #22
 800258c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800258e:	f04f 30ff 	mov.w	r0, #4294967295
 8002592:	bd08      	pop	{r3, pc}

08002594 <_exit>:

void _exit (int status)
{
 8002594:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002596:	f01e fbe5 	bl	8020d64 <__errno>
 800259a:	2316      	movs	r3, #22
 800259c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800259e:	e7fe      	b.n	800259e <_exit+0xa>

080025a0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80025a0:	b570      	push	{r4, r5, r6, lr}
 80025a2:	460d      	mov	r5, r1
 80025a4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025a6:	460e      	mov	r6, r1
 80025a8:	1b73      	subs	r3, r6, r5
 80025aa:	429c      	cmp	r4, r3
 80025ac:	dc01      	bgt.n	80025b2 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80025ae:	4620      	mov	r0, r4
 80025b0:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80025b2:	f3af 8000 	nop.w
 80025b6:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025ba:	e7f5      	b.n	80025a8 <_read+0x8>

080025bc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80025bc:	b570      	push	{r4, r5, r6, lr}
 80025be:	460d      	mov	r5, r1
 80025c0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025c2:	460e      	mov	r6, r1
 80025c4:	1b73      	subs	r3, r6, r5
 80025c6:	429c      	cmp	r4, r3
 80025c8:	dc01      	bgt.n	80025ce <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80025ca:	4620      	mov	r0, r4
 80025cc:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80025ce:	f816 0b01 	ldrb.w	r0, [r6], #1
 80025d2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025d6:	e7f5      	b.n	80025c4 <_write+0x8>

080025d8 <_close>:

int _close(int file)
{
	return -1;
}
 80025d8:	f04f 30ff 	mov.w	r0, #4294967295
 80025dc:	4770      	bx	lr

080025de <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80025de:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80025e2:	604b      	str	r3, [r1, #4]
	return 0;
}
 80025e4:	2000      	movs	r0, #0
 80025e6:	4770      	bx	lr

080025e8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80025e8:	2001      	movs	r0, #1
 80025ea:	4770      	bx	lr

080025ec <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80025ec:	2000      	movs	r0, #0
 80025ee:	4770      	bx	lr

080025f0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80025f0:	4a0a      	ldr	r2, [pc, #40]	; (800261c <_sbrk+0x2c>)
 80025f2:	6811      	ldr	r1, [r2, #0]
{
 80025f4:	b508      	push	{r3, lr}
 80025f6:	4603      	mov	r3, r0
	if (heap_end == 0)
 80025f8:	b909      	cbnz	r1, 80025fe <_sbrk+0xe>
		heap_end = &end;
 80025fa:	4909      	ldr	r1, [pc, #36]	; (8002620 <_sbrk+0x30>)
 80025fc:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80025fe:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002600:	4669      	mov	r1, sp
 8002602:	4403      	add	r3, r0
 8002604:	428b      	cmp	r3, r1
 8002606:	d906      	bls.n	8002616 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002608:	f01e fbac 	bl	8020d64 <__errno>
 800260c:	230c      	movs	r3, #12
 800260e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002610:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002614:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002616:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002618:	e7fc      	b.n	8002614 <_sbrk+0x24>
 800261a:	bf00      	nop
 800261c:	20004938 	.word	0x20004938
 8002620:	20015ab0 	.word	0x20015ab0

08002624 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002624:	4770      	bx	lr

08002626 <_ZN23ApplicationFontProviderD0Ev>:
 8002626:	b510      	push	{r4, lr}
 8002628:	2104      	movs	r1, #4
 800262a:	4604      	mov	r4, r0
 800262c:	f01e fab4 	bl	8020b98 <_ZdlPvj>
 8002630:	4620      	mov	r0, r4
 8002632:	bd10      	pop	{r4, pc}

08002634 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002634:	2901      	cmp	r1, #1
{
 8002636:	b508      	push	{r3, lr}
    switch (typography)
 8002638:	d006      	beq.n	8002648 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800263a:	2902      	cmp	r1, #2
 800263c:	d008      	beq.n	8002650 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800263e:	b959      	cbnz	r1, 8002658 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002640:	f002 fdf8 	bl	8005234 <_ZN17TypedTextDatabase8getFontsEv>
 8002644:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002646:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002648:	f002 fdf4 	bl	8005234 <_ZN17TypedTextDatabase8getFontsEv>
 800264c:	6840      	ldr	r0, [r0, #4]
 800264e:	e7fa      	b.n	8002646 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002650:	f002 fdf0 	bl	8005234 <_ZN17TypedTextDatabase8getFontsEv>
 8002654:	6880      	ldr	r0, [r0, #8]
 8002656:	e7f6      	b.n	8002646 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002658:	2000      	movs	r0, #0
 800265a:	e7f4      	b.n	8002646 <_ZN23ApplicationFontProvider7getFontEt+0x12>

0800265c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800265c:	4800      	ldr	r0, [pc, #0]	; (8002660 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800265e:	4770      	bx	lr
 8002660:	08022618 	.word	0x08022618

08002664 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002664:	200d      	movs	r0, #13
 8002666:	4770      	bx	lr

08002668 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002668:	b513      	push	{r0, r1, r4, lr}
 800266a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800266c:	b151      	cbz	r1, 8002684 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800266e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002670:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002672:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002676:	aa01      	add	r2, sp, #4
 8002678:	689c      	ldr	r4, [r3, #8]
 800267a:	f10d 0303 	add.w	r3, sp, #3
 800267e:	47a0      	blx	r4
        return glyph;
    }
 8002680:	b002      	add	sp, #8
 8002682:	bd10      	pop	{r4, pc}
            return 0;
 8002684:	4608      	mov	r0, r1
 8002686:	e7fb      	b.n	8002680 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002688 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002688:	8940      	ldrh	r0, [r0, #10]
 800268a:	4770      	bx	lr

0800268c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800268c:	8980      	ldrh	r0, [r0, #12]
 800268e:	4770      	bx	lr

08002690 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002690:	8880      	ldrh	r0, [r0, #4]
 8002692:	4770      	bx	lr

08002694 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002694:	7983      	ldrb	r3, [r0, #6]
 8002696:	8880      	ldrh	r0, [r0, #4]
 8002698:	4418      	add	r0, r3
    }
 800269a:	b280      	uxth	r0, r0
 800269c:	4770      	bx	lr

0800269e <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800269e:	79c0      	ldrb	r0, [r0, #7]
    }
 80026a0:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80026a4:	4770      	bx	lr

080026a6 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80026a6:	79c0      	ldrb	r0, [r0, #7]
    }
 80026a8:	09c0      	lsrs	r0, r0, #7
 80026aa:	4770      	bx	lr

080026ac <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80026ac:	4770      	bx	lr

080026ae <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80026ae:	b510      	push	{r4, lr}
    }
 80026b0:	2108      	movs	r1, #8
    virtual ~TypedText()
 80026b2:	4604      	mov	r4, r0
    }
 80026b4:	f01e fa70 	bl	8020b98 <_ZdlPvj>
 80026b8:	4620      	mov	r0, r4
 80026ba:	bd10      	pop	{r4, pc}

080026bc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80026bc:	4770      	bx	lr

080026be <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80026be:	4770      	bx	lr

080026c0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80026c0:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 80026c4:	6808      	ldr	r0, [r1, #0]
 80026c6:	6849      	ldr	r1, [r1, #4]
 80026c8:	c303      	stmia	r3!, {r0, r1}
    }
 80026ca:	4770      	bx	lr

080026cc <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80026cc:	2000      	movs	r0, #0
 80026ce:	4770      	bx	lr

080026d0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80026d0:	8081      	strh	r1, [r0, #4]
    }
 80026d2:	4770      	bx	lr

080026d4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80026d4:	80c1      	strh	r1, [r0, #6]
    }
 80026d6:	4770      	bx	lr

080026d8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80026d8:	8101      	strh	r1, [r0, #8]
    }
 80026da:	4770      	bx	lr

080026dc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80026dc:	8141      	strh	r1, [r0, #10]
    }
 80026de:	4770      	bx	lr

080026e0 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80026e0:	4770      	bx	lr

080026e2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80026e2:	4770      	bx	lr

080026e4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80026e4:	4770      	bx	lr

080026e6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80026e6:	4770      	bx	lr

080026e8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80026e8:	4770      	bx	lr

080026ea <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80026ea:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80026ec:	88c4      	ldrh	r4, [r0, #6]
 80026ee:	6803      	ldr	r3, [r0, #0]
 80026f0:	1b12      	subs	r2, r2, r4
 80026f2:	8884      	ldrh	r4, [r0, #4]
 80026f4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026f6:	1b09      	subs	r1, r1, r4
 80026f8:	b212      	sxth	r2, r2
    }
 80026fa:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80026fe:	b209      	sxth	r1, r1
 8002700:	4718      	bx	r3

08002702 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002702:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002706:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002708:	f04f 33ff 	mov.w	r3, #4294967295
 800270c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800270e:	6813      	ldr	r3, [r2, #0]
 8002710:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002712:	6010      	str	r0, [r2, #0]
    }
 8002714:	4770      	bx	lr

08002716 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002716:	4770      	bx	lr

08002718 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002718:	4770      	bx	lr

0800271a <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800271a:	6041      	str	r1, [r0, #4]
    }
 800271c:	4770      	bx	lr

0800271e <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800271e:	4770      	bx	lr

08002720 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002720:	4b06      	ldr	r3, [pc, #24]	; (800273c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002722:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002726:	2300      	movs	r3, #0
 8002728:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800272c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002730:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002734:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002738:	4770      	bx	lr
 800273a:	bf00      	nop
 800273c:	08002851 	.word	0x08002851

08002740 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002740:	2301      	movs	r3, #1
 8002742:	7203      	strb	r3, [r0, #8]
    }
 8002744:	4770      	bx	lr

08002746 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002746:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800274a:	b11a      	cbz	r2, 8002754 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800274c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002750:	b102      	cbz	r2, 8002754 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002752:	6018      	str	r0, [r3, #0]
        }
    }
 8002754:	4770      	bx	lr

08002756 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 8002756:	4770      	bx	lr

08002758 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 8002758:	4770      	bx	lr

0800275a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800275a:	4770      	bx	lr

0800275c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800275c:	4770      	bx	lr

0800275e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 800275e:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002760:	6840      	ldr	r0, [r0, #4]
 8002762:	6803      	ldr	r3, [r0, #0]
 8002764:	3110      	adds	r1, #16
 8002766:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002768:	4718      	bx	r3

0800276a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 800276a:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800276c:	6840      	ldr	r0, [r0, #4]
 800276e:	6803      	ldr	r3, [r0, #0]
 8002770:	3110      	adds	r1, #16
 8002772:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002774:	4718      	bx	r3

08002776 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8002776:	4770      	bx	lr

08002778 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 8002778:	4770      	bx	lr

0800277a <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 800277a:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800277c:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 800277e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002782:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002786:	8002      	strh	r2, [r0, #0]
 8002788:	8042      	strh	r2, [r0, #2]
 800278a:	8084      	strh	r4, [r0, #4]
 800278c:	80c1      	strh	r1, [r0, #6]
        }
 800278e:	bd10      	pop	{r4, pc}

08002790 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002790:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002792:	68c2      	ldr	r2, [r0, #12]
 8002794:	6841      	ldr	r1, [r0, #4]
 8002796:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002798:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800279a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800279e:	07d2      	lsls	r2, r2, #31
 80027a0:	bf48      	it	mi
 80027a2:	590a      	ldrmi	r2, [r1, r4]
 80027a4:	689b      	ldr	r3, [r3, #8]
    }
 80027a6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80027aa:	bf48      	it	mi
 80027ac:	58d3      	ldrmi	r3, [r2, r3]
 80027ae:	4718      	bx	r3

080027b0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80027b0:	6843      	ldr	r3, [r0, #4]
 80027b2:	b12b      	cbz	r3, 80027c0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80027b4:	6883      	ldr	r3, [r0, #8]
 80027b6:	b92b      	cbnz	r3, 80027c4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80027b8:	68c0      	ldr	r0, [r0, #12]
 80027ba:	f000 0001 	and.w	r0, r0, #1
 80027be:	4770      	bx	lr
 80027c0:	4618      	mov	r0, r3
 80027c2:	4770      	bx	lr
 80027c4:	2001      	movs	r0, #1
    }
 80027c6:	4770      	bx	lr

080027c8 <_ZN8touchgfx12NoTransitionD0Ev>:
 80027c8:	b510      	push	{r4, lr}
 80027ca:	210c      	movs	r1, #12
 80027cc:	4604      	mov	r4, r0
 80027ce:	f01e f9e3 	bl	8020b98 <_ZdlPvj>
 80027d2:	4620      	mov	r0, r4
 80027d4:	bd10      	pop	{r4, pc}

080027d6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80027d6:	b510      	push	{r4, lr}
 80027d8:	2110      	movs	r1, #16
 80027da:	4604      	mov	r4, r0
 80027dc:	f01e f9dc 	bl	8020b98 <_ZdlPvj>
 80027e0:	4620      	mov	r0, r4
 80027e2:	bd10      	pop	{r4, pc}

080027e4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80027e4:	b510      	push	{r4, lr}
 80027e6:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80027ea:	4604      	mov	r4, r0
 80027ec:	f01e f9d4 	bl	8020b98 <_ZdlPvj>
 80027f0:	4620      	mov	r0, r4
 80027f2:	bd10      	pop	{r4, pc}

080027f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80027f4:	b510      	push	{r4, lr}
 80027f6:	2138      	movs	r1, #56	; 0x38
 80027f8:	4604      	mov	r4, r0
 80027fa:	f01e f9cd 	bl	8020b98 <_ZdlPvj>
 80027fe:	4620      	mov	r0, r4
 8002800:	bd10      	pop	{r4, pc}

08002802 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002802:	b510      	push	{r4, lr}
 8002804:	2128      	movs	r1, #40	; 0x28
 8002806:	4604      	mov	r4, r0
 8002808:	f01e f9c6 	bl	8020b98 <_ZdlPvj>
 800280c:	4620      	mov	r0, r4
 800280e:	bd10      	pop	{r4, pc}

08002810 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002810:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002812:	f00e fea5 	bl	8011560 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002816:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800281a:	f00f ba45 	b.w	8011ca8 <_ZN8touchgfx11Application10invalidateEv>

0800281e <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800281e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002822:	b112      	cbz	r2, 800282a <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002824:	6803      	ldr	r3, [r0, #0]
 8002826:	695b      	ldr	r3, [r3, #20]
 8002828:	4718      	bx	r3
    }
 800282a:	4770      	bx	lr

0800282c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800282c:	b510      	push	{r4, lr}
 800282e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002830:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002834:	b158      	cbz	r0, 800284e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002836:	6803      	ldr	r3, [r0, #0]
 8002838:	68db      	ldr	r3, [r3, #12]
 800283a:	4798      	blx	r3
 800283c:	b138      	cbz	r0, 800284e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800283e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002842:	6803      	ldr	r3, [r0, #0]
 8002844:	689b      	ldr	r3, [r3, #8]
 8002846:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002848:	2300      	movs	r3, #0
 800284a:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800284e:	bd10      	pop	{r4, pc}

08002850 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002850:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002854:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002858:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800285a:	68a8      	ldr	r0, [r5, #8]
 800285c:	6803      	ldr	r3, [r0, #0]
 800285e:	6a1b      	ldr	r3, [r3, #32]
 8002860:	4798      	blx	r3
 8002862:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 8002866:	d205      	bcs.n	8002874 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002868:	4b45      	ldr	r3, [pc, #276]	; (8002980 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800286a:	4a46      	ldr	r2, [pc, #280]	; (8002984 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800286c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800286e:	4846      	ldr	r0, [pc, #280]	; (8002988 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002870:	f01e fa46 	bl	8020d00 <__assert_func>
 8002874:	6868      	ldr	r0, [r5, #4]
 8002876:	6803      	ldr	r3, [r0, #0]
 8002878:	6a1b      	ldr	r3, [r3, #32]
 800287a:	4798      	blx	r3
 800287c:	280f      	cmp	r0, #15
 800287e:	d803      	bhi.n	8002888 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002880:	4b42      	ldr	r3, [pc, #264]	; (800298c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002882:	4a40      	ldr	r2, [pc, #256]	; (8002984 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002884:	21a4      	movs	r1, #164	; 0xa4
 8002886:	e7f2      	b.n	800286e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002888:	68e8      	ldr	r0, [r5, #12]
 800288a:	6803      	ldr	r3, [r0, #0]
 800288c:	6a1b      	ldr	r3, [r3, #32]
 800288e:	4798      	blx	r3
 8002890:	280b      	cmp	r0, #11
 8002892:	d803      	bhi.n	800289c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002894:	4b3e      	ldr	r3, [pc, #248]	; (8002990 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002896:	4a3b      	ldr	r2, [pc, #236]	; (8002984 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002898:	21a5      	movs	r1, #165	; 0xa5
 800289a:	e7e8      	b.n	800286e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 800289c:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002998 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80028a0:	f00e fe5e 	bl	8011560 <_ZN8touchgfx11Application11getInstanceEv>
 80028a4:	f00e fe62 	bl	801156c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80028a8:	f8d9 0000 	ldr.w	r0, [r9]
 80028ac:	b110      	cbz	r0, 80028b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80028ae:	6803      	ldr	r3, [r0, #0]
 80028b0:	68db      	ldr	r3, [r3, #12]
 80028b2:	4798      	blx	r3
    if (*currentTrans)
 80028b4:	f8d9 0000 	ldr.w	r0, [r9]
 80028b8:	b110      	cbz	r0, 80028c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80028ba:	6803      	ldr	r3, [r0, #0]
 80028bc:	681b      	ldr	r3, [r3, #0]
 80028be:	4798      	blx	r3
    if (*currentScreen)
 80028c0:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800299c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 80028c4:	f8d8 0000 	ldr.w	r0, [r8]
 80028c8:	b110      	cbz	r0, 80028d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80028ca:	6803      	ldr	r3, [r0, #0]
 80028cc:	695b      	ldr	r3, [r3, #20]
 80028ce:	4798      	blx	r3
    if (*currentPresenter)
 80028d0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80028d4:	b110      	cbz	r0, 80028dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80028d6:	6803      	ldr	r3, [r0, #0]
 80028d8:	685b      	ldr	r3, [r3, #4]
 80028da:	4798      	blx	r3
    if (*currentScreen)
 80028dc:	f8d8 0000 	ldr.w	r0, [r8]
 80028e0:	b110      	cbz	r0, 80028e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80028e2:	6803      	ldr	r3, [r0, #0]
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	4798      	blx	r3
    if (*currentPresenter)
 80028e8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80028ec:	b110      	cbz	r0, 80028f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80028ee:	6803      	ldr	r3, [r0, #0]
 80028f0:	689b      	ldr	r3, [r3, #8]
 80028f2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80028f4:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80028f6:	6803      	ldr	r3, [r0, #0]
 80028f8:	2100      	movs	r1, #0
 80028fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028fc:	4798      	blx	r3
        : screenContainer(0), done(false)
 80028fe:	f04f 0b00 	mov.w	fp, #0
 8002902:	4b24      	ldr	r3, [pc, #144]	; (8002994 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002904:	6003      	str	r3, [r0, #0]
 8002906:	4604      	mov	r4, r0
 8002908:	f8c0 b004 	str.w	fp, [r0, #4]
 800290c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002910:	68a8      	ldr	r0, [r5, #8]
 8002912:	6803      	ldr	r3, [r0, #0]
 8002914:	4659      	mov	r1, fp
 8002916:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002918:	4798      	blx	r3
 800291a:	4606      	mov	r6, r0
 800291c:	f002 fdc8 	bl	80054b0 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002920:	6868      	ldr	r0, [r5, #4]
 8002922:	6803      	ldr	r3, [r0, #0]
 8002924:	4659      	mov	r1, fp
 8002926:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002928:	4798      	blx	r3
 800292a:	4631      	mov	r1, r6
 800292c:	4605      	mov	r5, r0
 800292e:	f002 fd13 	bl	8005358 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002932:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002936:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800293a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800293e:	b1e5      	cbz	r5, 800297a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002940:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002942:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002946:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayCurrentValue() {};
    virtual void DisplayChargingFinished() {};

    void bind(Model* m)
    {
        model = m;
 8002948:	f8c5 a008 	str.w	sl, [r5, #8]
 800294c:	4630      	mov	r0, r6
 800294e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002950:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002952:	4798      	blx	r3
    newPresenter->activate();
 8002954:	682b      	ldr	r3, [r5, #0]
 8002956:	4628      	mov	r0, r5
 8002958:	681b      	ldr	r3, [r3, #0]
 800295a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800295c:	4621      	mov	r1, r4
 800295e:	4630      	mov	r0, r6
 8002960:	f010 faac 	bl	8012ebc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002964:	6823      	ldr	r3, [r4, #0]
 8002966:	4620      	mov	r0, r4
 8002968:	691b      	ldr	r3, [r3, #16]
 800296a:	4798      	blx	r3
    newTransition->invalidate();
 800296c:	6823      	ldr	r3, [r4, #0]
 800296e:	695b      	ldr	r3, [r3, #20]
 8002970:	4620      	mov	r0, r4
}
 8002972:	b001      	add	sp, #4
 8002974:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002978:	4718      	bx	r3
    model->bind(newPresenter);
 800297a:	462b      	mov	r3, r5
 800297c:	e7e1      	b.n	8002942 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 800297e:	bf00      	nop
 8002980:	0802272c 	.word	0x0802272c
 8002984:	080227ba 	.word	0x080227ba
 8002988:	080228be 	.word	0x080228be
 800298c:	08022905 	.word	0x08022905
 8002990:	080229a8 	.word	0x080229a8
 8002994:	08022bd8 	.word	0x08022bd8
 8002998:	20015848 	.word	0x20015848
 800299c:	20015844 	.word	0x20015844

080029a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 80029a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80029a4:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 80029a8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80029aa:	f8db 0008 	ldr.w	r0, [fp, #8]
 80029ae:	6803      	ldr	r3, [r0, #0]
 80029b0:	6a1b      	ldr	r3, [r3, #32]
 80029b2:	4798      	blx	r3
 80029b4:	f242 733b 	movw	r3, #10043	; 0x273b
 80029b8:	4298      	cmp	r0, r3
 80029ba:	d805      	bhi.n	80029c8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x28>
 80029bc:	4b56      	ldr	r3, [pc, #344]	; (8002b18 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x178>)
 80029be:	4a57      	ldr	r2, [pc, #348]	; (8002b1c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80029c0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80029c2:	4857      	ldr	r0, [pc, #348]	; (8002b20 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x180>)
 80029c4:	f01e f99c 	bl	8020d00 <__assert_func>
 80029c8:	f8db 0004 	ldr.w	r0, [fp, #4]
 80029cc:	6803      	ldr	r3, [r0, #0]
 80029ce:	6a1b      	ldr	r3, [r3, #32]
 80029d0:	4798      	blx	r3
 80029d2:	280f      	cmp	r0, #15
 80029d4:	d803      	bhi.n	80029de <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3e>
 80029d6:	4b53      	ldr	r3, [pc, #332]	; (8002b24 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x184>)
 80029d8:	4a50      	ldr	r2, [pc, #320]	; (8002b1c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80029da:	21a4      	movs	r1, #164	; 0xa4
 80029dc:	e7f1      	b.n	80029c2 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80029de:	f8db 000c 	ldr.w	r0, [fp, #12]
 80029e2:	6803      	ldr	r3, [r0, #0]
 80029e4:	6a1b      	ldr	r3, [r3, #32]
 80029e6:	4798      	blx	r3
 80029e8:	2837      	cmp	r0, #55	; 0x37
 80029ea:	d803      	bhi.n	80029f4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x54>
 80029ec:	4b4e      	ldr	r3, [pc, #312]	; (8002b28 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x188>)
 80029ee:	4a4b      	ldr	r2, [pc, #300]	; (8002b1c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80029f0:	21a5      	movs	r1, #165	; 0xa5
 80029f2:	e7e6      	b.n	80029c2 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    if (*currentTrans)
 80029f4:	f8df 9144 	ldr.w	r9, [pc, #324]	; 8002b3c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 80029f8:	f00e fdb2 	bl	8011560 <_ZN8touchgfx11Application11getInstanceEv>
 80029fc:	f00e fdb6 	bl	801156c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002a00:	f8d9 0000 	ldr.w	r0, [r9]
 8002a04:	b110      	cbz	r0, 8002a0c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 8002a06:	6803      	ldr	r3, [r0, #0]
 8002a08:	68db      	ldr	r3, [r3, #12]
 8002a0a:	4798      	blx	r3
    if (*currentTrans)
 8002a0c:	f8d9 0000 	ldr.w	r0, [r9]
 8002a10:	b110      	cbz	r0, 8002a18 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 8002a12:	6803      	ldr	r3, [r0, #0]
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	4798      	blx	r3
    if (*currentScreen)
 8002a18:	f8df 8124 	ldr.w	r8, [pc, #292]	; 8002b40 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x1a0>
 8002a1c:	f8d8 0000 	ldr.w	r0, [r8]
 8002a20:	b110      	cbz	r0, 8002a28 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 8002a22:	6803      	ldr	r3, [r0, #0]
 8002a24:	695b      	ldr	r3, [r3, #20]
 8002a26:	4798      	blx	r3
    if (*currentPresenter)
 8002a28:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002a2c:	b110      	cbz	r0, 8002a34 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 8002a2e:	6803      	ldr	r3, [r0, #0]
 8002a30:	685b      	ldr	r3, [r3, #4]
 8002a32:	4798      	blx	r3
    if (*currentScreen)
 8002a34:	f8d8 0000 	ldr.w	r0, [r8]
 8002a38:	b110      	cbz	r0, 8002a40 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 8002a3a:	6803      	ldr	r3, [r0, #0]
 8002a3c:	681b      	ldr	r3, [r3, #0]
 8002a3e:	4798      	blx	r3
    if (*currentPresenter)
 8002a40:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002a44:	b110      	cbz	r0, 8002a4c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 8002a46:	6803      	ldr	r3, [r0, #0]
 8002a48:	689b      	ldr	r3, [r3, #8]
 8002a4a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002a4c:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002a50:	6803      	ldr	r3, [r0, #0]
 8002a52:	2100      	movs	r1, #0
 8002a54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a56:	4798      	blx	r3
          solid()
 8002a58:	4b34      	ldr	r3, [pc, #208]	; (8002b2c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x18c>)
 8002a5a:	6003      	str	r3, [r0, #0]
 8002a5c:	4604      	mov	r4, r0
 8002a5e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002a62:	8103      	strh	r3, [r0, #8]
 8002a64:	2500      	movs	r5, #0
 8002a66:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002a6a:	6045      	str	r5, [r0, #4]
 8002a6c:	7285      	strb	r5, [r0, #10]
 8002a6e:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002a70:	4b2f      	ldr	r3, [pc, #188]	; (8002b30 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x190>)
 8002a72:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 8002a74:	4b2f      	ldr	r3, [pc, #188]	; (8002b34 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x194>)
          solid()
 8002a76:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_WIDTH;
 8002a78:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002a7c:	4b2e      	ldr	r3, [pc, #184]	; (8002b38 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002a7e:	81a1      	strh	r1, [r4, #12]
          solid()
 8002a80:	3010      	adds	r0, #16
 8002a82:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8002a86:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002a8a:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002a8e:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002a92:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 8002a96:	9001      	str	r0, [sp, #4]
 8002a98:	f7ff fe1e 	bl	80026d8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002a9c:	6923      	ldr	r3, [r4, #16]
 8002a9e:	9801      	ldr	r0, [sp, #4]
 8002aa0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002aa2:	4631      	mov	r1, r6
 8002aa4:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002aa6:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002aaa:	6803      	ldr	r3, [r0, #0]
 8002aac:	4629      	mov	r1, r5
 8002aae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ab0:	4798      	blx	r3
 8002ab2:	4606      	mov	r6, r0
 8002ab4:	f003 f866 	bl	8005b84 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002ab8:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002abc:	6803      	ldr	r3, [r0, #0]
 8002abe:	4629      	mov	r1, r5
 8002ac0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ac2:	4798      	blx	r3
 8002ac4:	4631      	mov	r1, r6
 8002ac6:	4605      	mov	r5, r0
 8002ac8:	f002 fd4c 	bl	8005564 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 8002acc:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002ad0:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002ad4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002ad8:	b1e5      	cbz	r5, 8002b14 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x174>
 8002ada:	1d2b      	adds	r3, r5, #4
 8002adc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002ae0:	6833      	ldr	r3, [r6, #0]
 8002ae2:	f8c5 a008 	str.w	sl, [r5, #8]
 8002ae6:	4630      	mov	r0, r6
 8002ae8:	68db      	ldr	r3, [r3, #12]
 8002aea:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002aec:	4798      	blx	r3
    newPresenter->activate();
 8002aee:	682b      	ldr	r3, [r5, #0]
 8002af0:	4628      	mov	r0, r5
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002af6:	4621      	mov	r1, r4
 8002af8:	4630      	mov	r0, r6
 8002afa:	f010 f9df 	bl	8012ebc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002afe:	6823      	ldr	r3, [r4, #0]
 8002b00:	4620      	mov	r0, r4
 8002b02:	691b      	ldr	r3, [r3, #16]
 8002b04:	4798      	blx	r3
    newTransition->invalidate();
 8002b06:	6823      	ldr	r3, [r4, #0]
 8002b08:	695b      	ldr	r3, [r3, #20]
 8002b0a:	4620      	mov	r0, r4
}
 8002b0c:	b003      	add	sp, #12
 8002b0e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b12:	4718      	bx	r3
    model->bind(newPresenter);
 8002b14:	462b      	mov	r3, r5
 8002b16:	e7e1      	b.n	8002adc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 8002b18:	0802272c 	.word	0x0802272c
 8002b1c:	08022a4b 	.word	0x08022a4b
 8002b20:	080228be 	.word	0x080228be
 8002b24:	08022905 	.word	0x08022905
 8002b28:	080229a8 	.word	0x080229a8
 8002b2c:	08022c64 	.word	0x08022c64
 8002b30:	08022bfc 	.word	0x08022bfc
 8002b34:	200157f4 	.word	0x200157f4
 8002b38:	200157f6 	.word	0x200157f6
 8002b3c:	20015848 	.word	0x20015848
 8002b40:	20015844 	.word	0x20015844

08002b44 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002b44:	4b04      	ldr	r3, [pc, #16]	; (8002b58 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002b46:	681b      	ldr	r3, [r3, #0]
 8002b48:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002b4c:	b10a      	cbz	r2, 8002b52 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002b4e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002b50:	b900      	cbnz	r0, 8002b54 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002b52:	6898      	ldr	r0, [r3, #8]
    }
 8002b54:	4770      	bx	lr
 8002b56:	bf00      	nop
 8002b58:	20015800 	.word	0x20015800

08002b5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b5e:	4604      	mov	r4, r0
        animationCounter++;
 8002b60:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 8002b62:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002b64:	3001      	adds	r0, #1
 8002b66:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002b68:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 8002b6a:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002b6c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002b6e:	d850      	bhi.n	8002c12 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002b70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002b74:	2100      	movs	r1, #0
 8002b76:	f010 f9a7 	bl	8012ec8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002b7a:	f010 0201 	ands.w	r2, r0, #1
 8002b7e:	b283      	uxth	r3, r0
 8002b80:	d04d      	beq.n	8002c1e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002b82:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002b86:	2800      	cmp	r0, #0
 8002b88:	bfd8      	it	le
 8002b8a:	460a      	movle	r2, r1
 8002b8c:	4413      	add	r3, r2
 8002b8e:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002b90:	4e24      	ldr	r6, [pc, #144]	; (8002c24 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002b92:	4f25      	ldr	r7, [pc, #148]	; (8002c28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002b94:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002b96:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002b9a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002b9c:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002ba0:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002ba4:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002ba6:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002ba8:	4463      	add	r3, ip
 8002baa:	1a5b      	subs	r3, r3, r1
 8002bac:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002bb0:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002bb2:	b212      	sxth	r2, r2
 8002bb4:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 8002bb6:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002bb8:	8322      	strh	r2, [r4, #24]
 8002bba:	f8ad 2018 	strh.w	r2, [sp, #24]
 8002bbe:	f8ad 501a 	strh.w	r5, [sp, #26]
 8002bc2:	a906      	add	r1, sp, #24
 8002bc4:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002bc6:	7aa3      	ldrb	r3, [r4, #10]
 8002bc8:	2b01      	cmp	r3, #1
 8002bca:	d126      	bne.n	8002c1a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002bcc:	4b17      	ldr	r3, [pc, #92]	; (8002c2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 8002bce:	781b      	ldrb	r3, [r3, #0]
 8002bd0:	b31b      	cbz	r3, 8002c1a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002bd2:	69a1      	ldr	r1, [r4, #24]
 8002bd4:	6960      	ldr	r0, [r4, #20]
 8002bd6:	ab04      	add	r3, sp, #16
 8002bd8:	c303      	stmia	r3!, {r0, r1}
        return instance;
 8002bda:	4b15      	ldr	r3, [pc, #84]	; (8002c30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8002bdc:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002bde:	6803      	ldr	r3, [r0, #0]
 8002be0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002be2:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002be4:	8833      	ldrh	r3, [r6, #0]
 8002be6:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 8002bea:	883b      	ldrh	r3, [r7, #0]
 8002bec:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002bf0:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 8002bf2:	f8ad 5018 	strh.w	r5, [sp, #24]
 8002bf6:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 8002bfa:	f7ff ffa3 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 8002bfe:	22ff      	movs	r2, #255	; 0xff
 8002c00:	6803      	ldr	r3, [r0, #0]
 8002c02:	9200      	str	r2, [sp, #0]
 8002c04:	9501      	str	r5, [sp, #4]
 8002c06:	68dc      	ldr	r4, [r3, #12]
 8002c08:	9903      	ldr	r1, [sp, #12]
 8002c0a:	ab04      	add	r3, sp, #16
 8002c0c:	aa06      	add	r2, sp, #24
 8002c0e:	47a0      	blx	r4
 8002c10:	e003      	b.n	8002c1a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 8002c12:	2301      	movs	r3, #1
 8002c14:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002c16:	2300      	movs	r3, #0
 8002c18:	72a3      	strb	r3, [r4, #10]
    }
 8002c1a:	b009      	add	sp, #36	; 0x24
 8002c1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002c1e:	81e0      	strh	r0, [r4, #14]
 8002c20:	e7b6      	b.n	8002b90 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 8002c22:	bf00      	nop
 8002c24:	200157f4 	.word	0x200157f4
 8002c28:	200157f6 	.word	0x200157f6
 8002c2c:	200157fe 	.word	0x200157fe
 8002c30:	20015800 	.word	0x20015800

08002c34 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002c34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c36:	4604      	mov	r4, r0
 8002c38:	4617      	mov	r7, r2
 8002c3a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002c3c:	f00e fcb0 	bl	80115a0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002c40:	4b0e      	ldr	r3, [pc, #56]	; (8002c7c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 8002c42:	601c      	str	r4, [r3, #0]
      model(m)
 8002c44:	4b0e      	ldr	r3, [pc, #56]	; (8002c80 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 8002c46:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002c48:	4b0e      	ldr	r3, [pc, #56]	; (8002c84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002c4a:	2500      	movs	r5, #0
 8002c4c:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002c50:	4b0d      	ldr	r3, [pc, #52]	; (8002c88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002c52:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002c56:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002c58:	6803      	ldr	r3, [r0, #0]
 8002c5a:	4629      	mov	r1, r5
 8002c5c:	689b      	ldr	r3, [r3, #8]
 8002c5e:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002c62:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002c66:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002c68:	4628      	mov	r0, r5
 8002c6a:	f002 fa97 	bl	800519c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002c6e:	f7ff ff69 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 8002c72:	f016 fd82 	bl	801977a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002c76:	4620      	mov	r0, r4
 8002c78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002c7a:	bf00      	nop
 8002c7c:	20015854 	.word	0x20015854
 8002c80:	08022b8c 	.word	0x08022b8c
 8002c84:	08022b74 	.word	0x08022b74
 8002c88:	20015800 	.word	0x20015800

08002c8c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002c8c:	4b06      	ldr	r3, [pc, #24]	; (8002ca8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002c8e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002c92:	2300      	movs	r3, #0
 8002c94:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002c98:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002c9c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002ca0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002ca4:	4770      	bx	lr
 8002ca6:	bf00      	nop
 8002ca8:	08002851 	.word	0x08002851

08002cac <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002cac:	4b06      	ldr	r3, [pc, #24]	; (8002cc8 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 8002cae:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002cb2:	2300      	movs	r3, #0
 8002cb4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002cb8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002cbc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002cc0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002cc4:	4770      	bx	lr
 8002cc6:	bf00      	nop
 8002cc8:	080029a1 	.word	0x080029a1

08002ccc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002ccc:	6a00      	ldr	r0, [r0, #32]
 8002cce:	4770      	bx	lr

08002cd0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002cd0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002cd2:	4770      	bx	lr

08002cd4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002cd4:	4770      	bx	lr

08002cd6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002cd6:	888b      	ldrh	r3, [r1, #4]
 8002cd8:	6980      	ldr	r0, [r0, #24]
 8002cda:	680a      	ldr	r2, [r1, #0]
 8002cdc:	0adb      	lsrs	r3, r3, #11
 8002cde:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002ce2:	4410      	add	r0, r2
 8002ce4:	4770      	bx	lr

08002ce6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002ce6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002ce8:	b1c2      	cbz	r2, 8002d1c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002cea:	7b13      	ldrb	r3, [r2, #12]
 8002cec:	b1b3      	cbz	r3, 8002d1c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002cee:	7b54      	ldrb	r4, [r2, #13]
 8002cf0:	7ad2      	ldrb	r2, [r2, #11]
 8002cf2:	0224      	lsls	r4, r4, #8
 8002cf4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002cf8:	4314      	orrs	r4, r2
 8002cfa:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002cfc:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002cfe:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002d02:	8813      	ldrh	r3, [r2, #0]
 8002d04:	428b      	cmp	r3, r1
 8002d06:	d102      	bne.n	8002d0e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002d08:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002d0c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002d0e:	d805      	bhi.n	8002d1c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002d10:	3801      	subs	r0, #1
 8002d12:	b280      	uxth	r0, r0
 8002d14:	3204      	adds	r2, #4
 8002d16:	2800      	cmp	r0, #0
 8002d18:	d1f3      	bne.n	8002d02 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002d1a:	e7f7      	b.n	8002d0c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002d1c:	2000      	movs	r0, #0
 8002d1e:	e7f5      	b.n	8002d0c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002d20 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002d20:	b510      	push	{r4, lr}
 8002d22:	2128      	movs	r1, #40	; 0x28
 8002d24:	4604      	mov	r4, r0
 8002d26:	f01d ff37 	bl	8020b98 <_ZdlPvj>
 8002d2a:	4620      	mov	r0, r4
 8002d2c:	bd10      	pop	{r4, pc}
	...

08002d30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002d30:	b530      	push	{r4, r5, lr}
 8002d32:	b089      	sub	sp, #36	; 0x24
 8002d34:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002d36:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002d3a:	9506      	str	r5, [sp, #24]
 8002d3c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002d40:	9505      	str	r5, [sp, #20]
 8002d42:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002d46:	9504      	str	r5, [sp, #16]
 8002d48:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002d4c:	9503      	str	r5, [sp, #12]
 8002d4e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002d52:	9502      	str	r5, [sp, #8]
 8002d54:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002d58:	9501      	str	r5, [sp, #4]
 8002d5a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002d5e:	9500      	str	r5, [sp, #0]
 8002d60:	f00f fc42 	bl	80125e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002d64:	4b06      	ldr	r3, [pc, #24]	; (8002d80 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002d66:	6023      	str	r3, [r4, #0]
 8002d68:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002d6a:	61a3      	str	r3, [r4, #24]
 8002d6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002d6e:	61e3      	str	r3, [r4, #28]
 8002d70:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002d72:	6223      	str	r3, [r4, #32]
 8002d74:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002d76:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002d78:	4620      	mov	r0, r4
 8002d7a:	b009      	add	sp, #36	; 0x24
 8002d7c:	bd30      	pop	{r4, r5, pc}
 8002d7e:	bf00      	nop
 8002d80:	08022c88 	.word	0x08022c88

08002d84 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002d84:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002d86:	4770      	bx	lr

08002d88 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002d88:	4770      	bx	lr

08002d8a <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002d8a:	4770      	bx	lr

08002d8c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002d8c:	4770      	bx	lr

08002d8e <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002d8e:	4770      	bx	lr

08002d90 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002d90:	4770      	bx	lr

08002d92 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002d92:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002d94:	6803      	ldr	r3, [r0, #0]
 8002d96:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002d98:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002d9a:	466d      	mov	r5, sp
 8002d9c:	4601      	mov	r1, r0
 8002d9e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002da2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002da4:	4628      	mov	r0, r5
 8002da6:	4798      	blx	r3
 8002da8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002dac:	343c      	adds	r4, #60	; 0x3c
 8002dae:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002db2:	b005      	add	sp, #20
 8002db4:	bd30      	pop	{r4, r5, pc}

08002db6 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002db6:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002db8:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002dba:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002dbc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002dbe:	466d      	mov	r5, sp
 8002dc0:	4601      	mov	r1, r0
 8002dc2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002dc6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002dc8:	4628      	mov	r0, r5
 8002dca:	4798      	blx	r3
 8002dcc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002dd0:	343c      	adds	r4, #60	; 0x3c
 8002dd2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002dd6:	b005      	add	sp, #20
 8002dd8:	bd30      	pop	{r4, r5, pc}

08002dda <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002dda:	2200      	movs	r2, #0
 8002ddc:	8002      	strh	r2, [r0, #0]
 8002dde:	8042      	strh	r2, [r0, #2]
 8002de0:	8082      	strh	r2, [r0, #4]
 8002de2:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002de4:	4770      	bx	lr

08002de6 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002de6:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002dea:	4770      	bx	lr

08002dec <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002dec:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002dee:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002df0:	4604      	mov	r4, r0
        setX(x);
 8002df2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002df4:	4615      	mov	r5, r2
        setX(x);
 8002df6:	4798      	blx	r3
        setBaselineY(baselineY);
 8002df8:	6823      	ldr	r3, [r4, #0]
 8002dfa:	4629      	mov	r1, r5
 8002dfc:	4620      	mov	r0, r4
 8002dfe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002e00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002e04:	4718      	bx	r3

08002e06 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002e06:	2000      	movs	r0, #0
 8002e08:	4770      	bx	lr

08002e0a <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002e0a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002e0c:	4770      	bx	lr

08002e0e <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002e0e:	4770      	bx	lr

08002e10 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 8002e10:	4770      	bx	lr

08002e12 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 8002e12:	4770      	bx	lr

08002e14 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 8002e14:	4770      	bx	lr

08002e16 <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002e16:	4770      	bx	lr

08002e18 <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002e18:	4770      	bx	lr

08002e1a <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002e1a:	4770      	bx	lr

08002e1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002e1c:	4770      	bx	lr

08002e1e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002e1e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002e22:	b14b      	cbz	r3, 8002e38 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002e24:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8002e28:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002e2a:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002e2c:	b13b      	cbz	r3, 8002e3e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002e2e:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002e32:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002e34:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002e36:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002e38:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002e3c:	e7f4      	b.n	8002e28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002e3e:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002e42:	e7f6      	b.n	8002e32 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002e44 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e44:	4770      	bx	lr

08002e46 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002e46:	4770      	bx	lr

08002e48 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002e48:	4770      	bx	lr

08002e4a <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002e4a:	4770      	bx	lr

08002e4c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002e4c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002e4e:	68c2      	ldr	r2, [r0, #12]
 8002e50:	6844      	ldr	r4, [r0, #4]
 8002e52:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002e54:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002e56:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002e5a:	07d2      	lsls	r2, r2, #31
 8002e5c:	bf48      	it	mi
 8002e5e:	5962      	ldrmi	r2, [r4, r5]
 8002e60:	689b      	ldr	r3, [r3, #8]
    }
 8002e62:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002e64:	bf48      	it	mi
 8002e66:	58d3      	ldrmi	r3, [r2, r3]
 8002e68:	4718      	bx	r3

08002e6a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002e6a:	6843      	ldr	r3, [r0, #4]
 8002e6c:	b12b      	cbz	r3, 8002e7a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002e6e:	6883      	ldr	r3, [r0, #8]
 8002e70:	b92b      	cbnz	r3, 8002e7e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002e72:	68c0      	ldr	r0, [r0, #12]
 8002e74:	f000 0001 	and.w	r0, r0, #1
 8002e78:	4770      	bx	lr
 8002e7a:	4618      	mov	r0, r3
 8002e7c:	4770      	bx	lr
 8002e7e:	2001      	movs	r0, #1
    }
 8002e80:	4770      	bx	lr

08002e82 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002e82:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002e84:	68c2      	ldr	r2, [r0, #12]
 8002e86:	6844      	ldr	r4, [r0, #4]
 8002e88:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002e8a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002e8c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002e90:	07d2      	lsls	r2, r2, #31
 8002e92:	bf48      	it	mi
 8002e94:	5962      	ldrmi	r2, [r4, r5]
 8002e96:	689b      	ldr	r3, [r3, #8]
    }
 8002e98:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002e9a:	bf48      	it	mi
 8002e9c:	58d3      	ldrmi	r3, [r2, r3]
 8002e9e:	4718      	bx	r3

08002ea0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002ea0:	6843      	ldr	r3, [r0, #4]
 8002ea2:	b12b      	cbz	r3, 8002eb0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002ea4:	6883      	ldr	r3, [r0, #8]
 8002ea6:	b92b      	cbnz	r3, 8002eb4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002ea8:	68c0      	ldr	r0, [r0, #12]
 8002eaa:	f000 0001 	and.w	r0, r0, #1
 8002eae:	4770      	bx	lr
 8002eb0:	4618      	mov	r0, r3
 8002eb2:	4770      	bx	lr
 8002eb4:	2001      	movs	r0, #1
    }
 8002eb6:	4770      	bx	lr

08002eb8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002eb8:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002ebc:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002ec0:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002ec4:	4770      	bx	lr

08002ec6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002ec6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002eca:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002ece:	4770      	bx	lr

08002ed0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002ed0:	b510      	push	{r4, lr}
 8002ed2:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002ed4:	307c      	adds	r0, #124	; 0x7c
 8002ed6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002eda:	b13b      	cbz	r3, 8002eec <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002edc:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002ee0:	f00b fe90 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002ee4:	4620      	mov	r0, r4
 8002ee6:	f7ff ff9a 	bl	8002e1e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002eea:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002eec:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002ef0:	e7f6      	b.n	8002ee0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002ef2 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002ef2:	b510      	push	{r4, lr}
 8002ef4:	214c      	movs	r1, #76	; 0x4c
 8002ef6:	4604      	mov	r4, r0
 8002ef8:	f01d fe4e 	bl	8020b98 <_ZdlPvj>
 8002efc:	4620      	mov	r0, r4
 8002efe:	bd10      	pop	{r4, pc}

08002f00 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002f00:	b510      	push	{r4, lr}
 8002f02:	2178      	movs	r1, #120	; 0x78
 8002f04:	4604      	mov	r4, r0
 8002f06:	f01d fe47 	bl	8020b98 <_ZdlPvj>
 8002f0a:	4620      	mov	r0, r4
 8002f0c:	bd10      	pop	{r4, pc}

08002f0e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002f0e:	b510      	push	{r4, lr}
 8002f10:	21a8      	movs	r1, #168	; 0xa8
 8002f12:	4604      	mov	r4, r0
 8002f14:	f01d fe40 	bl	8020b98 <_ZdlPvj>
 8002f18:	4620      	mov	r0, r4
 8002f1a:	bd10      	pop	{r4, pc}

08002f1c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f1c:	b510      	push	{r4, lr}
 8002f1e:	2110      	movs	r1, #16
 8002f20:	4604      	mov	r4, r0
 8002f22:	f01d fe39 	bl	8020b98 <_ZdlPvj>
 8002f26:	4620      	mov	r0, r4
 8002f28:	bd10      	pop	{r4, pc}

08002f2a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002f2a:	b510      	push	{r4, lr}
 8002f2c:	2110      	movs	r1, #16
 8002f2e:	4604      	mov	r4, r0
 8002f30:	f01d fe32 	bl	8020b98 <_ZdlPvj>
 8002f34:	4620      	mov	r0, r4
 8002f36:	bd10      	pop	{r4, pc}

08002f38 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002f38:	b510      	push	{r4, lr}
 8002f3a:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002f3e:	4604      	mov	r4, r0
 8002f40:	f01d fe2a 	bl	8020b98 <_ZdlPvj>
 8002f44:	4620      	mov	r0, r4
 8002f46:	bd10      	pop	{r4, pc}

08002f48 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002f48:	b510      	push	{r4, lr}
 8002f4a:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002f4c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002f4e:	b150      	cbz	r0, 8002f66 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002f50:	6803      	ldr	r3, [r0, #0]
 8002f52:	68db      	ldr	r3, [r3, #12]
 8002f54:	4798      	blx	r3
 8002f56:	b130      	cbz	r0, 8002f66 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002f58:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002f5a:	6803      	ldr	r3, [r0, #0]
 8002f5c:	4621      	mov	r1, r4
 8002f5e:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002f60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002f64:	4718      	bx	r3
    }
 8002f66:	bd10      	pop	{r4, pc}

08002f68 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002f68:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002f6c:	4291      	cmp	r1, r2
 8002f6e:	d102      	bne.n	8002f76 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002f70:	6803      	ldr	r3, [r0, #0]
 8002f72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002f74:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002f76:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002f7a:	4291      	cmp	r1, r2
 8002f7c:	d102      	bne.n	8002f84 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002f7e:	6803      	ldr	r3, [r0, #0]
 8002f80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f82:	e7f7      	b.n	8002f74 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002f84:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002f88:	4291      	cmp	r1, r2
 8002f8a:	d102      	bne.n	8002f92 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002f8c:	6803      	ldr	r3, [r0, #0]
 8002f8e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002f90:	e7f0      	b.n	8002f74 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002f92:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002f96:	4291      	cmp	r1, r2
 8002f98:	d102      	bne.n	8002fa0 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002f9a:	6803      	ldr	r3, [r0, #0]
 8002f9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002f9e:	e7e9      	b.n	8002f74 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002fa0:	4770      	bx	lr

08002fa2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002fa2:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002fa4:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002fa6:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002faa:	4604      	mov	r4, r0
 8002fac:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002fae:	b99b      	cbnz	r3, 8002fd8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002fb0:	b98e      	cbnz	r6, 8002fd6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002fb2:	fab3 f383 	clz	r3, r3
 8002fb6:	095b      	lsrs	r3, r3, #5
 8002fb8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002fbc:	6823      	ldr	r3, [r4, #0]
 8002fbe:	4620      	mov	r0, r4
 8002fc0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002fc4:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002fc6:	6823      	ldr	r3, [r4, #0]
 8002fc8:	4620      	mov	r0, r4
 8002fca:	695b      	ldr	r3, [r3, #20]
 8002fcc:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002fce:	b116      	cbz	r6, 8002fd6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002fd0:	792b      	ldrb	r3, [r5, #4]
 8002fd2:	2b01      	cmp	r3, #1
 8002fd4:	d003      	beq.n	8002fde <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002fd6:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002fd8:	2e00      	cmp	r6, #0
 8002fda:	d0fc      	beq.n	8002fd6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002fdc:	e7e9      	b.n	8002fb2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002fde:	6823      	ldr	r3, [r4, #0]
 8002fe0:	4620      	mov	r0, r4
 8002fe2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002fe6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002fea:	4718      	bx	r3

08002fec <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002fec:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002fee:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002ff0:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002ff2:	4b12      	ldr	r3, [pc, #72]	; (800303c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002ff4:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002ff6:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002ff8:	b28d      	uxth	r5, r1
 8002ffa:	b92b      	cbnz	r3, 8003008 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002ffc:	4b10      	ldr	r3, [pc, #64]	; (8003040 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002ffe:	4a11      	ldr	r2, [pc, #68]	; (8003044 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003000:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003002:	4811      	ldr	r0, [pc, #68]	; (8003048 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003004:	f01d fe7c 	bl	8020d00 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003008:	4910      	ldr	r1, [pc, #64]	; (800304c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800300a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800300c:	8809      	ldrh	r1, [r1, #0]
 800300e:	4291      	cmp	r1, r2
 8003010:	d803      	bhi.n	800301a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003012:	4b0f      	ldr	r3, [pc, #60]	; (8003050 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003014:	4a0b      	ldr	r2, [pc, #44]	; (8003044 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003016:	216d      	movs	r1, #109	; 0x6d
 8003018:	e7f3      	b.n	8003002 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800301a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800301e:	4b0d      	ldr	r3, [pc, #52]	; (8003054 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003020:	681b      	ldr	r3, [r3, #0]
 8003022:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003026:	6803      	ldr	r3, [r0, #0]
 8003028:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800302a:	4798      	blx	r3
 800302c:	1a28      	subs	r0, r5, r0
 800302e:	b201      	sxth	r1, r0
 8003030:	4633      	mov	r3, r6
 8003032:	4620      	mov	r0, r4
    }
 8003034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8003038:	4718      	bx	r3
 800303a:	bf00      	nop
 800303c:	20015858 	.word	0x20015858
 8003040:	08022cd8 	.word	0x08022cd8
 8003044:	08022d1a 	.word	0x08022d1a
 8003048:	08022d55 	.word	0x08022d55
 800304c:	2001585c 	.word	0x2001585c
 8003050:	08022d9c 	.word	0x08022d9c
 8003054:	20015860 	.word	0x20015860

08003058 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8003058:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 800305c:	428b      	cmp	r3, r1
{
 800305e:	b510      	push	{r4, lr}
 8003060:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8003062:	d109      	bne.n	8003078 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003064:	f00e fa7c 	bl	8011560 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8003068:	f7ff fe20 	bl	8002cac <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 800306c:	6823      	ldr	r3, [r4, #0]
 800306e:	4620      	mov	r0, r4
 8003070:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8003072:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8003076:	4718      	bx	r3
}
 8003078:	bd10      	pop	{r4, pc}

0800307a <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800307a:	2200      	movs	r2, #0
 800307c:	f04f 31ff 	mov.w	r1, #4294967295
 8003080:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8003084:	6082      	str	r2, [r0, #8]
    }
 8003086:	4770      	bx	lr

08003088 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8003088:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800308a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800308c:	4604      	mov	r4, r0
        setX(x);
 800308e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8003090:	4615      	mov	r5, r2
        setX(x);
 8003092:	4798      	blx	r3
        setY(y);
 8003094:	6823      	ldr	r3, [r4, #0]
 8003096:	4629      	mov	r1, r5
 8003098:	4620      	mov	r0, r4
 800309a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800309c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80030a0:	4718      	bx	r3

080030a2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 80030a2:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80030a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 80030a8:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 80030ac:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 80030ae:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 80030b2:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80030b6:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 80030b8:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80030ba:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 80030bc:	f011 fc80 	bl	80149c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80030c0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80030c4:	4607      	mov	r7, r0
 80030c6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80030ca:	4640      	mov	r0, r8
 80030cc:	f3c3 064f 	ubfx	r6, r3, #1, #16
 80030d0:	f011 fcaa 	bl	8014a28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80030d4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80030d8:	f3c5 054f 	ubfx	r5, r5, #1, #16
 80030dc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80030e0:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 80030e4:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 80030e8:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 80030ec:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 80030f0:	b239      	sxth	r1, r7
 80030f2:	b212      	sxth	r2, r2
 80030f4:	f7ff ffc8 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 80030f8:	6823      	ldr	r3, [r4, #0]
 80030fa:	4620      	mov	r0, r4
 80030fc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8003100:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8003104:	4718      	bx	r3

08003106 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003106:	b570      	push	{r4, r5, r6, lr}
 8003108:	4604      	mov	r4, r0
 800310a:	461d      	mov	r5, r3
 800310c:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003110:	f7ff ffba 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003114:	6823      	ldr	r3, [r4, #0]
 8003116:	4629      	mov	r1, r5
 8003118:	4620      	mov	r0, r4
 800311a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800311c:	4798      	blx	r3
        setHeight(height);
 800311e:	6823      	ldr	r3, [r4, #0]
 8003120:	4631      	mov	r1, r6
 8003122:	4620      	mov	r0, r4
 8003124:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003126:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800312a:	4718      	bx	r3

0800312c <_ZN8touchgfx6WidgetC1Ev>:
 800312c:	2200      	movs	r2, #0
 800312e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003132:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8003136:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800313a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800313e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003142:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003144:	4a01      	ldr	r2, [pc, #4]	; (800314c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8003146:	6002      	str	r2, [r0, #0]
 8003148:	4770      	bx	lr
 800314a:	bf00      	nop
 800314c:	08022e20 	.word	0x08022e20

08003150 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8003150:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8003152:	2226      	movs	r2, #38	; 0x26
    Box()
 8003154:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8003156:	2100      	movs	r1, #0
 8003158:	f01d ff58 	bl	802100c <memset>
 800315c:	4620      	mov	r0, r4
 800315e:	f7ff ffe5 	bl	800312c <_ZN8touchgfx6WidgetC1Ev>
 8003162:	4b04      	ldr	r3, [pc, #16]	; (8003174 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8003164:	6023      	str	r3, [r4, #0]
 8003166:	23ff      	movs	r3, #255	; 0xff
 8003168:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 800316c:	2300      	movs	r3, #0
 800316e:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8003170:	4620      	mov	r0, r4
 8003172:	bd10      	pop	{r4, pc}
 8003174:	08024574 	.word	0x08024574

08003178 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8003178:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 800317a:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 800317c:	4604      	mov	r4, r0
 800317e:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8003180:	2100      	movs	r1, #0
 8003182:	f01d ff43 	bl	802100c <memset>
 8003186:	4620      	mov	r0, r4
 8003188:	f7ff ffd0 	bl	800312c <_ZN8touchgfx6WidgetC1Ev>
 800318c:	4b06      	ldr	r3, [pc, #24]	; (80031a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 800318e:	6023      	str	r3, [r4, #0]
 8003190:	882b      	ldrh	r3, [r5, #0]
 8003192:	84e3      	strh	r3, [r4, #38]	; 0x26
 8003194:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8003196:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8003198:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 800319c:	4629      	mov	r1, r5
 800319e:	f00b fd31 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80031a2:	4620      	mov	r0, r4
 80031a4:	bd38      	pop	{r3, r4, r5, pc}
 80031a6:	bf00      	nop
 80031a8:	080246b8 	.word	0x080246b8

080031ac <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80031ac:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80031ae:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80031b0:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80031b2:	2100      	movs	r1, #0
 80031b4:	f01d ff2a 	bl	802100c <memset>
 80031b8:	4620      	mov	r0, r4
 80031ba:	f7ff ffb7 	bl	800312c <_ZN8touchgfx6WidgetC1Ev>
 80031be:	4b0a      	ldr	r3, [pc, #40]	; (80031e8 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80031c0:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80031c2:	4b0a      	ldr	r3, [pc, #40]	; (80031ec <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80031c4:	62a3      	str	r3, [r4, #40]	; 0x28
 80031c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80031ca:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80031cc:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80031d0:	2300      	movs	r3, #0
 80031d2:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80031d6:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80031da:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80031de:	8723      	strh	r3, [r4, #56]	; 0x38
 80031e0:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80031e2:	4620      	mov	r0, r4
 80031e4:	bd10      	pop	{r4, pc}
 80031e6:	bf00      	nop
 80031e8:	080244e4 	.word	0x080244e4
 80031ec:	08022724 	.word	0x08022724

080031f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80031f0:	4b1b      	ldr	r3, [pc, #108]	; (8003260 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80031f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80031f4:	881b      	ldrh	r3, [r3, #0]
 80031f6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80031f8:	428b      	cmp	r3, r1
    void updateTextPosition()
 80031fa:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80031fc:	d92b      	bls.n	8003256 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80031fe:	4b19      	ldr	r3, [pc, #100]	; (8003264 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	b92b      	cbnz	r3, 8003210 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003204:	4b18      	ldr	r3, [pc, #96]	; (8003268 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003206:	4a19      	ldr	r2, [pc, #100]	; (800326c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003208:	4819      	ldr	r0, [pc, #100]	; (8003270 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800320a:	216c      	movs	r1, #108	; 0x6c
 800320c:	f01d fd78 	bl	8020d00 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003210:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003214:	4b17      	ldr	r3, [pc, #92]	; (8003274 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 800321c:	4b16      	ldr	r3, [pc, #88]	; (8003278 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 800321e:	6818      	ldr	r0, [r3, #0]
 8003220:	f001 fff8 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003224:	682b      	ldr	r3, [r5, #0]
 8003226:	9001      	str	r0, [sp, #4]
 8003228:	4601      	mov	r1, r0
 800322a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800322c:	4628      	mov	r0, r5
 800322e:	4798      	blx	r3
 8003230:	682b      	ldr	r3, [r5, #0]
 8003232:	9901      	ldr	r1, [sp, #4]
 8003234:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003236:	4604      	mov	r4, r0
 8003238:	4628      	mov	r0, r5
 800323a:	4798      	blx	r3
 800323c:	682b      	ldr	r3, [r5, #0]
 800323e:	9901      	ldr	r1, [sp, #4]
 8003240:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003242:	fb14 f400 	smulbb	r4, r4, r0
 8003246:	4628      	mov	r0, r5
 8003248:	4798      	blx	r3
 800324a:	b2e4      	uxtb	r4, r4
 800324c:	4404      	add	r4, r0
 800324e:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8003252:	b002      	add	sp, #8
 8003254:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8003256:	2300      	movs	r3, #0
 8003258:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 800325c:	e7f9      	b.n	8003252 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 800325e:	bf00      	nop
 8003260:	2001585c 	.word	0x2001585c
 8003264:	20015858 	.word	0x20015858
 8003268:	08022cd8 	.word	0x08022cd8
 800326c:	08022d1a 	.word	0x08022d1a
 8003270:	08022d55 	.word	0x08022d55
 8003274:	20015860 	.word	0x20015860
 8003278:	20015864 	.word	0x20015864

0800327c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 800327c:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8003280:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8003282:	4606      	mov	r6, r0
 8003284:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8003286:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 800328a:	2500      	movs	r5, #0
 800328c:	8483      	strh	r3, [r0, #36]	; 0x24
 800328e:	4b1d      	ldr	r3, [pc, #116]	; (8003304 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8003290:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8003292:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8003296:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 800329a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 800329e:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80032a2:	6305      	str	r5, [r0, #48]	; 0x30
 80032a4:	f846 3b34 	str.w	r3, [r6], #52
 80032a8:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 80032aa:	4630      	mov	r0, r6
 80032ac:	f7ff ff50 	bl	8003150 <_ZN8touchgfx3BoxC1Ev>
 80032b0:	4b15      	ldr	r3, [pc, #84]	; (8003308 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 80032b2:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 80032b4:	462a      	mov	r2, r5
        : color(0)
 80032b6:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80032ba:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 80032be:	6625      	str	r5, [r4, #96]	; 0x60
 80032c0:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80032c4:	4629      	mov	r1, r5
 80032c6:	4630      	mov	r0, r6
 80032c8:	f7ff fede 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80032cc:	4631      	mov	r1, r6
 80032ce:	4620      	mov	r0, r4
 80032d0:	f007 fe24 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 80032d4:	4b0d      	ldr	r3, [pc, #52]	; (800330c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 80032d6:	6023      	str	r3, [r4, #0]
 80032d8:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80032dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80032e0:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 80032e4:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 80032e8:	a901      	add	r1, sp, #4
 80032ea:	4628      	mov	r0, r5
 80032ec:	f8ad 3004 	strh.w	r3, [sp, #4]
 80032f0:	f7ff ff42 	bl	8003178 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 80032f4:	4620      	mov	r0, r4
 80032f6:	4629      	mov	r1, r5
 80032f8:	f007 fe10 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80032fc:	4620      	mov	r0, r4
 80032fe:	b002      	add	sp, #8
 8003300:	bd70      	pop	{r4, r5, r6, pc}
 8003302:	bf00      	nop
 8003304:	08022f18 	.word	0x08022f18
 8003308:	08024650 	.word	0x08024650
 800330c:	08022fb4 	.word	0x08022fb4

08003310 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8003310:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8003312:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8003314:	9b01      	ldr	r3, [sp, #4]
 8003316:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8003318:	6803      	ldr	r3, [r0, #0]
    }
 800331a:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 800331e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8003322:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8003326:	4718      	bx	r3

08003328 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8003328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800332c:	ed2d 8b0c 	vpush	{d8-d13}
 8003330:	4604      	mov	r4, r0
 8003332:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8003334:	f00f fc16 	bl	8012b64 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8003338:	4622      	mov	r2, r4
 800333a:	2500      	movs	r5, #0
 800333c:	4be5      	ldr	r3, [pc, #916]	; (80036d4 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 800333e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003340:	f842 3b40 	str.w	r3, [r2], #64
 8003344:	4610      	mov	r0, r2
 8003346:	ee08 2a10 	vmov	s16, r2
 800334a:	f7ff ff01 	bl	8003150 <_ZN8touchgfx3BoxC1Ev>
 800334e:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003352:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8003356:	a90a      	add	r1, sp, #40	; 0x28
 8003358:	4618      	mov	r0, r3
 800335a:	ee0c 3a10 	vmov	s24, r3
 800335e:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003362:	f7ff ff09 	bl	8003178 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003366:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800336a:	a90a      	add	r1, sp, #40	; 0x28
 800336c:	4618      	mov	r0, r3
 800336e:	ee0c 3a90 	vmov	s25, r3
 8003372:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003376:	f7ff feff 	bl	8003178 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800337a:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 800337e:	4618      	mov	r0, r3
 8003380:	ee08 3a90 	vmov	s17, r3
 8003384:	f7ff ff7a 	bl	800327c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003388:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 800338c:	4618      	mov	r0, r3
 800338e:	ee09 3a10 	vmov	s18, r3
 8003392:	f7ff ff73 	bl	800327c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003396:	f504 7305 	add.w	r3, r4, #532	; 0x214
 800339a:	4618      	mov	r0, r3
 800339c:	ee09 3a90 	vmov	s19, r3
 80033a0:	f7ff ff04 	bl	80031ac <_ZN8touchgfx8TextAreaC1Ev>
 80033a4:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 80033a8:	4618      	mov	r0, r3
 80033aa:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80033ae:	4fca      	ldr	r7, [pc, #808]	; (80036d8 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 80033b0:	f7ff fefc 	bl	80031ac <_ZN8touchgfx8TextAreaC1Ev>
 80033b4:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 80033b8:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 80033bc:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 80033c0:	4618      	mov	r0, r3
 80033c2:	ee0a 3a90 	vmov	s21, r3
 80033c6:	f00b fd4f 	bl	800ee68 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80033ca:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 80033ce:	a90a      	add	r1, sp, #40	; 0x28
 80033d0:	4618      	mov	r0, r3
 80033d2:	ee0d 3a10 	vmov	s26, r3
 80033d6:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 80033da:	f7ff fecd 	bl	8003178 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80033de:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 80033e2:	4618      	mov	r0, r3
 80033e4:	ee0b 3a10 	vmov	s22, r3
 80033e8:	f7ff fee0 	bl	80031ac <_ZN8touchgfx8TextAreaC1Ev>
 80033ec:	f504 7359 	add.w	r3, r4, #868	; 0x364
 80033f0:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 80033f4:	4618      	mov	r0, r3
 80033f6:	ee0b 3a90 	vmov	s23, r3
 80033fa:	f7ff fed7 	bl	80031ac <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80033fe:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8003402:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8003406:	4658      	mov	r0, fp
 8003408:	f7ff fed0 	bl	80031ac <_ZN8touchgfx8TextAreaC1Ev>
 800340c:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 8003410:	a90a      	add	r1, sp, #40	; 0x28
 8003412:	4618      	mov	r0, r3
 8003414:	f204 4924 	addw	r9, r4, #1060	; 0x424
 8003418:	ee0d 3a90 	vmov	s27, r3
 800341c:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 8003420:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003424:	f7ff fea8 	bl	8003178 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003428:	4648      	mov	r0, r9
 800342a:	f7ff ff27 	bl	800327c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800342e:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 8003432:	4640      	mov	r0, r8
 8003434:	f7ff ff22 	bl	800327c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 8003438:	4650      	mov	r0, sl
 800343a:	f7ff feb7 	bl	80031ac <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800343e:	4ba7      	ldr	r3, [pc, #668]	; (80036dc <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8003440:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 8003444:	4ba6      	ldr	r3, [pc, #664]	; (80036e0 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8003446:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 800344a:	4ba6      	ldr	r3, [pc, #664]	; (80036e4 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 800344c:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 8003450:	4ba5      	ldr	r3, [pc, #660]	; (80036e8 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8003452:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 8003456:	23f0      	movs	r3, #240	; 0xf0
 8003458:	462a      	mov	r2, r5
 800345a:	4629      	mov	r1, r5
 800345c:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 8003460:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 8003464:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003468:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 800346c:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8003470:	9300      	str	r3, [sp, #0]
 8003472:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 8003476:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800347a:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 800347e:	f7ff fe42 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003482:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003486:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8003488:	462a      	mov	r2, r5
 800348a:	4629      	mov	r1, r5
 800348c:	ee1c 0a10 	vmov	r0, s24
 8003490:	f7ff fdfa 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8003494:	ee1c 0a10 	vmov	r0, s24
 8003498:	a90a      	add	r1, sp, #40	; 0x28
 800349a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800349e:	f00b fbb1 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 80034a2:	ee1c 0a90 	vmov	r0, s25
 80034a6:	2219      	movs	r2, #25
 80034a8:	2176      	movs	r1, #118	; 0x76
 80034aa:	f7ff fded 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 80034ae:	aa0a      	add	r2, sp, #40	; 0x28
 80034b0:	f04f 0303 	mov.w	r3, #3
 80034b4:	4611      	mov	r1, r2
 80034b6:	ee1c 0a90 	vmov	r0, s25
 80034ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80034be:	f00b fba1 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 80034c2:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80034c4:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80034c6:	4e89      	ldr	r6, [pc, #548]	; (80036ec <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 80034c8:	9300      	str	r3, [sp, #0]
 80034ca:	462a      	mov	r2, r5
 80034cc:	4629      	mov	r1, r5
 80034ce:	232b      	movs	r3, #43	; 0x2b
 80034d0:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 80034d4:	f7ff fe17 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 80034d8:	4b85      	ldr	r3, [pc, #532]	; (80036f0 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80034da:	4a86      	ldr	r2, [pc, #536]	; (80036f4 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80034dc:	4986      	ldr	r1, [pc, #536]	; (80036f8 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80034de:	9600      	str	r6, [sp, #0]
 80034e0:	ee18 0a90 	vmov	r0, s17
 80034e4:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 80034e8:	f7ff ff12 	bl	8003310 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80034ec:	ee18 0a90 	vmov	r0, s17
 80034f0:	aa0a      	add	r2, sp, #40	; 0x28
 80034f2:	a909      	add	r1, sp, #36	; 0x24
 80034f4:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80034f8:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80034fc:	f7ff fdd1 	bl	80030a2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 8003500:	2317      	movs	r3, #23
 8003502:	ee18 0a90 	vmov	r0, s17
 8003506:	9300      	str	r3, [sp, #0]
 8003508:	2231      	movs	r2, #49	; 0x31
 800350a:	232b      	movs	r3, #43	; 0x2b
 800350c:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 8003510:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 8003514:	f7ff fdf7 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 8003518:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 800351c:	9303      	str	r3, [sp, #12]
        action = &callback;
 800351e:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 8003522:	2317      	movs	r3, #23
 8003524:	462a      	mov	r2, r5
 8003526:	4629      	mov	r1, r5
 8003528:	9300      	str	r3, [sp, #0]
 800352a:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 800352e:	232b      	movs	r3, #43	; 0x2b
 8003530:	f7ff fde9 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003534:	4b6e      	ldr	r3, [pc, #440]	; (80036f0 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8003536:	4a6f      	ldr	r2, [pc, #444]	; (80036f4 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003538:	496f      	ldr	r1, [pc, #444]	; (80036f8 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 800353a:	9600      	str	r6, [sp, #0]
 800353c:	ee19 0a10 	vmov	r0, s18
 8003540:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 8003544:	f7ff fee4 	bl	8003310 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003548:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 800354c:	a80a      	add	r0, sp, #40	; 0x28
 800354e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8003552:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8003556:	a909      	add	r1, sp, #36	; 0x24
 8003558:	4602      	mov	r2, r0
 800355a:	ee19 0a10 	vmov	r0, s18
 800355e:	f7ff fda0 	bl	80030a2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003562:	2006      	movs	r0, #6
 8003564:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 8003568:	2017      	movs	r0, #23
 800356a:	232b      	movs	r3, #43	; 0x2b
 800356c:	9000      	str	r0, [sp, #0]
 800356e:	2219      	movs	r2, #25
 8003570:	ee19 0a10 	vmov	r0, s18
 8003574:	f240 1111 	movw	r1, #273	; 0x111
 8003578:	f7ff fdc5 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800357c:	9a03      	ldr	r2, [sp, #12]
 800357e:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 8003582:	ee19 0a90 	vmov	r0, s19
 8003586:	221c      	movs	r2, #28
 8003588:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 800358a:	ae04      	add	r6, sp, #16
 800358c:	f7ff fd7c 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003590:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003594:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8003598:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 800359c:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 80035a0:	4630      	mov	r0, r6
 80035a2:	f00a fe2f 	bl	800e204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80035a6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80035aa:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80035ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80035b2:	4b52      	ldr	r3, [pc, #328]	; (80036fc <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 80035b4:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 80035b6:	ee19 0a90 	vmov	r0, s19
 80035ba:	2314      	movs	r3, #20
 80035bc:	a90a      	add	r1, sp, #40	; 0x28
 80035be:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80035c2:	f00b f8a1 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 80035c6:	2018      	movs	r0, #24
 80035c8:	2224      	movs	r2, #36	; 0x24
 80035ca:	9000      	str	r0, [sp, #0]
 80035cc:	237c      	movs	r3, #124	; 0x7c
 80035ce:	ee1a 0a10 	vmov	r0, s20
 80035d2:	218f      	movs	r1, #143	; 0x8f
 80035d4:	f7ff fd97 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035d8:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 80035dc:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 80035e0:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80035e4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80035e8:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 80035ec:	ee1a 1a10 	vmov	r1, s20
 80035f0:	4630      	mov	r0, r6
 80035f2:	4798      	blx	r3
 80035f4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80035f8:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80035fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 8003600:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 8003604:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 8003608:	4b3c      	ldr	r3, [pc, #240]	; (80036fc <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 800360a:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 800360e:	ee1a 0a10 	vmov	r0, s20
 8003612:	930a      	str	r3, [sp, #40]	; 0x28
 8003614:	a90a      	add	r1, sp, #40	; 0x28
 8003616:	2313      	movs	r3, #19
 8003618:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800361c:	f00b f874 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 8003620:	ee1a 0a90 	vmov	r0, s21
 8003624:	22b4      	movs	r2, #180	; 0xb4
 8003626:	214e      	movs	r1, #78	; 0x4e
 8003628:	f7ff fd2e 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 800362c:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 800362e:	a80a      	add	r0, sp, #40	; 0x28
 8003630:	4602      	mov	r2, r0
 8003632:	a909      	add	r1, sp, #36	; 0x24
 8003634:	ee1a 0a90 	vmov	r0, s21
 8003638:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800363c:	2302      	movs	r3, #2
 800363e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003642:	f00b f8bc 	bl	800e7be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003646:	2312      	movs	r3, #18
        updateTextPosition();
 8003648:	ee1a 0a90 	vmov	r0, s21
 800364c:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 8003650:	f7ff fdce 	bl	80031f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 8003654:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 8003658:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800365c:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 8003660:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 8003662:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 8003666:	2176      	movs	r1, #118	; 0x76
 8003668:	ee1d 0a10 	vmov	r0, s26
 800366c:	f7ff fd0c 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 8003670:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003674:	a80a      	add	r0, sp, #40	; 0x28
 8003676:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800367a:	4601      	mov	r1, r0
 800367c:	ee1d 0a10 	vmov	r0, s26
 8003680:	f00b fac0 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 8003684:	228d      	movs	r2, #141	; 0x8d
 8003686:	ee1b 0a10 	vmov	r0, s22
 800368a:	2129      	movs	r1, #41	; 0x29
 800368c:	f7ff fcfc 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003690:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003694:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8003698:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 800369c:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 80036a0:	4630      	mov	r0, r6
 80036a2:	f00a fdaf 	bl	800e204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80036a6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80036aa:	f504 7356 	add.w	r3, r4, #856	; 0x358
 80036ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80036b2:	4b12      	ldr	r3, [pc, #72]	; (80036fc <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 80036b4:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 80036b6:	a80a      	add	r0, sp, #40	; 0x28
 80036b8:	2311      	movs	r3, #17
 80036ba:	4601      	mov	r1, r0
 80036bc:	ee1b 0a10 	vmov	r0, s22
 80036c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80036c4:	f00b f820 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 80036c8:	2018      	movs	r0, #24
 80036ca:	2293      	movs	r2, #147	; 0x93
 80036cc:	9000      	str	r0, [sp, #0]
 80036ce:	237c      	movs	r3, #124	; 0x7c
 80036d0:	e016      	b.n	8003700 <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 80036d2:	bf00      	nop
 80036d4:	08023084 	.word	0x08023084
 80036d8:	08022e88 	.word	0x08022e88
 80036dc:	08023054 	.word	0x08023054
 80036e0:	08003059 	.word	0x08003059
 80036e4:	0802306c 	.word	0x0802306c
 80036e8:	08002f69 	.word	0x08002f69
 80036ec:	ff336699 	.word	0xff336699
 80036f0:	ff003366 	.word	0xff003366
 80036f4:	ff0099cc 	.word	0xff0099cc
 80036f8:	ff006699 	.word	0xff006699
 80036fc:	08022724 	.word	0x08022724
 8003700:	ee1b 0a90 	vmov	r0, s23
 8003704:	218f      	movs	r1, #143	; 0x8f
 8003706:	f7ff fcfe 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800370a:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 800370e:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 8003712:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003716:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800371a:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 800371e:	ee1b 1a90 	vmov	r1, s23
 8003722:	4630      	mov	r0, r6
 8003724:	4798      	blx	r3
 8003726:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800372a:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 800372e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 8003732:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8003736:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 800373a:	a80a      	add	r0, sp, #40	; 0x28
 800373c:	4b96      	ldr	r3, [pc, #600]	; (8003998 <_ZN15Screen1ViewBaseC1Ev+0x670>)
    txtNapiecieBateriiBuffer[0] = 0;
 800373e:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 8003742:	4601      	mov	r1, r0
 8003744:	930a      	str	r3, [sp, #40]	; 0x28
 8003746:	ee1b 0a90 	vmov	r0, s23
 800374a:	2310      	movs	r3, #16
 800374c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003750:	f00a ffda 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 8003754:	2256      	movs	r2, #86	; 0x56
 8003756:	2106      	movs	r1, #6
 8003758:	4658      	mov	r0, fp
 800375a:	f7ff fc95 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800375e:	f04f 30ff 	mov.w	r0, #4294967295
 8003762:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 8003766:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 800376a:	4659      	mov	r1, fp
 800376c:	4630      	mov	r0, r6
 800376e:	f00a fd49 	bl	800e204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003772:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003776:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 800377a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 800377e:	a80a      	add	r0, sp, #40	; 0x28
 8003780:	4b85      	ldr	r3, [pc, #532]	; (8003998 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 8003782:	930a      	str	r3, [sp, #40]	; 0x28
 8003784:	4601      	mov	r1, r0
 8003786:	4658      	mov	r0, fp
 8003788:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 800378c:	f00a ffbc 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 8003790:	2253      	movs	r2, #83	; 0x53
 8003792:	ee1d 0a90 	vmov	r0, s27
 8003796:	2176      	movs	r1, #118	; 0x76
 8003798:	f7ff fc76 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 800379c:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 80037a0:	ee1d 0a90 	vmov	r0, s27
 80037a4:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 80037a8:	a90a      	add	r1, sp, #40	; 0x28
 80037aa:	f00b fa2b 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80037ae:	2117      	movs	r1, #23
 80037b0:	462a      	mov	r2, r5
 80037b2:	9100      	str	r1, [sp, #0]
 80037b4:	232b      	movs	r3, #43	; 0x2b
 80037b6:	4629      	mov	r1, r5
 80037b8:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 80037bc:	f7ff fca3 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80037c0:	4b76      	ldr	r3, [pc, #472]	; (800399c <_ZN15Screen1ViewBaseC1Ev+0x674>)
 80037c2:	9300      	str	r3, [sp, #0]
 80037c4:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80037c8:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80037cc:	4a74      	ldr	r2, [pc, #464]	; (80039a0 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 80037ce:	4975      	ldr	r1, [pc, #468]	; (80039a4 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80037d0:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 80037d4:	4648      	mov	r0, r9
 80037d6:	f7ff fd9b 	bl	8003310 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80037da:	a90a      	add	r1, sp, #40	; 0x28
 80037dc:	460a      	mov	r2, r1
 80037de:	4648      	mov	r0, r9
 80037e0:	a909      	add	r1, sp, #36	; 0x24
 80037e2:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80037e6:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80037ea:	f7ff fc5a 	bl	80030a2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 80037ee:	2117      	movs	r1, #23
 80037f0:	9100      	str	r1, [sp, #0]
 80037f2:	232b      	movs	r3, #43	; 0x2b
 80037f4:	2269      	movs	r2, #105	; 0x69
 80037f6:	f240 1111 	movw	r1, #273	; 0x111
 80037fa:	4648      	mov	r0, r9
 80037fc:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 8003800:	f7ff fc81 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003804:	9a03      	ldr	r2, [sp, #12]
 8003806:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 800380a:	2117      	movs	r1, #23
 800380c:	462a      	mov	r2, r5
 800380e:	9100      	str	r1, [sp, #0]
 8003810:	232b      	movs	r3, #43	; 0x2b
 8003812:	4629      	mov	r1, r5
 8003814:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 8003818:	f7ff fc75 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800381c:	4b5f      	ldr	r3, [pc, #380]	; (800399c <_ZN15Screen1ViewBaseC1Ev+0x674>)
 800381e:	9300      	str	r3, [sp, #0]
 8003820:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8003824:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003828:	4a5d      	ldr	r2, [pc, #372]	; (80039a0 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 800382a:	495e      	ldr	r1, [pc, #376]	; (80039a4 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 800382c:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 8003830:	4640      	mov	r0, r8
 8003832:	f7ff fd6d 	bl	8003310 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003836:	f04f 0206 	mov.w	r2, #6
 800383a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800383e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003842:	a909      	add	r1, sp, #36	; 0x24
 8003844:	aa0a      	add	r2, sp, #40	; 0x28
 8003846:	4640      	mov	r0, r8
 8003848:	f7ff fc2b 	bl	80030a2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800384c:	2306      	movs	r3, #6
 800384e:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 8003852:	2317      	movs	r3, #23
 8003854:	9300      	str	r3, [sp, #0]
 8003856:	2251      	movs	r2, #81	; 0x51
 8003858:	232b      	movs	r3, #43	; 0x2b
 800385a:	f240 1111 	movw	r1, #273	; 0x111
 800385e:	4640      	mov	r0, r8
 8003860:	f7ff fc51 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003864:	9b03      	ldr	r3, [sp, #12]
 8003866:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 800386a:	2318      	movs	r3, #24
 800386c:	225d      	movs	r2, #93	; 0x5d
 800386e:	9300      	str	r3, [sp, #0]
 8003870:	218f      	movs	r1, #143	; 0x8f
 8003872:	237c      	movs	r3, #124	; 0x7c
 8003874:	4650      	mov	r0, sl
 8003876:	f7ff fc46 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800387a:	f04f 33ff 	mov.w	r3, #4294967295
 800387e:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 8003882:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 8003886:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 800388a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800388e:	4651      	mov	r1, sl
 8003890:	4630      	mov	r0, r6
 8003892:	4798      	blx	r3
 8003894:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003898:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 800389c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80038a0:	4b41      	ldr	r3, [pc, #260]	; (80039a8 <_ZN15Screen1ViewBaseC1Ev+0x680>)
 80038a2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 80038a4:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 80038a8:	b92b      	cbnz	r3, 80038b6 <_ZN15Screen1ViewBaseC1Ev+0x58e>
 80038aa:	4b40      	ldr	r3, [pc, #256]	; (80039ac <_ZN15Screen1ViewBaseC1Ev+0x684>)
 80038ac:	4a40      	ldr	r2, [pc, #256]	; (80039b0 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 80038ae:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80038b0:	4840      	ldr	r0, [pc, #256]	; (80039b4 <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 80038b2:	f01d fa25 	bl	8020d00 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80038b6:	4b40      	ldr	r3, [pc, #256]	; (80039b8 <_ZN15Screen1ViewBaseC1Ev+0x690>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80038b8:	881b      	ldrh	r3, [r3, #0]
 80038ba:	2b03      	cmp	r3, #3
 80038bc:	d803      	bhi.n	80038c6 <_ZN15Screen1ViewBaseC1Ev+0x59e>
 80038be:	4b3f      	ldr	r3, [pc, #252]	; (80039bc <_ZN15Screen1ViewBaseC1Ev+0x694>)
 80038c0:	4a3b      	ldr	r2, [pc, #236]	; (80039b0 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 80038c2:	2161      	movs	r1, #97	; 0x61
 80038c4:	e7f4      	b.n	80038b0 <_ZN15Screen1ViewBaseC1Ev+0x588>
        return texts->getText(typedTextId);
 80038c6:	4b3e      	ldr	r3, [pc, #248]	; (80039c0 <_ZN15Screen1ViewBaseC1Ev+0x698>)
 80038c8:	2103      	movs	r1, #3
 80038ca:	6818      	ldr	r0, [r3, #0]
 80038cc:	f001 fca2 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 80038d0:	4a3c      	ldr	r2, [pc, #240]	; (80039c4 <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 80038d2:	4603      	mov	r3, r0
 80038d4:	2103      	movs	r1, #3
 80038d6:	4628      	mov	r0, r5
 80038d8:	f010 fe00 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80038dc:	4b2e      	ldr	r3, [pc, #184]	; (8003998 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 80038de:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 80038e2:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80038e4:	1d25      	adds	r5, r4, #4
 80038e6:	2304      	movs	r3, #4
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 80038e8:	a90a      	add	r1, sp, #40	; 0x28
 80038ea:	4650      	mov	r0, sl
 80038ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80038f0:	f00a ff0a 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80038f4:	ee18 1a10 	vmov	r1, s16
 80038f8:	4628      	mov	r0, r5
 80038fa:	f007 fb0f 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80038fe:	ee1c 1a10 	vmov	r1, s24
 8003902:	4628      	mov	r0, r5
 8003904:	f007 fb0a 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003908:	ee1c 1a90 	vmov	r1, s25
 800390c:	4628      	mov	r0, r5
 800390e:	f007 fb05 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003912:	ee18 1a90 	vmov	r1, s17
 8003916:	4628      	mov	r0, r5
 8003918:	f007 fb00 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800391c:	ee19 1a10 	vmov	r1, s18
 8003920:	4628      	mov	r0, r5
 8003922:	f007 fafb 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003926:	ee19 1a90 	vmov	r1, s19
 800392a:	4628      	mov	r0, r5
 800392c:	f007 faf6 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003930:	ee1a 1a10 	vmov	r1, s20
 8003934:	4628      	mov	r0, r5
 8003936:	f007 faf1 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800393a:	ee1a 1a90 	vmov	r1, s21
 800393e:	4628      	mov	r0, r5
 8003940:	f007 faec 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003944:	ee1d 1a10 	vmov	r1, s26
 8003948:	4628      	mov	r0, r5
 800394a:	f007 fae7 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800394e:	ee1b 1a10 	vmov	r1, s22
 8003952:	4628      	mov	r0, r5
 8003954:	f007 fae2 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003958:	ee1b 1a90 	vmov	r1, s23
 800395c:	4628      	mov	r0, r5
 800395e:	f007 fadd 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003962:	4659      	mov	r1, fp
 8003964:	4628      	mov	r0, r5
 8003966:	f007 fad9 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800396a:	ee1d 1a90 	vmov	r1, s27
 800396e:	4628      	mov	r0, r5
 8003970:	f007 fad4 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003974:	4649      	mov	r1, r9
 8003976:	4628      	mov	r0, r5
 8003978:	f007 fad0 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800397c:	4641      	mov	r1, r8
 800397e:	4628      	mov	r0, r5
 8003980:	f007 facc 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003984:	4628      	mov	r0, r5
 8003986:	4651      	mov	r1, sl
 8003988:	f007 fac8 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800398c:	4620      	mov	r0, r4
 800398e:	b00d      	add	sp, #52	; 0x34
 8003990:	ecbd 8b0c 	vpop	{d8-d13}
 8003994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003998:	08022724 	.word	0x08022724
 800399c:	ff336699 	.word	0xff336699
 80039a0:	ff0099cc 	.word	0xff0099cc
 80039a4:	ff006699 	.word	0xff006699
 80039a8:	20015858 	.word	0x20015858
 80039ac:	08022cd8 	.word	0x08022cd8
 80039b0:	08022dda 	.word	0x08022dda
 80039b4:	08022d55 	.word	0x08022d55
 80039b8:	2001585c 	.word	0x2001585c
 80039bc:	08022d9c 	.word	0x08022d9c
 80039c0:	20015864 	.word	0x20015864
 80039c4:	08022e12 	.word	0x08022e12

080039c8 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80039c8:	2000      	movs	r0, #0
 80039ca:	4770      	bx	lr

080039cc <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80039cc:	888b      	ldrh	r3, [r1, #4]
 80039ce:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80039d0:	2001      	movs	r0, #1
 80039d2:	4770      	bx	lr

080039d4 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80039d4:	4770      	bx	lr

080039d6 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80039d6:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80039da:	4770      	bx	lr

080039dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80039dc:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80039de:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80039e0:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80039e2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80039e6:	4362      	muls	r2, r4
 80039e8:	4361      	muls	r1, r4
    }
 80039ea:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80039ee:	4718      	bx	r3

080039f0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80039f0:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80039f4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80039f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80039fa:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80039fe:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8003a02:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a0a:	db17      	blt.n	8003a3c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 8003a0c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003a10:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003a14:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003a18:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003a1c:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003a20:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003a24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a28:	db1c      	blt.n	8003a64 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 8003a2a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003a2e:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003a32:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003a36:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003a3a:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003a3c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003a40:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003a44:	ee17 2a10 	vmov	r2, s14
 8003a48:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003a4c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003a50:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003a54:	1e51      	subs	r1, r2, #1
 8003a56:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003a5a:	ee10 2a10 	vmov	r2, s0
 8003a5e:	440a      	add	r2, r1
 8003a60:	4611      	mov	r1, r2
 8003a62:	e7db      	b.n	8003a1c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8003a64:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003a68:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003a6c:	ee17 2a90 	vmov	r2, s15
 8003a70:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003a74:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003a78:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003a7c:	3a01      	subs	r2, #1
 8003a7e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003a82:	ee10 ca90 	vmov	ip, s1
 8003a86:	4494      	add	ip, r2
 8003a88:	4662      	mov	r2, ip
 8003a8a:	e7d6      	b.n	8003a3a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003a8c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003a8c:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003a8e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003a90:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003a92:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8003a96:	4362      	muls	r2, r4
    }
 8003a98:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003a9c:	4718      	bx	r3

08003a9e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003a9e:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003aa2:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003aa4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003aa8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003aac:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003ab0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003ab4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ab8:	db08      	blt.n	8003acc <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003aba:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003abe:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003ac2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ac6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003aca:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003acc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ad0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003ad4:	ee17 2a90 	vmov	r2, s15
 8003ad8:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003adc:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003ae0:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003ae4:	3a01      	subs	r2, #1
 8003ae6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003aea:	ee10 ca10 	vmov	ip, s0
 8003aee:	4494      	add	ip, r2
 8003af0:	4662      	mov	r2, ip
 8003af2:	e7ea      	b.n	8003aca <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

08003af4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8003af4:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003af6:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 8003af8:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003afa:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8003afe:	4362      	muls	r2, r4
 8003b00:	4361      	muls	r1, r4
    }
 8003b02:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003b06:	4718      	bx	r3

08003b08 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 8003b08:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003b0c:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003b0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003b12:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 8003b16:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8003b1a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003b1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003b22:	db17      	blt.n	8003b54 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 8003b24:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003b28:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003b2c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003b30:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003b34:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003b38:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003b3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003b40:	db1c      	blt.n	8003b7c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 8003b42:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003b46:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003b4a:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003b4e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003b52:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003b54:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003b58:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003b5c:	ee17 2a10 	vmov	r2, s14
 8003b60:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003b64:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003b68:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003b6c:	1e51      	subs	r1, r2, #1
 8003b6e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003b72:	ee10 2a10 	vmov	r2, s0
 8003b76:	440a      	add	r2, r1
 8003b78:	4611      	mov	r1, r2
 8003b7a:	e7db      	b.n	8003b34 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003b7c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003b80:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003b84:	ee17 2a90 	vmov	r2, s15
 8003b88:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003b8c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003b90:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003b94:	3a01      	subs	r2, #1
 8003b96:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003b9a:	ee10 ca90 	vmov	ip, s1
 8003b9e:	4494      	add	ip, r2
 8003ba0:	4662      	mov	r2, ip
 8003ba2:	e7d6      	b.n	8003b52 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003ba4 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003ba4:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003ba6:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003ba8:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003baa:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003bae:	4362      	muls	r2, r4
    }
 8003bb0:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003bb4:	4718      	bx	r3

08003bb6 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 8003bb6:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003bba:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003bbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003bc0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 8003bc4:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003bc8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003bcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003bd0:	db08      	blt.n	8003be4 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003bd2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003bd6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003bda:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003bde:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003be2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003be4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003be8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003bec:	ee17 2a90 	vmov	r2, s15
 8003bf0:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003bf4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003bf8:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003bfc:	3a01      	subs	r2, #1
 8003bfe:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003c02:	ee10 ca10 	vmov	ip, s0
 8003c06:	4494      	add	ip, r2
 8003c08:	4662      	mov	r2, ip
 8003c0a:	e7ea      	b.n	8003be2 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

08003c0c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 8003c0c:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8003c10:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	db07      	blt.n	8003c26 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003c16:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003c1a:	fb93 f0f2 	sdiv	r0, r3, r2
 8003c1e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003c22:	1040      	asrs	r0, r0, #1
 8003c24:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003c26:	f06f 0001 	mvn.w	r0, #1
 8003c2a:	fb00 2003 	mla	r0, r0, r3, r2
 8003c2e:	3801      	subs	r0, #1
 8003c30:	fb90 f0f2 	sdiv	r0, r0, r2
 8003c34:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003c38:	1040      	asrs	r0, r0, #1
 8003c3a:	4240      	negs	r0, r0
    }
 8003c3c:	4770      	bx	lr

08003c3e <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 8003c3e:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 8003c42:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003c46:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003c4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003c4e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003c52:	4770      	bx	lr

08003c54 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8003c54:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003c58:	4770      	bx	lr

08003c5a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8003c5a:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 8003c5e:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003c60:	2b00      	cmp	r3, #0
 8003c62:	db07      	blt.n	8003c74 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003c64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003c68:	fb93 f0f2 	sdiv	r0, r3, r2
 8003c6c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003c70:	1040      	asrs	r0, r0, #1
 8003c72:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003c74:	f06f 0001 	mvn.w	r0, #1
 8003c78:	fb00 2003 	mla	r0, r0, r3, r2
 8003c7c:	3801      	subs	r0, #1
 8003c7e:	fb90 f0f2 	sdiv	r0, r0, r2
 8003c82:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003c86:	1040      	asrs	r0, r0, #1
 8003c88:	4240      	negs	r0, r0
    }
 8003c8a:	4770      	bx	lr

08003c8c <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003c8c:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003c90:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003c94:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003c98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003c9c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003ca0:	4770      	bx	lr

08003ca2 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8003ca2:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8003ca6:	4770      	bx	lr

08003ca8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003ca8:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003cac:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	db07      	blt.n	8003cc2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003cb2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003cb6:	fb93 f0f2 	sdiv	r0, r3, r2
 8003cba:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003cbe:	1040      	asrs	r0, r0, #1
 8003cc0:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003cc2:	f06f 0001 	mvn.w	r0, #1
 8003cc6:	fb00 2003 	mla	r0, r0, r3, r2
 8003cca:	3801      	subs	r0, #1
 8003ccc:	fb90 f0f2 	sdiv	r0, r0, r2
 8003cd0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003cd4:	1040      	asrs	r0, r0, #1
 8003cd6:	4240      	negs	r0, r0
    }
 8003cd8:	4770      	bx	lr

08003cda <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8003cda:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003cde:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003ce2:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003ce6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003cea:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003cee:	4770      	bx	lr

08003cf0 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8003cf0:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 8003cf4:	4770      	bx	lr

08003cf6 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 8003cf6:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 8003cfa:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003cfc:	2b00      	cmp	r3, #0
 8003cfe:	db07      	blt.n	8003d10 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003d00:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003d04:	fb93 f0f2 	sdiv	r0, r3, r2
 8003d08:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003d0c:	1040      	asrs	r0, r0, #1
 8003d0e:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003d10:	f06f 0001 	mvn.w	r0, #1
 8003d14:	fb00 2003 	mla	r0, r0, r3, r2
 8003d18:	3801      	subs	r0, #1
 8003d1a:	fb90 f0f2 	sdiv	r0, r0, r2
 8003d1e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003d22:	1040      	asrs	r0, r0, #1
 8003d24:	4240      	negs	r0, r0
    }
 8003d26:	4770      	bx	lr

08003d28 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003d28:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 8003d2c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003d30:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003d34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003d38:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003d3c:	4770      	bx	lr

08003d3e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 8003d3e:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8003d42:	4770      	bx	lr

08003d44 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 8003d44:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 8003d46:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003d48:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8003d4a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 8003d4e:	460d      	mov	r5, r1
 8003d50:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 8003d52:	4798      	blx	r3
        setScaleY(scale, updateData);
 8003d54:	6823      	ldr	r3, [r4, #0]
 8003d56:	4632      	mov	r2, r6
 8003d58:	4629      	mov	r1, r5
 8003d5a:	4620      	mov	r0, r4
 8003d5c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003d60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003d64:	4718      	bx	r3

08003d66 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8003d66:	6803      	ldr	r3, [r0, #0]
 8003d68:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003d6c:	4718      	bx	r3

08003d6e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003d6e:	6803      	ldr	r3, [r0, #0]
 8003d70:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003d74:	4718      	bx	r3

08003d76 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8003d76:	6803      	ldr	r3, [r0, #0]
 8003d78:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003d7c:	4718      	bx	r3

08003d7e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003d7e:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003d80:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003d82:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003d84:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003d88:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003d8a:	db0e      	blt.n	8003daa <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003d8c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003d90:	fb92 f1f4 	sdiv	r1, r2, r4
 8003d94:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003d98:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003d9a:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003d9e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003da2:	3a01      	subs	r2, #1
 8003da4:	440a      	add	r2, r1
 8003da6:	4249      	negs	r1, r1
 8003da8:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003daa:	f06f 0101 	mvn.w	r1, #1
 8003dae:	fb01 4102 	mla	r1, r1, r2, r4
 8003db2:	3901      	subs	r1, #1
 8003db4:	fb91 f1f4 	sdiv	r1, r1, r4
 8003db8:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003dbc:	1049      	asrs	r1, r1, #1
 8003dbe:	4249      	negs	r1, r1
 8003dc0:	e7eb      	b.n	8003d9a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08003dc2 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8003dc2:	6803      	ldr	r3, [r0, #0]
 8003dc4:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003dc8:	4718      	bx	r3

08003dca <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003dca:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003dcc:	6803      	ldr	r3, [r0, #0]
 8003dce:	4351      	muls	r1, r2
 8003dd0:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003dd4:	4718      	bx	r3

08003dd6 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 8003dd6:	6803      	ldr	r3, [r0, #0]
 8003dd8:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003ddc:	4718      	bx	r3

08003dde <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003dde:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8003de2:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003de4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003de8:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003dec:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003df0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003df4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003df8:	db08      	blt.n	8003e0c <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8003dfa:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003dfe:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003e02:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003e06:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003e0a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003e0c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003e10:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003e14:	ee17 2a90 	vmov	r2, s15
 8003e18:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003e1c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003e20:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003e24:	1e51      	subs	r1, r2, #1
 8003e26:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003e2a:	ee10 2a10 	vmov	r2, s0
 8003e2e:	440a      	add	r2, r1
 8003e30:	4611      	mov	r1, r2
 8003e32:	e7ea      	b.n	8003e0a <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003e34 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003e34:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003e38:	4770      	bx	lr

08003e3a <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8003e3a:	6803      	ldr	r3, [r0, #0]
 8003e3c:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003e40:	4718      	bx	r3

08003e42 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003e42:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003e44:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003e46:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003e4a:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003e4c:	4798      	blx	r3
        if (i >= 0)
 8003e4e:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003e50:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003e52:	db07      	blt.n	8003e64 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003e54:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003e58:	fb90 f0f3 	sdiv	r0, r0, r3
 8003e5c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003e60:	1040      	asrs	r0, r0, #1
    }
 8003e62:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003e64:	f06f 0201 	mvn.w	r2, #1
 8003e68:	fb02 3000 	mla	r0, r2, r0, r3
 8003e6c:	3801      	subs	r0, #1
 8003e6e:	fb90 f0f3 	sdiv	r0, r0, r3
 8003e72:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003e76:	1040      	asrs	r0, r0, #1
 8003e78:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003e7a:	e7f2      	b.n	8003e62 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003e7c <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003e7c:	6803      	ldr	r3, [r0, #0]
 8003e7e:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003e82:	4718      	bx	r3

08003e84 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003e84:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003e86:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003e88:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003e8c:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003e8e:	4798      	blx	r3
        return (float)i / (float)scale;
 8003e90:	ee07 0a90 	vmov	s15, r0
 8003e94:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003e98:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003e9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003ea0:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003ea4:	bd10      	pop	{r4, pc}

08003ea6 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003ea6:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003eaa:	4770      	bx	lr

08003eac <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003eac:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003eae:	6803      	ldr	r3, [r0, #0]
 8003eb0:	4351      	muls	r1, r2
 8003eb2:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003eb6:	4718      	bx	r3

08003eb8 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003eb8:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003ebc:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003ebe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003ec2:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003ec6:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003eca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003ece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ed2:	db08      	blt.n	8003ee6 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003ed4:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003ed8:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003edc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ee0:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003ee4:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003ee6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003eea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003eee:	ee17 2a90 	vmov	r2, s15
 8003ef2:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003ef6:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003efa:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003efe:	1e51      	subs	r1, r2, #1
 8003f00:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003f04:	ee10 2a10 	vmov	r2, s0
 8003f08:	440a      	add	r2, r1
 8003f0a:	4611      	mov	r1, r2
 8003f0c:	e7ea      	b.n	8003ee4 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003f0e <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003f0e:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003f12:	4770      	bx	lr

08003f14 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003f14:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003f16:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003f18:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003f1c:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003f1e:	4798      	blx	r3
        if (i >= 0)
 8003f20:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003f22:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003f24:	db07      	blt.n	8003f36 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003f26:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003f2a:	fb90 f0f3 	sdiv	r0, r0, r3
 8003f2e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003f32:	1040      	asrs	r0, r0, #1
    }
 8003f34:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003f36:	f06f 0201 	mvn.w	r2, #1
 8003f3a:	fb02 3000 	mla	r0, r2, r0, r3
 8003f3e:	3801      	subs	r0, #1
 8003f40:	fb90 f0f3 	sdiv	r0, r0, r3
 8003f44:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003f48:	1040      	asrs	r0, r0, #1
 8003f4a:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003f4c:	e7f2      	b.n	8003f34 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003f4e <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003f4e:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003f50:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003f52:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003f56:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003f58:	4798      	blx	r3
        return (float)i / (float)scale;
 8003f5a:	ee07 0a90 	vmov	s15, r0
 8003f5e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003f62:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003f66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003f6a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003f6e:	bd10      	pop	{r4, pc}

08003f70 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003f70:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003f74:	4770      	bx	lr

08003f76 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003f76:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003f78:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003f7a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003f7e:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003f80:	b510      	push	{r4, lr}
 8003f82:	4604      	mov	r4, r0
        if (i >= 0)
 8003f84:	db0e      	blt.n	8003fa4 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003f86:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003f8a:	fb91 f1f2 	sdiv	r1, r1, r2
 8003f8e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003f92:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003f94:	b209      	sxth	r1, r1
 8003f96:	4620      	mov	r0, r4
 8003f98:	4798      	blx	r3
 8003f9a:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003f9e:	fb02 3000 	mla	r0, r2, r0, r3
 8003fa2:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003fa4:	f06f 0001 	mvn.w	r0, #1
 8003fa8:	fb00 2101 	mla	r1, r0, r1, r2
 8003fac:	3901      	subs	r1, #1
 8003fae:	fb91 f1f2 	sdiv	r1, r1, r2
 8003fb2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003fb6:	1049      	asrs	r1, r1, #1
 8003fb8:	4249      	negs	r1, r1
 8003fba:	e7eb      	b.n	8003f94 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003fbc <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003fbc:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003fbe:	4770      	bx	lr

08003fc0 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003fc0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003fc2:	4770      	bx	lr

08003fc4 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003fc4:	6803      	ldr	r3, [r0, #0]
 8003fc6:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003fca:	4718      	bx	r3

08003fcc <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003fcc:	6803      	ldr	r3, [r0, #0]
 8003fce:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003fd2:	4718      	bx	r3

08003fd4 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003fd4:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003fd6:	6803      	ldr	r3, [r0, #0]
 8003fd8:	4351      	muls	r1, r2
 8003fda:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003fde:	4718      	bx	r3

08003fe0 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003fe0:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003fe2:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003fe4:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003fe8:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003fec:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003ff0:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003ff2:	4798      	blx	r3
 8003ff4:	462b      	mov	r3, r5
 8003ff6:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003ffa:	4620      	mov	r0, r4
    }
 8003ffc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8004000:	4718      	bx	r3

08004002 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8004002:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8004006:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800400a:	4293      	cmp	r3, r2
 800400c:	db07      	blt.n	800401e <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 800400e:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8004012:	4419      	add	r1, r3
 8004014:	fb91 f0f2 	sdiv	r0, r1, r2
 8004018:	fb02 1110 	mls	r1, r2, r0, r1
 800401c:	b209      	sxth	r1, r1
    }
 800401e:	4608      	mov	r0, r1
 8004020:	4770      	bx	lr

08004022 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8004022:	0148      	lsls	r0, r1, #5
 8004024:	4770      	bx	lr

08004026 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8004026:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 800402a:	4770      	bx	lr

0800402c <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800402c:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8004030:	4770      	bx	lr

08004032 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8004032:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004034:	2200      	movs	r2, #0
        return rect.width;
 8004036:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800403a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800403e:	8002      	strh	r2, [r0, #0]
 8004040:	8042      	strh	r2, [r0, #2]
 8004042:	8084      	strh	r4, [r0, #4]
 8004044:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8004046:	bd10      	pop	{r4, pc}

08004048 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8004048:	2200      	movs	r2, #0
 800404a:	8002      	strh	r2, [r0, #0]
 800404c:	8042      	strh	r2, [r0, #2]
 800404e:	8082      	strh	r2, [r0, #4]
 8004050:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8004052:	4770      	bx	lr

08004054 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8004054:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8004056:	4770      	bx	lr

08004058 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8004058:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800405a:	4770      	bx	lr

0800405c <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 800405c:	2001      	movs	r0, #1
 800405e:	4770      	bx	lr

08004060 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8004060:	4770      	bx	lr

08004062 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8004062:	4770      	bx	lr

08004064 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8004064:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8004066:	b118      	cbz	r0, 8004070 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8004068:	6803      	ldr	r3, [r0, #0]
 800406a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800406e:	4718      	bx	r3
    }
 8004070:	4770      	bx	lr

08004072 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8004072:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8004074:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8004078:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 800407c:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8004080:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004084:	8044      	strh	r4, [r0, #2]
 8004086:	4421      	add	r1, r4
 8004088:	1a52      	subs	r2, r2, r1
 800408a:	2100      	movs	r1, #0
 800408c:	8001      	strh	r1, [r0, #0]
 800408e:	8085      	strh	r5, [r0, #4]
 8004090:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8004092:	bd30      	pop	{r4, r5, pc}

08004094 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8004094:	b510      	push	{r4, lr}
 8004096:	8042      	strh	r2, [r0, #2]
 8004098:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 800409c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80040a0:	8004      	strh	r4, [r0, #0]
 80040a2:	8082      	strh	r2, [r0, #4]
 80040a4:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 80040a6:	bd10      	pop	{r4, pc}

080040a8 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 80040a8:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 80040aa:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 80040ac:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80040b0:	4718      	bx	r3

080040b2 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 80040b2:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 80040b4:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 80040b6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80040ba:	4718      	bx	r3

080040bc <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80040bc:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80040c0:	4770      	bx	lr

080040c2 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80040c2:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80040c6:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80040ca:	4403      	add	r3, r0
 80040cc:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80040d0:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80040d2:	b200      	sxth	r0, r0
 80040d4:	4770      	bx	lr

080040d6 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80040d6:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80040da:	4770      	bx	lr

080040dc <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80040dc:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80040e0:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80040e4:	4403      	add	r3, r0
 80040e6:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80040ea:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80040ec:	b200      	sxth	r0, r0
 80040ee:	4770      	bx	lr

080040f0 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 80040f0:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 80040f2:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 80040f4:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80040f8:	4611      	mov	r1, r2
 80040fa:	4718      	bx	r3

080040fc <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 80040fc:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8004100:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8004102:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8004106:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8004108:	186c      	adds	r4, r5, r1
 800410a:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 800410e:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8004112:	80c2      	strh	r2, [r0, #6]
 8004114:	1b09      	subs	r1, r1, r4
 8004116:	2400      	movs	r4, #0
 8004118:	8044      	strh	r4, [r0, #2]
 800411a:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 800411c:	bd30      	pop	{r4, r5, pc}

0800411e <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 800411e:	8002      	strh	r2, [r0, #0]
 8004120:	8083      	strh	r3, [r0, #4]
 8004122:	f9bd 2000 	ldrsh.w	r2, [sp]
 8004126:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800412a:	8042      	strh	r2, [r0, #2]
 800412c:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 800412e:	4770      	bx	lr

08004130 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8004130:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8004132:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8004134:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8004138:	4718      	bx	r3

0800413a <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 800413a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 800413c:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 800413e:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8004142:	4718      	bx	r3

08004144 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8004144:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8004148:	4770      	bx	lr

0800414a <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 800414a:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 800414e:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8004152:	4403      	add	r3, r0
 8004154:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8004158:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 800415a:	b200      	sxth	r0, r0
 800415c:	4770      	bx	lr

0800415e <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 800415e:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8004162:	4770      	bx	lr

08004164 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8004164:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8004168:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 800416c:	4403      	add	r3, r0
 800416e:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8004172:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8004174:	b200      	sxth	r0, r0
 8004176:	4770      	bx	lr

08004178 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8004178:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 800417a:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 800417c:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8004180:	4611      	mov	r1, r2
 8004182:	4718      	bx	r3

08004184 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8004184:	4770      	bx	lr

08004186 <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8004186:	4770      	bx	lr

08004188 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004188:	4770      	bx	lr

0800418a <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 800418a:	4770      	bx	lr

0800418c <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 800418c:	4770      	bx	lr

0800418e <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 800418e:	4770      	bx	lr

08004190 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8004190:	4770      	bx	lr

08004192 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004192:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004194:	68c2      	ldr	r2, [r0, #12]
 8004196:	6844      	ldr	r4, [r0, #4]
 8004198:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800419a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800419c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80041a0:	07d2      	lsls	r2, r2, #31
 80041a2:	bf48      	it	mi
 80041a4:	5962      	ldrmi	r2, [r4, r5]
 80041a6:	689b      	ldr	r3, [r3, #8]
    }
 80041a8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80041aa:	bf48      	it	mi
 80041ac:	58d3      	ldrmi	r3, [r2, r3]
 80041ae:	4718      	bx	r3

080041b0 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80041b0:	6843      	ldr	r3, [r0, #4]
 80041b2:	b12b      	cbz	r3, 80041c0 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80041b4:	6883      	ldr	r3, [r0, #8]
 80041b6:	b92b      	cbnz	r3, 80041c4 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80041b8:	68c0      	ldr	r0, [r0, #12]
 80041ba:	f000 0001 	and.w	r0, r0, #1
 80041be:	4770      	bx	lr
 80041c0:	4618      	mov	r0, r3
 80041c2:	4770      	bx	lr
 80041c4:	2001      	movs	r0, #1
    }
 80041c6:	4770      	bx	lr

080041c8 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 80041c8:	b510      	push	{r4, lr}
 80041ca:	2140      	movs	r1, #64	; 0x40
 80041cc:	4604      	mov	r4, r0
 80041ce:	f01c fce3 	bl	8020b98 <_ZdlPvj>
 80041d2:	4620      	mov	r0, r4
 80041d4:	bd10      	pop	{r4, pc}

080041d6 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 80041d6:	b510      	push	{r4, lr}
 80041d8:	2140      	movs	r1, #64	; 0x40
 80041da:	4604      	mov	r4, r0
 80041dc:	f01c fcdc 	bl	8020b98 <_ZdlPvj>
 80041e0:	4620      	mov	r0, r4
 80041e2:	bd10      	pop	{r4, pc}

080041e4 <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 80041e4:	b510      	push	{r4, lr}
 80041e6:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 80041ea:	4604      	mov	r4, r0
 80041ec:	f01c fcd4 	bl	8020b98 <_ZdlPvj>
 80041f0:	4620      	mov	r0, r4
 80041f2:	bd10      	pop	{r4, pc}

080041f4 <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 80041f4:	b510      	push	{r4, lr}
 80041f6:	f44f 7110 	mov.w	r1, #576	; 0x240
 80041fa:	4604      	mov	r4, r0
 80041fc:	f01c fccc 	bl	8020b98 <_ZdlPvj>
 8004200:	4620      	mov	r0, r4
 8004202:	bd10      	pop	{r4, pc}

08004204 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004204:	b510      	push	{r4, lr}
 8004206:	2110      	movs	r1, #16
 8004208:	4604      	mov	r4, r0
 800420a:	f01c fcc5 	bl	8020b98 <_ZdlPvj>
 800420e:	4620      	mov	r0, r4
 8004210:	bd10      	pop	{r4, pc}

08004212 <_ZN19ScreenGraphViewBaseD0Ev>:
 8004212:	b510      	push	{r4, lr}
 8004214:	f242 713c 	movw	r1, #10044	; 0x273c
 8004218:	4604      	mov	r4, r0
 800421a:	f01c fcbd 	bl	8020b98 <_ZdlPvj>
 800421e:	4620      	mov	r0, r4
 8004220:	bd10      	pop	{r4, pc}

08004222 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8004222:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8004226:	b10b      	cbz	r3, 800422c <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8004228:	f006 beb1 	b.w	800af8e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 800422c:	4770      	bx	lr

0800422e <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 800422e:	b513      	push	{r0, r1, r4, lr}
 8004230:	4603      	mov	r3, r0
 8004232:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8004234:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8004238:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 800423a:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 800423c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004240:	4798      	blx	r3
 8004242:	9901      	ldr	r1, [sp, #4]
 8004244:	4602      	mov	r2, r0
 8004246:	4620      	mov	r0, r4
    }
 8004248:	b002      	add	sp, #8
 800424a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 800424e:	f008 bce7 	b.w	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08004252 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8004252:	b513      	push	{r0, r1, r4, lr}
 8004254:	4603      	mov	r3, r0
 8004256:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8004258:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 800425c:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 800425e:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8004260:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004264:	4798      	blx	r3
 8004266:	9901      	ldr	r1, [sp, #4]
 8004268:	4602      	mov	r2, r0
 800426a:	4620      	mov	r0, r4
    }
 800426c:	b002      	add	sp, #8
 800426e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8004272:	f008 bcd5 	b.w	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08004278 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8004278:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 800427a:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 800427c:	db03      	blt.n	8004286 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 800427e:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8004282:	4294      	cmp	r4, r2
 8004284:	dc06      	bgt.n	8004294 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8004286:	4b08      	ldr	r3, [pc, #32]	; (80042a8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8004288:	4a08      	ldr	r2, [pc, #32]	; (80042ac <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 800428a:	4809      	ldr	r0, [pc, #36]	; (80042b0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 800428c:	f240 6133 	movw	r1, #1587	; 0x633
 8004290:	f01c fd36 	bl	8020d00 <__assert_func>
        return yValues[dataIndex(index)];
 8004294:	6803      	ldr	r3, [r0, #0]
 8004296:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 800429a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800429e:	4798      	blx	r3
    }
 80042a0:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 80042a4:	bd10      	pop	{r4, pc}
 80042a6:	bf00      	nop
 80042a8:	080230c4 	.word	0x080230c4
 80042ac:	080230e7 	.word	0x080230e7
 80042b0:	08023136 	.word	0x08023136

080042b4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 80042b4:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 80042b6:	b510      	push	{r4, lr}
 80042b8:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 80042ba:	db03      	blt.n	80042c4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 80042bc:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 80042c0:	429a      	cmp	r2, r3
 80042c2:	dc06      	bgt.n	80042d2 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 80042c4:	4b07      	ldr	r3, [pc, #28]	; (80042e4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 80042c6:	4a08      	ldr	r2, [pc, #32]	; (80042e8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 80042c8:	4808      	ldr	r0, [pc, #32]	; (80042ec <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 80042ca:	f240 612d 	movw	r1, #1581	; 0x62d
 80042ce:	f01c fd17 	bl	8020d00 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 80042d2:	6803      	ldr	r3, [r0, #0]
 80042d4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 80042d8:	4798      	blx	r3
 80042da:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 80042de:	fb02 3000 	mla	r0, r2, r0, r3
 80042e2:	bd10      	pop	{r4, pc}
 80042e4:	080230c4 	.word	0x080230c4
 80042e8:	08023193 	.word	0x08023193
 80042ec:	08023136 	.word	0x08023136

080042f0 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 80042f0:	f500 5389 	add.w	r3, r0, #4384	; 0x1120
 80042f4:	3308      	adds	r3, #8
 80042f6:	4299      	cmp	r1, r3
{
 80042f8:	b510      	push	{r4, lr}
 80042fa:	4604      	mov	r4, r0
    if (&src == &toggleButton1)
 80042fc:	d115      	bne.n	800432a <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction2
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 80042fe:	f890 3d7d 	ldrb.w	r3, [r0, #3453]	; 0xd7d
 8004302:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8004306:	f880 3d7d 	strb.w	r3, [r0, #3453]	; 0xd7d
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 800430a:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800430e:	f083 0301 	eor.w	r3, r3, #1
 8004312:	f880 30f1 	strb.w	r3, [r0, #241]	; 0xf1
        dynamicGraph1.invalidate();
 8004316:	f600 5058 	addw	r0, r0, #3416	; 0xd58
 800431a:	f00e f8b8 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 800431e:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
        //When buttonCloseModal clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
    }
}
 8004322:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        modalWindow1.invalidate();
 8004326:	f00e b8b2 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
    else if (&src == &buttonCloseModal)
 800432a:	f500 539c 	add.w	r3, r0, #4992	; 0x1380
 800432e:	3308      	adds	r3, #8
 8004330:	4299      	cmp	r1, r3
 8004332:	d108      	bne.n	8004346 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
 8004334:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8004338:	2200      	movs	r2, #0
        modalWindow1.invalidate();
 800433a:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 800433e:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8004342:	3018      	adds	r0, #24
 8004344:	e7ed      	b.n	8004322 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
}
 8004346:	bd10      	pop	{r4, pc}

08004348 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8004348:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 800434a:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 800434c:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 800434e:	f00e fa40 	bl	80127d2 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8004352:	2800      	cmp	r0, #0
 8004354:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004358:	9901      	ldr	r1, [sp, #4]
 800435a:	462a      	mov	r2, r5
 800435c:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8004360:	db04      	blt.n	800436c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004362:	f00e fa55 	bl	8012810 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8004366:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8004368:	b003      	add	sp, #12
 800436a:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800436c:	f00e fa50 	bl	8012810 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8004370:	1a20      	subs	r0, r4, r0
 8004372:	e7f9      	b.n	8004368 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08004374 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8004374:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8004376:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 800437a:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 800437e:	1963      	adds	r3, r4, r5
 8004380:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8004384:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8004386:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800438a:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800438c:	b22d      	sxth	r5, r5
 800438e:	1ad2      	subs	r2, r2, r3
 8004390:	1e69      	subs	r1, r5, #1
 8004392:	1af0      	subs	r0, r6, r3
 8004394:	f7ff ffd8 	bl	8004348 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8004398:	442c      	add	r4, r5
 800439a:	3c01      	subs	r4, #1
    }
 800439c:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 80043a0:	bd70      	pop	{r4, r5, r6, pc}

080043a2 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 80043a2:	b538      	push	{r3, r4, r5, lr}
 80043a4:	4604      	mov	r4, r0
 80043a6:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80043a8:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 80043ac:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 80043b0:	440b      	add	r3, r1
 80043b2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80043b6:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80043ba:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80043bc:	b209      	sxth	r1, r1
 80043be:	1b52      	subs	r2, r2, r5
 80043c0:	3901      	subs	r1, #1
 80043c2:	1b40      	subs	r0, r0, r5
 80043c4:	f7ff ffc0 	bl	8004348 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 80043c8:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 80043cc:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80043d0:	bd38      	pop	{r3, r4, r5, pc}
	...

080043d4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 80043d4:	b510      	push	{r4, lr}
 80043d6:	4604      	mov	r4, r0
        : CanvasWidget()
 80043d8:	f008 f80a 	bl	800c3f0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 80043dc:	4a06      	ldr	r2, [pc, #24]	; (80043f8 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 80043de:	6022      	str	r2, [r4, #0]
        : color(col)
 80043e0:	2300      	movs	r3, #0
 80043e2:	2201      	movs	r2, #1
 80043e4:	210a      	movs	r1, #10
 80043e6:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 80043ea:	62e3      	str	r3, [r4, #44]	; 0x2c
 80043ec:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 80043f0:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80043f2:	4620      	mov	r0, r4
 80043f4:	bd10      	pop	{r4, pc}
 80043f6:	bf00      	nop
 80043f8:	08024168 	.word	0x08024168

080043fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80043fc:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80043fe:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004400:	4e12      	ldr	r6, [pc, #72]	; (800444c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8004402:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8004404:	4b12      	ldr	r3, [pc, #72]	; (8004450 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8004406:	6003      	str	r3, [r0, #0]
 8004408:	6833      	ldr	r3, [r6, #0]
 800440a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 800440e:	4605      	mov	r5, r0
 8004410:	b10a      	cbz	r2, 8004416 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8004412:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004414:	b900      	cbnz	r0, 8004418 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8004416:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8004418:	6803      	ldr	r3, [r0, #0]
 800441a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800441c:	4798      	blx	r3
        return auxiliaryLCD;
 800441e:	6833      	ldr	r3, [r6, #0]
 8004420:	fab0 f480 	clz	r4, r0
 8004424:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004426:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8004428:	b130      	cbz	r0, 8004438 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800442a:	6803      	ldr	r3, [r0, #0]
 800442c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800442e:	4798      	blx	r3
 8004430:	2800      	cmp	r0, #0
 8004432:	bf08      	it	eq
 8004434:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8004438:	b92c      	cbnz	r4, 8004446 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800443a:	4b06      	ldr	r3, [pc, #24]	; (8004454 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 800443c:	4a06      	ldr	r2, [pc, #24]	; (8004458 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800443e:	4807      	ldr	r0, [pc, #28]	; (800445c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8004440:	212c      	movs	r1, #44	; 0x2c
 8004442:	f01c fc5d 	bl	8020d00 <__assert_func>
    }
 8004446:	4628      	mov	r0, r5
 8004448:	bd70      	pop	{r4, r5, r6, pc}
 800444a:	bf00      	nop
 800444c:	20015800 	.word	0x20015800
 8004450:	08023454 	.word	0x08023454
 8004454:	080231e2 	.word	0x080231e2
 8004458:	08023240 	.word	0x08023240
 800445c:	08023279 	.word	0x08023279

08004460 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8004460:	b510      	push	{r4, lr}
 8004462:	4604      	mov	r4, r0
        : CanvasWidget()
 8004464:	f007 ffc4 	bl	800c3f0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8004468:	4a0a      	ldr	r2, [pc, #40]	; (8004494 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 800446a:	6022      	str	r2, [r4, #0]
 800446c:	2300      	movs	r3, #0
 800446e:	2201      	movs	r2, #1
 8004470:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8004474:	4a08      	ldr	r2, [pc, #32]	; (8004498 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8004476:	63a2      	str	r2, [r4, #56]	; 0x38
 8004478:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800447c:	87a2      	strh	r2, [r4, #60]	; 0x3c
 800447e:	222e      	movs	r2, #46	; 0x2e
 8004480:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004482:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8004486:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 800448a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 800448e:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8004490:	4620      	mov	r0, r4
 8004492:	bd10      	pop	{r4, pc}
 8004494:	08024360 	.word	0x08024360
 8004498:	08022724 	.word	0x08022724

0800449c <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 800449c:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 800449e:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 80044a0:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 80044a2:	2100      	movs	r1, #0
 80044a4:	f01c fdb2 	bl	802100c <memset>
 80044a8:	4620      	mov	r0, r4
 80044aa:	f7fe fe3f 	bl	800312c <_ZN8touchgfx6WidgetC1Ev>
 80044ae:	4b05      	ldr	r3, [pc, #20]	; (80044c4 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 80044b0:	6023      	str	r3, [r4, #0]
 80044b2:	2300      	movs	r3, #0
 80044b4:	62a3      	str	r3, [r4, #40]	; 0x28
 80044b6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80044ba:	2301      	movs	r3, #1
 80044bc:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 80044c0:	4620      	mov	r0, r4
 80044c2:	bd10      	pop	{r4, pc}
 80044c4:	08024400 	.word	0x08024400

080044c8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 80044c8:	b510      	push	{r4, lr}
 80044ca:	4604      	mov	r4, r0
        : TextArea()
 80044cc:	f7fe fe6e 	bl	80031ac <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80044d0:	4b02      	ldr	r3, [pc, #8]	; (80044dc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 80044d2:	6023      	str	r3, [r4, #0]
 80044d4:	2300      	movs	r3, #0
 80044d6:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80044d8:	4620      	mov	r0, r4
 80044da:	bd10      	pop	{r4, pc}
 80044dc:	08022e88 	.word	0x08022e88

080044e0 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 80044e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044e4:	ed2d 8b10 	vpush	{d8-d15}
 80044e8:	4604      	mov	r4, r0
 80044ea:	b097      	sub	sp, #92	; 0x5c
 80044ec:	f00e fb3a 	bl	8012b64 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 80044f0:	4622      	mov	r2, r4
 80044f2:	2500      	movs	r5, #0
 80044f4:	4beb      	ldr	r3, [pc, #940]	; (80048a4 <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 80044f6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80044f8:	f842 3b40 	str.w	r3, [r2], #64
 80044fc:	4610      	mov	r0, r2
 80044fe:	ee0b 2a90 	vmov	s23, r2
 8004502:	f7fe fe25 	bl	8003150 <_ZN8touchgfx3BoxC1Ev>
 8004506:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800450a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800450e:	a914      	add	r1, sp, #80	; 0x50
 8004510:	4618      	mov	r0, r3
 8004512:	ee0c 3a10 	vmov	s24, r3
 8004516:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 800451a:	f7fe fe2d 	bl	8003178 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800451e:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 8004522:	4618      	mov	r0, r3
 8004524:	f104 0bcc 	add.w	fp, r4, #204	; 0xcc
 8004528:	ee0d 3a90 	vmov	s27, r3
 800452c:	f7fe fe10 	bl	8003150 <_ZN8touchgfx3BoxC1Ev>
 8004530:	4bdd      	ldr	r3, [pc, #884]	; (80048a8 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 8004532:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004536:	f44f 7116 	mov.w	r1, #600	; 0x258
 800453a:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 800453e:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 8004542:	4658      	mov	r0, fp
 8004544:	f008 fb08 	bl	800cb58 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004548:	4bd8      	ldr	r3, [pc, #864]	; (80048ac <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 800454a:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 800454e:	f504 7207 	add.w	r2, r4, #540	; 0x21c
 8004552:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004554:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004556:	e9c4 3582 	strd	r3, r5, [r4, #520]	; 0x208
 800455a:	e9c4 2584 	strd	r2, r5, [r4, #528]	; 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800455e:	4658      	mov	r0, fp
 8004560:	f240 2257 	movw	r2, #599	; 0x257
 8004564:	f7ff fa3a 	bl	80039dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004568:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 800456c:	4ad0      	ldr	r2, [pc, #832]	; (80048b0 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 800456e:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 8004572:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8004574:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
 8004578:	ee0f 3a10 	vmov	s30, r3
 800457c:	f007 ff38 	bl	800c3f0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8004580:	f04f 0202 	mov.w	r2, #2
 8004584:	4bcb      	ldr	r3, [pc, #812]	; (80048b4 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004586:	f8df 9350 	ldr.w	r9, [pc, #848]	; 80048d8 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 800458a:	f884 2ba8 	strb.w	r2, [r4, #2984]	; 0xba8
 800458e:	f604 32ac 	addw	r2, r4, #2988	; 0xbac
 8004592:	f8c4 3b7c 	str.w	r3, [r4, #2940]	; 0xb7c
 8004596:	4610      	mov	r0, r2
 8004598:	9207      	str	r2, [sp, #28]
 800459a:	f7ff ff2f 	bl	80043fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800459e:	f109 0224 	add.w	r2, r9, #36	; 0x24
 80045a2:	f504 613c 	add.w	r1, r4, #3008	; 0xbc0
 80045a6:	f8c4 2bb4 	str.w	r2, [r4, #2996]	; 0xbb4
 80045aa:	f8c4 9bac 	str.w	r9, [r4, #2988]	; 0xbac
class GraphElementGridX : public GraphElementGridBase
 80045ae:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80045b0:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
 80045b4:	f8df a324 	ldr.w	sl, [pc, #804]	; 80048dc <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
class GraphElementGridY : public GraphElementGridBase
 80045b8:	4fbf      	ldr	r7, [pc, #764]	; (80048b8 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 80045ba:	ee0f 1a90 	vmov	s31, r1
class GraphElementGridX : public GraphElementGridBase
 80045be:	f7ff ff09 	bl	80043d4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80045c2:	f504 6140 	add.w	r1, r4, #3072	; 0xc00
 80045c6:	f8c4 abc0 	str.w	sl, [r4, #3008]	; 0xbc0
class GraphElementGridY : public GraphElementGridBase
 80045ca:	4608      	mov	r0, r1
 80045cc:	9108      	str	r1, [sp, #32]
 80045ce:	f7ff ff01 	bl	80043d4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80045d2:	f504 6144 	add.w	r1, r4, #3136	; 0xc40
 80045d6:	f8c4 7c00 	str.w	r7, [r4, #3072]	; 0xc00
class GraphElementGridX : public GraphElementGridBase
 80045da:	4608      	mov	r0, r1
 80045dc:	ee0e 1a10 	vmov	s28, r1
 80045e0:	f7ff fef8 	bl	80043d4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80045e4:	f504 6148 	add.w	r1, r4, #3200	; 0xc80
 80045e8:	f8c4 ac40 	str.w	sl, [r4, #3136]	; 0xc40
class GraphElementGridY : public GraphElementGridBase
 80045ec:	4608      	mov	r0, r1
 80045ee:	ee0e 1a90 	vmov	s29, r1
 80045f2:	f7ff feef 	bl	80043d4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80045f6:	f504 614c 	add.w	r1, r4, #3264	; 0xcc0
 80045fa:	f8c4 7c80 	str.w	r7, [r4, #3200]	; 0xc80

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 80045fe:	4608      	mov	r0, r1
 8004600:	9109      	str	r1, [sp, #36]	; 0x24
 8004602:	f7ff ff2d 	bl	8004460 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8004606:	4aad      	ldr	r2, [pc, #692]	; (80048bc <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 8004608:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
 800460c:	f604 510c 	addw	r1, r4, #3340	; 0xd0c

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8004610:	4608      	mov	r0, r1
 8004612:	f604 5858 	addw	r8, r4, #3416	; 0xd58
 8004616:	910a      	str	r1, [sp, #40]	; 0x28
 8004618:	f7ff ff22 	bl	8004460 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800461c:	49a8      	ldr	r1, [pc, #672]	; (80048c0 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 800461e:	f8c4 1d0c 	str.w	r1, [r4, #3340]	; 0xd0c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004622:	4640      	mov	r0, r8
 8004624:	213c      	movs	r1, #60	; 0x3c
 8004626:	f008 fa97 	bl	800cb58 <_ZN8touchgfx17AbstractDataGraphC1Es>
 800462a:	4ba0      	ldr	r3, [pc, #640]	; (80048ac <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 800462c:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 8004630:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 8004632:	f604 63a8 	addw	r3, r4, #3752	; 0xea8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004636:	4629      	mov	r1, r5
 8004638:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800463a:	f8c4 0e94 	str.w	r0, [r4, #3732]	; 0xe94
 800463e:	f8c4 3e9c 	str.w	r3, [r4, #3740]	; 0xe9c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004642:	4640      	mov	r0, r8
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004644:	f8c4 5e98 	str.w	r5, [r4, #3736]	; 0xe98
 8004648:	f8c4 5ea0 	str.w	r5, [r4, #3744]	; 0xea0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800464c:	f7ff f9c6 	bl	80039dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004650:	4b9c      	ldr	r3, [pc, #624]	; (80048c4 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 8004652:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 8004656:	f604 7098 	addw	r0, r4, #3992	; 0xf98
        : DynamicDataGraph(capacity, values), current(0)
 800465a:	f8a4 5ea4 	strh.w	r5, [r4, #3748]	; 0xea4
 800465e:	900b      	str	r0, [sp, #44]	; 0x2c
        : CanvasWidget()
 8004660:	f007 fec6 	bl	800c3f0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 8004664:	4b93      	ldr	r3, [pc, #588]	; (80048b4 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8004666:	f8c4 3f98 	str.w	r3, [r4, #3992]	; 0xf98
 800466a:	f04f 0302 	mov.w	r3, #2
 800466e:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
 8004672:	f604 70c8 	addw	r0, r4, #4040	; 0xfc8
 8004676:	900c      	str	r0, [sp, #48]	; 0x30
 8004678:	f7ff fec0 	bl	80043fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800467c:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004680:	f8c4 2fd0 	str.w	r2, [r4, #4048]	; 0xfd0
 8004684:	f8c4 9fc8 	str.w	r9, [r4, #4040]	; 0xfc8
 8004688:	f604 70dc 	addw	r0, r4, #4060	; 0xfdc
 800468c:	f8c4 5fd4 	str.w	r5, [r4, #4052]	; 0xfd4
 8004690:	900d      	str	r0, [sp, #52]	; 0x34
class GraphElementGridX : public GraphElementGridBase
 8004692:	f7ff fe9f 	bl	80043d4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004696:	f504 5080 	add.w	r0, r4, #4096	; 0x1000
class GraphElementGridY : public GraphElementGridBase
 800469a:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
class GraphElementGridX : public GraphElementGridBase
 800469e:	f8c4 afdc 	str.w	sl, [r4, #4060]	; 0xfdc
 80046a2:	301c      	adds	r0, #28
 80046a4:	9005      	str	r0, [sp, #20]
class GraphElementGridY : public GraphElementGridBase
 80046a6:	f7ff fe95 	bl	80043d4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80046aa:	f504 5082 	add.w	r0, r4, #4160	; 0x1040
 80046ae:	f8c9 701c 	str.w	r7, [r9, #28]
 80046b2:	301c      	adds	r0, #28
 80046b4:	9003      	str	r0, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 80046b6:	f7ff fe8d 	bl	80043d4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80046ba:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 80046be:	f8c9 a05c 	str.w	sl, [r9, #92]	; 0x5c
 80046c2:	301c      	adds	r0, #28
 80046c4:	9004      	str	r0, [sp, #16]
class GraphElementGridY : public GraphElementGridBase
 80046c6:	f7ff fe85 	bl	80043d4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80046ca:	f504 5086 	add.w	r0, r4, #4288	; 0x10c0
 80046ce:	f8c9 709c 	str.w	r7, [r9, #156]	; 0x9c
 80046d2:	301c      	adds	r0, #28
 80046d4:	9006      	str	r0, [sp, #24]
 80046d6:	f7ff fec3 	bl	8004460 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80046da:	4979      	ldr	r1, [pc, #484]	; (80048c0 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80046dc:	f8c9 10dc 	str.w	r1, [r9, #220]	; 0xdc
 80046e0:	f504 5189 	add.w	r1, r4, #4384	; 0x1120
 80046e4:	3108      	adds	r1, #8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80046e6:	4608      	mov	r0, r1
 80046e8:	ee09 1a10 	vmov	s18, r1
 80046ec:	f7ff fed6 	bl	800449c <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80046f0:	4b75      	ldr	r3, [pc, #468]	; (80048c8 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 80046f2:	f8c9 3128 	str.w	r3, [r9, #296]	; 0x128
 80046f6:	f504 518b 	add.w	r1, r4, #4448	; 0x1160
 80046fa:	f8a9 6156 	strh.w	r6, [r9, #342]	; 0x156
 80046fe:	f8a9 6158 	strh.w	r6, [r9, #344]	; 0x158
 8004702:	f889 615a 	strb.w	r6, [r9, #346]	; 0x15a
 8004706:	f8a9 615c 	strh.w	r6, [r9, #348]	; 0x15c
 800470a:	4608      	mov	r0, r1
 800470c:	ee09 1a90 	vmov	s19, r1
 8004710:	f7fe fd4c 	bl	80031ac <_ZN8touchgfx8TextAreaC1Ev>
 8004714:	f504 518d 	add.w	r1, r4, #4512	; 0x11a0
 8004718:	3108      	adds	r1, #8
 800471a:	4608      	mov	r0, r1
 800471c:	ee08 1a10 	vmov	s16, r1
 8004720:	f7ff fed2 	bl	80044c8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004724:	f504 518f 	add.w	r1, r4, #4576	; 0x11e0
 8004728:	3114      	adds	r1, #20
 800472a:	4608      	mov	r0, r1
 800472c:	ee0a 1a10 	vmov	s20, r1
 8004730:	f7ff feca 	bl	80044c8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004734:	f504 5192 	add.w	r1, r4, #4672	; 0x1240
 8004738:	4608      	mov	r0, r1
 800473a:	ee0c 1a90 	vmov	s25, r1
 800473e:	f7ff fec3 	bl	80044c8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004742:	f504 5194 	add.w	r1, r4, #4736	; 0x1280
 8004746:	310c      	adds	r1, #12
 8004748:	f504 5a96 	add.w	sl, r4, #4800	; 0x12c0
 800474c:	4608      	mov	r0, r1
 800474e:	f10a 0a18 	add.w	sl, sl, #24
 8004752:	ee0a 1a90 	vmov	s21, r1
 8004756:	f7ff feb7 	bl	80044c8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800475a:	4650      	mov	r0, sl
 800475c:	f006 fb54 	bl	800ae08 <_ZN8touchgfx11ModalWindowC1Ev>
 8004760:	f504 519c 	add.w	r1, r4, #4992	; 0x1380
 8004764:	3108      	adds	r1, #8
 8004766:	4608      	mov	r0, r1
 8004768:	ee0d 1a10 	vmov	s26, r1
 800476c:	f7ff fe96 	bl	800449c <_ZN8touchgfx14AbstractButtonC1Ev>
 8004770:	f504 519d 	add.w	r1, r4, #5024	; 0x13a0
 8004774:	311c      	adds	r1, #28
 8004776:	4b55      	ldr	r3, [pc, #340]	; (80048cc <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8004778:	f8c9 3388 	str.w	r3, [r9, #904]	; 0x388
 800477c:	460b      	mov	r3, r1
 800477e:	4618      	mov	r0, r3
 8004780:	f8a9 63b6 	strh.w	r6, [r9, #950]	; 0x3b6
 8004784:	f8a9 63b8 	strh.w	r6, [r9, #952]	; 0x3b8
 8004788:	f889 63ba 	strb.w	r6, [r9, #954]	; 0x3ba
 800478c:	ee0b 1a10 	vmov	s22, r1
 8004790:	a914      	add	r1, sp, #80	; 0x50
 8004792:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 8004796:	f7fe fcef 	bl	8003178 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800479a:	f504 519f 	add.w	r1, r4, #5088	; 0x13e0
 800479e:	3108      	adds	r1, #8
 80047a0:	4608      	mov	r0, r1
 80047a2:	ee08 1a90 	vmov	s17, r1
 80047a6:	f7fe fd01 	bl	80031ac <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80047aa:	4b49      	ldr	r3, [pc, #292]	; (80048d0 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 80047ac:	f8c9 346c 	str.w	r3, [r9, #1132]	; 0x46c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80047b0:	f504 50a3 	add.w	r0, r4, #5216	; 0x1460
 80047b4:	4b47      	ldr	r3, [pc, #284]	; (80048d4 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 80047b6:	f8c9 3474 	str.w	r3, [r9, #1140]	; 0x474
 80047ba:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 80047be:	301c      	adds	r0, #28
 80047c0:	f8c9 4470 	str.w	r4, [r9, #1136]	; 0x470
 80047c4:	f8c9 5478 	str.w	r5, [r9, #1144]	; 0x478
 80047c8:	f00b fa0a 	bl	800fbe0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80047cc:	23f0      	movs	r3, #240	; 0xf0
 80047ce:	ee1b 0a90 	vmov	r0, s23
 80047d2:	9300      	str	r3, [sp, #0]
 80047d4:	462a      	mov	r2, r5
 80047d6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80047da:	4629      	mov	r1, r5
 80047dc:	f7fe fc93 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 80047e0:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 80047e4:	f06f 0216 	mvn.w	r2, #22
 80047e8:	ee1c 0a10 	vmov	r0, s24
 80047ec:	66a1      	str	r1, [r4, #104]	; 0x68
 80047ee:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 80047f2:	f7fe fc49 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 80047f6:	f04f 0104 	mov.w	r1, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 80047fa:	ee1c 0a10 	vmov	r0, s24
 80047fe:	f8ad 1050 	strh.w	r1, [sp, #80]	; 0x50
 8004802:	a914      	add	r1, sp, #80	; 0x50
 8004804:	f00a f9fe 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 8004808:	21a6      	movs	r1, #166	; 0xa6
 800480a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800480e:	ee1d 0a90 	vmov	r0, s27
 8004812:	9100      	str	r1, [sp, #0]
 8004814:	462a      	mov	r2, r5
 8004816:	4629      	mov	r1, r5
 8004818:	f7fe fc75 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800481c:	f04f 31ff 	mov.w	r1, #4294967295
 8004820:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
        borderColor = colorBorder;
 8004824:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004828:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
        borderSize = size;
 800482c:	f04f 0101 	mov.w	r1, #1
 8004830:	f8a4 10c8 	strh.w	r1, [r4, #200]	; 0xc8
    dynamicGraph2.setScale(1000);
 8004834:	462a      	mov	r2, r5
 8004836:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800483a:	4658      	mov	r0, fp
 800483c:	f7ff fa82 	bl	8003d44 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 8004840:	220a      	movs	r2, #10
 8004842:	4629      	mov	r1, r5
 8004844:	4658      	mov	r0, fp
 8004846:	f7ff f8c9 	bl	80039dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 800484a:	21a6      	movs	r1, #166	; 0xa6
 800484c:	9100      	str	r1, [sp, #0]
 800484e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004852:	462a      	mov	r2, r5
 8004854:	4629      	mov	r1, r5
 8004856:	4658      	mov	r0, fp
 8004858:	f7fe fc55 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 800485c:	210f      	movs	r1, #15
 800485e:	9100      	str	r1, [sp, #0]
 8004860:	2305      	movs	r3, #5
 8004862:	2214      	movs	r2, #20
 8004864:	2106      	movs	r1, #6
 8004866:	4658      	mov	r0, fp
 8004868:	f008 f928 	bl	800cabc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 800486c:	462b      	mov	r3, r5
 800486e:	462a      	mov	r2, r5
 8004870:	4629      	mov	r1, r5
 8004872:	4658      	mov	r0, fp
 8004874:	9500      	str	r5, [sp, #0]
 8004876:	f008 f824 	bl	800c8c2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 800487a:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800487e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004882:	4658      	mov	r0, fp
 8004884:	f7ff f940 	bl	8003b08 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004888:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800488c:	f8d4 1bf0 	ldr.w	r1, [r4, #3056]	; 0xbf0
 8004890:	f8d4 0bf4 	ldr.w	r0, [r4, #3060]	; 0xbf4
        visible = vis;
 8004894:	f884 50f1 	strb.w	r5, [r4, #241]	; 0xf1
 8004898:	f008 f9c2 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 800489c:	ee1e 3a10 	vmov	r3, s28
 80048a0:	e01e      	b.n	80048e0 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 80048a2:	bf00      	nop
 80048a4:	080237c4 	.word	0x080237c4
 80048a8:	08024650 	.word	0x08024650
 80048ac:	08023e14 	.word	0x08023e14
 80048b0:	08023474 	.word	0x08023474
 80048b4:	080240ec 	.word	0x080240ec
 80048b8:	0802339c 	.word	0x0802339c
 80048bc:	08024220 	.word	0x08024220
 80048c0:	080242c0 	.word	0x080242c0
 80048c4:	08023610 	.word	0x08023610
 80048c8:	08024470 	.word	0x08024470
 80048cc:	080245dc 	.word	0x080245dc
 80048d0:	080237ac 	.word	0x080237ac
 80048d4:	080042f1 	.word	0x080042f1
 80048d8:	08023d64 	.word	0x08023d64
 80048dc:	080232e4 	.word	0x080232e4
        dataScale = scale;
 80048e0:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 80048e4:	4fd3      	ldr	r7, [pc, #844]	; (8004c34 <_ZN19ScreenGraphViewBaseC1Ev+0x754>)
        majorGrid = &major;
 80048e6:	f8c4 3bfc 	str.w	r3, [r4, #3068]	; 0xbfc
        lineWidth = width;
 80048ea:	f04f 0101 	mov.w	r1, #1
        dataScale = scale;
 80048ee:	f8c4 6bf0 	str.w	r6, [r4, #3056]	; 0xbf0
        color = newColor;
 80048f2:	f8c4 7bec 	str.w	r7, [r4, #3052]	; 0xbec
        gridInterval = abs(interval);
 80048f6:	f8c4 6bf4 	str.w	r6, [r4, #3060]	; 0xbf4
        lineWidth = width;
 80048fa:	f884 1bf8 	strb.w	r1, [r4, #3064]	; 0xbf8
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 80048fe:	4658      	mov	r0, fp
 8004900:	ee1f 1a90 	vmov	r1, s31
 8004904:	f007 ffe8 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004908:	4632      	mov	r2, r6
 800490a:	f8d4 1c30 	ldr.w	r1, [r4, #3120]	; 0xc30
 800490e:	f8d4 0c34 	ldr.w	r0, [r4, #3124]	; 0xc34
 8004912:	f008 f985 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 8004916:	ee1e 3a90 	vmov	r3, s29
        gridInterval = abs(interval);
 800491a:	204b      	movs	r0, #75	; 0x4b
        lineWidth = width;
 800491c:	f04f 0101 	mov.w	r1, #1
        majorGrid = &major;
 8004920:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
        dataScale = scale;
 8004924:	f8c4 6c30 	str.w	r6, [r4, #3120]	; 0xc30
        color = newColor;
 8004928:	f8c4 7c2c 	str.w	r7, [r4, #3116]	; 0xc2c
        gridInterval = abs(interval);
 800492c:	f8c4 0c34 	str.w	r0, [r4, #3124]	; 0xc34
        lineWidth = width;
 8004930:	f884 1c38 	strb.w	r1, [r4, #3128]	; 0xc38
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 8004934:	4658      	mov	r0, fp
 8004936:	9908      	ldr	r1, [sp, #32]
 8004938:	f007 ffce 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800493c:	4632      	mov	r2, r6
 800493e:	f8d4 1c70 	ldr.w	r1, [r4, #3184]	; 0xc70
 8004942:	f8d4 0c74 	ldr.w	r0, [r4, #3188]	; 0xc74
 8004946:	f008 f96b 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800494a:	f04f 0302 	mov.w	r3, #2
 800494e:	f884 3c78 	strb.w	r3, [r4, #3192]	; 0xc78
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 8004952:	ee1e 1a10 	vmov	r1, s28
        dataScale = scale;
 8004956:	f8c4 6c70 	str.w	r6, [r4, #3184]	; 0xc70
        color = newColor;
 800495a:	f8c4 7c6c 	str.w	r7, [r4, #3180]	; 0xc6c
        gridInterval = abs(interval);
 800495e:	f8c4 6c74 	str.w	r6, [r4, #3188]	; 0xc74
 8004962:	4658      	mov	r0, fp
 8004964:	f007 ffb8 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004968:	4632      	mov	r2, r6
 800496a:	f8d4 1cb0 	ldr.w	r1, [r4, #3248]	; 0xcb0
 800496e:	f8d4 0cb4 	ldr.w	r0, [r4, #3252]	; 0xcb4
 8004972:	f008 f955 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004976:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 800497a:	2196      	movs	r1, #150	; 0x96
        lineWidth = width;
 800497c:	f884 3cb8 	strb.w	r3, [r4, #3256]	; 0xcb8
        dataScale = scale;
 8004980:	f8c4 6cb0 	str.w	r6, [r4, #3248]	; 0xcb0
        color = newColor;
 8004984:	f8c4 7cac 	str.w	r7, [r4, #3244]	; 0xcac
        gridInterval = abs(interval);
 8004988:	f8c4 1cb4 	str.w	r1, [r4, #3252]	; 0xcb4
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 800498c:	4658      	mov	r0, fp
 800498e:	ee1e 1a90 	vmov	r1, s29
 8004992:	f007 ffa1 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004996:	4632      	mov	r2, r6
 8004998:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 800499c:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 80049a0:	f008 f93e 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 80049a4:	f04f 0207 	mov.w	r2, #7
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 80049a8:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 80049aa:	f8c4 6cf0 	str.w	r6, [r4, #3312]	; 0xcf0
        labelInterval = abs(interval);
 80049ae:	f8c4 6cf4 	str.w	r6, [r4, #3316]	; 0xcf4
 80049b2:	f8a4 2cfc 	strh.w	r2, [r4, #3324]	; 0xcfc
        color = newColor;
 80049b6:	f8c4 7cec 	str.w	r7, [r4, #3308]	; 0xcec
 80049ba:	4658      	mov	r0, fp
 80049bc:	f007 ffb0 	bl	800c920 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80049c0:	4632      	mov	r2, r6
 80049c2:	f8d4 1d3c 	ldr.w	r1, [r4, #3388]	; 0xd3c
 80049c6:	f8d4 0d40 	ldr.w	r0, [r4, #3392]	; 0xd40
 80049ca:	f008 f929 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80049ce:	2296      	movs	r2, #150	; 0x96
 80049d0:	f8c4 2d40 	str.w	r2, [r4, #3392]	; 0xd40
 80049d4:	f04f 0206 	mov.w	r2, #6
 80049d8:	f8a4 2d48 	strh.w	r2, [r4, #3400]	; 0xd48
        labelDecimals = decimals;
 80049dc:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 80049e0:	990a      	ldr	r1, [sp, #40]	; 0x28
        dataScale = scale;
 80049e2:	f8c4 6d3c 	str.w	r6, [r4, #3388]	; 0xd3c
        labelDecimals = decimals;
 80049e6:	f8a4 2d4e 	strh.w	r2, [r4, #3406]	; 0xd4e
 80049ea:	f8c4 7d38 	str.w	r7, [r4, #3384]	; 0xd38
 80049ee:	4658      	mov	r0, fp
 80049f0:	f007 ff84 	bl	800c8fc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 80049f4:	9b07      	ldr	r3, [sp, #28]
 80049f6:	f8c4 3ba4 	str.w	r3, [r4, #2980]	; 0xba4
 80049fa:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80049fe:	f04f 0302 	mov.w	r3, #2
 8004a02:	f884 3ba8 	strb.w	r3, [r4, #2984]	; 0xba8
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 8004a06:	ee1f 1a10 	vmov	r1, s30
 8004a0a:	f8c4 2bb8 	str.w	r2, [r4, #3000]	; 0xbb8
 8004a0e:	4658      	mov	r0, fp
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004a10:	f8a4 5bbc 	strh.w	r5, [r4, #3004]	; 0xbbc
 8004a14:	f007 ff60 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 8004a18:	4631      	mov	r1, r6
 8004a1a:	462a      	mov	r2, r5
 8004a1c:	4640      	mov	r0, r8
 8004a1e:	f7ff f991 	bl	8003d44 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 8004a22:	22a6      	movs	r2, #166	; 0xa6
 8004a24:	9200      	str	r2, [sp, #0]
 8004a26:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004a2a:	462a      	mov	r2, r5
 8004a2c:	4629      	mov	r1, r5
 8004a2e:	4640      	mov	r0, r8
 8004a30:	f7fe fb69 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 8004a34:	220f      	movs	r2, #15
 8004a36:	9200      	str	r2, [sp, #0]
 8004a38:	462b      	mov	r3, r5
 8004a3a:	2218      	movs	r2, #24
 8004a3c:	2106      	movs	r1, #6
 8004a3e:	4640      	mov	r0, r8
 8004a40:	f008 f83c 	bl	800cabc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8004a44:	462b      	mov	r3, r5
 8004a46:	462a      	mov	r2, r5
 8004a48:	4629      	mov	r1, r5
 8004a4a:	4640      	mov	r0, r8
 8004a4c:	9500      	str	r5, [sp, #0]
 8004a4e:	f007 ff38 	bl	800c8c2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 8004a52:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004a56:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004a5a:	4640      	mov	r0, r8
 8004a5c:	f7ff f854 	bl	8003b08 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004a60:	4632      	mov	r2, r6
 8004a62:	e9d9 1003 	ldrd	r1, r0, [r9, #12]
 8004a66:	f008 f8db 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004a6a:	f241 3288 	movw	r2, #5000	; 0x1388
        majorGrid = &major;
 8004a6e:	9b03      	ldr	r3, [sp, #12]
        gridInterval = abs(interval);
 8004a70:	f8c9 2010 	str.w	r2, [r9, #16]
        lineWidth = width;
 8004a74:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 8004a78:	e9c9 7602 	strd	r7, r6, [r9, #8]
        majorGrid = &major;
 8004a7c:	f8c9 3018 	str.w	r3, [r9, #24]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004a80:	990d      	ldr	r1, [sp, #52]	; 0x34
        lineWidth = width;
 8004a82:	f889 2014 	strb.w	r2, [r9, #20]
 8004a86:	4640      	mov	r0, r8
 8004a88:	f007 ff26 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004a8c:	4632      	mov	r2, r6
 8004a8e:	e9d9 1013 	ldrd	r1, r0, [r9, #76]	; 0x4c
 8004a92:	f008 f8c5 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004a96:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 8004a9a:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004a9e:	f8c9 3050 	str.w	r3, [r9, #80]	; 0x50
        majorGrid = &major;
 8004aa2:	9b04      	ldr	r3, [sp, #16]
 8004aa4:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
        color = newColor;
 8004aa8:	e9c9 7612 	strd	r7, r6, [r9, #72]	; 0x48
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8004aac:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 8004aae:	f889 2054 	strb.w	r2, [r9, #84]	; 0x54
 8004ab2:	4640      	mov	r0, r8
 8004ab4:	f007 ff10 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004ab8:	4632      	mov	r2, r6
 8004aba:	e9d9 1023 	ldrd	r1, r0, [r9, #140]	; 0x8c
 8004abe:	f008 f8af 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004ac2:	f242 7310 	movw	r3, #10000	; 0x2710
 8004ac6:	f8c9 3090 	str.w	r3, [r9, #144]	; 0x90
        lineWidth = width;
 8004aca:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004ace:	e9c9 7622 	strd	r7, r6, [r9, #136]	; 0x88
        lineWidth = width;
 8004ad2:	f889 3094 	strb.w	r3, [r9, #148]	; 0x94
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 8004ad6:	9903      	ldr	r1, [sp, #12]
 8004ad8:	4640      	mov	r0, r8
 8004ada:	f007 fefd 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004ade:	4632      	mov	r2, r6
 8004ae0:	e9d9 1033 	ldrd	r1, r0, [r9, #204]	; 0xcc
 8004ae4:	f008 f89c 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004ae8:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004aec:	e9c9 7632 	strd	r7, r6, [r9, #200]	; 0xc8
        lineWidth = width;
 8004af0:	f889 30d4 	strb.w	r3, [r9, #212]	; 0xd4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8004af4:	9904      	ldr	r1, [sp, #16]
        gridInterval = abs(interval);
 8004af6:	f8c9 60d0 	str.w	r6, [r9, #208]	; 0xd0
 8004afa:	4640      	mov	r0, r8
 8004afc:	f007 feec 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004b00:	4632      	mov	r2, r6
 8004b02:	e9d9 1043 	ldrd	r1, r0, [r9, #268]	; 0x10c
 8004b06:	f008 f88b 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8004b0a:	2396      	movs	r3, #150	; 0x96
 8004b0c:	f8c9 3110 	str.w	r3, [r9, #272]	; 0x110
 8004b10:	f04f 030f 	mov.w	r3, #15
 8004b14:	f8a9 3118 	strh.w	r3, [r9, #280]	; 0x118
        labelDecimals = decimals;
 8004b18:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 8004b1c:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 8004b1e:	f8c9 610c 	str.w	r6, [r9, #268]	; 0x10c
        labelDecimals = decimals;
 8004b22:	f8a9 311e 	strh.w	r3, [r9, #286]	; 0x11e
        color = newColor;
 8004b26:	f8c9 7108 	str.w	r7, [r9, #264]	; 0x108
 8004b2a:	4640      	mov	r0, r8
 8004b2c:	f007 fee6 	bl	800c8fc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 8004b30:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004b34:	f8c4 3fd4 	str.w	r3, [r4, #4052]	; 0xfd4
 8004b38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004b3a:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        lineWidth = width;
 8004b3e:	f04f 0302 	mov.w	r3, #2
 8004b42:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8004b46:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004b48:	f8a4 5fd8 	strh.w	r5, [r4, #4056]	; 0xfd8
 8004b4c:	4640      	mov	r0, r8
 8004b4e:	f007 fec3 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(65, 211);
 8004b52:	ee19 0a10 	vmov	r0, s18
 8004b56:	22d3      	movs	r2, #211	; 0xd3
 8004b58:	2141      	movs	r1, #65	; 0x41
 8004b5a:	f7fe fa95 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 8004b5e:	f04f 030b 	mov.w	r3, #11
 8004b62:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004b66:	f04f 030c 	mov.w	r3, #12
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004b6a:	ee19 0a10 	vmov	r0, s18
        originalPressed = bitmapPressed;
 8004b6e:	f8a9 315c 	strh.w	r3, [r9, #348]	; 0x15c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004b72:	aa14      	add	r2, sp, #80	; 0x50
 8004b74:	a913      	add	r1, sp, #76	; 0x4c
 8004b76:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004b7a:	f009 fe20 	bl	800e7be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 8004b7e:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
 8004b82:	330c      	adds	r3, #12
    txtShowWholeGraph.setXY(1, 219);
 8004b84:	22db      	movs	r2, #219	; 0xdb
 8004b86:	ee19 0a90 	vmov	r0, s19
        action = &callback;
 8004b8a:	f8c9 3150 	str.w	r3, [r9, #336]	; 0x150
 8004b8e:	2101      	movs	r1, #1
 8004b90:	ae0e      	add	r6, sp, #56	; 0x38
    toggleButton1.setAction(buttonCallback);
 8004b92:	9303      	str	r3, [sp, #12]
    txtShowWholeGraph.setXY(1, 219);
 8004b94:	f7fe fa78 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004b98:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004b9c:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8004ba0:	f8c9 3190 	str.w	r3, [r9, #400]	; 0x190
        boundingArea = calculateBoundingArea();
 8004ba4:	4630      	mov	r0, r6
        linespace = space;
 8004ba6:	f8a9 5194 	strh.w	r5, [r9, #404]	; 0x194
        boundingArea = calculateBoundingArea();
 8004baa:	f009 fb2b 	bl	800e204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004bae:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004bb2:	ee19 3a90 	vmov	r3, s19
 8004bb6:	333c      	adds	r3, #60	; 0x3c
 8004bb8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004bbc:	4b1e      	ldr	r3, [pc, #120]	; (8004c38 <_ZN19ScreenGraphViewBaseC1Ev+0x758>)
 8004bbe:	9314      	str	r3, [sp, #80]	; 0x50
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 8004bc0:	ee19 0a90 	vmov	r0, s19
 8004bc4:	230e      	movs	r3, #14
 8004bc6:	a914      	add	r1, sp, #80	; 0x50
 8004bc8:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004bcc:	f009 fd9c 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 8004bd0:	230f      	movs	r3, #15
 8004bd2:	22a8      	movs	r2, #168	; 0xa8
 8004bd4:	ee18 0a10 	vmov	r0, s16
 8004bd8:	9300      	str	r3, [sp, #0]
 8004bda:	2102      	movs	r1, #2
 8004bdc:	2384      	movs	r3, #132	; 0x84
 8004bde:	f7fe fa92 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004be2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004be6:	f8c9 31d8 	str.w	r3, [r9, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 8004bea:	f8d9 31a8 	ldr.w	r3, [r9, #424]	; 0x1a8
        linespace = space;
 8004bee:	f8a9 51dc 	strh.w	r5, [r9, #476]	; 0x1dc
        boundingArea = calculateBoundingArea();
 8004bf2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004bf6:	ee18 1a10 	vmov	r1, s16
 8004bfa:	4630      	mov	r0, r6
 8004bfc:	4798      	blx	r3
 8004bfe:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004c02:	ee18 3a10 	vmov	r3, s16
 8004c06:	333c      	adds	r3, #60	; 0x3c
 8004c08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c0c:	4b0b      	ldr	r3, [pc, #44]	; (8004c3c <_ZN19ScreenGraphViewBaseC1Ev+0x75c>)
 8004c0e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 8004c10:	f504 57a1 	add.w	r7, r4, #5152	; 0x1420
 8004c14:	3710      	adds	r7, #16
 8004c16:	b92b      	cbnz	r3, 8004c24 <_ZN19ScreenGraphViewBaseC1Ev+0x744>
 8004c18:	4b09      	ldr	r3, [pc, #36]	; (8004c40 <_ZN19ScreenGraphViewBaseC1Ev+0x760>)
 8004c1a:	4a0a      	ldr	r2, [pc, #40]	; (8004c44 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 8004c1c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c1e:	480a      	ldr	r0, [pc, #40]	; (8004c48 <_ZN19ScreenGraphViewBaseC1Ev+0x768>)
 8004c20:	f01c f86e 	bl	8020d00 <__assert_func>
 8004c24:	4b09      	ldr	r3, [pc, #36]	; (8004c4c <_ZN19ScreenGraphViewBaseC1Ev+0x76c>)
 8004c26:	881b      	ldrh	r3, [r3, #0]
 8004c28:	2b0b      	cmp	r3, #11
 8004c2a:	d813      	bhi.n	8004c54 <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 8004c2c:	4b08      	ldr	r3, [pc, #32]	; (8004c50 <_ZN19ScreenGraphViewBaseC1Ev+0x770>)
 8004c2e:	4a05      	ldr	r2, [pc, #20]	; (8004c44 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 8004c30:	2161      	movs	r1, #97	; 0x61
 8004c32:	e7f4      	b.n	8004c1e <_ZN19ScreenGraphViewBaseC1Ev+0x73e>
 8004c34:	ff1497c5 	.word	0xff1497c5
 8004c38:	08022724 	.word	0x08022724
 8004c3c:	20015858 	.word	0x20015858
 8004c40:	08022cd8 	.word	0x08022cd8
 8004c44:	08022dda 	.word	0x08022dda
 8004c48:	08022d55 	.word	0x08022d55
 8004c4c:	2001585c 	.word	0x2001585c
 8004c50:	08022d9c 	.word	0x08022d9c
        return texts->getText(typedTextId);
 8004c54:	4bb8      	ldr	r3, [pc, #736]	; (8004f38 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004c56:	210b      	movs	r1, #11
 8004c58:	6818      	ldr	r0, [r3, #0]
 8004c5a:	f000 fadb 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 8004c5e:	4ab7      	ldr	r2, [pc, #732]	; (8004f3c <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004c60:	4603      	mov	r3, r0
 8004c62:	2108      	movs	r1, #8
 8004c64:	4638      	mov	r0, r7
 8004c66:	f00f fc39 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004c6a:	4bb5      	ldr	r3, [pc, #724]	; (8004f40 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
        wc1 = value;
 8004c6c:	f8c9 71f0 	str.w	r7, [r9, #496]	; 0x1f0
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 8004c70:	ee18 0a10 	vmov	r0, s16
 8004c74:	9314      	str	r3, [sp, #80]	; 0x50
 8004c76:	a914      	add	r1, sp, #80	; 0x50
 8004c78:	230d      	movs	r3, #13
 8004c7a:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004c7e:	f009 fd43 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 8004c82:	210f      	movs	r1, #15
 8004c84:	9100      	str	r1, [sp, #0]
 8004c86:	2384      	movs	r3, #132	; 0x84
 8004c88:	2102      	movs	r1, #2
 8004c8a:	ee1a 0a10 	vmov	r0, s20
 8004c8e:	22b7      	movs	r2, #183	; 0xb7
 8004c90:	f7fe fa39 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004c94:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004c98:	f8c9 1224 	str.w	r1, [r9, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 8004c9c:	f04f 31ff 	mov.w	r1, #4294967295
 8004ca0:	e9c9 158d 	strd	r1, r5, [r9, #564]	; 0x234
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004ca4:	49a7      	ldr	r1, [pc, #668]	; (8004f44 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004ca6:	f8a9 5228 	strh.w	r5, [r9, #552]	; 0x228
 8004caa:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004cac:	f8c9 5230 	str.w	r5, [r9, #560]	; 0x230
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004cb0:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 8004cb4:	2b00      	cmp	r3, #0
 8004cb6:	d0af      	beq.n	8004c18 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004cb8:	48a3      	ldr	r0, [pc, #652]	; (8004f48 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004cba:	8803      	ldrh	r3, [r0, #0]
 8004cbc:	2b0a      	cmp	r3, #10
 8004cbe:	d9b5      	bls.n	8004c2c <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004cc0:	4a9d      	ldr	r2, [pc, #628]	; (8004f38 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004cc2:	210a      	movs	r1, #10
 8004cc4:	6810      	ldr	r0, [r2, #0]
 8004cc6:	f000 faa5 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 8004cca:	4a9c      	ldr	r2, [pc, #624]	; (8004f3c <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004ccc:	4603      	mov	r3, r0
 8004cce:	2108      	movs	r1, #8
 8004cd0:	4638      	mov	r0, r7
 8004cd2:	f00f fc03 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004cd6:	f04f 0c0c 	mov.w	ip, #12
 8004cda:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004cde:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 8004ce2:	4b97      	ldr	r3, [pc, #604]	; (8004f40 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004ce4:	f8c9 723c 	str.w	r7, [r9, #572]	; 0x23c
 8004ce8:	4661      	mov	r1, ip
 8004cea:	ee1a 0a10 	vmov	r0, s20
    textChargingTme.setPosition(2, 198, 132, 15);
 8004cee:	270f      	movs	r7, #15
 8004cf0:	9314      	str	r3, [sp, #80]	; 0x50
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004cf2:	f009 fd09 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 8004cf6:	9700      	str	r7, [sp, #0]
 8004cf8:	2384      	movs	r3, #132	; 0x84
 8004cfa:	2102      	movs	r1, #2
 8004cfc:	ee1c 0a90 	vmov	r0, s25
 8004d00:	22c6      	movs	r2, #198	; 0xc6
 8004d02:	f7fe fa00 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004d06:	498f      	ldr	r1, [pc, #572]	; (8004f44 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004d08:	f8a9 5274 	strh.w	r5, [r9, #628]	; 0x274
        color = newColor;
 8004d0c:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
 8004d10:	f8c9 7270 	str.w	r7, [r9, #624]	; 0x270
 8004d14:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004d16:	f8c9 527c 	str.w	r5, [r9, #636]	; 0x27c
 8004d1a:	f04f 37ff 	mov.w	r7, #4294967295
 8004d1e:	e9c9 75a0 	strd	r7, r5, [r9, #640]	; 0x280
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 8004d22:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 8004d26:	3710      	adds	r7, #16
 8004d28:	2b00      	cmp	r3, #0
 8004d2a:	f43f af75 	beq.w	8004c18 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004d2e:	4886      	ldr	r0, [pc, #536]	; (8004f48 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004d30:	8803      	ldrh	r3, [r0, #0]
 8004d32:	2b08      	cmp	r3, #8
 8004d34:	f67f af7a 	bls.w	8004c2c <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004d38:	4a7f      	ldr	r2, [pc, #508]	; (8004f38 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004d3a:	2108      	movs	r1, #8
 8004d3c:	6810      	ldr	r0, [r2, #0]
 8004d3e:	f000 fa69 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 8004d42:	4a7e      	ldr	r2, [pc, #504]	; (8004f3c <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004d44:	4603      	mov	r3, r0
 8004d46:	210a      	movs	r1, #10
 8004d48:	4638      	mov	r0, r7
 8004d4a:	f00f fbc7 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 8004d4e:	f10d 0e50 	add.w	lr, sp, #80	; 0x50
        : typedTextId(id)
 8004d52:	4b7b      	ldr	r3, [pc, #492]	; (8004f40 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004d54:	f8c9 7288 	str.w	r7, [r9, #648]	; 0x288
 8004d58:	f04f 0c09 	mov.w	ip, #9
 8004d5c:	4671      	mov	r1, lr
 8004d5e:	ee1c 0a90 	vmov	r0, s25
 8004d62:	9314      	str	r3, [sp, #80]	; 0x50
 8004d64:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
 8004d68:	f009 fcce 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 8004d6c:	f04f 0e0f 	mov.w	lr, #15
 8004d70:	f8cd e000 	str.w	lr, [sp]
 8004d74:	2399      	movs	r3, #153	; 0x99
 8004d76:	21a0      	movs	r1, #160	; 0xa0
 8004d78:	ee1a 0a90 	vmov	r0, s21
 8004d7c:	22a8      	movs	r2, #168	; 0xa8
 8004d7e:	f7fe f9c2 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004d82:	4970      	ldr	r1, [pc, #448]	; (8004f44 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004d84:	f8a9 52c0 	strh.w	r5, [r9, #704]	; 0x2c0
        color = newColor;
 8004d88:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8004d8c:	680b      	ldr	r3, [r1, #0]
 8004d8e:	f8c9 e2bc 	str.w	lr, [r9, #700]	; 0x2bc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 8004d92:	f504 57a3 	add.w	r7, r4, #5216	; 0x1460
        boundingArea = calculateBoundingArea();
 8004d96:	f04f 3eff 	mov.w	lr, #4294967295
 8004d9a:	e9c9 e5b3 	strd	lr, r5, [r9, #716]	; 0x2cc
 8004d9e:	f8c9 52c8 	str.w	r5, [r9, #712]	; 0x2c8
 8004da2:	3704      	adds	r7, #4
 8004da4:	2b00      	cmp	r3, #0
 8004da6:	f43f af37 	beq.w	8004c18 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004daa:	4867      	ldr	r0, [pc, #412]	; (8004f48 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004dac:	8803      	ldrh	r3, [r0, #0]
 8004dae:	2b01      	cmp	r3, #1
 8004db0:	f67f af3c 	bls.w	8004c2c <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004db4:	4a60      	ldr	r2, [pc, #384]	; (8004f38 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004db6:	2101      	movs	r1, #1
 8004db8:	6810      	ldr	r0, [r2, #0]
 8004dba:	f000 fa2b 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 8004dbe:	4a5f      	ldr	r2, [pc, #380]	; (8004f3c <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004dc0:	4603      	mov	r3, r0
 8004dc2:	2104      	movs	r1, #4
 8004dc4:	4638      	mov	r0, r7
 8004dc6:	f00f fb89 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 8004dca:	ee1a 0a90 	vmov	r0, s21
 8004dce:	f8c9 72d4 	str.w	r7, [r9, #724]	; 0x2d4
        : typedTextId(id)
 8004dd2:	f04f 0302 	mov.w	r3, #2
 8004dd6:	4f5a      	ldr	r7, [pc, #360]	; (8004f40 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004dd8:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004ddc:	a914      	add	r1, sp, #80	; 0x50
 8004dde:	9714      	str	r7, [sp, #80]	; 0x50
 8004de0:	f009 fc92 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_RSZ_MY_MODAL_BACKGROUND_ID), 75, 60);
 8004de4:	230a      	movs	r3, #10
 8004de6:	224b      	movs	r2, #75	; 0x4b
 8004de8:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004dec:	a914      	add	r1, sp, #80	; 0x50
 8004dee:	233c      	movs	r3, #60	; 0x3c
 8004df0:	4650      	mov	r0, sl
 8004df2:	f005 ffbb 	bl	800ad6c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8004df6:	4650      	mov	r0, sl
 8004df8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004dfc:	f005 ff8a 	bl	800ad14 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8004e00:	2196      	movs	r1, #150	; 0x96
 8004e02:	4650      	mov	r0, sl
 8004e04:	f005 ff8a 	bl	800ad1c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 8004e08:	4650      	mov	r0, sl
 8004e0a:	f005 ff76 	bl	800acfa <_ZN8touchgfx11ModalWindow4hideEv>
    buttonCloseModal.setXY(53, 87);
 8004e0e:	ee1d 0a10 	vmov	r0, s26
 8004e12:	2257      	movs	r2, #87	; 0x57
 8004e14:	2135      	movs	r1, #53	; 0x35
 8004e16:	f7fe f937 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 8004e1a:	f04f 0307 	mov.w	r3, #7
    buttonCloseModal.setBitmaps(touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_ID), touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_PRESSED_ID));
 8004e1e:	aa14      	add	r2, sp, #80	; 0x50
 8004e20:	ee1d 0a10 	vmov	r0, s26
 8004e24:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004e28:	a913      	add	r1, sp, #76	; 0x4c
 8004e2a:	2308      	movs	r3, #8
 8004e2c:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004e30:	f009 fcc5 	bl	800e7be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004e34:	9b03      	ldr	r3, [sp, #12]
 8004e36:	f8c9 33b0 	str.w	r3, [r9, #944]	; 0x3b0
    modalWindow1.add(buttonCloseModal);
 8004e3a:	ee1d 1a10 	vmov	r1, s26
 8004e3e:	4650      	mov	r0, sl
 8004e40:	f005 ff65 	bl	800ad0e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    image1.setXY(59, 3);
 8004e44:	2203      	movs	r2, #3
 8004e46:	ee1b 0a10 	vmov	r0, s22
 8004e4a:	213b      	movs	r1, #59	; 0x3b
 8004e4c:	f7fe f91c 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 8004e50:	f04f 0c09 	mov.w	ip, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RSZ_INFO_ICON_ID));
 8004e54:	ee1b 0a10 	vmov	r0, s22
 8004e58:	a914      	add	r1, sp, #80	; 0x50
 8004e5a:	f8ad c050 	strh.w	ip, [sp, #80]	; 0x50
 8004e5e:	f009 fed1 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    modalWindow1.add(image1);
 8004e62:	ee1b 1a10 	vmov	r1, s22
 8004e66:	4650      	mov	r0, sl
 8004e68:	f005 ff51 	bl	800ad0e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textChargingCompleted.setXY(7, 60);
 8004e6c:	ee18 0a90 	vmov	r0, s17
 8004e70:	223c      	movs	r2, #60	; 0x3c
 8004e72:	2107      	movs	r1, #7
 8004e74:	f7fe f908 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004e78:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004e7c:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8004e80:	f8c9 3418 	str.w	r3, [r9, #1048]	; 0x418
        linespace = space;
 8004e84:	f8a9 541c 	strh.w	r5, [r9, #1052]	; 0x41c
        boundingArea = calculateBoundingArea();
 8004e88:	4630      	mov	r0, r6
 8004e8a:	f009 f9bb 	bl	800e204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e8e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004e92:	ee18 3a90 	vmov	r3, s17
 8004e96:	333c      	adds	r3, #60	; 0x3c
 8004e98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textChargingCompleted.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86E1));
 8004e9c:	ee18 0a90 	vmov	r0, s17
 8004ea0:	a914      	add	r1, sp, #80	; 0x50
 8004ea2:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
 8004ea6:	9714      	str	r7, [sp, #80]	; 0x50
 8004ea8:	1d25      	adds	r5, r4, #4
 8004eaa:	f009 fc2d 	bl	800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textChargingCompleted);
 8004eae:	ee18 1a90 	vmov	r1, s17
 8004eb2:	4650      	mov	r0, sl
 8004eb4:	f005 ff2b 	bl	800ad0e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8004eb8:	ee1b 1a90 	vmov	r1, s23
 8004ebc:	4628      	mov	r0, r5
 8004ebe:	f006 f82d 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ec2:	ee1c 1a10 	vmov	r1, s24
 8004ec6:	4628      	mov	r0, r5
 8004ec8:	f006 f828 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ecc:	ee1d 1a90 	vmov	r1, s27
 8004ed0:	4628      	mov	r0, r5
 8004ed2:	f006 f823 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ed6:	4659      	mov	r1, fp
 8004ed8:	4628      	mov	r0, r5
 8004eda:	f006 f81f 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ede:	4641      	mov	r1, r8
 8004ee0:	4628      	mov	r0, r5
 8004ee2:	f006 f81b 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ee6:	ee19 1a10 	vmov	r1, s18
 8004eea:	4628      	mov	r0, r5
 8004eec:	f006 f816 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ef0:	ee19 1a90 	vmov	r1, s19
 8004ef4:	4628      	mov	r0, r5
 8004ef6:	f006 f811 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004efa:	ee18 1a10 	vmov	r1, s16
 8004efe:	4628      	mov	r0, r5
 8004f00:	f006 f80c 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004f04:	ee1a 1a10 	vmov	r1, s20
 8004f08:	4628      	mov	r0, r5
 8004f0a:	f006 f807 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004f0e:	ee1c 1a90 	vmov	r1, s25
 8004f12:	4628      	mov	r0, r5
 8004f14:	f006 f802 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004f18:	ee1a 1a90 	vmov	r1, s21
 8004f1c:	4628      	mov	r0, r5
 8004f1e:	f005 fffd 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004f22:	4628      	mov	r0, r5
 8004f24:	4651      	mov	r1, sl
 8004f26:	f005 fff9 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004f2a:	4620      	mov	r0, r4
 8004f2c:	b017      	add	sp, #92	; 0x5c
 8004f2e:	ecbd 8b10 	vpop	{d8-d15}
 8004f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f36:	bf00      	nop
 8004f38:	20015864 	.word	0x20015864
 8004f3c:	08022e12 	.word	0x08022e12
 8004f40:	08022724 	.word	0x08022724
 8004f44:	20015858 	.word	0x20015858
 8004f48:	2001585c 	.word	0x2001585c

08004f4c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004f4c:	4770      	bx	lr
	...

08004f50 <_Z23getFont_verdana_10_4bppv>:
{
 8004f50:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004f52:	4d16      	ldr	r5, [pc, #88]	; (8004fac <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004f54:	782c      	ldrb	r4, [r5, #0]
 8004f56:	f3bf 8f5b 	dmb	ish
 8004f5a:	f014 0401 	ands.w	r4, r4, #1
{
 8004f5e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004f60:	d120      	bne.n	8004fa4 <_Z23getFont_verdana_10_4bppv+0x54>
 8004f62:	4628      	mov	r0, r5
 8004f64:	f01b fe1a 	bl	8020b9c <__cxa_guard_acquire>
 8004f68:	b1e0      	cbz	r0, 8004fa4 <_Z23getFont_verdana_10_4bppv+0x54>
 8004f6a:	233f      	movs	r3, #63	; 0x3f
 8004f6c:	9307      	str	r3, [sp, #28]
 8004f6e:	4b10      	ldr	r3, [pc, #64]	; (8004fb0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004f70:	9306      	str	r3, [sp, #24]
 8004f72:	4b10      	ldr	r3, [pc, #64]	; (8004fb4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8004f74:	9305      	str	r3, [sp, #20]
 8004f76:	2301      	movs	r3, #1
 8004f78:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004f7c:	9302      	str	r3, [sp, #8]
 8004f7e:	2204      	movs	r2, #4
 8004f80:	2302      	movs	r3, #2
 8004f82:	e9cd 3200 	strd	r3, r2, [sp]
 8004f86:	490c      	ldr	r1, [pc, #48]	; (8004fb8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004f88:	480c      	ldr	r0, [pc, #48]	; (8004fbc <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004f8a:	9408      	str	r4, [sp, #32]
 8004f8c:	230a      	movs	r3, #10
 8004f8e:	2228      	movs	r2, #40	; 0x28
 8004f90:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004f94:	f7fd fecc 	bl	8002d30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004f98:	4809      	ldr	r0, [pc, #36]	; (8004fc0 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004f9a:	f01b fecf 	bl	8020d3c <atexit>
 8004f9e:	4628      	mov	r0, r5
 8004fa0:	f01b fe08 	bl	8020bb4 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004fa4:	4805      	ldr	r0, [pc, #20]	; (8004fbc <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004fa6:	b00d      	add	sp, #52	; 0x34
 8004fa8:	bd30      	pop	{r4, r5, pc}
 8004faa:	bf00      	nop
 8004fac:	2000493c 	.word	0x2000493c
 8004fb0:	080262ac 	.word	0x080262ac
 8004fb4:	08026334 	.word	0x08026334
 8004fb8:	08025de8 	.word	0x08025de8
 8004fbc:	20004940 	.word	0x20004940
 8004fc0:	08004f4d 	.word	0x08004f4d

08004fc4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004fc4:	4770      	bx	lr
	...

08004fc8 <_Z23getFont_verdana_15_4bppv>:
{
 8004fc8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004fca:	4d16      	ldr	r5, [pc, #88]	; (8005024 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004fcc:	782c      	ldrb	r4, [r5, #0]
 8004fce:	f3bf 8f5b 	dmb	ish
 8004fd2:	f014 0401 	ands.w	r4, r4, #1
{
 8004fd6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004fd8:	d120      	bne.n	800501c <_Z23getFont_verdana_15_4bppv+0x54>
 8004fda:	4628      	mov	r0, r5
 8004fdc:	f01b fdde 	bl	8020b9c <__cxa_guard_acquire>
 8004fe0:	b1e0      	cbz	r0, 800501c <_Z23getFont_verdana_15_4bppv+0x54>
 8004fe2:	233f      	movs	r3, #63	; 0x3f
 8004fe4:	9307      	str	r3, [sp, #28]
 8004fe6:	4b10      	ldr	r3, [pc, #64]	; (8005028 <_Z23getFont_verdana_15_4bppv+0x60>)
 8004fe8:	9306      	str	r3, [sp, #24]
 8004fea:	4b10      	ldr	r3, [pc, #64]	; (800502c <_Z23getFont_verdana_15_4bppv+0x64>)
 8004fec:	9305      	str	r3, [sp, #20]
 8004fee:	2301      	movs	r3, #1
 8004ff0:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004ff4:	9302      	str	r3, [sp, #8]
 8004ff6:	2204      	movs	r2, #4
 8004ff8:	2303      	movs	r3, #3
 8004ffa:	e9cd 3200 	strd	r3, r2, [sp]
 8004ffe:	490c      	ldr	r1, [pc, #48]	; (8005030 <_Z23getFont_verdana_15_4bppv+0x68>)
 8005000:	480c      	ldr	r0, [pc, #48]	; (8005034 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8005002:	9408      	str	r4, [sp, #32]
 8005004:	230f      	movs	r3, #15
 8005006:	222a      	movs	r2, #42	; 0x2a
 8005008:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800500c:	f7fd fe90 	bl	8002d30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8005010:	4809      	ldr	r0, [pc, #36]	; (8005038 <_Z23getFont_verdana_15_4bppv+0x70>)
 8005012:	f01b fe93 	bl	8020d3c <atexit>
 8005016:	4628      	mov	r0, r5
 8005018:	f01b fdcc 	bl	8020bb4 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 800501c:	4805      	ldr	r0, [pc, #20]	; (8005034 <_Z23getFont_verdana_15_4bppv+0x6c>)
 800501e:	b00d      	add	sp, #52	; 0x34
 8005020:	bd30      	pop	{r4, r5, pc}
 8005022:	bf00      	nop
 8005024:	20004968 	.word	0x20004968
 8005028:	080262c8 	.word	0x080262c8
 800502c:	08026338 	.word	0x08026338
 8005030:	08026018 	.word	0x08026018
 8005034:	2000496c 	.word	0x2000496c
 8005038:	08004fc5 	.word	0x08004fc5

0800503c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800503c:	4770      	bx	lr
	...

08005040 <_Z23getFont_verdana_40_4bppv>:
{
 8005040:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8005042:	4d15      	ldr	r5, [pc, #84]	; (8005098 <_Z23getFont_verdana_40_4bppv+0x58>)
 8005044:	782c      	ldrb	r4, [r5, #0]
 8005046:	f3bf 8f5b 	dmb	ish
 800504a:	f014 0401 	ands.w	r4, r4, #1
{
 800504e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8005050:	d11f      	bne.n	8005092 <_Z23getFont_verdana_40_4bppv+0x52>
 8005052:	4628      	mov	r0, r5
 8005054:	f01b fda2 	bl	8020b9c <__cxa_guard_acquire>
 8005058:	b1d8      	cbz	r0, 8005092 <_Z23getFont_verdana_40_4bppv+0x52>
 800505a:	233f      	movs	r3, #63	; 0x3f
 800505c:	9307      	str	r3, [sp, #28]
 800505e:	4b0f      	ldr	r3, [pc, #60]	; (800509c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8005060:	9306      	str	r3, [sp, #24]
 8005062:	4b0f      	ldr	r3, [pc, #60]	; (80050a0 <_Z23getFont_verdana_40_4bppv+0x60>)
 8005064:	490f      	ldr	r1, [pc, #60]	; (80050a4 <_Z23getFont_verdana_40_4bppv+0x64>)
 8005066:	4810      	ldr	r0, [pc, #64]	; (80050a8 <_Z23getFont_verdana_40_4bppv+0x68>)
 8005068:	9408      	str	r4, [sp, #32]
 800506a:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800506e:	2204      	movs	r2, #4
 8005070:	2301      	movs	r3, #1
 8005072:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8005076:	9300      	str	r3, [sp, #0]
 8005078:	2205      	movs	r2, #5
 800507a:	2328      	movs	r3, #40	; 0x28
 800507c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8005080:	9403      	str	r4, [sp, #12]
 8005082:	f7fd fe55 	bl	8002d30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8005086:	4809      	ldr	r0, [pc, #36]	; (80050ac <_Z23getFont_verdana_40_4bppv+0x6c>)
 8005088:	f01b fe58 	bl	8020d3c <atexit>
 800508c:	4628      	mov	r0, r5
 800508e:	f01b fd91 	bl	8020bb4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8005092:	4805      	ldr	r0, [pc, #20]	; (80050a8 <_Z23getFont_verdana_40_4bppv+0x68>)
 8005094:	b00d      	add	sp, #52	; 0x34
 8005096:	bd30      	pop	{r4, r5, pc}
 8005098:	20004994 	.word	0x20004994
 800509c:	08026320 	.word	0x08026320
 80050a0:	0802633c 	.word	0x0802633c
 80050a4:	08026264 	.word	0x08026264
 80050a8:	20004998 	.word	0x20004998
 80050ac:	0800503d 	.word	0x0800503d

080050b0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80050b0:	2000      	movs	r0, #0
 80050b2:	4770      	bx	lr

080050b4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80050b4:	2000      	movs	r0, #0
 80050b6:	4770      	bx	lr

080050b8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80050b8:	b40e      	push	{r1, r2, r3}
 80050ba:	b503      	push	{r0, r1, lr}
 80050bc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80050be:	2100      	movs	r1, #0
{
 80050c0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80050c4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80050c6:	f00d f8c1 	bl	801224c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80050ca:	b002      	add	sp, #8
 80050cc:	f85d eb04 	ldr.w	lr, [sp], #4
 80050d0:	b003      	add	sp, #12
 80050d2:	4770      	bx	lr

080050d4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80050d4:	b40c      	push	{r2, r3}
 80050d6:	b507      	push	{r0, r1, r2, lr}
 80050d8:	ab04      	add	r3, sp, #16
 80050da:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80050de:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80050e0:	f00d f8b4 	bl	801224c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80050e4:	b003      	add	sp, #12
 80050e6:	f85d eb04 	ldr.w	lr, [sp], #4
 80050ea:	b002      	add	sp, #8
 80050ec:	4770      	bx	lr
	...

080050f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80050f0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80050f2:	b510      	push	{r4, lr}
 80050f4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80050f6:	b373      	cbz	r3, 8005156 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80050f8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80050fa:	b92b      	cbnz	r3, 8005108 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80050fc:	4b18      	ldr	r3, [pc, #96]	; (8005160 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80050fe:	4a19      	ldr	r2, [pc, #100]	; (8005164 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8005100:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8005102:	4819      	ldr	r0, [pc, #100]	; (8005168 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8005104:	f01b fdfc 	bl	8020d00 <__assert_func>
            return buffer[pos];
 8005108:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800510a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800510e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8005110:	b30b      	cbz	r3, 8005156 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8005112:	f00e fc34 	bl	801397e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8005116:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8005118:	2b01      	cmp	r3, #1
 800511a:	d803      	bhi.n	8005124 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800511c:	4b13      	ldr	r3, [pc, #76]	; (800516c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800511e:	4a14      	ldr	r2, [pc, #80]	; (8005170 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8005120:	21c5      	movs	r1, #197	; 0xc5
 8005122:	e7ee      	b.n	8005102 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8005124:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8005126:	1c53      	adds	r3, r2, #1
 8005128:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800512a:	2b09      	cmp	r3, #9
 800512c:	4619      	mov	r1, r3
 800512e:	bf88      	it	hi
 8005130:	f1a3 010a 	subhi.w	r1, r3, #10
 8005134:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8005138:	f640 103f 	movw	r0, #2367	; 0x93f
 800513c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800513e:	4281      	cmp	r1, r0
 8005140:	d109      	bne.n	8005156 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8005142:	2b0a      	cmp	r3, #10
 8005144:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8005148:	bf28      	it	cs
 800514a:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800514c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8005150:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8005152:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8005154:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8005156:	4620      	mov	r0, r4
}
 8005158:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800515c:	f00e bb12 	b.w	8013784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8005160:	080237f4 	.word	0x080237f4
 8005164:	080237fd 	.word	0x080237fd
 8005168:	080238a8 	.word	0x080238a8
 800516c:	080238f2 	.word	0x080238f2
 8005170:	08023900 	.word	0x08023900

08005174 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8005174:	f00e bacd 	b.w	8013712 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08005178 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8005178:	b510      	push	{r4, lr}
 800517a:	b086      	sub	sp, #24
 800517c:	ac02      	add	r4, sp, #8
 800517e:	e884 0006 	stmia.w	r4, {r1, r2}
 8005182:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8005184:	ab0a      	add	r3, sp, #40	; 0x28
 8005186:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8005188:	9301      	str	r3, [sp, #4]
 800518a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800518c:	9300      	str	r3, [sp, #0]
 800518e:	4621      	mov	r1, r4
 8005190:	9b08      	ldr	r3, [sp, #32]
 8005192:	f00b fd60 	bl	8010c56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8005196:	b006      	add	sp, #24
 8005198:	bd10      	pop	{r4, pc}
	...

0800519c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800519c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800519e:	bb18      	cbnz	r0, 80051e8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80051a0:	4b12      	ldr	r3, [pc, #72]	; (80051ec <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80051a2:	4813      	ldr	r0, [pc, #76]	; (80051f0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	4913      	ldr	r1, [pc, #76]	; (80051f4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80051a8:	b1b3      	cbz	r3, 80051d8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80051aa:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80051ac:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80051ae:	441a      	add	r2, r3
 80051b0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80051b2:	685a      	ldr	r2, [r3, #4]
 80051b4:	441a      	add	r2, r3
 80051b6:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80051b8:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80051ba:	4b0f      	ldr	r3, [pc, #60]	; (80051f8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80051bc:	2200      	movs	r2, #0
 80051be:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80051c0:	f000 f838 	bl	8005234 <_ZN17TypedTextDatabase8getFontsEv>
 80051c4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80051c6:	f000 f833 	bl	8005230 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80051ca:	4b0c      	ldr	r3, [pc, #48]	; (80051fc <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80051cc:	601c      	str	r4, [r3, #0]
        fonts = f;
 80051ce:	4b0c      	ldr	r3, [pc, #48]	; (8005200 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80051d0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80051d2:	4b0c      	ldr	r3, [pc, #48]	; (8005204 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80051d4:	8018      	strh	r0, [r3, #0]
    }
}
 80051d6:	e007      	b.n	80051e8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80051d8:	4b0b      	ldr	r3, [pc, #44]	; (8005208 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80051da:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80051dc:	4b0b      	ldr	r3, [pc, #44]	; (800520c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80051de:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80051e0:	4b0b      	ldr	r3, [pc, #44]	; (8005210 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80051e2:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80051e4:	2c00      	cmp	r4, #0
 80051e6:	d1e8      	bne.n	80051ba <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80051e8:	bd38      	pop	{r3, r4, r5, pc}
 80051ea:	bf00      	nop
 80051ec:	200049c0 	.word	0x200049c0
 80051f0:	200049c4 	.word	0x200049c4
 80051f4:	200049c8 	.word	0x200049c8
 80051f8:	200049cc 	.word	0x200049cc
 80051fc:	20015858 	.word	0x20015858
 8005200:	20015860 	.word	0x20015860
 8005204:	2001585c 	.word	0x2001585c
 8005208:	08026394 	.word	0x08026394
 800520c:	08026340 	.word	0x08026340
 8005210:	08026560 	.word	0x08026560

08005214 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8005214:	4b04      	ldr	r3, [pc, #16]	; (8005228 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8005216:	681b      	ldr	r3, [r3, #0]
 8005218:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800521c:	4b03      	ldr	r3, [pc, #12]	; (800522c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800521e:	681b      	ldr	r3, [r3, #0]
}
 8005220:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8005224:	4770      	bx	lr
 8005226:	bf00      	nop
 8005228:	200049c8 	.word	0x200049c8
 800522c:	200049c4 	.word	0x200049c4

08005230 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8005230:	2015      	movs	r0, #21
 8005232:	4770      	bx	lr

08005234 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8005234:	4800      	ldr	r0, [pc, #0]	; (8005238 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8005236:	4770      	bx	lr
 8005238:	200049d0 	.word	0x200049d0

0800523c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800523c:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 800523e:	f7ff fec3 	bl	8004fc8 <_Z23getFont_verdana_15_4bppv>
};
 8005242:	4c04      	ldr	r4, [pc, #16]	; (8005254 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8005244:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8005246:	f7ff fefb 	bl	8005040 <_Z23getFont_verdana_40_4bppv>
};
 800524a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 800524c:	f7ff fe80 	bl	8004f50 <_Z23getFont_verdana_10_4bppv>
};
 8005250:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8005252:	bd10      	pop	{r4, pc}
 8005254:	200049d0 	.word	0x200049d0

08005258 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8005258:	4770      	bx	lr

0800525a <_ZN19FrontendApplicationD0Ev>:
 800525a:	b510      	push	{r4, lr}
 800525c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8005260:	4604      	mov	r4, r0
 8005262:	f01b fc99 	bl	8020b98 <_ZdlPvj>
 8005266:	4620      	mov	r0, r4
 8005268:	bd10      	pop	{r4, pc}

0800526a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800526a:	b510      	push	{r4, lr}
 800526c:	4604      	mov	r4, r0
    {
        model.tick();
 800526e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8005272:	f000 f813 	bl	800529c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8005276:	4620      	mov	r0, r4
    }
 8005278:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800527c:	f00c b864 	b.w	8011348 <_ZN8touchgfx11Application15handleTickEventEv>

08005280 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8005280:	b510      	push	{r4, lr}
 8005282:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8005284:	f7fd fcd6 	bl	8002c34 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8005288:	4b01      	ldr	r3, [pc, #4]	; (8005290 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800528a:	6023      	str	r3, [r4, #0]
{

}
 800528c:	4620      	mov	r0, r4
 800528e:	bd10      	pop	{r4, pc}
 8005290:	080239dc 	.word	0x080239dc

08005294 <_ZN5ModelC1Ev>:
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
int ModalWindowShown=0;	//modal window not shown yet
Model::Model() : modelListener(0)
 8005294:	2200      	movs	r2, #0
 8005296:	6002      	str	r2, [r0, #0]
{

}
 8005298:	4770      	bx	lr
	...

0800529c <_ZN5Model4tickEv>:

void Model::tick()
{
 800529c:	b570      	push	{r4, r5, r6, lr}
 800529e:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 80052a0:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.PlotPointOnSecGraph){
 80052a2:	4d1d      	ldr	r5, [pc, #116]	; (8005318 <_ZN5Model4tickEv+0x7c>)
modelListener->UpdateBatteryVoltage();
 80052a4:	6803      	ldr	r3, [r0, #0]
 80052a6:	689b      	ldr	r3, [r3, #8]
 80052a8:	4798      	blx	r3
if(ladowarka.PlotPointOnSecGraph){
 80052aa:	f8d5 3c54 	ldr.w	r3, [r5, #3156]	; 0xc54
 80052ae:	b173      	cbz	r3, 80052ce <_ZN5Model4tickEv+0x32>
	if (ladowarka.ChargingTimeInSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 80052b0:	f8d5 3c5c 	ldr.w	r3, [r5, #3164]	; 0xc5c
 80052b4:	2b01      	cmp	r3, #1
 80052b6:	d103      	bne.n	80052c0 <_ZN5Model4tickEv+0x24>
 80052b8:	6820      	ldr	r0, [r4, #0]
 80052ba:	6803      	ldr	r3, [r0, #0]
 80052bc:	68db      	ldr	r3, [r3, #12]
 80052be:	4798      	blx	r3
	modelListener->DrawPoint();
 80052c0:	6820      	ldr	r0, [r4, #0]
 80052c2:	6803      	ldr	r3, [r0, #0]
 80052c4:	68db      	ldr	r3, [r3, #12]
 80052c6:	4798      	blx	r3
	ladowarka.PlotPointOnSecGraph=0;
 80052c8:	2300      	movs	r3, #0
 80052ca:	f8c5 3c54 	str.w	r3, [r5, #3156]	; 0xc54
}

if (ladowarka.PlotPointOnMinutesGraph){
 80052ce:	f8d5 3c58 	ldr.w	r3, [r5, #3160]	; 0xc58
 80052d2:	b133      	cbz	r3, 80052e2 <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 80052d4:	6820      	ldr	r0, [r4, #0]
 80052d6:	6803      	ldr	r3, [r0, #0]
 80052d8:	691b      	ldr	r3, [r3, #16]
 80052da:	4798      	blx	r3
	ladowarka.PlotPointOnMinutesGraph=0;
 80052dc:	2300      	movs	r3, #0
 80052de:	f8c5 3c58 	str.w	r3, [r5, #3160]	; 0xc58

}


if(ladowarka.ChargingCompleted==1 && ModalWindowShown==0){
 80052e2:	f8d5 6c64 	ldr.w	r6, [r5, #3172]	; 0xc64
 80052e6:	2e01      	cmp	r6, #1
 80052e8:	d107      	bne.n	80052fa <_ZN5Model4tickEv+0x5e>
 80052ea:	4d0c      	ldr	r5, [pc, #48]	; (800531c <_ZN5Model4tickEv+0x80>)
 80052ec:	682b      	ldr	r3, [r5, #0]
 80052ee:	b923      	cbnz	r3, 80052fa <_ZN5Model4tickEv+0x5e>
	modelListener->DisplayChargingFinished();
 80052f0:	6820      	ldr	r0, [r4, #0]
 80052f2:	6803      	ldr	r3, [r0, #0]
 80052f4:	6a1b      	ldr	r3, [r3, #32]
 80052f6:	4798      	blx	r3
	ModalWindowShown=1;
 80052f8:	602e      	str	r6, [r5, #0]

}
#endif

/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 80052fa:	6820      	ldr	r0, [r4, #0]
 80052fc:	6803      	ldr	r3, [r0, #0]
 80052fe:	695b      	ldr	r3, [r3, #20]
 8005300:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8005302:	6820      	ldr	r0, [r4, #0]
 8005304:	6803      	ldr	r3, [r0, #0]
 8005306:	699b      	ldr	r3, [r3, #24]
 8005308:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 800530a:	6820      	ldr	r0, [r4, #0]
 800530c:	6803      	ldr	r3, [r0, #0]
}
 800530e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 8005312:	69db      	ldr	r3, [r3, #28]
 8005314:	4718      	bx	r3
 8005316:	bf00      	nop
 8005318:	20003c5c 	.word	0x20003c5c
 800531c:	200049dc 	.word	0x200049dc

08005320 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8005320:	4770      	bx	lr

08005322 <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8005322:	4770      	bx	lr

08005324 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8005324:	4770      	bx	lr

08005326 <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8005326:	4770      	bx	lr

08005328 <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8005328:	4770      	bx	lr

0800532a <_ZN13ModelListener23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished() {};
 800532a:	4770      	bx	lr

0800532c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 800532c:	4770      	bx	lr

0800532e <_ZThn4_N16Screen1PresenterD1Ev>:
 800532e:	3804      	subs	r0, #4
 8005330:	4770      	bx	lr

08005332 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8005332:	4770      	bx	lr

08005334 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8005334:	68c0      	ldr	r0, [r0, #12]
 8005336:	6803      	ldr	r3, [r0, #0]
 8005338:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800533a:	4718      	bx	r3

0800533c <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 800533c:	f1a0 0004 	sub.w	r0, r0, #4
 8005340:	f7ff bff8 	b.w	8005334 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08005344 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8005344:	b510      	push	{r4, lr}
 8005346:	2110      	movs	r1, #16
 8005348:	4604      	mov	r4, r0
 800534a:	f01b fc25 	bl	8020b98 <_ZdlPvj>
 800534e:	4620      	mov	r0, r4
 8005350:	bd10      	pop	{r4, pc}

08005352 <_ZThn4_N16Screen1PresenterD0Ev>:
 8005352:	f1a0 0004 	sub.w	r0, r0, #4
 8005356:	e7f5      	b.n	8005344 <_ZN16Screen1PresenterD0Ev>

08005358 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8005358:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800535a:	2200      	movs	r2, #0
 800535c:	6082      	str	r2, [r0, #8]
    : view(v)
 800535e:	4a04      	ldr	r2, [pc, #16]	; (8005370 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8005360:	60c1      	str	r1, [r0, #12]
 8005362:	f102 0408 	add.w	r4, r2, #8
 8005366:	3224      	adds	r2, #36	; 0x24
 8005368:	6004      	str	r4, [r0, #0]
 800536a:	6042      	str	r2, [r0, #4]
}
 800536c:	bd10      	pop	{r4, pc}
 800536e:	bf00      	nop
 8005370:	08023a20 	.word	0x08023a20

08005374 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8005374:	4770      	bx	lr

08005376 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8005376:	4770      	bx	lr

08005378 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8005378:	4b04      	ldr	r3, [pc, #16]	; (800538c <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 800537a:	681a      	ldr	r2, [r3, #0]
 800537c:	4b04      	ldr	r3, [pc, #16]	; (8005390 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 800537e:	60da      	str	r2, [r3, #12]
 ladowarka.ChargeStarted=1;
 8005380:	2201      	movs	r2, #1
 8005382:	615a      	str	r2, [r3, #20]
 ladowarka.ChargingTime=ChargingTime;
 8005384:	4a03      	ldr	r2, [pc, #12]	; (8005394 <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 8005386:	6812      	ldr	r2, [r2, #0]
 8005388:	611a      	str	r2, [r3, #16]
#endif
}
 800538a:	4770      	bx	lr
 800538c:	20000018 	.word	0x20000018
 8005390:	20003c5c 	.word	0x20003c5c
 8005394:	20000014 	.word	0x20000014

08005398 <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+100;
 8005398:	4b0b      	ldr	r3, [pc, #44]	; (80053c8 <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 800539a:	681a      	ldr	r2, [r3, #0]
{
 800539c:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+100;
 800539e:	3264      	adds	r2, #100	; 0x64
	if (PradLadowania >500){
 80053a0:	f5b2 7ffa 	cmp.w	r2, #500	; 0x1f4
	PradLadowania=500;}
 80053a4:	bfc8      	it	gt
 80053a6:	f44f 72fa 	movgt.w	r2, #500	; 0x1f4
 80053aa:	601a      	str	r2, [r3, #0]
{
 80053ac:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	4a06      	ldr	r2, [pc, #24]	; (80053cc <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 80053b2:	210a      	movs	r1, #10
 80053b4:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 80053b8:	f00f f890 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80053bc:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 80053c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 80053c4:	f00d b863 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 80053c8:	20000018 	.word	0x20000018
 80053cc:	08023a68 	.word	0x08023a68

080053d0 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-100;
 80053d0:	4b0a      	ldr	r3, [pc, #40]	; (80053fc <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 80053d2:	681a      	ldr	r2, [r3, #0]
{
 80053d4:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-100;
 80053d6:	3a64      	subs	r2, #100	; 0x64
    if (PradLadowania <100){
 80053d8:	2a63      	cmp	r2, #99	; 0x63
	PradLadowania=100;}
 80053da:	bfd8      	it	le
 80053dc:	2264      	movle	r2, #100	; 0x64
 80053de:	601a      	str	r2, [r3, #0]
{
 80053e0:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 80053e2:	681b      	ldr	r3, [r3, #0]
 80053e4:	4a06      	ldr	r2, [pc, #24]	; (8005400 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 80053e6:	210a      	movs	r1, #10
 80053e8:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 80053ec:	f00f f876 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80053f0:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 80053f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 80053f8:	f00d b849 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 80053fc:	20000018 	.word	0x20000018
 8005400:	08023a68 	.word	0x08023a68

08005404 <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 8005404:	4b0a      	ldr	r3, [pc, #40]	; (8005430 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 8005406:	681a      	ldr	r2, [r3, #0]
{
 8005408:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 800540a:	3201      	adds	r2, #1
	if (ChargingTime >MaxChargingTime){
 800540c:	2a0c      	cmp	r2, #12
		ChargingTime=MaxChargingTime;}
 800540e:	bfc8      	it	gt
 8005410:	220c      	movgt	r2, #12
 8005412:	601a      	str	r2, [r3, #0]
{
 8005414:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8005416:	681b      	ldr	r3, [r3, #0]
 8005418:	4a06      	ldr	r2, [pc, #24]	; (8005434 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 800541a:	2103      	movs	r1, #3
 800541c:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8005420:	f00f f85c 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8005424:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005428:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 800542c:	f00d b82f 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005430:	20000014 	.word	0x20000014
 8005434:	08023a68 	.word	0x08023a68

08005438 <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 8005438:	4b0a      	ldr	r3, [pc, #40]	; (8005464 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 800543a:	681a      	ldr	r2, [r3, #0]
{
 800543c:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 800543e:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 8005440:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 8005442:	bfd8      	it	le
 8005444:	2201      	movle	r2, #1
 8005446:	601a      	str	r2, [r3, #0]
{
 8005448:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	4a06      	ldr	r2, [pc, #24]	; (8005468 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 800544e:	2103      	movs	r1, #3
 8005450:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8005454:	f00f f842 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8005458:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 800545c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005460:	f00d b815 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005464:	20000014 	.word	0x20000014
 8005468:	08023a68 	.word	0x08023a68

0800546c <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 800546c:	f7fd bcd5 	b.w	8002e1a <_ZN15Screen1ViewBase11setupScreenEv>

08005470 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8005470:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8005472:	4b09      	ldr	r3, [pc, #36]	; (8005498 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005474:	4a09      	ldr	r2, [pc, #36]	; (800549c <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8005476:	681b      	ldr	r3, [r3, #0]
 8005478:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 800547a:	4604      	mov	r4, r0
 800547c:	ab01      	add	r3, sp, #4
 800547e:	210a      	movs	r1, #10
 8005480:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8005484:	f00f f9e6 	bl	8014854 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8005488:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 800548c:	b002      	add	sp, #8
 800548e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8005492:	f00c bffc 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005496:	bf00      	nop
 8005498:	20003c5c 	.word	0x20003c5c
 800549c:	08023a6b 	.word	0x08023a6b

080054a0 <_ZN11Screen1ViewD0Ev>:
 80054a0:	b510      	push	{r4, lr}
 80054a2:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 80054a6:	4604      	mov	r4, r0
 80054a8:	f01b fb76 	bl	8020b98 <_ZdlPvj>
 80054ac:	4620      	mov	r0, r4
 80054ae:	bd10      	pop	{r4, pc}

080054b0 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 80054b0:	b510      	push	{r4, lr}
 80054b2:	4604      	mov	r4, r0
 80054b4:	f7fd ff38 	bl	8003328 <_ZN15Screen1ViewBaseC1Ev>
 80054b8:	4b07      	ldr	r3, [pc, #28]	; (80054d8 <_ZN11Screen1ViewC1Ev+0x28>)
 80054ba:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 80054bc:	4b07      	ldr	r3, [pc, #28]	; (80054dc <_ZN11Screen1ViewC1Ev+0x2c>)
 80054be:	4a08      	ldr	r2, [pc, #32]	; (80054e0 <_ZN11Screen1ViewC1Ev+0x30>)
 80054c0:	681b      	ldr	r3, [r3, #0]
 80054c2:	210a      	movs	r1, #10
 80054c4:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80054c8:	f00f f808 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80054cc:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 80054d0:	f00c ffdd 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80054d4:	4620      	mov	r0, r4
 80054d6:	bd10      	pop	{r4, pc}
 80054d8:	08023a78 	.word	0x08023a78
 80054dc:	20000018 	.word	0x20000018
 80054e0:	08023a68 	.word	0x08023a68

080054e4 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 80054e4:	4770      	bx	lr

080054e6 <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 80054e6:	4770      	bx	lr

080054e8 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 80054e8:	3804      	subs	r0, #4
 80054ea:	4770      	bx	lr

080054ec <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 80054ec:	4770      	bx	lr

080054ee <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 80054ee:	68c0      	ldr	r0, [r0, #12]
 80054f0:	6803      	ldr	r3, [r0, #0]
 80054f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80054f4:	4718      	bx	r3

080054f6 <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 80054f6:	f1a0 0004 	sub.w	r0, r0, #4
 80054fa:	f7ff bff8 	b.w	80054ee <_ZN20ScreenGraphPresenter9DrawPointEv>

080054fe <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 80054fe:	68c0      	ldr	r0, [r0, #12]
 8005500:	6803      	ldr	r3, [r0, #0]
 8005502:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005504:	4718      	bx	r3

08005506 <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 8005506:	f1a0 0004 	sub.w	r0, r0, #4
 800550a:	f7ff bff8 	b.w	80054fe <_ZN20ScreenGraphPresenter12DrawPointMinEv>

0800550e <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 800550e:	68c0      	ldr	r0, [r0, #12]
 8005510:	6803      	ldr	r3, [r0, #0]
 8005512:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005514:	4718      	bx	r3

08005516 <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 8005516:	f1a0 0004 	sub.w	r0, r0, #4
 800551a:	f7ff bff8 	b.w	800550e <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

0800551e <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 800551e:	68c0      	ldr	r0, [r0, #12]
 8005520:	6803      	ldr	r3, [r0, #0]
 8005522:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005524:	4718      	bx	r3

08005526 <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 8005526:	f1a0 0004 	sub.w	r0, r0, #4
 800552a:	f7ff bff8 	b.w	800551e <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

0800552e <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 800552e:	68c0      	ldr	r0, [r0, #12]
 8005530:	6803      	ldr	r3, [r0, #0]
 8005532:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005534:	4718      	bx	r3

08005536 <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 8005536:	f1a0 0004 	sub.w	r0, r0, #4
 800553a:	f7ff bff8 	b.w	800552e <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

0800553e <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>:
}
void ScreenGraphPresenter::DisplayChargingFinished()
{
	view.DisplayChargingFinished2();
 800553e:	68c0      	ldr	r0, [r0, #12]
 8005540:	6803      	ldr	r3, [r0, #0]
 8005542:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005544:	4718      	bx	r3

08005546 <_ZThn4_N20ScreenGraphPresenter23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished();
 8005546:	f1a0 0004 	sub.w	r0, r0, #4
 800554a:	f7ff bff8 	b.w	800553e <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>

0800554e <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 800554e:	b510      	push	{r4, lr}
 8005550:	2110      	movs	r1, #16
 8005552:	4604      	mov	r4, r0
 8005554:	f01b fb20 	bl	8020b98 <_ZdlPvj>
 8005558:	4620      	mov	r0, r4
 800555a:	bd10      	pop	{r4, pc}

0800555c <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 800555c:	f1a0 0004 	sub.w	r0, r0, #4
 8005560:	e7f5      	b.n	800554e <_ZN20ScreenGraphPresenterD0Ev>
	...

08005564 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8005564:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8005566:	2200      	movs	r2, #0
 8005568:	6082      	str	r2, [r0, #8]
    : view(v)
 800556a:	4a04      	ldr	r2, [pc, #16]	; (800557c <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 800556c:	60c1      	str	r1, [r0, #12]
 800556e:	f102 0408 	add.w	r4, r2, #8
 8005572:	3238      	adds	r2, #56	; 0x38
 8005574:	6004      	str	r4, [r0, #0]
 8005576:	6042      	str	r2, [r0, #4]
}
 8005578:	bd10      	pop	{r4, pc}
 800557a:	bf00      	nop
 800557c:	08023abc 	.word	0x08023abc

08005580 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8005580:	4770      	bx	lr

08005582 <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8005582:	4770      	bx	lr

08005584 <_ZN15ScreenGraphView24DisplayChargingFinished2Ev>:
 8005584:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8005588:	2201      	movs	r2, #1
#endif
}

void ScreenGraphView::DisplayChargingFinished2(){
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 800558a:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 800558e:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8005592:	3018      	adds	r0, #24
 8005594:	f00c bf7b 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>

08005598 <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 8005598:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.MeasurementsEverySec[0]; //domyslna wartocs
 800559a:	4915      	ldr	r1, [pc, #84]	; (80055f0 <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 800559c:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.MeasurementsEverySec[0]; //domyslna wartocs
 80055a0:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 80055a4:	2200      	movs	r2, #0
		if ((ladowarka.MeasurementsEverySec[i] < results) && ladowarka.MeasurementsEverySec[i]!=0)  results=ladowarka.MeasurementsEverySec[i];
 80055a6:	f5a1 6136 	sub.w	r1, r1, #2912	; 0xb60
 80055aa:	f502 7336 	add.w	r3, r2, #728	; 0x2d8
 80055ae:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80055b2:	edd3 7a00 	vldr	s15, [r3]
 80055b6:	eef4 7ac0 	vcmpe.f32	s15, s0
 80055ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80055be:	d508      	bpl.n	80055d2 <_ZN15ScreenGraphView8countMinEv+0x3a>
 80055c0:	edd3 7a00 	vldr	s15, [r3]
 80055c4:	eef5 7a40 	vcmp.f32	s15, #0.0
 80055c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80055cc:	bf18      	it	ne
 80055ce:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 80055d2:	3201      	adds	r2, #1
 80055d4:	2a3b      	cmp	r2, #59	; 0x3b
 80055d6:	d1e8      	bne.n	80055aa <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 80055d8:	ed9f 8a06 	vldr	s16, [pc, #24]	; 80055f4 <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 80055dc:	ee20 0a08 	vmul.f32	s0, s0, s16
 80055e0:	f01b fb44 	bl	8020c6c <floorf>
#else
	return 1.5;
#endif
}
 80055e4:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80055e8:	ecbd 8b02 	vpop	{d8}
 80055ec:	bd08      	pop	{r3, pc}
 80055ee:	bf00      	nop
 80055f0:	200047bc 	.word	0x200047bc
 80055f4:	42c80000 	.word	0x42c80000

080055f8 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 80055f8:	b508      	push	{r3, lr}
 80055fa:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 80055fe:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8005640 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.MeasurementsEverySec[i] > results)  results=ladowarka.MeasurementsEverySec[i];
 8005602:	4910      	ldr	r1, [pc, #64]	; (8005644 <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 8005604:	2300      	movs	r3, #0
		if (ladowarka.MeasurementsEverySec[i] > results)  results=ladowarka.MeasurementsEverySec[i];
 8005606:	f503 7236 	add.w	r2, r3, #728	; 0x2d8
 800560a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 800560e:	edd2 7a00 	vldr	s15, [r2]
 8005612:	eef4 7ac0 	vcmpe.f32	s15, s0
 8005616:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 800561a:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.MeasurementsEverySec[i] > results)  results=ladowarka.MeasurementsEverySec[i];
 800561e:	bfc8      	it	gt
 8005620:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 8005624:	2b3b      	cmp	r3, #59	; 0x3b
 8005626:	d1ee      	bne.n	8005606 <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 8005628:	ed9f 8a07 	vldr	s16, [pc, #28]	; 8005648 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 800562c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005630:	f01b fada 	bl	8020be8 <ceilf>


#else
	return 1.5;
#endif
}
 8005634:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005638:	ecbd 8b02 	vpop	{d8}
 800563c:	bd08      	pop	{r3, pc}
 800563e:	bf00      	nop
 8005640:	00000000 	.word	0x00000000
 8005644:	20003c5c 	.word	0x20003c5c
 8005648:	42c80000 	.word	0x42c80000

0800564c <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.ChargingTimeInSec;
 800564c:	4b11      	ldr	r3, [pc, #68]	; (8005694 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 800564e:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.ChargingTimeInSec;
 8005650:	f8d3 2c5c 	ldr.w	r2, [r3, #3164]	; 0xc5c
	m = (sec -(3600*h))/60;
 8005654:	4910      	ldr	r1, [pc, #64]	; (8005698 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 8005656:	4604      	mov	r4, r0
	h = (sec/3600);
 8005658:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 800565c:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 8005660:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 8005664:	fb01 2203 	mla	r2, r1, r3, r2
 8005668:	213c      	movs	r1, #60	; 0x3c
 800566a:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 800566e:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 8005672:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005676:	e9cd 1200 	strd	r1, r2, [sp]
 800567a:	3010      	adds	r0, #16
 800567c:	4a07      	ldr	r2, [pc, #28]	; (800569c <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 800567e:	210a      	movs	r1, #10
 8005680:	f00e ff2c 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8005684:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
}
 8005688:	b002      	add	sp, #8
 800568a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 800568e:	f00c befe 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005692:	bf00      	nop
 8005694:	20003c5c 	.word	0x20003c5c
 8005698:	fffff1f0 	.word	0xfffff1f0
 800569c:	08023b18 	.word	0x08023b18

080056a0 <_ZN15ScreenGraphViewD0Ev>:
 80056a0:	b510      	push	{r4, lr}
 80056a2:	f242 713c 	movw	r1, #10044	; 0x273c
 80056a6:	4604      	mov	r4, r0
 80056a8:	f01b fa76 	bl	8020b98 <_ZdlPvj>
 80056ac:	4620      	mov	r0, r4
 80056ae:	bd10      	pop	{r4, pc}

080056b0 <_ZN15ScreenGraphView11setupScreenEv>:
{
 80056b0:	b510      	push	{r4, lr}
 80056b2:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 80056b4:	f7fe fd67 	bl	8004186 <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 80056b8:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 80056bc:	edd2 7a43 	vldr	s15, [r2, #268]	; 0x10c
 80056c0:	ed9f 6a90 	vldr	s12, [pc, #576]	; 8005904 <_ZN15ScreenGraphView11setupScreenEv+0x254>
 80056c4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80056c8:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 80056cc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80056d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80056d4:	f2c0 809e 	blt.w	8005814 <_ZN15ScreenGraphView11setupScreenEv+0x164>
            return (int)(fs + 0.5f);
 80056d8:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80056dc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80056e0:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80056e4:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80056e8:	edd2 7a33 	vldr	s15, [r2, #204]	; 0xcc
 80056ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 80056f0:	2b00      	cmp	r3, #0
 80056f2:	ee67 7a86 	vmul.f32	s15, s15, s12
 80056f6:	bfb8      	it	lt
 80056f8:	425b      	neglt	r3, r3
        if (fs >= 0)
 80056fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80056fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 8005702:	f8c2 3110 	str.w	r3, [r2, #272]	; 0x110
 8005706:	f2c0 8099 	blt.w	800583c <_ZN15ScreenGraphView11setupScreenEv+0x18c>
            return (int)(fs + 0.5f);
 800570a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800570e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005712:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005716:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 800571a:	edd2 7a13 	vldr	s15, [r2, #76]	; 0x4c
 800571e:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 8005908 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 8005722:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005726:	2b00      	cmp	r3, #0
 8005728:	ee67 7a87 	vmul.f32	s15, s15, s14
 800572c:	bfb8      	it	lt
 800572e:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005730:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8005738:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
 800573c:	f2c0 8092 	blt.w	8005864 <_ZN15ScreenGraphView11setupScreenEv+0x1b4>
            return (int)(fs + 0.5f);
 8005740:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005744:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005748:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800574c:	ee17 3a90 	vmov	r3, s15
 8005750:	2b00      	cmp	r3, #0
 8005752:	bfb8      	it	lt
 8005754:	425b      	neglt	r3, r3
 8005756:	6513      	str	r3, [r2, #80]	; 0x50
        const float fs = f * (float)scale;
 8005758:	f8d4 3d3c 	ldr.w	r3, [r4, #3388]	; 0xd3c
 800575c:	ed9f 6a6b 	vldr	s12, [pc, #428]	; 800590c <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 8005760:	ee07 3a90 	vmov	s15, r3
 8005764:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005768:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 800576c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005770:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005774:	f2c0 808a 	blt.w	800588c <_ZN15ScreenGraphView11setupScreenEv+0x1dc>
            return (int)(fs + 0.5f);
 8005778:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800577c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005780:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005784:	ee17 3a90 	vmov	r3, s15
 8005788:	2b00      	cmp	r3, #0
 800578a:	bfb8      	it	lt
 800578c:	425b      	neglt	r3, r3
 800578e:	f8c4 3d40 	str.w	r3, [r4, #3392]	; 0xd40
        const float fs = f * (float)scale;
 8005792:	f8d4 3cb0 	ldr.w	r3, [r4, #3248]	; 0xcb0
 8005796:	ee07 3a90 	vmov	s15, r3
 800579a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800579e:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 80057a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80057a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80057aa:	f2c0 8083 	blt.w	80058b4 <_ZN15ScreenGraphView11setupScreenEv+0x204>
            return (int)(fs + 0.5f);
 80057ae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80057b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80057b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057ba:	ee17 3a90 	vmov	r3, s15
 80057be:	2b00      	cmp	r3, #0
 80057c0:	bfb8      	it	lt
 80057c2:	425b      	neglt	r3, r3
 80057c4:	f8c4 3cb4 	str.w	r3, [r4, #3252]	; 0xcb4
        const float fs = f * (float)scale;
 80057c8:	f8d4 3c30 	ldr.w	r3, [r4, #3120]	; 0xc30
 80057cc:	ed9f 7a50 	vldr	s14, [pc, #320]	; 8005910 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 80057d0:	ee07 3a90 	vmov	s15, r3
 80057d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80057d8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80057dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80057e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80057e4:	db7a      	blt.n	80058dc <_ZN15ScreenGraphView11setupScreenEv+0x22c>
            return (int)(fs + 0.5f);
 80057e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80057ea:	ee77 7a87 	vadd.f32	s15, s15, s14
 80057ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057f2:	ee17 3a90 	vmov	r3, s15
 80057f6:	2b00      	cmp	r3, #0
 80057f8:	bfb8      	it	lt
 80057fa:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 80057fc:	f604 5058 	addw	r0, r4, #3416	; 0xd58
 8005800:	f8c4 3c34 	str.w	r3, [r4, #3124]	; 0xc34
 8005804:	f00c fe43 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 8005808:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 800580c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 8005810:	f00c be3d 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005814:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005818:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 800581c:	ee16 3a90 	vmov	r3, s13
 8005820:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005824:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005828:	ee37 7a27 	vadd.f32	s14, s14, s15
 800582c:	3b01      	subs	r3, #1
 800582e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8005832:	ee17 1a10 	vmov	r1, s14
 8005836:	4419      	add	r1, r3
 8005838:	460b      	mov	r3, r1
 800583a:	e755      	b.n	80056e8 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 800583c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005840:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005844:	ee17 3a10 	vmov	r3, s14
 8005848:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800584c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005850:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005854:	3b01      	subs	r3, #1
 8005856:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800585a:	ee17 1a90 	vmov	r1, s15
 800585e:	4419      	add	r1, r3
 8005860:	460b      	mov	r3, r1
 8005862:	e75a      	b.n	800571a <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 8005864:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005868:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800586c:	ee17 3a10 	vmov	r3, s14
 8005870:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005874:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005878:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800587c:	3b01      	subs	r3, #1
 800587e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005882:	ee17 1a90 	vmov	r1, s15
 8005886:	4419      	add	r1, r3
 8005888:	460b      	mov	r3, r1
 800588a:	e761      	b.n	8005750 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 800588c:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005890:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8005894:	ee16 3a90 	vmov	r3, s13
 8005898:	ee37 7a67 	vsub.f32	s14, s14, s15
 800589c:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80058a0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80058a4:	3b01      	subs	r3, #1
 80058a6:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80058aa:	ee17 2a10 	vmov	r2, s14
 80058ae:	441a      	add	r2, r3
 80058b0:	4613      	mov	r3, r2
 80058b2:	e769      	b.n	8005788 <_ZN15ScreenGraphView11setupScreenEv+0xd8>
 80058b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80058b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80058bc:	ee17 3a10 	vmov	r3, s14
 80058c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80058c4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80058c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80058cc:	3b01      	subs	r3, #1
 80058ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058d2:	ee17 2a90 	vmov	r2, s15
 80058d6:	441a      	add	r2, r3
 80058d8:	4613      	mov	r3, r2
 80058da:	e770      	b.n	80057be <_ZN15ScreenGraphView11setupScreenEv+0x10e>
 80058dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80058e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80058e4:	ee17 3a10 	vmov	r3, s14
 80058e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80058ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80058f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80058f4:	3b01      	subs	r3, #1
 80058f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058fa:	ee17 2a90 	vmov	r2, s15
 80058fe:	441a      	add	r2, r3
 8005900:	4613      	mov	r3, r2
 8005902:	e778      	b.n	80057f6 <_ZN15ScreenGraphView11setupScreenEv+0x146>
 8005904:	3c23d70a 	.word	0x3c23d70a
 8005908:	3ba3d70a 	.word	0x3ba3d70a
 800590c:	3dcccccd 	.word	0x3dcccccd
 8005910:	3d4ccccd 	.word	0x3d4ccccd

08005914 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 8005914:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 8005916:	4b0a      	ldr	r3, [pc, #40]	; (8005940 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 8005918:	4a0a      	ldr	r2, [pc, #40]	; (8005944 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x30>)
 800591a:	681b      	ldr	r3, [r3, #0]
 800591c:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 800591e:	4604      	mov	r4, r0
 8005920:	2104      	movs	r1, #4
 8005922:	f500 50a3 	add.w	r0, r0, #5216	; 0x1460
 8005926:	ab01      	add	r3, sp, #4
 8005928:	4408      	add	r0, r1
 800592a:	f00e ff93 	bl	8014854 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 800592e:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 8005932:	300c      	adds	r0, #12
}
 8005934:	b002      	add	sp, #8
 8005936:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 800593a:	f00c bda8 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800593e:	bf00      	nop
 8005940:	200048bc 	.word	0x200048bc
 8005944:	08023b28 	.word	0x08023b28

08005948 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005948:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 800594a:	4d11      	ldr	r5, [pc, #68]	; (8005990 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 800594c:	4a11      	ldr	r2, [pc, #68]	; (8005994 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 800594e:	682b      	ldr	r3, [r5, #0]
 8005950:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005952:	4604      	mov	r4, r0
 8005954:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8005958:	ab01      	add	r3, sp, #4
 800595a:	2108      	movs	r1, #8
 800595c:	3010      	adds	r0, #16
 800595e:	f00e ff79 	bl	8014854 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 8005962:	686b      	ldr	r3, [r5, #4]
 8005964:	4a0b      	ldr	r2, [pc, #44]	; (8005994 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8005966:	9301      	str	r3, [sp, #4]
 8005968:	2108      	movs	r1, #8
 800596a:	ab01      	add	r3, sp, #4
 800596c:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005970:	f00e ff70 	bl	8014854 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8005974:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 8005978:	3014      	adds	r0, #20
 800597a:	f00c fd88 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 800597e:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 8005982:	3008      	adds	r0, #8
}
 8005984:	b003      	add	sp, #12
 8005986:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 800598a:	f00c bd80 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800598e:	bf00      	nop
 8005990:	20003c5c 	.word	0x20003c5c
 8005994:	08023a6b 	.word	0x08023a6b

08005998 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005998:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800599a:	4b24      	ldr	r3, [pc, #144]	; (8005a2c <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 800599c:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 80059a0:	f8d0 3d8c 	ldr.w	r3, [r0, #3468]	; 0xd8c
 80059a4:	ee07 3a90 	vmov	s15, r3
 80059a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 80059ac:	ed2d 8b02 	vpush	{d8}
 80059b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80059b4:	4604      	mov	r4, r0
        if (fs >= 0)
 80059b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80059ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 80059be:	f600 5558 	addw	r5, r0, #3416	; 0xd58
 80059c2:	db1e      	blt.n	8005a02 <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 80059c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80059c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80059cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80059d0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80059d4:	4628      	mov	r0, r5
 80059d6:	f007 f97d 	bl	800ccd4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 80059da:	6823      	ldr	r3, [r4, #0]
 80059dc:	4620      	mov	r0, r4
 80059de:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80059e0:	4798      	blx	r3
 80059e2:	6823      	ldr	r3, [r4, #0]
 80059e4:	4620      	mov	r0, r4
 80059e6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80059e8:	eeb0 8a40 	vmov.f32	s16, s0
 80059ec:	4798      	blx	r3
 80059ee:	4628      	mov	r0, r5
 80059f0:	eef0 0a40 	vmov.f32	s1, s0
 80059f4:	eeb0 0a48 	vmov.f32	s0, s16
 80059f8:	f7fe f886 	bl	8003b08 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 80059fc:	ecbd 8b02 	vpop	{d8}
 8005a00:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005a02:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005a06:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005a0a:	ee17 3a10 	vmov	r3, s14
 8005a0e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005a12:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005a16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005a1a:	1e59      	subs	r1, r3, #1
 8005a1c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a20:	ee17 3a90 	vmov	r3, s15
 8005a24:	440b      	add	r3, r1
 8005a26:	4619      	mov	r1, r3
 8005a28:	e7d4      	b.n	80059d4 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 8005a2a:	bf00      	nop
 8005a2c:	20003c5c 	.word	0x20003c5c

08005a30 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
	dynamicGraph2.addDataPoint(ladowarka.AverageFromLastMin);
 8005a30:	4b52      	ldr	r3, [pc, #328]	; (8005b7c <_ZN15ScreenGraphView13DrawPoint2MinEv+0x14c>)
        const float fs = f * (float)scale;
 8005a32:	edd0 7a40 	vldr	s15, [r0, #256]	; 0x100
 8005a36:	ed93 7a00 	vldr	s14, [r3]
 8005a3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2Min(){
 8005a3e:	b570      	push	{r4, r5, r6, lr}
 8005a40:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005a44:	ed2d 8b02 	vpush	{d8}
        if (fs >= 0)
 8005a48:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a50:	4604      	mov	r4, r0
	dynamicGraph2.addDataPoint(ladowarka.AverageFromLastMin);
 8005a52:	f100 06cc 	add.w	r6, r0, #204	; 0xcc
 8005a56:	db4e      	blt.n	8005af6 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc6>
            return (int)(fs + 0.5f);
 8005a58:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005a5c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005a60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a64:	ee17 1a90 	vmov	r1, s15
	 dynamicGraph2.setGraphRangeY((floor(ladowarka.MinBatteryVotage*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10));
 8005a68:	4d45      	ldr	r5, [pc, #276]	; (8005b80 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x150>)
        return addDataPointScaled(float2scaledY(y));
 8005a6a:	4630      	mov	r0, r6
 8005a6c:	f007 f932 	bl	800ccd4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
 8005a70:	ed95 0a02 	vldr	s0, [r5, #8]
 8005a74:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 8005a78:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005a7c:	f01b f8f6 	bl	8020c6c <floorf>
 8005a80:	eef0 8a40 	vmov.f32	s17, s0
 8005a84:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 8005a88:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005a8c:	f01b f8ac 	bl	8020be8 <ceilf>
 8005a90:	4630      	mov	r0, r6
 8005a92:	eec0 0a08 	vdiv.f32	s1, s0, s16
 8005a96:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005a9a:	f7fe f835 	bl	8003b08 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.ChargingTimeInSec>9*60 && ladowarka.ChargingTimeInSec <59*60){ //jesli czas jest >9min i <59 min
 8005a9e:	f8d5 3c5c 	ldr.w	r3, [r5, #3164]	; 0xc5c
 8005aa2:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 8005aa6:	dd3a      	ble.n	8005b1e <_ZN15ScreenGraphView13DrawPoint2MinEv+0xee>
 8005aa8:	f8d5 2c5c 	ldr.w	r2, [r5, #3164]	; 0xc5c
 8005aac:	f640 53d3 	movw	r3, #3539	; 0xdd3
 8005ab0:	429a      	cmp	r2, r3
 8005ab2:	dc34      	bgt.n	8005b1e <_ZN15ScreenGraphView13DrawPoint2MinEv+0xee>
		dynamicGraph2.setGraphRangeX(0,60);
 8005ab4:	223c      	movs	r2, #60	; 0x3c
 8005ab6:	2100      	movs	r1, #0
 8005ab8:	4630      	mov	r0, r6
 8005aba:	f7fd ff8f 	bl	80039dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 8005abe:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
        return i * scale;
 8005ac2:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 8005ac6:	210a      	movs	r1, #10
 8005ac8:	434a      	muls	r2, r1
 8005aca:	2a00      	cmp	r2, #0
 8005acc:	bfb8      	it	lt
 8005ace:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005ad0:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 8005ad4:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 8005ad8:	0052      	lsls	r2, r2, #1
 8005ada:	2a00      	cmp	r2, #0
 8005adc:	bfb8      	it	lt
 8005ade:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005ae0:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 8005ae4:	434b      	muls	r3, r1
 8005ae6:	2b00      	cmp	r3, #0
 8005ae8:	bfb8      	it	lt
 8005aea:	425b      	neglt	r3, r3
 8005aec:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
}
 8005af0:	ecbd 8b02 	vpop	{d8}
 8005af4:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005af6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005afa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005afe:	ee17 3a10 	vmov	r3, s14
 8005b02:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005b06:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005b0a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005b0e:	1e59      	subs	r1, r3, #1
 8005b10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b14:	ee17 3a90 	vmov	r3, s15
 8005b18:	440b      	add	r3, r1
 8005b1a:	4619      	mov	r1, r3
 8005b1c:	e7a4      	b.n	8005a68 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x38>
	else if ((ladowarka.ChargingTimeInSec >59*60) && (ladowarka.ChargingCompleted==0) ){ //jesli czas jest >59 min
 8005b1e:	f8d5 2c5c 	ldr.w	r2, [r5, #3164]	; 0xc5c
 8005b22:	f640 53d4 	movw	r3, #3540	; 0xdd4
 8005b26:	429a      	cmp	r2, r3
 8005b28:	dd02      	ble.n	8005b30 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x100>
 8005b2a:	f8d5 1c64 	ldr.w	r1, [r5, #3172]	; 0xc64
 8005b2e:	b151      	cbz	r1, 8005b46 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x116>
	else if(ladowarka.ChargingCompleted) 	{//maksymalna wartosc graphu keidy skonczy sie ladowanie oraz ustaw plot X,Y
 8005b30:	f8d5 3c64 	ldr.w	r3, [r5, #3172]	; 0xc64
 8005b34:	2b00      	cmp	r3, #0
 8005b36:	d0db      	beq.n	8005af0 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc0>
				dynamicGraph2.setGraphRangeX(0,600);
 8005b38:	f44f 7216 	mov.w	r2, #600	; 0x258
 8005b3c:	2100      	movs	r1, #0
 8005b3e:	4630      	mov	r0, r6
 8005b40:	f7fd ff4c 	bl	80039dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
}
 8005b44:	e7d4      	b.n	8005af0 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc0>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 8005b46:	692a      	ldr	r2, [r5, #16]
 8005b48:	253c      	movs	r5, #60	; 0x3c
 8005b4a:	436a      	muls	r2, r5
 8005b4c:	4630      	mov	r0, r6
 8005b4e:	f7fd ff45 	bl	80039dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 8005b52:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
 8005b56:	436a      	muls	r2, r5
 8005b58:	2a00      	cmp	r2, #0
 8005b5a:	bfb8      	it	lt
 8005b5c:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005b5e:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 8005b62:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 8005b66:	230a      	movs	r3, #10
 8005b68:	435a      	muls	r2, r3
 8005b6a:	2a00      	cmp	r2, #0
        return i * scale;
 8005b6c:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 8005b70:	bfb8      	it	lt
 8005b72:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005b74:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 8005b78:	436b      	muls	r3, r5
 8005b7a:	e7b4      	b.n	8005ae6 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xb6>
 8005b7c:	200048c4 	.word	0x200048c4
 8005b80:	20003c5c 	.word	0x20003c5c

08005b84 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8005b84:	b510      	push	{r4, lr}
 8005b86:	4604      	mov	r4, r0
 8005b88:	f7fe fcaa 	bl	80044e0 <_ZN19ScreenGraphViewBaseC1Ev>
 8005b8c:	4b01      	ldr	r3, [pc, #4]	; (8005b94 <_ZN15ScreenGraphViewC1Ev+0x10>)
 8005b8e:	6023      	str	r3, [r4, #0]
}
 8005b90:	4620      	mov	r0, r4
 8005b92:	bd10      	pop	{r4, pc}
 8005b94:	08023b34 	.word	0x08023b34

08005b98 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005b98:	20f0      	movs	r0, #240	; 0xf0
 8005b9a:	4770      	bx	lr

08005b9c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005b9c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8005ba0:	4770      	bx	lr

08005ba2 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8005ba2:	2029      	movs	r0, #41	; 0x29
 8005ba4:	f7fc b954 	b.w	8001e50 <LCD_IO_WriteReg>

08005ba8 <ili9341_DisplayOff>:
 8005ba8:	2028      	movs	r0, #40	; 0x28
 8005baa:	f7fc b951 	b.w	8001e50 <LCD_IO_WriteReg>

08005bae <ili9341_Init>:
{
 8005bae:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005bb0:	f7fc f922 	bl	8001df8 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8005bb4:	20ca      	movs	r0, #202	; 0xca
 8005bb6:	f7fc f94b 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005bba:	20c3      	movs	r0, #195	; 0xc3
 8005bbc:	f7fc f92c 	bl	8001e18 <LCD_IO_WriteData>
 8005bc0:	2008      	movs	r0, #8
 8005bc2:	f7fc f929 	bl	8001e18 <LCD_IO_WriteData>
 8005bc6:	2050      	movs	r0, #80	; 0x50
 8005bc8:	f7fc f926 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005bcc:	20cf      	movs	r0, #207	; 0xcf
 8005bce:	f7fc f93f 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005bd2:	2000      	movs	r0, #0
 8005bd4:	f7fc f920 	bl	8001e18 <LCD_IO_WriteData>
 8005bd8:	20c1      	movs	r0, #193	; 0xc1
 8005bda:	f7fc f91d 	bl	8001e18 <LCD_IO_WriteData>
 8005bde:	2030      	movs	r0, #48	; 0x30
 8005be0:	f7fc f91a 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005be4:	20ed      	movs	r0, #237	; 0xed
 8005be6:	f7fc f933 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005bea:	2064      	movs	r0, #100	; 0x64
 8005bec:	f7fc f914 	bl	8001e18 <LCD_IO_WriteData>
 8005bf0:	2003      	movs	r0, #3
 8005bf2:	f7fc f911 	bl	8001e18 <LCD_IO_WriteData>
 8005bf6:	2012      	movs	r0, #18
 8005bf8:	f7fc f90e 	bl	8001e18 <LCD_IO_WriteData>
 8005bfc:	2081      	movs	r0, #129	; 0x81
 8005bfe:	f7fc f90b 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005c02:	20e8      	movs	r0, #232	; 0xe8
 8005c04:	f7fc f924 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005c08:	2085      	movs	r0, #133	; 0x85
 8005c0a:	f7fc f905 	bl	8001e18 <LCD_IO_WriteData>
 8005c0e:	2000      	movs	r0, #0
 8005c10:	f7fc f902 	bl	8001e18 <LCD_IO_WriteData>
 8005c14:	2078      	movs	r0, #120	; 0x78
 8005c16:	f7fc f8ff 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005c1a:	20cb      	movs	r0, #203	; 0xcb
 8005c1c:	f7fc f918 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005c20:	2039      	movs	r0, #57	; 0x39
 8005c22:	f7fc f8f9 	bl	8001e18 <LCD_IO_WriteData>
 8005c26:	202c      	movs	r0, #44	; 0x2c
 8005c28:	f7fc f8f6 	bl	8001e18 <LCD_IO_WriteData>
 8005c2c:	2000      	movs	r0, #0
 8005c2e:	f7fc f8f3 	bl	8001e18 <LCD_IO_WriteData>
 8005c32:	2034      	movs	r0, #52	; 0x34
 8005c34:	f7fc f8f0 	bl	8001e18 <LCD_IO_WriteData>
 8005c38:	2002      	movs	r0, #2
 8005c3a:	f7fc f8ed 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005c3e:	20f7      	movs	r0, #247	; 0xf7
 8005c40:	f7fc f906 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005c44:	2020      	movs	r0, #32
 8005c46:	f7fc f8e7 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005c4a:	20ea      	movs	r0, #234	; 0xea
 8005c4c:	f7fc f900 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005c50:	2000      	movs	r0, #0
 8005c52:	f7fc f8e1 	bl	8001e18 <LCD_IO_WriteData>
 8005c56:	2000      	movs	r0, #0
 8005c58:	f7fc f8de 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005c5c:	20b1      	movs	r0, #177	; 0xb1
 8005c5e:	f7fc f8f7 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005c62:	2000      	movs	r0, #0
 8005c64:	f7fc f8d8 	bl	8001e18 <LCD_IO_WriteData>
 8005c68:	201b      	movs	r0, #27
 8005c6a:	f7fc f8d5 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005c6e:	20b6      	movs	r0, #182	; 0xb6
 8005c70:	f7fc f8ee 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005c74:	200a      	movs	r0, #10
 8005c76:	f7fc f8cf 	bl	8001e18 <LCD_IO_WriteData>
 8005c7a:	20a2      	movs	r0, #162	; 0xa2
 8005c7c:	f7fc f8cc 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005c80:	20c0      	movs	r0, #192	; 0xc0
 8005c82:	f7fc f8e5 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005c86:	2010      	movs	r0, #16
 8005c88:	f7fc f8c6 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005c8c:	20c1      	movs	r0, #193	; 0xc1
 8005c8e:	f7fc f8df 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005c92:	2010      	movs	r0, #16
 8005c94:	f7fc f8c0 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005c98:	20c5      	movs	r0, #197	; 0xc5
 8005c9a:	f7fc f8d9 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005c9e:	2045      	movs	r0, #69	; 0x45
 8005ca0:	f7fc f8ba 	bl	8001e18 <LCD_IO_WriteData>
 8005ca4:	2015      	movs	r0, #21
 8005ca6:	f7fc f8b7 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005caa:	20c7      	movs	r0, #199	; 0xc7
 8005cac:	f7fc f8d0 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005cb0:	2090      	movs	r0, #144	; 0x90
 8005cb2:	f7fc f8b1 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005cb6:	2036      	movs	r0, #54	; 0x36
 8005cb8:	f7fc f8ca 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005cbc:	20c8      	movs	r0, #200	; 0xc8
 8005cbe:	f7fc f8ab 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005cc2:	20f2      	movs	r0, #242	; 0xf2
 8005cc4:	f7fc f8c4 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005cc8:	2000      	movs	r0, #0
 8005cca:	f7fc f8a5 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005cce:	20b0      	movs	r0, #176	; 0xb0
 8005cd0:	f7fc f8be 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005cd4:	20c2      	movs	r0, #194	; 0xc2
 8005cd6:	f7fc f89f 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005cda:	20b6      	movs	r0, #182	; 0xb6
 8005cdc:	f7fc f8b8 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ce0:	200a      	movs	r0, #10
 8005ce2:	f7fc f899 	bl	8001e18 <LCD_IO_WriteData>
 8005ce6:	20a7      	movs	r0, #167	; 0xa7
 8005ce8:	f7fc f896 	bl	8001e18 <LCD_IO_WriteData>
 8005cec:	2027      	movs	r0, #39	; 0x27
 8005cee:	f7fc f893 	bl	8001e18 <LCD_IO_WriteData>
 8005cf2:	2004      	movs	r0, #4
 8005cf4:	f7fc f890 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005cf8:	202a      	movs	r0, #42	; 0x2a
 8005cfa:	f7fc f8a9 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005cfe:	2000      	movs	r0, #0
 8005d00:	f7fc f88a 	bl	8001e18 <LCD_IO_WriteData>
 8005d04:	2000      	movs	r0, #0
 8005d06:	f7fc f887 	bl	8001e18 <LCD_IO_WriteData>
 8005d0a:	2000      	movs	r0, #0
 8005d0c:	f7fc f884 	bl	8001e18 <LCD_IO_WriteData>
 8005d10:	20ef      	movs	r0, #239	; 0xef
 8005d12:	f7fc f881 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005d16:	202b      	movs	r0, #43	; 0x2b
 8005d18:	f7fc f89a 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005d1c:	2000      	movs	r0, #0
 8005d1e:	f7fc f87b 	bl	8001e18 <LCD_IO_WriteData>
 8005d22:	2000      	movs	r0, #0
 8005d24:	f7fc f878 	bl	8001e18 <LCD_IO_WriteData>
 8005d28:	2001      	movs	r0, #1
 8005d2a:	f7fc f875 	bl	8001e18 <LCD_IO_WriteData>
 8005d2e:	203f      	movs	r0, #63	; 0x3f
 8005d30:	f7fc f872 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005d34:	20f6      	movs	r0, #246	; 0xf6
 8005d36:	f7fc f88b 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005d3a:	2001      	movs	r0, #1
 8005d3c:	f7fc f86c 	bl	8001e18 <LCD_IO_WriteData>
 8005d40:	2000      	movs	r0, #0
 8005d42:	f7fc f869 	bl	8001e18 <LCD_IO_WriteData>
 8005d46:	2006      	movs	r0, #6
 8005d48:	f7fc f866 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005d4c:	202c      	movs	r0, #44	; 0x2c
 8005d4e:	f7fc f87f 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005d52:	20c8      	movs	r0, #200	; 0xc8
 8005d54:	f7fc f8ca 	bl	8001eec <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005d58:	2026      	movs	r0, #38	; 0x26
 8005d5a:	f7fc f879 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005d5e:	2001      	movs	r0, #1
 8005d60:	f7fc f85a 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005d64:	20e0      	movs	r0, #224	; 0xe0
 8005d66:	f7fc f873 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005d6a:	200f      	movs	r0, #15
 8005d6c:	f7fc f854 	bl	8001e18 <LCD_IO_WriteData>
 8005d70:	2029      	movs	r0, #41	; 0x29
 8005d72:	f7fc f851 	bl	8001e18 <LCD_IO_WriteData>
 8005d76:	2024      	movs	r0, #36	; 0x24
 8005d78:	f7fc f84e 	bl	8001e18 <LCD_IO_WriteData>
 8005d7c:	200c      	movs	r0, #12
 8005d7e:	f7fc f84b 	bl	8001e18 <LCD_IO_WriteData>
 8005d82:	200e      	movs	r0, #14
 8005d84:	f7fc f848 	bl	8001e18 <LCD_IO_WriteData>
 8005d88:	2009      	movs	r0, #9
 8005d8a:	f7fc f845 	bl	8001e18 <LCD_IO_WriteData>
 8005d8e:	204e      	movs	r0, #78	; 0x4e
 8005d90:	f7fc f842 	bl	8001e18 <LCD_IO_WriteData>
 8005d94:	2078      	movs	r0, #120	; 0x78
 8005d96:	f7fc f83f 	bl	8001e18 <LCD_IO_WriteData>
 8005d9a:	203c      	movs	r0, #60	; 0x3c
 8005d9c:	f7fc f83c 	bl	8001e18 <LCD_IO_WriteData>
 8005da0:	2009      	movs	r0, #9
 8005da2:	f7fc f839 	bl	8001e18 <LCD_IO_WriteData>
 8005da6:	2013      	movs	r0, #19
 8005da8:	f7fc f836 	bl	8001e18 <LCD_IO_WriteData>
 8005dac:	2005      	movs	r0, #5
 8005dae:	f7fc f833 	bl	8001e18 <LCD_IO_WriteData>
 8005db2:	2017      	movs	r0, #23
 8005db4:	f7fc f830 	bl	8001e18 <LCD_IO_WriteData>
 8005db8:	2011      	movs	r0, #17
 8005dba:	f7fc f82d 	bl	8001e18 <LCD_IO_WriteData>
 8005dbe:	2000      	movs	r0, #0
 8005dc0:	f7fc f82a 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005dc4:	20e1      	movs	r0, #225	; 0xe1
 8005dc6:	f7fc f843 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005dca:	2000      	movs	r0, #0
 8005dcc:	f7fc f824 	bl	8001e18 <LCD_IO_WriteData>
 8005dd0:	2016      	movs	r0, #22
 8005dd2:	f7fc f821 	bl	8001e18 <LCD_IO_WriteData>
 8005dd6:	201b      	movs	r0, #27
 8005dd8:	f7fc f81e 	bl	8001e18 <LCD_IO_WriteData>
 8005ddc:	2004      	movs	r0, #4
 8005dde:	f7fc f81b 	bl	8001e18 <LCD_IO_WriteData>
 8005de2:	2011      	movs	r0, #17
 8005de4:	f7fc f818 	bl	8001e18 <LCD_IO_WriteData>
 8005de8:	2007      	movs	r0, #7
 8005dea:	f7fc f815 	bl	8001e18 <LCD_IO_WriteData>
 8005dee:	2031      	movs	r0, #49	; 0x31
 8005df0:	f7fc f812 	bl	8001e18 <LCD_IO_WriteData>
 8005df4:	2033      	movs	r0, #51	; 0x33
 8005df6:	f7fc f80f 	bl	8001e18 <LCD_IO_WriteData>
 8005dfa:	2042      	movs	r0, #66	; 0x42
 8005dfc:	f7fc f80c 	bl	8001e18 <LCD_IO_WriteData>
 8005e00:	2005      	movs	r0, #5
 8005e02:	f7fc f809 	bl	8001e18 <LCD_IO_WriteData>
 8005e06:	200c      	movs	r0, #12
 8005e08:	f7fc f806 	bl	8001e18 <LCD_IO_WriteData>
 8005e0c:	200a      	movs	r0, #10
 8005e0e:	f7fc f803 	bl	8001e18 <LCD_IO_WriteData>
 8005e12:	2028      	movs	r0, #40	; 0x28
 8005e14:	f7fc f800 	bl	8001e18 <LCD_IO_WriteData>
 8005e18:	202f      	movs	r0, #47	; 0x2f
 8005e1a:	f7fb fffd 	bl	8001e18 <LCD_IO_WriteData>
 8005e1e:	200f      	movs	r0, #15
 8005e20:	f7fb fffa 	bl	8001e18 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005e24:	2011      	movs	r0, #17
 8005e26:	f7fc f813 	bl	8001e50 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005e2a:	20c8      	movs	r0, #200	; 0xc8
 8005e2c:	f7fc f85e 	bl	8001eec <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005e30:	2029      	movs	r0, #41	; 0x29
 8005e32:	f7fc f80d 	bl	8001e50 <LCD_IO_WriteReg>
}
 8005e36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8005e3a:	202c      	movs	r0, #44	; 0x2c
 8005e3c:	f7fc b808 	b.w	8001e50 <LCD_IO_WriteReg>

08005e40 <ili9341_ReadID>:
{
 8005e40:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005e42:	f7fb ffd9 	bl	8001df8 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005e46:	2103      	movs	r1, #3
 8005e48:	20d3      	movs	r0, #211	; 0xd3
 8005e4a:	f7fc f81d 	bl	8001e88 <LCD_IO_ReadData>
}
 8005e4e:	b280      	uxth	r0, r0
 8005e50:	bd08      	pop	{r3, pc}

08005e52 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8005e52:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005e54:	b2c4      	uxtb	r4, r0
 8005e56:	2202      	movs	r2, #2
 8005e58:	2103      	movs	r1, #3
 8005e5a:	4620      	mov	r0, r4
 8005e5c:	f7fb ff82 	bl	8001d64 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005e60:	200a      	movs	r0, #10
 8005e62:	f7fb ffc7 	bl	8001df4 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005e66:	4620      	mov	r0, r4
 8005e68:	2200      	movs	r2, #0
 8005e6a:	2103      	movs	r1, #3
 8005e6c:	f7fb ff7a 	bl	8001d64 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8005e70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005e74:	2002      	movs	r0, #2
 8005e76:	f7fb bfbd 	b.w	8001df4 <IOE_Delay>

08005e7a <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005e7a:	b538      	push	{r3, r4, r5, lr}
 8005e7c:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005e7e:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005e80:	f7fb ff6e 	bl	8001d60 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005e84:	2100      	movs	r1, #0
 8005e86:	4620      	mov	r0, r4
 8005e88:	f7fb ff84 	bl	8001d94 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005e8c:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005e8e:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005e90:	4620      	mov	r0, r4
 8005e92:	f7fb ff7f 	bl	8001d94 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005e96:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005e9a:	b280      	uxth	r0, r0
 8005e9c:	bd38      	pop	{r3, r4, r5, pc}

08005e9e <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005e9e:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005ea0:	b2c4      	uxtb	r4, r0
 8005ea2:	2140      	movs	r1, #64	; 0x40
 8005ea4:	4620      	mov	r0, r4
 8005ea6:	f7fb ff75 	bl	8001d94 <IOE_Read>
  
  if(state > 0)
 8005eaa:	0603      	lsls	r3, r0, #24
 8005eac:	d507      	bpl.n	8005ebe <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005eae:	214c      	movs	r1, #76	; 0x4c
 8005eb0:	4620      	mov	r0, r4
 8005eb2:	f7fb ff6f 	bl	8001d94 <IOE_Read>
    {
      ret = 1;
 8005eb6:	3800      	subs	r0, #0
 8005eb8:	bf18      	it	ne
 8005eba:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005ebc:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005ebe:	2201      	movs	r2, #1
 8005ec0:	214b      	movs	r1, #75	; 0x4b
 8005ec2:	4620      	mov	r0, r4
 8005ec4:	f7fb ff4e 	bl	8001d64 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005ec8:	4620      	mov	r0, r4
 8005eca:	2200      	movs	r2, #0
 8005ecc:	214b      	movs	r1, #75	; 0x4b
 8005ece:	f7fb ff49 	bl	8001d64 <IOE_Write>
  uint8_t ret = 0;
 8005ed2:	2000      	movs	r0, #0
 8005ed4:	e7f2      	b.n	8005ebc <stmpe811_TS_DetectTouch+0x1e>

08005ed6 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005ed6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005ed8:	2304      	movs	r3, #4
 8005eda:	b2c4      	uxtb	r4, r0
{
 8005edc:	460e      	mov	r6, r1
 8005ede:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005ee0:	21d7      	movs	r1, #215	; 0xd7
 8005ee2:	eb0d 0203 	add.w	r2, sp, r3
 8005ee6:	4620      	mov	r0, r4
 8005ee8:	f7fb ff6e 	bl	8001dc8 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005eec:	9b01      	ldr	r3, [sp, #4]
 8005eee:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005ef0:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005ef2:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005ef6:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005ef8:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005efa:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005efc:	2201      	movs	r2, #1
 8005efe:	214b      	movs	r1, #75	; 0x4b
 8005f00:	f7fb ff30 	bl	8001d64 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005f04:	2200      	movs	r2, #0
 8005f06:	214b      	movs	r1, #75	; 0x4b
 8005f08:	4620      	mov	r0, r4
 8005f0a:	f7fb ff2b 	bl	8001d64 <IOE_Write>
}
 8005f0e:	b002      	add	sp, #8
 8005f10:	bd70      	pop	{r4, r5, r6, pc}
	...

08005f14 <stmpe811_Init>:
{
 8005f14:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005f16:	4b0a      	ldr	r3, [pc, #40]	; (8005f40 <stmpe811_Init+0x2c>)
 8005f18:	781a      	ldrb	r2, [r3, #0]
 8005f1a:	4290      	cmp	r0, r2
{
 8005f1c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005f1e:	d00d      	beq.n	8005f3c <stmpe811_Init+0x28>
 8005f20:	7859      	ldrb	r1, [r3, #1]
 8005f22:	4288      	cmp	r0, r1
 8005f24:	d00a      	beq.n	8005f3c <stmpe811_Init+0x28>
 8005f26:	b10a      	cbz	r2, 8005f2c <stmpe811_Init+0x18>
 8005f28:	b941      	cbnz	r1, 8005f3c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005f2a:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005f2c:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005f2e:	f7fb ff17 	bl	8001d60 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005f32:	4620      	mov	r0, r4
}
 8005f34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005f38:	f7ff bf8b 	b.w	8005e52 <stmpe811_Reset>
}
 8005f3c:	bd10      	pop	{r4, pc}
 8005f3e:	bf00      	nop
 8005f40:	200049e0 	.word	0x200049e0

08005f44 <stmpe811_EnableGlobalIT>:
{
 8005f44:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005f46:	b2c4      	uxtb	r4, r0
 8005f48:	2109      	movs	r1, #9
 8005f4a:	4620      	mov	r0, r4
 8005f4c:	f7fb ff22 	bl	8001d94 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005f50:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005f54:	b2c2      	uxtb	r2, r0
 8005f56:	2109      	movs	r1, #9
 8005f58:	4620      	mov	r0, r4
}
 8005f5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005f5e:	f7fb bf01 	b.w	8001d64 <IOE_Write>

08005f62 <stmpe811_DisableGlobalIT>:
{
 8005f62:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005f64:	b2c4      	uxtb	r4, r0
 8005f66:	2109      	movs	r1, #9
 8005f68:	4620      	mov	r0, r4
 8005f6a:	f7fb ff13 	bl	8001d94 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005f6e:	2109      	movs	r1, #9
 8005f70:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005f74:	4620      	mov	r0, r4
}
 8005f76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005f7a:	f7fb bef3 	b.w	8001d64 <IOE_Write>

08005f7e <stmpe811_EnableITSource>:
{
 8005f7e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005f80:	b2c4      	uxtb	r4, r0
{
 8005f82:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005f84:	4620      	mov	r0, r4
 8005f86:	210a      	movs	r1, #10
 8005f88:	f7fb ff04 	bl	8001d94 <IOE_Read>
  tmp |= Source; 
 8005f8c:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005f8e:	b2c2      	uxtb	r2, r0
 8005f90:	210a      	movs	r1, #10
 8005f92:	4620      	mov	r0, r4
}
 8005f94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005f98:	f7fb bee4 	b.w	8001d64 <IOE_Write>

08005f9c <stmpe811_TS_EnableIT>:
{
 8005f9c:	b507      	push	{r0, r1, r2, lr}
 8005f9e:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005fa0:	f7fb fedf 	bl	8001d62 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005fa4:	9801      	ldr	r0, [sp, #4]
 8005fa6:	211f      	movs	r1, #31
 8005fa8:	f7ff ffe9 	bl	8005f7e <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005fac:	9801      	ldr	r0, [sp, #4]
}
 8005fae:	b003      	add	sp, #12
 8005fb0:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005fb4:	f7ff bfc6 	b.w	8005f44 <stmpe811_EnableGlobalIT>

08005fb8 <stmpe811_DisableITSource>:
{
 8005fb8:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005fba:	b2c4      	uxtb	r4, r0
{
 8005fbc:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005fbe:	4620      	mov	r0, r4
 8005fc0:	210a      	movs	r1, #10
 8005fc2:	f7fb fee7 	bl	8001d94 <IOE_Read>
  tmp &= ~Source; 
 8005fc6:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005fca:	b2c2      	uxtb	r2, r0
 8005fcc:	210a      	movs	r1, #10
 8005fce:	4620      	mov	r0, r4
}
 8005fd0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005fd4:	f7fb bec6 	b.w	8001d64 <IOE_Write>

08005fd8 <stmpe811_TS_DisableIT>:
{
 8005fd8:	b510      	push	{r4, lr}
 8005fda:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005fdc:	f7ff ffc1 	bl	8005f62 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005fe0:	4620      	mov	r0, r4
 8005fe2:	211f      	movs	r1, #31
}
 8005fe4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005fe8:	f7ff bfe6 	b.w	8005fb8 <stmpe811_DisableITSource>

08005fec <stmpe811_ReadGITStatus>:
{
 8005fec:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005fee:	b2c0      	uxtb	r0, r0
{
 8005ff0:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005ff2:	210b      	movs	r1, #11
 8005ff4:	f7fb fece 	bl	8001d94 <IOE_Read>
}
 8005ff8:	4020      	ands	r0, r4
 8005ffa:	bd10      	pop	{r4, pc}

08005ffc <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005ffc:	211f      	movs	r1, #31
 8005ffe:	f7ff bff5 	b.w	8005fec <stmpe811_ReadGITStatus>

08006002 <stmpe811_ClearGlobalIT>:
{
 8006002:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8006004:	b2c0      	uxtb	r0, r0
 8006006:	210b      	movs	r1, #11
 8006008:	f7fb beac 	b.w	8001d64 <IOE_Write>

0800600c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800600c:	211f      	movs	r1, #31
 800600e:	f7ff bff8 	b.w	8006002 <stmpe811_ClearGlobalIT>

08006012 <stmpe811_IO_EnableAF>:
{
 8006012:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8006014:	b2c4      	uxtb	r4, r0
{
 8006016:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8006018:	4620      	mov	r0, r4
 800601a:	2117      	movs	r1, #23
 800601c:	f7fb feba 	bl	8001d94 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8006020:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8006024:	b2c2      	uxtb	r2, r0
 8006026:	2117      	movs	r1, #23
 8006028:	4620      	mov	r0, r4
}
 800602a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800602e:	f7fb be99 	b.w	8001d64 <IOE_Write>

08006032 <stmpe811_TS_Start>:
{
 8006032:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006034:	b2c4      	uxtb	r4, r0
{
 8006036:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006038:	2104      	movs	r1, #4
 800603a:	4620      	mov	r0, r4
 800603c:	f7fb feaa 	bl	8001d94 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006040:	2104      	movs	r1, #4
 8006042:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006046:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006048:	4620      	mov	r0, r4
 800604a:	f7fb fe8b 	bl	8001d64 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800604e:	4630      	mov	r0, r6
 8006050:	21f0      	movs	r1, #240	; 0xf0
 8006052:	f7ff ffde 	bl	8006012 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006056:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800605a:	4620      	mov	r0, r4
 800605c:	2104      	movs	r1, #4
 800605e:	f7fb fe81 	bl	8001d64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8006062:	2249      	movs	r2, #73	; 0x49
 8006064:	2120      	movs	r1, #32
 8006066:	4620      	mov	r0, r4
 8006068:	f7fb fe7c 	bl	8001d64 <IOE_Write>
  IOE_Delay(2); 
 800606c:	2002      	movs	r0, #2
 800606e:	f7fb fec1 	bl	8001df4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8006072:	4620      	mov	r0, r4
 8006074:	2201      	movs	r2, #1
 8006076:	2121      	movs	r1, #33	; 0x21
 8006078:	f7fb fe74 	bl	8001d64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800607c:	4620      	mov	r0, r4
 800607e:	229a      	movs	r2, #154	; 0x9a
 8006080:	2141      	movs	r1, #65	; 0x41
 8006082:	f7fb fe6f 	bl	8001d64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8006086:	4620      	mov	r0, r4
 8006088:	2201      	movs	r2, #1
 800608a:	214a      	movs	r1, #74	; 0x4a
 800608c:	f7fb fe6a 	bl	8001d64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8006090:	4620      	mov	r0, r4
 8006092:	2201      	movs	r2, #1
 8006094:	214b      	movs	r1, #75	; 0x4b
 8006096:	f7fb fe65 	bl	8001d64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800609a:	4620      	mov	r0, r4
 800609c:	2200      	movs	r2, #0
 800609e:	214b      	movs	r1, #75	; 0x4b
 80060a0:	f7fb fe60 	bl	8001d64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80060a4:	4620      	mov	r0, r4
 80060a6:	2201      	movs	r2, #1
 80060a8:	2156      	movs	r1, #86	; 0x56
 80060aa:	f7fb fe5b 	bl	8001d64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80060ae:	4620      	mov	r0, r4
 80060b0:	2201      	movs	r2, #1
 80060b2:	2158      	movs	r1, #88	; 0x58
 80060b4:	f7fb fe56 	bl	8001d64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80060b8:	4620      	mov	r0, r4
 80060ba:	2201      	movs	r2, #1
 80060bc:	2140      	movs	r1, #64	; 0x40
 80060be:	f7fb fe51 	bl	8001d64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80060c2:	4620      	mov	r0, r4
 80060c4:	22ff      	movs	r2, #255	; 0xff
 80060c6:	210b      	movs	r1, #11
 80060c8:	f7fb fe4c 	bl	8001d64 <IOE_Write>
}
 80060cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80060d0:	2002      	movs	r0, #2
 80060d2:	f7fb be8f 	b.w	8001df4 <IOE_Delay>
	...

080060d8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80060d8:	4b05      	ldr	r3, [pc, #20]	; (80060f0 <SystemInit+0x18>)
 80060da:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80060de:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80060e2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80060e6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80060ea:	609a      	str	r2, [r3, #8]
#endif
}
 80060ec:	4770      	bx	lr
 80060ee:	bf00      	nop
 80060f0:	e000ed00 	.word	0xe000ed00

080060f4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80060f4:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80060f6:	4b0b      	ldr	r3, [pc, #44]	; (8006124 <HAL_Init+0x30>)
 80060f8:	681a      	ldr	r2, [r3, #0]
 80060fa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80060fe:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8006100:	681a      	ldr	r2, [r3, #0]
 8006102:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006106:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8006108:	681a      	ldr	r2, [r3, #0]
 800610a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800610e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8006110:	2003      	movs	r0, #3
 8006112:	f000 fa37 	bl	8006584 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8006116:	2000      	movs	r0, #0
 8006118:	f7fc f9d6 	bl	80024c8 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800611c:	f7fb ff00 	bl	8001f20 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8006120:	2000      	movs	r0, #0
 8006122:	bd08      	pop	{r3, pc}
 8006124:	40023c00 	.word	0x40023c00

08006128 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8006128:	4a03      	ldr	r2, [pc, #12]	; (8006138 <HAL_IncTick+0x10>)
 800612a:	4b04      	ldr	r3, [pc, #16]	; (800613c <HAL_IncTick+0x14>)
 800612c:	6811      	ldr	r1, [r2, #0]
 800612e:	781b      	ldrb	r3, [r3, #0]
 8006130:	440b      	add	r3, r1
 8006132:	6013      	str	r3, [r2, #0]
}
 8006134:	4770      	bx	lr
 8006136:	bf00      	nop
 8006138:	200049e4 	.word	0x200049e4
 800613c:	20000080 	.word	0x20000080

08006140 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8006140:	4b01      	ldr	r3, [pc, #4]	; (8006148 <HAL_GetTick+0x8>)
 8006142:	6818      	ldr	r0, [r3, #0]
}
 8006144:	4770      	bx	lr
 8006146:	bf00      	nop
 8006148:	200049e4 	.word	0x200049e4

0800614c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800614c:	b538      	push	{r3, r4, r5, lr}
 800614e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006150:	f7ff fff6 	bl	8006140 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8006154:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8006156:	bf1c      	itt	ne
 8006158:	4b05      	ldrne	r3, [pc, #20]	; (8006170 <HAL_Delay+0x24>)
 800615a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800615c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800615e:	bf18      	it	ne
 8006160:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8006162:	f7ff ffed 	bl	8006140 <HAL_GetTick>
 8006166:	1b43      	subs	r3, r0, r5
 8006168:	42a3      	cmp	r3, r4
 800616a:	d3fa      	bcc.n	8006162 <HAL_Delay+0x16>
  {
  }
}
 800616c:	bd38      	pop	{r3, r4, r5, pc}
 800616e:	bf00      	nop
 8006170:	20000080 	.word	0x20000080

08006174 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8006174:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8006176:	4604      	mov	r4, r0
 8006178:	2800      	cmp	r0, #0
 800617a:	f000 809b 	beq.w	80062b4 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800617e:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8006180:	b925      	cbnz	r5, 800618c <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8006182:	f7fb feed 	bl	8001f60 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8006186:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8006188:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800618c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800618e:	06db      	lsls	r3, r3, #27
 8006190:	f100 808e 	bmi.w	80062b0 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8006194:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006196:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800619a:	f023 0302 	bic.w	r3, r3, #2
 800619e:	f043 0302 	orr.w	r3, r3, #2
 80061a2:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 80061a4:	4b44      	ldr	r3, [pc, #272]	; (80062b8 <HAL_ADC_Init+0x144>)
 80061a6:	685a      	ldr	r2, [r3, #4]
 80061a8:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 80061ac:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80061ae:	685a      	ldr	r2, [r3, #4]
 80061b0:	6861      	ldr	r1, [r4, #4]
 80061b2:	430a      	orrs	r2, r1
 80061b4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80061b6:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80061b8:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80061ba:	685a      	ldr	r2, [r3, #4]
 80061bc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80061c0:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80061c2:	685a      	ldr	r2, [r3, #4]
 80061c4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80061c8:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80061ca:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80061cc:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80061ce:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80061d2:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80061d4:	685a      	ldr	r2, [r3, #4]
 80061d6:	430a      	orrs	r2, r1
 80061d8:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80061da:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80061dc:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80061de:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80061e2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80061e4:	689a      	ldr	r2, [r3, #8]
 80061e6:	430a      	orrs	r2, r1
 80061e8:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80061ea:	4934      	ldr	r1, [pc, #208]	; (80062bc <HAL_ADC_Init+0x148>)
 80061ec:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80061ee:	428a      	cmp	r2, r1
 80061f0:	d052      	beq.n	8006298 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80061f2:	6899      	ldr	r1, [r3, #8]
 80061f4:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 80061f8:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80061fa:	6899      	ldr	r1, [r3, #8]
 80061fc:	430a      	orrs	r2, r1
 80061fe:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8006200:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8006202:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8006204:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006208:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800620a:	689a      	ldr	r2, [r3, #8]
 800620c:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800620e:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8006210:	689a      	ldr	r2, [r3, #8]
 8006212:	f022 0202 	bic.w	r2, r2, #2
 8006216:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8006218:	689a      	ldr	r2, [r3, #8]
 800621a:	7e21      	ldrb	r1, [r4, #24]
 800621c:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8006220:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8006222:	f894 2020 	ldrb.w	r2, [r4, #32]
 8006226:	2a00      	cmp	r2, #0
 8006228:	d03e      	beq.n	80062a8 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800622a:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800622c:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800622e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006232:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8006234:	685a      	ldr	r2, [r3, #4]
 8006236:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800623a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800623c:	685a      	ldr	r2, [r3, #4]
 800623e:	3901      	subs	r1, #1
 8006240:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8006244:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8006246:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8006248:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800624a:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800624e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8006250:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006252:	3901      	subs	r1, #1
 8006254:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8006258:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800625a:	689a      	ldr	r2, [r3, #8]
 800625c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006260:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8006262:	689a      	ldr	r2, [r3, #8]
 8006264:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8006268:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 800626c:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800626e:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8006270:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8006272:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006276:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8006278:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800627a:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800627c:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8006280:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8006282:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8006284:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006286:	f023 0303 	bic.w	r3, r3, #3
 800628a:	f043 0301 	orr.w	r3, r3, #1
 800628e:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8006290:	2300      	movs	r3, #0
 8006292:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8006296:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8006298:	689a      	ldr	r2, [r3, #8]
 800629a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800629e:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80062a0:	689a      	ldr	r2, [r3, #8]
 80062a2:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80062a6:	e7b2      	b.n	800620e <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80062a8:	685a      	ldr	r2, [r3, #4]
 80062aa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80062ae:	e7c9      	b.n	8006244 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 80062b0:	2001      	movs	r0, #1
 80062b2:	e7ed      	b.n	8006290 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 80062b4:	2001      	movs	r0, #1
 80062b6:	e7ee      	b.n	8006296 <HAL_ADC_Init+0x122>
 80062b8:	40012300 	.word	0x40012300
 80062bc:	0f000001 	.word	0x0f000001

080062c0 <HAL_ADC_Start>:
{
 80062c0:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 80062c2:	2300      	movs	r3, #0
 80062c4:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 80062c6:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80062ca:	2b01      	cmp	r3, #1
 80062cc:	d060      	beq.n	8006390 <HAL_ADC_Start+0xd0>
 80062ce:	2301      	movs	r3, #1
 80062d0:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80062d4:	6803      	ldr	r3, [r0, #0]
 80062d6:	689a      	ldr	r2, [r3, #8]
 80062d8:	07d2      	lsls	r2, r2, #31
 80062da:	d505      	bpl.n	80062e8 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80062dc:	689a      	ldr	r2, [r3, #8]
 80062de:	07d1      	lsls	r1, r2, #31
 80062e0:	d414      	bmi.n	800630c <HAL_ADC_Start+0x4c>
  return HAL_OK;
 80062e2:	2000      	movs	r0, #0
}
 80062e4:	b002      	add	sp, #8
 80062e6:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 80062e8:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80062ea:	492a      	ldr	r1, [pc, #168]	; (8006394 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 80062ec:	f042 0201 	orr.w	r2, r2, #1
 80062f0:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80062f2:	4a29      	ldr	r2, [pc, #164]	; (8006398 <HAL_ADC_Start+0xd8>)
 80062f4:	6812      	ldr	r2, [r2, #0]
 80062f6:	fbb2 f2f1 	udiv	r2, r2, r1
 80062fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 80062fe:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8006300:	9a01      	ldr	r2, [sp, #4]
 8006302:	2a00      	cmp	r2, #0
 8006304:	d0ea      	beq.n	80062dc <HAL_ADC_Start+0x1c>
      counter--;
 8006306:	9a01      	ldr	r2, [sp, #4]
 8006308:	3a01      	subs	r2, #1
 800630a:	e7f8      	b.n	80062fe <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 800630c:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800630e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006312:	f022 0201 	bic.w	r2, r2, #1
 8006316:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800631a:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800631c:	685a      	ldr	r2, [r3, #4]
 800631e:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8006320:	bf41      	itttt	mi
 8006322:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8006324:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8006328:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 800632c:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800632e:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8006330:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8006334:	bf1c      	itt	ne
 8006336:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8006338:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 800633c:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 800633e:	2200      	movs	r2, #0
 8006340:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8006344:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8006348:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800634a:	4a14      	ldr	r2, [pc, #80]	; (800639c <HAL_ADC_Start+0xdc>)
 800634c:	6851      	ldr	r1, [r2, #4]
 800634e:	f011 0f1f 	tst.w	r1, #31
 8006352:	4913      	ldr	r1, [pc, #76]	; (80063a0 <HAL_ADC_Start+0xe0>)
 8006354:	d119      	bne.n	800638a <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8006356:	428b      	cmp	r3, r1
 8006358:	d007      	beq.n	800636a <HAL_ADC_Start+0xaa>
 800635a:	f501 7180 	add.w	r1, r1, #256	; 0x100
 800635e:	428b      	cmp	r3, r1
 8006360:	d10c      	bne.n	800637c <HAL_ADC_Start+0xbc>
 8006362:	6852      	ldr	r2, [r2, #4]
 8006364:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8006368:	d1bb      	bne.n	80062e2 <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800636a:	6898      	ldr	r0, [r3, #8]
 800636c:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8006370:	d1b7      	bne.n	80062e2 <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8006372:	689a      	ldr	r2, [r3, #8]
 8006374:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8006378:	609a      	str	r2, [r3, #8]
 800637a:	e7b3      	b.n	80062e4 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800637c:	4909      	ldr	r1, [pc, #36]	; (80063a4 <HAL_ADC_Start+0xe4>)
 800637e:	428b      	cmp	r3, r1
 8006380:	d1af      	bne.n	80062e2 <HAL_ADC_Start+0x22>
 8006382:	6852      	ldr	r2, [r2, #4]
 8006384:	f012 0f10 	tst.w	r2, #16
 8006388:	e7ee      	b.n	8006368 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800638a:	428b      	cmp	r3, r1
 800638c:	d1a9      	bne.n	80062e2 <HAL_ADC_Start+0x22>
 800638e:	e7ec      	b.n	800636a <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8006390:	2002      	movs	r0, #2
 8006392:	e7a7      	b.n	80062e4 <HAL_ADC_Start+0x24>
 8006394:	000f4240 	.word	0x000f4240
 8006398:	2000007c 	.word	0x2000007c
 800639c:	40012300 	.word	0x40012300
 80063a0:	40012000 	.word	0x40012000
 80063a4:	40012200 	.word	0x40012200

080063a8 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80063a8:	6803      	ldr	r3, [r0, #0]
 80063aa:	689a      	ldr	r2, [r3, #8]
 80063ac:	0552      	lsls	r2, r2, #21
{
 80063ae:	b570      	push	{r4, r5, r6, lr}
 80063b0:	4604      	mov	r4, r0
 80063b2:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80063b4:	d50b      	bpl.n	80063ce <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 80063b6:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80063b8:	05de      	lsls	r6, r3, #23
 80063ba:	d508      	bpl.n	80063ce <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80063bc:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80063be:	f043 0320 	orr.w	r3, r3, #32
 80063c2:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 80063c4:	2300      	movs	r3, #0
 80063c6:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 80063ca:	2001      	movs	r0, #1
}
 80063cc:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 80063ce:	f7ff feb7 	bl	8006140 <HAL_GetTick>
 80063d2:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 80063d4:	6823      	ldr	r3, [r4, #0]
 80063d6:	681a      	ldr	r2, [r3, #0]
 80063d8:	0791      	lsls	r1, r2, #30
 80063da:	d50c      	bpl.n	80063f6 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 80063dc:	f06f 0212 	mvn.w	r2, #18
 80063e0:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80063e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80063e4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80063e8:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80063ea:	689a      	ldr	r2, [r3, #8]
 80063ec:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 80063f0:	d013      	beq.n	800641a <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 80063f2:	2000      	movs	r0, #0
 80063f4:	e7ea      	b.n	80063cc <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 80063f6:	1c68      	adds	r0, r5, #1
 80063f8:	d0ed      	beq.n	80063d6 <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 80063fa:	b945      	cbnz	r5, 800640e <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 80063fc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80063fe:	f043 0304 	orr.w	r3, r3, #4
 8006402:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 8006404:	2300      	movs	r3, #0
 8006406:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 800640a:	2003      	movs	r0, #3
 800640c:	e7de      	b.n	80063cc <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 800640e:	f7ff fe97 	bl	8006140 <HAL_GetTick>
 8006412:	1b80      	subs	r0, r0, r6
 8006414:	42a8      	cmp	r0, r5
 8006416:	d9dd      	bls.n	80063d4 <HAL_ADC_PollForConversion+0x2c>
 8006418:	e7f0      	b.n	80063fc <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800641a:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800641c:	2800      	cmp	r0, #0
 800641e:	d1e8      	bne.n	80063f2 <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8006420:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8006422:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 8006426:	d002      	beq.n	800642e <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8006428:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800642a:	055a      	lsls	r2, r3, #21
 800642c:	d4e1      	bmi.n	80063f2 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 800642e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006430:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006434:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8006436:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006438:	04db      	lsls	r3, r3, #19
 800643a:	d4da      	bmi.n	80063f2 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800643c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800643e:	f043 0301 	orr.w	r3, r3, #1
 8006442:	6423      	str	r3, [r4, #64]	; 0x40
 8006444:	e7c2      	b.n	80063cc <HAL_ADC_PollForConversion+0x24>

08006446 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8006446:	6803      	ldr	r3, [r0, #0]
 8006448:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 800644a:	4770      	bx	lr

0800644c <HAL_ADC_ConfigChannel>:
{
 800644c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800644e:	2300      	movs	r3, #0
 8006450:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8006452:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8006456:	2b01      	cmp	r3, #1
 8006458:	d069      	beq.n	800652e <HAL_ADC_ConfigChannel+0xe2>
 800645a:	2301      	movs	r3, #1
 800645c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8006460:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8006462:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8006464:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8006466:	2d09      	cmp	r5, #9
 8006468:	b2ac      	uxth	r4, r5
 800646a:	d934      	bls.n	80064d6 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800646c:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8006470:	68df      	ldr	r7, [r3, #12]
 8006472:	3a1e      	subs	r2, #30
 8006474:	f04f 0c07 	mov.w	ip, #7
 8006478:	fa0c fc02 	lsl.w	ip, ip, r2
 800647c:	ea27 070c 	bic.w	r7, r7, ip
 8006480:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8006482:	68df      	ldr	r7, [r3, #12]
 8006484:	fa06 f202 	lsl.w	r2, r6, r2
 8006488:	433a      	orrs	r2, r7
 800648a:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 800648c:	6849      	ldr	r1, [r1, #4]
 800648e:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8006490:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8006494:	d82f      	bhi.n	80064f6 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8006496:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8006498:	3a05      	subs	r2, #5
 800649a:	261f      	movs	r6, #31
 800649c:	4096      	lsls	r6, r2
 800649e:	ea21 0106 	bic.w	r1, r1, r6
 80064a2:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80064a4:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80064a6:	fa04 f202 	lsl.w	r2, r4, r2
 80064aa:	430a      	orrs	r2, r1
 80064ac:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80064ae:	4a30      	ldr	r2, [pc, #192]	; (8006570 <HAL_ADC_ConfigChannel+0x124>)
 80064b0:	4293      	cmp	r3, r2
 80064b2:	d10a      	bne.n	80064ca <HAL_ADC_ConfigChannel+0x7e>
 80064b4:	2d12      	cmp	r5, #18
 80064b6:	d13c      	bne.n	8006532 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 80064b8:	4b2e      	ldr	r3, [pc, #184]	; (8006574 <HAL_ADC_ConfigChannel+0x128>)
 80064ba:	685a      	ldr	r2, [r3, #4]
 80064bc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80064c0:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80064c2:	685a      	ldr	r2, [r3, #4]
 80064c4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80064c8:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 80064ca:	2300      	movs	r3, #0
 80064cc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80064d0:	4618      	mov	r0, r3
}
 80064d2:	b003      	add	sp, #12
 80064d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80064d6:	691f      	ldr	r7, [r3, #16]
 80064d8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80064dc:	f04f 0c07 	mov.w	ip, #7
 80064e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80064e4:	ea27 070c 	bic.w	r7, r7, ip
 80064e8:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80064ea:	691f      	ldr	r7, [r3, #16]
 80064ec:	fa06 f202 	lsl.w	r2, r6, r2
 80064f0:	433a      	orrs	r2, r7
 80064f2:	611a      	str	r2, [r3, #16]
 80064f4:	e7ca      	b.n	800648c <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 80064f6:	290c      	cmp	r1, #12
 80064f8:	f04f 011f 	mov.w	r1, #31
 80064fc:	d80b      	bhi.n	8006516 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80064fe:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006500:	3a23      	subs	r2, #35	; 0x23
 8006502:	4091      	lsls	r1, r2
 8006504:	ea26 0101 	bic.w	r1, r6, r1
 8006508:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800650a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800650c:	fa04 f202 	lsl.w	r2, r4, r2
 8006510:	430a      	orrs	r2, r1
 8006512:	631a      	str	r2, [r3, #48]	; 0x30
 8006514:	e7cb      	b.n	80064ae <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8006516:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006518:	3a41      	subs	r2, #65	; 0x41
 800651a:	4091      	lsls	r1, r2
 800651c:	ea26 0101 	bic.w	r1, r6, r1
 8006520:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8006522:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006524:	fa04 f202 	lsl.w	r2, r4, r2
 8006528:	430a      	orrs	r2, r1
 800652a:	62da      	str	r2, [r3, #44]	; 0x2c
 800652c:	e7bf      	b.n	80064ae <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800652e:	2002      	movs	r0, #2
 8006530:	e7cf      	b.n	80064d2 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8006532:	4b11      	ldr	r3, [pc, #68]	; (8006578 <HAL_ADC_ConfigChannel+0x12c>)
 8006534:	429d      	cmp	r5, r3
 8006536:	d001      	beq.n	800653c <HAL_ADC_ConfigChannel+0xf0>
 8006538:	2d11      	cmp	r5, #17
 800653a:	d1c6      	bne.n	80064ca <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800653c:	4b0d      	ldr	r3, [pc, #52]	; (8006574 <HAL_ADC_ConfigChannel+0x128>)
 800653e:	685a      	ldr	r2, [r3, #4]
 8006540:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8006544:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8006546:	685a      	ldr	r2, [r3, #4]
 8006548:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800654c:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800654e:	4b0a      	ldr	r3, [pc, #40]	; (8006578 <HAL_ADC_ConfigChannel+0x12c>)
 8006550:	429d      	cmp	r5, r3
 8006552:	d1ba      	bne.n	80064ca <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8006554:	4b09      	ldr	r3, [pc, #36]	; (800657c <HAL_ADC_ConfigChannel+0x130>)
 8006556:	4a0a      	ldr	r2, [pc, #40]	; (8006580 <HAL_ADC_ConfigChannel+0x134>)
 8006558:	681b      	ldr	r3, [r3, #0]
 800655a:	fbb3 f3f2 	udiv	r3, r3, r2
 800655e:	220a      	movs	r2, #10
 8006560:	4353      	muls	r3, r2
        counter--;
 8006562:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8006564:	9b01      	ldr	r3, [sp, #4]
 8006566:	2b00      	cmp	r3, #0
 8006568:	d0af      	beq.n	80064ca <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 800656a:	9b01      	ldr	r3, [sp, #4]
 800656c:	3b01      	subs	r3, #1
 800656e:	e7f8      	b.n	8006562 <HAL_ADC_ConfigChannel+0x116>
 8006570:	40012000 	.word	0x40012000
 8006574:	40012300 	.word	0x40012300
 8006578:	10000012 	.word	0x10000012
 800657c:	2000007c 	.word	0x2000007c
 8006580:	000f4240 	.word	0x000f4240

08006584 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8006584:	4907      	ldr	r1, [pc, #28]	; (80065a4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8006586:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006588:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800658c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800658e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006590:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006594:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8006596:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8006598:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800659c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80065a0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80065a2:	4770      	bx	lr
 80065a4:	e000ed00 	.word	0xe000ed00

080065a8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80065a8:	4b16      	ldr	r3, [pc, #88]	; (8006604 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80065aa:	b530      	push	{r4, r5, lr}
 80065ac:	68dc      	ldr	r4, [r3, #12]
 80065ae:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80065b2:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80065b6:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80065b8:	2d04      	cmp	r5, #4
 80065ba:	bf28      	it	cs
 80065bc:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80065be:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80065c0:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80065c4:	bf8c      	ite	hi
 80065c6:	3c03      	subhi	r4, #3
 80065c8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80065ca:	fa03 f505 	lsl.w	r5, r3, r5
 80065ce:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80065d2:	40a3      	lsls	r3, r4
 80065d4:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80065d8:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80065da:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80065dc:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80065e0:	bfac      	ite	ge
 80065e2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80065e6:	4a08      	ldrlt	r2, [pc, #32]	; (8006608 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80065e8:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80065ec:	bfb8      	it	lt
 80065ee:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80065f2:	b2db      	uxtb	r3, r3
 80065f4:	bfaa      	itet	ge
 80065f6:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80065fa:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80065fc:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006600:	bd30      	pop	{r4, r5, pc}
 8006602:	bf00      	nop
 8006604:	e000ed00 	.word	0xe000ed00
 8006608:	e000ed14 	.word	0xe000ed14

0800660c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800660c:	2800      	cmp	r0, #0
 800660e:	db08      	blt.n	8006622 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006610:	0942      	lsrs	r2, r0, #5
 8006612:	2301      	movs	r3, #1
 8006614:	f000 001f 	and.w	r0, r0, #31
 8006618:	fa03 f000 	lsl.w	r0, r3, r0
 800661c:	4b01      	ldr	r3, [pc, #4]	; (8006624 <HAL_NVIC_EnableIRQ+0x18>)
 800661e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006622:	4770      	bx	lr
 8006624:	e000e100 	.word	0xe000e100

08006628 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006628:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800662a:	4604      	mov	r4, r0
 800662c:	b150      	cbz	r0, 8006644 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800662e:	7943      	ldrb	r3, [r0, #5]
 8006630:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006634:	b913      	cbnz	r3, 800663c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006636:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006638:	f7fb fcf4 	bl	8002024 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800663c:	2301      	movs	r3, #1
 800663e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006640:	2000      	movs	r0, #0
}
 8006642:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006644:	2001      	movs	r0, #1
 8006646:	e7fc      	b.n	8006642 <HAL_CRC_Init+0x1a>

08006648 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006648:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 800664a:	4604      	mov	r4, r0
 800664c:	b168      	cbz	r0, 800666a <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800664e:	7903      	ldrb	r3, [r0, #4]
 8006650:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006654:	b913      	cbnz	r3, 800665c <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8006656:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006658:	f7fb fcfc 	bl	8002054 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 800665c:	2302      	movs	r3, #2
 800665e:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006660:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 8006662:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006664:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 8006666:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006668:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800666a:	2001      	movs	r0, #1
 800666c:	e7fc      	b.n	8006668 <HAL_DAC_Init+0x20>

0800666e <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 800666e:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8006670:	7943      	ldrb	r3, [r0, #5]
 8006672:	2b01      	cmp	r3, #1
 8006674:	f04f 0302 	mov.w	r3, #2
 8006678:	d017      	beq.n	80066aa <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 800667a:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 800667c:	6803      	ldr	r3, [r0, #0]
 800667e:	2201      	movs	r2, #1
 8006680:	681c      	ldr	r4, [r3, #0]
 8006682:	408a      	lsls	r2, r1
 8006684:	4322      	orrs	r2, r4
 8006686:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 8006688:	b989      	cbnz	r1, 80066ae <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 800668a:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 800668c:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 800668e:	074c      	lsls	r4, r1, #29
 8006690:	d507      	bpl.n	80066a2 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8006692:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8006696:	2a38      	cmp	r2, #56	; 0x38
 8006698:	d103      	bne.n	80066a2 <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 800669a:	685a      	ldr	r2, [r3, #4]
 800669c:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80066a0:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80066a2:	2301      	movs	r3, #1
 80066a4:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80066a6:	2300      	movs	r3, #0
 80066a8:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80066aa:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80066ac:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80066ae:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80066b0:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80066b2:	0349      	lsls	r1, r1, #13
 80066b4:	d5f5      	bpl.n	80066a2 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80066b6:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80066ba:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80066be:	d1f0      	bne.n	80066a2 <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80066c0:	685a      	ldr	r2, [r3, #4]
 80066c2:	f042 0202 	orr.w	r2, r2, #2
 80066c6:	e7eb      	b.n	80066a0 <HAL_DAC_Start+0x32>

080066c8 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80066c8:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80066ca:	7943      	ldrb	r3, [r0, #5]
 80066cc:	2b01      	cmp	r3, #1
 80066ce:	f04f 0302 	mov.w	r3, #2
 80066d2:	d018      	beq.n	8006706 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 80066d4:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 80066d6:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 80066d8:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 80066da:	f640 75fe 	movw	r5, #4094	; 0xffe
 80066de:	4095      	lsls	r5, r2
 80066e0:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 80066e4:	e9d1 3100 	ldrd	r3, r1, [r1]
 80066e8:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 80066ea:	4093      	lsls	r3, r2
 80066ec:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 80066ee:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80066f0:	6823      	ldr	r3, [r4, #0]
 80066f2:	21c0      	movs	r1, #192	; 0xc0
 80066f4:	fa01 f202 	lsl.w	r2, r1, r2
 80066f8:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80066fc:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80066fe:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8006700:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8006702:	2300      	movs	r3, #0
 8006704:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8006706:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8006708:	bd30      	pop	{r4, r5, pc}

0800670a <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 800670a:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 800670c:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 800670e:	2400      	movs	r4, #0
 8006710:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8006712:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8006714:	b941      	cbnz	r1, 8006728 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8006716:	9901      	ldr	r1, [sp, #4]
 8006718:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 800671a:	440a      	add	r2, r1
 800671c:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800671e:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006720:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8006722:	6013      	str	r3, [r2, #0]
}
 8006724:	b002      	add	sp, #8
 8006726:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006728:	9901      	ldr	r1, [sp, #4]
 800672a:	3114      	adds	r1, #20
 800672c:	e7f5      	b.n	800671a <HAL_DAC_SetValue+0x10>

0800672e <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800672e:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8006730:	4604      	mov	r4, r0
 8006732:	b330      	cbz	r0, 8006782 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006734:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006738:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800673c:	b91b      	cbnz	r3, 8006746 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800673e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8006742:	f7fb fcb9 	bl	80020b8 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006746:	6822      	ldr	r2, [r4, #0]
 8006748:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800674a:	2302      	movs	r3, #2
 800674c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006750:	6813      	ldr	r3, [r2, #0]
 8006752:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006756:	430b      	orrs	r3, r1
 8006758:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800675a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800675c:	68a1      	ldr	r1, [r4, #8]
 800675e:	f023 0307 	bic.w	r3, r3, #7
 8006762:	430b      	orrs	r3, r1
 8006764:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8006766:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006768:	68e1      	ldr	r1, [r4, #12]
 800676a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800676e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006772:	430b      	orrs	r3, r1
 8006774:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006776:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006778:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800677a:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800677c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8006780:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8006782:	2001      	movs	r0, #1
 8006784:	e7fc      	b.n	8006780 <HAL_DMA2D_Init+0x52>

08006786 <HAL_DMA2D_LineEventCallback>:
 8006786:	4770      	bx	lr

08006788 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8006788:	4770      	bx	lr

0800678a <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800678a:	6803      	ldr	r3, [r0, #0]
{
 800678c:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800678e:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8006790:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006792:	07f2      	lsls	r2, r6, #31
{
 8006794:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006796:	d514      	bpl.n	80067c2 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8006798:	05e9      	lsls	r1, r5, #23
 800679a:	d512      	bpl.n	80067c2 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800679c:	681a      	ldr	r2, [r3, #0]
 800679e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80067a2:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80067a4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80067a6:	f042 0201 	orr.w	r2, r2, #1
 80067aa:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80067ac:	2201      	movs	r2, #1
 80067ae:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80067b0:	2304      	movs	r3, #4
 80067b2:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80067b6:	2300      	movs	r3, #0
 80067b8:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80067bc:	6943      	ldr	r3, [r0, #20]
 80067be:	b103      	cbz	r3, 80067c2 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80067c0:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80067c2:	06b2      	lsls	r2, r6, #26
 80067c4:	d516      	bpl.n	80067f4 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80067c6:	04ab      	lsls	r3, r5, #18
 80067c8:	d514      	bpl.n	80067f4 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80067ca:	6823      	ldr	r3, [r4, #0]
 80067cc:	681a      	ldr	r2, [r3, #0]
 80067ce:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80067d2:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80067d4:	2220      	movs	r2, #32
 80067d6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80067d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80067da:	f043 0302 	orr.w	r3, r3, #2
 80067de:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80067e0:	2304      	movs	r3, #4
 80067e2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80067e6:	2300      	movs	r3, #0
 80067e8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80067ec:	6963      	ldr	r3, [r4, #20]
 80067ee:	b10b      	cbz	r3, 80067f4 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80067f0:	4620      	mov	r0, r4
 80067f2:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80067f4:	0730      	lsls	r0, r6, #28
 80067f6:	d516      	bpl.n	8006826 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80067f8:	0529      	lsls	r1, r5, #20
 80067fa:	d514      	bpl.n	8006826 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80067fc:	6823      	ldr	r3, [r4, #0]
 80067fe:	681a      	ldr	r2, [r3, #0]
 8006800:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006804:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006806:	2208      	movs	r2, #8
 8006808:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800680a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800680c:	f043 0304 	orr.w	r3, r3, #4
 8006810:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006812:	2304      	movs	r3, #4
 8006814:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006818:	2300      	movs	r3, #0
 800681a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800681e:	6963      	ldr	r3, [r4, #20]
 8006820:	b10b      	cbz	r3, 8006826 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006822:	4620      	mov	r0, r4
 8006824:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006826:	0772      	lsls	r2, r6, #29
 8006828:	d50b      	bpl.n	8006842 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800682a:	056b      	lsls	r3, r5, #21
 800682c:	d509      	bpl.n	8006842 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800682e:	6823      	ldr	r3, [r4, #0]
 8006830:	681a      	ldr	r2, [r3, #0]
 8006832:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006836:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006838:	2204      	movs	r2, #4
 800683a:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800683c:	4620      	mov	r0, r4
 800683e:	f7ff ffa2 	bl	8006786 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8006842:	07b0      	lsls	r0, r6, #30
 8006844:	d514      	bpl.n	8006870 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006846:	05a9      	lsls	r1, r5, #22
 8006848:	d512      	bpl.n	8006870 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800684a:	6823      	ldr	r3, [r4, #0]
 800684c:	681a      	ldr	r2, [r3, #0]
 800684e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006852:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006854:	2202      	movs	r2, #2
 8006856:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006858:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800685a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800685c:	2301      	movs	r3, #1
 800685e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006862:	2300      	movs	r3, #0
 8006864:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006868:	6923      	ldr	r3, [r4, #16]
 800686a:	b10b      	cbz	r3, 8006870 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800686c:	4620      	mov	r0, r4
 800686e:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8006870:	06f2      	lsls	r2, r6, #27
 8006872:	d513      	bpl.n	800689c <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8006874:	04eb      	lsls	r3, r5, #19
 8006876:	d511      	bpl.n	800689c <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8006878:	6823      	ldr	r3, [r4, #0]
 800687a:	681a      	ldr	r2, [r3, #0]
 800687c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8006880:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8006882:	2210      	movs	r2, #16
 8006884:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006886:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006888:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800688a:	2301      	movs	r3, #1
 800688c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006890:	2300      	movs	r3, #0
 8006892:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8006896:	4620      	mov	r0, r4
 8006898:	f7ff ff76 	bl	8006788 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800689c:	bd70      	pop	{r4, r5, r6, pc}
	...

080068a0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80068a0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80068a2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80068a6:	2b01      	cmp	r3, #1
 80068a8:	f04f 0302 	mov.w	r3, #2
 80068ac:	d02b      	beq.n	8006906 <HAL_DMA2D_ConfigLayer+0x66>
 80068ae:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80068b0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80068b4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80068b8:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80068bc:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80068c0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80068c2:	4f18      	ldr	r7, [pc, #96]	; (8006924 <HAL_DMA2D_ConfigLayer+0x84>)
 80068c4:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80068c8:	3c09      	subs	r4, #9
 80068ca:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80068cc:	bf9c      	itt	ls
 80068ce:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80068d2:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80068d4:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80068d8:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80068da:	bf88      	it	hi
 80068dc:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80068e0:	b999      	cbnz	r1, 800690a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80068e2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80068e4:	4039      	ands	r1, r7
 80068e6:	430a      	orrs	r2, r1
 80068e8:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80068ea:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80068ec:	6982      	ldr	r2, [r0, #24]
 80068ee:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80068f0:	d803      	bhi.n	80068fa <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80068f2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80068f4:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80068f8:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80068fa:	2301      	movs	r3, #1
 80068fc:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8006900:	2300      	movs	r3, #0
 8006902:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006906:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006908:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800690a:	69d9      	ldr	r1, [r3, #28]
 800690c:	4039      	ands	r1, r7
 800690e:	430a      	orrs	r2, r1
 8006910:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006912:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006914:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006916:	6992      	ldr	r2, [r2, #24]
 8006918:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800691a:	bf9c      	itt	ls
 800691c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006920:	621d      	strls	r5, [r3, #32]
 8006922:	e7ea      	b.n	80068fa <HAL_DMA2D_ConfigLayer+0x5a>
 8006924:	00fcfff0 	.word	0x00fcfff0

08006928 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006928:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800692c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8006af0 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006930:	4a6d      	ldr	r2, [pc, #436]	; (8006ae8 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006932:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006af4 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006936:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006938:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800693a:	2401      	movs	r4, #1
 800693c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800693e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8006942:	43ac      	bics	r4, r5
 8006944:	f040 80b7 	bne.w	8006ab6 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006948:	684c      	ldr	r4, [r1, #4]
 800694a:	f024 0c10 	bic.w	ip, r4, #16
 800694e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006952:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006954:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006958:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800695c:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800695e:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006962:	d811      	bhi.n	8006988 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8006964:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006966:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 800696a:	68cf      	ldr	r7, [r1, #12]
 800696c:	fa07 f70e 	lsl.w	r7, r7, lr
 8006970:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8006974:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8006976:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006978:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800697c:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8006980:	409f      	lsls	r7, r3
 8006982:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8006986:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8006988:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800698a:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800698e:	688f      	ldr	r7, [r1, #8]
 8006990:	fa07 f70e 	lsl.w	r7, r7, lr
 8006994:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006998:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 800699c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800699e:	d116      	bne.n	80069ce <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80069a0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80069a4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80069a8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80069ac:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80069b0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80069b4:	f04f 0c0f 	mov.w	ip, #15
 80069b8:	fa0c fc0b 	lsl.w	ip, ip, fp
 80069bc:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80069c0:	690f      	ldr	r7, [r1, #16]
 80069c2:	fa07 f70b 	lsl.w	r7, r7, fp
 80069c6:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80069ca:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80069ce:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80069d0:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80069d2:	f004 0703 	and.w	r7, r4, #3
 80069d6:	fa07 f70e 	lsl.w	r7, r7, lr
 80069da:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 80069dc:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80069de:	00e5      	lsls	r5, r4, #3
 80069e0:	d569      	bpl.n	8006ab6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80069e2:	f04f 0b00 	mov.w	fp, #0
 80069e6:	f8cd b004 	str.w	fp, [sp, #4]
 80069ea:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80069ee:	4d3f      	ldr	r5, [pc, #252]	; (8006aec <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80069f0:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80069f4:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80069f8:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80069fc:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8006a00:	9701      	str	r7, [sp, #4]
 8006a02:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006a04:	f023 0703 	bic.w	r7, r3, #3
 8006a08:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8006a0c:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006a10:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006a14:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006a18:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8006a1c:	f04f 0c0f 	mov.w	ip, #15
 8006a20:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006a24:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006a26:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006a2a:	d04b      	beq.n	8006ac4 <HAL_GPIO_Init+0x19c>
 8006a2c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006a30:	42a8      	cmp	r0, r5
 8006a32:	d049      	beq.n	8006ac8 <HAL_GPIO_Init+0x1a0>
 8006a34:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006a38:	42a8      	cmp	r0, r5
 8006a3a:	d047      	beq.n	8006acc <HAL_GPIO_Init+0x1a4>
 8006a3c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006a40:	42a8      	cmp	r0, r5
 8006a42:	d045      	beq.n	8006ad0 <HAL_GPIO_Init+0x1a8>
 8006a44:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006a48:	42a8      	cmp	r0, r5
 8006a4a:	d043      	beq.n	8006ad4 <HAL_GPIO_Init+0x1ac>
 8006a4c:	4548      	cmp	r0, r9
 8006a4e:	d043      	beq.n	8006ad8 <HAL_GPIO_Init+0x1b0>
 8006a50:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006a54:	42a8      	cmp	r0, r5
 8006a56:	d041      	beq.n	8006adc <HAL_GPIO_Init+0x1b4>
 8006a58:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006a5c:	42a8      	cmp	r0, r5
 8006a5e:	d03f      	beq.n	8006ae0 <HAL_GPIO_Init+0x1b8>
 8006a60:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006a64:	42a8      	cmp	r0, r5
 8006a66:	d03d      	beq.n	8006ae4 <HAL_GPIO_Init+0x1bc>
 8006a68:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006a6c:	42a8      	cmp	r0, r5
 8006a6e:	bf0c      	ite	eq
 8006a70:	2509      	moveq	r5, #9
 8006a72:	250a      	movne	r5, #10
 8006a74:	fa05 f50e 	lsl.w	r5, r5, lr
 8006a78:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006a7c:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8006a7e:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8006a80:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8006a82:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8006a86:	bf0c      	ite	eq
 8006a88:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006a8a:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8006a8c:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8006a8e:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8006a90:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8006a94:	bf0c      	ite	eq
 8006a96:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006a98:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8006a9a:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8006a9c:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8006a9e:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8006aa2:	bf0c      	ite	eq
 8006aa4:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006aa6:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8006aa8:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8006aaa:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8006aac:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8006aae:	bf54      	ite	pl
 8006ab0:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8006ab2:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8006ab4:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006ab6:	3301      	adds	r3, #1
 8006ab8:	2b10      	cmp	r3, #16
 8006aba:	f47f af3d 	bne.w	8006938 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8006abe:	b003      	add	sp, #12
 8006ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006ac4:	465d      	mov	r5, fp
 8006ac6:	e7d5      	b.n	8006a74 <HAL_GPIO_Init+0x14c>
 8006ac8:	2501      	movs	r5, #1
 8006aca:	e7d3      	b.n	8006a74 <HAL_GPIO_Init+0x14c>
 8006acc:	2502      	movs	r5, #2
 8006ace:	e7d1      	b.n	8006a74 <HAL_GPIO_Init+0x14c>
 8006ad0:	2503      	movs	r5, #3
 8006ad2:	e7cf      	b.n	8006a74 <HAL_GPIO_Init+0x14c>
 8006ad4:	2504      	movs	r5, #4
 8006ad6:	e7cd      	b.n	8006a74 <HAL_GPIO_Init+0x14c>
 8006ad8:	2505      	movs	r5, #5
 8006ada:	e7cb      	b.n	8006a74 <HAL_GPIO_Init+0x14c>
 8006adc:	2506      	movs	r5, #6
 8006ade:	e7c9      	b.n	8006a74 <HAL_GPIO_Init+0x14c>
 8006ae0:	2507      	movs	r5, #7
 8006ae2:	e7c7      	b.n	8006a74 <HAL_GPIO_Init+0x14c>
 8006ae4:	2508      	movs	r5, #8
 8006ae6:	e7c5      	b.n	8006a74 <HAL_GPIO_Init+0x14c>
 8006ae8:	40013c00 	.word	0x40013c00
 8006aec:	40020000 	.word	0x40020000
 8006af0:	40023800 	.word	0x40023800
 8006af4:	40021400 	.word	0x40021400

08006af8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006af8:	b10a      	cbz	r2, 8006afe <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006afa:	6181      	str	r1, [r0, #24]
  }
}
 8006afc:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006afe:	0409      	lsls	r1, r1, #16
 8006b00:	e7fb      	b.n	8006afa <HAL_GPIO_WritePin+0x2>

08006b02 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006b02:	6801      	ldr	r1, [r0, #0]
 8006b04:	694b      	ldr	r3, [r1, #20]
 8006b06:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006b0a:	f04f 0200 	mov.w	r2, #0
 8006b0e:	d010      	beq.n	8006b32 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006b10:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006b14:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006b16:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006b18:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006b1a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006b1e:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006b22:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006b24:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006b28:	f043 0304 	orr.w	r3, r3, #4
 8006b2c:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8006b2e:	2001      	movs	r0, #1
 8006b30:	4770      	bx	lr
  }
  return HAL_OK;
 8006b32:	4618      	mov	r0, r3
}
 8006b34:	4770      	bx	lr

08006b36 <I2C_WaitOnFlagUntilTimeout>:
{
 8006b36:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006b3a:	4606      	mov	r6, r0
 8006b3c:	460f      	mov	r7, r1
 8006b3e:	4691      	mov	r9, r2
 8006b40:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006b42:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006b46:	6833      	ldr	r3, [r6, #0]
 8006b48:	f1ba 0f01 	cmp.w	sl, #1
 8006b4c:	bf0c      	ite	eq
 8006b4e:	695c      	ldreq	r4, [r3, #20]
 8006b50:	699c      	ldrne	r4, [r3, #24]
 8006b52:	ea27 0404 	bic.w	r4, r7, r4
 8006b56:	b2a4      	uxth	r4, r4
 8006b58:	fab4 f484 	clz	r4, r4
 8006b5c:	0964      	lsrs	r4, r4, #5
 8006b5e:	45a1      	cmp	r9, r4
 8006b60:	d001      	beq.n	8006b66 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8006b62:	2000      	movs	r0, #0
 8006b64:	e017      	b.n	8006b96 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8006b66:	1c6a      	adds	r2, r5, #1
 8006b68:	d0ee      	beq.n	8006b48 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006b6a:	f7ff fae9 	bl	8006140 <HAL_GetTick>
 8006b6e:	9b08      	ldr	r3, [sp, #32]
 8006b70:	1ac0      	subs	r0, r0, r3
 8006b72:	42a8      	cmp	r0, r5
 8006b74:	d801      	bhi.n	8006b7a <I2C_WaitOnFlagUntilTimeout+0x44>
 8006b76:	2d00      	cmp	r5, #0
 8006b78:	d1e5      	bne.n	8006b46 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006b7a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006b7c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006b7e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006b80:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006b84:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006b88:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006b8a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006b8e:	f042 0220 	orr.w	r2, r2, #32
 8006b92:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8006b94:	2001      	movs	r0, #1
}
 8006b96:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08006b9a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8006b9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b9e:	4604      	mov	r4, r0
 8006ba0:	460f      	mov	r7, r1
 8006ba2:	4616      	mov	r6, r2
 8006ba4:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006ba6:	6825      	ldr	r5, [r4, #0]
 8006ba8:	6968      	ldr	r0, [r5, #20]
 8006baa:	ea27 0000 	bic.w	r0, r7, r0
 8006bae:	b280      	uxth	r0, r0
 8006bb0:	b1b8      	cbz	r0, 8006be2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006bb2:	696b      	ldr	r3, [r5, #20]
 8006bb4:	055a      	lsls	r2, r3, #21
 8006bb6:	d516      	bpl.n	8006be6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006bb8:	682b      	ldr	r3, [r5, #0]
 8006bba:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006bbe:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006bc0:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006bc4:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006bc6:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006bc8:	2300      	movs	r3, #0
 8006bca:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006bcc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006bd0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006bd4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006bd6:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006bda:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006bdc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8006be0:	2001      	movs	r0, #1
}
 8006be2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006be6:	1c73      	adds	r3, r6, #1
 8006be8:	d0de      	beq.n	8006ba8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006bea:	f7ff faa9 	bl	8006140 <HAL_GetTick>
 8006bee:	eba0 0008 	sub.w	r0, r0, r8
 8006bf2:	42b0      	cmp	r0, r6
 8006bf4:	d801      	bhi.n	8006bfa <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006bf6:	2e00      	cmp	r6, #0
 8006bf8:	d1d5      	bne.n	8006ba6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006bfa:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006bfc:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006bfe:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006c00:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006c04:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006c08:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006c0a:	f042 0220 	orr.w	r2, r2, #32
 8006c0e:	e7e4      	b.n	8006bda <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006c10 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006c10:	b570      	push	{r4, r5, r6, lr}
 8006c12:	4604      	mov	r4, r0
 8006c14:	460d      	mov	r5, r1
 8006c16:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006c18:	6821      	ldr	r1, [r4, #0]
 8006c1a:	694b      	ldr	r3, [r1, #20]
 8006c1c:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006c20:	d001      	beq.n	8006c26 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006c22:	2000      	movs	r0, #0
 8006c24:	e010      	b.n	8006c48 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006c26:	694a      	ldr	r2, [r1, #20]
 8006c28:	06d2      	lsls	r2, r2, #27
 8006c2a:	d50e      	bpl.n	8006c4a <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006c2c:	f06f 0210 	mvn.w	r2, #16
 8006c30:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006c32:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006c34:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006c36:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006c3a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8006c3e:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006c40:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8006c42:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006c46:	2001      	movs	r0, #1
}
 8006c48:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006c4a:	f7ff fa79 	bl	8006140 <HAL_GetTick>
 8006c4e:	1b80      	subs	r0, r0, r6
 8006c50:	42a8      	cmp	r0, r5
 8006c52:	d801      	bhi.n	8006c58 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006c54:	2d00      	cmp	r5, #0
 8006c56:	d1df      	bne.n	8006c18 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006c58:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8006c5a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006c5c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006c5e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006c62:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006c66:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006c68:	f042 0220 	orr.w	r2, r2, #32
 8006c6c:	e7e8      	b.n	8006c40 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08006c6e <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8006c6e:	b570      	push	{r4, r5, r6, lr}
 8006c70:	4604      	mov	r4, r0
 8006c72:	460d      	mov	r5, r1
 8006c74:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006c76:	6823      	ldr	r3, [r4, #0]
 8006c78:	695b      	ldr	r3, [r3, #20]
 8006c7a:	075b      	lsls	r3, r3, #29
 8006c7c:	d501      	bpl.n	8006c82 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8006c7e:	2000      	movs	r0, #0
}
 8006c80:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006c82:	4620      	mov	r0, r4
 8006c84:	f7ff ff3d 	bl	8006b02 <I2C_IsAcknowledgeFailed>
 8006c88:	b9a8      	cbnz	r0, 8006cb6 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006c8a:	1c6a      	adds	r2, r5, #1
 8006c8c:	d0f3      	beq.n	8006c76 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006c8e:	f7ff fa57 	bl	8006140 <HAL_GetTick>
 8006c92:	1b80      	subs	r0, r0, r6
 8006c94:	42a8      	cmp	r0, r5
 8006c96:	d801      	bhi.n	8006c9c <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8006c98:	2d00      	cmp	r5, #0
 8006c9a:	d1ec      	bne.n	8006c76 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006c9c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006c9e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006ca0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006ca2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006ca6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006caa:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006cac:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006cb0:	f042 0220 	orr.w	r2, r2, #32
 8006cb4:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006cb6:	2001      	movs	r0, #1
 8006cb8:	e7e2      	b.n	8006c80 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08006cba <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8006cba:	b570      	push	{r4, r5, r6, lr}
 8006cbc:	4604      	mov	r4, r0
 8006cbe:	460d      	mov	r5, r1
 8006cc0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006cc2:	6823      	ldr	r3, [r4, #0]
 8006cc4:	695b      	ldr	r3, [r3, #20]
 8006cc6:	061b      	lsls	r3, r3, #24
 8006cc8:	d501      	bpl.n	8006cce <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006cca:	2000      	movs	r0, #0
}
 8006ccc:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006cce:	4620      	mov	r0, r4
 8006cd0:	f7ff ff17 	bl	8006b02 <I2C_IsAcknowledgeFailed>
 8006cd4:	b9a8      	cbnz	r0, 8006d02 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006cd6:	1c6a      	adds	r2, r5, #1
 8006cd8:	d0f3      	beq.n	8006cc2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006cda:	f7ff fa31 	bl	8006140 <HAL_GetTick>
 8006cde:	1b80      	subs	r0, r0, r6
 8006ce0:	42a8      	cmp	r0, r5
 8006ce2:	d801      	bhi.n	8006ce8 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006ce4:	2d00      	cmp	r5, #0
 8006ce6:	d1ec      	bne.n	8006cc2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006ce8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006cea:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006cec:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006cee:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006cf2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006cf6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006cf8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006cfc:	f042 0220 	orr.w	r2, r2, #32
 8006d00:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006d02:	2001      	movs	r0, #1
 8006d04:	e7e2      	b.n	8006ccc <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006d08 <I2C_RequestMemoryWrite>:
{
 8006d08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006d0c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006d0e:	6802      	ldr	r2, [r0, #0]
{
 8006d10:	b085      	sub	sp, #20
 8006d12:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006d16:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006d18:	6813      	ldr	r3, [r2, #0]
 8006d1a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006d1e:	6013      	str	r3, [r2, #0]
{
 8006d20:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006d22:	463b      	mov	r3, r7
 8006d24:	f8cd 8000 	str.w	r8, [sp]
 8006d28:	2200      	movs	r2, #0
 8006d2a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006d2e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006d30:	f7ff ff01 	bl	8006b36 <I2C_WaitOnFlagUntilTimeout>
 8006d34:	6823      	ldr	r3, [r4, #0]
 8006d36:	b138      	cbz	r0, 8006d48 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006d38:	681b      	ldr	r3, [r3, #0]
 8006d3a:	05db      	lsls	r3, r3, #23
 8006d3c:	d502      	bpl.n	8006d44 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006d3e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006d42:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006d44:	2003      	movs	r0, #3
 8006d46:	e00a      	b.n	8006d5e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006d48:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006d4c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006d4e:	4919      	ldr	r1, [pc, #100]	; (8006db4 <I2C_RequestMemoryWrite+0xac>)
 8006d50:	4643      	mov	r3, r8
 8006d52:	463a      	mov	r2, r7
 8006d54:	4620      	mov	r0, r4
 8006d56:	f7ff ff20 	bl	8006b9a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006d5a:	b118      	cbz	r0, 8006d64 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006d5c:	2001      	movs	r0, #1
}
 8006d5e:	b005      	add	sp, #20
 8006d60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d64:	6823      	ldr	r3, [r4, #0]
 8006d66:	9003      	str	r0, [sp, #12]
 8006d68:	695a      	ldr	r2, [r3, #20]
 8006d6a:	9203      	str	r2, [sp, #12]
 8006d6c:	699b      	ldr	r3, [r3, #24]
 8006d6e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006d70:	4642      	mov	r2, r8
 8006d72:	4639      	mov	r1, r7
 8006d74:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d76:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006d78:	f7ff ff9f 	bl	8006cba <I2C_WaitOnTXEFlagUntilTimeout>
 8006d7c:	b140      	cbz	r0, 8006d90 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006d7e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006d80:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d82:	bf01      	itttt	eq
 8006d84:	6822      	ldreq	r2, [r4, #0]
 8006d86:	6813      	ldreq	r3, [r2, #0]
 8006d88:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006d8c:	6013      	streq	r3, [r2, #0]
 8006d8e:	e7e5      	b.n	8006d5c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006d90:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d94:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006d96:	d102      	bne.n	8006d9e <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006d98:	b2ed      	uxtb	r5, r5
 8006d9a:	611d      	str	r5, [r3, #16]
 8006d9c:	e7df      	b.n	8006d5e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006d9e:	0a2a      	lsrs	r2, r5, #8
 8006da0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006da2:	4639      	mov	r1, r7
 8006da4:	4642      	mov	r2, r8
 8006da6:	4620      	mov	r0, r4
 8006da8:	f7ff ff87 	bl	8006cba <I2C_WaitOnTXEFlagUntilTimeout>
 8006dac:	2800      	cmp	r0, #0
 8006dae:	d1e6      	bne.n	8006d7e <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006db0:	6823      	ldr	r3, [r4, #0]
 8006db2:	e7f1      	b.n	8006d98 <I2C_RequestMemoryWrite+0x90>
 8006db4:	00010002 	.word	0x00010002

08006db8 <I2C_RequestMemoryRead>:
{
 8006db8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006dbc:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006dbe:	6803      	ldr	r3, [r0, #0]
{
 8006dc0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006dc2:	681a      	ldr	r2, [r3, #0]
 8006dc4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006dc8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006dca:	681a      	ldr	r2, [r3, #0]
{
 8006dcc:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006dd0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006dd4:	601a      	str	r2, [r3, #0]
{
 8006dd6:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006dd8:	463b      	mov	r3, r7
 8006dda:	f8cd 8000 	str.w	r8, [sp]
 8006dde:	2200      	movs	r2, #0
 8006de0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006de4:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006de6:	f7ff fea6 	bl	8006b36 <I2C_WaitOnFlagUntilTimeout>
 8006dea:	6823      	ldr	r3, [r4, #0]
 8006dec:	b148      	cbz	r0, 8006e02 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006dee:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006df0:	05db      	lsls	r3, r3, #23
 8006df2:	d502      	bpl.n	8006dfa <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006df4:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006df8:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006dfa:	2003      	movs	r0, #3
}
 8006dfc:	b004      	add	sp, #16
 8006dfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006e02:	fa5f f986 	uxtb.w	r9, r6
 8006e06:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006e0a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006e0c:	492a      	ldr	r1, [pc, #168]	; (8006eb8 <I2C_RequestMemoryRead+0x100>)
 8006e0e:	4643      	mov	r3, r8
 8006e10:	463a      	mov	r2, r7
 8006e12:	4620      	mov	r0, r4
 8006e14:	f7ff fec1 	bl	8006b9a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006e18:	b108      	cbz	r0, 8006e1e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006e1a:	2001      	movs	r0, #1
 8006e1c:	e7ee      	b.n	8006dfc <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e1e:	6823      	ldr	r3, [r4, #0]
 8006e20:	9003      	str	r0, [sp, #12]
 8006e22:	695a      	ldr	r2, [r3, #20]
 8006e24:	9203      	str	r2, [sp, #12]
 8006e26:	699b      	ldr	r3, [r3, #24]
 8006e28:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006e2a:	4642      	mov	r2, r8
 8006e2c:	4639      	mov	r1, r7
 8006e2e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e30:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006e32:	f7ff ff42 	bl	8006cba <I2C_WaitOnTXEFlagUntilTimeout>
 8006e36:	b140      	cbz	r0, 8006e4a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006e38:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006e3a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006e3c:	bf01      	itttt	eq
 8006e3e:	6822      	ldreq	r2, [r4, #0]
 8006e40:	6813      	ldreq	r3, [r2, #0]
 8006e42:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006e46:	6013      	streq	r3, [r2, #0]
 8006e48:	e7e7      	b.n	8006e1a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006e4a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006e4e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006e50:	d11a      	bne.n	8006e88 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006e52:	b2ed      	uxtb	r5, r5
 8006e54:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006e56:	4642      	mov	r2, r8
 8006e58:	4639      	mov	r1, r7
 8006e5a:	4620      	mov	r0, r4
 8006e5c:	f7ff ff2d 	bl	8006cba <I2C_WaitOnTXEFlagUntilTimeout>
 8006e60:	2800      	cmp	r0, #0
 8006e62:	d1e9      	bne.n	8006e38 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006e64:	6822      	ldr	r2, [r4, #0]
 8006e66:	6813      	ldr	r3, [r2, #0]
 8006e68:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006e6c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006e6e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006e72:	4602      	mov	r2, r0
 8006e74:	f8cd 8000 	str.w	r8, [sp]
 8006e78:	463b      	mov	r3, r7
 8006e7a:	4620      	mov	r0, r4
 8006e7c:	f7ff fe5b 	bl	8006b36 <I2C_WaitOnFlagUntilTimeout>
 8006e80:	6822      	ldr	r2, [r4, #0]
 8006e82:	b160      	cbz	r0, 8006e9e <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006e84:	6813      	ldr	r3, [r2, #0]
 8006e86:	e7b3      	b.n	8006df0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006e88:	0a2a      	lsrs	r2, r5, #8
 8006e8a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006e8c:	4639      	mov	r1, r7
 8006e8e:	4642      	mov	r2, r8
 8006e90:	4620      	mov	r0, r4
 8006e92:	f7ff ff12 	bl	8006cba <I2C_WaitOnTXEFlagUntilTimeout>
 8006e96:	2800      	cmp	r0, #0
 8006e98:	d1ce      	bne.n	8006e38 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006e9a:	6823      	ldr	r3, [r4, #0]
 8006e9c:	e7d9      	b.n	8006e52 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006e9e:	f049 0301 	orr.w	r3, r9, #1
 8006ea2:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006ea4:	4904      	ldr	r1, [pc, #16]	; (8006eb8 <I2C_RequestMemoryRead+0x100>)
 8006ea6:	4643      	mov	r3, r8
 8006ea8:	463a      	mov	r2, r7
 8006eaa:	4620      	mov	r0, r4
 8006eac:	f7ff fe75 	bl	8006b9a <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8006eb0:	3800      	subs	r0, #0
 8006eb2:	bf18      	it	ne
 8006eb4:	2001      	movne	r0, #1
 8006eb6:	e7a1      	b.n	8006dfc <I2C_RequestMemoryRead+0x44>
 8006eb8:	00010002 	.word	0x00010002

08006ebc <HAL_I2C_Init>:
{
 8006ebc:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8006ebe:	4604      	mov	r4, r0
 8006ec0:	b908      	cbnz	r0, 8006ec6 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8006ec2:	2001      	movs	r0, #1
}
 8006ec4:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006ec6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006eca:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006ece:	b91b      	cbnz	r3, 8006ed8 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006ed0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006ed4:	f7fb f912 	bl	80020fc <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006ed8:	2324      	movs	r3, #36	; 0x24
 8006eda:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006ede:	6823      	ldr	r3, [r4, #0]
 8006ee0:	681a      	ldr	r2, [r3, #0]
 8006ee2:	f022 0201 	bic.w	r2, r2, #1
 8006ee6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006ee8:	681a      	ldr	r2, [r3, #0]
 8006eea:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006eee:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006ef0:	681a      	ldr	r2, [r3, #0]
 8006ef2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006ef6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006ef8:	f000 fe6e 	bl	8007bd8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006efc:	4b3f      	ldr	r3, [pc, #252]	; (8006ffc <HAL_I2C_Init+0x140>)
 8006efe:	6865      	ldr	r5, [r4, #4]
 8006f00:	429d      	cmp	r5, r3
 8006f02:	bf94      	ite	ls
 8006f04:	4b3e      	ldrls	r3, [pc, #248]	; (8007000 <HAL_I2C_Init+0x144>)
 8006f06:	4b3f      	ldrhi	r3, [pc, #252]	; (8007004 <HAL_I2C_Init+0x148>)
 8006f08:	4298      	cmp	r0, r3
 8006f0a:	bf8c      	ite	hi
 8006f0c:	2300      	movhi	r3, #0
 8006f0e:	2301      	movls	r3, #1
 8006f10:	2b00      	cmp	r3, #0
 8006f12:	d1d6      	bne.n	8006ec2 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006f14:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006f16:	4e39      	ldr	r6, [pc, #228]	; (8006ffc <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006f18:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006f1a:	493b      	ldr	r1, [pc, #236]	; (8007008 <HAL_I2C_Init+0x14c>)
 8006f1c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006f20:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006f24:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006f26:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006f28:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006f2a:	bf88      	it	hi
 8006f2c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006f30:	6a13      	ldr	r3, [r2, #32]
 8006f32:	bf88      	it	hi
 8006f34:	4371      	mulhi	r1, r6
 8006f36:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006f3a:	bf84      	itt	hi
 8006f3c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006f40:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006f44:	3101      	adds	r1, #1
 8006f46:	4319      	orrs	r1, r3
 8006f48:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006f4a:	69d1      	ldr	r1, [r2, #28]
 8006f4c:	1e43      	subs	r3, r0, #1
 8006f4e:	482b      	ldr	r0, [pc, #172]	; (8006ffc <HAL_I2C_Init+0x140>)
 8006f50:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006f54:	4285      	cmp	r5, r0
 8006f56:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006f5a:	d832      	bhi.n	8006fc2 <HAL_I2C_Init+0x106>
 8006f5c:	006d      	lsls	r5, r5, #1
 8006f5e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006f62:	fbb3 f3f5 	udiv	r3, r3, r5
 8006f66:	3301      	adds	r3, #1
 8006f68:	4203      	tst	r3, r0
 8006f6a:	d042      	beq.n	8006ff2 <HAL_I2C_Init+0x136>
 8006f6c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006f70:	430b      	orrs	r3, r1
 8006f72:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006f74:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006f78:	6811      	ldr	r1, [r2, #0]
 8006f7a:	4303      	orrs	r3, r0
 8006f7c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006f80:	430b      	orrs	r3, r1
 8006f82:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006f84:	6891      	ldr	r1, [r2, #8]
 8006f86:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006f8a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006f8e:	4303      	orrs	r3, r0
 8006f90:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006f94:	430b      	orrs	r3, r1
 8006f96:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006f98:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006f9c:	68d1      	ldr	r1, [r2, #12]
 8006f9e:	4303      	orrs	r3, r0
 8006fa0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006fa4:	430b      	orrs	r3, r1
 8006fa6:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006fa8:	6813      	ldr	r3, [r2, #0]
 8006faa:	f043 0301 	orr.w	r3, r3, #1
 8006fae:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006fb0:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006fb2:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006fb4:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006fb6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006fba:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006fbc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006fc0:	e780      	b.n	8006ec4 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006fc2:	68a0      	ldr	r0, [r4, #8]
 8006fc4:	b950      	cbnz	r0, 8006fdc <HAL_I2C_Init+0x120>
 8006fc6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006fca:	fbb3 f3f5 	udiv	r3, r3, r5
 8006fce:	3301      	adds	r3, #1
 8006fd0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006fd4:	b17b      	cbz	r3, 8006ff6 <HAL_I2C_Init+0x13a>
 8006fd6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006fda:	e7c9      	b.n	8006f70 <HAL_I2C_Init+0xb4>
 8006fdc:	2019      	movs	r0, #25
 8006fde:	4345      	muls	r5, r0
 8006fe0:	fbb3 f3f5 	udiv	r3, r3, r5
 8006fe4:	3301      	adds	r3, #1
 8006fe6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006fea:	b123      	cbz	r3, 8006ff6 <HAL_I2C_Init+0x13a>
 8006fec:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006ff0:	e7be      	b.n	8006f70 <HAL_I2C_Init+0xb4>
 8006ff2:	2304      	movs	r3, #4
 8006ff4:	e7bc      	b.n	8006f70 <HAL_I2C_Init+0xb4>
 8006ff6:	2301      	movs	r3, #1
 8006ff8:	e7ba      	b.n	8006f70 <HAL_I2C_Init+0xb4>
 8006ffa:	bf00      	nop
 8006ffc:	000186a0 	.word	0x000186a0
 8007000:	001e847f 	.word	0x001e847f
 8007004:	003d08ff 	.word	0x003d08ff
 8007008:	000f4240 	.word	0x000f4240

0800700c <HAL_I2C_Mem_Write>:
{
 800700c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007010:	4604      	mov	r4, r0
 8007012:	4699      	mov	r9, r3
 8007014:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8007016:	460f      	mov	r7, r1
 8007018:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800701a:	f7ff f891 	bl	8006140 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800701e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8007022:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8007024:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007026:	d003      	beq.n	8007030 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8007028:	2002      	movs	r0, #2
}
 800702a:	b003      	add	sp, #12
 800702c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007030:	9000      	str	r0, [sp, #0]
 8007032:	493c      	ldr	r1, [pc, #240]	; (8007124 <HAL_I2C_Mem_Write+0x118>)
 8007034:	2319      	movs	r3, #25
 8007036:	2201      	movs	r2, #1
 8007038:	4620      	mov	r0, r4
 800703a:	f7ff fd7c 	bl	8006b36 <I2C_WaitOnFlagUntilTimeout>
 800703e:	2800      	cmp	r0, #0
 8007040:	d1f2      	bne.n	8007028 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8007042:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8007046:	2b01      	cmp	r3, #1
 8007048:	d0ee      	beq.n	8007028 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800704a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800704c:	2301      	movs	r3, #1
 800704e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007052:	6803      	ldr	r3, [r0, #0]
 8007054:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8007056:	bf5e      	ittt	pl
 8007058:	6803      	ldrpl	r3, [r0, #0]
 800705a:	f043 0301 	orrpl.w	r3, r3, #1
 800705e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007060:	6803      	ldr	r3, [r0, #0]
 8007062:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007066:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8007068:	2321      	movs	r3, #33	; 0x21
 800706a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800706e:	2340      	movs	r3, #64	; 0x40
 8007070:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007074:	2300      	movs	r3, #0
 8007076:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8007078:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800707a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800707c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8007080:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8007082:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007084:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8007086:	4b28      	ldr	r3, [pc, #160]	; (8007128 <HAL_I2C_Mem_Write+0x11c>)
 8007088:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800708a:	e9cd 6500 	strd	r6, r5, [sp]
 800708e:	464b      	mov	r3, r9
 8007090:	4642      	mov	r2, r8
 8007092:	4639      	mov	r1, r7
 8007094:	4620      	mov	r0, r4
 8007096:	f7ff fe37 	bl	8006d08 <I2C_RequestMemoryWrite>
 800709a:	2800      	cmp	r0, #0
 800709c:	d02a      	beq.n	80070f4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800709e:	2001      	movs	r0, #1
 80070a0:	e7c3      	b.n	800702a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80070a2:	f7ff fe0a 	bl	8006cba <I2C_WaitOnTXEFlagUntilTimeout>
 80070a6:	b140      	cbz	r0, 80070ba <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80070a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80070aa:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80070ac:	bf01      	itttt	eq
 80070ae:	6822      	ldreq	r2, [r4, #0]
 80070b0:	6813      	ldreq	r3, [r2, #0]
 80070b2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80070b6:	6013      	streq	r3, [r2, #0]
 80070b8:	e7f1      	b.n	800709e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80070ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80070bc:	6827      	ldr	r7, [r4, #0]
 80070be:	461a      	mov	r2, r3
 80070c0:	f812 1b01 	ldrb.w	r1, [r2], #1
 80070c4:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80070c6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80070c8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80070ca:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80070cc:	3a01      	subs	r2, #1
 80070ce:	b292      	uxth	r2, r2
 80070d0:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80070d2:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80070d4:	1e48      	subs	r0, r1, #1
 80070d6:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80070d8:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80070da:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80070dc:	d50a      	bpl.n	80070f4 <HAL_I2C_Mem_Write+0xe8>
 80070de:	b148      	cbz	r0, 80070f4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80070e0:	785a      	ldrb	r2, [r3, #1]
 80070e2:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80070e4:	3302      	adds	r3, #2
 80070e6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80070e8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80070ea:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80070ec:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80070ee:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80070f0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80070f2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80070f4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80070f6:	462a      	mov	r2, r5
 80070f8:	4631      	mov	r1, r6
 80070fa:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80070fc:	2b00      	cmp	r3, #0
 80070fe:	d1d0      	bne.n	80070a2 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007100:	f7ff fdb5 	bl	8006c6e <I2C_WaitOnBTFFlagUntilTimeout>
 8007104:	2800      	cmp	r0, #0
 8007106:	d1cf      	bne.n	80070a8 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007108:	6822      	ldr	r2, [r4, #0]
 800710a:	6813      	ldr	r3, [r2, #0]
 800710c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007110:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8007112:	2320      	movs	r3, #32
 8007114:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8007118:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800711c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8007120:	e783      	b.n	800702a <HAL_I2C_Mem_Write+0x1e>
 8007122:	bf00      	nop
 8007124:	00100002 	.word	0x00100002
 8007128:	ffff0000 	.word	0xffff0000

0800712c <HAL_I2C_Mem_Read>:
{
 800712c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007130:	4604      	mov	r4, r0
 8007132:	b087      	sub	sp, #28
 8007134:	4699      	mov	r9, r3
 8007136:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8007138:	460d      	mov	r5, r1
 800713a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800713c:	f7ff f800 	bl	8006140 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007140:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8007144:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8007146:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007148:	d004      	beq.n	8007154 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800714a:	2502      	movs	r5, #2
}
 800714c:	4628      	mov	r0, r5
 800714e:	b007      	add	sp, #28
 8007150:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007154:	9000      	str	r0, [sp, #0]
 8007156:	4976      	ldr	r1, [pc, #472]	; (8007330 <HAL_I2C_Mem_Read+0x204>)
 8007158:	2319      	movs	r3, #25
 800715a:	2201      	movs	r2, #1
 800715c:	4620      	mov	r0, r4
 800715e:	f7ff fcea 	bl	8006b36 <I2C_WaitOnFlagUntilTimeout>
 8007162:	2800      	cmp	r0, #0
 8007164:	d1f1      	bne.n	800714a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8007166:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800716a:	2b01      	cmp	r3, #1
 800716c:	d0ed      	beq.n	800714a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800716e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007170:	2301      	movs	r3, #1
 8007172:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007176:	6803      	ldr	r3, [r0, #0]
 8007178:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800717a:	bf5e      	ittt	pl
 800717c:	6803      	ldrpl	r3, [r0, #0]
 800717e:	f043 0301 	orrpl.w	r3, r3, #1
 8007182:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007184:	6803      	ldr	r3, [r0, #0]
 8007186:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800718a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800718c:	2322      	movs	r3, #34	; 0x22
 800718e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8007192:	2340      	movs	r3, #64	; 0x40
 8007194:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007198:	2300      	movs	r3, #0
 800719a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800719c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800719e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80071a0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80071a4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80071a6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80071a8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80071aa:	4b62      	ldr	r3, [pc, #392]	; (8007334 <HAL_I2C_Mem_Read+0x208>)
 80071ac:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80071ae:	4629      	mov	r1, r5
 80071b0:	e9cd 7600 	strd	r7, r6, [sp]
 80071b4:	464b      	mov	r3, r9
 80071b6:	4642      	mov	r2, r8
 80071b8:	4620      	mov	r0, r4
 80071ba:	f7ff fdfd 	bl	8006db8 <I2C_RequestMemoryRead>
 80071be:	4605      	mov	r5, r0
 80071c0:	b108      	cbz	r0, 80071c6 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80071c2:	2501      	movs	r5, #1
 80071c4:	e7c2      	b.n	800714c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80071c6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80071c8:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80071ca:	b9b2      	cbnz	r2, 80071fa <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80071cc:	9002      	str	r0, [sp, #8]
 80071ce:	695a      	ldr	r2, [r3, #20]
 80071d0:	9202      	str	r2, [sp, #8]
 80071d2:	699a      	ldr	r2, [r3, #24]
 80071d4:	9202      	str	r2, [sp, #8]
 80071d6:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80071d8:	681a      	ldr	r2, [r3, #0]
 80071da:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80071de:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80071e0:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8007338 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 80071e4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80071e6:	2b00      	cmp	r3, #0
 80071e8:	d12c      	bne.n	8007244 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80071ea:	2220      	movs	r2, #32
 80071ec:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80071f0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80071f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80071f8:	e7a8      	b.n	800714c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80071fa:	2a01      	cmp	r2, #1
 80071fc:	d10a      	bne.n	8007214 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80071fe:	681a      	ldr	r2, [r3, #0]
 8007200:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007204:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007206:	9003      	str	r0, [sp, #12]
 8007208:	695a      	ldr	r2, [r3, #20]
 800720a:	9203      	str	r2, [sp, #12]
 800720c:	699a      	ldr	r2, [r3, #24]
 800720e:	9203      	str	r2, [sp, #12]
 8007210:	9a03      	ldr	r2, [sp, #12]
 8007212:	e7e1      	b.n	80071d8 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8007214:	2a02      	cmp	r2, #2
 8007216:	d10e      	bne.n	8007236 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007218:	681a      	ldr	r2, [r3, #0]
 800721a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800721e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007220:	681a      	ldr	r2, [r3, #0]
 8007222:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007226:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007228:	9004      	str	r0, [sp, #16]
 800722a:	695a      	ldr	r2, [r3, #20]
 800722c:	9204      	str	r2, [sp, #16]
 800722e:	699b      	ldr	r3, [r3, #24]
 8007230:	9304      	str	r3, [sp, #16]
 8007232:	9b04      	ldr	r3, [sp, #16]
 8007234:	e7d4      	b.n	80071e0 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007236:	9005      	str	r0, [sp, #20]
 8007238:	695a      	ldr	r2, [r3, #20]
 800723a:	9205      	str	r2, [sp, #20]
 800723c:	699b      	ldr	r3, [r3, #24]
 800723e:	9305      	str	r3, [sp, #20]
 8007240:	9b05      	ldr	r3, [sp, #20]
 8007242:	e7cd      	b.n	80071e0 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8007244:	2b03      	cmp	r3, #3
 8007246:	d856      	bhi.n	80072f6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8007248:	2b01      	cmp	r3, #1
 800724a:	d115      	bne.n	8007278 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800724c:	4632      	mov	r2, r6
 800724e:	4639      	mov	r1, r7
 8007250:	4620      	mov	r0, r4
 8007252:	f7ff fcdd 	bl	8006c10 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007256:	2800      	cmp	r0, #0
 8007258:	d1b3      	bne.n	80071c2 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800725a:	6823      	ldr	r3, [r4, #0]
 800725c:	691a      	ldr	r2, [r3, #16]
 800725e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007260:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007262:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007264:	3301      	adds	r3, #1
 8007266:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007268:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800726a:	3b01      	subs	r3, #1
 800726c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800726e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007270:	3b01      	subs	r3, #1
 8007272:	b29b      	uxth	r3, r3
 8007274:	8563      	strh	r3, [r4, #42]	; 0x2a
 8007276:	e7b5      	b.n	80071e4 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8007278:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800727a:	9600      	str	r6, [sp, #0]
 800727c:	463b      	mov	r3, r7
 800727e:	f04f 0200 	mov.w	r2, #0
 8007282:	4641      	mov	r1, r8
 8007284:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8007286:	d119      	bne.n	80072bc <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007288:	f7ff fc55 	bl	8006b36 <I2C_WaitOnFlagUntilTimeout>
 800728c:	2800      	cmp	r0, #0
 800728e:	d198      	bne.n	80071c2 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007290:	6823      	ldr	r3, [r4, #0]
 8007292:	681a      	ldr	r2, [r3, #0]
 8007294:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007298:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800729a:	691a      	ldr	r2, [r3, #16]
 800729c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800729e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80072a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80072a2:	1c53      	adds	r3, r2, #1
 80072a4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80072a6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80072a8:	3b01      	subs	r3, #1
 80072aa:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80072ac:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80072ae:	3b01      	subs	r3, #1
 80072b0:	b29b      	uxth	r3, r3
 80072b2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80072b4:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80072b6:	691b      	ldr	r3, [r3, #16]
 80072b8:	7053      	strb	r3, [r2, #1]
 80072ba:	e7d2      	b.n	8007262 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80072bc:	f7ff fc3b 	bl	8006b36 <I2C_WaitOnFlagUntilTimeout>
 80072c0:	2800      	cmp	r0, #0
 80072c2:	f47f af7e 	bne.w	80071c2 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80072c6:	6823      	ldr	r3, [r4, #0]
 80072c8:	681a      	ldr	r2, [r3, #0]
 80072ca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80072ce:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80072d0:	691a      	ldr	r2, [r3, #16]
 80072d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80072d4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80072d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80072d8:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80072da:	3301      	adds	r3, #1
 80072dc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80072de:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80072e0:	3b01      	subs	r3, #1
 80072e2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80072e4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80072e6:	3b01      	subs	r3, #1
 80072e8:	b29b      	uxth	r3, r3
 80072ea:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80072ec:	4602      	mov	r2, r0
 80072ee:	463b      	mov	r3, r7
 80072f0:	4641      	mov	r1, r8
 80072f2:	4620      	mov	r0, r4
 80072f4:	e7c8      	b.n	8007288 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80072f6:	4632      	mov	r2, r6
 80072f8:	4639      	mov	r1, r7
 80072fa:	4620      	mov	r0, r4
 80072fc:	f7ff fc88 	bl	8006c10 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007300:	2800      	cmp	r0, #0
 8007302:	f47f af5e 	bne.w	80071c2 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007306:	6823      	ldr	r3, [r4, #0]
 8007308:	691a      	ldr	r2, [r3, #16]
 800730a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800730c:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800730e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007310:	1c53      	adds	r3, r2, #1
 8007312:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8007314:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007316:	3b01      	subs	r3, #1
 8007318:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800731a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800731c:	3b01      	subs	r3, #1
 800731e:	b29b      	uxth	r3, r3
 8007320:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8007322:	6823      	ldr	r3, [r4, #0]
 8007324:	6959      	ldr	r1, [r3, #20]
 8007326:	0749      	lsls	r1, r1, #29
 8007328:	f57f af5c 	bpl.w	80071e4 <HAL_I2C_Mem_Read+0xb8>
 800732c:	e7c3      	b.n	80072b6 <HAL_I2C_Mem_Read+0x18a>
 800732e:	bf00      	nop
 8007330:	00100002 	.word	0x00100002
 8007334:	ffff0000 	.word	0xffff0000
 8007338:	00010004 	.word	0x00010004

0800733c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800733c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800733e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007342:	2b20      	cmp	r3, #32
 8007344:	b2dc      	uxtb	r4, r3
 8007346:	d116      	bne.n	8007376 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8007348:	2324      	movs	r3, #36	; 0x24
 800734a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800734e:	6803      	ldr	r3, [r0, #0]
 8007350:	681a      	ldr	r2, [r3, #0]
 8007352:	f022 0201 	bic.w	r2, r2, #1
 8007356:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8007358:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800735a:	f022 0210 	bic.w	r2, r2, #16
 800735e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8007360:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007362:	4311      	orrs	r1, r2
 8007364:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8007366:	681a      	ldr	r2, [r3, #0]
 8007368:	f042 0201 	orr.w	r2, r2, #1
 800736c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800736e:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8007372:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8007374:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8007376:	2002      	movs	r0, #2
 8007378:	e7fc      	b.n	8007374 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800737a <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800737a:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800737c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007380:	2b20      	cmp	r3, #32
 8007382:	b2dc      	uxtb	r4, r3
 8007384:	d116      	bne.n	80073b4 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8007386:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8007388:	2324      	movs	r3, #36	; 0x24
 800738a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800738e:	6813      	ldr	r3, [r2, #0]
 8007390:	f023 0301 	bic.w	r3, r3, #1
 8007394:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8007396:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8007398:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 800739c:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800739e:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80073a0:	b29b      	uxth	r3, r3
 80073a2:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80073a4:	6813      	ldr	r3, [r2, #0]
 80073a6:	f043 0301 	orr.w	r3, r3, #1
 80073aa:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80073ac:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80073b0:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80073b2:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80073b4:	2002      	movs	r0, #2
 80073b6:	e7fc      	b.n	80073b2 <HAL_I2CEx_ConfigDigitalFilter+0x38>

080073b8 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073b8:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80073ba:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80073be:	01d2      	lsls	r2, r2, #7
 80073c0:	3284      	adds	r2, #132	; 0x84
 80073c2:	1883      	adds	r3, r0, r2
{
 80073c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073c8:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80073ca:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073cc:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80073ce:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80073d2:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80073d6:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80073d8:	68c5      	ldr	r5, [r0, #12]
 80073da:	f10c 0701 	add.w	r7, ip, #1
 80073de:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073e2:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80073e6:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073e8:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80073ea:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80073ee:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80073f0:	68c5      	ldr	r5, [r0, #12]
 80073f2:	68ce      	ldr	r6, [r1, #12]
 80073f4:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80073f8:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80073fa:	689d      	ldr	r5, [r3, #8]
 80073fc:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007400:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8007402:	68c7      	ldr	r7, [r0, #12]
 8007404:	688d      	ldr	r5, [r1, #8]
 8007406:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800740a:	3501      	adds	r5, #1
 800740c:	443d      	add	r5, r7
 800740e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8007412:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007414:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007416:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007418:	f025 0507 	bic.w	r5, r5, #7
 800741c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800741e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007422:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8007424:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8007426:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800742a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800742e:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8007432:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8007436:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800743a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800743e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8007442:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8007444:	695d      	ldr	r5, [r3, #20]
 8007446:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800744a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800744c:	694d      	ldr	r5, [r1, #20]
 800744e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8007450:	69dd      	ldr	r5, [r3, #28]
 8007452:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8007456:	f025 0507 	bic.w	r5, r5, #7
 800745a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800745c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8007460:	433d      	orrs	r5, r7
 8007462:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007464:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007466:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007468:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800746c:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800746e:	b31e      	cbz	r6, 80074b8 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007470:	2e01      	cmp	r6, #1
 8007472:	d023      	beq.n	80074bc <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007474:	1eb5      	subs	r5, r6, #2
 8007476:	2d02      	cmp	r5, #2
 8007478:	d922      	bls.n	80074c0 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800747a:	2e07      	cmp	r6, #7
 800747c:	bf0c      	ite	eq
 800747e:	2502      	moveq	r5, #2
 8007480:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8007482:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8007484:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8007488:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800748a:	eba4 040c 	sub.w	r4, r4, ip
 800748e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007490:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007492:	436c      	muls	r4, r5
 8007494:	436e      	muls	r6, r5
 8007496:	3403      	adds	r4, #3
 8007498:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800749c:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800749e:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80074a0:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80074a4:	f024 0407 	bic.w	r4, r4, #7
 80074a8:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80074aa:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80074ac:	5883      	ldr	r3, [r0, r2]
 80074ae:	f043 0301 	orr.w	r3, r3, #1
 80074b2:	5083      	str	r3, [r0, r2]
}
 80074b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80074b8:	2504      	movs	r5, #4
 80074ba:	e7e2      	b.n	8007482 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80074bc:	2503      	movs	r5, #3
 80074be:	e7e0      	b.n	8007482 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80074c0:	2502      	movs	r5, #2
 80074c2:	e7de      	b.n	8007482 <LTDC_SetConfig+0xca>

080074c4 <HAL_LTDC_Init>:
{
 80074c4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80074c6:	4604      	mov	r4, r0
 80074c8:	2800      	cmp	r0, #0
 80074ca:	d063      	beq.n	8007594 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80074cc:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80074d0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80074d4:	b91b      	cbnz	r3, 80074de <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80074d6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80074da:	f7fa fe6b 	bl	80021b4 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80074de:	2302      	movs	r3, #2
 80074e0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80074e4:	6823      	ldr	r3, [r4, #0]
 80074e6:	699a      	ldr	r2, [r3, #24]
 80074e8:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80074ec:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80074ee:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80074f2:	4302      	orrs	r2, r0
 80074f4:	68e0      	ldr	r0, [r4, #12]
 80074f6:	6999      	ldr	r1, [r3, #24]
 80074f8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80074fa:	6920      	ldr	r0, [r4, #16]
 80074fc:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80074fe:	430a      	orrs	r2, r1
 8007500:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007502:	689a      	ldr	r2, [r3, #8]
 8007504:	4924      	ldr	r1, [pc, #144]	; (8007598 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8007506:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007508:	400a      	ands	r2, r1
 800750a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800750c:	689a      	ldr	r2, [r3, #8]
 800750e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007512:	69a0      	ldr	r0, [r4, #24]
 8007514:	4302      	orrs	r2, r0
 8007516:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007518:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800751a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800751c:	400a      	ands	r2, r1
 800751e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007520:	68da      	ldr	r2, [r3, #12]
 8007522:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007526:	6a20      	ldr	r0, [r4, #32]
 8007528:	4302      	orrs	r2, r0
 800752a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800752c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800752e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007530:	400a      	ands	r2, r1
 8007532:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007534:	691a      	ldr	r2, [r3, #16]
 8007536:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800753a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800753c:	4302      	orrs	r2, r0
 800753e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007540:	695a      	ldr	r2, [r3, #20]
 8007542:	4011      	ands	r1, r2
 8007544:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007546:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007548:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800754a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800754e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007550:	430a      	orrs	r2, r1
 8007552:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007554:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007556:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800755a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800755e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8007562:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007564:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007566:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800756a:	430a      	orrs	r2, r1
 800756c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007570:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007574:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8007576:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007578:	f042 0206 	orr.w	r2, r2, #6
 800757c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800757e:	699a      	ldr	r2, [r3, #24]
 8007580:	f042 0201 	orr.w	r2, r2, #1
 8007584:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007586:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8007588:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800758a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800758e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8007592:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007594:	2001      	movs	r0, #1
 8007596:	e7fc      	b.n	8007592 <HAL_LTDC_Init+0xce>
 8007598:	f000f800 	.word	0xf000f800

0800759c <HAL_LTDC_ErrorCallback>:
 800759c:	4770      	bx	lr

0800759e <HAL_LTDC_ReloadEventCallback>:
 800759e:	4770      	bx	lr

080075a0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80075a0:	6803      	ldr	r3, [r0, #0]
{
 80075a2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80075a4:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80075a6:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80075a8:	0772      	lsls	r2, r6, #29
{
 80075aa:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80075ac:	d514      	bpl.n	80075d8 <HAL_LTDC_IRQHandler+0x38>
 80075ae:	0769      	lsls	r1, r5, #29
 80075b0:	d512      	bpl.n	80075d8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80075b2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80075b4:	f022 0204 	bic.w	r2, r2, #4
 80075b8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80075ba:	2204      	movs	r2, #4
 80075bc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80075be:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80075c2:	f043 0301 	orr.w	r3, r3, #1
 80075c6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80075ca:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80075cc:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80075d0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80075d4:	f7ff ffe2 	bl	800759c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80075d8:	07b2      	lsls	r2, r6, #30
 80075da:	d516      	bpl.n	800760a <HAL_LTDC_IRQHandler+0x6a>
 80075dc:	07ab      	lsls	r3, r5, #30
 80075de:	d514      	bpl.n	800760a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80075e0:	6823      	ldr	r3, [r4, #0]
 80075e2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80075e4:	f022 0202 	bic.w	r2, r2, #2
 80075e8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80075ea:	2202      	movs	r2, #2
 80075ec:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80075ee:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80075f2:	4313      	orrs	r3, r2
 80075f4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80075f8:	2304      	movs	r3, #4
 80075fa:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80075fe:	2300      	movs	r3, #0
 8007600:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007604:	4620      	mov	r0, r4
 8007606:	f7ff ffc9 	bl	800759c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800760a:	07f0      	lsls	r0, r6, #31
 800760c:	d510      	bpl.n	8007630 <HAL_LTDC_IRQHandler+0x90>
 800760e:	07e9      	lsls	r1, r5, #31
 8007610:	d50e      	bpl.n	8007630 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007612:	6823      	ldr	r3, [r4, #0]
 8007614:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007616:	f022 0201 	bic.w	r2, r2, #1
 800761a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800761c:	2201      	movs	r2, #1
 800761e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007620:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007622:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007626:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800762a:	4620      	mov	r0, r4
 800762c:	f7f9 fd72 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007630:	0732      	lsls	r2, r6, #28
 8007632:	d511      	bpl.n	8007658 <HAL_LTDC_IRQHandler+0xb8>
 8007634:	072b      	lsls	r3, r5, #28
 8007636:	d50f      	bpl.n	8007658 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007638:	6823      	ldr	r3, [r4, #0]
 800763a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800763c:	f022 0208 	bic.w	r2, r2, #8
 8007640:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007642:	2208      	movs	r2, #8
 8007644:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007646:	2301      	movs	r3, #1
 8007648:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800764c:	2300      	movs	r3, #0
 800764e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007652:	4620      	mov	r0, r4
 8007654:	f7ff ffa3 	bl	800759e <HAL_LTDC_ReloadEventCallback>
}
 8007658:	bd70      	pop	{r4, r5, r6, pc}

0800765a <HAL_LTDC_ConfigLayer>:
{
 800765a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800765e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007662:	2b01      	cmp	r3, #1
{
 8007664:	4606      	mov	r6, r0
 8007666:	460f      	mov	r7, r1
 8007668:	4694      	mov	ip, r2
 800766a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800766e:	d01f      	beq.n	80076b0 <HAL_LTDC_ConfigLayer+0x56>
 8007670:	f04f 0801 	mov.w	r8, #1
 8007674:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007678:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800767c:	2434      	movs	r4, #52	; 0x34
 800767e:	460d      	mov	r5, r1
 8007680:	fb04 6402 	mla	r4, r4, r2, r6
 8007684:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007686:	3438      	adds	r4, #56	; 0x38
 8007688:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800768a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800768c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800768e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007690:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007692:	682b      	ldr	r3, [r5, #0]
 8007694:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007696:	4630      	mov	r0, r6
 8007698:	4662      	mov	r2, ip
 800769a:	4639      	mov	r1, r7
 800769c:	f7ff fe8c 	bl	80073b8 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80076a0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80076a2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80076a4:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80076a8:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80076ac:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80076b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080076b4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80076b4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80076b8:	2b01      	cmp	r3, #1
 80076ba:	f04f 0302 	mov.w	r3, #2
 80076be:	d012      	beq.n	80076e6 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80076c0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80076c4:	6803      	ldr	r3, [r0, #0]
 80076c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80076c8:	f022 0201 	bic.w	r2, r2, #1
 80076cc:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80076ce:	4a07      	ldr	r2, [pc, #28]	; (80076ec <HAL_LTDC_ProgramLineEvent+0x38>)
 80076d0:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80076d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80076d4:	f042 0201 	orr.w	r2, r2, #1
 80076d8:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80076da:	2301      	movs	r3, #1
 80076dc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80076e0:	2300      	movs	r3, #0
 80076e2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80076e6:	4618      	mov	r0, r3
}
 80076e8:	4770      	bx	lr
 80076ea:	bf00      	nop
 80076ec:	40016800 	.word	0x40016800

080076f0 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80076f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80076f4:	4604      	mov	r4, r0
 80076f6:	b340      	cbz	r0, 800774a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80076f8:	6803      	ldr	r3, [r0, #0]
 80076fa:	07dd      	lsls	r5, r3, #31
 80076fc:	d410      	bmi.n	8007720 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80076fe:	6823      	ldr	r3, [r4, #0]
 8007700:	0798      	lsls	r0, r3, #30
 8007702:	d45e      	bmi.n	80077c2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007704:	6823      	ldr	r3, [r4, #0]
 8007706:	071a      	lsls	r2, r3, #28
 8007708:	f100 80a0 	bmi.w	800784c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800770c:	6823      	ldr	r3, [r4, #0]
 800770e:	075b      	lsls	r3, r3, #29
 8007710:	f100 80c0 	bmi.w	8007894 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007714:	69a0      	ldr	r0, [r4, #24]
 8007716:	2800      	cmp	r0, #0
 8007718:	f040 8128 	bne.w	800796c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800771c:	2000      	movs	r0, #0
 800771e:	e02b      	b.n	8007778 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007720:	4b8f      	ldr	r3, [pc, #572]	; (8007960 <HAL_RCC_OscConfig+0x270>)
 8007722:	689a      	ldr	r2, [r3, #8]
 8007724:	f002 020c 	and.w	r2, r2, #12
 8007728:	2a04      	cmp	r2, #4
 800772a:	d007      	beq.n	800773c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800772c:	689a      	ldr	r2, [r3, #8]
 800772e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007732:	2a08      	cmp	r2, #8
 8007734:	d10b      	bne.n	800774e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007736:	685a      	ldr	r2, [r3, #4]
 8007738:	0251      	lsls	r1, r2, #9
 800773a:	d508      	bpl.n	800774e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800773c:	4b88      	ldr	r3, [pc, #544]	; (8007960 <HAL_RCC_OscConfig+0x270>)
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	039a      	lsls	r2, r3, #14
 8007742:	d5dc      	bpl.n	80076fe <HAL_RCC_OscConfig+0xe>
 8007744:	6863      	ldr	r3, [r4, #4]
 8007746:	2b00      	cmp	r3, #0
 8007748:	d1d9      	bne.n	80076fe <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800774a:	2001      	movs	r0, #1
 800774c:	e014      	b.n	8007778 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800774e:	6862      	ldr	r2, [r4, #4]
 8007750:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007754:	d113      	bne.n	800777e <HAL_RCC_OscConfig+0x8e>
 8007756:	681a      	ldr	r2, [r3, #0]
 8007758:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800775c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800775e:	f7fe fcef 	bl	8006140 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007762:	4e7f      	ldr	r6, [pc, #508]	; (8007960 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007764:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007766:	6833      	ldr	r3, [r6, #0]
 8007768:	039b      	lsls	r3, r3, #14
 800776a:	d4c8      	bmi.n	80076fe <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800776c:	f7fe fce8 	bl	8006140 <HAL_GetTick>
 8007770:	1b40      	subs	r0, r0, r5
 8007772:	2864      	cmp	r0, #100	; 0x64
 8007774:	d9f7      	bls.n	8007766 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8007776:	2003      	movs	r0, #3
}
 8007778:	b002      	add	sp, #8
 800777a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800777e:	4d78      	ldr	r5, [pc, #480]	; (8007960 <HAL_RCC_OscConfig+0x270>)
 8007780:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8007784:	682b      	ldr	r3, [r5, #0]
 8007786:	d107      	bne.n	8007798 <HAL_RCC_OscConfig+0xa8>
 8007788:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800778c:	602b      	str	r3, [r5, #0]
 800778e:	682b      	ldr	r3, [r5, #0]
 8007790:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007794:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007796:	e7e2      	b.n	800775e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007798:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800779c:	602b      	str	r3, [r5, #0]
 800779e:	682b      	ldr	r3, [r5, #0]
 80077a0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80077a4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80077a6:	2a00      	cmp	r2, #0
 80077a8:	d1d9      	bne.n	800775e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80077aa:	f7fe fcc9 	bl	8006140 <HAL_GetTick>
 80077ae:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80077b0:	682b      	ldr	r3, [r5, #0]
 80077b2:	039f      	lsls	r7, r3, #14
 80077b4:	d5a3      	bpl.n	80076fe <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80077b6:	f7fe fcc3 	bl	8006140 <HAL_GetTick>
 80077ba:	1b80      	subs	r0, r0, r6
 80077bc:	2864      	cmp	r0, #100	; 0x64
 80077be:	d9f7      	bls.n	80077b0 <HAL_RCC_OscConfig+0xc0>
 80077c0:	e7d9      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80077c2:	4b67      	ldr	r3, [pc, #412]	; (8007960 <HAL_RCC_OscConfig+0x270>)
 80077c4:	689a      	ldr	r2, [r3, #8]
 80077c6:	f012 0f0c 	tst.w	r2, #12
 80077ca:	d007      	beq.n	80077dc <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80077cc:	689a      	ldr	r2, [r3, #8]
 80077ce:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80077d2:	2a08      	cmp	r2, #8
 80077d4:	d111      	bne.n	80077fa <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80077d6:	685b      	ldr	r3, [r3, #4]
 80077d8:	025e      	lsls	r6, r3, #9
 80077da:	d40e      	bmi.n	80077fa <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80077dc:	4a60      	ldr	r2, [pc, #384]	; (8007960 <HAL_RCC_OscConfig+0x270>)
 80077de:	6813      	ldr	r3, [r2, #0]
 80077e0:	079d      	lsls	r5, r3, #30
 80077e2:	d502      	bpl.n	80077ea <HAL_RCC_OscConfig+0xfa>
 80077e4:	68e3      	ldr	r3, [r4, #12]
 80077e6:	2b01      	cmp	r3, #1
 80077e8:	d1af      	bne.n	800774a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80077ea:	6813      	ldr	r3, [r2, #0]
 80077ec:	6921      	ldr	r1, [r4, #16]
 80077ee:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80077f2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80077f6:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80077f8:	e784      	b.n	8007704 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80077fa:	68e2      	ldr	r2, [r4, #12]
 80077fc:	4b59      	ldr	r3, [pc, #356]	; (8007964 <HAL_RCC_OscConfig+0x274>)
 80077fe:	b1b2      	cbz	r2, 800782e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8007800:	2201      	movs	r2, #1
 8007802:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007804:	f7fe fc9c 	bl	8006140 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007808:	4d55      	ldr	r5, [pc, #340]	; (8007960 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800780a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800780c:	682b      	ldr	r3, [r5, #0]
 800780e:	0798      	lsls	r0, r3, #30
 8007810:	d507      	bpl.n	8007822 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007812:	682b      	ldr	r3, [r5, #0]
 8007814:	6922      	ldr	r2, [r4, #16]
 8007816:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800781a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800781e:	602b      	str	r3, [r5, #0]
 8007820:	e770      	b.n	8007704 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007822:	f7fe fc8d 	bl	8006140 <HAL_GetTick>
 8007826:	1b80      	subs	r0, r0, r6
 8007828:	2802      	cmp	r0, #2
 800782a:	d9ef      	bls.n	800780c <HAL_RCC_OscConfig+0x11c>
 800782c:	e7a3      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800782e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007830:	f7fe fc86 	bl	8006140 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007834:	4e4a      	ldr	r6, [pc, #296]	; (8007960 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007836:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007838:	6833      	ldr	r3, [r6, #0]
 800783a:	0799      	lsls	r1, r3, #30
 800783c:	f57f af62 	bpl.w	8007704 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007840:	f7fe fc7e 	bl	8006140 <HAL_GetTick>
 8007844:	1b40      	subs	r0, r0, r5
 8007846:	2802      	cmp	r0, #2
 8007848:	d9f6      	bls.n	8007838 <HAL_RCC_OscConfig+0x148>
 800784a:	e794      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800784c:	6962      	ldr	r2, [r4, #20]
 800784e:	4b45      	ldr	r3, [pc, #276]	; (8007964 <HAL_RCC_OscConfig+0x274>)
 8007850:	b182      	cbz	r2, 8007874 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8007852:	2201      	movs	r2, #1
 8007854:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007858:	f7fe fc72 	bl	8006140 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800785c:	4e40      	ldr	r6, [pc, #256]	; (8007960 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800785e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007860:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007862:	079f      	lsls	r7, r3, #30
 8007864:	f53f af52 	bmi.w	800770c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007868:	f7fe fc6a 	bl	8006140 <HAL_GetTick>
 800786c:	1b40      	subs	r0, r0, r5
 800786e:	2802      	cmp	r0, #2
 8007870:	d9f6      	bls.n	8007860 <HAL_RCC_OscConfig+0x170>
 8007872:	e780      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8007874:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007878:	f7fe fc62 	bl	8006140 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800787c:	4e38      	ldr	r6, [pc, #224]	; (8007960 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800787e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007880:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007882:	0798      	lsls	r0, r3, #30
 8007884:	f57f af42 	bpl.w	800770c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007888:	f7fe fc5a 	bl	8006140 <HAL_GetTick>
 800788c:	1b40      	subs	r0, r0, r5
 800788e:	2802      	cmp	r0, #2
 8007890:	d9f6      	bls.n	8007880 <HAL_RCC_OscConfig+0x190>
 8007892:	e770      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007894:	4b32      	ldr	r3, [pc, #200]	; (8007960 <HAL_RCC_OscConfig+0x270>)
 8007896:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007898:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800789c:	d128      	bne.n	80078f0 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800789e:	9201      	str	r2, [sp, #4]
 80078a0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80078a2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80078a6:	641a      	str	r2, [r3, #64]	; 0x40
 80078a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80078aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80078ae:	9301      	str	r3, [sp, #4]
 80078b0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80078b2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80078b4:	4d2c      	ldr	r5, [pc, #176]	; (8007968 <HAL_RCC_OscConfig+0x278>)
 80078b6:	682b      	ldr	r3, [r5, #0]
 80078b8:	05d9      	lsls	r1, r3, #23
 80078ba:	d51b      	bpl.n	80078f4 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80078bc:	68a3      	ldr	r3, [r4, #8]
 80078be:	4d28      	ldr	r5, [pc, #160]	; (8007960 <HAL_RCC_OscConfig+0x270>)
 80078c0:	2b01      	cmp	r3, #1
 80078c2:	d127      	bne.n	8007914 <HAL_RCC_OscConfig+0x224>
 80078c4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80078c6:	f043 0301 	orr.w	r3, r3, #1
 80078ca:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80078cc:	f7fe fc38 	bl	8006140 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80078d0:	4e23      	ldr	r6, [pc, #140]	; (8007960 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80078d2:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80078d4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80078d8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80078da:	079b      	lsls	r3, r3, #30
 80078dc:	d539      	bpl.n	8007952 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 80078de:	2f00      	cmp	r7, #0
 80078e0:	f43f af18 	beq.w	8007714 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80078e4:	4a1e      	ldr	r2, [pc, #120]	; (8007960 <HAL_RCC_OscConfig+0x270>)
 80078e6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80078e8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80078ec:	6413      	str	r3, [r2, #64]	; 0x40
 80078ee:	e711      	b.n	8007714 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80078f0:	2700      	movs	r7, #0
 80078f2:	e7df      	b.n	80078b4 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80078f4:	682b      	ldr	r3, [r5, #0]
 80078f6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80078fa:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80078fc:	f7fe fc20 	bl	8006140 <HAL_GetTick>
 8007900:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007902:	682b      	ldr	r3, [r5, #0]
 8007904:	05da      	lsls	r2, r3, #23
 8007906:	d4d9      	bmi.n	80078bc <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007908:	f7fe fc1a 	bl	8006140 <HAL_GetTick>
 800790c:	1b80      	subs	r0, r0, r6
 800790e:	2802      	cmp	r0, #2
 8007910:	d9f7      	bls.n	8007902 <HAL_RCC_OscConfig+0x212>
 8007912:	e730      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007914:	2b05      	cmp	r3, #5
 8007916:	d104      	bne.n	8007922 <HAL_RCC_OscConfig+0x232>
 8007918:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800791a:	f043 0304 	orr.w	r3, r3, #4
 800791e:	672b      	str	r3, [r5, #112]	; 0x70
 8007920:	e7d0      	b.n	80078c4 <HAL_RCC_OscConfig+0x1d4>
 8007922:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007924:	f022 0201 	bic.w	r2, r2, #1
 8007928:	672a      	str	r2, [r5, #112]	; 0x70
 800792a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800792c:	f022 0204 	bic.w	r2, r2, #4
 8007930:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007932:	2b00      	cmp	r3, #0
 8007934:	d1ca      	bne.n	80078cc <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007936:	f7fe fc03 	bl	8006140 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800793a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800793e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007940:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007942:	0798      	lsls	r0, r3, #30
 8007944:	d5cb      	bpl.n	80078de <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007946:	f7fe fbfb 	bl	8006140 <HAL_GetTick>
 800794a:	1b80      	subs	r0, r0, r6
 800794c:	4540      	cmp	r0, r8
 800794e:	d9f7      	bls.n	8007940 <HAL_RCC_OscConfig+0x250>
 8007950:	e711      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007952:	f7fe fbf5 	bl	8006140 <HAL_GetTick>
 8007956:	1b40      	subs	r0, r0, r5
 8007958:	4540      	cmp	r0, r8
 800795a:	d9bd      	bls.n	80078d8 <HAL_RCC_OscConfig+0x1e8>
 800795c:	e70b      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
 800795e:	bf00      	nop
 8007960:	40023800 	.word	0x40023800
 8007964:	42470000 	.word	0x42470000
 8007968:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800796c:	4d33      	ldr	r5, [pc, #204]	; (8007a3c <HAL_RCC_OscConfig+0x34c>)
 800796e:	68ab      	ldr	r3, [r5, #8]
 8007970:	f003 030c 	and.w	r3, r3, #12
 8007974:	2b08      	cmp	r3, #8
 8007976:	d03d      	beq.n	80079f4 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007978:	4b31      	ldr	r3, [pc, #196]	; (8007a40 <HAL_RCC_OscConfig+0x350>)
 800797a:	2200      	movs	r2, #0
 800797c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800797e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007980:	d12b      	bne.n	80079da <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8007982:	f7fe fbdd 	bl	8006140 <HAL_GetTick>
 8007986:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007988:	682b      	ldr	r3, [r5, #0]
 800798a:	0199      	lsls	r1, r3, #6
 800798c:	d41f      	bmi.n	80079ce <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800798e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007992:	4313      	orrs	r3, r2
 8007994:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007996:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800799a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800799c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80079a0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80079a2:	0852      	lsrs	r2, r2, #1
 80079a4:	3a01      	subs	r2, #1
 80079a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80079aa:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80079ac:	4b24      	ldr	r3, [pc, #144]	; (8007a40 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80079ae:	4d23      	ldr	r5, [pc, #140]	; (8007a3c <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80079b0:	2201      	movs	r2, #1
 80079b2:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80079b4:	f7fe fbc4 	bl	8006140 <HAL_GetTick>
 80079b8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80079ba:	682b      	ldr	r3, [r5, #0]
 80079bc:	019a      	lsls	r2, r3, #6
 80079be:	f53f aead 	bmi.w	800771c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80079c2:	f7fe fbbd 	bl	8006140 <HAL_GetTick>
 80079c6:	1b00      	subs	r0, r0, r4
 80079c8:	2802      	cmp	r0, #2
 80079ca:	d9f6      	bls.n	80079ba <HAL_RCC_OscConfig+0x2ca>
 80079cc:	e6d3      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80079ce:	f7fe fbb7 	bl	8006140 <HAL_GetTick>
 80079d2:	1b80      	subs	r0, r0, r6
 80079d4:	2802      	cmp	r0, #2
 80079d6:	d9d7      	bls.n	8007988 <HAL_RCC_OscConfig+0x298>
 80079d8:	e6cd      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80079da:	f7fe fbb1 	bl	8006140 <HAL_GetTick>
 80079de:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80079e0:	682b      	ldr	r3, [r5, #0]
 80079e2:	019b      	lsls	r3, r3, #6
 80079e4:	f57f ae9a 	bpl.w	800771c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80079e8:	f7fe fbaa 	bl	8006140 <HAL_GetTick>
 80079ec:	1b00      	subs	r0, r0, r4
 80079ee:	2802      	cmp	r0, #2
 80079f0:	d9f6      	bls.n	80079e0 <HAL_RCC_OscConfig+0x2f0>
 80079f2:	e6c0      	b.n	8007776 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80079f4:	2801      	cmp	r0, #1
 80079f6:	f43f aebf 	beq.w	8007778 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80079fa:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80079fc:	69e2      	ldr	r2, [r4, #28]
 80079fe:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8007a02:	4291      	cmp	r1, r2
 8007a04:	f47f aea1 	bne.w	800774a <HAL_RCC_OscConfig+0x5a>
 8007a08:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007a0a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007a0e:	428a      	cmp	r2, r1
 8007a10:	f47f ae9b 	bne.w	800774a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007a14:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007a16:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007a1a:	401a      	ands	r2, r3
 8007a1c:	428a      	cmp	r2, r1
 8007a1e:	f47f ae94 	bne.w	800774a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007a22:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007a24:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007a28:	428a      	cmp	r2, r1
 8007a2a:	f47f ae8e 	bne.w	800774a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007a2e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8007a30:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007a34:	4293      	cmp	r3, r2
 8007a36:	f43f ae71 	beq.w	800771c <HAL_RCC_OscConfig+0x2c>
 8007a3a:	e686      	b.n	800774a <HAL_RCC_OscConfig+0x5a>
 8007a3c:	40023800 	.word	0x40023800
 8007a40:	42470000 	.word	0x42470000

08007a44 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007a44:	4913      	ldr	r1, [pc, #76]	; (8007a94 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007a46:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007a48:	688b      	ldr	r3, [r1, #8]
 8007a4a:	f003 030c 	and.w	r3, r3, #12
 8007a4e:	2b04      	cmp	r3, #4
 8007a50:	d01c      	beq.n	8007a8c <HAL_RCC_GetSysClockFreq+0x48>
 8007a52:	2b08      	cmp	r3, #8
 8007a54:	d11c      	bne.n	8007a90 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007a56:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007a58:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a5a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007a5c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a60:	bf14      	ite	ne
 8007a62:	480d      	ldrne	r0, [pc, #52]	; (8007a98 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a64:	480d      	ldreq	r0, [pc, #52]	; (8007a9c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a66:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007a6a:	bf18      	it	ne
 8007a6c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007a6e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a72:	fba1 0100 	umull	r0, r1, r1, r0
 8007a76:	f7f8 fc0b 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8007a7a:	4b06      	ldr	r3, [pc, #24]	; (8007a94 <HAL_RCC_GetSysClockFreq+0x50>)
 8007a7c:	685b      	ldr	r3, [r3, #4]
 8007a7e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8007a82:	3301      	adds	r3, #1
 8007a84:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007a86:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007a8a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007a8c:	4802      	ldr	r0, [pc, #8]	; (8007a98 <HAL_RCC_GetSysClockFreq+0x54>)
 8007a8e:	e7fc      	b.n	8007a8a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8007a90:	4802      	ldr	r0, [pc, #8]	; (8007a9c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8007a92:	e7fa      	b.n	8007a8a <HAL_RCC_GetSysClockFreq+0x46>
 8007a94:	40023800 	.word	0x40023800
 8007a98:	007a1200 	.word	0x007a1200
 8007a9c:	00f42400 	.word	0x00f42400

08007aa0 <HAL_RCC_ClockConfig>:
{
 8007aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007aa4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007aa6:	4604      	mov	r4, r0
 8007aa8:	b910      	cbnz	r0, 8007ab0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007aaa:	2001      	movs	r0, #1
}
 8007aac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8007ab0:	4b44      	ldr	r3, [pc, #272]	; (8007bc4 <HAL_RCC_ClockConfig+0x124>)
 8007ab2:	681a      	ldr	r2, [r3, #0]
 8007ab4:	f002 020f 	and.w	r2, r2, #15
 8007ab8:	428a      	cmp	r2, r1
 8007aba:	d328      	bcc.n	8007b0e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007abc:	6822      	ldr	r2, [r4, #0]
 8007abe:	0797      	lsls	r7, r2, #30
 8007ac0:	d42d      	bmi.n	8007b1e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007ac2:	07d0      	lsls	r0, r2, #31
 8007ac4:	d441      	bmi.n	8007b4a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007ac6:	4b3f      	ldr	r3, [pc, #252]	; (8007bc4 <HAL_RCC_ClockConfig+0x124>)
 8007ac8:	681a      	ldr	r2, [r3, #0]
 8007aca:	f002 020f 	and.w	r2, r2, #15
 8007ace:	42aa      	cmp	r2, r5
 8007ad0:	d866      	bhi.n	8007ba0 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007ad2:	6822      	ldr	r2, [r4, #0]
 8007ad4:	0751      	lsls	r1, r2, #29
 8007ad6:	d46c      	bmi.n	8007bb2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007ad8:	0713      	lsls	r3, r2, #28
 8007ada:	d507      	bpl.n	8007aec <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007adc:	4a3a      	ldr	r2, [pc, #232]	; (8007bc8 <HAL_RCC_ClockConfig+0x128>)
 8007ade:	6921      	ldr	r1, [r4, #16]
 8007ae0:	6893      	ldr	r3, [r2, #8]
 8007ae2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007ae6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007aea:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007aec:	f7ff ffaa 	bl	8007a44 <HAL_RCC_GetSysClockFreq>
 8007af0:	4b35      	ldr	r3, [pc, #212]	; (8007bc8 <HAL_RCC_ClockConfig+0x128>)
 8007af2:	4a36      	ldr	r2, [pc, #216]	; (8007bcc <HAL_RCC_ClockConfig+0x12c>)
 8007af4:	689b      	ldr	r3, [r3, #8]
 8007af6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007afa:	5cd3      	ldrb	r3, [r2, r3]
 8007afc:	40d8      	lsrs	r0, r3
 8007afe:	4b34      	ldr	r3, [pc, #208]	; (8007bd0 <HAL_RCC_ClockConfig+0x130>)
 8007b00:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8007b02:	4b34      	ldr	r3, [pc, #208]	; (8007bd4 <HAL_RCC_ClockConfig+0x134>)
 8007b04:	6818      	ldr	r0, [r3, #0]
 8007b06:	f7fa fcdf 	bl	80024c8 <HAL_InitTick>
  return HAL_OK;
 8007b0a:	2000      	movs	r0, #0
 8007b0c:	e7ce      	b.n	8007aac <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007b0e:	b2ca      	uxtb	r2, r1
 8007b10:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007b12:	681b      	ldr	r3, [r3, #0]
 8007b14:	f003 030f 	and.w	r3, r3, #15
 8007b18:	428b      	cmp	r3, r1
 8007b1a:	d1c6      	bne.n	8007aaa <HAL_RCC_ClockConfig+0xa>
 8007b1c:	e7ce      	b.n	8007abc <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007b1e:	4b2a      	ldr	r3, [pc, #168]	; (8007bc8 <HAL_RCC_ClockConfig+0x128>)
 8007b20:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007b24:	bf1e      	ittt	ne
 8007b26:	6899      	ldrne	r1, [r3, #8]
 8007b28:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007b2c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007b2e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007b30:	bf42      	ittt	mi
 8007b32:	6899      	ldrmi	r1, [r3, #8]
 8007b34:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007b38:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007b3a:	4923      	ldr	r1, [pc, #140]	; (8007bc8 <HAL_RCC_ClockConfig+0x128>)
 8007b3c:	68a0      	ldr	r0, [r4, #8]
 8007b3e:	688b      	ldr	r3, [r1, #8]
 8007b40:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007b44:	4303      	orrs	r3, r0
 8007b46:	608b      	str	r3, [r1, #8]
 8007b48:	e7bb      	b.n	8007ac2 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007b4a:	6862      	ldr	r2, [r4, #4]
 8007b4c:	4b1e      	ldr	r3, [pc, #120]	; (8007bc8 <HAL_RCC_ClockConfig+0x128>)
 8007b4e:	2a01      	cmp	r2, #1
 8007b50:	d11c      	bne.n	8007b8c <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007b58:	d0a7      	beq.n	8007aaa <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007b5a:	4e1b      	ldr	r6, [pc, #108]	; (8007bc8 <HAL_RCC_ClockConfig+0x128>)
 8007b5c:	68b3      	ldr	r3, [r6, #8]
 8007b5e:	f023 0303 	bic.w	r3, r3, #3
 8007b62:	4313      	orrs	r3, r2
 8007b64:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007b66:	f7fe faeb 	bl	8006140 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007b6a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8007b6e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007b70:	68b3      	ldr	r3, [r6, #8]
 8007b72:	6862      	ldr	r2, [r4, #4]
 8007b74:	f003 030c 	and.w	r3, r3, #12
 8007b78:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007b7c:	d0a3      	beq.n	8007ac6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007b7e:	f7fe fadf 	bl	8006140 <HAL_GetTick>
 8007b82:	1bc0      	subs	r0, r0, r7
 8007b84:	4540      	cmp	r0, r8
 8007b86:	d9f3      	bls.n	8007b70 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007b88:	2003      	movs	r0, #3
 8007b8a:	e78f      	b.n	8007aac <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007b8c:	1e91      	subs	r1, r2, #2
 8007b8e:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007b90:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007b92:	d802      	bhi.n	8007b9a <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007b94:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007b98:	e7de      	b.n	8007b58 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007b9a:	f013 0f02 	tst.w	r3, #2
 8007b9e:	e7db      	b.n	8007b58 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007ba0:	b2ea      	uxtb	r2, r5
 8007ba2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007ba4:	681b      	ldr	r3, [r3, #0]
 8007ba6:	f003 030f 	and.w	r3, r3, #15
 8007baa:	42ab      	cmp	r3, r5
 8007bac:	f47f af7d 	bne.w	8007aaa <HAL_RCC_ClockConfig+0xa>
 8007bb0:	e78f      	b.n	8007ad2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8007bb2:	4905      	ldr	r1, [pc, #20]	; (8007bc8 <HAL_RCC_ClockConfig+0x128>)
 8007bb4:	68e0      	ldr	r0, [r4, #12]
 8007bb6:	688b      	ldr	r3, [r1, #8]
 8007bb8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007bbc:	4303      	orrs	r3, r0
 8007bbe:	608b      	str	r3, [r1, #8]
 8007bc0:	e78a      	b.n	8007ad8 <HAL_RCC_ClockConfig+0x38>
 8007bc2:	bf00      	nop
 8007bc4:	40023c00 	.word	0x40023c00
 8007bc8:	40023800 	.word	0x40023800
 8007bcc:	08023b84 	.word	0x08023b84
 8007bd0:	2000007c 	.word	0x2000007c
 8007bd4:	20000084 	.word	0x20000084

08007bd8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007bd8:	4b04      	ldr	r3, [pc, #16]	; (8007bec <HAL_RCC_GetPCLK1Freq+0x14>)
 8007bda:	4a05      	ldr	r2, [pc, #20]	; (8007bf0 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007bdc:	689b      	ldr	r3, [r3, #8]
 8007bde:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8007be2:	5cd3      	ldrb	r3, [r2, r3]
 8007be4:	4a03      	ldr	r2, [pc, #12]	; (8007bf4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007be6:	6810      	ldr	r0, [r2, #0]
}
 8007be8:	40d8      	lsrs	r0, r3
 8007bea:	4770      	bx	lr
 8007bec:	40023800 	.word	0x40023800
 8007bf0:	08023b94 	.word	0x08023b94
 8007bf4:	2000007c 	.word	0x2000007c

08007bf8 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8007bf8:	4b04      	ldr	r3, [pc, #16]	; (8007c0c <HAL_RCC_GetPCLK2Freq+0x14>)
 8007bfa:	4a05      	ldr	r2, [pc, #20]	; (8007c10 <HAL_RCC_GetPCLK2Freq+0x18>)
 8007bfc:	689b      	ldr	r3, [r3, #8]
 8007bfe:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8007c02:	5cd3      	ldrb	r3, [r2, r3]
 8007c04:	4a03      	ldr	r2, [pc, #12]	; (8007c14 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007c06:	6810      	ldr	r0, [r2, #0]
}
 8007c08:	40d8      	lsrs	r0, r3
 8007c0a:	4770      	bx	lr
 8007c0c:	40023800 	.word	0x40023800
 8007c10:	08023b94 	.word	0x08023b94
 8007c14:	2000007c 	.word	0x2000007c

08007c18 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007c18:	230f      	movs	r3, #15
 8007c1a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007c1c:	4b0b      	ldr	r3, [pc, #44]	; (8007c4c <HAL_RCC_GetClockConfig+0x34>)
 8007c1e:	689a      	ldr	r2, [r3, #8]
 8007c20:	f002 0203 	and.w	r2, r2, #3
 8007c24:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007c26:	689a      	ldr	r2, [r3, #8]
 8007c28:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007c2c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8007c2e:	689a      	ldr	r2, [r3, #8]
 8007c30:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007c34:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007c36:	689b      	ldr	r3, [r3, #8]
 8007c38:	08db      	lsrs	r3, r3, #3
 8007c3a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8007c3e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007c40:	4b03      	ldr	r3, [pc, #12]	; (8007c50 <HAL_RCC_GetClockConfig+0x38>)
 8007c42:	681b      	ldr	r3, [r3, #0]
 8007c44:	f003 030f 	and.w	r3, r3, #15
 8007c48:	600b      	str	r3, [r1, #0]
}
 8007c4a:	4770      	bx	lr
 8007c4c:	40023800 	.word	0x40023800
 8007c50:	40023c00 	.word	0x40023c00

08007c54 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007c54:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007c56:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007c5a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007c5c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007c5e:	f040 808c 	bne.w	8007d7a <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8007c62:	6823      	ldr	r3, [r4, #0]
 8007c64:	f013 0f0c 	tst.w	r3, #12
 8007c68:	d045      	beq.n	8007cf6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007c6a:	4b8b      	ldr	r3, [pc, #556]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007c6c:	4d8b      	ldr	r5, [pc, #556]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8007c6e:	2200      	movs	r2, #0
 8007c70:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007c72:	f7fe fa65 	bl	8006140 <HAL_GetTick>
 8007c76:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007c78:	682b      	ldr	r3, [r5, #0]
 8007c7a:	009f      	lsls	r7, r3, #2
 8007c7c:	f100 80cf 	bmi.w	8007e1e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8007c80:	6821      	ldr	r1, [r4, #0]
 8007c82:	074e      	lsls	r6, r1, #29
 8007c84:	d515      	bpl.n	8007cb2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007c86:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007c8a:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007c8e:	061b      	lsls	r3, r3, #24
 8007c90:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007c94:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007c98:	4313      	orrs	r3, r2
 8007c9a:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8007c9e:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007ca2:	6a22      	ldr	r2, [r4, #32]
 8007ca4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007ca8:	3a01      	subs	r2, #1
 8007caa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007cae:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8007cb2:	070d      	lsls	r5, r1, #28
 8007cb4:	d514      	bpl.n	8007ce0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007cb6:	4a79      	ldr	r2, [pc, #484]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007cb8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007cba:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007cbe:	6920      	ldr	r0, [r4, #16]
 8007cc0:	071b      	lsls	r3, r3, #28
 8007cc2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8007cc6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007cca:	430b      	orrs	r3, r1
 8007ccc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007cd0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007cd4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007cd6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007cda:	430b      	orrs	r3, r1
 8007cdc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007ce0:	4b6d      	ldr	r3, [pc, #436]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007ce2:	4e6e      	ldr	r6, [pc, #440]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8007ce4:	2201      	movs	r2, #1
 8007ce6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007ce8:	f7fe fa2a 	bl	8006140 <HAL_GetTick>
 8007cec:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007cee:	6833      	ldr	r3, [r6, #0]
 8007cf0:	0098      	lsls	r0, r3, #2
 8007cf2:	f140 809b 	bpl.w	8007e2c <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007cf6:	6823      	ldr	r3, [r4, #0]
 8007cf8:	069b      	lsls	r3, r3, #26
 8007cfa:	d533      	bpl.n	8007d64 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007cfc:	2300      	movs	r3, #0
 8007cfe:	9301      	str	r3, [sp, #4]
 8007d00:	4b66      	ldr	r3, [pc, #408]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8007d02:	4d67      	ldr	r5, [pc, #412]	; (8007ea0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007d04:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007d06:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007d0a:	641a      	str	r2, [r3, #64]	; 0x40
 8007d0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007d0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007d12:	9301      	str	r3, [sp, #4]
 8007d14:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007d16:	682b      	ldr	r3, [r5, #0]
 8007d18:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007d1c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8007d1e:	f7fe fa0f 	bl	8006140 <HAL_GetTick>
 8007d22:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007d24:	682b      	ldr	r3, [r5, #0]
 8007d26:	05d9      	lsls	r1, r3, #23
 8007d28:	f140 8087 	bpl.w	8007e3a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007d2c:	4d5b      	ldr	r5, [pc, #364]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007d2e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007d30:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007d34:	f040 8088 	bne.w	8007e48 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007d38:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007d3a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007d3e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007d42:	4a56      	ldr	r2, [pc, #344]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007d44:	f040 80a4 	bne.w	8007e90 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007d48:	6891      	ldr	r1, [r2, #8]
 8007d4a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8007d4e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007d52:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007d56:	4301      	orrs	r1, r0
 8007d58:	6091      	str	r1, [r2, #8]
 8007d5a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007d5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007d60:	430b      	orrs	r3, r1
 8007d62:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007d64:	6820      	ldr	r0, [r4, #0]
 8007d66:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007d6a:	bf1f      	itttt	ne
 8007d6c:	4b4d      	ldrne	r3, [pc, #308]	; (8007ea4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8007d6e:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8007d72:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8007d76:	2000      	movne	r0, #0
 8007d78:	e04f      	b.n	8007e1a <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8007d7a:	4b47      	ldr	r3, [pc, #284]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007d7c:	4e47      	ldr	r6, [pc, #284]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8007d7e:	2200      	movs	r2, #0
 8007d80:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007d82:	f7fe f9dd 	bl	8006140 <HAL_GetTick>
 8007d86:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007d88:	6833      	ldr	r3, [r6, #0]
 8007d8a:	011f      	lsls	r7, r3, #4
 8007d8c:	d43f      	bmi.n	8007e0e <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8007d8e:	6821      	ldr	r1, [r4, #0]
 8007d90:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8007d92:	bf41      	itttt	mi
 8007d94:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007d98:	071b      	lslmi	r3, r3, #28
 8007d9a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8007d9e:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8007da2:	0788      	lsls	r0, r1, #30
 8007da4:	d515      	bpl.n	8007dd2 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007da6:	4a3d      	ldr	r2, [pc, #244]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007da8:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007daa:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007dae:	6865      	ldr	r5, [r4, #4]
 8007db0:	061b      	lsls	r3, r3, #24
 8007db2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007db6:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8007dba:	4303      	orrs	r3, r0
 8007dbc:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007dc0:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8007dc4:	69e3      	ldr	r3, [r4, #28]
 8007dc6:	f020 001f 	bic.w	r0, r0, #31
 8007dca:	3b01      	subs	r3, #1
 8007dcc:	4303      	orrs	r3, r0
 8007dce:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007dd2:	0649      	lsls	r1, r1, #25
 8007dd4:	d50a      	bpl.n	8007dec <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007dd6:	68e3      	ldr	r3, [r4, #12]
 8007dd8:	6862      	ldr	r2, [r4, #4]
 8007dda:	061b      	lsls	r3, r3, #24
 8007ddc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007de0:	68a2      	ldr	r2, [r4, #8]
 8007de2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007de6:	4a2d      	ldr	r2, [pc, #180]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007de8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007dec:	4b2a      	ldr	r3, [pc, #168]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007dee:	4e2b      	ldr	r6, [pc, #172]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007df0:	2201      	movs	r2, #1
 8007df2:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007df4:	f7fe f9a4 	bl	8006140 <HAL_GetTick>
 8007df8:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007dfa:	6833      	ldr	r3, [r6, #0]
 8007dfc:	011a      	lsls	r2, r3, #4
 8007dfe:	f53f af30 	bmi.w	8007c62 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007e02:	f7fe f99d 	bl	8006140 <HAL_GetTick>
 8007e06:	1b40      	subs	r0, r0, r5
 8007e08:	2802      	cmp	r0, #2
 8007e0a:	d9f6      	bls.n	8007dfa <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8007e0c:	e004      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007e0e:	f7fe f997 	bl	8006140 <HAL_GetTick>
 8007e12:	1b40      	subs	r0, r0, r5
 8007e14:	2802      	cmp	r0, #2
 8007e16:	d9b7      	bls.n	8007d88 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007e18:	2003      	movs	r0, #3
}
 8007e1a:	b003      	add	sp, #12
 8007e1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007e1e:	f7fe f98f 	bl	8006140 <HAL_GetTick>
 8007e22:	1b80      	subs	r0, r0, r6
 8007e24:	2802      	cmp	r0, #2
 8007e26:	f67f af27 	bls.w	8007c78 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007e2a:	e7f5      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007e2c:	f7fe f988 	bl	8006140 <HAL_GetTick>
 8007e30:	1b40      	subs	r0, r0, r5
 8007e32:	2802      	cmp	r0, #2
 8007e34:	f67f af5b 	bls.w	8007cee <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007e38:	e7ee      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007e3a:	f7fe f981 	bl	8006140 <HAL_GetTick>
 8007e3e:	1b80      	subs	r0, r0, r6
 8007e40:	2802      	cmp	r0, #2
 8007e42:	f67f af6f 	bls.w	8007d24 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007e46:	e7e7      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007e48:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007e4a:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007e4e:	4293      	cmp	r3, r2
 8007e50:	f43f af72 	beq.w	8007d38 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007e54:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007e56:	4a10      	ldr	r2, [pc, #64]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007e58:	2101      	movs	r1, #1
 8007e5a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007e5e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007e62:	2100      	movs	r1, #0
 8007e64:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007e68:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007e6a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007e6c:	07da      	lsls	r2, r3, #31
 8007e6e:	f57f af63 	bpl.w	8007d38 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8007e72:	f7fe f965 	bl	8006140 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007e76:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007e7a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007e7c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007e7e:	079b      	lsls	r3, r3, #30
 8007e80:	f53f af5a 	bmi.w	8007d38 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007e84:	f7fe f95c 	bl	8006140 <HAL_GetTick>
 8007e88:	1b80      	subs	r0, r0, r6
 8007e8a:	42b8      	cmp	r0, r7
 8007e8c:	d9f6      	bls.n	8007e7c <HAL_RCCEx_PeriphCLKConfig+0x228>
 8007e8e:	e7c3      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007e90:	6891      	ldr	r1, [r2, #8]
 8007e92:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007e96:	e75f      	b.n	8007d58 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8007e98:	42470000 	.word	0x42470000
 8007e9c:	40023800 	.word	0x40023800
 8007ea0:	40007000 	.word	0x40007000
 8007ea4:	42471000 	.word	0x42471000

08007ea8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8007ea8:	b538      	push	{r3, r4, r5, lr}
 8007eaa:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8007eac:	4604      	mov	r4, r0
 8007eae:	b1c8      	cbz	r0, 8007ee4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8007eb0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007eb4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007eb8:	b91b      	cbnz	r3, 8007ec2 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007eba:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8007ebe:	f7fa fa97 	bl	80023f0 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007ec2:	2302      	movs	r3, #2
 8007ec4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007ec8:	1d21      	adds	r1, r4, #4
 8007eca:	6820      	ldr	r0, [r4, #0]
 8007ecc:	f000 fcba 	bl	8008844 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8007ed0:	6862      	ldr	r2, [r4, #4]
 8007ed2:	6820      	ldr	r0, [r4, #0]
 8007ed4:	4629      	mov	r1, r5
 8007ed6:	f000 fceb 	bl	80088b0 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007eda:	2301      	movs	r3, #1
 8007edc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007ee0:	2000      	movs	r0, #0
}
 8007ee2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007ee4:	2001      	movs	r0, #1
 8007ee6:	e7fc      	b.n	8007ee2 <HAL_SDRAM_Init+0x3a>

08007ee8 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007ee8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007eea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007eee:	2b02      	cmp	r3, #2
{
 8007ef0:	4604      	mov	r4, r0
 8007ef2:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007ef4:	b2d8      	uxtb	r0, r3
 8007ef6:	d00d      	beq.n	8007f14 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007ef8:	2302      	movs	r3, #2
 8007efa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007efe:	6820      	ldr	r0, [r4, #0]
 8007f00:	f000 fd12 	bl	8008928 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007f04:	682b      	ldr	r3, [r5, #0]
 8007f06:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007f08:	bf0c      	ite	eq
 8007f0a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007f0c:	2301      	movne	r3, #1
 8007f0e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007f12:	2000      	movs	r0, #0
}
 8007f14:	bd38      	pop	{r3, r4, r5, pc}

08007f16 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007f16:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007f18:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007f1c:	2b02      	cmp	r3, #2
{
 8007f1e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007f20:	b2d8      	uxtb	r0, r3
 8007f22:	d009      	beq.n	8007f38 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007f24:	2302      	movs	r3, #2
 8007f26:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007f2a:	6820      	ldr	r0, [r4, #0]
 8007f2c:	f000 fd23 	bl	8008976 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007f30:	2301      	movs	r3, #1
 8007f32:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007f36:	2000      	movs	r0, #0
}
 8007f38:	bd10      	pop	{r4, pc}

08007f3a <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007f3a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f3c:	4604      	mov	r4, r0
 8007f3e:	460e      	mov	r6, r1
 8007f40:	4615      	mov	r5, r2
 8007f42:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007f44:	6822      	ldr	r2, [r4, #0]
 8007f46:	6893      	ldr	r3, [r2, #8]
 8007f48:	ea36 0303 	bics.w	r3, r6, r3
 8007f4c:	d001      	beq.n	8007f52 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007f4e:	2000      	movs	r0, #0
 8007f50:	e02d      	b.n	8007fae <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007f52:	1c6b      	adds	r3, r5, #1
 8007f54:	d0f7      	beq.n	8007f46 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007f56:	f7fe f8f3 	bl	8006140 <HAL_GetTick>
 8007f5a:	1bc0      	subs	r0, r0, r7
 8007f5c:	4285      	cmp	r5, r0
 8007f5e:	d8f1      	bhi.n	8007f44 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007f60:	6823      	ldr	r3, [r4, #0]
 8007f62:	685a      	ldr	r2, [r3, #4]
 8007f64:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007f68:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007f6a:	6862      	ldr	r2, [r4, #4]
 8007f6c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007f70:	d10a      	bne.n	8007f88 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007f72:	68a2      	ldr	r2, [r4, #8]
 8007f74:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007f78:	d002      	beq.n	8007f80 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007f7a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007f7e:	d103      	bne.n	8007f88 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007f80:	681a      	ldr	r2, [r3, #0]
 8007f82:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007f86:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007f88:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007f8a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007f8e:	d107      	bne.n	8007fa0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007f90:	681a      	ldr	r2, [r3, #0]
 8007f92:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007f96:	601a      	str	r2, [r3, #0]
 8007f98:	681a      	ldr	r2, [r3, #0]
 8007f9a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007f9e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007fa0:	2301      	movs	r3, #1
 8007fa2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007fa6:	2300      	movs	r3, #0
 8007fa8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007fac:	2003      	movs	r0, #3
}
 8007fae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007fb0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007fb0:	b538      	push	{r3, r4, r5, lr}
 8007fb2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007fb4:	6842      	ldr	r2, [r0, #4]
 8007fb6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007fba:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007fbc:	d11f      	bne.n	8007ffe <SPI_EndRxTransaction+0x4e>
 8007fbe:	6882      	ldr	r2, [r0, #8]
 8007fc0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007fc4:	d002      	beq.n	8007fcc <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007fc6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007fca:	d107      	bne.n	8007fdc <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007fcc:	6825      	ldr	r5, [r4, #0]
 8007fce:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007fd0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007fd4:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007fd8:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007fda:	d007      	beq.n	8007fec <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007fdc:	460a      	mov	r2, r1
 8007fde:	2180      	movs	r1, #128	; 0x80
 8007fe0:	4620      	mov	r0, r4
 8007fe2:	f7ff ffaa 	bl	8007f3a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007fe6:	b920      	cbnz	r0, 8007ff2 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007fe8:	2000      	movs	r0, #0
}
 8007fea:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007fec:	460a      	mov	r2, r1
 8007fee:	2101      	movs	r1, #1
 8007ff0:	e7f6      	b.n	8007fe0 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007ff2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007ff4:	f043 0320 	orr.w	r3, r3, #32
 8007ff8:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007ffa:	2003      	movs	r0, #3
 8007ffc:	e7f5      	b.n	8007fea <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007ffe:	460a      	mov	r2, r1
 8008000:	2101      	movs	r1, #1
 8008002:	e7ee      	b.n	8007fe2 <SPI_EndRxTransaction+0x32>

08008004 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8008004:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008006:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8008008:	4a12      	ldr	r2, [pc, #72]	; (8008054 <SPI_EndRxTxTransaction+0x50>)
 800800a:	6815      	ldr	r5, [r2, #0]
 800800c:	4a12      	ldr	r2, [pc, #72]	; (8008058 <SPI_EndRxTxTransaction+0x54>)
 800800e:	fbb5 f5f2 	udiv	r5, r5, r2
 8008012:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8008016:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8008018:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800801a:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800801c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8008020:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8008022:	d10b      	bne.n	800803c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8008024:	460a      	mov	r2, r1
 8008026:	2180      	movs	r1, #128	; 0x80
 8008028:	f7ff ff87 	bl	8007f3a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800802c:	b178      	cbz	r0, 800804e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800802e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008030:	f043 0320 	orr.w	r3, r3, #32
 8008034:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8008036:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8008038:	b003      	add	sp, #12
 800803a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 800803c:	9b01      	ldr	r3, [sp, #4]
 800803e:	b133      	cbz	r3, 800804e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8008040:	9b01      	ldr	r3, [sp, #4]
 8008042:	3b01      	subs	r3, #1
 8008044:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8008046:	6823      	ldr	r3, [r4, #0]
 8008048:	689b      	ldr	r3, [r3, #8]
 800804a:	061b      	lsls	r3, r3, #24
 800804c:	d4f6      	bmi.n	800803c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800804e:	2000      	movs	r0, #0
 8008050:	e7f2      	b.n	8008038 <SPI_EndRxTxTransaction+0x34>
 8008052:	bf00      	nop
 8008054:	2000007c 	.word	0x2000007c
 8008058:	016e3600 	.word	0x016e3600

0800805c <HAL_SPI_Init>:
{
 800805c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800805e:	4604      	mov	r4, r0
 8008060:	2800      	cmp	r0, #0
 8008062:	d036      	beq.n	80080d2 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8008064:	2300      	movs	r3, #0
 8008066:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8008068:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 800806c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008070:	b91b      	cbnz	r3, 800807a <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8008072:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8008076:	f7fa f963 	bl	8002340 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800807a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800807c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800807e:	2302      	movs	r3, #2
 8008080:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8008084:	680b      	ldr	r3, [r1, #0]
 8008086:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800808a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800808c:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8008090:	4303      	orrs	r3, r0
 8008092:	68e0      	ldr	r0, [r4, #12]
 8008094:	4303      	orrs	r3, r0
 8008096:	6920      	ldr	r0, [r4, #16]
 8008098:	4303      	orrs	r3, r0
 800809a:	6960      	ldr	r0, [r4, #20]
 800809c:	4303      	orrs	r3, r0
 800809e:	69e0      	ldr	r0, [r4, #28]
 80080a0:	4303      	orrs	r3, r0
 80080a2:	6a20      	ldr	r0, [r4, #32]
 80080a4:	4303      	orrs	r3, r0
 80080a6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80080a8:	4303      	orrs	r3, r0
 80080aa:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80080ae:	4303      	orrs	r3, r0
 80080b0:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80080b2:	0c12      	lsrs	r2, r2, #16
 80080b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80080b6:	f002 0204 	and.w	r2, r2, #4
 80080ba:	431a      	orrs	r2, r3
 80080bc:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80080be:	69cb      	ldr	r3, [r1, #28]
 80080c0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80080c4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80080c6:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80080c8:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80080ca:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80080cc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80080d0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80080d2:	2001      	movs	r0, #1
 80080d4:	e7fc      	b.n	80080d0 <HAL_SPI_Init+0x74>

080080d6 <HAL_SPI_Transmit>:
{
 80080d6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80080da:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80080dc:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80080e0:	2b01      	cmp	r3, #1
{
 80080e2:	4604      	mov	r4, r0
 80080e4:	460d      	mov	r5, r1
 80080e6:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 80080e8:	f000 809d 	beq.w	8008226 <HAL_SPI_Transmit+0x150>
 80080ec:	2301      	movs	r3, #1
 80080ee:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80080f2:	f7fe f825 	bl	8006140 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80080f6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80080fa:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80080fc:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80080fe:	b2d8      	uxtb	r0, r3
 8008100:	f040 808f 	bne.w	8008222 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8008104:	2d00      	cmp	r5, #0
 8008106:	d05a      	beq.n	80081be <HAL_SPI_Transmit+0xe8>
 8008108:	2f00      	cmp	r7, #0
 800810a:	d058      	beq.n	80081be <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800810c:	2303      	movs	r3, #3
 800810e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008112:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8008114:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8008116:	2300      	movs	r3, #0
 8008118:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800811a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 800811e:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8008120:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8008122:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8008124:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8008126:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8008128:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800812a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 800812e:	bf08      	it	eq
 8008130:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008132:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8008134:	bf04      	itt	eq
 8008136:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 800813a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800813c:	681a      	ldr	r2, [r3, #0]
 800813e:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8008140:	bf5e      	ittt	pl
 8008142:	681a      	ldrpl	r2, [r3, #0]
 8008144:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8008148:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800814a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800814e:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008150:	d141      	bne.n	80081d6 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008152:	b10a      	cbz	r2, 8008158 <HAL_SPI_Transmit+0x82>
 8008154:	2f01      	cmp	r7, #1
 8008156:	d107      	bne.n	8008168 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008158:	f835 2b02 	ldrh.w	r2, [r5], #2
 800815c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800815e:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008160:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008162:	3b01      	subs	r3, #1
 8008164:	b29b      	uxth	r3, r3
 8008166:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8008168:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800816a:	b29b      	uxth	r3, r3
 800816c:	b9a3      	cbnz	r3, 8008198 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800816e:	4642      	mov	r2, r8
 8008170:	4631      	mov	r1, r6
 8008172:	4620      	mov	r0, r4
 8008174:	f7ff ff46 	bl	8008004 <SPI_EndRxTxTransaction>
 8008178:	2800      	cmp	r0, #0
 800817a:	d14f      	bne.n	800821c <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800817c:	68a3      	ldr	r3, [r4, #8]
 800817e:	b933      	cbnz	r3, 800818e <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8008180:	9301      	str	r3, [sp, #4]
 8008182:	6823      	ldr	r3, [r4, #0]
 8008184:	68da      	ldr	r2, [r3, #12]
 8008186:	9201      	str	r2, [sp, #4]
 8008188:	689b      	ldr	r3, [r3, #8]
 800818a:	9301      	str	r3, [sp, #4]
 800818c:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800818e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8008190:	3800      	subs	r0, #0
 8008192:	bf18      	it	ne
 8008194:	2001      	movne	r0, #1
error:
 8008196:	e012      	b.n	80081be <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8008198:	6822      	ldr	r2, [r4, #0]
 800819a:	6893      	ldr	r3, [r2, #8]
 800819c:	0798      	lsls	r0, r3, #30
 800819e:	d505      	bpl.n	80081ac <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80081a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80081a2:	f833 1b02 	ldrh.w	r1, [r3], #2
 80081a6:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80081a8:	6323      	str	r3, [r4, #48]	; 0x30
 80081aa:	e7d9      	b.n	8008160 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80081ac:	f7fd ffc8 	bl	8006140 <HAL_GetTick>
 80081b0:	eba0 0008 	sub.w	r0, r0, r8
 80081b4:	42b0      	cmp	r0, r6
 80081b6:	d30b      	bcc.n	80081d0 <HAL_SPI_Transmit+0xfa>
 80081b8:	1c71      	adds	r1, r6, #1
 80081ba:	d0d5      	beq.n	8008168 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 80081bc:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80081be:	2301      	movs	r3, #1
 80081c0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80081c4:	2300      	movs	r3, #0
 80081c6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80081ca:	b002      	add	sp, #8
 80081cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80081d0:	2e00      	cmp	r6, #0
 80081d2:	d1c9      	bne.n	8008168 <HAL_SPI_Transmit+0x92>
 80081d4:	e7f2      	b.n	80081bc <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80081d6:	b10a      	cbz	r2, 80081dc <HAL_SPI_Transmit+0x106>
 80081d8:	2f01      	cmp	r7, #1
 80081da:	d108      	bne.n	80081ee <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80081dc:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80081de:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80081e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80081e2:	3301      	adds	r3, #1
 80081e4:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80081e6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80081e8:	3b01      	subs	r3, #1
 80081ea:	b29b      	uxth	r3, r3
 80081ec:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80081ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80081f0:	b29b      	uxth	r3, r3
 80081f2:	2b00      	cmp	r3, #0
 80081f4:	d0bb      	beq.n	800816e <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80081f6:	6823      	ldr	r3, [r4, #0]
 80081f8:	689a      	ldr	r2, [r3, #8]
 80081fa:	0792      	lsls	r2, r2, #30
 80081fc:	d502      	bpl.n	8008204 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80081fe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008200:	7812      	ldrb	r2, [r2, #0]
 8008202:	e7ec      	b.n	80081de <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008204:	f7fd ff9c 	bl	8006140 <HAL_GetTick>
 8008208:	eba0 0008 	sub.w	r0, r0, r8
 800820c:	42b0      	cmp	r0, r6
 800820e:	d302      	bcc.n	8008216 <HAL_SPI_Transmit+0x140>
 8008210:	1c73      	adds	r3, r6, #1
 8008212:	d0ec      	beq.n	80081ee <HAL_SPI_Transmit+0x118>
 8008214:	e7d2      	b.n	80081bc <HAL_SPI_Transmit+0xe6>
 8008216:	2e00      	cmp	r6, #0
 8008218:	d1e9      	bne.n	80081ee <HAL_SPI_Transmit+0x118>
 800821a:	e7cf      	b.n	80081bc <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800821c:	2320      	movs	r3, #32
 800821e:	6563      	str	r3, [r4, #84]	; 0x54
 8008220:	e7ac      	b.n	800817c <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8008222:	2002      	movs	r0, #2
 8008224:	e7cb      	b.n	80081be <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8008226:	2002      	movs	r0, #2
 8008228:	e7cf      	b.n	80081ca <HAL_SPI_Transmit+0xf4>

0800822a <HAL_SPI_TransmitReceive>:
{
 800822a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800822e:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8008230:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8008234:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8008236:	2b01      	cmp	r3, #1
{
 8008238:	4604      	mov	r4, r0
 800823a:	460d      	mov	r5, r1
 800823c:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 800823e:	f000 80e6 	beq.w	800840e <HAL_SPI_TransmitReceive+0x1e4>
 8008242:	2301      	movs	r3, #1
 8008244:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008248:	f7fd ff7a 	bl	8006140 <HAL_GetTick>
  tmp_state           = hspi->State;
 800824c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8008250:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8008252:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008254:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8008256:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8008258:	d00a      	beq.n	8008270 <HAL_SPI_TransmitReceive+0x46>
 800825a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800825e:	f040 80d4 	bne.w	800840a <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8008262:	68a3      	ldr	r3, [r4, #8]
 8008264:	2b00      	cmp	r3, #0
 8008266:	f040 80d0 	bne.w	800840a <HAL_SPI_TransmitReceive+0x1e0>
 800826a:	2904      	cmp	r1, #4
 800826c:	f040 80cd 	bne.w	800840a <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8008270:	2d00      	cmp	r5, #0
 8008272:	d040      	beq.n	80082f6 <HAL_SPI_TransmitReceive+0xcc>
 8008274:	f1b9 0f00 	cmp.w	r9, #0
 8008278:	d03d      	beq.n	80082f6 <HAL_SPI_TransmitReceive+0xcc>
 800827a:	2e00      	cmp	r6, #0
 800827c:	d03b      	beq.n	80082f6 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800827e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8008282:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8008286:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8008288:	bf1c      	itt	ne
 800828a:	2305      	movne	r3, #5
 800828c:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8008290:	2300      	movs	r3, #0
 8008292:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8008294:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008298:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800829a:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800829c:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800829e:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 80082a0:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80082a2:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 80082a4:	bf58      	it	pl
 80082a6:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80082a8:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 80082aa:	bf58      	it	pl
 80082ac:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 80082b0:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 80082b2:	bf58      	it	pl
 80082b4:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80082b6:	68e1      	ldr	r1, [r4, #12]
 80082b8:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 80082bc:	d152      	bne.n	8008364 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80082be:	b10a      	cbz	r2, 80082c4 <HAL_SPI_TransmitReceive+0x9a>
 80082c0:	2e01      	cmp	r6, #1
 80082c2:	d107      	bne.n	80082d4 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80082c4:	f835 2b02 	ldrh.w	r2, [r5], #2
 80082c8:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80082ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80082cc:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80082ce:	3b01      	subs	r3, #1
 80082d0:	b29b      	uxth	r3, r3
 80082d2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80082d4:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80082d6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80082d8:	b29b      	uxth	r3, r3
 80082da:	b973      	cbnz	r3, 80082fa <HAL_SPI_TransmitReceive+0xd0>
 80082dc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80082de:	b29b      	uxth	r3, r3
 80082e0:	b95b      	cbnz	r3, 80082fa <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80082e2:	4642      	mov	r2, r8
 80082e4:	4639      	mov	r1, r7
 80082e6:	4620      	mov	r0, r4
 80082e8:	f7ff fe8c 	bl	8008004 <SPI_EndRxTxTransaction>
 80082ec:	2800      	cmp	r0, #0
 80082ee:	f000 8081 	beq.w	80083f4 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80082f2:	2320      	movs	r3, #32
 80082f4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 80082f6:	2001      	movs	r0, #1
 80082f8:	e02b      	b.n	8008352 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80082fa:	6821      	ldr	r1, [r4, #0]
 80082fc:	688b      	ldr	r3, [r1, #8]
 80082fe:	079e      	lsls	r6, r3, #30
 8008300:	d50d      	bpl.n	800831e <HAL_SPI_TransmitReceive+0xf4>
 8008302:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008304:	b29b      	uxth	r3, r3
 8008306:	b153      	cbz	r3, 800831e <HAL_SPI_TransmitReceive+0xf4>
 8008308:	b14d      	cbz	r5, 800831e <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800830a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800830c:	f833 2b02 	ldrh.w	r2, [r3], #2
 8008310:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8008312:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008314:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008316:	3b01      	subs	r3, #1
 8008318:	b29b      	uxth	r3, r3
 800831a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800831c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800831e:	688a      	ldr	r2, [r1, #8]
 8008320:	f012 0201 	ands.w	r2, r2, #1
 8008324:	d00c      	beq.n	8008340 <HAL_SPI_TransmitReceive+0x116>
 8008326:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008328:	b29b      	uxth	r3, r3
 800832a:	b14b      	cbz	r3, 8008340 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800832c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800832e:	68c9      	ldr	r1, [r1, #12]
 8008330:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008334:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008336:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008338:	3b01      	subs	r3, #1
 800833a:	b29b      	uxth	r3, r3
 800833c:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800833e:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8008340:	f7fd fefe 	bl	8006140 <HAL_GetTick>
 8008344:	eba0 0008 	sub.w	r0, r0, r8
 8008348:	42b8      	cmp	r0, r7
 800834a:	d3c4      	bcc.n	80082d6 <HAL_SPI_TransmitReceive+0xac>
 800834c:	1c78      	adds	r0, r7, #1
 800834e:	d0c2      	beq.n	80082d6 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8008350:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008352:	2301      	movs	r3, #1
 8008354:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008358:	2300      	movs	r3, #0
 800835a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800835e:	b003      	add	sp, #12
 8008360:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008364:	b10a      	cbz	r2, 800836a <HAL_SPI_TransmitReceive+0x140>
 8008366:	2e01      	cmp	r6, #1
 8008368:	d108      	bne.n	800837c <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800836a:	782a      	ldrb	r2, [r5, #0]
 800836c:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800836e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008370:	3301      	adds	r3, #1
 8008372:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8008374:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008376:	3b01      	subs	r3, #1
 8008378:	b29b      	uxth	r3, r3
 800837a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800837c:	2501      	movs	r5, #1
 800837e:	e02d      	b.n	80083dc <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8008380:	6822      	ldr	r2, [r4, #0]
 8008382:	6893      	ldr	r3, [r2, #8]
 8008384:	0799      	lsls	r1, r3, #30
 8008386:	d50e      	bpl.n	80083a6 <HAL_SPI_TransmitReceive+0x17c>
 8008388:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800838a:	b29b      	uxth	r3, r3
 800838c:	b15b      	cbz	r3, 80083a6 <HAL_SPI_TransmitReceive+0x17c>
 800838e:	b155      	cbz	r5, 80083a6 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8008390:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008392:	781b      	ldrb	r3, [r3, #0]
 8008394:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8008396:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008398:	3301      	adds	r3, #1
 800839a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800839c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800839e:	3b01      	subs	r3, #1
 80083a0:	b29b      	uxth	r3, r3
 80083a2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80083a4:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80083a6:	6822      	ldr	r2, [r4, #0]
 80083a8:	6891      	ldr	r1, [r2, #8]
 80083aa:	f011 0101 	ands.w	r1, r1, #1
 80083ae:	d00d      	beq.n	80083cc <HAL_SPI_TransmitReceive+0x1a2>
 80083b0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80083b2:	b29b      	uxth	r3, r3
 80083b4:	b153      	cbz	r3, 80083cc <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80083b6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80083b8:	68d2      	ldr	r2, [r2, #12]
 80083ba:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80083bc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80083be:	3301      	adds	r3, #1
 80083c0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80083c2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80083c4:	3b01      	subs	r3, #1
 80083c6:	b29b      	uxth	r3, r3
 80083c8:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80083ca:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80083cc:	f7fd feb8 	bl	8006140 <HAL_GetTick>
 80083d0:	eba0 0008 	sub.w	r0, r0, r8
 80083d4:	42b8      	cmp	r0, r7
 80083d6:	d30a      	bcc.n	80083ee <HAL_SPI_TransmitReceive+0x1c4>
 80083d8:	1c7b      	adds	r3, r7, #1
 80083da:	d1b9      	bne.n	8008350 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80083dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80083de:	b29b      	uxth	r3, r3
 80083e0:	2b00      	cmp	r3, #0
 80083e2:	d1cd      	bne.n	8008380 <HAL_SPI_TransmitReceive+0x156>
 80083e4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80083e6:	b29b      	uxth	r3, r3
 80083e8:	2b00      	cmp	r3, #0
 80083ea:	d1c9      	bne.n	8008380 <HAL_SPI_TransmitReceive+0x156>
 80083ec:	e779      	b.n	80082e2 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80083ee:	2f00      	cmp	r7, #0
 80083f0:	d1f4      	bne.n	80083dc <HAL_SPI_TransmitReceive+0x1b2>
 80083f2:	e7ad      	b.n	8008350 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80083f4:	68a3      	ldr	r3, [r4, #8]
 80083f6:	2b00      	cmp	r3, #0
 80083f8:	d1ab      	bne.n	8008352 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80083fa:	6823      	ldr	r3, [r4, #0]
 80083fc:	9001      	str	r0, [sp, #4]
 80083fe:	68da      	ldr	r2, [r3, #12]
 8008400:	9201      	str	r2, [sp, #4]
 8008402:	689b      	ldr	r3, [r3, #8]
 8008404:	9301      	str	r3, [sp, #4]
 8008406:	9b01      	ldr	r3, [sp, #4]
 8008408:	e7a3      	b.n	8008352 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 800840a:	2002      	movs	r0, #2
 800840c:	e7a1      	b.n	8008352 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 800840e:	2002      	movs	r0, #2
 8008410:	e7a5      	b.n	800835e <HAL_SPI_TransmitReceive+0x134>

08008412 <HAL_SPI_Receive>:
{
 8008412:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008416:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008418:	6843      	ldr	r3, [r0, #4]
 800841a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800841e:	4604      	mov	r4, r0
 8008420:	4689      	mov	r9, r1
 8008422:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008424:	d10c      	bne.n	8008440 <HAL_SPI_Receive+0x2e>
 8008426:	6883      	ldr	r3, [r0, #8]
 8008428:	b953      	cbnz	r3, 8008440 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800842a:	2304      	movs	r3, #4
 800842c:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8008430:	4613      	mov	r3, r2
 8008432:	9500      	str	r5, [sp, #0]
 8008434:	460a      	mov	r2, r1
 8008436:	f7ff fef8 	bl	800822a <HAL_SPI_TransmitReceive>
}
 800843a:	b003      	add	sp, #12
 800843c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8008440:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8008444:	2b01      	cmp	r3, #1
 8008446:	f000 8084 	beq.w	8008552 <HAL_SPI_Receive+0x140>
 800844a:	2301      	movs	r3, #1
 800844c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008450:	f7fd fe76 	bl	8006140 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8008454:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008458:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800845a:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800845c:	b2d8      	uxtb	r0, r3
 800845e:	d176      	bne.n	800854e <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8008460:	f1b9 0f00 	cmp.w	r9, #0
 8008464:	d05a      	beq.n	800851c <HAL_SPI_Receive+0x10a>
 8008466:	2f00      	cmp	r7, #0
 8008468:	d058      	beq.n	800851c <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800846a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800846c:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8008470:	2304      	movs	r3, #4
 8008472:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8008476:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8008478:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800847a:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800847c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8008480:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8008482:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8008484:	bf08      	it	eq
 8008486:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8008488:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 800848a:	bf08      	it	eq
 800848c:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8008490:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8008494:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8008496:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8008498:	bf08      	it	eq
 800849a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800849c:	681a      	ldr	r2, [r3, #0]
 800849e:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80084a0:	bf5e      	ittt	pl
 80084a2:	681a      	ldrpl	r2, [r3, #0]
 80084a4:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80084a8:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80084aa:	68e3      	ldr	r3, [r4, #12]
 80084ac:	b1f3      	cbz	r3, 80084ec <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 80084ae:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80084b0:	b29b      	uxth	r3, r3
 80084b2:	b1fb      	cbz	r3, 80084f4 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80084b4:	6823      	ldr	r3, [r4, #0]
 80084b6:	689a      	ldr	r2, [r3, #8]
 80084b8:	07d2      	lsls	r2, r2, #31
 80084ba:	d539      	bpl.n	8008530 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80084bc:	68da      	ldr	r2, [r3, #12]
 80084be:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80084c0:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80084c4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80084c6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80084c8:	3b01      	subs	r3, #1
 80084ca:	b29b      	uxth	r3, r3
 80084cc:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80084ce:	e7ee      	b.n	80084ae <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80084d0:	6823      	ldr	r3, [r4, #0]
 80084d2:	689a      	ldr	r2, [r3, #8]
 80084d4:	07d0      	lsls	r0, r2, #31
 80084d6:	d518      	bpl.n	800850a <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80084d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80084da:	7b1b      	ldrb	r3, [r3, #12]
 80084dc:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80084de:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80084e0:	3301      	adds	r3, #1
 80084e2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80084e4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80084e6:	3b01      	subs	r3, #1
 80084e8:	b29b      	uxth	r3, r3
 80084ea:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 80084ec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80084ee:	b29b      	uxth	r3, r3
 80084f0:	2b00      	cmp	r3, #0
 80084f2:	d1ed      	bne.n	80084d0 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80084f4:	4642      	mov	r2, r8
 80084f6:	4629      	mov	r1, r5
 80084f8:	4620      	mov	r0, r4
 80084fa:	f7ff fd59 	bl	8007fb0 <SPI_EndRxTransaction>
 80084fe:	bb18      	cbnz	r0, 8008548 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008500:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8008502:	3800      	subs	r0, #0
 8008504:	bf18      	it	ne
 8008506:	2001      	movne	r0, #1
error :
 8008508:	e008      	b.n	800851c <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800850a:	f7fd fe19 	bl	8006140 <HAL_GetTick>
 800850e:	eba0 0008 	sub.w	r0, r0, r8
 8008512:	42a8      	cmp	r0, r5
 8008514:	d309      	bcc.n	800852a <HAL_SPI_Receive+0x118>
 8008516:	1c69      	adds	r1, r5, #1
 8008518:	d0e8      	beq.n	80084ec <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 800851a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800851c:	2301      	movs	r3, #1
 800851e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008522:	2300      	movs	r3, #0
 8008524:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008528:	e787      	b.n	800843a <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800852a:	2d00      	cmp	r5, #0
 800852c:	d1de      	bne.n	80084ec <HAL_SPI_Receive+0xda>
 800852e:	e7f4      	b.n	800851a <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008530:	f7fd fe06 	bl	8006140 <HAL_GetTick>
 8008534:	eba0 0008 	sub.w	r0, r0, r8
 8008538:	42a8      	cmp	r0, r5
 800853a:	d302      	bcc.n	8008542 <HAL_SPI_Receive+0x130>
 800853c:	1c6b      	adds	r3, r5, #1
 800853e:	d0b6      	beq.n	80084ae <HAL_SPI_Receive+0x9c>
 8008540:	e7eb      	b.n	800851a <HAL_SPI_Receive+0x108>
 8008542:	2d00      	cmp	r5, #0
 8008544:	d1b3      	bne.n	80084ae <HAL_SPI_Receive+0x9c>
 8008546:	e7e8      	b.n	800851a <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008548:	2320      	movs	r3, #32
 800854a:	6563      	str	r3, [r4, #84]	; 0x54
 800854c:	e7d8      	b.n	8008500 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800854e:	2002      	movs	r0, #2
 8008550:	e7e4      	b.n	800851c <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 8008552:	2002      	movs	r0, #2
 8008554:	e771      	b.n	800843a <HAL_SPI_Receive+0x28>

08008556 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008556:	6803      	ldr	r3, [r0, #0]
 8008558:	68da      	ldr	r2, [r3, #12]
 800855a:	f042 0201 	orr.w	r2, r2, #1
 800855e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008560:	689a      	ldr	r2, [r3, #8]
 8008562:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008566:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8008568:	bf1e      	ittt	ne
 800856a:	681a      	ldrne	r2, [r3, #0]
 800856c:	f042 0201 	orrne.w	r2, r2, #1
 8008570:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8008572:	2000      	movs	r0, #0
 8008574:	4770      	bx	lr

08008576 <HAL_TIM_OC_DelayElapsedCallback>:
 8008576:	4770      	bx	lr

08008578 <HAL_TIM_IC_CaptureCallback>:
 8008578:	4770      	bx	lr

0800857a <HAL_TIM_PWM_PulseFinishedCallback>:
 800857a:	4770      	bx	lr

0800857c <HAL_TIM_TriggerCallback>:
 800857c:	4770      	bx	lr

0800857e <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800857e:	6803      	ldr	r3, [r0, #0]
 8008580:	691a      	ldr	r2, [r3, #16]
 8008582:	0791      	lsls	r1, r2, #30
{
 8008584:	b510      	push	{r4, lr}
 8008586:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008588:	d50e      	bpl.n	80085a8 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800858a:	68da      	ldr	r2, [r3, #12]
 800858c:	0792      	lsls	r2, r2, #30
 800858e:	d50b      	bpl.n	80085a8 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8008590:	f06f 0202 	mvn.w	r2, #2
 8008594:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8008596:	2201      	movs	r2, #1
 8008598:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800859a:	699b      	ldr	r3, [r3, #24]
 800859c:	079b      	lsls	r3, r3, #30
 800859e:	d077      	beq.n	8008690 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80085a0:	f7ff ffea 	bl	8008578 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80085a4:	2300      	movs	r3, #0
 80085a6:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80085a8:	6823      	ldr	r3, [r4, #0]
 80085aa:	691a      	ldr	r2, [r3, #16]
 80085ac:	0750      	lsls	r0, r2, #29
 80085ae:	d510      	bpl.n	80085d2 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80085b0:	68da      	ldr	r2, [r3, #12]
 80085b2:	0751      	lsls	r1, r2, #29
 80085b4:	d50d      	bpl.n	80085d2 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80085b6:	f06f 0204 	mvn.w	r2, #4
 80085ba:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80085bc:	2202      	movs	r2, #2
 80085be:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80085c0:	699b      	ldr	r3, [r3, #24]
 80085c2:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80085c6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80085c8:	d068      	beq.n	800869c <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80085ca:	f7ff ffd5 	bl	8008578 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80085ce:	2300      	movs	r3, #0
 80085d0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80085d2:	6823      	ldr	r3, [r4, #0]
 80085d4:	691a      	ldr	r2, [r3, #16]
 80085d6:	0712      	lsls	r2, r2, #28
 80085d8:	d50f      	bpl.n	80085fa <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80085da:	68da      	ldr	r2, [r3, #12]
 80085dc:	0710      	lsls	r0, r2, #28
 80085de:	d50c      	bpl.n	80085fa <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80085e0:	f06f 0208 	mvn.w	r2, #8
 80085e4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80085e6:	2204      	movs	r2, #4
 80085e8:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80085ea:	69db      	ldr	r3, [r3, #28]
 80085ec:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80085ee:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80085f0:	d05a      	beq.n	80086a8 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80085f2:	f7ff ffc1 	bl	8008578 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80085f6:	2300      	movs	r3, #0
 80085f8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80085fa:	6823      	ldr	r3, [r4, #0]
 80085fc:	691a      	ldr	r2, [r3, #16]
 80085fe:	06d2      	lsls	r2, r2, #27
 8008600:	d510      	bpl.n	8008624 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8008602:	68da      	ldr	r2, [r3, #12]
 8008604:	06d0      	lsls	r0, r2, #27
 8008606:	d50d      	bpl.n	8008624 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008608:	f06f 0210 	mvn.w	r2, #16
 800860c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800860e:	2208      	movs	r2, #8
 8008610:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008612:	69db      	ldr	r3, [r3, #28]
 8008614:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008618:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800861a:	d04b      	beq.n	80086b4 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800861c:	f7ff ffac 	bl	8008578 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008620:	2300      	movs	r3, #0
 8008622:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008624:	6823      	ldr	r3, [r4, #0]
 8008626:	691a      	ldr	r2, [r3, #16]
 8008628:	07d1      	lsls	r1, r2, #31
 800862a:	d508      	bpl.n	800863e <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800862c:	68da      	ldr	r2, [r3, #12]
 800862e:	07d2      	lsls	r2, r2, #31
 8008630:	d505      	bpl.n	800863e <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008632:	f06f 0201 	mvn.w	r2, #1
 8008636:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008638:	4620      	mov	r0, r4
 800863a:	f7f9 fc59 	bl	8001ef0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800863e:	6823      	ldr	r3, [r4, #0]
 8008640:	691a      	ldr	r2, [r3, #16]
 8008642:	0610      	lsls	r0, r2, #24
 8008644:	d508      	bpl.n	8008658 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008646:	68da      	ldr	r2, [r3, #12]
 8008648:	0611      	lsls	r1, r2, #24
 800864a:	d505      	bpl.n	8008658 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800864c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008650:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008652:	4620      	mov	r0, r4
 8008654:	f000 f8f5 	bl	8008842 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008658:	6823      	ldr	r3, [r4, #0]
 800865a:	691a      	ldr	r2, [r3, #16]
 800865c:	0652      	lsls	r2, r2, #25
 800865e:	d508      	bpl.n	8008672 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008660:	68da      	ldr	r2, [r3, #12]
 8008662:	0650      	lsls	r0, r2, #25
 8008664:	d505      	bpl.n	8008672 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008666:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800866a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800866c:	4620      	mov	r0, r4
 800866e:	f7ff ff85 	bl	800857c <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8008672:	6823      	ldr	r3, [r4, #0]
 8008674:	691a      	ldr	r2, [r3, #16]
 8008676:	0691      	lsls	r1, r2, #26
 8008678:	d522      	bpl.n	80086c0 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800867a:	68da      	ldr	r2, [r3, #12]
 800867c:	0692      	lsls	r2, r2, #26
 800867e:	d51f      	bpl.n	80086c0 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008680:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8008684:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008686:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008688:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800868c:	f000 b8d8 	b.w	8008840 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8008690:	f7ff ff71 	bl	8008576 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008694:	4620      	mov	r0, r4
 8008696:	f7ff ff70 	bl	800857a <HAL_TIM_PWM_PulseFinishedCallback>
 800869a:	e783      	b.n	80085a4 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800869c:	f7ff ff6b 	bl	8008576 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80086a0:	4620      	mov	r0, r4
 80086a2:	f7ff ff6a 	bl	800857a <HAL_TIM_PWM_PulseFinishedCallback>
 80086a6:	e792      	b.n	80085ce <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80086a8:	f7ff ff65 	bl	8008576 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80086ac:	4620      	mov	r0, r4
 80086ae:	f7ff ff64 	bl	800857a <HAL_TIM_PWM_PulseFinishedCallback>
 80086b2:	e7a0      	b.n	80085f6 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80086b4:	f7ff ff5f 	bl	8008576 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80086b8:	4620      	mov	r0, r4
 80086ba:	f7ff ff5e 	bl	800857a <HAL_TIM_PWM_PulseFinishedCallback>
 80086be:	e7af      	b.n	8008620 <HAL_TIM_IRQHandler+0xa2>
}
 80086c0:	bd10      	pop	{r4, pc}
	...

080086c4 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80086c4:	4a30      	ldr	r2, [pc, #192]	; (8008788 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80086c6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80086c8:	4290      	cmp	r0, r2
 80086ca:	d012      	beq.n	80086f2 <TIM_Base_SetConfig+0x2e>
 80086cc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80086d0:	d00f      	beq.n	80086f2 <TIM_Base_SetConfig+0x2e>
 80086d2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80086d6:	4290      	cmp	r0, r2
 80086d8:	d00b      	beq.n	80086f2 <TIM_Base_SetConfig+0x2e>
 80086da:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80086de:	4290      	cmp	r0, r2
 80086e0:	d007      	beq.n	80086f2 <TIM_Base_SetConfig+0x2e>
 80086e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80086e6:	4290      	cmp	r0, r2
 80086e8:	d003      	beq.n	80086f2 <TIM_Base_SetConfig+0x2e>
 80086ea:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80086ee:	4290      	cmp	r0, r2
 80086f0:	d119      	bne.n	8008726 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80086f2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80086f4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80086f8:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80086fa:	4a23      	ldr	r2, [pc, #140]	; (8008788 <TIM_Base_SetConfig+0xc4>)
 80086fc:	4290      	cmp	r0, r2
 80086fe:	d029      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 8008700:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008704:	d026      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 8008706:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800870a:	4290      	cmp	r0, r2
 800870c:	d022      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 800870e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008712:	4290      	cmp	r0, r2
 8008714:	d01e      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 8008716:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800871a:	4290      	cmp	r0, r2
 800871c:	d01a      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 800871e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008722:	4290      	cmp	r0, r2
 8008724:	d016      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 8008726:	4a19      	ldr	r2, [pc, #100]	; (800878c <TIM_Base_SetConfig+0xc8>)
 8008728:	4290      	cmp	r0, r2
 800872a:	d013      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 800872c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008730:	4290      	cmp	r0, r2
 8008732:	d00f      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 8008734:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008738:	4290      	cmp	r0, r2
 800873a:	d00b      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 800873c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008740:	4290      	cmp	r0, r2
 8008742:	d007      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 8008744:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008748:	4290      	cmp	r0, r2
 800874a:	d003      	beq.n	8008754 <TIM_Base_SetConfig+0x90>
 800874c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008750:	4290      	cmp	r0, r2
 8008752:	d103      	bne.n	800875c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008754:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008756:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800875a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800875c:	694a      	ldr	r2, [r1, #20]
 800875e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008762:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008764:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008766:	688b      	ldr	r3, [r1, #8]
 8008768:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800876a:	680b      	ldr	r3, [r1, #0]
 800876c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800876e:	4b06      	ldr	r3, [pc, #24]	; (8008788 <TIM_Base_SetConfig+0xc4>)
 8008770:	4298      	cmp	r0, r3
 8008772:	d003      	beq.n	800877c <TIM_Base_SetConfig+0xb8>
 8008774:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008778:	4298      	cmp	r0, r3
 800877a:	d101      	bne.n	8008780 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800877c:	690b      	ldr	r3, [r1, #16]
 800877e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008780:	2301      	movs	r3, #1
 8008782:	6143      	str	r3, [r0, #20]
}
 8008784:	4770      	bx	lr
 8008786:	bf00      	nop
 8008788:	40010000 	.word	0x40010000
 800878c:	40014000 	.word	0x40014000

08008790 <HAL_TIM_Base_Init>:
{
 8008790:	b510      	push	{r4, lr}
  if (htim == NULL)
 8008792:	4604      	mov	r4, r0
 8008794:	b1a0      	cbz	r0, 80087c0 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008796:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800879a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800879e:	b91b      	cbnz	r3, 80087a8 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80087a0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80087a4:	f7f9 fe02 	bl	80023ac <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80087a8:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80087aa:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80087ac:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80087b0:	1d21      	adds	r1, r4, #4
 80087b2:	f7ff ff87 	bl	80086c4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80087b6:	2301      	movs	r3, #1
 80087b8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80087bc:	2000      	movs	r0, #0
}
 80087be:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80087c0:	2001      	movs	r0, #1
 80087c2:	e7fc      	b.n	80087be <HAL_TIM_Base_Init+0x2e>

080087c4 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80087c4:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80087c6:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80087ca:	2b01      	cmp	r3, #1
 80087cc:	f04f 0302 	mov.w	r3, #2
 80087d0:	d032      	beq.n	8008838 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80087d2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80087d6:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80087d8:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80087da:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80087dc:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80087de:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80087e2:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80087e4:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80087e6:	4c15      	ldr	r4, [pc, #84]	; (800883c <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 80087e8:	42a3      	cmp	r3, r4
 80087ea:	d01a      	beq.n	8008822 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80087ec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80087f0:	d017      	beq.n	8008822 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80087f2:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 80087f6:	42a3      	cmp	r3, r4
 80087f8:	d013      	beq.n	8008822 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80087fa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80087fe:	42a3      	cmp	r3, r4
 8008800:	d00f      	beq.n	8008822 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008802:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008806:	42a3      	cmp	r3, r4
 8008808:	d00b      	beq.n	8008822 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800880a:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800880e:	42a3      	cmp	r3, r4
 8008810:	d007      	beq.n	8008822 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008812:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008816:	42a3      	cmp	r3, r4
 8008818:	d003      	beq.n	8008822 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800881a:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800881e:	42a3      	cmp	r3, r4
 8008820:	d104      	bne.n	800882c <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008822:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008824:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008828:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800882a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800882c:	2301      	movs	r3, #1
 800882e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008832:	2300      	movs	r3, #0
 8008834:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008838:	4618      	mov	r0, r3

  return HAL_OK;
}
 800883a:	bd30      	pop	{r4, r5, pc}
 800883c:	40010000 	.word	0x40010000

08008840 <HAL_TIMEx_CommutCallback>:
 8008840:	4770      	bx	lr

08008842 <HAL_TIMEx_BreakCallback>:
 8008842:	4770      	bx	lr

08008844 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008844:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008848:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 800884a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800884e:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8008852:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8008856:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800885a:	6809      	ldr	r1, [r1, #0]
 800885c:	2901      	cmp	r1, #1
 800885e:	ea43 0304 	orr.w	r3, r3, r4
 8008862:	4912      	ldr	r1, [pc, #72]	; (80088ac <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8008864:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008866:	d00f      	beq.n	8008888 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008868:	431a      	orrs	r2, r3
 800886a:	432a      	orrs	r2, r5
 800886c:	ea42 0308 	orr.w	r3, r2, r8
 8008870:	ea43 030e 	orr.w	r3, r3, lr
 8008874:	ea43 030c 	orr.w	r3, r3, ip
 8008878:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800887a:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800887c:	4333      	orrs	r3, r6
 800887e:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008880:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8008882:	2000      	movs	r0, #0
 8008884:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008888:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800888a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800888c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800888e:	ea45 0208 	orr.w	r2, r5, r8
 8008892:	ea42 020e 	orr.w	r2, r2, lr
 8008896:	ea42 020c 	orr.w	r2, r2, ip
 800889a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800889c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80088a0:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80088a2:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80088a4:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80088a6:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80088a8:	6042      	str	r2, [r0, #4]
 80088aa:	e7ea      	b.n	8008882 <FMC_SDRAM_Init+0x3e>
 80088ac:	ffff8000 	.word	0xffff8000

080088b0 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80088b0:	68cb      	ldr	r3, [r1, #12]
{
 80088b2:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80088b4:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80088b6:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80088b8:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80088ba:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80088bc:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80088be:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80088c2:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80088c4:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80088c6:	3b01      	subs	r3, #1
 80088c8:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80088ca:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80088cc:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80088ce:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 80088d0:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80088d2:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80088d4:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80088d8:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80088dc:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 80088e0:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80088e4:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 80088e8:	d00c      	beq.n	8008904 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80088ea:	ea43 030c 	orr.w	r3, r3, ip
 80088ee:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80088f0:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80088f2:	4333      	orrs	r3, r6
 80088f4:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80088f6:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80088fa:	430b      	orrs	r3, r1
 80088fc:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80088fe:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8008900:	2000      	movs	r0, #0
 8008902:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008904:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008906:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800890a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800890e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008910:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008912:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008916:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008918:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800891a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800891c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008920:	430a      	orrs	r2, r1
 8008922:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008924:	60c2      	str	r2, [r0, #12]
 8008926:	e7eb      	b.n	8008900 <FMC_SDRAM_Timing_Init+0x50>

08008928 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008928:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800892a:	2300      	movs	r3, #0
 800892c:	9301      	str	r3, [sp, #4]
{
 800892e:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008930:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008934:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008936:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008938:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800893c:	688a      	ldr	r2, [r1, #8]
 800893e:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008940:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008944:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008946:	9b01      	ldr	r3, [sp, #4]
 8008948:	6103      	str	r3, [r0, #16]
{
 800894a:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800894c:	f7fd fbf8 	bl	8006140 <HAL_GetTick>
 8008950:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008952:	69a3      	ldr	r3, [r4, #24]
 8008954:	f013 0320 	ands.w	r3, r3, #32
 8008958:	d101      	bne.n	800895e <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800895a:	4618      	mov	r0, r3
 800895c:	e003      	b.n	8008966 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800895e:	1c6b      	adds	r3, r5, #1
 8008960:	d0f7      	beq.n	8008952 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008962:	b915      	cbnz	r5, 800896a <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8008964:	2003      	movs	r0, #3
}
 8008966:	b002      	add	sp, #8
 8008968:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800896a:	f7fd fbe9 	bl	8006140 <HAL_GetTick>
 800896e:	1b80      	subs	r0, r0, r6
 8008970:	42a8      	cmp	r0, r5
 8008972:	d9ee      	bls.n	8008952 <FMC_SDRAM_SendCommand+0x2a>
 8008974:	e7f6      	b.n	8008964 <FMC_SDRAM_SendCommand+0x3c>

08008976 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8008976:	6943      	ldr	r3, [r0, #20]
 8008978:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800897c:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800897e:	2000      	movs	r0, #0
 8008980:	4770      	bx	lr
	...

08008984 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008984:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008988:	b113      	cbz	r3, 8008990 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800898a:	f06f 0005 	mvn.w	r0, #5
 800898e:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008990:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008994:	4b07      	ldr	r3, [pc, #28]	; (80089b4 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8008996:	b912      	cbnz	r2, 800899e <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008998:	f3ef 8211 	mrs	r2, BASEPRI
 800899c:	b112      	cbz	r2, 80089a4 <osKernelInitialize+0x20>
 800899e:	681a      	ldr	r2, [r3, #0]
 80089a0:	2a02      	cmp	r2, #2
 80089a2:	d0f2      	beq.n	800898a <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80089a4:	6818      	ldr	r0, [r3, #0]
 80089a6:	b910      	cbnz	r0, 80089ae <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80089a8:	2201      	movs	r2, #1
 80089aa:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80089ac:	4770      	bx	lr
    } else {
      stat = osError;
 80089ae:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80089b2:	4770      	bx	lr
 80089b4:	20004ca8 	.word	0x20004ca8

080089b8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80089b8:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80089ba:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80089be:	b113      	cbz	r3, 80089c6 <osKernelStart+0xe>
    stat = osErrorISR;
 80089c0:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80089c4:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80089c6:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80089ca:	4b0a      	ldr	r3, [pc, #40]	; (80089f4 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80089cc:	b912      	cbnz	r2, 80089d4 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80089ce:	f3ef 8211 	mrs	r2, BASEPRI
 80089d2:	b112      	cbz	r2, 80089da <osKernelStart+0x22>
 80089d4:	681a      	ldr	r2, [r3, #0]
 80089d6:	2a02      	cmp	r2, #2
 80089d8:	d0f2      	beq.n	80089c0 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80089da:	681a      	ldr	r2, [r3, #0]
 80089dc:	2a01      	cmp	r2, #1
 80089de:	d105      	bne.n	80089ec <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80089e0:	2202      	movs	r2, #2
 80089e2:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80089e4:	f001 fbd6 	bl	800a194 <vTaskStartScheduler>
      stat = osOK;
 80089e8:	2000      	movs	r0, #0
 80089ea:	e7eb      	b.n	80089c4 <osKernelStart+0xc>
      stat = osError;
 80089ec:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80089f0:	e7e8      	b.n	80089c4 <osKernelStart+0xc>
 80089f2:	bf00      	nop
 80089f4:	20004ca8 	.word	0x20004ca8

080089f8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80089f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80089fa:	b087      	sub	sp, #28
 80089fc:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80089fe:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008a00:	460b      	mov	r3, r1
  hTask = NULL;
 8008a02:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008a04:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008a08:	bb22      	cbnz	r2, 8008a54 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008a0a:	f3ef 8210 	mrs	r2, PRIMASK
 8008a0e:	b912      	cbnz	r2, 8008a16 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008a10:	f3ef 8211 	mrs	r2, BASEPRI
 8008a14:	b11a      	cbz	r2, 8008a1e <osThreadNew+0x26>
 8008a16:	4a22      	ldr	r2, [pc, #136]	; (8008aa0 <osThreadNew+0xa8>)
 8008a18:	6812      	ldr	r2, [r2, #0]
 8008a1a:	2a02      	cmp	r2, #2
 8008a1c:	d01a      	beq.n	8008a54 <osThreadNew+0x5c>
 8008a1e:	b1c8      	cbz	r0, 8008a54 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008a20:	2c00      	cmp	r4, #0
 8008a22:	d02f      	beq.n	8008a84 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008a24:	69a5      	ldr	r5, [r4, #24]
 8008a26:	2d00      	cmp	r5, #0
 8008a28:	bf08      	it	eq
 8008a2a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008a2c:	1e6a      	subs	r2, r5, #1
 8008a2e:	2a37      	cmp	r2, #55	; 0x37
 8008a30:	46ac      	mov	ip, r5
 8008a32:	d82b      	bhi.n	8008a8c <osThreadNew+0x94>
 8008a34:	6862      	ldr	r2, [r4, #4]
 8008a36:	07d2      	lsls	r2, r2, #31
 8008a38:	d428      	bmi.n	8008a8c <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008a3a:	6966      	ldr	r6, [r4, #20]
 8008a3c:	b16e      	cbz	r6, 8008a5a <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008a3e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008a40:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008a44:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008a46:	b157      	cbz	r7, 8008a5e <osThreadNew+0x66>
 8008a48:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8008a4c:	d902      	bls.n	8008a54 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008a4e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008a50:	b104      	cbz	r4, 8008a54 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008a52:	b9ee      	cbnz	r6, 8008a90 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008a54:	9805      	ldr	r0, [sp, #20]
}
 8008a56:	b007      	add	sp, #28
 8008a58:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008a5a:	2280      	movs	r2, #128	; 0x80
 8008a5c:	e7f0      	b.n	8008a40 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008a5e:	f1be 0f00 	cmp.w	lr, #0
 8008a62:	d1f7      	bne.n	8008a54 <osThreadNew+0x5c>
      if (mem == 0) {
 8008a64:	6924      	ldr	r4, [r4, #16]
 8008a66:	2c00      	cmp	r4, #0
 8008a68:	d1f4      	bne.n	8008a54 <osThreadNew+0x5c>
 8008a6a:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008a6c:	a905      	add	r1, sp, #20
 8008a6e:	e9cd c100 	strd	ip, r1, [sp]
 8008a72:	b292      	uxth	r2, r2
 8008a74:	4621      	mov	r1, r4
 8008a76:	f001 fb5f 	bl	800a138 <xTaskCreate>
 8008a7a:	2801      	cmp	r0, #1
          hTask = NULL;
 8008a7c:	bf1c      	itt	ne
 8008a7e:	2300      	movne	r3, #0
 8008a80:	9305      	strne	r3, [sp, #20]
 8008a82:	e7e7      	b.n	8008a54 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8008a84:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008a88:	2280      	movs	r2, #128	; 0x80
 8008a8a:	e7ef      	b.n	8008a6c <osThreadNew+0x74>
        return (NULL);
 8008a8c:	2000      	movs	r0, #0
 8008a8e:	e7e2      	b.n	8008a56 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008a90:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008a94:	9500      	str	r5, [sp, #0]
 8008a96:	f001 fb17 	bl	800a0c8 <xTaskCreateStatic>
 8008a9a:	9005      	str	r0, [sp, #20]
 8008a9c:	e7da      	b.n	8008a54 <osThreadNew+0x5c>
 8008a9e:	bf00      	nop
 8008aa0:	20004ca8 	.word	0x20004ca8

08008aa4 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8008aa4:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008aa6:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008aaa:	b113      	cbz	r3, 8008ab2 <osDelay+0xe>
    stat = osErrorISR;
 8008aac:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8008ab0:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008ab2:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008ab6:	b913      	cbnz	r3, 8008abe <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008ab8:	f3ef 8311 	mrs	r3, BASEPRI
 8008abc:	b11b      	cbz	r3, 8008ac6 <osDelay+0x22>
 8008abe:	4b05      	ldr	r3, [pc, #20]	; (8008ad4 <osDelay+0x30>)
 8008ac0:	681b      	ldr	r3, [r3, #0]
 8008ac2:	2b02      	cmp	r3, #2
 8008ac4:	d0f2      	beq.n	8008aac <osDelay+0x8>
    if (ticks != 0U) {
 8008ac6:	2800      	cmp	r0, #0
 8008ac8:	d0f2      	beq.n	8008ab0 <osDelay+0xc>
      vTaskDelay(ticks);
 8008aca:	f001 fccb 	bl	800a464 <vTaskDelay>
    stat = osOK;
 8008ace:	2000      	movs	r0, #0
 8008ad0:	e7ee      	b.n	8008ab0 <osDelay+0xc>
 8008ad2:	bf00      	nop
 8008ad4:	20004ca8 	.word	0x20004ca8

08008ad8 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008ad8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008ada:	460e      	mov	r6, r1
 8008adc:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008ade:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008ae2:	b11b      	cbz	r3, 8008aec <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008ae4:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008ae6:	4620      	mov	r0, r4
 8008ae8:	b002      	add	sp, #8
 8008aea:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008aec:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008af0:	b913      	cbnz	r3, 8008af8 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008af2:	f3ef 8311 	mrs	r3, BASEPRI
 8008af6:	b11b      	cbz	r3, 8008b00 <osSemaphoreNew+0x28>
 8008af8:	4b21      	ldr	r3, [pc, #132]	; (8008b80 <osSemaphoreNew+0xa8>)
 8008afa:	681b      	ldr	r3, [r3, #0]
 8008afc:	2b02      	cmp	r3, #2
 8008afe:	d0f1      	beq.n	8008ae4 <osSemaphoreNew+0xc>
 8008b00:	2800      	cmp	r0, #0
 8008b02:	d0ef      	beq.n	8008ae4 <osSemaphoreNew+0xc>
 8008b04:	42b0      	cmp	r0, r6
 8008b06:	d3ed      	bcc.n	8008ae4 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008b08:	b1ed      	cbz	r5, 8008b46 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008b0a:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008b0e:	b1c3      	cbz	r3, 8008b42 <osSemaphoreNew+0x6a>
 8008b10:	2a4f      	cmp	r2, #79	; 0x4f
 8008b12:	d9e7      	bls.n	8008ae4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008b14:	2801      	cmp	r0, #1
 8008b16:	d129      	bne.n	8008b6c <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008b18:	2203      	movs	r2, #3
 8008b1a:	9200      	str	r2, [sp, #0]
 8008b1c:	2200      	movs	r2, #0
 8008b1e:	4611      	mov	r1, r2
 8008b20:	f000 fd29 	bl	8009576 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008b24:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008b26:	2800      	cmp	r0, #0
 8008b28:	d0dc      	beq.n	8008ae4 <osSemaphoreNew+0xc>
 8008b2a:	b1ce      	cbz	r6, 8008b60 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008b2c:	2300      	movs	r3, #0
 8008b2e:	461a      	mov	r2, r3
 8008b30:	4619      	mov	r1, r3
 8008b32:	f000 fdd5 	bl	80096e0 <xQueueGenericSend>
 8008b36:	2801      	cmp	r0, #1
 8008b38:	d012      	beq.n	8008b60 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8008b3a:	4620      	mov	r0, r4
 8008b3c:	f001 f910 	bl	8009d60 <vQueueDelete>
 8008b40:	e7d0      	b.n	8008ae4 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008b42:	2a00      	cmp	r2, #0
 8008b44:	d1ce      	bne.n	8008ae4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008b46:	2801      	cmp	r0, #1
 8008b48:	d104      	bne.n	8008b54 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8008b4a:	2203      	movs	r2, #3
 8008b4c:	2100      	movs	r1, #0
 8008b4e:	f000 fd60 	bl	8009612 <xQueueGenericCreate>
 8008b52:	e7e7      	b.n	8008b24 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008b54:	4631      	mov	r1, r6
 8008b56:	f000 fda5 	bl	80096a4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008b5a:	4604      	mov	r4, r0
 8008b5c:	2800      	cmp	r0, #0
 8008b5e:	d0c1      	beq.n	8008ae4 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8008b60:	b95d      	cbnz	r5, 8008b7a <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8008b62:	4629      	mov	r1, r5
 8008b64:	4620      	mov	r0, r4
 8008b66:	f001 f8d5 	bl	8009d14 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008b6a:	e7bc      	b.n	8008ae6 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008b6c:	461a      	mov	r2, r3
 8008b6e:	4631      	mov	r1, r6
 8008b70:	f000 fd76 	bl	8009660 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008b74:	4604      	mov	r4, r0
 8008b76:	2800      	cmp	r0, #0
 8008b78:	d0b4      	beq.n	8008ae4 <osSemaphoreNew+0xc>
          name = attr->name;
 8008b7a:	682d      	ldr	r5, [r5, #0]
 8008b7c:	e7f1      	b.n	8008b62 <osSemaphoreNew+0x8a>
 8008b7e:	bf00      	nop
 8008b80:	20004ca8 	.word	0x20004ca8

08008b84 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008b84:	b513      	push	{r0, r1, r4, lr}
 8008b86:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008b88:	b918      	cbnz	r0, 8008b92 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8008b8a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008b8e:	b002      	add	sp, #8
 8008b90:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008b92:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008b96:	b163      	cbz	r3, 8008bb2 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8008b98:	2c00      	cmp	r4, #0
 8008b9a:	d1f6      	bne.n	8008b8a <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008b9c:	aa01      	add	r2, sp, #4
 8008b9e:	4621      	mov	r1, r4
      yield = pdFALSE;
 8008ba0:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008ba2:	f001 f867 	bl	8009c74 <xQueueReceiveFromISR>
 8008ba6:	2801      	cmp	r0, #1
 8008ba8:	d113      	bne.n	8008bd2 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8008baa:	9b01      	ldr	r3, [sp, #4]
 8008bac:	b9a3      	cbnz	r3, 8008bd8 <osSemaphoreAcquire+0x54>
  stat = osOK;
 8008bae:	2000      	movs	r0, #0
 8008bb0:	e7ed      	b.n	8008b8e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008bb2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008bb6:	b913      	cbnz	r3, 8008bbe <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008bb8:	f3ef 8311 	mrs	r3, BASEPRI
 8008bbc:	b11b      	cbz	r3, 8008bc6 <osSemaphoreAcquire+0x42>
 8008bbe:	4b0d      	ldr	r3, [pc, #52]	; (8008bf4 <osSemaphoreAcquire+0x70>)
 8008bc0:	681b      	ldr	r3, [r3, #0]
 8008bc2:	2b02      	cmp	r3, #2
 8008bc4:	d0e8      	beq.n	8008b98 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008bc6:	4621      	mov	r1, r4
 8008bc8:	f000 ff91 	bl	8009aee <xQueueSemaphoreTake>
 8008bcc:	2801      	cmp	r0, #1
 8008bce:	d0ee      	beq.n	8008bae <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8008bd0:	b96c      	cbnz	r4, 8008bee <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 8008bd2:	f06f 0002 	mvn.w	r0, #2
 8008bd6:	e7da      	b.n	8008b8e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008bd8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008bdc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008be0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008be4:	f3bf 8f4f 	dsb	sy
 8008be8:	f3bf 8f6f 	isb	sy
 8008bec:	e7df      	b.n	8008bae <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8008bee:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008bf2:	e7cc      	b.n	8008b8e <osSemaphoreAcquire+0xa>
 8008bf4:	20004ca8 	.word	0x20004ca8

08008bf8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008bf8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008bfa:	b370      	cbz	r0, 8008c5a <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008bfc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008c00:	b14b      	cbz	r3, 8008c16 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8008c02:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008c04:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008c06:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008c08:	f000 fe7e 	bl	8009908 <xQueueGiveFromISR>
 8008c0c:	2801      	cmp	r0, #1
 8008c0e:	d014      	beq.n	8008c3a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008c10:	f06f 0002 	mvn.w	r0, #2
 8008c14:	e014      	b.n	8008c40 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008c16:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008c1a:	b913      	cbnz	r3, 8008c22 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008c1c:	f3ef 8311 	mrs	r3, BASEPRI
 8008c20:	b11b      	cbz	r3, 8008c2a <osSemaphoreRelease+0x32>
 8008c22:	4b0f      	ldr	r3, [pc, #60]	; (8008c60 <osSemaphoreRelease+0x68>)
 8008c24:	681b      	ldr	r3, [r3, #0]
 8008c26:	2b02      	cmp	r3, #2
 8008c28:	d0eb      	beq.n	8008c02 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008c2a:	2300      	movs	r3, #0
 8008c2c:	461a      	mov	r2, r3
 8008c2e:	4619      	mov	r1, r3
 8008c30:	f000 fd56 	bl	80096e0 <xQueueGenericSend>
 8008c34:	2801      	cmp	r0, #1
 8008c36:	d002      	beq.n	8008c3e <osSemaphoreRelease+0x46>
 8008c38:	e7ea      	b.n	8008c10 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008c3a:	9b01      	ldr	r3, [sp, #4]
 8008c3c:	b913      	cbnz	r3, 8008c44 <osSemaphoreRelease+0x4c>
  stat = osOK;
 8008c3e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008c40:	b002      	add	sp, #8
 8008c42:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008c44:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008c4c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008c50:	f3bf 8f4f 	dsb	sy
 8008c54:	f3bf 8f6f 	isb	sy
 8008c58:	e7f1      	b.n	8008c3e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8008c5a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008c5e:	e7ef      	b.n	8008c40 <osSemaphoreRelease+0x48>
 8008c60:	20004ca8 	.word	0x20004ca8

08008c64 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008c64:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008c66:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008c68:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008c6c:	b11b      	cbz	r3, 8008c76 <osMessageQueueNew+0x12>
  hQueue = NULL;
 8008c6e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008c70:	4628      	mov	r0, r5
 8008c72:	b002      	add	sp, #8
 8008c74:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008c76:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008c7a:	b913      	cbnz	r3, 8008c82 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008c7c:	f3ef 8311 	mrs	r3, BASEPRI
 8008c80:	b11b      	cbz	r3, 8008c8a <osMessageQueueNew+0x26>
 8008c82:	4b1a      	ldr	r3, [pc, #104]	; (8008cec <osMessageQueueNew+0x88>)
 8008c84:	681b      	ldr	r3, [r3, #0]
 8008c86:	2b02      	cmp	r3, #2
 8008c88:	d0f1      	beq.n	8008c6e <osMessageQueueNew+0xa>
 8008c8a:	2800      	cmp	r0, #0
 8008c8c:	d0ef      	beq.n	8008c6e <osMessageQueueNew+0xa>
 8008c8e:	2900      	cmp	r1, #0
 8008c90:	d0ed      	beq.n	8008c6e <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8008c92:	b1ec      	cbz	r4, 8008cd0 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008c94:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008c98:	b193      	cbz	r3, 8008cc0 <osMessageQueueNew+0x5c>
 8008c9a:	2a4f      	cmp	r2, #79	; 0x4f
 8008c9c:	d9e7      	bls.n	8008c6e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008c9e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008ca0:	2a00      	cmp	r2, #0
 8008ca2:	d0e4      	beq.n	8008c6e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008ca4:	6966      	ldr	r6, [r4, #20]
 8008ca6:	fb01 f500 	mul.w	r5, r1, r0
 8008caa:	42ae      	cmp	r6, r5
 8008cac:	d3df      	bcc.n	8008c6e <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008cae:	2500      	movs	r5, #0
 8008cb0:	9500      	str	r5, [sp, #0]
 8008cb2:	f000 fc60 	bl	8009576 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008cb6:	4605      	mov	r5, r0
 8008cb8:	2800      	cmp	r0, #0
 8008cba:	d0d8      	beq.n	8008c6e <osMessageQueueNew+0xa>
        name = attr->name;
 8008cbc:	6824      	ldr	r4, [r4, #0]
 8008cbe:	e00f      	b.n	8008ce0 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008cc0:	2a00      	cmp	r2, #0
 8008cc2:	d1d4      	bne.n	8008c6e <osMessageQueueNew+0xa>
 8008cc4:	6923      	ldr	r3, [r4, #16]
 8008cc6:	2b00      	cmp	r3, #0
 8008cc8:	d1d1      	bne.n	8008c6e <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008cca:	6963      	ldr	r3, [r4, #20]
 8008ccc:	2b00      	cmp	r3, #0
 8008cce:	d1ce      	bne.n	8008c6e <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8008cd0:	2200      	movs	r2, #0
 8008cd2:	f000 fc9e 	bl	8009612 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008cd6:	4605      	mov	r5, r0
 8008cd8:	2800      	cmp	r0, #0
 8008cda:	d0c8      	beq.n	8008c6e <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8008cdc:	2c00      	cmp	r4, #0
 8008cde:	d1ed      	bne.n	8008cbc <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8008ce0:	4621      	mov	r1, r4
 8008ce2:	4628      	mov	r0, r5
 8008ce4:	f001 f816 	bl	8009d14 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008ce8:	e7c2      	b.n	8008c70 <osMessageQueueNew+0xc>
 8008cea:	bf00      	nop
 8008cec:	20004ca8 	.word	0x20004ca8

08008cf0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008cf0:	b513      	push	{r0, r1, r4, lr}
 8008cf2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008cf4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008cf8:	b123      	cbz	r3, 8008d04 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008cfa:	b9d8      	cbnz	r0, 8008d34 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8008cfc:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008d00:	b002      	add	sp, #8
 8008d02:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008d04:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008d08:	b913      	cbnz	r3, 8008d10 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008d0a:	f3ef 8311 	mrs	r3, BASEPRI
 8008d0e:	b11b      	cbz	r3, 8008d18 <osMessageQueuePut+0x28>
 8008d10:	4b17      	ldr	r3, [pc, #92]	; (8008d70 <osMessageQueuePut+0x80>)
 8008d12:	681b      	ldr	r3, [r3, #0]
 8008d14:	2b02      	cmp	r3, #2
 8008d16:	d0f0      	beq.n	8008cfa <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008d18:	2800      	cmp	r0, #0
 8008d1a:	d0ef      	beq.n	8008cfc <osMessageQueuePut+0xc>
 8008d1c:	2900      	cmp	r1, #0
 8008d1e:	d0ed      	beq.n	8008cfc <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008d20:	2300      	movs	r3, #0
 8008d22:	4622      	mov	r2, r4
 8008d24:	f000 fcdc 	bl	80096e0 <xQueueGenericSend>
 8008d28:	2801      	cmp	r0, #1
 8008d2a:	d010      	beq.n	8008d4e <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008d2c:	b9e4      	cbnz	r4, 8008d68 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 8008d2e:	f06f 0002 	mvn.w	r0, #2
 8008d32:	e7e5      	b.n	8008d00 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008d34:	2900      	cmp	r1, #0
 8008d36:	d0e1      	beq.n	8008cfc <osMessageQueuePut+0xc>
 8008d38:	2c00      	cmp	r4, #0
 8008d3a:	d1df      	bne.n	8008cfc <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008d3c:	4623      	mov	r3, r4
 8008d3e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008d40:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008d42:	f000 fd80 	bl	8009846 <xQueueGenericSendFromISR>
 8008d46:	2801      	cmp	r0, #1
 8008d48:	d1f1      	bne.n	8008d2e <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008d4a:	9b01      	ldr	r3, [sp, #4]
 8008d4c:	b90b      	cbnz	r3, 8008d52 <osMessageQueuePut+0x62>
  stat = osOK;
 8008d4e:	2000      	movs	r0, #0
 8008d50:	e7d6      	b.n	8008d00 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008d52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008d5e:	f3bf 8f4f 	dsb	sy
 8008d62:	f3bf 8f6f 	isb	sy
 8008d66:	e7f2      	b.n	8008d4e <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008d68:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008d6c:	e7c8      	b.n	8008d00 <osMessageQueuePut+0x10>
 8008d6e:	bf00      	nop
 8008d70:	20004ca8 	.word	0x20004ca8

08008d74 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008d74:	b513      	push	{r0, r1, r4, lr}
 8008d76:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008d78:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008d7c:	b123      	cbz	r3, 8008d88 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008d7e:	b9d0      	cbnz	r0, 8008db6 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8008d80:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008d84:	b002      	add	sp, #8
 8008d86:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008d88:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008d8c:	b913      	cbnz	r3, 8008d94 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008d8e:	f3ef 8311 	mrs	r3, BASEPRI
 8008d92:	b11b      	cbz	r3, 8008d9c <osMessageQueueGet+0x28>
 8008d94:	4b16      	ldr	r3, [pc, #88]	; (8008df0 <osMessageQueueGet+0x7c>)
 8008d96:	681b      	ldr	r3, [r3, #0]
 8008d98:	2b02      	cmp	r3, #2
 8008d9a:	d0f0      	beq.n	8008d7e <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008d9c:	2800      	cmp	r0, #0
 8008d9e:	d0ef      	beq.n	8008d80 <osMessageQueueGet+0xc>
 8008da0:	2900      	cmp	r1, #0
 8008da2:	d0ed      	beq.n	8008d80 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008da4:	4622      	mov	r2, r4
 8008da6:	f000 fe03 	bl	80099b0 <xQueueReceive>
 8008daa:	2801      	cmp	r0, #1
 8008dac:	d00f      	beq.n	8008dce <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 8008dae:	b9dc      	cbnz	r4, 8008de8 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 8008db0:	f06f 0002 	mvn.w	r0, #2
 8008db4:	e7e6      	b.n	8008d84 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008db6:	2900      	cmp	r1, #0
 8008db8:	d0e2      	beq.n	8008d80 <osMessageQueueGet+0xc>
 8008dba:	2c00      	cmp	r4, #0
 8008dbc:	d1e0      	bne.n	8008d80 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008dbe:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008dc0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008dc2:	f000 ff57 	bl	8009c74 <xQueueReceiveFromISR>
 8008dc6:	2801      	cmp	r0, #1
 8008dc8:	d1f2      	bne.n	8008db0 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8008dca:	9b01      	ldr	r3, [sp, #4]
 8008dcc:	b90b      	cbnz	r3, 8008dd2 <osMessageQueueGet+0x5e>
  stat = osOK;
 8008dce:	2000      	movs	r0, #0
 8008dd0:	e7d8      	b.n	8008d84 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8008dd2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008dd6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008dda:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008dde:	f3bf 8f4f 	dsb	sy
 8008de2:	f3bf 8f6f 	isb	sy
 8008de6:	e7f2      	b.n	8008dce <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008de8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008dec:	e7ca      	b.n	8008d84 <osMessageQueueGet+0x10>
 8008dee:	bf00      	nop
 8008df0:	20004ca8 	.word	0x20004ca8

08008df4 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008df4:	4b03      	ldr	r3, [pc, #12]	; (8008e04 <vApplicationGetIdleTaskMemory+0x10>)
 8008df6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008df8:	4b03      	ldr	r3, [pc, #12]	; (8008e08 <vApplicationGetIdleTaskMemory+0x14>)
 8008dfa:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008dfc:	2380      	movs	r3, #128	; 0x80
 8008dfe:	6013      	str	r3, [r2, #0]
}
 8008e00:	4770      	bx	lr
 8008e02:	bf00      	nop
 8008e04:	20004be8 	.word	0x20004be8
 8008e08:	200049e8 	.word	0x200049e8

08008e0c <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008e0c:	4b03      	ldr	r3, [pc, #12]	; (8008e1c <vApplicationGetTimerTaskMemory+0x10>)
 8008e0e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008e10:	4b03      	ldr	r3, [pc, #12]	; (8008e20 <vApplicationGetTimerTaskMemory+0x14>)
 8008e12:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008e14:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008e18:	6013      	str	r3, [r2, #0]
}
 8008e1a:	4770      	bx	lr
 8008e1c:	200050ac 	.word	0x200050ac
 8008e20:	20004cac 	.word	0x20004cac

08008e24 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008e24:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008e26:	4b0f      	ldr	r3, [pc, #60]	; (8008e64 <prvInsertBlockIntoFreeList+0x40>)
 8008e28:	461a      	mov	r2, r3
 8008e2a:	681b      	ldr	r3, [r3, #0]
 8008e2c:	4283      	cmp	r3, r0
 8008e2e:	d3fb      	bcc.n	8008e28 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008e30:	6854      	ldr	r4, [r2, #4]
 8008e32:	1911      	adds	r1, r2, r4
 8008e34:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008e36:	bf01      	itttt	eq
 8008e38:	6841      	ldreq	r1, [r0, #4]
 8008e3a:	4610      	moveq	r0, r2
 8008e3c:	1909      	addeq	r1, r1, r4
 8008e3e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008e40:	6844      	ldr	r4, [r0, #4]
 8008e42:	1901      	adds	r1, r0, r4
 8008e44:	428b      	cmp	r3, r1
 8008e46:	d107      	bne.n	8008e58 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008e48:	4907      	ldr	r1, [pc, #28]	; (8008e68 <prvInsertBlockIntoFreeList+0x44>)
 8008e4a:	6809      	ldr	r1, [r1, #0]
 8008e4c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008e4e:	bf1f      	itttt	ne
 8008e50:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008e52:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008e54:	1909      	addne	r1, r1, r4
 8008e56:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008e58:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008e5a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008e5c:	bf18      	it	ne
 8008e5e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008e60:	bd10      	pop	{r4, pc}
 8008e62:	bf00      	nop
 8008e64:	2001517c 	.word	0x2001517c
 8008e68:	2000516c 	.word	0x2000516c

08008e6c <pvPortMalloc>:
{
 8008e6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008e70:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008e72:	f001 f9df 	bl	800a234 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008e76:	4840      	ldr	r0, [pc, #256]	; (8008f78 <pvPortMalloc+0x10c>)
 8008e78:	4d40      	ldr	r5, [pc, #256]	; (8008f7c <pvPortMalloc+0x110>)
 8008e7a:	6803      	ldr	r3, [r0, #0]
 8008e7c:	bb0b      	cbnz	r3, 8008ec2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008e7e:	4940      	ldr	r1, [pc, #256]	; (8008f80 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008e80:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008e82:	bf1f      	itttt	ne
 8008e84:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008e86:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008e8a:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 8008e8e:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008e90:	bf14      	ite	ne
 8008e92:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008e94:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008e98:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008e9a:	4e3a      	ldr	r6, [pc, #232]	; (8008f84 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8008e9c:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008e9e:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008ea2:	2300      	movs	r3, #0
 8008ea4:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008ea6:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008ea8:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008eac:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008eae:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8008eb2:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008eb4:	4a34      	ldr	r2, [pc, #208]	; (8008f88 <pvPortMalloc+0x11c>)
 8008eb6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008eb8:	4a34      	ldr	r2, [pc, #208]	; (8008f8c <pvPortMalloc+0x120>)
 8008eba:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008ebc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008ec0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008ec2:	682f      	ldr	r7, [r5, #0]
 8008ec4:	4227      	tst	r7, r4
 8008ec6:	d151      	bne.n	8008f6c <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8008ec8:	2c00      	cmp	r4, #0
 8008eca:	d042      	beq.n	8008f52 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8008ecc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008ed0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008ed2:	bf1c      	itt	ne
 8008ed4:	f023 0307 	bicne.w	r3, r3, #7
 8008ed8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008eda:	2b00      	cmp	r3, #0
 8008edc:	d046      	beq.n	8008f6c <pvPortMalloc+0x100>
 8008ede:	4c2b      	ldr	r4, [pc, #172]	; (8008f8c <pvPortMalloc+0x120>)
 8008ee0:	6826      	ldr	r6, [r4, #0]
 8008ee2:	429e      	cmp	r6, r3
 8008ee4:	d342      	bcc.n	8008f6c <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8008ee6:	4a27      	ldr	r2, [pc, #156]	; (8008f84 <pvPortMalloc+0x118>)
 8008ee8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008eea:	6869      	ldr	r1, [r5, #4]
 8008eec:	4299      	cmp	r1, r3
 8008eee:	d204      	bcs.n	8008efa <pvPortMalloc+0x8e>
 8008ef0:	f8d5 c000 	ldr.w	ip, [r5]
 8008ef4:	f1bc 0f00 	cmp.w	ip, #0
 8008ef8:	d115      	bne.n	8008f26 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008efa:	6800      	ldr	r0, [r0, #0]
 8008efc:	42a8      	cmp	r0, r5
 8008efe:	d035      	beq.n	8008f6c <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008f00:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008f02:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008f04:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008f08:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008f0a:	2910      	cmp	r1, #16
 8008f0c:	d912      	bls.n	8008f34 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008f0e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008f10:	0742      	lsls	r2, r0, #29
 8008f12:	d00b      	beq.n	8008f2c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008f14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f18:	f383 8811 	msr	BASEPRI, r3
 8008f1c:	f3bf 8f6f 	isb	sy
 8008f20:	f3bf 8f4f 	dsb	sy
 8008f24:	e7fe      	b.n	8008f24 <pvPortMalloc+0xb8>
 8008f26:	462a      	mov	r2, r5
 8008f28:	4665      	mov	r5, ip
 8008f2a:	e7de      	b.n	8008eea <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008f2c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008f2e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008f30:	f7ff ff78 	bl	8008e24 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008f34:	4914      	ldr	r1, [pc, #80]	; (8008f88 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008f36:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008f38:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008f3a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008f3c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008f3e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008f40:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008f44:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008f46:	bf38      	it	cc
 8008f48:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008f4a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008f4e:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008f50:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008f52:	f001 fa13 	bl	800a37c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008f56:	0763      	lsls	r3, r4, #29
 8008f58:	d00a      	beq.n	8008f70 <pvPortMalloc+0x104>
 8008f5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f5e:	f383 8811 	msr	BASEPRI, r3
 8008f62:	f3bf 8f6f 	isb	sy
 8008f66:	f3bf 8f4f 	dsb	sy
 8008f6a:	e7fe      	b.n	8008f6a <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008f6c:	2400      	movs	r4, #0
 8008f6e:	e7f0      	b.n	8008f52 <pvPortMalloc+0xe6>
}
 8008f70:	4620      	mov	r0, r4
 8008f72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008f76:	bf00      	nop
 8008f78:	2000516c 	.word	0x2000516c
 8008f7c:	20015170 	.word	0x20015170
 8008f80:	20005170 	.word	0x20005170
 8008f84:	2001517c 	.word	0x2001517c
 8008f88:	20015178 	.word	0x20015178
 8008f8c:	20015174 	.word	0x20015174

08008f90 <vPortFree>:
{
 8008f90:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008f92:	4604      	mov	r4, r0
 8008f94:	b370      	cbz	r0, 8008ff4 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008f96:	4a18      	ldr	r2, [pc, #96]	; (8008ff8 <vPortFree+0x68>)
 8008f98:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008f9c:	6812      	ldr	r2, [r2, #0]
 8008f9e:	4213      	tst	r3, r2
 8008fa0:	d108      	bne.n	8008fb4 <vPortFree+0x24>
 8008fa2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fa6:	f383 8811 	msr	BASEPRI, r3
 8008faa:	f3bf 8f6f 	isb	sy
 8008fae:	f3bf 8f4f 	dsb	sy
 8008fb2:	e7fe      	b.n	8008fb2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008fb4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008fb8:	b141      	cbz	r1, 8008fcc <vPortFree+0x3c>
 8008fba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fbe:	f383 8811 	msr	BASEPRI, r3
 8008fc2:	f3bf 8f6f 	isb	sy
 8008fc6:	f3bf 8f4f 	dsb	sy
 8008fca:	e7fe      	b.n	8008fca <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008fcc:	ea23 0302 	bic.w	r3, r3, r2
 8008fd0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008fd4:	f001 f92e 	bl	800a234 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008fd8:	4a08      	ldr	r2, [pc, #32]	; (8008ffc <vPortFree+0x6c>)
 8008fda:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008fde:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008fe0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008fe4:	440b      	add	r3, r1
 8008fe6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008fe8:	f7ff ff1c 	bl	8008e24 <prvInsertBlockIntoFreeList>
}
 8008fec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008ff0:	f001 b9c4 	b.w	800a37c <xTaskResumeAll>
}
 8008ff4:	bd10      	pop	{r4, pc}
 8008ff6:	bf00      	nop
 8008ff8:	20015170 	.word	0x20015170
 8008ffc:	20015174 	.word	0x20015174

08009000 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009000:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8009004:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009008:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800900c:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800900e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8009010:	2300      	movs	r3, #0
 8009012:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8009014:	4770      	bx	lr

08009016 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8009016:	2300      	movs	r3, #0
 8009018:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800901a:	4770      	bx	lr

0800901c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800901c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800901e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8009020:	689a      	ldr	r2, [r3, #8]
 8009022:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8009024:	689a      	ldr	r2, [r3, #8]
 8009026:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8009028:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800902a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800902c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800902e:	3301      	adds	r3, #1
 8009030:	6003      	str	r3, [r0, #0]
}
 8009032:	4770      	bx	lr

08009034 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8009034:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8009036:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8009038:	1c63      	adds	r3, r4, #1
 800903a:	d10a      	bne.n	8009052 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800903c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800903e:	685a      	ldr	r2, [r3, #4]
 8009040:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8009042:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8009044:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8009046:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8009048:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800904a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800904c:	3301      	adds	r3, #1
 800904e:	6003      	str	r3, [r0, #0]
}
 8009050:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8009052:	f100 0208 	add.w	r2, r0, #8
 8009056:	4613      	mov	r3, r2
 8009058:	6852      	ldr	r2, [r2, #4]
 800905a:	6815      	ldr	r5, [r2, #0]
 800905c:	42a5      	cmp	r5, r4
 800905e:	d9fa      	bls.n	8009056 <vListInsert+0x22>
 8009060:	e7ed      	b.n	800903e <vListInsert+0xa>

08009062 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009062:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8009066:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009068:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800906a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800906c:	6859      	ldr	r1, [r3, #4]
 800906e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8009070:	bf08      	it	eq
 8009072:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8009074:	2200      	movs	r2, #0
 8009076:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8009078:	681a      	ldr	r2, [r3, #0]
 800907a:	3a01      	subs	r2, #1
 800907c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800907e:	6818      	ldr	r0, [r3, #0]
}
 8009080:	4770      	bx	lr
	...

08009084 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8009084:	4808      	ldr	r0, [pc, #32]	; (80090a8 <prvPortStartFirstTask+0x24>)
 8009086:	6800      	ldr	r0, [r0, #0]
 8009088:	6800      	ldr	r0, [r0, #0]
 800908a:	f380 8808 	msr	MSP, r0
 800908e:	f04f 0000 	mov.w	r0, #0
 8009092:	f380 8814 	msr	CONTROL, r0
 8009096:	b662      	cpsie	i
 8009098:	b661      	cpsie	f
 800909a:	f3bf 8f4f 	dsb	sy
 800909e:	f3bf 8f6f 	isb	sy
 80090a2:	df00      	svc	0
 80090a4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80090a6:	0000      	.short	0x0000
 80090a8:	e000ed08 	.word	0xe000ed08

080090ac <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80090ac:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80090bc <vPortEnableVFP+0x10>
 80090b0:	6801      	ldr	r1, [r0, #0]
 80090b2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80090b6:	6001      	str	r1, [r0, #0]
 80090b8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80090ba:	0000      	.short	0x0000
 80090bc:	e000ed88 	.word	0xe000ed88

080090c0 <prvTaskExitError>:
{
 80090c0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80090c2:	2300      	movs	r3, #0
 80090c4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80090c6:	4b0d      	ldr	r3, [pc, #52]	; (80090fc <prvTaskExitError+0x3c>)
 80090c8:	681b      	ldr	r3, [r3, #0]
 80090ca:	3301      	adds	r3, #1
 80090cc:	d008      	beq.n	80090e0 <prvTaskExitError+0x20>
 80090ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090d2:	f383 8811 	msr	BASEPRI, r3
 80090d6:	f3bf 8f6f 	isb	sy
 80090da:	f3bf 8f4f 	dsb	sy
 80090de:	e7fe      	b.n	80090de <prvTaskExitError+0x1e>
 80090e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090e4:	f383 8811 	msr	BASEPRI, r3
 80090e8:	f3bf 8f6f 	isb	sy
 80090ec:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80090f0:	9b01      	ldr	r3, [sp, #4]
 80090f2:	2b00      	cmp	r3, #0
 80090f4:	d0fc      	beq.n	80090f0 <prvTaskExitError+0x30>
}
 80090f6:	b002      	add	sp, #8
 80090f8:	4770      	bx	lr
 80090fa:	bf00      	nop
 80090fc:	20000088 	.word	0x20000088

08009100 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8009100:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8009104:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8009108:	4b07      	ldr	r3, [pc, #28]	; (8009128 <pxPortInitialiseStack+0x28>)
 800910a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800910e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009112:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009116:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800911a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800911e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8009122:	3844      	subs	r0, #68	; 0x44
 8009124:	4770      	bx	lr
 8009126:	bf00      	nop
 8009128:	080090c1 	.word	0x080090c1
 800912c:	00000000 	.word	0x00000000

08009130 <SVC_Handler>:
	__asm volatile (
 8009130:	4b07      	ldr	r3, [pc, #28]	; (8009150 <pxCurrentTCBConst2>)
 8009132:	6819      	ldr	r1, [r3, #0]
 8009134:	6808      	ldr	r0, [r1, #0]
 8009136:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800913a:	f380 8809 	msr	PSP, r0
 800913e:	f3bf 8f6f 	isb	sy
 8009142:	f04f 0000 	mov.w	r0, #0
 8009146:	f380 8811 	msr	BASEPRI, r0
 800914a:	4770      	bx	lr
 800914c:	f3af 8000 	nop.w

08009150 <pxCurrentTCBConst2>:
 8009150:	200151cc 	.word	0x200151cc

08009154 <vPortEnterCritical>:
 8009154:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009158:	f383 8811 	msr	BASEPRI, r3
 800915c:	f3bf 8f6f 	isb	sy
 8009160:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8009164:	4a0a      	ldr	r2, [pc, #40]	; (8009190 <vPortEnterCritical+0x3c>)
 8009166:	6813      	ldr	r3, [r2, #0]
 8009168:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800916a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800916c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800916e:	d10e      	bne.n	800918e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8009170:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009174:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8009178:	b2db      	uxtb	r3, r3
 800917a:	b143      	cbz	r3, 800918e <vPortEnterCritical+0x3a>
 800917c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009180:	f383 8811 	msr	BASEPRI, r3
 8009184:	f3bf 8f6f 	isb	sy
 8009188:	f3bf 8f4f 	dsb	sy
 800918c:	e7fe      	b.n	800918c <vPortEnterCritical+0x38>
}
 800918e:	4770      	bx	lr
 8009190:	20000088 	.word	0x20000088

08009194 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8009194:	4a08      	ldr	r2, [pc, #32]	; (80091b8 <vPortExitCritical+0x24>)
 8009196:	6813      	ldr	r3, [r2, #0]
 8009198:	b943      	cbnz	r3, 80091ac <vPortExitCritical+0x18>
 800919a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800919e:	f383 8811 	msr	BASEPRI, r3
 80091a2:	f3bf 8f6f 	isb	sy
 80091a6:	f3bf 8f4f 	dsb	sy
 80091aa:	e7fe      	b.n	80091aa <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80091ac:	3b01      	subs	r3, #1
 80091ae:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80091b0:	b90b      	cbnz	r3, 80091b6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80091b2:	f383 8811 	msr	BASEPRI, r3
}
 80091b6:	4770      	bx	lr
 80091b8:	20000088 	.word	0x20000088
 80091bc:	00000000 	.word	0x00000000

080091c0 <PendSV_Handler>:
	__asm volatile
 80091c0:	f3ef 8009 	mrs	r0, PSP
 80091c4:	f3bf 8f6f 	isb	sy
 80091c8:	4b15      	ldr	r3, [pc, #84]	; (8009220 <pxCurrentTCBConst>)
 80091ca:	681a      	ldr	r2, [r3, #0]
 80091cc:	f01e 0f10 	tst.w	lr, #16
 80091d0:	bf08      	it	eq
 80091d2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80091d6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80091da:	6010      	str	r0, [r2, #0]
 80091dc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80091e0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80091e4:	f380 8811 	msr	BASEPRI, r0
 80091e8:	f3bf 8f4f 	dsb	sy
 80091ec:	f3bf 8f6f 	isb	sy
 80091f0:	f001 f95c 	bl	800a4ac <vTaskSwitchContext>
 80091f4:	f04f 0000 	mov.w	r0, #0
 80091f8:	f380 8811 	msr	BASEPRI, r0
 80091fc:	bc09      	pop	{r0, r3}
 80091fe:	6819      	ldr	r1, [r3, #0]
 8009200:	6808      	ldr	r0, [r1, #0]
 8009202:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009206:	f01e 0f10 	tst.w	lr, #16
 800920a:	bf08      	it	eq
 800920c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8009210:	f380 8809 	msr	PSP, r0
 8009214:	f3bf 8f6f 	isb	sy
 8009218:	4770      	bx	lr
 800921a:	bf00      	nop
 800921c:	f3af 8000 	nop.w

08009220 <pxCurrentTCBConst>:
 8009220:	200151cc 	.word	0x200151cc

08009224 <SysTick_Handler>:
{
 8009224:	b508      	push	{r3, lr}
	__asm volatile
 8009226:	f04f 0350 	mov.w	r3, #80	; 0x50
 800922a:	f383 8811 	msr	BASEPRI, r3
 800922e:	f3bf 8f6f 	isb	sy
 8009232:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8009236:	f001 f80b 	bl	800a250 <xTaskIncrementTick>
 800923a:	b128      	cbz	r0, 8009248 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800923c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009240:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009244:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8009248:	2300      	movs	r3, #0
 800924a:	f383 8811 	msr	BASEPRI, r3
}
 800924e:	bd08      	pop	{r3, pc}

08009250 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8009250:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8009254:	2300      	movs	r3, #0
 8009256:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8009258:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800925a:	4b05      	ldr	r3, [pc, #20]	; (8009270 <vPortSetupTimerInterrupt+0x20>)
 800925c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009260:	681b      	ldr	r3, [r3, #0]
 8009262:	fbb3 f3f1 	udiv	r3, r3, r1
 8009266:	3b01      	subs	r3, #1
 8009268:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800926a:	2307      	movs	r3, #7
 800926c:	6113      	str	r3, [r2, #16]
}
 800926e:	4770      	bx	lr
 8009270:	2000007c 	.word	0x2000007c

08009274 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8009274:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8009278:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800927a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800927e:	4a3a      	ldr	r2, [pc, #232]	; (8009368 <xPortStartScheduler+0xf4>)
 8009280:	4291      	cmp	r1, r2
 8009282:	d108      	bne.n	8009296 <xPortStartScheduler+0x22>
	__asm volatile
 8009284:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009288:	f383 8811 	msr	BASEPRI, r3
 800928c:	f3bf 8f6f 	isb	sy
 8009290:	f3bf 8f4f 	dsb	sy
 8009294:	e7fe      	b.n	8009294 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8009296:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800929a:	4b34      	ldr	r3, [pc, #208]	; (800936c <xPortStartScheduler+0xf8>)
 800929c:	429a      	cmp	r2, r3
 800929e:	d108      	bne.n	80092b2 <xPortStartScheduler+0x3e>
 80092a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092a4:	f383 8811 	msr	BASEPRI, r3
 80092a8:	f3bf 8f6f 	isb	sy
 80092ac:	f3bf 8f4f 	dsb	sy
 80092b0:	e7fe      	b.n	80092b0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80092b2:	4b2f      	ldr	r3, [pc, #188]	; (8009370 <xPortStartScheduler+0xfc>)
 80092b4:	781a      	ldrb	r2, [r3, #0]
 80092b6:	b2d2      	uxtb	r2, r2
 80092b8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80092ba:	22ff      	movs	r2, #255	; 0xff
 80092bc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80092be:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80092c0:	4a2c      	ldr	r2, [pc, #176]	; (8009374 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80092c2:	b2db      	uxtb	r3, r3
 80092c4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80092c8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80092cc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80092d0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80092d2:	4a29      	ldr	r2, [pc, #164]	; (8009378 <xPortStartScheduler+0x104>)
 80092d4:	2307      	movs	r3, #7
 80092d6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80092d8:	2100      	movs	r1, #0
 80092da:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80092de:	0600      	lsls	r0, r0, #24
 80092e0:	f103 34ff 	add.w	r4, r3, #4294967295
 80092e4:	d40c      	bmi.n	8009300 <xPortStartScheduler+0x8c>
 80092e6:	b111      	cbz	r1, 80092ee <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80092e8:	2b03      	cmp	r3, #3
 80092ea:	6013      	str	r3, [r2, #0]
 80092ec:	d011      	beq.n	8009312 <xPortStartScheduler+0x9e>
 80092ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092f2:	f383 8811 	msr	BASEPRI, r3
 80092f6:	f3bf 8f6f 	isb	sy
 80092fa:	f3bf 8f4f 	dsb	sy
 80092fe:	e7fe      	b.n	80092fe <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8009300:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009304:	005b      	lsls	r3, r3, #1
 8009306:	b2db      	uxtb	r3, r3
 8009308:	f88d 3003 	strb.w	r3, [sp, #3]
 800930c:	2101      	movs	r1, #1
 800930e:	4623      	mov	r3, r4
 8009310:	e7e3      	b.n	80092da <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8009312:	f44f 7340 	mov.w	r3, #768	; 0x300
 8009316:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009318:	9b01      	ldr	r3, [sp, #4]
 800931a:	4a15      	ldr	r2, [pc, #84]	; (8009370 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800931c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009320:	b2db      	uxtb	r3, r3
 8009322:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8009324:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009328:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800932c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8009330:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009334:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8009338:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800933c:	f7ff ff88 	bl	8009250 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8009340:	4b0e      	ldr	r3, [pc, #56]	; (800937c <xPortStartScheduler+0x108>)
 8009342:	2500      	movs	r5, #0
 8009344:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8009346:	f7ff feb1 	bl	80090ac <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800934a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800934e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8009352:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8009356:	f7ff fe95 	bl	8009084 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800935a:	f001 f8a7 	bl	800a4ac <vTaskSwitchContext>
	prvTaskExitError();
 800935e:	f7ff feaf 	bl	80090c0 <prvTaskExitError>
}
 8009362:	4628      	mov	r0, r5
 8009364:	b003      	add	sp, #12
 8009366:	bd30      	pop	{r4, r5, pc}
 8009368:	410fc271 	.word	0x410fc271
 800936c:	410fc270 	.word	0x410fc270
 8009370:	e000e400 	.word	0xe000e400
 8009374:	20015184 	.word	0x20015184
 8009378:	20015188 	.word	0x20015188
 800937c:	20000088 	.word	0x20000088

08009380 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8009380:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8009384:	2b0f      	cmp	r3, #15
 8009386:	d90e      	bls.n	80093a6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8009388:	4a11      	ldr	r2, [pc, #68]	; (80093d0 <vPortValidateInterruptPriority+0x50>)
 800938a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800938c:	4a11      	ldr	r2, [pc, #68]	; (80093d4 <vPortValidateInterruptPriority+0x54>)
 800938e:	7812      	ldrb	r2, [r2, #0]
 8009390:	429a      	cmp	r2, r3
 8009392:	d908      	bls.n	80093a6 <vPortValidateInterruptPriority+0x26>
 8009394:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009398:	f383 8811 	msr	BASEPRI, r3
 800939c:	f3bf 8f6f 	isb	sy
 80093a0:	f3bf 8f4f 	dsb	sy
 80093a4:	e7fe      	b.n	80093a4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80093a6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80093aa:	4a0b      	ldr	r2, [pc, #44]	; (80093d8 <vPortValidateInterruptPriority+0x58>)
 80093ac:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80093b0:	6812      	ldr	r2, [r2, #0]
 80093b2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80093b6:	4293      	cmp	r3, r2
 80093b8:	d908      	bls.n	80093cc <vPortValidateInterruptPriority+0x4c>
 80093ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093be:	f383 8811 	msr	BASEPRI, r3
 80093c2:	f3bf 8f6f 	isb	sy
 80093c6:	f3bf 8f4f 	dsb	sy
 80093ca:	e7fe      	b.n	80093ca <vPortValidateInterruptPriority+0x4a>
	}
 80093cc:	4770      	bx	lr
 80093ce:	bf00      	nop
 80093d0:	e000e3f0 	.word	0xe000e3f0
 80093d4:	20015184 	.word	0x20015184
 80093d8:	20015188 	.word	0x20015188

080093dc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80093dc:	b510      	push	{r4, lr}
 80093de:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80093e0:	f7ff feb8 	bl	8009154 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80093e4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80093e6:	f7ff fed5 	bl	8009194 <vPortExitCritical>

	return xReturn;
}
 80093ea:	fab4 f084 	clz	r0, r4
 80093ee:	0940      	lsrs	r0, r0, #5
 80093f0:	bd10      	pop	{r4, pc}

080093f2 <prvCopyDataToQueue>:
{
 80093f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80093f4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80093f6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80093f8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80093fa:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80093fc:	b952      	cbnz	r2, 8009414 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80093fe:	6807      	ldr	r7, [r0, #0]
 8009400:	bb47      	cbnz	r7, 8009454 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009402:	6880      	ldr	r0, [r0, #8]
 8009404:	f001 f9ae 	bl	800a764 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009408:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800940a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800940c:	3601      	adds	r6, #1
 800940e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8009410:	4628      	mov	r0, r5
 8009412:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8009414:	b965      	cbnz	r5, 8009430 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009416:	6840      	ldr	r0, [r0, #4]
 8009418:	f017 fdea 	bl	8020ff0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800941c:	6863      	ldr	r3, [r4, #4]
 800941e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009420:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009422:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009424:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009426:	4293      	cmp	r3, r2
 8009428:	d3f0      	bcc.n	800940c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800942a:	6823      	ldr	r3, [r4, #0]
 800942c:	6063      	str	r3, [r4, #4]
 800942e:	e7ed      	b.n	800940c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009430:	68c0      	ldr	r0, [r0, #12]
 8009432:	f017 fddd 	bl	8020ff0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009436:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009438:	68e3      	ldr	r3, [r4, #12]
 800943a:	4251      	negs	r1, r2
 800943c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800943e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009440:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009442:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009444:	bf3e      	ittt	cc
 8009446:	68a3      	ldrcc	r3, [r4, #8]
 8009448:	185b      	addcc	r3, r3, r1
 800944a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800944c:	2d02      	cmp	r5, #2
 800944e:	d101      	bne.n	8009454 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009450:	b116      	cbz	r6, 8009458 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8009452:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8009454:	2500      	movs	r5, #0
 8009456:	e7d9      	b.n	800940c <prvCopyDataToQueue+0x1a>
 8009458:	4635      	mov	r5, r6
 800945a:	e7d7      	b.n	800940c <prvCopyDataToQueue+0x1a>

0800945c <prvCopyDataFromQueue>:
{
 800945c:	4603      	mov	r3, r0
 800945e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009460:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8009462:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009464:	b16a      	cbz	r2, 8009482 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009466:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009468:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800946a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800946c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800946e:	bf28      	it	cs
 8009470:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009472:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009474:	bf28      	it	cs
 8009476:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009478:	68d9      	ldr	r1, [r3, #12]
}
 800947a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800947e:	f017 bdb7 	b.w	8020ff0 <memcpy>
}
 8009482:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009486:	4770      	bx	lr

08009488 <prvUnlockQueue>:
{
 8009488:	b570      	push	{r4, r5, r6, lr}
 800948a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800948c:	f7ff fe62 	bl	8009154 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8009490:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009494:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8009498:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800949a:	2d00      	cmp	r5, #0
 800949c:	dc14      	bgt.n	80094c8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800949e:	23ff      	movs	r3, #255	; 0xff
 80094a0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80094a4:	f7ff fe76 	bl	8009194 <vPortExitCritical>
	taskENTER_CRITICAL();
 80094a8:	f7ff fe54 	bl	8009154 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80094ac:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80094b0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80094b4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80094b6:	2d00      	cmp	r5, #0
 80094b8:	dc12      	bgt.n	80094e0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80094ba:	23ff      	movs	r3, #255	; 0xff
 80094bc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80094c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80094c4:	f7ff be66 	b.w	8009194 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80094c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80094ca:	2b00      	cmp	r3, #0
 80094cc:	d0e7      	beq.n	800949e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80094ce:	4630      	mov	r0, r6
 80094d0:	f001 f864 	bl	800a59c <xTaskRemoveFromEventList>
 80094d4:	b108      	cbz	r0, 80094da <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80094d6:	f001 f8ed 	bl	800a6b4 <vTaskMissedYield>
			--cTxLock;
 80094da:	3d01      	subs	r5, #1
 80094dc:	b26d      	sxtb	r5, r5
 80094de:	e7dc      	b.n	800949a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80094e0:	6923      	ldr	r3, [r4, #16]
 80094e2:	2b00      	cmp	r3, #0
 80094e4:	d0e9      	beq.n	80094ba <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80094e6:	4630      	mov	r0, r6
 80094e8:	f001 f858 	bl	800a59c <xTaskRemoveFromEventList>
 80094ec:	b108      	cbz	r0, 80094f2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80094ee:	f001 f8e1 	bl	800a6b4 <vTaskMissedYield>
				--cRxLock;
 80094f2:	3d01      	subs	r5, #1
 80094f4:	b26d      	sxtb	r5, r5
 80094f6:	e7de      	b.n	80094b6 <prvUnlockQueue+0x2e>

080094f8 <xQueueGenericReset>:
{
 80094f8:	b538      	push	{r3, r4, r5, lr}
 80094fa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80094fc:	4604      	mov	r4, r0
 80094fe:	b940      	cbnz	r0, 8009512 <xQueueGenericReset+0x1a>
 8009500:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009504:	f383 8811 	msr	BASEPRI, r3
 8009508:	f3bf 8f6f 	isb	sy
 800950c:	f3bf 8f4f 	dsb	sy
 8009510:	e7fe      	b.n	8009510 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009512:	f7ff fe1f 	bl	8009154 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009516:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800951a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800951c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800951e:	434b      	muls	r3, r1
 8009520:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009522:	1a5b      	subs	r3, r3, r1
 8009524:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009526:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009528:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800952a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800952c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800952e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009530:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009534:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009538:	b9a5      	cbnz	r5, 8009564 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800953a:	6923      	ldr	r3, [r4, #16]
 800953c:	b173      	cbz	r3, 800955c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800953e:	f104 0010 	add.w	r0, r4, #16
 8009542:	f001 f82b 	bl	800a59c <xTaskRemoveFromEventList>
 8009546:	b148      	cbz	r0, 800955c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009548:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800954c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009550:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009554:	f3bf 8f4f 	dsb	sy
 8009558:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800955c:	f7ff fe1a 	bl	8009194 <vPortExitCritical>
}
 8009560:	2001      	movs	r0, #1
 8009562:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009564:	f104 0010 	add.w	r0, r4, #16
 8009568:	f7ff fd4a 	bl	8009000 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800956c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009570:	f7ff fd46 	bl	8009000 <vListInitialise>
 8009574:	e7f2      	b.n	800955c <xQueueGenericReset+0x64>

08009576 <xQueueGenericCreateStatic>:
	{
 8009576:	b513      	push	{r0, r1, r4, lr}
 8009578:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800957a:	b940      	cbnz	r0, 800958e <xQueueGenericCreateStatic+0x18>
 800957c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009580:	f383 8811 	msr	BASEPRI, r3
 8009584:	f3bf 8f6f 	isb	sy
 8009588:	f3bf 8f4f 	dsb	sy
 800958c:	e7fe      	b.n	800958c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800958e:	b943      	cbnz	r3, 80095a2 <xQueueGenericCreateStatic+0x2c>
 8009590:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009594:	f383 8811 	msr	BASEPRI, r3
 8009598:	f3bf 8f6f 	isb	sy
 800959c:	f3bf 8f4f 	dsb	sy
 80095a0:	e7fe      	b.n	80095a0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80095a2:	b14a      	cbz	r2, 80095b8 <xQueueGenericCreateStatic+0x42>
 80095a4:	b991      	cbnz	r1, 80095cc <xQueueGenericCreateStatic+0x56>
 80095a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095aa:	f383 8811 	msr	BASEPRI, r3
 80095ae:	f3bf 8f6f 	isb	sy
 80095b2:	f3bf 8f4f 	dsb	sy
 80095b6:	e7fe      	b.n	80095b6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80095b8:	b141      	cbz	r1, 80095cc <xQueueGenericCreateStatic+0x56>
 80095ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095be:	f383 8811 	msr	BASEPRI, r3
 80095c2:	f3bf 8f6f 	isb	sy
 80095c6:	f3bf 8f4f 	dsb	sy
 80095ca:	e7fe      	b.n	80095ca <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80095cc:	2350      	movs	r3, #80	; 0x50
 80095ce:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80095d0:	9b01      	ldr	r3, [sp, #4]
 80095d2:	2b50      	cmp	r3, #80	; 0x50
 80095d4:	d008      	beq.n	80095e8 <xQueueGenericCreateStatic+0x72>
 80095d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095da:	f383 8811 	msr	BASEPRI, r3
 80095de:	f3bf 8f6f 	isb	sy
 80095e2:	f3bf 8f4f 	dsb	sy
 80095e6:	e7fe      	b.n	80095e6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80095e8:	2900      	cmp	r1, #0
 80095ea:	bf08      	it	eq
 80095ec:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80095ee:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80095f0:	6022      	str	r2, [r4, #0]
 80095f2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80095f4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80095f8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80095fc:	4619      	mov	r1, r3
 80095fe:	4620      	mov	r0, r4
 8009600:	f7ff ff7a 	bl	80094f8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009604:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009608:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800960c:	4620      	mov	r0, r4
 800960e:	b002      	add	sp, #8
 8009610:	bd10      	pop	{r4, pc}

08009612 <xQueueGenericCreate>:
	{
 8009612:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009614:	460d      	mov	r5, r1
 8009616:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009618:	4606      	mov	r6, r0
 800961a:	b940      	cbnz	r0, 800962e <xQueueGenericCreate+0x1c>
 800961c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009620:	f383 8811 	msr	BASEPRI, r3
 8009624:	f3bf 8f6f 	isb	sy
 8009628:	f3bf 8f4f 	dsb	sy
 800962c:	e7fe      	b.n	800962c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800962e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009630:	3050      	adds	r0, #80	; 0x50
 8009632:	f7ff fc1b 	bl	8008e6c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009636:	4604      	mov	r4, r0
 8009638:	b170      	cbz	r0, 8009658 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800963a:	2300      	movs	r3, #0
 800963c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009640:	b165      	cbz	r5, 800965c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009642:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009646:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800964a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800964c:	2101      	movs	r1, #1
 800964e:	4620      	mov	r0, r4
 8009650:	f7ff ff52 	bl	80094f8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009654:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009658:	4620      	mov	r0, r4
 800965a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800965c:	4603      	mov	r3, r0
 800965e:	e7f2      	b.n	8009646 <xQueueGenericCreate+0x34>

08009660 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009660:	b513      	push	{r0, r1, r4, lr}
 8009662:	4613      	mov	r3, r2
 8009664:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009666:	b940      	cbnz	r0, 800967a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009668:	f04f 0350 	mov.w	r3, #80	; 0x50
 800966c:	f383 8811 	msr	BASEPRI, r3
 8009670:	f3bf 8f6f 	isb	sy
 8009674:	f3bf 8f4f 	dsb	sy
 8009678:	e7fe      	b.n	8009678 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800967a:	4288      	cmp	r0, r1
 800967c:	d208      	bcs.n	8009690 <xQueueCreateCountingSemaphoreStatic+0x30>
 800967e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009682:	f383 8811 	msr	BASEPRI, r3
 8009686:	f3bf 8f6f 	isb	sy
 800968a:	f3bf 8f4f 	dsb	sy
 800968e:	e7fe      	b.n	800968e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009690:	2202      	movs	r2, #2
 8009692:	9200      	str	r2, [sp, #0]
 8009694:	2200      	movs	r2, #0
 8009696:	4611      	mov	r1, r2
 8009698:	f7ff ff6d 	bl	8009576 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800969c:	b100      	cbz	r0, 80096a0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800969e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80096a0:	b002      	add	sp, #8
 80096a2:	bd10      	pop	{r4, pc}

080096a4 <xQueueCreateCountingSemaphore>:
	{
 80096a4:	b510      	push	{r4, lr}
 80096a6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80096a8:	b940      	cbnz	r0, 80096bc <xQueueCreateCountingSemaphore+0x18>
 80096aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096ae:	f383 8811 	msr	BASEPRI, r3
 80096b2:	f3bf 8f6f 	isb	sy
 80096b6:	f3bf 8f4f 	dsb	sy
 80096ba:	e7fe      	b.n	80096ba <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80096bc:	4288      	cmp	r0, r1
 80096be:	d208      	bcs.n	80096d2 <xQueueCreateCountingSemaphore+0x2e>
 80096c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096c4:	f383 8811 	msr	BASEPRI, r3
 80096c8:	f3bf 8f6f 	isb	sy
 80096cc:	f3bf 8f4f 	dsb	sy
 80096d0:	e7fe      	b.n	80096d0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80096d2:	2202      	movs	r2, #2
 80096d4:	2100      	movs	r1, #0
 80096d6:	f7ff ff9c 	bl	8009612 <xQueueGenericCreate>
		if( xHandle != NULL )
 80096da:	b100      	cbz	r0, 80096de <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80096dc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80096de:	bd10      	pop	{r4, pc}

080096e0 <xQueueGenericSend>:
{
 80096e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80096e4:	b085      	sub	sp, #20
 80096e6:	4688      	mov	r8, r1
 80096e8:	9201      	str	r2, [sp, #4]
 80096ea:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80096ec:	4604      	mov	r4, r0
 80096ee:	b940      	cbnz	r0, 8009702 <xQueueGenericSend+0x22>
 80096f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096f4:	f383 8811 	msr	BASEPRI, r3
 80096f8:	f3bf 8f6f 	isb	sy
 80096fc:	f3bf 8f4f 	dsb	sy
 8009700:	e7fe      	b.n	8009700 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009702:	b951      	cbnz	r1, 800971a <xQueueGenericSend+0x3a>
 8009704:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009706:	b143      	cbz	r3, 800971a <xQueueGenericSend+0x3a>
 8009708:	f04f 0350 	mov.w	r3, #80	; 0x50
 800970c:	f383 8811 	msr	BASEPRI, r3
 8009710:	f3bf 8f6f 	isb	sy
 8009714:	f3bf 8f4f 	dsb	sy
 8009718:	e7fe      	b.n	8009718 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800971a:	2f02      	cmp	r7, #2
 800971c:	d10b      	bne.n	8009736 <xQueueGenericSend+0x56>
 800971e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009720:	2b01      	cmp	r3, #1
 8009722:	d008      	beq.n	8009736 <xQueueGenericSend+0x56>
 8009724:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009728:	f383 8811 	msr	BASEPRI, r3
 800972c:	f3bf 8f6f 	isb	sy
 8009730:	f3bf 8f4f 	dsb	sy
 8009734:	e7fe      	b.n	8009734 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009736:	f000 ffc3 	bl	800a6c0 <xTaskGetSchedulerState>
 800973a:	4606      	mov	r6, r0
 800973c:	b950      	cbnz	r0, 8009754 <xQueueGenericSend+0x74>
 800973e:	9b01      	ldr	r3, [sp, #4]
 8009740:	b14b      	cbz	r3, 8009756 <xQueueGenericSend+0x76>
 8009742:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009746:	f383 8811 	msr	BASEPRI, r3
 800974a:	f3bf 8f6f 	isb	sy
 800974e:	f3bf 8f4f 	dsb	sy
 8009752:	e7fe      	b.n	8009752 <xQueueGenericSend+0x72>
 8009754:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009756:	f04f 0900 	mov.w	r9, #0
 800975a:	e037      	b.n	80097cc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800975c:	9d01      	ldr	r5, [sp, #4]
 800975e:	b91d      	cbnz	r5, 8009768 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009760:	f7ff fd18 	bl	8009194 <vPortExitCritical>
			return errQUEUE_FULL;
 8009764:	2000      	movs	r0, #0
 8009766:	e052      	b.n	800980e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009768:	b916      	cbnz	r6, 8009770 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800976a:	a802      	add	r0, sp, #8
 800976c:	f000 ff5a 	bl	800a624 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009770:	f7ff fd10 	bl	8009194 <vPortExitCritical>
		vTaskSuspendAll();
 8009774:	f000 fd5e 	bl	800a234 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009778:	f7ff fcec 	bl	8009154 <vPortEnterCritical>
 800977c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009780:	2bff      	cmp	r3, #255	; 0xff
 8009782:	bf08      	it	eq
 8009784:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009788:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800978c:	2bff      	cmp	r3, #255	; 0xff
 800978e:	bf08      	it	eq
 8009790:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8009794:	f7ff fcfe 	bl	8009194 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009798:	a901      	add	r1, sp, #4
 800979a:	a802      	add	r0, sp, #8
 800979c:	f000 ff4e 	bl	800a63c <xTaskCheckForTimeOut>
 80097a0:	2800      	cmp	r0, #0
 80097a2:	d14a      	bne.n	800983a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80097a4:	f7ff fcd6 	bl	8009154 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80097a8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80097aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80097ac:	429a      	cmp	r2, r3
 80097ae:	d131      	bne.n	8009814 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80097b0:	f7ff fcf0 	bl	8009194 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80097b4:	9901      	ldr	r1, [sp, #4]
 80097b6:	f104 0010 	add.w	r0, r4, #16
 80097ba:	f000 feb7 	bl	800a52c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80097be:	4620      	mov	r0, r4
 80097c0:	f7ff fe62 	bl	8009488 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80097c4:	f000 fdda 	bl	800a37c <xTaskResumeAll>
 80097c8:	b360      	cbz	r0, 8009824 <xQueueGenericSend+0x144>
 80097ca:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80097cc:	f7ff fcc2 	bl	8009154 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80097d0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80097d2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80097d4:	429a      	cmp	r2, r3
 80097d6:	d301      	bcc.n	80097dc <xQueueGenericSend+0xfc>
 80097d8:	2f02      	cmp	r7, #2
 80097da:	d1bf      	bne.n	800975c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80097dc:	463a      	mov	r2, r7
 80097de:	4641      	mov	r1, r8
 80097e0:	4620      	mov	r0, r4
 80097e2:	f7ff fe06 	bl	80093f2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80097e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80097e8:	b11b      	cbz	r3, 80097f2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80097ea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80097ee:	f000 fed5 	bl	800a59c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80097f2:	b148      	cbz	r0, 8009808 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 80097f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80097f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80097fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009800:	f3bf 8f4f 	dsb	sy
 8009804:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009808:	f7ff fcc4 	bl	8009194 <vPortExitCritical>
				return pdPASS;
 800980c:	2001      	movs	r0, #1
}
 800980e:	b005      	add	sp, #20
 8009810:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009814:	f7ff fcbe 	bl	8009194 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009818:	4620      	mov	r0, r4
 800981a:	f7ff fe35 	bl	8009488 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800981e:	f000 fdad 	bl	800a37c <xTaskResumeAll>
 8009822:	e7d2      	b.n	80097ca <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009824:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009828:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800982c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009830:	f3bf 8f4f 	dsb	sy
 8009834:	f3bf 8f6f 	isb	sy
 8009838:	e7c7      	b.n	80097ca <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800983a:	4620      	mov	r0, r4
 800983c:	f7ff fe24 	bl	8009488 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009840:	f000 fd9c 	bl	800a37c <xTaskResumeAll>
 8009844:	e78e      	b.n	8009764 <xQueueGenericSend+0x84>

08009846 <xQueueGenericSendFromISR>:
{
 8009846:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800984a:	4689      	mov	r9, r1
 800984c:	4690      	mov	r8, r2
 800984e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009850:	4604      	mov	r4, r0
 8009852:	b940      	cbnz	r0, 8009866 <xQueueGenericSendFromISR+0x20>
 8009854:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009858:	f383 8811 	msr	BASEPRI, r3
 800985c:	f3bf 8f6f 	isb	sy
 8009860:	f3bf 8f4f 	dsb	sy
 8009864:	e7fe      	b.n	8009864 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009866:	b951      	cbnz	r1, 800987e <xQueueGenericSendFromISR+0x38>
 8009868:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800986a:	b143      	cbz	r3, 800987e <xQueueGenericSendFromISR+0x38>
 800986c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009870:	f383 8811 	msr	BASEPRI, r3
 8009874:	f3bf 8f6f 	isb	sy
 8009878:	f3bf 8f4f 	dsb	sy
 800987c:	e7fe      	b.n	800987c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800987e:	2f02      	cmp	r7, #2
 8009880:	d10b      	bne.n	800989a <xQueueGenericSendFromISR+0x54>
 8009882:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009884:	2b01      	cmp	r3, #1
 8009886:	d008      	beq.n	800989a <xQueueGenericSendFromISR+0x54>
 8009888:	f04f 0350 	mov.w	r3, #80	; 0x50
 800988c:	f383 8811 	msr	BASEPRI, r3
 8009890:	f3bf 8f6f 	isb	sy
 8009894:	f3bf 8f4f 	dsb	sy
 8009898:	e7fe      	b.n	8009898 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800989a:	f7ff fd71 	bl	8009380 <vPortValidateInterruptPriority>
	__asm volatile
 800989e:	f3ef 8611 	mrs	r6, BASEPRI
 80098a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098a6:	f383 8811 	msr	BASEPRI, r3
 80098aa:	f3bf 8f6f 	isb	sy
 80098ae:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80098b2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80098b4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80098b6:	429a      	cmp	r2, r3
 80098b8:	d301      	bcc.n	80098be <xQueueGenericSendFromISR+0x78>
 80098ba:	2f02      	cmp	r7, #2
 80098bc:	d122      	bne.n	8009904 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80098be:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80098c2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80098c4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80098c6:	4649      	mov	r1, r9
 80098c8:	4620      	mov	r0, r4
 80098ca:	f7ff fd92 	bl	80093f2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80098ce:	1c6b      	adds	r3, r5, #1
 80098d0:	d113      	bne.n	80098fa <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80098d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80098d4:	b90b      	cbnz	r3, 80098da <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80098d6:	2001      	movs	r0, #1
 80098d8:	e00b      	b.n	80098f2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80098da:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80098de:	f000 fe5d 	bl	800a59c <xTaskRemoveFromEventList>
 80098e2:	2800      	cmp	r0, #0
 80098e4:	d0f7      	beq.n	80098d6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80098e6:	f1b8 0f00 	cmp.w	r8, #0
 80098ea:	d0f4      	beq.n	80098d6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80098ec:	2001      	movs	r0, #1
 80098ee:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80098f2:	f386 8811 	msr	BASEPRI, r6
}
 80098f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80098fa:	3501      	adds	r5, #1
 80098fc:	b26d      	sxtb	r5, r5
 80098fe:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009902:	e7e8      	b.n	80098d6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009904:	2000      	movs	r0, #0
 8009906:	e7f4      	b.n	80098f2 <xQueueGenericSendFromISR+0xac>

08009908 <xQueueGiveFromISR>:
{
 8009908:	b570      	push	{r4, r5, r6, lr}
 800990a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800990c:	4604      	mov	r4, r0
 800990e:	b940      	cbnz	r0, 8009922 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009910:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009914:	f383 8811 	msr	BASEPRI, r3
 8009918:	f3bf 8f6f 	isb	sy
 800991c:	f3bf 8f4f 	dsb	sy
 8009920:	e7fe      	b.n	8009920 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009922:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009924:	b143      	cbz	r3, 8009938 <xQueueGiveFromISR+0x30>
 8009926:	f04f 0350 	mov.w	r3, #80	; 0x50
 800992a:	f383 8811 	msr	BASEPRI, r3
 800992e:	f3bf 8f6f 	isb	sy
 8009932:	f3bf 8f4f 	dsb	sy
 8009936:	e7fe      	b.n	8009936 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009938:	6803      	ldr	r3, [r0, #0]
 800993a:	b953      	cbnz	r3, 8009952 <xQueueGiveFromISR+0x4a>
 800993c:	6883      	ldr	r3, [r0, #8]
 800993e:	b143      	cbz	r3, 8009952 <xQueueGiveFromISR+0x4a>
 8009940:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009944:	f383 8811 	msr	BASEPRI, r3
 8009948:	f3bf 8f6f 	isb	sy
 800994c:	f3bf 8f4f 	dsb	sy
 8009950:	e7fe      	b.n	8009950 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009952:	f7ff fd15 	bl	8009380 <vPortValidateInterruptPriority>
	__asm volatile
 8009956:	f3ef 8611 	mrs	r6, BASEPRI
 800995a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800995e:	f383 8811 	msr	BASEPRI, r3
 8009962:	f3bf 8f6f 	isb	sy
 8009966:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800996a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800996c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800996e:	4293      	cmp	r3, r2
 8009970:	d91c      	bls.n	80099ac <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009972:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009976:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009978:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800997a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800997c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800997e:	d110      	bne.n	80099a2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009980:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009982:	b90b      	cbnz	r3, 8009988 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009984:	2001      	movs	r0, #1
 8009986:	e009      	b.n	800999c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009988:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800998c:	f000 fe06 	bl	800a59c <xTaskRemoveFromEventList>
 8009990:	2800      	cmp	r0, #0
 8009992:	d0f7      	beq.n	8009984 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009994:	2d00      	cmp	r5, #0
 8009996:	d0f5      	beq.n	8009984 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009998:	2001      	movs	r0, #1
 800999a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800999c:	f386 8811 	msr	BASEPRI, r6
}
 80099a0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80099a2:	3301      	adds	r3, #1
 80099a4:	b25b      	sxtb	r3, r3
 80099a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80099aa:	e7eb      	b.n	8009984 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80099ac:	2000      	movs	r0, #0
 80099ae:	e7f5      	b.n	800999c <xQueueGiveFromISR+0x94>

080099b0 <xQueueReceive>:
{
 80099b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80099b4:	460f      	mov	r7, r1
 80099b6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80099b8:	4604      	mov	r4, r0
 80099ba:	b940      	cbnz	r0, 80099ce <xQueueReceive+0x1e>
	__asm volatile
 80099bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099c0:	f383 8811 	msr	BASEPRI, r3
 80099c4:	f3bf 8f6f 	isb	sy
 80099c8:	f3bf 8f4f 	dsb	sy
 80099cc:	e7fe      	b.n	80099cc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80099ce:	b951      	cbnz	r1, 80099e6 <xQueueReceive+0x36>
 80099d0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80099d2:	b143      	cbz	r3, 80099e6 <xQueueReceive+0x36>
 80099d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099d8:	f383 8811 	msr	BASEPRI, r3
 80099dc:	f3bf 8f6f 	isb	sy
 80099e0:	f3bf 8f4f 	dsb	sy
 80099e4:	e7fe      	b.n	80099e4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80099e6:	f000 fe6b 	bl	800a6c0 <xTaskGetSchedulerState>
 80099ea:	4606      	mov	r6, r0
 80099ec:	b950      	cbnz	r0, 8009a04 <xQueueReceive+0x54>
 80099ee:	9b01      	ldr	r3, [sp, #4]
 80099f0:	b14b      	cbz	r3, 8009a06 <xQueueReceive+0x56>
 80099f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099f6:	f383 8811 	msr	BASEPRI, r3
 80099fa:	f3bf 8f6f 	isb	sy
 80099fe:	f3bf 8f4f 	dsb	sy
 8009a02:	e7fe      	b.n	8009a02 <xQueueReceive+0x52>
 8009a04:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009a06:	f04f 0800 	mov.w	r8, #0
 8009a0a:	e03d      	b.n	8009a88 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009a0c:	9d01      	ldr	r5, [sp, #4]
 8009a0e:	b91d      	cbnz	r5, 8009a18 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009a10:	f7ff fbc0 	bl	8009194 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009a14:	2000      	movs	r0, #0
 8009a16:	e056      	b.n	8009ac6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009a18:	b916      	cbnz	r6, 8009a20 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009a1a:	a802      	add	r0, sp, #8
 8009a1c:	f000 fe02 	bl	800a624 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009a20:	f7ff fbb8 	bl	8009194 <vPortExitCritical>
		vTaskSuspendAll();
 8009a24:	f000 fc06 	bl	800a234 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009a28:	f7ff fb94 	bl	8009154 <vPortEnterCritical>
 8009a2c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009a30:	2bff      	cmp	r3, #255	; 0xff
 8009a32:	bf08      	it	eq
 8009a34:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009a38:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009a3c:	2bff      	cmp	r3, #255	; 0xff
 8009a3e:	bf08      	it	eq
 8009a40:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009a44:	f7ff fba6 	bl	8009194 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009a48:	a901      	add	r1, sp, #4
 8009a4a:	a802      	add	r0, sp, #8
 8009a4c:	f000 fdf6 	bl	800a63c <xTaskCheckForTimeOut>
 8009a50:	2800      	cmp	r0, #0
 8009a52:	d141      	bne.n	8009ad8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009a54:	4620      	mov	r0, r4
 8009a56:	f7ff fcc1 	bl	80093dc <prvIsQueueEmpty>
 8009a5a:	b3b8      	cbz	r0, 8009acc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009a5c:	9901      	ldr	r1, [sp, #4]
 8009a5e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009a62:	f000 fd63 	bl	800a52c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009a66:	4620      	mov	r0, r4
 8009a68:	f7ff fd0e 	bl	8009488 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009a6c:	f000 fc86 	bl	800a37c <xTaskResumeAll>
 8009a70:	b948      	cbnz	r0, 8009a86 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009a72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a7e:	f3bf 8f4f 	dsb	sy
 8009a82:	f3bf 8f6f 	isb	sy
 8009a86:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009a88:	f7ff fb64 	bl	8009154 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009a8c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009a8e:	2d00      	cmp	r5, #0
 8009a90:	d0bc      	beq.n	8009a0c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009a92:	4639      	mov	r1, r7
 8009a94:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009a96:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009a98:	f7ff fce0 	bl	800945c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009a9c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009a9e:	6923      	ldr	r3, [r4, #16]
 8009aa0:	b173      	cbz	r3, 8009ac0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009aa2:	f104 0010 	add.w	r0, r4, #16
 8009aa6:	f000 fd79 	bl	800a59c <xTaskRemoveFromEventList>
 8009aaa:	b148      	cbz	r0, 8009ac0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8009aac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009ab0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ab4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009ab8:	f3bf 8f4f 	dsb	sy
 8009abc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009ac0:	f7ff fb68 	bl	8009194 <vPortExitCritical>
				return pdPASS;
 8009ac4:	2001      	movs	r0, #1
}
 8009ac6:	b004      	add	sp, #16
 8009ac8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8009acc:	4620      	mov	r0, r4
 8009ace:	f7ff fcdb 	bl	8009488 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009ad2:	f000 fc53 	bl	800a37c <xTaskResumeAll>
 8009ad6:	e7d6      	b.n	8009a86 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009ad8:	4620      	mov	r0, r4
 8009ada:	f7ff fcd5 	bl	8009488 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009ade:	f000 fc4d 	bl	800a37c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009ae2:	4620      	mov	r0, r4
 8009ae4:	f7ff fc7a 	bl	80093dc <prvIsQueueEmpty>
 8009ae8:	2800      	cmp	r0, #0
 8009aea:	d0cc      	beq.n	8009a86 <xQueueReceive+0xd6>
 8009aec:	e792      	b.n	8009a14 <xQueueReceive+0x64>

08009aee <xQueueSemaphoreTake>:
{
 8009aee:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009af0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009af2:	4604      	mov	r4, r0
{
 8009af4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009af6:	b940      	cbnz	r0, 8009b0a <xQueueSemaphoreTake+0x1c>
 8009af8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009afc:	f383 8811 	msr	BASEPRI, r3
 8009b00:	f3bf 8f6f 	isb	sy
 8009b04:	f3bf 8f4f 	dsb	sy
 8009b08:	e7fe      	b.n	8009b08 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009b0a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8009b0c:	b145      	cbz	r5, 8009b20 <xQueueSemaphoreTake+0x32>
 8009b0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b12:	f383 8811 	msr	BASEPRI, r3
 8009b16:	f3bf 8f6f 	isb	sy
 8009b1a:	f3bf 8f4f 	dsb	sy
 8009b1e:	e7fe      	b.n	8009b1e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009b20:	f000 fdce 	bl	800a6c0 <xTaskGetSchedulerState>
 8009b24:	4606      	mov	r6, r0
 8009b26:	b950      	cbnz	r0, 8009b3e <xQueueSemaphoreTake+0x50>
 8009b28:	9b01      	ldr	r3, [sp, #4]
 8009b2a:	b15b      	cbz	r3, 8009b44 <xQueueSemaphoreTake+0x56>
 8009b2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b30:	f383 8811 	msr	BASEPRI, r3
 8009b34:	f3bf 8f6f 	isb	sy
 8009b38:	f3bf 8f4f 	dsb	sy
 8009b3c:	e7fe      	b.n	8009b3c <xQueueSemaphoreTake+0x4e>
 8009b3e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009b40:	2700      	movs	r7, #0
 8009b42:	e053      	b.n	8009bec <xQueueSemaphoreTake+0xfe>
 8009b44:	4605      	mov	r5, r0
 8009b46:	e7fb      	b.n	8009b40 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009b48:	9b01      	ldr	r3, [sp, #4]
 8009b4a:	b963      	cbnz	r3, 8009b66 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8009b4c:	b145      	cbz	r5, 8009b60 <xQueueSemaphoreTake+0x72>
 8009b4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b52:	f383 8811 	msr	BASEPRI, r3
 8009b56:	f3bf 8f6f 	isb	sy
 8009b5a:	f3bf 8f4f 	dsb	sy
 8009b5e:	e7fe      	b.n	8009b5e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009b60:	f7ff fb18 	bl	8009194 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009b64:	e062      	b.n	8009c2c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009b66:	b916      	cbnz	r6, 8009b6e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009b68:	a802      	add	r0, sp, #8
 8009b6a:	f000 fd5b 	bl	800a624 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009b6e:	f7ff fb11 	bl	8009194 <vPortExitCritical>
		vTaskSuspendAll();
 8009b72:	f000 fb5f 	bl	800a234 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009b76:	f7ff faed 	bl	8009154 <vPortEnterCritical>
 8009b7a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009b7e:	2bff      	cmp	r3, #255	; 0xff
 8009b80:	bf08      	it	eq
 8009b82:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009b86:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009b8a:	2bff      	cmp	r3, #255	; 0xff
 8009b8c:	bf08      	it	eq
 8009b8e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009b92:	f7ff faff 	bl	8009194 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009b96:	a901      	add	r1, sp, #4
 8009b98:	a802      	add	r0, sp, #8
 8009b9a:	f000 fd4f 	bl	800a63c <xTaskCheckForTimeOut>
 8009b9e:	2800      	cmp	r0, #0
 8009ba0:	d14d      	bne.n	8009c3e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009ba2:	4620      	mov	r0, r4
 8009ba4:	f7ff fc1a 	bl	80093dc <prvIsQueueEmpty>
 8009ba8:	2800      	cmp	r0, #0
 8009baa:	d042      	beq.n	8009c32 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009bac:	6823      	ldr	r3, [r4, #0]
 8009bae:	b93b      	cbnz	r3, 8009bc0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8009bb0:	f7ff fad0 	bl	8009154 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009bb4:	68a0      	ldr	r0, [r4, #8]
 8009bb6:	f000 fd93 	bl	800a6e0 <xTaskPriorityInherit>
 8009bba:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8009bbc:	f7ff faea 	bl	8009194 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009bc0:	9901      	ldr	r1, [sp, #4]
 8009bc2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009bc6:	f000 fcb1 	bl	800a52c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009bca:	4620      	mov	r0, r4
 8009bcc:	f7ff fc5c 	bl	8009488 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009bd0:	f000 fbd4 	bl	800a37c <xTaskResumeAll>
 8009bd4:	b948      	cbnz	r0, 8009bea <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009bd6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009bda:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009bde:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009be2:	f3bf 8f4f 	dsb	sy
 8009be6:	f3bf 8f6f 	isb	sy
 8009bea:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009bec:	f7ff fab2 	bl	8009154 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009bf0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009bf2:	2b00      	cmp	r3, #0
 8009bf4:	d0a8      	beq.n	8009b48 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009bf6:	3b01      	subs	r3, #1
 8009bf8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009bfa:	6823      	ldr	r3, [r4, #0]
 8009bfc:	b913      	cbnz	r3, 8009c04 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8009bfe:	f000 fe47 	bl	800a890 <pvTaskIncrementMutexHeldCount>
 8009c02:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009c04:	6923      	ldr	r3, [r4, #16]
 8009c06:	b173      	cbz	r3, 8009c26 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009c08:	f104 0010 	add.w	r0, r4, #16
 8009c0c:	f000 fcc6 	bl	800a59c <xTaskRemoveFromEventList>
 8009c10:	b148      	cbz	r0, 8009c26 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009c12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009c16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009c1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009c1e:	f3bf 8f4f 	dsb	sy
 8009c22:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009c26:	f7ff fab5 	bl	8009194 <vPortExitCritical>
				return pdPASS;
 8009c2a:	2501      	movs	r5, #1
}
 8009c2c:	4628      	mov	r0, r5
 8009c2e:	b005      	add	sp, #20
 8009c30:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009c32:	4620      	mov	r0, r4
 8009c34:	f7ff fc28 	bl	8009488 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009c38:	f000 fba0 	bl	800a37c <xTaskResumeAll>
 8009c3c:	e7d5      	b.n	8009bea <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8009c3e:	4620      	mov	r0, r4
 8009c40:	f7ff fc22 	bl	8009488 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009c44:	f000 fb9a 	bl	800a37c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009c48:	4620      	mov	r0, r4
 8009c4a:	f7ff fbc7 	bl	80093dc <prvIsQueueEmpty>
 8009c4e:	2800      	cmp	r0, #0
 8009c50:	d0cb      	beq.n	8009bea <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009c52:	2d00      	cmp	r5, #0
 8009c54:	d0ea      	beq.n	8009c2c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009c56:	f7ff fa7d 	bl	8009154 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8009c5a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009c5c:	b119      	cbz	r1, 8009c66 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009c5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009c60:	6819      	ldr	r1, [r3, #0]
 8009c62:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009c66:	68a0      	ldr	r0, [r4, #8]
 8009c68:	f000 fdc0 	bl	800a7ec <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8009c6c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8009c6e:	f7ff fa91 	bl	8009194 <vPortExitCritical>
 8009c72:	e7db      	b.n	8009c2c <xQueueSemaphoreTake+0x13e>

08009c74 <xQueueReceiveFromISR>:
{
 8009c74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009c78:	4689      	mov	r9, r1
 8009c7a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8009c7c:	4605      	mov	r5, r0
 8009c7e:	b940      	cbnz	r0, 8009c92 <xQueueReceiveFromISR+0x1e>
 8009c80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c84:	f383 8811 	msr	BASEPRI, r3
 8009c88:	f3bf 8f6f 	isb	sy
 8009c8c:	f3bf 8f4f 	dsb	sy
 8009c90:	e7fe      	b.n	8009c90 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009c92:	b951      	cbnz	r1, 8009caa <xQueueReceiveFromISR+0x36>
 8009c94:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009c96:	b143      	cbz	r3, 8009caa <xQueueReceiveFromISR+0x36>
 8009c98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c9c:	f383 8811 	msr	BASEPRI, r3
 8009ca0:	f3bf 8f6f 	isb	sy
 8009ca4:	f3bf 8f4f 	dsb	sy
 8009ca8:	e7fe      	b.n	8009ca8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009caa:	f7ff fb69 	bl	8009380 <vPortValidateInterruptPriority>
	__asm volatile
 8009cae:	f3ef 8711 	mrs	r7, BASEPRI
 8009cb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cb6:	f383 8811 	msr	BASEPRI, r3
 8009cba:	f3bf 8f6f 	isb	sy
 8009cbe:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009cc2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009cc4:	b31c      	cbz	r4, 8009d0e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009cc6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009cca:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8009ccc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009cce:	4628      	mov	r0, r5
 8009cd0:	f7ff fbc4 	bl	800945c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009cd4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009cd6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009cd8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8009cda:	d113      	bne.n	8009d04 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009cdc:	692b      	ldr	r3, [r5, #16]
 8009cde:	b90b      	cbnz	r3, 8009ce4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009ce0:	2001      	movs	r0, #1
 8009ce2:	e00b      	b.n	8009cfc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009ce4:	f105 0010 	add.w	r0, r5, #16
 8009ce8:	f000 fc58 	bl	800a59c <xTaskRemoveFromEventList>
 8009cec:	2800      	cmp	r0, #0
 8009cee:	d0f7      	beq.n	8009ce0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009cf0:	f1b8 0f00 	cmp.w	r8, #0
 8009cf4:	d0f4      	beq.n	8009ce0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009cf6:	2001      	movs	r0, #1
 8009cf8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009cfc:	f387 8811 	msr	BASEPRI, r7
}
 8009d00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009d04:	3601      	adds	r6, #1
 8009d06:	b276      	sxtb	r6, r6
 8009d08:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8009d0c:	e7e8      	b.n	8009ce0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8009d0e:	4620      	mov	r0, r4
 8009d10:	e7f4      	b.n	8009cfc <xQueueReceiveFromISR+0x88>
	...

08009d14 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009d14:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009d16:	4a07      	ldr	r2, [pc, #28]	; (8009d34 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009d18:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009d1a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8009d1e:	b92c      	cbnz	r4, 8009d2c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009d20:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009d24:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009d28:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8009d2a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009d2c:	3301      	adds	r3, #1
 8009d2e:	2b08      	cmp	r3, #8
 8009d30:	d1f3      	bne.n	8009d1a <vQueueAddToRegistry+0x6>
 8009d32:	e7fa      	b.n	8009d2a <vQueueAddToRegistry+0x16>
 8009d34:	2001518c 	.word	0x2001518c

08009d38 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009d38:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009d3a:	4a08      	ldr	r2, [pc, #32]	; (8009d5c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009d3c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009d3e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009d42:	684c      	ldr	r4, [r1, #4]
 8009d44:	4284      	cmp	r4, r0
 8009d46:	d104      	bne.n	8009d52 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009d48:	2000      	movs	r0, #0
 8009d4a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009d4e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009d50:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009d52:	3301      	adds	r3, #1
 8009d54:	2b08      	cmp	r3, #8
 8009d56:	d1f2      	bne.n	8009d3e <vQueueUnregisterQueue+0x6>
 8009d58:	e7fa      	b.n	8009d50 <vQueueUnregisterQueue+0x18>
 8009d5a:	bf00      	nop
 8009d5c:	2001518c 	.word	0x2001518c

08009d60 <vQueueDelete>:
{
 8009d60:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009d62:	4604      	mov	r4, r0
 8009d64:	b940      	cbnz	r0, 8009d78 <vQueueDelete+0x18>
	__asm volatile
 8009d66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d6a:	f383 8811 	msr	BASEPRI, r3
 8009d6e:	f3bf 8f6f 	isb	sy
 8009d72:	f3bf 8f4f 	dsb	sy
 8009d76:	e7fe      	b.n	8009d76 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009d78:	f7ff ffde 	bl	8009d38 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009d7c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009d80:	b923      	cbnz	r3, 8009d8c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009d82:	4620      	mov	r0, r4
}
 8009d84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009d88:	f7ff b902 	b.w	8008f90 <vPortFree>
}
 8009d8c:	bd10      	pop	{r4, pc}

08009d8e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8009d8e:	b570      	push	{r4, r5, r6, lr}
 8009d90:	4604      	mov	r4, r0
 8009d92:	460d      	mov	r5, r1
 8009d94:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009d96:	f7ff f9dd 	bl	8009154 <vPortEnterCritical>
 8009d9a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009d9e:	2bff      	cmp	r3, #255	; 0xff
 8009da0:	bf04      	itt	eq
 8009da2:	2300      	moveq	r3, #0
 8009da4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009da8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009dac:	2bff      	cmp	r3, #255	; 0xff
 8009dae:	bf04      	itt	eq
 8009db0:	2300      	moveq	r3, #0
 8009db2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009db6:	f7ff f9ed 	bl	8009194 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009dba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009dbc:	b92b      	cbnz	r3, 8009dca <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009dbe:	4632      	mov	r2, r6
 8009dc0:	4629      	mov	r1, r5
 8009dc2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009dc6:	f000 fbcb 	bl	800a560 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8009dca:	4620      	mov	r0, r4
	}
 8009dcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009dd0:	f7ff bb5a 	b.w	8009488 <prvUnlockQueue>

08009dd4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009dd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009dd8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8009dda:	f7ff f9bb 	bl	8009154 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8009dde:	4b30      	ldr	r3, [pc, #192]	; (8009ea0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009de0:	4e30      	ldr	r6, [pc, #192]	; (8009ea4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009de2:	681a      	ldr	r2, [r3, #0]
 8009de4:	4f30      	ldr	r7, [pc, #192]	; (8009ea8 <prvAddNewTaskToReadyList+0xd4>)
 8009de6:	3201      	adds	r2, #1
 8009de8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8009dea:	6835      	ldr	r5, [r6, #0]
 8009dec:	2d00      	cmp	r5, #0
 8009dee:	d14b      	bne.n	8009e88 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009df0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009df2:	681b      	ldr	r3, [r3, #0]
 8009df4:	2b01      	cmp	r3, #1
 8009df6:	d11f      	bne.n	8009e38 <prvAddNewTaskToReadyList+0x64>
 8009df8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009dfa:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009dfc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009dfe:	f7ff f8ff 	bl	8009000 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009e02:	2d38      	cmp	r5, #56	; 0x38
 8009e04:	f108 0814 	add.w	r8, r8, #20
 8009e08:	d1f7      	bne.n	8009dfa <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009e0a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009ed0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8009e0e:	4d27      	ldr	r5, [pc, #156]	; (8009eac <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009e10:	4640      	mov	r0, r8
 8009e12:	f7ff f8f5 	bl	8009000 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009e16:	4628      	mov	r0, r5
 8009e18:	f7ff f8f2 	bl	8009000 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009e1c:	4824      	ldr	r0, [pc, #144]	; (8009eb0 <prvAddNewTaskToReadyList+0xdc>)
 8009e1e:	f7ff f8ef 	bl	8009000 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009e22:	4824      	ldr	r0, [pc, #144]	; (8009eb4 <prvAddNewTaskToReadyList+0xe0>)
 8009e24:	f7ff f8ec 	bl	8009000 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009e28:	4823      	ldr	r0, [pc, #140]	; (8009eb8 <prvAddNewTaskToReadyList+0xe4>)
 8009e2a:	f7ff f8e9 	bl	8009000 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009e2e:	4b23      	ldr	r3, [pc, #140]	; (8009ebc <prvAddNewTaskToReadyList+0xe8>)
 8009e30:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009e34:	4b22      	ldr	r3, [pc, #136]	; (8009ec0 <prvAddNewTaskToReadyList+0xec>)
 8009e36:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009e38:	4a22      	ldr	r2, [pc, #136]	; (8009ec4 <prvAddNewTaskToReadyList+0xf0>)
 8009e3a:	6813      	ldr	r3, [r2, #0]
 8009e3c:	3301      	adds	r3, #1
 8009e3e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009e40:	4a21      	ldr	r2, [pc, #132]	; (8009ec8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009e42:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009e44:	6811      	ldr	r1, [r2, #0]
 8009e46:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009e48:	2014      	movs	r0, #20
 8009e4a:	428b      	cmp	r3, r1
 8009e4c:	fb00 7003 	mla	r0, r0, r3, r7
 8009e50:	f104 0104 	add.w	r1, r4, #4
 8009e54:	bf88      	it	hi
 8009e56:	6013      	strhi	r3, [r2, #0]
 8009e58:	f7ff f8e0 	bl	800901c <vListInsertEnd>
	taskEXIT_CRITICAL();
 8009e5c:	f7ff f99a 	bl	8009194 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009e60:	4b1a      	ldr	r3, [pc, #104]	; (8009ecc <prvAddNewTaskToReadyList+0xf8>)
 8009e62:	681b      	ldr	r3, [r3, #0]
 8009e64:	b173      	cbz	r3, 8009e84 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009e66:	6833      	ldr	r3, [r6, #0]
 8009e68:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009e6a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009e6c:	429a      	cmp	r2, r3
 8009e6e:	d209      	bcs.n	8009e84 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009e70:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e74:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e78:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e7c:	f3bf 8f4f 	dsb	sy
 8009e80:	f3bf 8f6f 	isb	sy
}
 8009e84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009e88:	4b10      	ldr	r3, [pc, #64]	; (8009ecc <prvAddNewTaskToReadyList+0xf8>)
 8009e8a:	681b      	ldr	r3, [r3, #0]
 8009e8c:	2b00      	cmp	r3, #0
 8009e8e:	d1d3      	bne.n	8009e38 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009e90:	6833      	ldr	r3, [r6, #0]
 8009e92:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009e94:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009e96:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009e98:	bf98      	it	ls
 8009e9a:	6034      	strls	r4, [r6, #0]
 8009e9c:	e7cc      	b.n	8009e38 <prvAddNewTaskToReadyList+0x64>
 8009e9e:	bf00      	nop
 8009ea0:	20015638 	.word	0x20015638
 8009ea4:	200151cc 	.word	0x200151cc
 8009ea8:	200151d8 	.word	0x200151d8
 8009eac:	20015664 	.word	0x20015664
 8009eb0:	20015680 	.word	0x20015680
 8009eb4:	200156ac 	.word	0x200156ac
 8009eb8:	20015698 	.word	0x20015698
 8009ebc:	200151d0 	.word	0x200151d0
 8009ec0:	200151d4 	.word	0x200151d4
 8009ec4:	20015648 	.word	0x20015648
 8009ec8:	2001564c 	.word	0x2001564c
 8009ecc:	20015694 	.word	0x20015694
 8009ed0:	20015650 	.word	0x20015650

08009ed4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009ed4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009ed6:	4b15      	ldr	r3, [pc, #84]	; (8009f2c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009ed8:	4e15      	ldr	r6, [pc, #84]	; (8009f30 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8009eda:	681d      	ldr	r5, [r3, #0]
{
 8009edc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009ede:	6830      	ldr	r0, [r6, #0]
 8009ee0:	3004      	adds	r0, #4
{
 8009ee2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009ee4:	f7ff f8bd 	bl	8009062 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009ee8:	1c63      	adds	r3, r4, #1
 8009eea:	d107      	bne.n	8009efc <prvAddCurrentTaskToDelayedList+0x28>
 8009eec:	b137      	cbz	r7, 8009efc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009eee:	6831      	ldr	r1, [r6, #0]
 8009ef0:	4810      	ldr	r0, [pc, #64]	; (8009f34 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009ef2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009ef6:	3104      	adds	r1, #4
 8009ef8:	f7ff b890 	b.w	800901c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009efc:	6833      	ldr	r3, [r6, #0]
 8009efe:	192c      	adds	r4, r5, r4
 8009f00:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009f02:	d307      	bcc.n	8009f14 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009f04:	4b0c      	ldr	r3, [pc, #48]	; (8009f38 <prvAddCurrentTaskToDelayedList+0x64>)
 8009f06:	6818      	ldr	r0, [r3, #0]
 8009f08:	6831      	ldr	r1, [r6, #0]
}
 8009f0a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009f0e:	3104      	adds	r1, #4
 8009f10:	f7ff b890 	b.w	8009034 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009f14:	4b09      	ldr	r3, [pc, #36]	; (8009f3c <prvAddCurrentTaskToDelayedList+0x68>)
 8009f16:	6818      	ldr	r0, [r3, #0]
 8009f18:	6831      	ldr	r1, [r6, #0]
 8009f1a:	3104      	adds	r1, #4
 8009f1c:	f7ff f88a 	bl	8009034 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009f20:	4b07      	ldr	r3, [pc, #28]	; (8009f40 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009f22:	681a      	ldr	r2, [r3, #0]
 8009f24:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009f26:	bf88      	it	hi
 8009f28:	601c      	strhi	r4, [r3, #0]
}
 8009f2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009f2c:	200156c0 	.word	0x200156c0
 8009f30:	200151cc 	.word	0x200151cc
 8009f34:	20015698 	.word	0x20015698
 8009f38:	200151d4 	.word	0x200151d4
 8009f3c:	200151d0 	.word	0x200151d0
 8009f40:	20015678 	.word	0x20015678

08009f44 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009f44:	4a06      	ldr	r2, [pc, #24]	; (8009f60 <prvResetNextTaskUnblockTime+0x1c>)
 8009f46:	6813      	ldr	r3, [r2, #0]
 8009f48:	6819      	ldr	r1, [r3, #0]
 8009f4a:	4b06      	ldr	r3, [pc, #24]	; (8009f64 <prvResetNextTaskUnblockTime+0x20>)
 8009f4c:	b919      	cbnz	r1, 8009f56 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009f4e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009f52:	601a      	str	r2, [r3, #0]
}
 8009f54:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f56:	6812      	ldr	r2, [r2, #0]
 8009f58:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009f5a:	68d2      	ldr	r2, [r2, #12]
 8009f5c:	6852      	ldr	r2, [r2, #4]
 8009f5e:	e7f8      	b.n	8009f52 <prvResetNextTaskUnblockTime+0xe>
 8009f60:	200151d0 	.word	0x200151d0
 8009f64:	20015678 	.word	0x20015678

08009f68 <prvDeleteTCB>:
	{
 8009f68:	b510      	push	{r4, lr}
 8009f6a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009f6c:	3058      	adds	r0, #88	; 0x58
 8009f6e:	f017 fc31 	bl	80217d4 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009f72:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009f76:	b93b      	cbnz	r3, 8009f88 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009f78:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009f7a:	f7ff f809 	bl	8008f90 <vPortFree>
				vPortFree( pxTCB );
 8009f7e:	4620      	mov	r0, r4
	}
 8009f80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009f84:	f7ff b804 	b.w	8008f90 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009f88:	2b01      	cmp	r3, #1
 8009f8a:	d0f8      	beq.n	8009f7e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009f8c:	2b02      	cmp	r3, #2
 8009f8e:	d008      	beq.n	8009fa2 <prvDeleteTCB+0x3a>
 8009f90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f94:	f383 8811 	msr	BASEPRI, r3
 8009f98:	f3bf 8f6f 	isb	sy
 8009f9c:	f3bf 8f4f 	dsb	sy
 8009fa0:	e7fe      	b.n	8009fa0 <prvDeleteTCB+0x38>
	}
 8009fa2:	bd10      	pop	{r4, pc}

08009fa4 <prvIdleTask>:
{
 8009fa4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009fa6:	4c13      	ldr	r4, [pc, #76]	; (8009ff4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fa8:	4f13      	ldr	r7, [pc, #76]	; (8009ff8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009faa:	4d14      	ldr	r5, [pc, #80]	; (8009ffc <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009fac:	6823      	ldr	r3, [r4, #0]
 8009fae:	b973      	cbnz	r3, 8009fce <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009fb0:	4b13      	ldr	r3, [pc, #76]	; (800a000 <prvIdleTask+0x5c>)
 8009fb2:	681b      	ldr	r3, [r3, #0]
 8009fb4:	2b01      	cmp	r3, #1
 8009fb6:	d9f8      	bls.n	8009faa <prvIdleTask+0x6>
				taskYIELD();
 8009fb8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009fbc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009fc0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009fc4:	f3bf 8f4f 	dsb	sy
 8009fc8:	f3bf 8f6f 	isb	sy
 8009fcc:	e7ed      	b.n	8009faa <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009fce:	f7ff f8c1 	bl	8009154 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fd2:	68fb      	ldr	r3, [r7, #12]
 8009fd4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009fd6:	1d30      	adds	r0, r6, #4
 8009fd8:	f7ff f843 	bl	8009062 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009fdc:	682b      	ldr	r3, [r5, #0]
 8009fde:	3b01      	subs	r3, #1
 8009fe0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009fe2:	6823      	ldr	r3, [r4, #0]
 8009fe4:	3b01      	subs	r3, #1
 8009fe6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009fe8:	f7ff f8d4 	bl	8009194 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009fec:	4630      	mov	r0, r6
 8009fee:	f7ff ffbb 	bl	8009f68 <prvDeleteTCB>
 8009ff2:	e7db      	b.n	8009fac <prvIdleTask+0x8>
 8009ff4:	2001563c 	.word	0x2001563c
 8009ff8:	200156ac 	.word	0x200156ac
 8009ffc:	20015638 	.word	0x20015638
 800a000:	200151d8 	.word	0x200151d8

0800a004 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a004:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a008:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a00c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800a010:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a012:	4606      	mov	r6, r0
 800a014:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a016:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a018:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a01a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a01c:	f016 fff6 	bl	802100c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800a020:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a022:	f1a9 0904 	sub.w	r9, r9, #4
 800a026:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800a028:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800a02c:	2d00      	cmp	r5, #0
 800a02e:	d042      	beq.n	800a0b6 <prvInitialiseNewTask.constprop.0+0xb2>
 800a030:	1e6b      	subs	r3, r5, #1
 800a032:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800a036:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800a038:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a03c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800a040:	b108      	cbz	r0, 800a046 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800a042:	42ab      	cmp	r3, r5
 800a044:	d1f8      	bne.n	800a038 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800a046:	2300      	movs	r3, #0
 800a048:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800a04c:	9d08      	ldr	r5, [sp, #32]
 800a04e:	2d37      	cmp	r5, #55	; 0x37
 800a050:	bf28      	it	cs
 800a052:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800a054:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800a058:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800a05a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a05c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800a05e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a062:	f7fe ffd8 	bl	8009016 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a066:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800a06a:	f104 0018 	add.w	r0, r4, #24
 800a06e:	f7fe ffd2 	bl	8009016 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800a072:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800a076:	2260      	movs	r2, #96	; 0x60
 800a078:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800a07a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a07c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800a07e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800a080:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800a084:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800a088:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800a08c:	f016 ffbe 	bl	802100c <memset>
 800a090:	4b0a      	ldr	r3, [pc, #40]	; (800a0bc <prvInitialiseNewTask.constprop.0+0xb8>)
 800a092:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a094:	4b0a      	ldr	r3, [pc, #40]	; (800a0c0 <prvInitialiseNewTask.constprop.0+0xbc>)
 800a096:	6623      	str	r3, [r4, #96]	; 0x60
 800a098:	4b0a      	ldr	r3, [pc, #40]	; (800a0c4 <prvInitialiseNewTask.constprop.0+0xc0>)
 800a09a:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a09c:	463a      	mov	r2, r7
 800a09e:	4631      	mov	r1, r6
 800a0a0:	4648      	mov	r0, r9
 800a0a2:	f7ff f82d 	bl	8009100 <pxPortInitialiseStack>
 800a0a6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800a0a8:	f1b8 0f00 	cmp.w	r8, #0
 800a0ac:	d001      	beq.n	800a0b2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800a0ae:	f8c8 4000 	str.w	r4, [r8]
}
 800a0b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800a0b6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800a0ba:	e7c7      	b.n	800a04c <prvInitialiseNewTask.constprop.0+0x48>
 800a0bc:	08024c00 	.word	0x08024c00
 800a0c0:	08024c20 	.word	0x08024c20
 800a0c4:	08024be0 	.word	0x08024be0

0800a0c8 <xTaskCreateStatic>:
	{
 800a0c8:	b570      	push	{r4, r5, r6, lr}
 800a0ca:	b086      	sub	sp, #24
 800a0cc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800a0d0:	b945      	cbnz	r5, 800a0e4 <xTaskCreateStatic+0x1c>
 800a0d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0d6:	f383 8811 	msr	BASEPRI, r3
 800a0da:	f3bf 8f6f 	isb	sy
 800a0de:	f3bf 8f4f 	dsb	sy
 800a0e2:	e7fe      	b.n	800a0e2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800a0e4:	b944      	cbnz	r4, 800a0f8 <xTaskCreateStatic+0x30>
 800a0e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0ea:	f383 8811 	msr	BASEPRI, r3
 800a0ee:	f3bf 8f6f 	isb	sy
 800a0f2:	f3bf 8f4f 	dsb	sy
 800a0f6:	e7fe      	b.n	800a0f6 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800a0f8:	26c0      	movs	r6, #192	; 0xc0
 800a0fa:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800a0fc:	9e05      	ldr	r6, [sp, #20]
 800a0fe:	2ec0      	cmp	r6, #192	; 0xc0
 800a100:	d008      	beq.n	800a114 <xTaskCreateStatic+0x4c>
 800a102:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a106:	f383 8811 	msr	BASEPRI, r3
 800a10a:	f3bf 8f6f 	isb	sy
 800a10e:	f3bf 8f4f 	dsb	sy
 800a112:	e7fe      	b.n	800a112 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800a114:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800a116:	2502      	movs	r5, #2
 800a118:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a11c:	ad04      	add	r5, sp, #16
 800a11e:	9501      	str	r5, [sp, #4]
 800a120:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800a122:	9402      	str	r4, [sp, #8]
 800a124:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800a126:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a128:	f7ff ff6c 	bl	800a004 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a12c:	4620      	mov	r0, r4
 800a12e:	f7ff fe51 	bl	8009dd4 <prvAddNewTaskToReadyList>
	}
 800a132:	9804      	ldr	r0, [sp, #16]
 800a134:	b006      	add	sp, #24
 800a136:	bd70      	pop	{r4, r5, r6, pc}

0800a138 <xTaskCreate>:
	{
 800a138:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a13c:	4607      	mov	r7, r0
 800a13e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a140:	0090      	lsls	r0, r2, #2
	{
 800a142:	4688      	mov	r8, r1
 800a144:	4616      	mov	r6, r2
 800a146:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a148:	f7fe fe90 	bl	8008e6c <pvPortMalloc>
			if( pxStack != NULL )
 800a14c:	4605      	mov	r5, r0
 800a14e:	b1e8      	cbz	r0, 800a18c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800a150:	20c0      	movs	r0, #192	; 0xc0
 800a152:	f7fe fe8b 	bl	8008e6c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800a156:	4604      	mov	r4, r0
 800a158:	b1a8      	cbz	r0, 800a186 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800a15a:	2300      	movs	r3, #0
 800a15c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a160:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800a162:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a164:	9301      	str	r3, [sp, #4]
 800a166:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a168:	9002      	str	r0, [sp, #8]
 800a16a:	9300      	str	r3, [sp, #0]
 800a16c:	4632      	mov	r2, r6
 800a16e:	464b      	mov	r3, r9
 800a170:	4641      	mov	r1, r8
 800a172:	4638      	mov	r0, r7
 800a174:	f7ff ff46 	bl	800a004 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a178:	4620      	mov	r0, r4
 800a17a:	f7ff fe2b 	bl	8009dd4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800a17e:	2001      	movs	r0, #1
	}
 800a180:	b005      	add	sp, #20
 800a182:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800a186:	4628      	mov	r0, r5
 800a188:	f7fe ff02 	bl	8008f90 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800a18c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800a190:	e7f6      	b.n	800a180 <xTaskCreate+0x48>
	...

0800a194 <vTaskStartScheduler>:
{
 800a194:	b510      	push	{r4, lr}
 800a196:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800a198:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a19a:	aa07      	add	r2, sp, #28
 800a19c:	a906      	add	r1, sp, #24
 800a19e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800a1a0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a1a4:	f7fe fe26 	bl	8008df4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800a1a8:	9b05      	ldr	r3, [sp, #20]
 800a1aa:	9302      	str	r3, [sp, #8]
 800a1ac:	9b06      	ldr	r3, [sp, #24]
 800a1ae:	9a07      	ldr	r2, [sp, #28]
 800a1b0:	4919      	ldr	r1, [pc, #100]	; (800a218 <vTaskStartScheduler+0x84>)
 800a1b2:	481a      	ldr	r0, [pc, #104]	; (800a21c <vTaskStartScheduler+0x88>)
 800a1b4:	e9cd 4300 	strd	r4, r3, [sp]
 800a1b8:	4623      	mov	r3, r4
 800a1ba:	f7ff ff85 	bl	800a0c8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800a1be:	b340      	cbz	r0, 800a212 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800a1c0:	f000 fbc4 	bl	800a94c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800a1c4:	2801      	cmp	r0, #1
 800a1c6:	d119      	bne.n	800a1fc <vTaskStartScheduler+0x68>
 800a1c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1cc:	f383 8811 	msr	BASEPRI, r3
 800a1d0:	f3bf 8f6f 	isb	sy
 800a1d4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a1d8:	4b11      	ldr	r3, [pc, #68]	; (800a220 <vTaskStartScheduler+0x8c>)
 800a1da:	4a12      	ldr	r2, [pc, #72]	; (800a224 <vTaskStartScheduler+0x90>)
 800a1dc:	681b      	ldr	r3, [r3, #0]
 800a1de:	3358      	adds	r3, #88	; 0x58
 800a1e0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800a1e2:	4b11      	ldr	r3, [pc, #68]	; (800a228 <vTaskStartScheduler+0x94>)
 800a1e4:	f04f 32ff 	mov.w	r2, #4294967295
 800a1e8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800a1ea:	4b10      	ldr	r3, [pc, #64]	; (800a22c <vTaskStartScheduler+0x98>)
 800a1ec:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800a1ee:	4b10      	ldr	r3, [pc, #64]	; (800a230 <vTaskStartScheduler+0x9c>)
 800a1f0:	601c      	str	r4, [r3, #0]
}
 800a1f2:	b008      	add	sp, #32
 800a1f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800a1f8:	f7ff b83c 	b.w	8009274 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800a1fc:	3001      	adds	r0, #1
 800a1fe:	d108      	bne.n	800a212 <vTaskStartScheduler+0x7e>
 800a200:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a204:	f383 8811 	msr	BASEPRI, r3
 800a208:	f3bf 8f6f 	isb	sy
 800a20c:	f3bf 8f4f 	dsb	sy
 800a210:	e7fe      	b.n	800a210 <vTaskStartScheduler+0x7c>
}
 800a212:	b008      	add	sp, #32
 800a214:	bd10      	pop	{r4, pc}
 800a216:	bf00      	nop
 800a218:	08023b9c 	.word	0x08023b9c
 800a21c:	08009fa5 	.word	0x08009fa5
 800a220:	200151cc 	.word	0x200151cc
 800a224:	20000104 	.word	0x20000104
 800a228:	20015678 	.word	0x20015678
 800a22c:	20015694 	.word	0x20015694
 800a230:	200156c0 	.word	0x200156c0

0800a234 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800a234:	4a02      	ldr	r2, [pc, #8]	; (800a240 <vTaskSuspendAll+0xc>)
 800a236:	6813      	ldr	r3, [r2, #0]
 800a238:	3301      	adds	r3, #1
 800a23a:	6013      	str	r3, [r2, #0]
}
 800a23c:	4770      	bx	lr
 800a23e:	bf00      	nop
 800a240:	20015644 	.word	0x20015644

0800a244 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800a244:	4b01      	ldr	r3, [pc, #4]	; (800a24c <xTaskGetTickCount+0x8>)
 800a246:	6818      	ldr	r0, [r3, #0]
}
 800a248:	4770      	bx	lr
 800a24a:	bf00      	nop
 800a24c:	200156c0 	.word	0x200156c0

0800a250 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a250:	4b3f      	ldr	r3, [pc, #252]	; (800a350 <xTaskIncrementTick+0x100>)
 800a252:	681b      	ldr	r3, [r3, #0]
{
 800a254:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a258:	2b00      	cmp	r3, #0
 800a25a:	d173      	bne.n	800a344 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800a25c:	4b3d      	ldr	r3, [pc, #244]	; (800a354 <xTaskIncrementTick+0x104>)
 800a25e:	681d      	ldr	r5, [r3, #0]
 800a260:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800a262:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800a264:	b9bd      	cbnz	r5, 800a296 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800a266:	4b3c      	ldr	r3, [pc, #240]	; (800a358 <xTaskIncrementTick+0x108>)
 800a268:	681a      	ldr	r2, [r3, #0]
 800a26a:	6812      	ldr	r2, [r2, #0]
 800a26c:	b142      	cbz	r2, 800a280 <xTaskIncrementTick+0x30>
 800a26e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a272:	f383 8811 	msr	BASEPRI, r3
 800a276:	f3bf 8f6f 	isb	sy
 800a27a:	f3bf 8f4f 	dsb	sy
 800a27e:	e7fe      	b.n	800a27e <xTaskIncrementTick+0x2e>
 800a280:	4a36      	ldr	r2, [pc, #216]	; (800a35c <xTaskIncrementTick+0x10c>)
 800a282:	6819      	ldr	r1, [r3, #0]
 800a284:	6810      	ldr	r0, [r2, #0]
 800a286:	6018      	str	r0, [r3, #0]
 800a288:	6011      	str	r1, [r2, #0]
 800a28a:	4a35      	ldr	r2, [pc, #212]	; (800a360 <xTaskIncrementTick+0x110>)
 800a28c:	6813      	ldr	r3, [r2, #0]
 800a28e:	3301      	adds	r3, #1
 800a290:	6013      	str	r3, [r2, #0]
 800a292:	f7ff fe57 	bl	8009f44 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a296:	4e33      	ldr	r6, [pc, #204]	; (800a364 <xTaskIncrementTick+0x114>)
 800a298:	4f33      	ldr	r7, [pc, #204]	; (800a368 <xTaskIncrementTick+0x118>)
 800a29a:	6833      	ldr	r3, [r6, #0]
 800a29c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800a374 <xTaskIncrementTick+0x124>
 800a2a0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 800a2a2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a2a6:	d911      	bls.n	800a2cc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800a2a8:	f8d8 3000 	ldr.w	r3, [r8]
 800a2ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a2ae:	2214      	movs	r2, #20
 800a2b0:	4353      	muls	r3, r2
 800a2b2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800a2b4:	2b02      	cmp	r3, #2
 800a2b6:	bf28      	it	cs
 800a2b8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 800a2ba:	4b2c      	ldr	r3, [pc, #176]	; (800a36c <xTaskIncrementTick+0x11c>)
 800a2bc:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 800a2be:	2b00      	cmp	r3, #0
}
 800a2c0:	bf0c      	ite	eq
 800a2c2:	4620      	moveq	r0, r4
 800a2c4:	2001      	movne	r0, #1
 800a2c6:	b003      	add	sp, #12
 800a2c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a2cc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800a358 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800a2d0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800a378 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a2d4:	f8d9 3000 	ldr.w	r3, [r9]
 800a2d8:	681b      	ldr	r3, [r3, #0]
 800a2da:	b91b      	cbnz	r3, 800a2e4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2dc:	f04f 33ff 	mov.w	r3, #4294967295
 800a2e0:	6033      	str	r3, [r6, #0]
					break;
 800a2e2:	e7e1      	b.n	800a2a8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a2e4:	f8d9 3000 	ldr.w	r3, [r9]
 800a2e8:	68db      	ldr	r3, [r3, #12]
 800a2ea:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800a2ee:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800a2f2:	4295      	cmp	r5, r2
 800a2f4:	d201      	bcs.n	800a2fa <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800a2f6:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800a2f8:	e7d6      	b.n	800a2a8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a2fa:	f10b 0104 	add.w	r1, fp, #4
 800a2fe:	4608      	mov	r0, r1
 800a300:	9101      	str	r1, [sp, #4]
 800a302:	f7fe feae 	bl	8009062 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800a306:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800a30a:	9901      	ldr	r1, [sp, #4]
 800a30c:	b122      	cbz	r2, 800a318 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a30e:	f10b 0018 	add.w	r0, fp, #24
 800a312:	f7fe fea6 	bl	8009062 <uxListRemove>
 800a316:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800a318:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800a31c:	f8da 2000 	ldr.w	r2, [sl]
 800a320:	2314      	movs	r3, #20
 800a322:	4290      	cmp	r0, r2
 800a324:	bf88      	it	hi
 800a326:	f8ca 0000 	strhi.w	r0, [sl]
 800a32a:	fb03 7000 	mla	r0, r3, r0, r7
 800a32e:	f7fe fe75 	bl	800901c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a332:	f8d8 1000 	ldr.w	r1, [r8]
 800a336:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800a33a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800a33c:	429a      	cmp	r2, r3
 800a33e:	bf28      	it	cs
 800a340:	2401      	movcs	r4, #1
 800a342:	e7c7      	b.n	800a2d4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 800a344:	4a0a      	ldr	r2, [pc, #40]	; (800a370 <xTaskIncrementTick+0x120>)
 800a346:	6813      	ldr	r3, [r2, #0]
 800a348:	3301      	adds	r3, #1
 800a34a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800a34c:	2400      	movs	r4, #0
 800a34e:	e7b4      	b.n	800a2ba <xTaskIncrementTick+0x6a>
 800a350:	20015644 	.word	0x20015644
 800a354:	200156c0 	.word	0x200156c0
 800a358:	200151d0 	.word	0x200151d0
 800a35c:	200151d4 	.word	0x200151d4
 800a360:	2001567c 	.word	0x2001567c
 800a364:	20015678 	.word	0x20015678
 800a368:	200151d8 	.word	0x200151d8
 800a36c:	200156c4 	.word	0x200156c4
 800a370:	20015640 	.word	0x20015640
 800a374:	200151cc 	.word	0x200151cc
 800a378:	2001564c 	.word	0x2001564c

0800a37c <xTaskResumeAll>:
{
 800a37c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800a37e:	4c31      	ldr	r4, [pc, #196]	; (800a444 <xTaskResumeAll+0xc8>)
 800a380:	6823      	ldr	r3, [r4, #0]
 800a382:	b943      	cbnz	r3, 800a396 <xTaskResumeAll+0x1a>
 800a384:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a388:	f383 8811 	msr	BASEPRI, r3
 800a38c:	f3bf 8f6f 	isb	sy
 800a390:	f3bf 8f4f 	dsb	sy
 800a394:	e7fe      	b.n	800a394 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800a396:	f7fe fedd 	bl	8009154 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800a39a:	6823      	ldr	r3, [r4, #0]
 800a39c:	3b01      	subs	r3, #1
 800a39e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a3a0:	6824      	ldr	r4, [r4, #0]
 800a3a2:	b12c      	cbz	r4, 800a3b0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800a3a4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a3a6:	f7fe fef5 	bl	8009194 <vPortExitCritical>
}
 800a3aa:	4620      	mov	r0, r4
 800a3ac:	b003      	add	sp, #12
 800a3ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a3b0:	4b25      	ldr	r3, [pc, #148]	; (800a448 <xTaskResumeAll+0xcc>)
 800a3b2:	681b      	ldr	r3, [r3, #0]
 800a3b4:	2b00      	cmp	r3, #0
 800a3b6:	d0f5      	beq.n	800a3a4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a3b8:	4d24      	ldr	r5, [pc, #144]	; (800a44c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800a3ba:	4e25      	ldr	r6, [pc, #148]	; (800a450 <xTaskResumeAll+0xd4>)
 800a3bc:	4f25      	ldr	r7, [pc, #148]	; (800a454 <xTaskResumeAll+0xd8>)
 800a3be:	e01e      	b.n	800a3fe <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a3c0:	68eb      	ldr	r3, [r5, #12]
 800a3c2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a3c4:	f104 0018 	add.w	r0, r4, #24
 800a3c8:	f7fe fe4b 	bl	8009062 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a3cc:	1d21      	adds	r1, r4, #4
 800a3ce:	4608      	mov	r0, r1
 800a3d0:	9101      	str	r1, [sp, #4]
 800a3d2:	f7fe fe46 	bl	8009062 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a3d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a3d8:	6832      	ldr	r2, [r6, #0]
 800a3da:	9901      	ldr	r1, [sp, #4]
 800a3dc:	2014      	movs	r0, #20
 800a3de:	4293      	cmp	r3, r2
 800a3e0:	fb00 7003 	mla	r0, r0, r3, r7
 800a3e4:	bf88      	it	hi
 800a3e6:	6033      	strhi	r3, [r6, #0]
 800a3e8:	f7fe fe18 	bl	800901c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a3ec:	4b1a      	ldr	r3, [pc, #104]	; (800a458 <xTaskResumeAll+0xdc>)
 800a3ee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a3f0:	681b      	ldr	r3, [r3, #0]
 800a3f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a3f4:	429a      	cmp	r2, r3
 800a3f6:	d302      	bcc.n	800a3fe <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800a3f8:	4b18      	ldr	r3, [pc, #96]	; (800a45c <xTaskResumeAll+0xe0>)
 800a3fa:	2201      	movs	r2, #1
 800a3fc:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a3fe:	682b      	ldr	r3, [r5, #0]
 800a400:	2b00      	cmp	r3, #0
 800a402:	d1dd      	bne.n	800a3c0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800a404:	b10c      	cbz	r4, 800a40a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800a406:	f7ff fd9d 	bl	8009f44 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800a40a:	4d15      	ldr	r5, [pc, #84]	; (800a460 <xTaskResumeAll+0xe4>)
 800a40c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800a40e:	b144      	cbz	r4, 800a422 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800a410:	4e12      	ldr	r6, [pc, #72]	; (800a45c <xTaskResumeAll+0xe0>)
 800a412:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800a414:	f7ff ff1c 	bl	800a250 <xTaskIncrementTick>
 800a418:	b100      	cbz	r0, 800a41c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800a41a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800a41c:	3c01      	subs	r4, #1
 800a41e:	d1f9      	bne.n	800a414 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 800a420:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800a422:	4b0e      	ldr	r3, [pc, #56]	; (800a45c <xTaskResumeAll+0xe0>)
 800a424:	681b      	ldr	r3, [r3, #0]
 800a426:	2b00      	cmp	r3, #0
 800a428:	d0bc      	beq.n	800a3a4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800a42a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a42e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a432:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a436:	f3bf 8f4f 	dsb	sy
 800a43a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800a43e:	2401      	movs	r4, #1
 800a440:	e7b1      	b.n	800a3a6 <xTaskResumeAll+0x2a>
 800a442:	bf00      	nop
 800a444:	20015644 	.word	0x20015644
 800a448:	20015638 	.word	0x20015638
 800a44c:	20015680 	.word	0x20015680
 800a450:	2001564c 	.word	0x2001564c
 800a454:	200151d8 	.word	0x200151d8
 800a458:	200151cc 	.word	0x200151cc
 800a45c:	200156c4 	.word	0x200156c4
 800a460:	20015640 	.word	0x20015640

0800a464 <vTaskDelay>:
	{
 800a464:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a466:	b950      	cbnz	r0, 800a47e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800a468:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a46c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a470:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a474:	f3bf 8f4f 	dsb	sy
 800a478:	f3bf 8f6f 	isb	sy
	}
 800a47c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800a47e:	4b0a      	ldr	r3, [pc, #40]	; (800a4a8 <vTaskDelay+0x44>)
 800a480:	6819      	ldr	r1, [r3, #0]
 800a482:	b141      	cbz	r1, 800a496 <vTaskDelay+0x32>
 800a484:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a488:	f383 8811 	msr	BASEPRI, r3
 800a48c:	f3bf 8f6f 	isb	sy
 800a490:	f3bf 8f4f 	dsb	sy
 800a494:	e7fe      	b.n	800a494 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800a496:	f7ff fecd 	bl	800a234 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a49a:	f7ff fd1b 	bl	8009ed4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800a49e:	f7ff ff6d 	bl	800a37c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800a4a2:	2800      	cmp	r0, #0
 800a4a4:	d0e0      	beq.n	800a468 <vTaskDelay+0x4>
 800a4a6:	e7e9      	b.n	800a47c <vTaskDelay+0x18>
 800a4a8:	20015644 	.word	0x20015644

0800a4ac <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a4ac:	4b19      	ldr	r3, [pc, #100]	; (800a514 <vTaskSwitchContext+0x68>)
 800a4ae:	681a      	ldr	r2, [r3, #0]
 800a4b0:	4b19      	ldr	r3, [pc, #100]	; (800a518 <vTaskSwitchContext+0x6c>)
{
 800a4b2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a4b4:	b112      	cbz	r2, 800a4bc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a4b6:	2201      	movs	r2, #1
 800a4b8:	601a      	str	r2, [r3, #0]
}
 800a4ba:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4bc:	4d17      	ldr	r5, [pc, #92]	; (800a51c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800a4be:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4c0:	682a      	ldr	r2, [r5, #0]
 800a4c2:	4917      	ldr	r1, [pc, #92]	; (800a520 <vTaskSwitchContext+0x74>)
 800a4c4:	2614      	movs	r6, #20
 800a4c6:	fb06 f302 	mul.w	r3, r6, r2
 800a4ca:	18c8      	adds	r0, r1, r3
 800a4cc:	58cc      	ldr	r4, [r1, r3]
 800a4ce:	b1ac      	cbz	r4, 800a4fc <vTaskSwitchContext+0x50>
 800a4d0:	6844      	ldr	r4, [r0, #4]
 800a4d2:	3308      	adds	r3, #8
 800a4d4:	6864      	ldr	r4, [r4, #4]
 800a4d6:	6044      	str	r4, [r0, #4]
 800a4d8:	440b      	add	r3, r1
 800a4da:	429c      	cmp	r4, r3
 800a4dc:	bf04      	itt	eq
 800a4de:	6863      	ldreq	r3, [r4, #4]
 800a4e0:	6043      	streq	r3, [r0, #4]
 800a4e2:	2314      	movs	r3, #20
 800a4e4:	fb03 1102 	mla	r1, r3, r2, r1
 800a4e8:	684b      	ldr	r3, [r1, #4]
 800a4ea:	68d9      	ldr	r1, [r3, #12]
 800a4ec:	4b0d      	ldr	r3, [pc, #52]	; (800a524 <vTaskSwitchContext+0x78>)
 800a4ee:	6019      	str	r1, [r3, #0]
 800a4f0:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a4f2:	681b      	ldr	r3, [r3, #0]
 800a4f4:	4a0c      	ldr	r2, [pc, #48]	; (800a528 <vTaskSwitchContext+0x7c>)
 800a4f6:	3358      	adds	r3, #88	; 0x58
 800a4f8:	6013      	str	r3, [r2, #0]
}
 800a4fa:	e7de      	b.n	800a4ba <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4fc:	b942      	cbnz	r2, 800a510 <vTaskSwitchContext+0x64>
 800a4fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a502:	f383 8811 	msr	BASEPRI, r3
 800a506:	f3bf 8f6f 	isb	sy
 800a50a:	f3bf 8f4f 	dsb	sy
 800a50e:	e7fe      	b.n	800a50e <vTaskSwitchContext+0x62>
 800a510:	3a01      	subs	r2, #1
 800a512:	e7d8      	b.n	800a4c6 <vTaskSwitchContext+0x1a>
 800a514:	20015644 	.word	0x20015644
 800a518:	200156c4 	.word	0x200156c4
 800a51c:	2001564c 	.word	0x2001564c
 800a520:	200151d8 	.word	0x200151d8
 800a524:	200151cc 	.word	0x200151cc
 800a528:	20000104 	.word	0x20000104

0800a52c <vTaskPlaceOnEventList>:
{
 800a52c:	b510      	push	{r4, lr}
 800a52e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a530:	b940      	cbnz	r0, 800a544 <vTaskPlaceOnEventList+0x18>
 800a532:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a536:	f383 8811 	msr	BASEPRI, r3
 800a53a:	f3bf 8f6f 	isb	sy
 800a53e:	f3bf 8f4f 	dsb	sy
 800a542:	e7fe      	b.n	800a542 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a544:	4b05      	ldr	r3, [pc, #20]	; (800a55c <vTaskPlaceOnEventList+0x30>)
 800a546:	6819      	ldr	r1, [r3, #0]
 800a548:	3118      	adds	r1, #24
 800a54a:	f7fe fd73 	bl	8009034 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a54e:	4620      	mov	r0, r4
 800a550:	2101      	movs	r1, #1
}
 800a552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a556:	f7ff bcbd 	b.w	8009ed4 <prvAddCurrentTaskToDelayedList>
 800a55a:	bf00      	nop
 800a55c:	200151cc 	.word	0x200151cc

0800a560 <vTaskPlaceOnEventListRestricted>:
	{
 800a560:	b538      	push	{r3, r4, r5, lr}
 800a562:	460d      	mov	r5, r1
 800a564:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a566:	b940      	cbnz	r0, 800a57a <vTaskPlaceOnEventListRestricted+0x1a>
 800a568:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a56c:	f383 8811 	msr	BASEPRI, r3
 800a570:	f3bf 8f6f 	isb	sy
 800a574:	f3bf 8f4f 	dsb	sy
 800a578:	e7fe      	b.n	800a578 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a57a:	4b07      	ldr	r3, [pc, #28]	; (800a598 <vTaskPlaceOnEventListRestricted+0x38>)
 800a57c:	6819      	ldr	r1, [r3, #0]
 800a57e:	3118      	adds	r1, #24
 800a580:	f7fe fd4c 	bl	800901c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a584:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a586:	4621      	mov	r1, r4
 800a588:	bf0c      	ite	eq
 800a58a:	4628      	moveq	r0, r5
 800a58c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a590:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a594:	f7ff bc9e 	b.w	8009ed4 <prvAddCurrentTaskToDelayedList>
 800a598:	200151cc 	.word	0x200151cc

0800a59c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a59c:	68c3      	ldr	r3, [r0, #12]
{
 800a59e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5a0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a5a2:	b944      	cbnz	r4, 800a5b6 <xTaskRemoveFromEventList+0x1a>
 800a5a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5a8:	f383 8811 	msr	BASEPRI, r3
 800a5ac:	f3bf 8f6f 	isb	sy
 800a5b0:	f3bf 8f4f 	dsb	sy
 800a5b4:	e7fe      	b.n	800a5b4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a5b6:	f104 0118 	add.w	r1, r4, #24
 800a5ba:	4608      	mov	r0, r1
 800a5bc:	9101      	str	r1, [sp, #4]
 800a5be:	f7fe fd50 	bl	8009062 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a5c2:	4b12      	ldr	r3, [pc, #72]	; (800a60c <xTaskRemoveFromEventList+0x70>)
 800a5c4:	9901      	ldr	r1, [sp, #4]
 800a5c6:	681b      	ldr	r3, [r3, #0]
 800a5c8:	b9eb      	cbnz	r3, 800a606 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a5ca:	1d21      	adds	r1, r4, #4
 800a5cc:	4608      	mov	r0, r1
 800a5ce:	9101      	str	r1, [sp, #4]
 800a5d0:	f7fe fd47 	bl	8009062 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a5d4:	4a0e      	ldr	r2, [pc, #56]	; (800a610 <xTaskRemoveFromEventList+0x74>)
 800a5d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a5d8:	6810      	ldr	r0, [r2, #0]
 800a5da:	9901      	ldr	r1, [sp, #4]
 800a5dc:	4283      	cmp	r3, r0
 800a5de:	bf88      	it	hi
 800a5e0:	6013      	strhi	r3, [r2, #0]
 800a5e2:	4a0c      	ldr	r2, [pc, #48]	; (800a614 <xTaskRemoveFromEventList+0x78>)
 800a5e4:	2014      	movs	r0, #20
 800a5e6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a5ea:	f7fe fd17 	bl	800901c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a5ee:	4b0a      	ldr	r3, [pc, #40]	; (800a618 <xTaskRemoveFromEventList+0x7c>)
 800a5f0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a5f2:	681b      	ldr	r3, [r3, #0]
 800a5f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5f6:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a5f8:	bf85      	ittet	hi
 800a5fa:	4b08      	ldrhi	r3, [pc, #32]	; (800a61c <xTaskRemoveFromEventList+0x80>)
 800a5fc:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a5fe:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a600:	6018      	strhi	r0, [r3, #0]
}
 800a602:	b002      	add	sp, #8
 800a604:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a606:	4806      	ldr	r0, [pc, #24]	; (800a620 <xTaskRemoveFromEventList+0x84>)
 800a608:	e7ef      	b.n	800a5ea <xTaskRemoveFromEventList+0x4e>
 800a60a:	bf00      	nop
 800a60c:	20015644 	.word	0x20015644
 800a610:	2001564c 	.word	0x2001564c
 800a614:	200151d8 	.word	0x200151d8
 800a618:	200151cc 	.word	0x200151cc
 800a61c:	200156c4 	.word	0x200156c4
 800a620:	20015680 	.word	0x20015680

0800a624 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a624:	4b03      	ldr	r3, [pc, #12]	; (800a634 <vTaskInternalSetTimeOutState+0x10>)
 800a626:	681b      	ldr	r3, [r3, #0]
 800a628:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a62a:	4b03      	ldr	r3, [pc, #12]	; (800a638 <vTaskInternalSetTimeOutState+0x14>)
 800a62c:	681b      	ldr	r3, [r3, #0]
 800a62e:	6043      	str	r3, [r0, #4]
}
 800a630:	4770      	bx	lr
 800a632:	bf00      	nop
 800a634:	2001567c 	.word	0x2001567c
 800a638:	200156c0 	.word	0x200156c0

0800a63c <xTaskCheckForTimeOut>:
{
 800a63c:	b570      	push	{r4, r5, r6, lr}
 800a63e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a640:	4605      	mov	r5, r0
 800a642:	b940      	cbnz	r0, 800a656 <xTaskCheckForTimeOut+0x1a>
 800a644:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a648:	f383 8811 	msr	BASEPRI, r3
 800a64c:	f3bf 8f6f 	isb	sy
 800a650:	f3bf 8f4f 	dsb	sy
 800a654:	e7fe      	b.n	800a654 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a656:	b941      	cbnz	r1, 800a66a <xTaskCheckForTimeOut+0x2e>
 800a658:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a65c:	f383 8811 	msr	BASEPRI, r3
 800a660:	f3bf 8f6f 	isb	sy
 800a664:	f3bf 8f4f 	dsb	sy
 800a668:	e7fe      	b.n	800a668 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a66a:	f7fe fd73 	bl	8009154 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a66e:	4b0f      	ldr	r3, [pc, #60]	; (800a6ac <xTaskCheckForTimeOut+0x70>)
 800a670:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a672:	6823      	ldr	r3, [r4, #0]
 800a674:	1c5a      	adds	r2, r3, #1
 800a676:	d010      	beq.n	800a69a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a678:	480d      	ldr	r0, [pc, #52]	; (800a6b0 <xTaskCheckForTimeOut+0x74>)
 800a67a:	682e      	ldr	r6, [r5, #0]
 800a67c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a67e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a680:	4286      	cmp	r6, r0
 800a682:	d001      	beq.n	800a688 <xTaskCheckForTimeOut+0x4c>
 800a684:	428a      	cmp	r2, r1
 800a686:	d90f      	bls.n	800a6a8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a688:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a68a:	4283      	cmp	r3, r0
 800a68c:	d90a      	bls.n	800a6a4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a68e:	1a5b      	subs	r3, r3, r1
 800a690:	4413      	add	r3, r2
 800a692:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a694:	4628      	mov	r0, r5
 800a696:	f7ff ffc5 	bl	800a624 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a69a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a69c:	f7fe fd7a 	bl	8009194 <vPortExitCritical>
}
 800a6a0:	4620      	mov	r0, r4
 800a6a2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a6a4:	2300      	movs	r3, #0
 800a6a6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a6a8:	2401      	movs	r4, #1
 800a6aa:	e7f7      	b.n	800a69c <xTaskCheckForTimeOut+0x60>
 800a6ac:	200156c0 	.word	0x200156c0
 800a6b0:	2001567c 	.word	0x2001567c

0800a6b4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a6b4:	4b01      	ldr	r3, [pc, #4]	; (800a6bc <vTaskMissedYield+0x8>)
 800a6b6:	2201      	movs	r2, #1
 800a6b8:	601a      	str	r2, [r3, #0]
}
 800a6ba:	4770      	bx	lr
 800a6bc:	200156c4 	.word	0x200156c4

0800a6c0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a6c0:	4b05      	ldr	r3, [pc, #20]	; (800a6d8 <xTaskGetSchedulerState+0x18>)
 800a6c2:	681b      	ldr	r3, [r3, #0]
 800a6c4:	b133      	cbz	r3, 800a6d4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a6c6:	4b05      	ldr	r3, [pc, #20]	; (800a6dc <xTaskGetSchedulerState+0x1c>)
 800a6c8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a6ca:	2b00      	cmp	r3, #0
 800a6cc:	bf0c      	ite	eq
 800a6ce:	2002      	moveq	r0, #2
 800a6d0:	2000      	movne	r0, #0
 800a6d2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a6d4:	2001      	movs	r0, #1
	}
 800a6d6:	4770      	bx	lr
 800a6d8:	20015694 	.word	0x20015694
 800a6dc:	20015644 	.word	0x20015644

0800a6e0 <xTaskPriorityInherit>:
	{
 800a6e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a6e2:	4604      	mov	r4, r0
 800a6e4:	b348      	cbz	r0, 800a73a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a6e6:	4d1c      	ldr	r5, [pc, #112]	; (800a758 <xTaskPriorityInherit+0x78>)
 800a6e8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a6ea:	682a      	ldr	r2, [r5, #0]
 800a6ec:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a6ee:	4293      	cmp	r3, r2
 800a6f0:	d229      	bcs.n	800a746 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a6f2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a6f4:	4e19      	ldr	r6, [pc, #100]	; (800a75c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a6f6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a6f8:	bfa1      	itttt	ge
 800a6fa:	682a      	ldrge	r2, [r5, #0]
 800a6fc:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a6fe:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a702:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a704:	2214      	movs	r2, #20
 800a706:	fb02 6303 	mla	r3, r2, r3, r6
 800a70a:	6942      	ldr	r2, [r0, #20]
 800a70c:	429a      	cmp	r2, r3
 800a70e:	d116      	bne.n	800a73e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a710:	1d01      	adds	r1, r0, #4
 800a712:	4608      	mov	r0, r1
 800a714:	9101      	str	r1, [sp, #4]
 800a716:	f7fe fca4 	bl	8009062 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a71a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a71c:	4a10      	ldr	r2, [pc, #64]	; (800a760 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a71e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a720:	6810      	ldr	r0, [r2, #0]
 800a722:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a724:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a726:	4283      	cmp	r3, r0
 800a728:	f04f 0014 	mov.w	r0, #20
 800a72c:	fb00 6003 	mla	r0, r0, r3, r6
 800a730:	bf88      	it	hi
 800a732:	6013      	strhi	r3, [r2, #0]
 800a734:	f7fe fc72 	bl	800901c <vListInsertEnd>
				xReturn = pdTRUE;
 800a738:	2001      	movs	r0, #1
	}
 800a73a:	b002      	add	sp, #8
 800a73c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a73e:	682b      	ldr	r3, [r5, #0]
 800a740:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a742:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a744:	e7f8      	b.n	800a738 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a746:	682b      	ldr	r3, [r5, #0]
 800a748:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a74a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a74c:	42a0      	cmp	r0, r4
 800a74e:	bf2c      	ite	cs
 800a750:	2000      	movcs	r0, #0
 800a752:	2001      	movcc	r0, #1
 800a754:	e7f1      	b.n	800a73a <xTaskPriorityInherit+0x5a>
 800a756:	bf00      	nop
 800a758:	200151cc 	.word	0x200151cc
 800a75c:	200151d8 	.word	0x200151d8
 800a760:	2001564c 	.word	0x2001564c

0800a764 <xTaskPriorityDisinherit>:
	{
 800a764:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a766:	b910      	cbnz	r0, 800a76e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a768:	2000      	movs	r0, #0
	}
 800a76a:	b002      	add	sp, #8
 800a76c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a76e:	4b1c      	ldr	r3, [pc, #112]	; (800a7e0 <xTaskPriorityDisinherit+0x7c>)
 800a770:	681c      	ldr	r4, [r3, #0]
 800a772:	4284      	cmp	r4, r0
 800a774:	d008      	beq.n	800a788 <xTaskPriorityDisinherit+0x24>
 800a776:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a77a:	f383 8811 	msr	BASEPRI, r3
 800a77e:	f3bf 8f6f 	isb	sy
 800a782:	f3bf 8f4f 	dsb	sy
 800a786:	e7fe      	b.n	800a786 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a788:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a78a:	b943      	cbnz	r3, 800a79e <xTaskPriorityDisinherit+0x3a>
 800a78c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a790:	f383 8811 	msr	BASEPRI, r3
 800a794:	f3bf 8f6f 	isb	sy
 800a798:	f3bf 8f4f 	dsb	sy
 800a79c:	e7fe      	b.n	800a79c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a79e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a7a0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a7a2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a7a4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a7a6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a7a8:	d0de      	beq.n	800a768 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a7aa:	2b00      	cmp	r3, #0
 800a7ac:	d1dc      	bne.n	800a768 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a7ae:	1d21      	adds	r1, r4, #4
 800a7b0:	4608      	mov	r0, r1
 800a7b2:	9101      	str	r1, [sp, #4]
 800a7b4:	f7fe fc55 	bl	8009062 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a7b8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a7ba:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a7bc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a7be:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a7c2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a7c4:	4a07      	ldr	r2, [pc, #28]	; (800a7e4 <xTaskPriorityDisinherit+0x80>)
 800a7c6:	6810      	ldr	r0, [r2, #0]
 800a7c8:	4283      	cmp	r3, r0
 800a7ca:	bf88      	it	hi
 800a7cc:	6013      	strhi	r3, [r2, #0]
 800a7ce:	4a06      	ldr	r2, [pc, #24]	; (800a7e8 <xTaskPriorityDisinherit+0x84>)
 800a7d0:	2014      	movs	r0, #20
 800a7d2:	fb00 2003 	mla	r0, r0, r3, r2
 800a7d6:	f7fe fc21 	bl	800901c <vListInsertEnd>
					xReturn = pdTRUE;
 800a7da:	2001      	movs	r0, #1
		return xReturn;
 800a7dc:	e7c5      	b.n	800a76a <xTaskPriorityDisinherit+0x6>
 800a7de:	bf00      	nop
 800a7e0:	200151cc 	.word	0x200151cc
 800a7e4:	2001564c 	.word	0x2001564c
 800a7e8:	200151d8 	.word	0x200151d8

0800a7ec <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a7ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a7ee:	4604      	mov	r4, r0
 800a7f0:	2800      	cmp	r0, #0
 800a7f2:	d044      	beq.n	800a87e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a7f4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a7f6:	b942      	cbnz	r2, 800a80a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a7f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7fc:	f383 8811 	msr	BASEPRI, r3
 800a800:	f3bf 8f6f 	isb	sy
 800a804:	f3bf 8f4f 	dsb	sy
 800a808:	e7fe      	b.n	800a808 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a80a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a80c:	4299      	cmp	r1, r3
 800a80e:	bf38      	it	cc
 800a810:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a812:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a814:	428b      	cmp	r3, r1
 800a816:	d032      	beq.n	800a87e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a818:	2a01      	cmp	r2, #1
 800a81a:	d130      	bne.n	800a87e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a81c:	4a19      	ldr	r2, [pc, #100]	; (800a884 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a81e:	6812      	ldr	r2, [r2, #0]
 800a820:	4282      	cmp	r2, r0
 800a822:	d108      	bne.n	800a836 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a824:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a828:	f383 8811 	msr	BASEPRI, r3
 800a82c:	f3bf 8f6f 	isb	sy
 800a830:	f3bf 8f4f 	dsb	sy
 800a834:	e7fe      	b.n	800a834 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a836:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a838:	4d13      	ldr	r5, [pc, #76]	; (800a888 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a83a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a83c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a83e:	f04f 0214 	mov.w	r2, #20
 800a842:	fb02 5303 	mla	r3, r2, r3, r5
 800a846:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a848:	bfa4      	itt	ge
 800a84a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a84e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a850:	429a      	cmp	r2, r3
 800a852:	d114      	bne.n	800a87e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a854:	1d01      	adds	r1, r0, #4
 800a856:	4608      	mov	r0, r1
 800a858:	9101      	str	r1, [sp, #4]
 800a85a:	f7fe fc02 	bl	8009062 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a85e:	4a0b      	ldr	r2, [pc, #44]	; (800a88c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a860:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a862:	6810      	ldr	r0, [r2, #0]
 800a864:	9901      	ldr	r1, [sp, #4]
 800a866:	4283      	cmp	r3, r0
 800a868:	f04f 0014 	mov.w	r0, #20
 800a86c:	fb00 5003 	mla	r0, r0, r3, r5
 800a870:	bf88      	it	hi
 800a872:	6013      	strhi	r3, [r2, #0]
	}
 800a874:	b003      	add	sp, #12
 800a876:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a87a:	f7fe bbcf 	b.w	800901c <vListInsertEnd>
	}
 800a87e:	b003      	add	sp, #12
 800a880:	bd30      	pop	{r4, r5, pc}
 800a882:	bf00      	nop
 800a884:	200151cc 	.word	0x200151cc
 800a888:	200151d8 	.word	0x200151d8
 800a88c:	2001564c 	.word	0x2001564c

0800a890 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a890:	4b04      	ldr	r3, [pc, #16]	; (800a8a4 <pvTaskIncrementMutexHeldCount+0x14>)
 800a892:	681a      	ldr	r2, [r3, #0]
 800a894:	b11a      	cbz	r2, 800a89e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a896:	6819      	ldr	r1, [r3, #0]
 800a898:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a89a:	3201      	adds	r2, #1
 800a89c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a89e:	6818      	ldr	r0, [r3, #0]
	}
 800a8a0:	4770      	bx	lr
 800a8a2:	bf00      	nop
 800a8a4:	200151cc 	.word	0x200151cc

0800a8a8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a8a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a8aa:	4c11      	ldr	r4, [pc, #68]	; (800a8f0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a8ac:	f7fe fc52 	bl	8009154 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a8b0:	6825      	ldr	r5, [r4, #0]
 800a8b2:	b9bd      	cbnz	r5, 800a8e4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a8b4:	4f0f      	ldr	r7, [pc, #60]	; (800a8f4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a8b6:	4e10      	ldr	r6, [pc, #64]	; (800a8f8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a8b8:	4638      	mov	r0, r7
 800a8ba:	f7fe fba1 	bl	8009000 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a8be:	4630      	mov	r0, r6
 800a8c0:	f7fe fb9e 	bl	8009000 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a8c4:	4b0d      	ldr	r3, [pc, #52]	; (800a8fc <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a8c6:	4a0e      	ldr	r2, [pc, #56]	; (800a900 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a8c8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a8ca:	4b0e      	ldr	r3, [pc, #56]	; (800a904 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a8cc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a8ce:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a8d0:	200a      	movs	r0, #10
 800a8d2:	4b0d      	ldr	r3, [pc, #52]	; (800a908 <prvCheckForValidListAndQueue+0x60>)
 800a8d4:	9500      	str	r5, [sp, #0]
 800a8d6:	f7fe fe4e 	bl	8009576 <xQueueGenericCreateStatic>
 800a8da:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a8dc:	b110      	cbz	r0, 800a8e4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a8de:	490b      	ldr	r1, [pc, #44]	; (800a90c <prvCheckForValidListAndQueue+0x64>)
 800a8e0:	f7ff fa18 	bl	8009d14 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a8e4:	b003      	add	sp, #12
 800a8e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a8ea:	f7fe bc53 	b.w	8009194 <vPortExitCritical>
 800a8ee:	bf00      	nop
 800a8f0:	200157ec 	.word	0x200157ec
 800a8f4:	20015770 	.word	0x20015770
 800a8f8:	20015784 	.word	0x20015784
 800a8fc:	200156c8 	.word	0x200156c8
 800a900:	200156d0 	.word	0x200156d0
 800a904:	200156cc 	.word	0x200156cc
 800a908:	2001579c 	.word	0x2001579c
 800a90c:	08023ba1 	.word	0x08023ba1

0800a910 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a910:	4291      	cmp	r1, r2
{
 800a912:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a914:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a916:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a918:	d80a      	bhi.n	800a930 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a91a:	1ad2      	subs	r2, r2, r3
 800a91c:	6983      	ldr	r3, [r0, #24]
 800a91e:	429a      	cmp	r2, r3
 800a920:	d20d      	bcs.n	800a93e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a922:	4b08      	ldr	r3, [pc, #32]	; (800a944 <prvInsertTimerInActiveList+0x34>)
 800a924:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a926:	6818      	ldr	r0, [r3, #0]
 800a928:	f7fe fb84 	bl	8009034 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a92c:	2000      	movs	r0, #0
}
 800a92e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a930:	429a      	cmp	r2, r3
 800a932:	d201      	bcs.n	800a938 <prvInsertTimerInActiveList+0x28>
 800a934:	4299      	cmp	r1, r3
 800a936:	d202      	bcs.n	800a93e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a938:	4b03      	ldr	r3, [pc, #12]	; (800a948 <prvInsertTimerInActiveList+0x38>)
 800a93a:	1d01      	adds	r1, r0, #4
 800a93c:	e7f3      	b.n	800a926 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a93e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a940:	e7f5      	b.n	800a92e <prvInsertTimerInActiveList+0x1e>
 800a942:	bf00      	nop
 800a944:	200156cc 	.word	0x200156cc
 800a948:	200156c8 	.word	0x200156c8

0800a94c <xTimerCreateTimerTask>:
{
 800a94c:	b510      	push	{r4, lr}
 800a94e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a950:	f7ff ffaa 	bl	800a8a8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a954:	4b12      	ldr	r3, [pc, #72]	; (800a9a0 <xTimerCreateTimerTask+0x54>)
 800a956:	681b      	ldr	r3, [r3, #0]
 800a958:	b1b3      	cbz	r3, 800a988 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a95a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a95c:	aa07      	add	r2, sp, #28
 800a95e:	a906      	add	r1, sp, #24
 800a960:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a962:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a966:	f7fe fa51 	bl	8008e0c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a96a:	9b05      	ldr	r3, [sp, #20]
 800a96c:	9302      	str	r3, [sp, #8]
 800a96e:	9b06      	ldr	r3, [sp, #24]
 800a970:	9301      	str	r3, [sp, #4]
 800a972:	2302      	movs	r3, #2
 800a974:	9300      	str	r3, [sp, #0]
 800a976:	9a07      	ldr	r2, [sp, #28]
 800a978:	490a      	ldr	r1, [pc, #40]	; (800a9a4 <xTimerCreateTimerTask+0x58>)
 800a97a:	480b      	ldr	r0, [pc, #44]	; (800a9a8 <xTimerCreateTimerTask+0x5c>)
 800a97c:	4623      	mov	r3, r4
 800a97e:	f7ff fba3 	bl	800a0c8 <xTaskCreateStatic>
 800a982:	4b0a      	ldr	r3, [pc, #40]	; (800a9ac <xTimerCreateTimerTask+0x60>)
 800a984:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a986:	b940      	cbnz	r0, 800a99a <xTimerCreateTimerTask+0x4e>
 800a988:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a98c:	f383 8811 	msr	BASEPRI, r3
 800a990:	f3bf 8f6f 	isb	sy
 800a994:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a998:	e7fe      	b.n	800a998 <xTimerCreateTimerTask+0x4c>
}
 800a99a:	2001      	movs	r0, #1
 800a99c:	b008      	add	sp, #32
 800a99e:	bd10      	pop	{r4, pc}
 800a9a0:	200157ec 	.word	0x200157ec
 800a9a4:	08023ba6 	.word	0x08023ba6
 800a9a8:	0800aab5 	.word	0x0800aab5
 800a9ac:	200157f0 	.word	0x200157f0

0800a9b0 <xTimerGenericCommand>:
{
 800a9b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a9b2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a9b4:	4604      	mov	r4, r0
{
 800a9b6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a9b8:	b940      	cbnz	r0, 800a9cc <xTimerGenericCommand+0x1c>
 800a9ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9be:	f383 8811 	msr	BASEPRI, r3
 800a9c2:	f3bf 8f6f 	isb	sy
 800a9c6:	f3bf 8f4f 	dsb	sy
 800a9ca:	e7fe      	b.n	800a9ca <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a9cc:	4d0d      	ldr	r5, [pc, #52]	; (800aa04 <xTimerGenericCommand+0x54>)
 800a9ce:	6828      	ldr	r0, [r5, #0]
 800a9d0:	b180      	cbz	r0, 800a9f4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a9d2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a9d4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a9d8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a9da:	dc0d      	bgt.n	800a9f8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a9dc:	f7ff fe70 	bl	800a6c0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a9e0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a9e2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a9e4:	bf08      	it	eq
 800a9e6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a9e8:	6828      	ldr	r0, [r5, #0]
 800a9ea:	bf18      	it	ne
 800a9ec:	461a      	movne	r2, r3
 800a9ee:	4669      	mov	r1, sp
 800a9f0:	f7fe fe76 	bl	80096e0 <xQueueGenericSend>
}
 800a9f4:	b004      	add	sp, #16
 800a9f6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a9f8:	2300      	movs	r3, #0
 800a9fa:	4669      	mov	r1, sp
 800a9fc:	f7fe ff23 	bl	8009846 <xQueueGenericSendFromISR>
 800aa00:	e7f8      	b.n	800a9f4 <xTimerGenericCommand+0x44>
 800aa02:	bf00      	nop
 800aa04:	200157ec 	.word	0x200157ec

0800aa08 <prvSampleTimeNow>:
{
 800aa08:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800aa0c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800aab0 <prvSampleTimeNow+0xa8>
{
 800aa10:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800aa12:	f7ff fc17 	bl	800a244 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800aa16:	f8d8 3000 	ldr.w	r3, [r8]
 800aa1a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800aa1c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800aa1e:	d940      	bls.n	800aaa2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800aa20:	4f21      	ldr	r7, [pc, #132]	; (800aaa8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800aa22:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800aa26:	683b      	ldr	r3, [r7, #0]
 800aa28:	681a      	ldr	r2, [r3, #0]
 800aa2a:	b95a      	cbnz	r2, 800aa44 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800aa2c:	4a1f      	ldr	r2, [pc, #124]	; (800aaac <prvSampleTimeNow+0xa4>)
 800aa2e:	6811      	ldr	r1, [r2, #0]
 800aa30:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800aa32:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800aa34:	2301      	movs	r3, #1
}
 800aa36:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800aa38:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800aa3a:	f8c8 5000 	str.w	r5, [r8]
}
 800aa3e:	b004      	add	sp, #16
 800aa40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800aa44:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800aa46:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800aa48:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800aa4c:	1d21      	adds	r1, r4, #4
 800aa4e:	4608      	mov	r0, r1
 800aa50:	9103      	str	r1, [sp, #12]
 800aa52:	f7fe fb06 	bl	8009062 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800aa56:	6a23      	ldr	r3, [r4, #32]
 800aa58:	4620      	mov	r0, r4
 800aa5a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800aa5c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800aa60:	9903      	ldr	r1, [sp, #12]
 800aa62:	f013 0f04 	tst.w	r3, #4
 800aa66:	d0de      	beq.n	800aa26 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800aa68:	69a3      	ldr	r3, [r4, #24]
 800aa6a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800aa6c:	459a      	cmp	sl, r3
 800aa6e:	d205      	bcs.n	800aa7c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800aa70:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800aa72:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800aa74:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800aa76:	f7fe fadd 	bl	8009034 <vListInsert>
 800aa7a:	e7d4      	b.n	800aa26 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800aa7c:	2300      	movs	r3, #0
 800aa7e:	f8cd 9000 	str.w	r9, [sp]
 800aa82:	4652      	mov	r2, sl
 800aa84:	4619      	mov	r1, r3
 800aa86:	4620      	mov	r0, r4
 800aa88:	f7ff ff92 	bl	800a9b0 <xTimerGenericCommand>
				configASSERT( xResult );
 800aa8c:	2800      	cmp	r0, #0
 800aa8e:	d1ca      	bne.n	800aa26 <prvSampleTimeNow+0x1e>
 800aa90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa94:	f383 8811 	msr	BASEPRI, r3
 800aa98:	f3bf 8f6f 	isb	sy
 800aa9c:	f3bf 8f4f 	dsb	sy
 800aaa0:	e7fe      	b.n	800aaa0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800aaa2:	2300      	movs	r3, #0
 800aaa4:	e7c7      	b.n	800aa36 <prvSampleTimeNow+0x2e>
 800aaa6:	bf00      	nop
 800aaa8:	200156c8 	.word	0x200156c8
 800aaac:	200156cc 	.word	0x200156cc
 800aab0:	20015798 	.word	0x20015798

0800aab4 <prvTimerTask>:
{
 800aab4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800aab8:	4d6e      	ldr	r5, [pc, #440]	; (800ac74 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800aaba:	4e6f      	ldr	r6, [pc, #444]	; (800ac78 <prvTimerTask+0x1c4>)
{
 800aabc:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800aabe:	682b      	ldr	r3, [r5, #0]
 800aac0:	f8d3 8000 	ldr.w	r8, [r3]
 800aac4:	f1b8 0f00 	cmp.w	r8, #0
 800aac8:	d035      	beq.n	800ab36 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800aaca:	68db      	ldr	r3, [r3, #12]
 800aacc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800aad0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800aad2:	f7ff fbaf 	bl	800a234 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800aad6:	a804      	add	r0, sp, #16
 800aad8:	f7ff ff96 	bl	800aa08 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800aadc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800aade:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800aae0:	2b00      	cmp	r3, #0
 800aae2:	d169      	bne.n	800abb8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800aae4:	2c00      	cmp	r4, #0
 800aae6:	d14c      	bne.n	800ab82 <prvTimerTask+0xce>
 800aae8:	4540      	cmp	r0, r8
 800aaea:	d350      	bcc.n	800ab8e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800aaec:	f7ff fc46 	bl	800a37c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800aaf0:	682b      	ldr	r3, [r5, #0]
 800aaf2:	68db      	ldr	r3, [r3, #12]
 800aaf4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800aaf6:	1d38      	adds	r0, r7, #4
 800aaf8:	f7fe fab3 	bl	8009062 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800aafc:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ab00:	0758      	lsls	r0, r3, #29
 800ab02:	d51a      	bpl.n	800ab3a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ab04:	69b9      	ldr	r1, [r7, #24]
 800ab06:	4643      	mov	r3, r8
 800ab08:	464a      	mov	r2, r9
 800ab0a:	4441      	add	r1, r8
 800ab0c:	4638      	mov	r0, r7
 800ab0e:	f7ff feff 	bl	800a910 <prvInsertTimerInActiveList>
 800ab12:	b1b0      	cbz	r0, 800ab42 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ab14:	9400      	str	r4, [sp, #0]
 800ab16:	4623      	mov	r3, r4
 800ab18:	4642      	mov	r2, r8
 800ab1a:	4621      	mov	r1, r4
 800ab1c:	4638      	mov	r0, r7
 800ab1e:	f7ff ff47 	bl	800a9b0 <xTimerGenericCommand>
			configASSERT( xResult );
 800ab22:	b970      	cbnz	r0, 800ab42 <prvTimerTask+0x8e>
 800ab24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab28:	f383 8811 	msr	BASEPRI, r3
 800ab2c:	f3bf 8f6f 	isb	sy
 800ab30:	f3bf 8f4f 	dsb	sy
 800ab34:	e7fe      	b.n	800ab34 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ab36:	2401      	movs	r4, #1
 800ab38:	e7cb      	b.n	800aad2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ab3a:	f023 0301 	bic.w	r3, r3, #1
 800ab3e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ab42:	6a3b      	ldr	r3, [r7, #32]
 800ab44:	4638      	mov	r0, r7
 800ab46:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ab48:	6830      	ldr	r0, [r6, #0]
 800ab4a:	2200      	movs	r2, #0
 800ab4c:	a904      	add	r1, sp, #16
 800ab4e:	f7fe ff2f 	bl	80099b0 <xQueueReceive>
 800ab52:	2800      	cmp	r0, #0
 800ab54:	d0b3      	beq.n	800aabe <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ab56:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ab58:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ab5a:	2b00      	cmp	r3, #0
 800ab5c:	db2f      	blt.n	800abbe <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ab5e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ab60:	6963      	ldr	r3, [r4, #20]
 800ab62:	2b00      	cmp	r3, #0
 800ab64:	d132      	bne.n	800abcc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ab66:	a803      	add	r0, sp, #12
 800ab68:	f7ff ff4e 	bl	800aa08 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800ab6c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ab6e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800ab70:	2b09      	cmp	r3, #9
 800ab72:	d8e9      	bhi.n	800ab48 <prvTimerTask+0x94>
 800ab74:	e8df f003 	tbb	[pc, r3]
 800ab78:	572e2e2e 	.word	0x572e2e2e
 800ab7c:	2e2e765e 	.word	0x2e2e765e
 800ab80:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ab82:	4b3e      	ldr	r3, [pc, #248]	; (800ac7c <prvTimerTask+0x1c8>)
 800ab84:	681b      	ldr	r3, [r3, #0]
 800ab86:	681c      	ldr	r4, [r3, #0]
 800ab88:	fab4 f484 	clz	r4, r4
 800ab8c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ab8e:	6830      	ldr	r0, [r6, #0]
 800ab90:	4622      	mov	r2, r4
 800ab92:	eba8 0109 	sub.w	r1, r8, r9
 800ab96:	f7ff f8fa 	bl	8009d8e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ab9a:	f7ff fbef 	bl	800a37c <xTaskResumeAll>
 800ab9e:	2800      	cmp	r0, #0
 800aba0:	d1d2      	bne.n	800ab48 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800aba2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800aba6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800abaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800abae:	f3bf 8f4f 	dsb	sy
 800abb2:	f3bf 8f6f 	isb	sy
 800abb6:	e7c7      	b.n	800ab48 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800abb8:	f7ff fbe0 	bl	800a37c <xTaskResumeAll>
}
 800abbc:	e7c4      	b.n	800ab48 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800abbe:	9b05      	ldr	r3, [sp, #20]
 800abc0:	9907      	ldr	r1, [sp, #28]
 800abc2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800abc4:	9b04      	ldr	r3, [sp, #16]
 800abc6:	2b00      	cmp	r3, #0
 800abc8:	dbbe      	blt.n	800ab48 <prvTimerTask+0x94>
 800abca:	e7c8      	b.n	800ab5e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800abcc:	1d20      	adds	r0, r4, #4
 800abce:	f7fe fa48 	bl	8009062 <uxListRemove>
 800abd2:	e7c8      	b.n	800ab66 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800abd4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800abd8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800abda:	f043 0301 	orr.w	r3, r3, #1
 800abde:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800abe2:	9b05      	ldr	r3, [sp, #20]
 800abe4:	4620      	mov	r0, r4
 800abe6:	4419      	add	r1, r3
 800abe8:	f7ff fe92 	bl	800a910 <prvInsertTimerInActiveList>
 800abec:	2800      	cmp	r0, #0
 800abee:	d0ab      	beq.n	800ab48 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800abf0:	6a23      	ldr	r3, [r4, #32]
 800abf2:	4620      	mov	r0, r4
 800abf4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800abf6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800abfa:	0759      	lsls	r1, r3, #29
 800abfc:	d5a4      	bpl.n	800ab48 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800abfe:	69a2      	ldr	r2, [r4, #24]
 800ac00:	9905      	ldr	r1, [sp, #20]
 800ac02:	2300      	movs	r3, #0
 800ac04:	440a      	add	r2, r1
 800ac06:	9300      	str	r3, [sp, #0]
 800ac08:	4619      	mov	r1, r3
 800ac0a:	4620      	mov	r0, r4
 800ac0c:	f7ff fed0 	bl	800a9b0 <xTimerGenericCommand>
							configASSERT( xResult );
 800ac10:	2800      	cmp	r0, #0
 800ac12:	d199      	bne.n	800ab48 <prvTimerTask+0x94>
 800ac14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac18:	f383 8811 	msr	BASEPRI, r3
 800ac1c:	f3bf 8f6f 	isb	sy
 800ac20:	f3bf 8f4f 	dsb	sy
 800ac24:	e7fe      	b.n	800ac24 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ac26:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ac2a:	f023 0301 	bic.w	r3, r3, #1
 800ac2e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800ac32:	e789      	b.n	800ab48 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ac34:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ac38:	f043 0301 	orr.w	r3, r3, #1
 800ac3c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ac40:	9905      	ldr	r1, [sp, #20]
 800ac42:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ac44:	b941      	cbnz	r1, 800ac58 <prvTimerTask+0x1a4>
 800ac46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac4a:	f383 8811 	msr	BASEPRI, r3
 800ac4e:	f3bf 8f6f 	isb	sy
 800ac52:	f3bf 8f4f 	dsb	sy
 800ac56:	e7fe      	b.n	800ac56 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ac58:	4603      	mov	r3, r0
 800ac5a:	4401      	add	r1, r0
 800ac5c:	4620      	mov	r0, r4
 800ac5e:	f7ff fe57 	bl	800a910 <prvInsertTimerInActiveList>
					break;
 800ac62:	e771      	b.n	800ab48 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800ac64:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ac68:	079a      	lsls	r2, r3, #30
 800ac6a:	d4de      	bmi.n	800ac2a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800ac6c:	4620      	mov	r0, r4
 800ac6e:	f7fe f98f 	bl	8008f90 <vPortFree>
 800ac72:	e769      	b.n	800ab48 <prvTimerTask+0x94>
 800ac74:	200156c8 	.word	0x200156c8
 800ac78:	200157ec 	.word	0x200157ec
 800ac7c:	200156cc 	.word	0x200156cc

0800ac80 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ac80:	8880      	ldrh	r0, [r0, #4]
 800ac82:	4770      	bx	lr

0800ac84 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ac84:	b570      	push	{r4, r5, r6, lr}
 800ac86:	6803      	ldr	r3, [r0, #0]
 800ac88:	4605      	mov	r5, r0
 800ac8a:	460c      	mov	r4, r1
 800ac8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ac8e:	2100      	movs	r1, #0
 800ac90:	4798      	blx	r3
 800ac92:	682b      	ldr	r3, [r5, #0]
 800ac94:	4606      	mov	r6, r0
 800ac96:	6a1b      	ldr	r3, [r3, #32]
 800ac98:	4628      	mov	r0, r5
 800ac9a:	4798      	blx	r3
 800ac9c:	1ba4      	subs	r4, r4, r6
 800ac9e:	b2a4      	uxth	r4, r4
 800aca0:	fbb4 f0f0 	udiv	r0, r4, r0
 800aca4:	bd70      	pop	{r4, r5, r6, pc}

0800aca6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800aca6:	2300      	movs	r3, #0
 800aca8:	8083      	strh	r3, [r0, #4]
 800acaa:	4770      	bx	lr

0800acac <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800acac:	b510      	push	{r4, lr}
 800acae:	6803      	ldr	r3, [r0, #0]
 800acb0:	8881      	ldrh	r1, [r0, #4]
 800acb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800acb4:	4604      	mov	r4, r0
 800acb6:	4798      	blx	r3
 800acb8:	88a3      	ldrh	r3, [r4, #4]
 800acba:	3301      	adds	r3, #1
 800acbc:	80a3      	strh	r3, [r4, #4]
 800acbe:	bd10      	pop	{r4, pc}

0800acc0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800acc0:	6803      	ldr	r3, [r0, #0]
 800acc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800acc4:	4718      	bx	r3

0800acc6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800acc6:	4770      	bx	lr

0800acc8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800acc8:	4a02      	ldr	r2, [pc, #8]	; (800acd4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800acca:	6002      	str	r2, [r0, #0]
 800accc:	2200      	movs	r2, #0
 800acce:	8082      	strh	r2, [r0, #4]
 800acd0:	4770      	bx	lr
 800acd2:	bf00      	nop
 800acd4:	08023bb8 	.word	0x08023bb8

0800acd8 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800acd8:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800acdc:	4770      	bx	lr

0800acde <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800acde:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800ace2:	4770      	bx	lr

0800ace4 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800ace4:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800ace8:	4770      	bx	lr

0800acea <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800acea:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800acec:	4770      	bx	lr

0800acee <_ZN8touchgfx11ModalWindow4showEv>:
 800acee:	2201      	movs	r2, #1
 800acf0:	6803      	ldr	r3, [r0, #0]
 800acf2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800acf6:	695b      	ldr	r3, [r3, #20]
 800acf8:	4718      	bx	r3

0800acfa <_ZN8touchgfx11ModalWindow4hideEv>:
 800acfa:	b510      	push	{r4, lr}
 800acfc:	6803      	ldr	r3, [r0, #0]
 800acfe:	4604      	mov	r4, r0
 800ad00:	695b      	ldr	r3, [r3, #20]
 800ad02:	4798      	blx	r3
 800ad04:	2300      	movs	r3, #0
 800ad06:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800ad0a:	bd10      	pop	{r4, pc}

0800ad0c <_ZN8touchgfx11ModalWindowD1Ev>:
 800ad0c:	4770      	bx	lr

0800ad0e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800ad0e:	3058      	adds	r0, #88	; 0x58
 800ad10:	f000 b904 	b.w	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800ad14 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800ad14:	6541      	str	r1, [r0, #84]	; 0x54
 800ad16:	302c      	adds	r0, #44	; 0x2c
 800ad18:	f007 bbb9 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>

0800ad1c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800ad1c:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800ad20:	302c      	adds	r0, #44	; 0x2c
 800ad22:	f007 bbb4 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>

0800ad26 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800ad26:	3058      	adds	r0, #88	; 0x58
 800ad28:	f000 b943 	b.w	800afb2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800ad2c <_ZN8touchgfx11ModalWindowD0Ev>:
 800ad2c:	b510      	push	{r4, lr}
 800ad2e:	21b0      	movs	r1, #176	; 0xb0
 800ad30:	4604      	mov	r4, r0
 800ad32:	f015 ff31 	bl	8020b98 <_ZdlPvj>
 800ad36:	4620      	mov	r0, r4
 800ad38:	bd10      	pop	{r4, pc}
	...

0800ad3c <_ZN8touchgfx8DrawableC1Ev>:
 800ad3c:	4a0a      	ldr	r2, [pc, #40]	; (800ad68 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800ad3e:	6002      	str	r2, [r0, #0]
 800ad40:	2200      	movs	r2, #0
 800ad42:	8082      	strh	r2, [r0, #4]
 800ad44:	80c2      	strh	r2, [r0, #6]
 800ad46:	8102      	strh	r2, [r0, #8]
 800ad48:	8142      	strh	r2, [r0, #10]
 800ad4a:	8182      	strh	r2, [r0, #12]
 800ad4c:	81c2      	strh	r2, [r0, #14]
 800ad4e:	8202      	strh	r2, [r0, #16]
 800ad50:	8242      	strh	r2, [r0, #18]
 800ad52:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800ad56:	61c2      	str	r2, [r0, #28]
 800ad58:	8402      	strh	r2, [r0, #32]
 800ad5a:	8442      	strh	r2, [r0, #34]	; 0x22
 800ad5c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800ad60:	2201      	movs	r2, #1
 800ad62:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800ad66:	4770      	bx	lr
 800ad68:	080247f4 	.word	0x080247f4

0800ad6c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800ad6c:	b570      	push	{r4, r5, r6, lr}
 800ad6e:	4604      	mov	r4, r0
 800ad70:	461e      	mov	r6, r3
 800ad72:	f854 3b58 	ldr.w	r3, [r4], #88
 800ad76:	4615      	mov	r5, r2
 800ad78:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800ad7c:	4798      	blx	r3
 800ad7e:	4632      	mov	r2, r6
 800ad80:	4629      	mov	r1, r5
 800ad82:	4620      	mov	r0, r4
 800ad84:	f7f8 f980 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 800ad88:	bd70      	pop	{r4, r5, r6, pc}

0800ad8a <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800ad8a:	b570      	push	{r4, r5, r6, lr}
 800ad8c:	6803      	ldr	r3, [r0, #0]
 800ad8e:	4604      	mov	r4, r0
 800ad90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ad92:	4615      	mov	r5, r2
 800ad94:	4798      	blx	r3
 800ad96:	6823      	ldr	r3, [r4, #0]
 800ad98:	4629      	mov	r1, r5
 800ad9a:	4620      	mov	r0, r4
 800ad9c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ad9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ada2:	4718      	bx	r3

0800ada4 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800ada4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ada6:	880b      	ldrh	r3, [r1, #0]
 800ada8:	a902      	add	r1, sp, #8
 800adaa:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800adae:	4604      	mov	r4, r0
 800adb0:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800adb4:	4628      	mov	r0, r5
 800adb6:	f003 ff25 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800adba:	2200      	movs	r2, #0
 800adbc:	4611      	mov	r1, r2
 800adbe:	4628      	mov	r0, r5
 800adc0:	f7f8 f962 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 800adc4:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800adc8:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800adcc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800add0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800add4:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800add8:	2302      	movs	r3, #2
 800adda:	4628      	mov	r0, r5
 800addc:	1bd2      	subs	r2, r2, r7
 800adde:	1b89      	subs	r1, r1, r6
 800ade0:	fb92 f2f3 	sdiv	r2, r2, r3
 800ade4:	fb91 f1f3 	sdiv	r1, r1, r3
 800ade8:	b212      	sxth	r2, r2
 800adea:	b209      	sxth	r1, r1
 800adec:	f7f8 f94c 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 800adf0:	463a      	mov	r2, r7
 800adf2:	4631      	mov	r1, r6
 800adf4:	4628      	mov	r0, r5
 800adf6:	f7ff ffc8 	bl	800ad8a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800adfa:	6823      	ldr	r3, [r4, #0]
 800adfc:	4620      	mov	r0, r4
 800adfe:	695b      	ldr	r3, [r3, #20]
 800ae00:	4798      	blx	r3
 800ae02:	b003      	add	sp, #12
 800ae04:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800ae08 <_ZN8touchgfx11ModalWindowC1Ev>:
 800ae08:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ae0c:	4604      	mov	r4, r0
 800ae0e:	4625      	mov	r5, r4
 800ae10:	f7ff ff94 	bl	800ad3c <_ZN8touchgfx8DrawableC1Ev>
 800ae14:	2600      	movs	r6, #0
 800ae16:	4b36      	ldr	r3, [pc, #216]	; (800aef0 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800ae18:	62a6      	str	r6, [r4, #40]	; 0x28
 800ae1a:	f845 3b2c 	str.w	r3, [r5], #44
 800ae1e:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800ae22:	4652      	mov	r2, sl
 800ae24:	4631      	mov	r1, r6
 800ae26:	4628      	mov	r0, r5
 800ae28:	f016 f8f0 	bl	802100c <memset>
 800ae2c:	4628      	mov	r0, r5
 800ae2e:	f7ff ff85 	bl	800ad3c <_ZN8touchgfx8DrawableC1Ev>
 800ae32:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800ae36:	4b2f      	ldr	r3, [pc, #188]	; (800aef4 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800ae38:	62e3      	str	r3, [r4, #44]	; 0x2c
 800ae3a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800ae3e:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800ae42:	6566      	str	r6, [r4, #84]	; 0x54
 800ae44:	4640      	mov	r0, r8
 800ae46:	f7ff ff79 	bl	800ad3c <_ZN8touchgfx8DrawableC1Ev>
 800ae4a:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800ae4e:	4b2a      	ldr	r3, [pc, #168]	; (800aef8 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800ae50:	65a3      	str	r3, [r4, #88]	; 0x58
 800ae52:	4652      	mov	r2, sl
 800ae54:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ae58:	4631      	mov	r1, r6
 800ae5a:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800ae5e:	4638      	mov	r0, r7
 800ae60:	f8ad 3004 	strh.w	r3, [sp, #4]
 800ae64:	f016 f8d2 	bl	802100c <memset>
 800ae68:	4638      	mov	r0, r7
 800ae6a:	f7ff ff67 	bl	800ad3c <_ZN8touchgfx8DrawableC1Ev>
 800ae6e:	a902      	add	r1, sp, #8
 800ae70:	4b22      	ldr	r3, [pc, #136]	; (800aefc <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800ae72:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800ae76:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800ae7a:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800ae7e:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800ae82:	4638      	mov	r0, r7
 800ae84:	f003 febe 	bl	800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ae88:	4b1d      	ldr	r3, [pc, #116]	; (800af00 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800ae8a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ae8e:	4b1d      	ldr	r3, [pc, #116]	; (800af04 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800ae90:	4620      	mov	r0, r4
 800ae92:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ae96:	f7ff ff78 	bl	800ad8a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ae9a:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800ae9e:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800aea2:	4632      	mov	r2, r6
 800aea4:	4631      	mov	r1, r6
 800aea6:	4628      	mov	r0, r5
 800aea8:	f7f8 f8ee 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 800aeac:	4652      	mov	r2, sl
 800aeae:	4649      	mov	r1, r9
 800aeb0:	4628      	mov	r0, r5
 800aeb2:	f7ff ff6a 	bl	800ad8a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aeb6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800aeba:	6563      	str	r3, [r4, #84]	; 0x54
 800aebc:	2301      	movs	r3, #1
 800aebe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800aec2:	2360      	movs	r3, #96	; 0x60
 800aec4:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800aec8:	4628      	mov	r0, r5
 800aeca:	f007 fae0 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800aece:	4629      	mov	r1, r5
 800aed0:	4620      	mov	r0, r4
 800aed2:	f000 f823 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aed6:	4641      	mov	r1, r8
 800aed8:	4620      	mov	r0, r4
 800aeda:	f000 f81f 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aede:	4640      	mov	r0, r8
 800aee0:	4639      	mov	r1, r7
 800aee2:	f000 f81b 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aee6:	4620      	mov	r0, r4
 800aee8:	b002      	add	sp, #8
 800aeea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aeee:	bf00      	nop
 800aef0:	08023bec 	.word	0x08023bec
 800aef4:	08024574 	.word	0x08024574
 800aef8:	08023ca4 	.word	0x08023ca4
 800aefc:	080246b8 	.word	0x080246b8
 800af00:	200157f6 	.word	0x200157f6
 800af04:	200157f4 	.word	0x200157f4

0800af08 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800af08:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800af0a:	2000      	movs	r0, #0
 800af0c:	b12b      	cbz	r3, 800af1a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800af0e:	b920      	cbnz	r0, 800af1a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800af10:	1a5a      	subs	r2, r3, r1
 800af12:	4250      	negs	r0, r2
 800af14:	4150      	adcs	r0, r2
 800af16:	699b      	ldr	r3, [r3, #24]
 800af18:	e7f8      	b.n	800af0c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800af1a:	4770      	bx	lr

0800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800af1c:	2300      	movs	r3, #0
 800af1e:	6148      	str	r0, [r1, #20]
 800af20:	618b      	str	r3, [r1, #24]
 800af22:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800af24:	b913      	cbnz	r3, 800af2c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800af26:	6281      	str	r1, [r0, #40]	; 0x28
 800af28:	4770      	bx	lr
 800af2a:	4613      	mov	r3, r2
 800af2c:	699a      	ldr	r2, [r3, #24]
 800af2e:	2a00      	cmp	r2, #0
 800af30:	d1fb      	bne.n	800af2a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800af32:	6199      	str	r1, [r3, #24]
 800af34:	4770      	bx	lr

0800af36 <_ZN8touchgfx9Container9removeAllEv>:
 800af36:	2200      	movs	r2, #0
 800af38:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800af3a:	b123      	cbz	r3, 800af46 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800af3c:	6999      	ldr	r1, [r3, #24]
 800af3e:	6281      	str	r1, [r0, #40]	; 0x28
 800af40:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800af44:	e7f8      	b.n	800af38 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800af46:	4770      	bx	lr

0800af48 <_ZN8touchgfx9Container6unlinkEv>:
 800af48:	2300      	movs	r3, #0
 800af4a:	6283      	str	r3, [r0, #40]	; 0x28
 800af4c:	4770      	bx	lr

0800af4e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800af4e:	2200      	movs	r2, #0
 800af50:	8002      	strh	r2, [r0, #0]
 800af52:	8042      	strh	r2, [r0, #2]
 800af54:	8082      	strh	r2, [r0, #4]
 800af56:	80c2      	strh	r2, [r0, #6]
 800af58:	4770      	bx	lr

0800af5a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800af5a:	b570      	push	{r4, r5, r6, lr}
 800af5c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af5e:	460d      	mov	r5, r1
 800af60:	4616      	mov	r6, r2
 800af62:	b13c      	cbz	r4, 800af74 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800af64:	6823      	ldr	r3, [r4, #0]
 800af66:	4620      	mov	r0, r4
 800af68:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800af6a:	4632      	mov	r2, r6
 800af6c:	4629      	mov	r1, r5
 800af6e:	4798      	blx	r3
 800af70:	69a4      	ldr	r4, [r4, #24]
 800af72:	e7f6      	b.n	800af62 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800af74:	bd70      	pop	{r4, r5, r6, pc}

0800af76 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800af76:	b538      	push	{r3, r4, r5, lr}
 800af78:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af7a:	460d      	mov	r5, r1
 800af7c:	b134      	cbz	r4, 800af8c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800af7e:	682b      	ldr	r3, [r5, #0]
 800af80:	4621      	mov	r1, r4
 800af82:	689b      	ldr	r3, [r3, #8]
 800af84:	4628      	mov	r0, r5
 800af86:	4798      	blx	r3
 800af88:	69a4      	ldr	r4, [r4, #24]
 800af8a:	e7f7      	b.n	800af7c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800af8c:	bd38      	pop	{r3, r4, r5, pc}

0800af8e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800af8e:	b510      	push	{r4, lr}
 800af90:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af92:	b12c      	cbz	r4, 800afa0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800af94:	6823      	ldr	r3, [r4, #0]
 800af96:	4620      	mov	r0, r4
 800af98:	699b      	ldr	r3, [r3, #24]
 800af9a:	4798      	blx	r3
 800af9c:	69a4      	ldr	r4, [r4, #24]
 800af9e:	e7f8      	b.n	800af92 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800afa0:	bd10      	pop	{r4, pc}

0800afa2 <_ZN8touchgfx9ContainerD1Ev>:
 800afa2:	4770      	bx	lr

0800afa4 <_ZN8touchgfx9ContainerD0Ev>:
 800afa4:	b510      	push	{r4, lr}
 800afa6:	212c      	movs	r1, #44	; 0x2c
 800afa8:	4604      	mov	r4, r0
 800afaa:	f015 fdf5 	bl	8020b98 <_ZdlPvj>
 800afae:	4620      	mov	r0, r4
 800afb0:	bd10      	pop	{r4, pc}

0800afb2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800afb2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800afb4:	b19b      	cbz	r3, 800afde <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800afb6:	428b      	cmp	r3, r1
 800afb8:	d109      	bne.n	800afce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800afba:	699a      	ldr	r2, [r3, #24]
 800afbc:	2100      	movs	r1, #0
 800afbe:	6159      	str	r1, [r3, #20]
 800afc0:	6282      	str	r2, [r0, #40]	; 0x28
 800afc2:	b902      	cbnz	r2, 800afc6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800afc4:	4770      	bx	lr
 800afc6:	6199      	str	r1, [r3, #24]
 800afc8:	4770      	bx	lr
 800afca:	4613      	mov	r3, r2
 800afcc:	b13a      	cbz	r2, 800afde <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800afce:	699a      	ldr	r2, [r3, #24]
 800afd0:	428a      	cmp	r2, r1
 800afd2:	d1fa      	bne.n	800afca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800afd4:	698a      	ldr	r2, [r1, #24]
 800afd6:	619a      	str	r2, [r3, #24]
 800afd8:	2300      	movs	r3, #0
 800afda:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800afde:	4770      	bx	lr

0800afe0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800afe0:	b410      	push	{r4}
 800afe2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800afe4:	4604      	mov	r4, r0
 800afe6:	b92b      	cbnz	r3, 800aff4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800afe8:	6803      	ldr	r3, [r0, #0]
 800afea:	f85d 4b04 	ldr.w	r4, [sp], #4
 800afee:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800aff0:	4611      	mov	r1, r2
 800aff2:	4718      	bx	r3
 800aff4:	b941      	cbnz	r1, 800b008 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aff6:	6193      	str	r3, [r2, #24]
 800aff8:	6282      	str	r2, [r0, #40]	; 0x28
 800affa:	6154      	str	r4, [r2, #20]
 800affc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b000:	4770      	bx	lr
 800b002:	4603      	mov	r3, r0
 800b004:	2800      	cmp	r0, #0
 800b006:	d0f9      	beq.n	800affc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800b008:	4299      	cmp	r1, r3
 800b00a:	6998      	ldr	r0, [r3, #24]
 800b00c:	d1f9      	bne.n	800b002 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800b00e:	6190      	str	r0, [r2, #24]
 800b010:	618a      	str	r2, [r1, #24]
 800b012:	e7f2      	b.n	800affa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800b014 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800b014:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b018:	461f      	mov	r7, r3
 800b01a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800b01e:	460d      	mov	r5, r1
 800b020:	4616      	mov	r6, r2
 800b022:	b103      	cbz	r3, 800b026 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800b024:	6038      	str	r0, [r7, #0]
 800b026:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b028:	b314      	cbz	r4, 800b070 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800b02a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b02e:	b1eb      	cbz	r3, 800b06c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b030:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800b034:	428d      	cmp	r5, r1
 800b036:	db19      	blt.n	800b06c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b038:	8923      	ldrh	r3, [r4, #8]
 800b03a:	b289      	uxth	r1, r1
 800b03c:	440b      	add	r3, r1
 800b03e:	b21b      	sxth	r3, r3
 800b040:	429d      	cmp	r5, r3
 800b042:	da13      	bge.n	800b06c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b044:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800b048:	4296      	cmp	r6, r2
 800b04a:	db0f      	blt.n	800b06c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b04c:	8963      	ldrh	r3, [r4, #10]
 800b04e:	b292      	uxth	r2, r2
 800b050:	4413      	add	r3, r2
 800b052:	b21b      	sxth	r3, r3
 800b054:	429e      	cmp	r6, r3
 800b056:	da09      	bge.n	800b06c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b058:	6823      	ldr	r3, [r4, #0]
 800b05a:	1ab2      	subs	r2, r6, r2
 800b05c:	1a69      	subs	r1, r5, r1
 800b05e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800b062:	b212      	sxth	r2, r2
 800b064:	463b      	mov	r3, r7
 800b066:	b209      	sxth	r1, r1
 800b068:	4620      	mov	r0, r4
 800b06a:	47c0      	blx	r8
 800b06c:	69a4      	ldr	r4, [r4, #24]
 800b06e:	e7db      	b.n	800b028 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800b070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b074 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800b074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b078:	4c6e      	ldr	r4, [pc, #440]	; (800b234 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800b07a:	b0a1      	sub	sp, #132	; 0x84
 800b07c:	6824      	ldr	r4, [r4, #0]
 800b07e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800b080:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800b084:	9303      	str	r3, [sp, #12]
 800b086:	2400      	movs	r4, #0
 800b088:	802c      	strh	r4, [r5, #0]
 800b08a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800b08c:	802c      	strh	r4, [r5, #0]
 800b08e:	601c      	str	r4, [r3, #0]
 800b090:	4606      	mov	r6, r0
 800b092:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800b096:	f7ff ffbd 	bl	800b014 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800b09a:	f1b9 0f03 	cmp.w	r9, #3
 800b09e:	f340 80c2 	ble.w	800b226 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800b0a2:	4631      	mov	r1, r6
 800b0a4:	a80c      	add	r0, sp, #48	; 0x30
 800b0a6:	f007 fa8d 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b0aa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800b0ae:	9306      	str	r3, [sp, #24]
 800b0b0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800b0b4:	9307      	str	r3, [sp, #28]
 800b0b6:	9b03      	ldr	r3, [sp, #12]
 800b0b8:	f8d3 a000 	ldr.w	sl, [r3]
 800b0bc:	f1ba 0f00 	cmp.w	sl, #0
 800b0c0:	f000 80b4 	beq.w	800b22c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800b0c4:	4651      	mov	r1, sl
 800b0c6:	a810      	add	r0, sp, #64	; 0x40
 800b0c8:	f007 fa7c 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b0cc:	9b01      	ldr	r3, [sp, #4]
 800b0ce:	9a06      	ldr	r2, [sp, #24]
 800b0d0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800b0d4:	189d      	adds	r5, r3, r2
 800b0d6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800b0da:	9a07      	ldr	r2, [sp, #28]
 800b0dc:	2002      	movs	r0, #2
 800b0de:	fb91 f1f0 	sdiv	r1, r1, r0
 800b0e2:	4419      	add	r1, r3
 800b0e4:	1a6d      	subs	r5, r5, r1
 800b0e6:	9b02      	ldr	r3, [sp, #8]
 800b0e8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800b0ec:	4413      	add	r3, r2
 800b0ee:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800b0f2:	fb92 f2f0 	sdiv	r2, r2, r0
 800b0f6:	440a      	add	r2, r1
 800b0f8:	1a9b      	subs	r3, r3, r2
 800b0fa:	435b      	muls	r3, r3
 800b0fc:	fb05 3505 	mla	r5, r5, r5, r3
 800b100:	4f4d      	ldr	r7, [pc, #308]	; (800b238 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800b102:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800b104:	ac10      	add	r4, sp, #64	; 0x40
 800b106:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b108:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800b10a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b10c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800b10e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b110:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800b114:	f1b9 0f0c 	cmp.w	r9, #12
 800b118:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800b11c:	f04f 0303 	mov.w	r3, #3
 800b120:	bfc8      	it	gt
 800b122:	4698      	movgt	r8, r3
 800b124:	f8cd 9000 	str.w	r9, [sp]
 800b128:	f04f 0400 	mov.w	r4, #0
 800b12c:	bfdc      	itt	le
 800b12e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800b132:	fb92 f8f3 	sdivle	r8, r2, r3
 800b136:	1c63      	adds	r3, r4, #1
 800b138:	aa10      	add	r2, sp, #64	; 0x40
 800b13a:	f004 0401 	and.w	r4, r4, #1
 800b13e:	9308      	str	r3, [sp, #32]
 800b140:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800b144:	9b00      	ldr	r3, [sp, #0]
 800b146:	fb93 f3f8 	sdiv	r3, r3, r8
 800b14a:	b29b      	uxth	r3, r3
 800b14c:	3404      	adds	r4, #4
 800b14e:	f04f 0b00 	mov.w	fp, #0
 800b152:	9304      	str	r3, [sp, #16]
 800b154:	9a04      	ldr	r2, [sp, #16]
 800b156:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800b15a:	fb13 f302 	smulbb	r3, r3, r2
 800b15e:	9a01      	ldr	r2, [sp, #4]
 800b160:	b29b      	uxth	r3, r3
 800b162:	1899      	adds	r1, r3, r2
 800b164:	9305      	str	r3, [sp, #20]
 800b166:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b16a:	b209      	sxth	r1, r1
 800b16c:	4299      	cmp	r1, r3
 800b16e:	db4d      	blt.n	800b20c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b170:	8932      	ldrh	r2, [r6, #8]
 800b172:	4413      	add	r3, r2
 800b174:	b21b      	sxth	r3, r3
 800b176:	4299      	cmp	r1, r3
 800b178:	da48      	bge.n	800b20c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b17a:	9b04      	ldr	r3, [sp, #16]
 800b17c:	6827      	ldr	r7, [r4, #0]
 800b17e:	fb17 f703 	smulbb	r7, r7, r3
 800b182:	9b02      	ldr	r3, [sp, #8]
 800b184:	b2bf      	uxth	r7, r7
 800b186:	18fa      	adds	r2, r7, r3
 800b188:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b18c:	b212      	sxth	r2, r2
 800b18e:	429a      	cmp	r2, r3
 800b190:	db3c      	blt.n	800b20c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b192:	8970      	ldrh	r0, [r6, #10]
 800b194:	4403      	add	r3, r0
 800b196:	b21b      	sxth	r3, r3
 800b198:	429a      	cmp	r2, r3
 800b19a:	da37      	bge.n	800b20c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b19c:	2300      	movs	r3, #0
 800b19e:	930b      	str	r3, [sp, #44]	; 0x2c
 800b1a0:	4630      	mov	r0, r6
 800b1a2:	ab0b      	add	r3, sp, #44	; 0x2c
 800b1a4:	f7ff ff36 	bl	800b014 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800b1a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b1aa:	b37a      	cbz	r2, 800b20c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b1ac:	4552      	cmp	r2, sl
 800b1ae:	d02d      	beq.n	800b20c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b1b0:	4611      	mov	r1, r2
 800b1b2:	a80e      	add	r0, sp, #56	; 0x38
 800b1b4:	9209      	str	r2, [sp, #36]	; 0x24
 800b1b6:	f007 fa05 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b1ba:	9a06      	ldr	r2, [sp, #24]
 800b1bc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800b1c0:	9b01      	ldr	r3, [sp, #4]
 800b1c2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800b1c6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800b1ca:	4413      	add	r3, r2
 800b1cc:	f04f 0e02 	mov.w	lr, #2
 800b1d0:	fb91 f1fe 	sdiv	r1, r1, lr
 800b1d4:	4401      	add	r1, r0
 800b1d6:	1a58      	subs	r0, r3, r1
 800b1d8:	9a07      	ldr	r2, [sp, #28]
 800b1da:	9b02      	ldr	r3, [sp, #8]
 800b1dc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800b1e0:	fb9c fcfe 	sdiv	ip, ip, lr
 800b1e4:	4413      	add	r3, r2
 800b1e6:	448c      	add	ip, r1
 800b1e8:	eba3 030c 	sub.w	r3, r3, ip
 800b1ec:	435b      	muls	r3, r3
 800b1ee:	fb00 3300 	mla	r3, r0, r0, r3
 800b1f2:	42ab      	cmp	r3, r5
 800b1f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b1f6:	d208      	bcs.n	800b20a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800b1f8:	9803      	ldr	r0, [sp, #12]
 800b1fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b1fc:	6001      	str	r1, [r0, #0]
 800b1fe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800b200:	9805      	ldr	r0, [sp, #20]
 800b202:	8008      	strh	r0, [r1, #0]
 800b204:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b206:	461d      	mov	r5, r3
 800b208:	800f      	strh	r7, [r1, #0]
 800b20a:	4692      	mov	sl, r2
 800b20c:	f10b 0b01 	add.w	fp, fp, #1
 800b210:	f1bb 0f04 	cmp.w	fp, #4
 800b214:	f104 0408 	add.w	r4, r4, #8
 800b218:	d19c      	bne.n	800b154 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800b21a:	9b00      	ldr	r3, [sp, #0]
 800b21c:	9c08      	ldr	r4, [sp, #32]
 800b21e:	444b      	add	r3, r9
 800b220:	4544      	cmp	r4, r8
 800b222:	9300      	str	r3, [sp, #0]
 800b224:	d187      	bne.n	800b136 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800b226:	b021      	add	sp, #132	; 0x84
 800b228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b22c:	f04f 35ff 	mov.w	r5, #4294967295
 800b230:	e766      	b.n	800b100 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800b232:	bf00      	nop
 800b234:	20015800 	.word	0x20015800
 800b238:	08021f50 	.word	0x08021f50

0800b23c <_ZN8touchgfx4RectaNERKS0_>:
 800b23c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b240:	f9b1 7000 	ldrsh.w	r7, [r1]
 800b244:	888c      	ldrh	r4, [r1, #4]
 800b246:	f9b0 9000 	ldrsh.w	r9, [r0]
 800b24a:	443c      	add	r4, r7
 800b24c:	b2a4      	uxth	r4, r4
 800b24e:	fa0f f884 	sxth.w	r8, r4
 800b252:	45c1      	cmp	r9, r8
 800b254:	da2f      	bge.n	800b2b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b256:	8882      	ldrh	r2, [r0, #4]
 800b258:	444a      	add	r2, r9
 800b25a:	b292      	uxth	r2, r2
 800b25c:	fa0f fe82 	sxth.w	lr, r2
 800b260:	4577      	cmp	r7, lr
 800b262:	da28      	bge.n	800b2b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b264:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b268:	88cb      	ldrh	r3, [r1, #6]
 800b26a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800b26e:	442b      	add	r3, r5
 800b270:	b21b      	sxth	r3, r3
 800b272:	429e      	cmp	r6, r3
 800b274:	da1f      	bge.n	800b2b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b276:	88c3      	ldrh	r3, [r0, #6]
 800b278:	4433      	add	r3, r6
 800b27a:	b29b      	uxth	r3, r3
 800b27c:	fa0f fc83 	sxth.w	ip, r3
 800b280:	4565      	cmp	r5, ip
 800b282:	da18      	bge.n	800b2b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b284:	454f      	cmp	r7, r9
 800b286:	bfb8      	it	lt
 800b288:	464f      	movlt	r7, r9
 800b28a:	42b5      	cmp	r5, r6
 800b28c:	bfb8      	it	lt
 800b28e:	4635      	movlt	r5, r6
 800b290:	45f0      	cmp	r8, lr
 800b292:	bfd8      	it	le
 800b294:	4622      	movle	r2, r4
 800b296:	1bd2      	subs	r2, r2, r7
 800b298:	8082      	strh	r2, [r0, #4]
 800b29a:	884a      	ldrh	r2, [r1, #2]
 800b29c:	88c9      	ldrh	r1, [r1, #6]
 800b29e:	8007      	strh	r7, [r0, #0]
 800b2a0:	440a      	add	r2, r1
 800b2a2:	b292      	uxth	r2, r2
 800b2a4:	b211      	sxth	r1, r2
 800b2a6:	458c      	cmp	ip, r1
 800b2a8:	bfa8      	it	ge
 800b2aa:	4613      	movge	r3, r2
 800b2ac:	1b5b      	subs	r3, r3, r5
 800b2ae:	80c3      	strh	r3, [r0, #6]
 800b2b0:	8045      	strh	r5, [r0, #2]
 800b2b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b2b6:	2300      	movs	r3, #0
 800b2b8:	8003      	strh	r3, [r0, #0]
 800b2ba:	8043      	strh	r3, [r0, #2]
 800b2bc:	8083      	strh	r3, [r0, #4]
 800b2be:	80c3      	strh	r3, [r0, #6]
 800b2c0:	e7f7      	b.n	800b2b2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800b2c2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b2c6:	2b00      	cmp	r3, #0
 800b2c8:	dd06      	ble.n	800b2d8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800b2ca:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800b2ce:	2800      	cmp	r0, #0
 800b2d0:	bfcc      	ite	gt
 800b2d2:	2000      	movgt	r0, #0
 800b2d4:	2001      	movle	r0, #1
 800b2d6:	4770      	bx	lr
 800b2d8:	2001      	movs	r0, #1
 800b2da:	4770      	bx	lr

0800b2dc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800b2dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2e0:	2300      	movs	r3, #0
 800b2e2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800b2e4:	8003      	strh	r3, [r0, #0]
 800b2e6:	4604      	mov	r4, r0
 800b2e8:	8043      	strh	r3, [r0, #2]
 800b2ea:	8083      	strh	r3, [r0, #4]
 800b2ec:	80c3      	strh	r3, [r0, #6]
 800b2ee:	2d00      	cmp	r5, #0
 800b2f0:	d040      	beq.n	800b374 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800b2f2:	1d28      	adds	r0, r5, #4
 800b2f4:	f7ff ffe5 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b2f8:	b988      	cbnz	r0, 800b31e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b2fa:	4620      	mov	r0, r4
 800b2fc:	f7ff ffe1 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b300:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b304:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b308:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800b30c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800b310:	b138      	cbz	r0, 800b322 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800b312:	8022      	strh	r2, [r4, #0]
 800b314:	8063      	strh	r3, [r4, #2]
 800b316:	f8a4 e004 	strh.w	lr, [r4, #4]
 800b31a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800b31e:	69ad      	ldr	r5, [r5, #24]
 800b320:	e7e5      	b.n	800b2ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800b322:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b326:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b32a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800b32e:	4290      	cmp	r0, r2
 800b330:	4607      	mov	r7, r0
 800b332:	bfa8      	it	ge
 800b334:	4617      	movge	r7, r2
 800b336:	4472      	add	r2, lr
 800b338:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800b33c:	8027      	strh	r7, [r4, #0]
 800b33e:	4299      	cmp	r1, r3
 800b340:	460e      	mov	r6, r1
 800b342:	4440      	add	r0, r8
 800b344:	bfa8      	it	ge
 800b346:	461e      	movge	r6, r3
 800b348:	4471      	add	r1, lr
 800b34a:	4463      	add	r3, ip
 800b34c:	b200      	sxth	r0, r0
 800b34e:	b212      	sxth	r2, r2
 800b350:	b209      	sxth	r1, r1
 800b352:	b21b      	sxth	r3, r3
 800b354:	4290      	cmp	r0, r2
 800b356:	bfac      	ite	ge
 800b358:	ebc7 0200 	rsbge	r2, r7, r0
 800b35c:	ebc7 0202 	rsblt	r2, r7, r2
 800b360:	4299      	cmp	r1, r3
 800b362:	bfac      	ite	ge
 800b364:	ebc6 0301 	rsbge	r3, r6, r1
 800b368:	ebc6 0303 	rsblt	r3, r6, r3
 800b36c:	8066      	strh	r6, [r4, #2]
 800b36e:	80a2      	strh	r2, [r4, #4]
 800b370:	80e3      	strh	r3, [r4, #6]
 800b372:	e7d4      	b.n	800b31e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b374:	4620      	mov	r0, r4
 800b376:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b37a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b37a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b37e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b382:	b383      	cbz	r3, 800b3e6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b384:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b386:	b374      	cbz	r4, 800b3e6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b388:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b38c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b390:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b394:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b398:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b39c:	b303      	cbz	r3, 800b3e0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b39e:	4668      	mov	r0, sp
 800b3a0:	1d21      	adds	r1, r4, #4
 800b3a2:	f8ad 5000 	strh.w	r5, [sp]
 800b3a6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b3aa:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b3ae:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b3b2:	f7ff ff43 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800b3b6:	4668      	mov	r0, sp
 800b3b8:	f7ff ff83 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b3bc:	b980      	cbnz	r0, 800b3e0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b3be:	f8bd 3000 	ldrh.w	r3, [sp]
 800b3c2:	88a2      	ldrh	r2, [r4, #4]
 800b3c4:	1a9b      	subs	r3, r3, r2
 800b3c6:	f8ad 3000 	strh.w	r3, [sp]
 800b3ca:	88e2      	ldrh	r2, [r4, #6]
 800b3cc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b3d0:	1a9b      	subs	r3, r3, r2
 800b3d2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b3d6:	6823      	ldr	r3, [r4, #0]
 800b3d8:	4669      	mov	r1, sp
 800b3da:	689b      	ldr	r3, [r3, #8]
 800b3dc:	4620      	mov	r0, r4
 800b3de:	4798      	blx	r3
 800b3e0:	69a4      	ldr	r4, [r4, #24]
 800b3e2:	2c00      	cmp	r4, #0
 800b3e4:	d1d8      	bne.n	800b398 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b3e6:	b002      	add	sp, #8
 800b3e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b3ec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b3ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b3ee:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b3f2:	460d      	mov	r5, r1
 800b3f4:	4616      	mov	r6, r2
 800b3f6:	b323      	cbz	r3, 800b442 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b3f8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b3fa:	b314      	cbz	r4, 800b442 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b3fc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b400:	b1eb      	cbz	r3, 800b43e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b402:	6828      	ldr	r0, [r5, #0]
 800b404:	6869      	ldr	r1, [r5, #4]
 800b406:	466b      	mov	r3, sp
 800b408:	c303      	stmia	r3!, {r0, r1}
 800b40a:	4668      	mov	r0, sp
 800b40c:	1d21      	adds	r1, r4, #4
 800b40e:	f7ff ff15 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800b412:	4668      	mov	r0, sp
 800b414:	f7ff ff55 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b418:	b988      	cbnz	r0, 800b43e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b41a:	f8bd 3000 	ldrh.w	r3, [sp]
 800b41e:	88a2      	ldrh	r2, [r4, #4]
 800b420:	1a9b      	subs	r3, r3, r2
 800b422:	f8ad 3000 	strh.w	r3, [sp]
 800b426:	88e2      	ldrh	r2, [r4, #6]
 800b428:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b42c:	1a9b      	subs	r3, r3, r2
 800b42e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b432:	6823      	ldr	r3, [r4, #0]
 800b434:	4632      	mov	r2, r6
 800b436:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b438:	4669      	mov	r1, sp
 800b43a:	4620      	mov	r0, r4
 800b43c:	4798      	blx	r3
 800b43e:	69a4      	ldr	r4, [r4, #24]
 800b440:	e7db      	b.n	800b3fa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b442:	b002      	add	sp, #8
 800b444:	bd70      	pop	{r4, r5, r6, pc}

0800b446 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b446:	b513      	push	{r0, r1, r4, lr}
 800b448:	6803      	ldr	r3, [r0, #0]
 800b44a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800b44e:	2300      	movs	r3, #0
 800b450:	e9cd 3300 	strd	r3, r3, [sp]
 800b454:	466b      	mov	r3, sp
 800b456:	47a0      	blx	r4
 800b458:	b002      	add	sp, #8
 800b45a:	bd10      	pop	{r4, pc}

0800b45c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b45c:	2301      	movs	r3, #1
 800b45e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b462:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b466:	4770      	bx	lr

0800b468 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b468:	2301      	movs	r3, #1
 800b46a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b46e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b472:	4770      	bx	lr

0800b474 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b474:	6843      	ldr	r3, [r0, #4]
 800b476:	2201      	movs	r2, #1
 800b478:	725a      	strb	r2, [r3, #9]
 800b47a:	6840      	ldr	r0, [r0, #4]
 800b47c:	6803      	ldr	r3, [r0, #0]
 800b47e:	691b      	ldr	r3, [r3, #16]
 800b480:	4718      	bx	r3

0800b482 <_ZN8touchgfx3HAL8flushDMAEv>:
 800b482:	6840      	ldr	r0, [r0, #4]
 800b484:	6803      	ldr	r3, [r0, #0]
 800b486:	689b      	ldr	r3, [r3, #8]
 800b488:	4718      	bx	r3

0800b48a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b48a:	b530      	push	{r4, r5, lr}
 800b48c:	b08b      	sub	sp, #44	; 0x2c
 800b48e:	6804      	ldr	r4, [r0, #0]
 800b490:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800b494:	9509      	str	r5, [sp, #36]	; 0x24
 800b496:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800b49a:	9508      	str	r5, [sp, #32]
 800b49c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800b4a0:	9507      	str	r5, [sp, #28]
 800b4a2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800b4a6:	9506      	str	r5, [sp, #24]
 800b4a8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800b4ac:	9505      	str	r5, [sp, #20]
 800b4ae:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800b4b2:	9504      	str	r5, [sp, #16]
 800b4b4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800b4b8:	9503      	str	r5, [sp, #12]
 800b4ba:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b4be:	9502      	str	r5, [sp, #8]
 800b4c0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800b4c4:	e9cd 3500 	strd	r3, r5, [sp]
 800b4c8:	4613      	mov	r3, r2
 800b4ca:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800b4cc:	2200      	movs	r2, #0
 800b4ce:	47a0      	blx	r4
 800b4d0:	b00b      	add	sp, #44	; 0x2c
 800b4d2:	bd30      	pop	{r4, r5, pc}

0800b4d4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b4d4:	4b04      	ldr	r3, [pc, #16]	; (800b4e8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b4d6:	781b      	ldrb	r3, [r3, #0]
 800b4d8:	b123      	cbz	r3, 800b4e4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b4da:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b4de:	f080 0001 	eor.w	r0, r0, #1
 800b4e2:	4770      	bx	lr
 800b4e4:	2001      	movs	r0, #1
 800b4e6:	4770      	bx	lr
 800b4e8:	200157fe 	.word	0x200157fe

0800b4ec <_ZN8touchgfx3HAL8endFrameEv>:
 800b4ec:	b510      	push	{r4, lr}
 800b4ee:	4604      	mov	r4, r0
 800b4f0:	6840      	ldr	r0, [r0, #4]
 800b4f2:	6803      	ldr	r3, [r0, #0]
 800b4f4:	689b      	ldr	r3, [r3, #8]
 800b4f6:	4798      	blx	r3
 800b4f8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b4fc:	b113      	cbz	r3, 800b504 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b4fe:	2301      	movs	r3, #1
 800b500:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b504:	bd10      	pop	{r4, pc}

0800b506 <_ZN8touchgfx3HAL10initializeEv>:
 800b506:	b510      	push	{r4, lr}
 800b508:	4604      	mov	r4, r0
 800b50a:	f7f5 f9ed 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b50e:	6860      	ldr	r0, [r4, #4]
 800b510:	6803      	ldr	r3, [r0, #0]
 800b512:	68db      	ldr	r3, [r3, #12]
 800b514:	4798      	blx	r3
 800b516:	68e0      	ldr	r0, [r4, #12]
 800b518:	6803      	ldr	r3, [r0, #0]
 800b51a:	689b      	ldr	r3, [r3, #8]
 800b51c:	4798      	blx	r3
 800b51e:	6823      	ldr	r3, [r4, #0]
 800b520:	4620      	mov	r0, r4
 800b522:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b528:	4718      	bx	r3
	...

0800b52c <_ZN8touchgfx3HAL4tickEv>:
 800b52c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b52e:	6803      	ldr	r3, [r0, #0]
 800b530:	4d5b      	ldr	r5, [pc, #364]	; (800b6a0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b532:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b536:	4604      	mov	r4, r0
 800b538:	4798      	blx	r3
 800b53a:	2800      	cmp	r0, #0
 800b53c:	f000 8095 	beq.w	800b66a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b540:	2001      	movs	r0, #1
 800b542:	f7f5 f8fd 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b546:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b54a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b54e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b552:	2600      	movs	r6, #0
 800b554:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b558:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b55c:	b133      	cbz	r3, 800b56c <_ZN8touchgfx3HAL4tickEv+0x40>
 800b55e:	6823      	ldr	r3, [r4, #0]
 800b560:	4620      	mov	r0, r4
 800b562:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b566:	4798      	blx	r3
 800b568:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b56c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b570:	6862      	ldr	r2, [r4, #4]
 800b572:	f083 0301 	eor.w	r3, r3, #1
 800b576:	7253      	strb	r3, [r2, #9]
 800b578:	2601      	movs	r6, #1
 800b57a:	702e      	strb	r6, [r5, #0]
 800b57c:	f005 fff0 	bl	8011560 <_ZN8touchgfx11Application11getInstanceEv>
 800b580:	6803      	ldr	r3, [r0, #0]
 800b582:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b584:	4798      	blx	r3
 800b586:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b58a:	b90b      	cbnz	r3, 800b590 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b58c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b590:	f005 ffe6 	bl	8011560 <_ZN8touchgfx11Application11getInstanceEv>
 800b594:	6803      	ldr	r3, [r0, #0]
 800b596:	695b      	ldr	r3, [r3, #20]
 800b598:	4798      	blx	r3
 800b59a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b59c:	6803      	ldr	r3, [r0, #0]
 800b59e:	691b      	ldr	r3, [r3, #16]
 800b5a0:	4798      	blx	r3
 800b5a2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b5a6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b5aa:	3b01      	subs	r3, #1
 800b5ac:	b2db      	uxtb	r3, r3
 800b5ae:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b5b2:	b10a      	cbz	r2, 800b5b8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b5b4:	2b00      	cmp	r3, #0
 800b5b6:	d1eb      	bne.n	800b590 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b5b8:	4a3a      	ldr	r2, [pc, #232]	; (800b6a4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b5ba:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b5be:	7813      	ldrb	r3, [r2, #0]
 800b5c0:	3301      	adds	r3, #1
 800b5c2:	b25b      	sxtb	r3, r3
 800b5c4:	4299      	cmp	r1, r3
 800b5c6:	7013      	strb	r3, [r2, #0]
 800b5c8:	dc10      	bgt.n	800b5ec <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b5ca:	68e0      	ldr	r0, [r4, #12]
 800b5cc:	2300      	movs	r3, #0
 800b5ce:	7013      	strb	r3, [r2, #0]
 800b5d0:	6803      	ldr	r3, [r0, #0]
 800b5d2:	aa03      	add	r2, sp, #12
 800b5d4:	68db      	ldr	r3, [r3, #12]
 800b5d6:	a902      	add	r1, sp, #8
 800b5d8:	4798      	blx	r3
 800b5da:	6823      	ldr	r3, [r4, #0]
 800b5dc:	2800      	cmp	r0, #0
 800b5de:	d050      	beq.n	800b682 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b5e0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b5e4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b5e8:	4620      	mov	r0, r4
 800b5ea:	4798      	blx	r3
 800b5ec:	6960      	ldr	r0, [r4, #20]
 800b5ee:	2300      	movs	r3, #0
 800b5f0:	f88d 3007 	strb.w	r3, [sp, #7]
 800b5f4:	b158      	cbz	r0, 800b60e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b5f6:	6803      	ldr	r3, [r0, #0]
 800b5f8:	f10d 0107 	add.w	r1, sp, #7
 800b5fc:	68db      	ldr	r3, [r3, #12]
 800b5fe:	4798      	blx	r3
 800b600:	b128      	cbz	r0, 800b60e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b602:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b604:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b608:	6803      	ldr	r3, [r0, #0]
 800b60a:	68db      	ldr	r3, [r3, #12]
 800b60c:	4798      	blx	r3
 800b60e:	f104 001c 	add.w	r0, r4, #28
 800b612:	f014 fef9 	bl	8020408 <_ZN8touchgfx8Gestures4tickEv>
 800b616:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b61a:	b30b      	cbz	r3, 800b660 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b61c:	6920      	ldr	r0, [r4, #16]
 800b61e:	6803      	ldr	r3, [r0, #0]
 800b620:	691b      	ldr	r3, [r3, #16]
 800b622:	4798      	blx	r3
 800b624:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b626:	4606      	mov	r6, r0
 800b628:	b903      	cbnz	r3, 800b62c <_ZN8touchgfx3HAL4tickEv+0x100>
 800b62a:	6720      	str	r0, [r4, #112]	; 0x70
 800b62c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b62e:	4a1e      	ldr	r2, [pc, #120]	; (800b6a8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b630:	1af3      	subs	r3, r6, r3
 800b632:	4293      	cmp	r3, r2
 800b634:	d914      	bls.n	800b660 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b636:	6920      	ldr	r0, [r4, #16]
 800b638:	6803      	ldr	r3, [r0, #0]
 800b63a:	699b      	ldr	r3, [r3, #24]
 800b63c:	4798      	blx	r3
 800b63e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b640:	2264      	movs	r2, #100	; 0x64
 800b642:	1af3      	subs	r3, r6, r3
 800b644:	fbb3 f3f2 	udiv	r3, r3, r2
 800b648:	fbb0 f0f3 	udiv	r0, r0, r3
 800b64c:	2800      	cmp	r0, #0
 800b64e:	dc1d      	bgt.n	800b68c <_ZN8touchgfx3HAL4tickEv+0x160>
 800b650:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b654:	6920      	ldr	r0, [r4, #16]
 800b656:	6803      	ldr	r3, [r0, #0]
 800b658:	2100      	movs	r1, #0
 800b65a:	69db      	ldr	r3, [r3, #28]
 800b65c:	4798      	blx	r3
 800b65e:	6726      	str	r6, [r4, #112]	; 0x70
 800b660:	f005 ff7e 	bl	8011560 <_ZN8touchgfx11Application11getInstanceEv>
 800b664:	6803      	ldr	r3, [r0, #0]
 800b666:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b668:	4798      	blx	r3
 800b66a:	6823      	ldr	r3, [r4, #0]
 800b66c:	4620      	mov	r0, r4
 800b66e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b672:	4798      	blx	r3
 800b674:	2001      	movs	r0, #1
 800b676:	f7f5 f864 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b67a:	2300      	movs	r3, #0
 800b67c:	702b      	strb	r3, [r5, #0]
 800b67e:	b004      	add	sp, #16
 800b680:	bd70      	pop	{r4, r5, r6, pc}
 800b682:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b686:	4620      	mov	r0, r4
 800b688:	4798      	blx	r3
 800b68a:	e7af      	b.n	800b5ec <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b68c:	2863      	cmp	r0, #99	; 0x63
 800b68e:	bfcb      	itete	gt
 800b690:	2300      	movgt	r3, #0
 800b692:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b696:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b69a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b69e:	e7d9      	b.n	800b654 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b6a0:	20015804 	.word	0x20015804
 800b6a4:	20015805 	.word	0x20015805
 800b6a8:	05f5e100 	.word	0x05f5e100

0800b6ac <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b6ac:	f7f5 b94c 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b6b0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b6b0:	6581      	str	r1, [r0, #88]	; 0x58
 800b6b2:	301c      	adds	r0, #28
 800b6b4:	f014 bea6 	b.w	8020404 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b6b8 <_ZN8touchgfx3HAL5touchEll>:
 800b6b8:	b530      	push	{r4, r5, lr}
 800b6ba:	b087      	sub	sp, #28
 800b6bc:	4604      	mov	r4, r0
 800b6be:	a804      	add	r0, sp, #16
 800b6c0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b6c4:	f005 fd0e 	bl	80110e4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b6c8:	9b04      	ldr	r3, [sp, #16]
 800b6ca:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b6ce:	a906      	add	r1, sp, #24
 800b6d0:	9b05      	ldr	r3, [sp, #20]
 800b6d2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b6d6:	a803      	add	r0, sp, #12
 800b6d8:	f005 fd56 	bl	8011188 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b6dc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b6e0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b6e4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b6e8:	f104 001c 	add.w	r0, r4, #28
 800b6ec:	b189      	cbz	r1, 800b712 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b6ee:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b6f2:	9300      	str	r3, [sp, #0]
 800b6f4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b6f8:	4613      	mov	r3, r2
 800b6fa:	462a      	mov	r2, r5
 800b6fc:	f014 fe92 	bl	8020424 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b700:	b128      	cbz	r0, 800b70e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b702:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b706:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b708:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b70c:	6623      	str	r3, [r4, #96]	; 0x60
 800b70e:	b007      	add	sp, #28
 800b710:	bd30      	pop	{r4, r5, pc}
 800b712:	f014 fec7 	bl	80204a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b716:	2301      	movs	r3, #1
 800b718:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b71c:	e7f1      	b.n	800b702 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b71e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b71e:	b510      	push	{r4, lr}
 800b720:	2b00      	cmp	r3, #0
 800b722:	d046      	beq.n	800b7b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b724:	ea81 0002 	eor.w	r0, r1, r2
 800b728:	07c4      	lsls	r4, r0, #31
 800b72a:	d508      	bpl.n	800b73e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b72c:	440b      	add	r3, r1
 800b72e:	3a01      	subs	r2, #1
 800b730:	428b      	cmp	r3, r1
 800b732:	d93e      	bls.n	800b7b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b734:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b738:	f801 0b01 	strb.w	r0, [r1], #1
 800b73c:	e7f8      	b.n	800b730 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b73e:	07d0      	lsls	r0, r2, #31
 800b740:	bf42      	ittt	mi
 800b742:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b746:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b74a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b74e:	2b01      	cmp	r3, #1
 800b750:	d911      	bls.n	800b776 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b752:	ea81 0402 	eor.w	r4, r1, r2
 800b756:	07a4      	lsls	r4, r4, #30
 800b758:	4610      	mov	r0, r2
 800b75a:	d022      	beq.n	800b7a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b75c:	f023 0401 	bic.w	r4, r3, #1
 800b760:	440c      	add	r4, r1
 800b762:	428c      	cmp	r4, r1
 800b764:	4602      	mov	r2, r0
 800b766:	d904      	bls.n	800b772 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b768:	8812      	ldrh	r2, [r2, #0]
 800b76a:	f821 2b02 	strh.w	r2, [r1], #2
 800b76e:	3002      	adds	r0, #2
 800b770:	e7f7      	b.n	800b762 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b772:	f003 0301 	and.w	r3, r3, #1
 800b776:	f023 0003 	bic.w	r0, r3, #3
 800b77a:	4408      	add	r0, r1
 800b77c:	4288      	cmp	r0, r1
 800b77e:	4614      	mov	r4, r2
 800b780:	d904      	bls.n	800b78c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b782:	6824      	ldr	r4, [r4, #0]
 800b784:	f841 4b04 	str.w	r4, [r1], #4
 800b788:	3204      	adds	r2, #4
 800b78a:	e7f7      	b.n	800b77c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b78c:	f003 0303 	and.w	r3, r3, #3
 800b790:	440b      	add	r3, r1
 800b792:	3a01      	subs	r2, #1
 800b794:	428b      	cmp	r3, r1
 800b796:	d90c      	bls.n	800b7b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b798:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b79c:	f801 0b01 	strb.w	r0, [r1], #1
 800b7a0:	e7f8      	b.n	800b794 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b7a2:	0790      	lsls	r0, r2, #30
 800b7a4:	d0e7      	beq.n	800b776 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b7a6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b7aa:	f821 0b02 	strh.w	r0, [r1], #2
 800b7ae:	3b02      	subs	r3, #2
 800b7b0:	e7e1      	b.n	800b776 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b7b2:	2001      	movs	r0, #1
 800b7b4:	bd10      	pop	{r4, pc}

0800b7b6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b7b6:	b510      	push	{r4, lr}
 800b7b8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b7bc:	4604      	mov	r4, r0
 800b7be:	b153      	cbz	r3, 800b7d6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b7c0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b7c4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b7c8:	2101      	movs	r1, #1
 800b7ca:	301c      	adds	r0, #28
 800b7cc:	f014 fe6a 	bl	80204a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b7d0:	2300      	movs	r3, #0
 800b7d2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b7d6:	bd10      	pop	{r4, pc}

0800b7d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b7d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b7dc:	b085      	sub	sp, #20
 800b7de:	ad04      	add	r5, sp, #16
 800b7e0:	4604      	mov	r4, r0
 800b7e2:	2000      	movs	r0, #0
 800b7e4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b7e8:	69a0      	ldr	r0, [r4, #24]
 800b7ea:	6806      	ldr	r6, [r0, #0]
 800b7ec:	9501      	str	r5, [sp, #4]
 800b7ee:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b7f2:	9500      	str	r5, [sp, #0]
 800b7f4:	6835      	ldr	r5, [r6, #0]
 800b7f6:	4699      	mov	r9, r3
 800b7f8:	460f      	mov	r7, r1
 800b7fa:	4690      	mov	r8, r2
 800b7fc:	47a8      	blx	r5
 800b7fe:	4d10      	ldr	r5, [pc, #64]	; (800b840 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b800:	4606      	mov	r6, r0
 800b802:	f8a5 9000 	strh.w	r9, [r5]
 800b806:	f7f7 f99d 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800b80a:	6803      	ldr	r3, [r0, #0]
 800b80c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b80e:	4798      	blx	r3
 800b810:	b128      	cbz	r0, 800b81e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b812:	2801      	cmp	r0, #1
 800b814:	d00b      	beq.n	800b82e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b816:	4630      	mov	r0, r6
 800b818:	b005      	add	sp, #20
 800b81a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b81e:	882b      	ldrh	r3, [r5, #0]
 800b820:	fb08 7203 	mla	r2, r8, r3, r7
 800b824:	9b03      	ldr	r3, [sp, #12]
 800b826:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b82a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b82c:	e7f3      	b.n	800b816 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b82e:	882a      	ldrh	r2, [r5, #0]
 800b830:	9b03      	ldr	r3, [sp, #12]
 800b832:	fb08 7202 	mla	r2, r8, r2, r7
 800b836:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b83a:	1a9a      	subs	r2, r3, r2
 800b83c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b83e:	e7ea      	b.n	800b816 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b840:	200157fa 	.word	0x200157fa

0800b844 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b844:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b846:	b08b      	sub	sp, #44	; 0x2c
 800b848:	4617      	mov	r7, r2
 800b84a:	4604      	mov	r4, r0
 800b84c:	460e      	mov	r6, r1
 800b84e:	461d      	mov	r5, r3
 800b850:	f7f7 f978 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800b854:	6803      	ldr	r3, [r0, #0]
 800b856:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b858:	4798      	blx	r3
 800b85a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b85e:	9007      	str	r0, [sp, #28]
 800b860:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b864:	4b0d      	ldr	r3, [pc, #52]	; (800b89c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b866:	6822      	ldr	r2, [r4, #0]
 800b868:	881b      	ldrh	r3, [r3, #0]
 800b86a:	9306      	str	r3, [sp, #24]
 800b86c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b870:	9305      	str	r3, [sp, #20]
 800b872:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b876:	9304      	str	r3, [sp, #16]
 800b878:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b87c:	9303      	str	r3, [sp, #12]
 800b87e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b882:	9302      	str	r3, [sp, #8]
 800b884:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b888:	e9cd 5300 	strd	r5, r3, [sp]
 800b88c:	4631      	mov	r1, r6
 800b88e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b890:	463b      	mov	r3, r7
 800b892:	2200      	movs	r2, #0
 800b894:	4620      	mov	r0, r4
 800b896:	47a8      	blx	r5
 800b898:	b00b      	add	sp, #44	; 0x2c
 800b89a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b89c:	200157fa 	.word	0x200157fa

0800b8a0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b8a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b8a4:	4698      	mov	r8, r3
 800b8a6:	6803      	ldr	r3, [r0, #0]
 800b8a8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b8aa:	4b15      	ldr	r3, [pc, #84]	; (800b900 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b8ac:	b08b      	sub	sp, #44	; 0x2c
 800b8ae:	4617      	mov	r7, r2
 800b8b0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b8b4:	460e      	mov	r6, r1
 800b8b6:	4604      	mov	r4, r0
 800b8b8:	f7f7 f944 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800b8bc:	6803      	ldr	r3, [r0, #0]
 800b8be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b8c0:	4798      	blx	r3
 800b8c2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b8c6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b8ca:	2302      	movs	r3, #2
 800b8cc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b8d0:	2301      	movs	r3, #1
 800b8d2:	9305      	str	r3, [sp, #20]
 800b8d4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b8d8:	9304      	str	r3, [sp, #16]
 800b8da:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b8de:	9303      	str	r3, [sp, #12]
 800b8e0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b8e4:	9302      	str	r3, [sp, #8]
 800b8e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b8ea:	2200      	movs	r2, #0
 800b8ec:	e9cd 8300 	strd	r8, r3, [sp]
 800b8f0:	4631      	mov	r1, r6
 800b8f2:	463b      	mov	r3, r7
 800b8f4:	4620      	mov	r0, r4
 800b8f6:	47a8      	blx	r5
 800b8f8:	b00b      	add	sp, #44	; 0x2c
 800b8fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b8fe:	bf00      	nop
 800b900:	200157fa 	.word	0x200157fa

0800b904 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b904:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b908:	4698      	mov	r8, r3
 800b90a:	6803      	ldr	r3, [r0, #0]
 800b90c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b90e:	4b11      	ldr	r3, [pc, #68]	; (800b954 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b910:	b087      	sub	sp, #28
 800b912:	f8b3 9000 	ldrh.w	r9, [r3]
 800b916:	460e      	mov	r6, r1
 800b918:	4617      	mov	r7, r2
 800b91a:	4604      	mov	r4, r0
 800b91c:	f7f7 f912 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800b920:	6803      	ldr	r3, [r0, #0]
 800b922:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b924:	4798      	blx	r3
 800b926:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b92a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b92e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b932:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b936:	9302      	str	r3, [sp, #8]
 800b938:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b93c:	9301      	str	r3, [sp, #4]
 800b93e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b942:	9300      	str	r3, [sp, #0]
 800b944:	463a      	mov	r2, r7
 800b946:	4643      	mov	r3, r8
 800b948:	4631      	mov	r1, r6
 800b94a:	4620      	mov	r0, r4
 800b94c:	47a8      	blx	r5
 800b94e:	b007      	add	sp, #28
 800b950:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b954:	200157fa 	.word	0x200157fa

0800b958 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b95c:	4604      	mov	r4, r0
 800b95e:	b08f      	sub	sp, #60	; 0x3c
 800b960:	4610      	mov	r0, r2
 800b962:	460d      	mov	r5, r1
 800b964:	4691      	mov	r9, r2
 800b966:	461e      	mov	r6, r3
 800b968:	f008 ff96 	bl	8014898 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b96c:	2800      	cmp	r0, #0
 800b96e:	f000 809d 	beq.w	800baac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b972:	6823      	ldr	r3, [r4, #0]
 800b974:	f8df b198 	ldr.w	fp, [pc, #408]	; 800bb10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b978:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b97a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800bb14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b97e:	4f61      	ldr	r7, [pc, #388]	; (800bb04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b980:	4620      	mov	r0, r4
 800b982:	4798      	blx	r3
 800b984:	6823      	ldr	r3, [r4, #0]
 800b986:	4620      	mov	r0, r4
 800b988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b98a:	4798      	blx	r3
 800b98c:	f8bb 3000 	ldrh.w	r3, [fp]
 800b990:	9301      	str	r3, [sp, #4]
 800b992:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b996:	f8ba 3000 	ldrh.w	r3, [sl]
 800b99a:	9302      	str	r3, [sp, #8]
 800b99c:	883b      	ldrh	r3, [r7, #0]
 800b99e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b9a2:	9303      	str	r3, [sp, #12]
 800b9a4:	4b58      	ldr	r3, [pc, #352]	; (800bb08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b9a6:	9305      	str	r3, [sp, #20]
 800b9a8:	881a      	ldrh	r2, [r3, #0]
 800b9aa:	9204      	str	r2, [sp, #16]
 800b9ac:	4640      	mov	r0, r8
 800b9ae:	f009 f807 	bl	80149c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b9b2:	8038      	strh	r0, [r7, #0]
 800b9b4:	4640      	mov	r0, r8
 800b9b6:	f009 f837 	bl	8014a28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b9ba:	9b05      	ldr	r3, [sp, #20]
 800b9bc:	b280      	uxth	r0, r0
 800b9be:	8018      	strh	r0, [r3, #0]
 800b9c0:	4b52      	ldr	r3, [pc, #328]	; (800bb0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b9c2:	781b      	ldrb	r3, [r3, #0]
 800b9c4:	2b00      	cmp	r3, #0
 800b9c6:	d174      	bne.n	800bab2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b9c8:	883b      	ldrh	r3, [r7, #0]
 800b9ca:	f8ab 3000 	strh.w	r3, [fp]
 800b9ce:	f8aa 0000 	strh.w	r0, [sl]
 800b9d2:	4648      	mov	r0, r9
 800b9d4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b9d8:	f008 ff5e 	bl	8014898 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b9dc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b9e0:	2200      	movs	r2, #0
 800b9e2:	4611      	mov	r1, r2
 800b9e4:	4628      	mov	r0, r5
 800b9e6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b9ea:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b9ee:	f7f7 fb4b 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 800b9f2:	2301      	movs	r3, #1
 800b9f4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b9f8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b9fc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ba00:	2b00      	cmp	r3, #0
 800ba02:	dd5c      	ble.n	800babe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ba04:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ba08:	2b00      	cmp	r3, #0
 800ba0a:	dd58      	ble.n	800babe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ba0c:	462a      	mov	r2, r5
 800ba0e:	ab0a      	add	r3, sp, #40	; 0x28
 800ba10:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ba14:	6851      	ldr	r1, [r2, #4]
 800ba16:	c303      	stmia	r3!, {r0, r1}
 800ba18:	4631      	mov	r1, r6
 800ba1a:	a80a      	add	r0, sp, #40	; 0x28
 800ba1c:	f7ff fc0e 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800ba20:	4b38      	ldr	r3, [pc, #224]	; (800bb04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ba22:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ba26:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ba2a:	2100      	movs	r1, #0
 800ba2c:	aa0a      	add	r2, sp, #40	; 0x28
 800ba2e:	4b36      	ldr	r3, [pc, #216]	; (800bb08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ba30:	910c      	str	r1, [sp, #48]	; 0x30
 800ba32:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ba36:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ba3a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ba3e:	ab08      	add	r3, sp, #32
 800ba40:	e883 0003 	stmia.w	r3, {r0, r1}
 800ba44:	4618      	mov	r0, r3
 800ba46:	a90c      	add	r1, sp, #48	; 0x30
 800ba48:	f7ff fbf8 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800ba4c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800ba4e:	2b00      	cmp	r3, #0
 800ba50:	d13c      	bne.n	800bacc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800ba52:	2000      	movs	r0, #0
 800ba54:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800ba58:	2600      	movs	r6, #0
 800ba5a:	682a      	ldr	r2, [r5, #0]
 800ba5c:	696b      	ldr	r3, [r5, #20]
 800ba5e:	616e      	str	r6, [r5, #20]
 800ba60:	9305      	str	r3, [sp, #20]
 800ba62:	6892      	ldr	r2, [r2, #8]
 800ba64:	a908      	add	r1, sp, #32
 800ba66:	4628      	mov	r0, r5
 800ba68:	4790      	blx	r2
 800ba6a:	9b05      	ldr	r3, [sp, #20]
 800ba6c:	616b      	str	r3, [r5, #20]
 800ba6e:	4652      	mov	r2, sl
 800ba70:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800ba74:	4649      	mov	r1, r9
 800ba76:	4628      	mov	r0, r5
 800ba78:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800ba7c:	f7f7 fb04 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 800ba80:	4b23      	ldr	r3, [pc, #140]	; (800bb10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ba82:	9a01      	ldr	r2, [sp, #4]
 800ba84:	801a      	strh	r2, [r3, #0]
 800ba86:	4b23      	ldr	r3, [pc, #140]	; (800bb14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ba88:	9a02      	ldr	r2, [sp, #8]
 800ba8a:	801a      	strh	r2, [r3, #0]
 800ba8c:	4b1d      	ldr	r3, [pc, #116]	; (800bb04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ba8e:	9a03      	ldr	r2, [sp, #12]
 800ba90:	801a      	strh	r2, [r3, #0]
 800ba92:	4b1d      	ldr	r3, [pc, #116]	; (800bb08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ba94:	9a04      	ldr	r2, [sp, #16]
 800ba96:	801a      	strh	r2, [r3, #0]
 800ba98:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800ba9c:	6823      	ldr	r3, [r4, #0]
 800ba9e:	4620      	mov	r0, r4
 800baa0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800baa2:	4798      	blx	r3
 800baa4:	6823      	ldr	r3, [r4, #0]
 800baa6:	4620      	mov	r0, r4
 800baa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800baaa:	4798      	blx	r3
 800baac:	b00f      	add	sp, #60	; 0x3c
 800baae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bab2:	883b      	ldrh	r3, [r7, #0]
 800bab4:	f8ab 0000 	strh.w	r0, [fp]
 800bab8:	f8aa 3000 	strh.w	r3, [sl]
 800babc:	e789      	b.n	800b9d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800babe:	462a      	mov	r2, r5
 800bac0:	ab0a      	add	r3, sp, #40	; 0x28
 800bac2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800bac6:	6851      	ldr	r1, [r2, #4]
 800bac8:	c303      	stmia	r3!, {r0, r1}
 800baca:	e7a9      	b.n	800ba20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800bacc:	a807      	add	r0, sp, #28
 800bace:	f009 f8e7 	bl	8014ca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bad2:	4606      	mov	r6, r0
 800bad4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800bad6:	6803      	ldr	r3, [r0, #0]
 800bad8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bada:	4798      	blx	r3
 800badc:	4286      	cmp	r6, r0
 800bade:	d1b8      	bne.n	800ba52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800bae0:	f7f7 f830 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800bae4:	6803      	ldr	r3, [r0, #0]
 800bae6:	4606      	mov	r6, r0
 800bae8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800baea:	9305      	str	r3, [sp, #20]
 800baec:	a807      	add	r0, sp, #28
 800baee:	f009 f8d7 	bl	8014ca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800baf2:	9b05      	ldr	r3, [sp, #20]
 800baf4:	4601      	mov	r1, r0
 800baf6:	4630      	mov	r0, r6
 800baf8:	4798      	blx	r3
 800bafa:	f080 0001 	eor.w	r0, r0, #1
 800bafe:	b2c0      	uxtb	r0, r0
 800bb00:	e7a8      	b.n	800ba54 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800bb02:	bf00      	nop
 800bb04:	200157f4 	.word	0x200157f4
 800bb08:	200157f6 	.word	0x200157f6
 800bb0c:	200157f8 	.word	0x200157f8
 800bb10:	200157fa 	.word	0x200157fa
 800bb14:	200157fc 	.word	0x200157fc

0800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800bb18:	b510      	push	{r4, lr}
 800bb1a:	4b07      	ldr	r3, [pc, #28]	; (800bb38 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800bb1c:	781b      	ldrb	r3, [r3, #0]
 800bb1e:	4604      	mov	r4, r0
 800bb20:	b13b      	cbz	r3, 800bb32 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800bb22:	6803      	ldr	r3, [r0, #0]
 800bb24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bb26:	4798      	blx	r3
 800bb28:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800bb2a:	4283      	cmp	r3, r0
 800bb2c:	d101      	bne.n	800bb32 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800bb2e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800bb30:	bd10      	pop	{r4, pc}
 800bb32:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800bb34:	e7fc      	b.n	800bb30 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800bb36:	bf00      	nop
 800bb38:	200157fe 	.word	0x200157fe

0800bb3c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800bb3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb40:	b08a      	sub	sp, #40	; 0x28
 800bb42:	461d      	mov	r5, r3
 800bb44:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800bb48:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bb4c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bb50:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bb54:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bb58:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bb5c:	2400      	movs	r4, #0
 800bb5e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bb62:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800bb66:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bb6a:	4690      	mov	r8, r2
 800bb6c:	4607      	mov	r7, r0
 800bb6e:	9404      	str	r4, [sp, #16]
 800bb70:	f88d 4020 	strb.w	r4, [sp, #32]
 800bb74:	f7ff ffd0 	bl	800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb78:	fb06 8505 	mla	r5, r6, r5, r8
 800bb7c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800bb80:	6878      	ldr	r0, [r7, #4]
 800bb82:	9505      	str	r5, [sp, #20]
 800bb84:	f8ad 601e 	strh.w	r6, [sp, #30]
 800bb88:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800bb8c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800bb90:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800bb94:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800bb98:	6803      	ldr	r3, [r0, #0]
 800bb9a:	a901      	add	r1, sp, #4
 800bb9c:	685b      	ldr	r3, [r3, #4]
 800bb9e:	4798      	blx	r3
 800bba0:	b00a      	add	sp, #40	; 0x28
 800bba2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bba6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800bba6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bbaa:	b08b      	sub	sp, #44	; 0x2c
 800bbac:	2400      	movs	r4, #0
 800bbae:	461d      	mov	r5, r3
 800bbb0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800bbb4:	4688      	mov	r8, r1
 800bbb6:	4691      	mov	r9, r2
 800bbb8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800bbbc:	9404      	str	r4, [sp, #16]
 800bbbe:	4607      	mov	r7, r0
 800bbc0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bbc4:	f7ff ffa8 	bl	800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bbc8:	fb06 9505 	mla	r5, r6, r5, r9
 800bbcc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bbd0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bbd4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800bbd8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800bbdc:	6878      	ldr	r0, [r7, #4]
 800bbde:	9505      	str	r5, [sp, #20]
 800bbe0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bbe4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800bbe8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800bbec:	f8cd 8010 	str.w	r8, [sp, #16]
 800bbf0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800bbf4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800bbf8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800bbfc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800bc00:	6803      	ldr	r3, [r0, #0]
 800bc02:	a901      	add	r1, sp, #4
 800bc04:	685b      	ldr	r3, [r3, #4]
 800bc06:	4798      	blx	r3
 800bc08:	b00b      	add	sp, #44	; 0x2c
 800bc0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800bc10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800bc10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc14:	b08a      	sub	sp, #40	; 0x28
 800bc16:	4698      	mov	r8, r3
 800bc18:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800bc1c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800bc20:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800bc24:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800bc28:	2300      	movs	r3, #0
 800bc2a:	2d0b      	cmp	r5, #11
 800bc2c:	4606      	mov	r6, r0
 800bc2e:	9304      	str	r3, [sp, #16]
 800bc30:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800bc34:	d138      	bne.n	800bca8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800bc36:	2380      	movs	r3, #128	; 0x80
 800bc38:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bc3c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bc40:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bc44:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bc48:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bc4c:	f88d 0020 	strb.w	r0, [sp, #32]
 800bc50:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800bc54:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bc58:	4630      	mov	r0, r6
 800bc5a:	9203      	str	r2, [sp, #12]
 800bc5c:	f7ff ff5c 	bl	800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc60:	2c0b      	cmp	r4, #11
 800bc62:	bf98      	it	ls
 800bc64:	4b1b      	ldrls	r3, [pc, #108]	; (800bcd4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800bc66:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800bc6a:	bf98      	it	ls
 800bc6c:	5d19      	ldrbls	r1, [r3, r4]
 800bc6e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800bc72:	bf88      	it	hi
 800bc74:	2100      	movhi	r1, #0
 800bc76:	fb02 8307 	mla	r3, r2, r7, r8
 800bc7a:	10c9      	asrs	r1, r1, #3
 800bc7c:	fb01 0003 	mla	r0, r1, r3, r0
 800bc80:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800bc84:	9005      	str	r0, [sp, #20]
 800bc86:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800bc8a:	6870      	ldr	r0, [r6, #4]
 800bc8c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800bc90:	2300      	movs	r3, #0
 800bc92:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800bc96:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bc9a:	6803      	ldr	r3, [r0, #0]
 800bc9c:	a901      	add	r1, sp, #4
 800bc9e:	685b      	ldr	r3, [r3, #4]
 800bca0:	4798      	blx	r3
 800bca2:	b00a      	add	sp, #40	; 0x28
 800bca4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bca8:	2d02      	cmp	r5, #2
 800bcaa:	d109      	bne.n	800bcc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800bcac:	28ff      	cmp	r0, #255	; 0xff
 800bcae:	d105      	bne.n	800bcbc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800bcb0:	f1bc 0f00 	cmp.w	ip, #0
 800bcb4:	bf14      	ite	ne
 800bcb6:	2340      	movne	r3, #64	; 0x40
 800bcb8:	2320      	moveq	r3, #32
 800bcba:	e7bd      	b.n	800bc38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bcbc:	2340      	movs	r3, #64	; 0x40
 800bcbe:	e7bb      	b.n	800bc38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bcc0:	28ff      	cmp	r0, #255	; 0xff
 800bcc2:	d105      	bne.n	800bcd0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800bcc4:	f1bc 0f00 	cmp.w	ip, #0
 800bcc8:	bf14      	ite	ne
 800bcca:	2304      	movne	r3, #4
 800bccc:	2301      	moveq	r3, #1
 800bcce:	e7b3      	b.n	800bc38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bcd0:	2304      	movs	r3, #4
 800bcd2:	e7b1      	b.n	800bc38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bcd4:	08023d2c 	.word	0x08023d2c

0800bcd8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800bcd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcdc:	b08b      	sub	sp, #44	; 0x2c
 800bcde:	461d      	mov	r5, r3
 800bce0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800bce4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800bce8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800bcec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800bcf0:	bf14      	ite	ne
 800bcf2:	2308      	movne	r3, #8
 800bcf4:	2302      	moveq	r3, #2
 800bcf6:	2400      	movs	r4, #0
 800bcf8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bcfc:	4688      	mov	r8, r1
 800bcfe:	4693      	mov	fp, r2
 800bd00:	9404      	str	r4, [sp, #16]
 800bd02:	4607      	mov	r7, r0
 800bd04:	f7ff ff08 	bl	800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bd08:	2e0b      	cmp	r6, #11
 800bd0a:	bf98      	it	ls
 800bd0c:	4b15      	ldrls	r3, [pc, #84]	; (800bd64 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800bd0e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800bd12:	bf98      	it	ls
 800bd14:	5d9c      	ldrbls	r4, [r3, r6]
 800bd16:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800bd1a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bd1e:	fb05 b50a 	mla	r5, r5, sl, fp
 800bd22:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800bd26:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bd2a:	10e4      	asrs	r4, r4, #3
 800bd2c:	fb04 0405 	mla	r4, r4, r5, r0
 800bd30:	2300      	movs	r3, #0
 800bd32:	6878      	ldr	r0, [r7, #4]
 800bd34:	9405      	str	r4, [sp, #20]
 800bd36:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bd3a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800bd3e:	f8cd 8010 	str.w	r8, [sp, #16]
 800bd42:	f88d 9020 	strb.w	r9, [sp, #32]
 800bd46:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800bd4a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bd4e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800bd52:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800bd56:	6803      	ldr	r3, [r0, #0]
 800bd58:	a901      	add	r1, sp, #4
 800bd5a:	685b      	ldr	r3, [r3, #4]
 800bd5c:	4798      	blx	r3
 800bd5e:	b00b      	add	sp, #44	; 0x2c
 800bd60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd64:	08023d2c 	.word	0x08023d2c

0800bd68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800bd68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd6c:	461e      	mov	r6, r3
 800bd6e:	4b0a      	ldr	r3, [pc, #40]	; (800bd98 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800bd70:	460f      	mov	r7, r1
 800bd72:	881d      	ldrh	r5, [r3, #0]
 800bd74:	4690      	mov	r8, r2
 800bd76:	f7f6 fee5 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800bd7a:	6803      	ldr	r3, [r0, #0]
 800bd7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bd7e:	4798      	blx	r3
 800bd80:	280b      	cmp	r0, #11
 800bd82:	bf9a      	itte	ls
 800bd84:	4b05      	ldrls	r3, [pc, #20]	; (800bd9c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800bd86:	5c1c      	ldrbls	r4, [r3, r0]
 800bd88:	2400      	movhi	r4, #0
 800bd8a:	fb08 7005 	mla	r0, r8, r5, r7
 800bd8e:	10e4      	asrs	r4, r4, #3
 800bd90:	fb04 6000 	mla	r0, r4, r0, r6
 800bd94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd98:	200157fa 	.word	0x200157fa
 800bd9c:	08023d2c 	.word	0x08023d2c

0800bda0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800bda0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bda2:	b08b      	sub	sp, #44	; 0x2c
 800bda4:	461f      	mov	r7, r3
 800bda6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800bdaa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bdae:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bdb2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bdb6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bdba:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bdbe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bdc2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bdc6:	2500      	movs	r5, #0
 800bdc8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800bdcc:	f88d 3020 	strb.w	r3, [sp, #32]
 800bdd0:	4604      	mov	r4, r0
 800bdd2:	4616      	mov	r6, r2
 800bdd4:	9504      	str	r5, [sp, #16]
 800bdd6:	f7ff fe9f 	bl	800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bdda:	463a      	mov	r2, r7
 800bddc:	4631      	mov	r1, r6
 800bdde:	4603      	mov	r3, r0
 800bde0:	4620      	mov	r0, r4
 800bde2:	f7ff ffc1 	bl	800bd68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bde6:	4b0e      	ldr	r3, [pc, #56]	; (800be20 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800bde8:	9005      	str	r0, [sp, #20]
 800bdea:	881b      	ldrh	r3, [r3, #0]
 800bdec:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bdf0:	f7f6 fea8 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800bdf4:	6803      	ldr	r3, [r0, #0]
 800bdf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bdf8:	4798      	blx	r3
 800bdfa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800bdfc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800be00:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800be04:	9304      	str	r3, [sp, #16]
 800be06:	6860      	ldr	r0, [r4, #4]
 800be08:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800be0c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800be10:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800be14:	6803      	ldr	r3, [r0, #0]
 800be16:	a901      	add	r1, sp, #4
 800be18:	685b      	ldr	r3, [r3, #4]
 800be1a:	4798      	blx	r3
 800be1c:	b00b      	add	sp, #44	; 0x2c
 800be1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800be20:	200157fa 	.word	0x200157fa

0800be24 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800be24:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be26:	b08d      	sub	sp, #52	; 0x34
 800be28:	466b      	mov	r3, sp
 800be2a:	e883 0006 	stmia.w	r3, {r1, r2}
 800be2e:	2300      	movs	r3, #0
 800be30:	9306      	str	r3, [sp, #24]
 800be32:	6803      	ldr	r3, [r0, #0]
 800be34:	f8bd 6000 	ldrh.w	r6, [sp]
 800be38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800be3a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800be3e:	2501      	movs	r5, #1
 800be40:	9503      	str	r5, [sp, #12]
 800be42:	4604      	mov	r4, r0
 800be44:	4798      	blx	r3
 800be46:	463a      	mov	r2, r7
 800be48:	4631      	mov	r1, r6
 800be4a:	4603      	mov	r3, r0
 800be4c:	4620      	mov	r0, r4
 800be4e:	f7ff ff8b 	bl	800bd68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800be52:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800be54:	9307      	str	r3, [sp, #28]
 800be56:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800be5a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800be5e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800be62:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800be66:	4b0f      	ldr	r3, [pc, #60]	; (800bea4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800be68:	9004      	str	r0, [sp, #16]
 800be6a:	881b      	ldrh	r3, [r3, #0]
 800be6c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800be70:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800be74:	f7f6 fe66 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800be78:	6803      	ldr	r3, [r0, #0]
 800be7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800be7c:	4798      	blx	r3
 800be7e:	23ff      	movs	r3, #255	; 0xff
 800be80:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800be84:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800be88:	6860      	ldr	r0, [r4, #4]
 800be8a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800be8e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800be92:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800be96:	6803      	ldr	r3, [r0, #0]
 800be98:	a903      	add	r1, sp, #12
 800be9a:	685b      	ldr	r3, [r3, #4]
 800be9c:	4798      	blx	r3
 800be9e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800bea0:	b00d      	add	sp, #52	; 0x34
 800bea2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bea4:	200157fa 	.word	0x200157fa

0800bea8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800bea8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800beac:	b08c      	sub	sp, #48	; 0x30
 800beae:	461e      	mov	r6, r3
 800beb0:	466d      	mov	r5, sp
 800beb2:	2300      	movs	r3, #0
 800beb4:	e885 0006 	stmia.w	r5, {r1, r2}
 800beb8:	9306      	str	r3, [sp, #24]
 800beba:	6803      	ldr	r3, [r0, #0]
 800bebc:	f8bd 7000 	ldrh.w	r7, [sp]
 800bec0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bec2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800bec6:	2501      	movs	r5, #1
 800bec8:	9503      	str	r5, [sp, #12]
 800beca:	4604      	mov	r4, r0
 800becc:	4798      	blx	r3
 800bece:	4642      	mov	r2, r8
 800bed0:	4639      	mov	r1, r7
 800bed2:	4603      	mov	r3, r0
 800bed4:	4620      	mov	r0, r4
 800bed6:	f7ff ff47 	bl	800bd68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800beda:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bede:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bee2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bee6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800beea:	4b11      	ldr	r3, [pc, #68]	; (800bf30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800beec:	9004      	str	r0, [sp, #16]
 800beee:	881b      	ldrh	r3, [r3, #0]
 800bef0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800bef4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bef6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800befa:	9607      	str	r6, [sp, #28]
 800befc:	f7f6 fe22 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800bf00:	6803      	ldr	r3, [r0, #0]
 800bf02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bf04:	4798      	blx	r3
 800bf06:	23ff      	movs	r3, #255	; 0xff
 800bf08:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800bf0c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800bf10:	6860      	ldr	r0, [r4, #4]
 800bf12:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800bf16:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800bf1a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800bf1e:	6803      	ldr	r3, [r0, #0]
 800bf20:	a903      	add	r1, sp, #12
 800bf22:	685b      	ldr	r3, [r3, #4]
 800bf24:	4798      	blx	r3
 800bf26:	4630      	mov	r0, r6
 800bf28:	b00c      	add	sp, #48	; 0x30
 800bf2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf2e:	bf00      	nop
 800bf30:	200157fa 	.word	0x200157fa

0800bf34 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bf34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf36:	b085      	sub	sp, #20
 800bf38:	ac02      	add	r4, sp, #8
 800bf3a:	e884 0006 	stmia.w	r4, {r1, r2}
 800bf3e:	4605      	mov	r5, r0
 800bf40:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bf44:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bf48:	f7ff fde6 	bl	800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bf4c:	463a      	mov	r2, r7
 800bf4e:	4603      	mov	r3, r0
 800bf50:	4631      	mov	r1, r6
 800bf52:	4628      	mov	r0, r5
 800bf54:	f7ff ff08 	bl	800bd68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bf58:	4a05      	ldr	r2, [pc, #20]	; (800bf70 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bf5a:	682b      	ldr	r3, [r5, #0]
 800bf5c:	8812      	ldrh	r2, [r2, #0]
 800bf5e:	9200      	str	r2, [sp, #0]
 800bf60:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800bf62:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bf66:	4603      	mov	r3, r0
 800bf68:	4628      	mov	r0, r5
 800bf6a:	47b0      	blx	r6
 800bf6c:	b005      	add	sp, #20
 800bf6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf70:	200157fa 	.word	0x200157fa

0800bf74 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bf74:	b570      	push	{r4, r5, r6, lr}
 800bf76:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800bf7a:	4604      	mov	r4, r0
 800bf7c:	b19b      	cbz	r3, 800bfa6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bf7e:	2002      	movs	r0, #2
 800bf80:	f7f4 fbe0 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bf84:	2300      	movs	r3, #0
 800bf86:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800bf8a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800bf8e:	6823      	ldr	r3, [r4, #0]
 800bf90:	4620      	mov	r0, r4
 800bf92:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800bf96:	f7ff fdbf 	bl	800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bf9a:	462b      	mov	r3, r5
 800bf9c:	4601      	mov	r1, r0
 800bf9e:	4620      	mov	r0, r4
 800bfa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bfa4:	4718      	bx	r3
 800bfa6:	bd70      	pop	{r4, r5, r6, pc}

0800bfa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bfa8:	b538      	push	{r3, r4, r5, lr}
 800bfaa:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800bfae:	428b      	cmp	r3, r1
 800bfb0:	4604      	mov	r4, r0
 800bfb2:	460d      	mov	r5, r1
 800bfb4:	d006      	beq.n	800bfc4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bfb6:	6803      	ldr	r3, [r0, #0]
 800bfb8:	b929      	cbnz	r1, 800bfc6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bfba:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800bfbe:	4798      	blx	r3
 800bfc0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800bfc4:	bd38      	pop	{r3, r4, r5, pc}
 800bfc6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800bfca:	e7f8      	b.n	800bfbe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bfcc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bfcc:	b510      	push	{r4, lr}
 800bfce:	4b0d      	ldr	r3, [pc, #52]	; (800c004 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bfd0:	781b      	ldrb	r3, [r3, #0]
 800bfd2:	4604      	mov	r4, r0
 800bfd4:	b95b      	cbnz	r3, 800bfee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bfd6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bfda:	2b02      	cmp	r3, #2
 800bfdc:	d007      	beq.n	800bfee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bfde:	6840      	ldr	r0, [r0, #4]
 800bfe0:	f000 f92a 	bl	800c238 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bfe4:	b118      	cbz	r0, 800bfee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bfe6:	6862      	ldr	r2, [r4, #4]
 800bfe8:	7a53      	ldrb	r3, [r2, #9]
 800bfea:	2b00      	cmp	r3, #0
 800bfec:	d0fc      	beq.n	800bfe8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bfee:	f7f4 fca3 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bff2:	4620      	mov	r0, r4
 800bff4:	2100      	movs	r1, #0
 800bff6:	f7ff ffd7 	bl	800bfa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bffa:	4620      	mov	r0, r4
 800bffc:	f7ff fd8c 	bl	800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c000:	bd10      	pop	{r4, pc}
 800c002:	bf00      	nop
 800c004:	200157fe 	.word	0x200157fe

0800c008 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800c008:	b570      	push	{r4, r5, r6, lr}
 800c00a:	4604      	mov	r4, r0
 800c00c:	6803      	ldr	r3, [r0, #0]
 800c00e:	b919      	cbnz	r1, 800c018 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800c010:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c012:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c016:	4718      	bx	r3
 800c018:	2200      	movs	r2, #0
 800c01a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800c01e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800c022:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c024:	4798      	blx	r3
 800c026:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800c02a:	4605      	mov	r5, r0
 800c02c:	2101      	movs	r1, #1
 800c02e:	4620      	mov	r0, r4
 800c030:	f7ff ffba 	bl	800bfa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800c034:	4628      	mov	r0, r5
 800c036:	bd70      	pop	{r4, r5, r6, pc}

0800c038 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800c038:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800c03c:	1a13      	subs	r3, r2, r0
 800c03e:	4258      	negs	r0, r3
 800c040:	4158      	adcs	r0, r3
 800c042:	4770      	bx	lr

0800c044 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800c044:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800c048:	1a9b      	subs	r3, r3, r2
 800c04a:	2b00      	cmp	r3, #0
 800c04c:	bfdc      	itt	le
 800c04e:	6882      	ldrle	r2, [r0, #8]
 800c050:	189b      	addle	r3, r3, r2
 800c052:	2b01      	cmp	r3, #1
 800c054:	bfcc      	ite	gt
 800c056:	2000      	movgt	r0, #0
 800c058:	2001      	movle	r0, #1
 800c05a:	4770      	bx	lr

0800c05c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800c05c:	6902      	ldr	r2, [r0, #16]
 800c05e:	6843      	ldr	r3, [r0, #4]
 800c060:	2024      	movs	r0, #36	; 0x24
 800c062:	fb00 3002 	mla	r0, r0, r2, r3
 800c066:	4770      	bx	lr

0800c068 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800c068:	6803      	ldr	r3, [r0, #0]
 800c06a:	691b      	ldr	r3, [r3, #16]
 800c06c:	4718      	bx	r3

0800c06e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800c06e:	b570      	push	{r4, r5, r6, lr}
 800c070:	2301      	movs	r3, #1
 800c072:	7203      	strb	r3, [r0, #8]
 800c074:	4604      	mov	r4, r0
 800c076:	6840      	ldr	r0, [r0, #4]
 800c078:	6803      	ldr	r3, [r0, #0]
 800c07a:	699b      	ldr	r3, [r3, #24]
 800c07c:	4798      	blx	r3
 800c07e:	6803      	ldr	r3, [r0, #0]
 800c080:	2b40      	cmp	r3, #64	; 0x40
 800c082:	4605      	mov	r5, r0
 800c084:	d00c      	beq.n	800c0a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c086:	d810      	bhi.n	800c0aa <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800c088:	2b04      	cmp	r3, #4
 800c08a:	d01d      	beq.n	800c0c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800c08c:	d804      	bhi.n	800c098 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800c08e:	2b01      	cmp	r3, #1
 800c090:	d006      	beq.n	800c0a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c092:	2b02      	cmp	r3, #2
 800c094:	d02c      	beq.n	800c0f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800c096:	bd70      	pop	{r4, r5, r6, pc}
 800c098:	2b08      	cmp	r3, #8
 800c09a:	d01d      	beq.n	800c0d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800c09c:	2b20      	cmp	r3, #32
 800c09e:	d1fa      	bne.n	800c096 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800c0a0:	6823      	ldr	r3, [r4, #0]
 800c0a2:	4620      	mov	r0, r4
 800c0a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c0a6:	4798      	blx	r3
 800c0a8:	e013      	b.n	800c0d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800c0aa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c0ae:	d0f7      	beq.n	800c0a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c0b0:	d804      	bhi.n	800c0bc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800c0b2:	2b80      	cmp	r3, #128	; 0x80
 800c0b4:	d0f4      	beq.n	800c0a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c0b6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c0ba:	e7f0      	b.n	800c09e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800c0bc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800c0c0:	d0ee      	beq.n	800c0a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c0c2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c0c6:	e7e5      	b.n	800c094 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800c0c8:	6823      	ldr	r3, [r4, #0]
 800c0ca:	7f01      	ldrb	r1, [r0, #28]
 800c0cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c0ce:	4620      	mov	r0, r4
 800c0d0:	4798      	blx	r3
 800c0d2:	6823      	ldr	r3, [r4, #0]
 800c0d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c0d6:	e006      	b.n	800c0e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c0d8:	6823      	ldr	r3, [r4, #0]
 800c0da:	7f01      	ldrb	r1, [r0, #28]
 800c0dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c0de:	4620      	mov	r0, r4
 800c0e0:	4798      	blx	r3
 800c0e2:	6823      	ldr	r3, [r4, #0]
 800c0e4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c0e6:	4629      	mov	r1, r5
 800c0e8:	4620      	mov	r0, r4
 800c0ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c0ee:	4718      	bx	r3
 800c0f0:	6823      	ldr	r3, [r4, #0]
 800c0f2:	4620      	mov	r0, r4
 800c0f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c0f6:	4798      	blx	r3
 800c0f8:	e7f3      	b.n	800c0e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800c0fa <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800c0fa:	4770      	bx	lr

0800c0fc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800c0fc:	4770      	bx	lr

0800c0fe <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800c0fe:	4770      	bx	lr

0800c100 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800c100:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800c104:	1ad2      	subs	r2, r2, r3
 800c106:	2a00      	cmp	r2, #0
 800c108:	b510      	push	{r4, lr}
 800c10a:	bfdc      	itt	le
 800c10c:	6884      	ldrle	r4, [r0, #8]
 800c10e:	1912      	addle	r2, r2, r4
 800c110:	2a01      	cmp	r2, #1
 800c112:	dd16      	ble.n	800c142 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800c114:	6842      	ldr	r2, [r0, #4]
 800c116:	2424      	movs	r4, #36	; 0x24
 800c118:	fb04 2303 	mla	r3, r4, r3, r2
 800c11c:	f101 0220 	add.w	r2, r1, #32
 800c120:	f851 4b04 	ldr.w	r4, [r1], #4
 800c124:	f843 4b04 	str.w	r4, [r3], #4
 800c128:	4291      	cmp	r1, r2
 800c12a:	d1f9      	bne.n	800c120 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800c12c:	780a      	ldrb	r2, [r1, #0]
 800c12e:	701a      	strb	r2, [r3, #0]
 800c130:	68c3      	ldr	r3, [r0, #12]
 800c132:	6882      	ldr	r2, [r0, #8]
 800c134:	f3bf 8f5b 	dmb	ish
 800c138:	3301      	adds	r3, #1
 800c13a:	429a      	cmp	r2, r3
 800c13c:	bfd8      	it	le
 800c13e:	1a9b      	suble	r3, r3, r2
 800c140:	60c3      	str	r3, [r0, #12]
 800c142:	bd10      	pop	{r4, pc}

0800c144 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800c144:	6903      	ldr	r3, [r0, #16]
 800c146:	6882      	ldr	r2, [r0, #8]
 800c148:	f3bf 8f5b 	dmb	ish
 800c14c:	3301      	adds	r3, #1
 800c14e:	429a      	cmp	r2, r3
 800c150:	bfd8      	it	le
 800c152:	1a9b      	suble	r3, r3, r2
 800c154:	6103      	str	r3, [r0, #16]
 800c156:	4770      	bx	lr

0800c158 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800c158:	b570      	push	{r4, r5, r6, lr}
 800c15a:	4604      	mov	r4, r0
 800c15c:	460e      	mov	r6, r1
 800c15e:	6860      	ldr	r0, [r4, #4]
 800c160:	6803      	ldr	r3, [r0, #0]
 800c162:	685b      	ldr	r3, [r3, #4]
 800c164:	4798      	blx	r3
 800c166:	2800      	cmp	r0, #0
 800c168:	d1f9      	bne.n	800c15e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800c16a:	4d0d      	ldr	r5, [pc, #52]	; (800c1a0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800c16c:	6828      	ldr	r0, [r5, #0]
 800c16e:	6803      	ldr	r3, [r0, #0]
 800c170:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c172:	4798      	blx	r3
 800c174:	f7f4 fbee 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800c178:	6828      	ldr	r0, [r5, #0]
 800c17a:	2101      	movs	r1, #1
 800c17c:	f7ff ff14 	bl	800bfa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800c180:	6860      	ldr	r0, [r4, #4]
 800c182:	6803      	ldr	r3, [r0, #0]
 800c184:	4631      	mov	r1, r6
 800c186:	689b      	ldr	r3, [r3, #8]
 800c188:	4798      	blx	r3
 800c18a:	6823      	ldr	r3, [r4, #0]
 800c18c:	4620      	mov	r0, r4
 800c18e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c190:	4798      	blx	r3
 800c192:	6828      	ldr	r0, [r5, #0]
 800c194:	6803      	ldr	r3, [r0, #0]
 800c196:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c19a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c19c:	4718      	bx	r3
 800c19e:	bf00      	nop
 800c1a0:	20015800 	.word	0x20015800

0800c1a4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800c1a4:	b508      	push	{r3, lr}
 800c1a6:	f7f4 fbc7 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c1aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c1ae:	f7f4 bbcb 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c1b2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800c1b2:	b510      	push	{r4, lr}
 800c1b4:	2114      	movs	r1, #20
 800c1b6:	4604      	mov	r4, r0
 800c1b8:	f014 fcee 	bl	8020b98 <_ZdlPvj>
 800c1bc:	4620      	mov	r0, r4
 800c1be:	bd10      	pop	{r4, pc}

0800c1c0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800c1c0:	b510      	push	{r4, lr}
 800c1c2:	4604      	mov	r4, r0
 800c1c4:	6840      	ldr	r0, [r0, #4]
 800c1c6:	6803      	ldr	r3, [r0, #0]
 800c1c8:	681b      	ldr	r3, [r3, #0]
 800c1ca:	4798      	blx	r3
 800c1cc:	b948      	cbnz	r0, 800c1e2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c1ce:	7a63      	ldrb	r3, [r4, #9]
 800c1d0:	b13b      	cbz	r3, 800c1e2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c1d2:	7a23      	ldrb	r3, [r4, #8]
 800c1d4:	b92b      	cbnz	r3, 800c1e2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c1d6:	6823      	ldr	r3, [r4, #0]
 800c1d8:	4620      	mov	r0, r4
 800c1da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1e0:	4718      	bx	r3
 800c1e2:	bd10      	pop	{r4, pc}

0800c1e4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800c1e4:	b570      	push	{r4, r5, r6, lr}
 800c1e6:	4604      	mov	r4, r0
 800c1e8:	6840      	ldr	r0, [r0, #4]
 800c1ea:	6803      	ldr	r3, [r0, #0]
 800c1ec:	681b      	ldr	r3, [r3, #0]
 800c1ee:	4798      	blx	r3
 800c1f0:	4605      	mov	r5, r0
 800c1f2:	b930      	cbnz	r0, 800c202 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c1f4:	7a23      	ldrb	r3, [r4, #8]
 800c1f6:	b123      	cbz	r3, 800c202 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c1f8:	6860      	ldr	r0, [r4, #4]
 800c1fa:	6803      	ldr	r3, [r0, #0]
 800c1fc:	695b      	ldr	r3, [r3, #20]
 800c1fe:	4798      	blx	r3
 800c200:	7225      	strb	r5, [r4, #8]
 800c202:	6860      	ldr	r0, [r4, #4]
 800c204:	6803      	ldr	r3, [r0, #0]
 800c206:	681b      	ldr	r3, [r3, #0]
 800c208:	4798      	blx	r3
 800c20a:	b928      	cbnz	r0, 800c218 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c20c:	6823      	ldr	r3, [r4, #0]
 800c20e:	4620      	mov	r0, r4
 800c210:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c212:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c216:	4718      	bx	r3
 800c218:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c21c:	f7f4 bba2 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c220 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c220:	b510      	push	{r4, lr}
 800c222:	4c04      	ldr	r4, [pc, #16]	; (800c234 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c224:	6082      	str	r2, [r0, #8]
 800c226:	2200      	movs	r2, #0
 800c228:	e9c0 4100 	strd	r4, r1, [r0]
 800c22c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c230:	bd10      	pop	{r4, pc}
 800c232:	bf00      	nop
 800c234:	08023d40 	.word	0x08023d40

0800c238 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c238:	6840      	ldr	r0, [r0, #4]
 800c23a:	6803      	ldr	r3, [r0, #0]
 800c23c:	681b      	ldr	r3, [r3, #0]
 800c23e:	4718      	bx	r3

0800c240 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c240:	4b06      	ldr	r3, [pc, #24]	; (800c25c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800c242:	60c1      	str	r1, [r0, #12]
 800c244:	094a      	lsrs	r2, r1, #5
 800c246:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800c24a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800c24e:	4313      	orrs	r3, r2
 800c250:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800c254:	4319      	orrs	r1, r3
 800c256:	8201      	strh	r1, [r0, #16]
 800c258:	4770      	bx	lr
 800c25a:	bf00      	nop
 800c25c:	fffff800 	.word	0xfffff800

0800c260 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c260:	f1a0 0008 	sub.w	r0, r0, #8
 800c264:	e7ec      	b.n	800c240 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800c266:	bf00      	nop

0800c268 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800c268:	b508      	push	{r3, lr}
 800c26a:	4b05      	ldr	r3, [pc, #20]	; (800c280 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800c26c:	6818      	ldr	r0, [r3, #0]
 800c26e:	6803      	ldr	r3, [r0, #0]
 800c270:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c274:	4798      	blx	r3
 800c276:	1e43      	subs	r3, r0, #1
 800c278:	4258      	negs	r0, r3
 800c27a:	4158      	adcs	r0, r3
 800c27c:	bd08      	pop	{r3, pc}
 800c27e:	bf00      	nop
 800c280:	20015800 	.word	0x20015800

0800c284 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800c284:	4770      	bx	lr

0800c286 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800c286:	3808      	subs	r0, #8
 800c288:	4770      	bx	lr

0800c28a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800c28a:	b430      	push	{r4, r5}
 800c28c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800c290:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800c294:	8a02      	ldrh	r2, [r0, #16]
 800c296:	9202      	str	r2, [sp, #8]
 800c298:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800c29c:	68c2      	ldr	r2, [r0, #12]
 800c29e:	4629      	mov	r1, r5
 800c2a0:	4620      	mov	r0, r4
 800c2a2:	bc30      	pop	{r4, r5}
 800c2a4:	f7f4 bd1c 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800c2a8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800c2a8:	f7f4 bd10 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800c2ac <_ZN8touchgfx13PainterRGB565D0Ev>:
 800c2ac:	b510      	push	{r4, lr}
 800c2ae:	2114      	movs	r1, #20
 800c2b0:	4604      	mov	r4, r0
 800c2b2:	f014 fc71 	bl	8020b98 <_ZdlPvj>
 800c2b6:	4620      	mov	r0, r4
 800c2b8:	bd10      	pop	{r4, pc}

0800c2ba <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800c2ba:	f1a0 0008 	sub.w	r0, r0, #8
 800c2be:	e7f5      	b.n	800c2ac <_ZN8touchgfx13PainterRGB565D0Ev>

0800c2c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800c2c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c2c2:	6803      	ldr	r3, [r0, #0]
 800c2c4:	460d      	mov	r5, r1
 800c2c6:	4604      	mov	r4, r0
 800c2c8:	4601      	mov	r1, r0
 800c2ca:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c2cc:	a802      	add	r0, sp, #8
 800c2ce:	4798      	blx	r3
 800c2d0:	6828      	ldr	r0, [r5, #0]
 800c2d2:	6869      	ldr	r1, [r5, #4]
 800c2d4:	466b      	mov	r3, sp
 800c2d6:	c303      	stmia	r3!, {r0, r1}
 800c2d8:	4668      	mov	r0, sp
 800c2da:	4619      	mov	r1, r3
 800c2dc:	f7fe ffae 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800c2e0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c2e2:	b1a8      	cbz	r0, 800c310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c2e4:	6803      	ldr	r3, [r0, #0]
 800c2e6:	1d21      	adds	r1, r4, #4
 800c2e8:	68db      	ldr	r3, [r3, #12]
 800c2ea:	4798      	blx	r3
 800c2ec:	b180      	cbz	r0, 800c310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c2ee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c2f2:	2b00      	cmp	r3, #0
 800c2f4:	dd0c      	ble.n	800c310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c2f6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800c2fa:	2d00      	cmp	r5, #0
 800c2fc:	dd08      	ble.n	800c310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c2fe:	4a2d      	ldr	r2, [pc, #180]	; (800c3b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800c300:	7812      	ldrb	r2, [r2, #0]
 800c302:	b13a      	cbz	r2, 800c314 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800c304:	2a01      	cmp	r2, #1
 800c306:	d02d      	beq.n	800c364 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800c308:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c30a:	6803      	ldr	r3, [r0, #0]
 800c30c:	691b      	ldr	r3, [r3, #16]
 800c30e:	4798      	blx	r3
 800c310:	b004      	add	sp, #16
 800c312:	bd70      	pop	{r4, r5, r6, pc}
 800c314:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c318:	441d      	add	r5, r3
 800c31a:	b2ad      	uxth	r5, r5
 800c31c:	b22e      	sxth	r6, r5
 800c31e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800c322:	42b3      	cmp	r3, r6
 800c324:	daf0      	bge.n	800c308 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c326:	6823      	ldr	r3, [r4, #0]
 800c328:	4669      	mov	r1, sp
 800c32a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c32c:	4620      	mov	r0, r4
 800c32e:	4798      	blx	r3
 800c330:	b940      	cbnz	r0, 800c344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800c332:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c336:	2b01      	cmp	r3, #1
 800c338:	d004      	beq.n	800c344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800c33a:	3301      	adds	r3, #1
 800c33c:	105b      	asrs	r3, r3, #1
 800c33e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c342:	e7f0      	b.n	800c326 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800c344:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c348:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c34c:	4413      	add	r3, r2
 800c34e:	b29b      	uxth	r3, r3
 800c350:	441a      	add	r2, r3
 800c352:	b212      	sxth	r2, r2
 800c354:	4296      	cmp	r6, r2
 800c356:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c35a:	dae0      	bge.n	800c31e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c35c:	1aeb      	subs	r3, r5, r3
 800c35e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c362:	e7dc      	b.n	800c31e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c364:	f8bd 5000 	ldrh.w	r5, [sp]
 800c368:	441d      	add	r5, r3
 800c36a:	b2ad      	uxth	r5, r5
 800c36c:	b22e      	sxth	r6, r5
 800c36e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c372:	42b3      	cmp	r3, r6
 800c374:	dac8      	bge.n	800c308 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c376:	6823      	ldr	r3, [r4, #0]
 800c378:	4669      	mov	r1, sp
 800c37a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c37c:	4620      	mov	r0, r4
 800c37e:	4798      	blx	r3
 800c380:	b940      	cbnz	r0, 800c394 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800c382:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c386:	2b01      	cmp	r3, #1
 800c388:	d004      	beq.n	800c394 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800c38a:	3301      	adds	r3, #1
 800c38c:	105b      	asrs	r3, r3, #1
 800c38e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c392:	e7f0      	b.n	800c376 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800c394:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800c398:	f8bd 3000 	ldrh.w	r3, [sp]
 800c39c:	4413      	add	r3, r2
 800c39e:	b29b      	uxth	r3, r3
 800c3a0:	441a      	add	r2, r3
 800c3a2:	b212      	sxth	r2, r2
 800c3a4:	4296      	cmp	r6, r2
 800c3a6:	f8ad 3000 	strh.w	r3, [sp]
 800c3aa:	dae0      	bge.n	800c36e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c3ac:	1aeb      	subs	r3, r5, r3
 800c3ae:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c3b2:	e7dc      	b.n	800c36e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c3b4:	200157f8 	.word	0x200157f8

0800c3b8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800c3b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c3ba:	6803      	ldr	r3, [r0, #0]
 800c3bc:	4604      	mov	r4, r0
 800c3be:	4601      	mov	r1, r0
 800c3c0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c3c2:	4668      	mov	r0, sp
 800c3c4:	4798      	blx	r3
 800c3c6:	2100      	movs	r1, #0
 800c3c8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c3cc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c3d0:	9102      	str	r1, [sp, #8]
 800c3d2:	4668      	mov	r0, sp
 800c3d4:	a902      	add	r1, sp, #8
 800c3d6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c3da:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c3de:	f7fe ff2d 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800c3e2:	6823      	ldr	r3, [r4, #0]
 800c3e4:	4669      	mov	r1, sp
 800c3e6:	691b      	ldr	r3, [r3, #16]
 800c3e8:	4620      	mov	r0, r4
 800c3ea:	4798      	blx	r3
 800c3ec:	b004      	add	sp, #16
 800c3ee:	bd10      	pop	{r4, pc}

0800c3f0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c3f0:	2101      	movs	r1, #1
 800c3f2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c3f6:	490b      	ldr	r1, [pc, #44]	; (800c424 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800c3f8:	6001      	str	r1, [r0, #0]
 800c3fa:	2200      	movs	r2, #0
 800c3fc:	21ff      	movs	r1, #255	; 0xff
 800c3fe:	8082      	strh	r2, [r0, #4]
 800c400:	80c2      	strh	r2, [r0, #6]
 800c402:	8102      	strh	r2, [r0, #8]
 800c404:	8142      	strh	r2, [r0, #10]
 800c406:	8182      	strh	r2, [r0, #12]
 800c408:	81c2      	strh	r2, [r0, #14]
 800c40a:	8202      	strh	r2, [r0, #16]
 800c40c:	8242      	strh	r2, [r0, #18]
 800c40e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c412:	61c2      	str	r2, [r0, #28]
 800c414:	8402      	strh	r2, [r0, #32]
 800c416:	8442      	strh	r2, [r0, #34]	; 0x22
 800c418:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c41c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800c420:	6282      	str	r2, [r0, #40]	; 0x28
 800c422:	4770      	bx	lr
 800c424:	08023d9c 	.word	0x08023d9c

0800c428 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800c428:	6301      	str	r1, [r0, #48]	; 0x30
 800c42a:	4770      	bx	lr

0800c42c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800c42c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800c42e:	4770      	bx	lr

0800c430 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800c430:	6341      	str	r1, [r0, #52]	; 0x34
 800c432:	4770      	bx	lr

0800c434 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800c434:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800c436:	4770      	bx	lr

0800c438 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800c438:	4770      	bx	lr

0800c43a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800c43a:	4608      	mov	r0, r1
 800c43c:	4770      	bx	lr

0800c43e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800c43e:	4608      	mov	r0, r1
 800c440:	4770      	bx	lr

0800c442 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800c442:	b530      	push	{r4, r5, lr}
 800c444:	460d      	mov	r5, r1
 800c446:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c448:	8949      	ldrh	r1, [r1, #10]
 800c44a:	1ac9      	subs	r1, r1, r3
 800c44c:	6803      	ldr	r3, [r0, #0]
 800c44e:	b085      	sub	sp, #20
 800c450:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c454:	f10d 0206 	add.w	r2, sp, #6
 800c458:	b209      	sxth	r1, r1
 800c45a:	4604      	mov	r4, r0
 800c45c:	4798      	blx	r3
 800c45e:	b1a0      	cbz	r0, 800c48a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c460:	792b      	ldrb	r3, [r5, #4]
 800c462:	b993      	cbnz	r3, 800c48a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c464:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c468:	b178      	cbz	r0, 800c48a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c46a:	6803      	ldr	r3, [r0, #0]
 800c46c:	68db      	ldr	r3, [r3, #12]
 800c46e:	4798      	blx	r3
 800c470:	b158      	cbz	r0, 800c48a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c472:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c476:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c47a:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c47e:	9503      	str	r5, [sp, #12]
 800c480:	6803      	ldr	r3, [r0, #0]
 800c482:	aa02      	add	r2, sp, #8
 800c484:	689b      	ldr	r3, [r3, #8]
 800c486:	4621      	mov	r1, r4
 800c488:	4798      	blx	r3
 800c48a:	b005      	add	sp, #20
 800c48c:	bd30      	pop	{r4, r5, pc}

0800c48e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800c48e:	b510      	push	{r4, lr}
 800c490:	428a      	cmp	r2, r1
 800c492:	bfbe      	ittt	lt
 800c494:	460b      	movlt	r3, r1
 800c496:	4611      	movlt	r1, r2
 800c498:	461a      	movlt	r2, r3
 800c49a:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800c49e:	428b      	cmp	r3, r1
 800c4a0:	4604      	mov	r4, r0
 800c4a2:	d103      	bne.n	800c4ac <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800c4a4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800c4a8:	4293      	cmp	r3, r2
 800c4aa:	d011      	beq.n	800c4d0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800c4ac:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800c4b0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800c4b4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c4b8:	f005 ffe9 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4bc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c4c0:	f005 ffe5 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4c4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c4c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c4cc:	f005 bfdf 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4d0:	bd10      	pop	{r4, pc}

0800c4d2 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800c4d2:	b510      	push	{r4, lr}
 800c4d4:	428a      	cmp	r2, r1
 800c4d6:	bfbe      	ittt	lt
 800c4d8:	460b      	movlt	r3, r1
 800c4da:	4611      	movlt	r1, r2
 800c4dc:	461a      	movlt	r2, r3
 800c4de:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800c4e2:	428b      	cmp	r3, r1
 800c4e4:	4604      	mov	r4, r0
 800c4e6:	d103      	bne.n	800c4f0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800c4e8:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800c4ec:	4293      	cmp	r3, r2
 800c4ee:	d011      	beq.n	800c514 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800c4f0:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800c4f4:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800c4f8:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c4fc:	f005 ffc7 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c500:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c504:	f005 ffc3 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c508:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c50c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c510:	f005 bfbd 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c514:	bd10      	pop	{r4, pc}

0800c516 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c516:	2300      	movs	r3, #0
 800c518:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800c51c:	3038      	adds	r0, #56	; 0x38
 800c51e:	f005 bfb6 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>

0800c522 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800c522:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c526:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c52a:	4605      	mov	r5, r0
 800c52c:	4688      	mov	r8, r1
 800c52e:	4617      	mov	r7, r2
 800c530:	2b00      	cmp	r3, #0
 800c532:	d03f      	beq.n	800c5b4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c534:	6803      	ldr	r3, [r0, #0]
 800c536:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800c53a:	4798      	blx	r3
 800c53c:	682b      	ldr	r3, [r5, #0]
 800c53e:	4604      	mov	r4, r0
 800c540:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800c544:	4628      	mov	r0, r5
 800c546:	4798      	blx	r3
 800c548:	4284      	cmp	r4, r0
 800c54a:	bfc8      	it	gt
 800c54c:	4623      	movgt	r3, r4
 800c54e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800c552:	bfc4      	itt	gt
 800c554:	4604      	movgt	r4, r0
 800c556:	4618      	movgt	r0, r3
 800c558:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800c55c:	42b3      	cmp	r3, r6
 800c55e:	da29      	bge.n	800c5b4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c560:	42b0      	cmp	r0, r6
 800c562:	bfa8      	it	ge
 800c564:	4630      	movge	r0, r6
 800c566:	2800      	cmp	r0, #0
 800c568:	db24      	blt.n	800c5b4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c56a:	f1b8 0f00 	cmp.w	r8, #0
 800c56e:	d11e      	bne.n	800c5ae <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800c570:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800c574:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c578:	460c      	mov	r4, r1
 800c57a:	009a      	lsls	r2, r3, #2
 800c57c:	4298      	cmp	r0, r3
 800c57e:	dd0b      	ble.n	800c598 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800c580:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800c584:	58b6      	ldr	r6, [r6, r2]
 800c586:	42b1      	cmp	r1, r6
 800c588:	bfa8      	it	ge
 800c58a:	4631      	movge	r1, r6
 800c58c:	42b4      	cmp	r4, r6
 800c58e:	bfb8      	it	lt
 800c590:	4634      	movlt	r4, r6
 800c592:	3301      	adds	r3, #1
 800c594:	3204      	adds	r2, #4
 800c596:	e7f1      	b.n	800c57c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800c598:	1bc9      	subs	r1, r1, r7
 800c59a:	193a      	adds	r2, r7, r4
 800c59c:	4291      	cmp	r1, r2
 800c59e:	d009      	beq.n	800c5b4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c5a0:	682b      	ldr	r3, [r5, #0]
 800c5a2:	4628      	mov	r0, r5
 800c5a4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c5a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c5ac:	4718      	bx	r3
 800c5ae:	427c      	negs	r4, r7
 800c5b0:	4639      	mov	r1, r7
 800c5b2:	e7e2      	b.n	800c57a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800c5b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c5b8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c5b8:	b530      	push	{r4, r5, lr}
 800c5ba:	790b      	ldrb	r3, [r1, #4]
 800c5bc:	2b02      	cmp	r3, #2
 800c5be:	b085      	sub	sp, #20
 800c5c0:	4604      	mov	r4, r0
 800c5c2:	460d      	mov	r5, r1
 800c5c4:	d020      	beq.n	800c608 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5c6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c5c8:	88c9      	ldrh	r1, [r1, #6]
 800c5ca:	1ac9      	subs	r1, r1, r3
 800c5cc:	6803      	ldr	r3, [r0, #0]
 800c5ce:	f10d 0206 	add.w	r2, sp, #6
 800c5d2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c5d6:	b209      	sxth	r1, r1
 800c5d8:	4798      	blx	r3
 800c5da:	b1a8      	cbz	r0, 800c608 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5dc:	792b      	ldrb	r3, [r5, #4]
 800c5de:	2b01      	cmp	r3, #1
 800c5e0:	d812      	bhi.n	800c608 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5e2:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c5e6:	b178      	cbz	r0, 800c608 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5e8:	6803      	ldr	r3, [r0, #0]
 800c5ea:	68db      	ldr	r3, [r3, #12]
 800c5ec:	4798      	blx	r3
 800c5ee:	b158      	cbz	r0, 800c608 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5f0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c5f4:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c5f8:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c5fc:	9503      	str	r5, [sp, #12]
 800c5fe:	6803      	ldr	r3, [r0, #0]
 800c600:	aa02      	add	r2, sp, #8
 800c602:	689b      	ldr	r3, [r3, #8]
 800c604:	4621      	mov	r1, r4
 800c606:	4798      	blx	r3
 800c608:	b005      	add	sp, #20
 800c60a:	bd30      	pop	{r4, r5, pc}

0800c60c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800c60c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c610:	4604      	mov	r4, r0
 800c612:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c616:	9e06      	ldr	r6, [sp, #24]
 800c618:	4690      	mov	r8, r2
 800c61a:	461f      	mov	r7, r3
 800c61c:	b928      	cbnz	r0, 800c62a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800c61e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c622:	8033      	strh	r3, [r6, #0]
 800c624:	803b      	strh	r3, [r7, #0]
 800c626:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c62a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c62e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800c632:	1883      	adds	r3, r0, r2
 800c634:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c638:	1ad2      	subs	r2, r2, r3
 800c63a:	b212      	sxth	r2, r2
 800c63c:	2a01      	cmp	r2, #1
 800c63e:	dc07      	bgt.n	800c650 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800c640:	2300      	movs	r3, #0
 800c642:	803b      	strh	r3, [r7, #0]
 800c644:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800c648:	3b01      	subs	r3, #1
 800c64a:	8033      	strh	r3, [r6, #0]
 800c64c:	2001      	movs	r0, #1
 800c64e:	e7ea      	b.n	800c626 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c650:	1a08      	subs	r0, r1, r0
 800c652:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c656:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c65a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c65c:	1a5b      	subs	r3, r3, r1
 800c65e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c662:	d45b      	bmi.n	800c71c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800c664:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800c668:	fb93 f1f5 	sdiv	r1, r3, r5
 800c66c:	2302      	movs	r3, #2
 800c66e:	fb91 f1f3 	sdiv	r1, r1, r3
 800c672:	3a01      	subs	r2, #1
 800c674:	f006 f8cc 	bl	8012810 <_ZN8touchgfx6muldivElll>
 800c678:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c67c:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800c680:	2900      	cmp	r1, #0
 800c682:	db57      	blt.n	800c734 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800c684:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800c688:	2502      	movs	r5, #2
 800c68a:	fb93 f3fc 	sdiv	r3, r3, ip
 800c68e:	fb93 f3f5 	sdiv	r3, r3, r5
 800c692:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800c696:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800c69a:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800c69e:	1a52      	subs	r2, r2, r1
 800c6a0:	eba8 0003 	sub.w	r0, r8, r3
 800c6a4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c6a8:	d450      	bmi.n	800c74c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800c6aa:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800c6ae:	fb92 f1fc 	sdiv	r1, r2, ip
 800c6b2:	2202      	movs	r2, #2
 800c6b4:	fb91 f1f2 	sdiv	r1, r1, r2
 800c6b8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c6bc:	4413      	add	r3, r2
 800c6be:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c6c2:	1ad2      	subs	r2, r2, r3
 800c6c4:	b212      	sxth	r2, r2
 800c6c6:	3a01      	subs	r2, #1
 800c6c8:	f006 f8a2 	bl	8012810 <_ZN8touchgfx6muldivElll>
 800c6cc:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c6d0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c6d2:	2b00      	cmp	r3, #0
 800c6d4:	db46      	blt.n	800c764 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800c6d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800c6da:	fb93 f3f2 	sdiv	r3, r3, r2
 800c6de:	2202      	movs	r2, #2
 800c6e0:	fb93 f3f2 	sdiv	r3, r3, r2
 800c6e4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800c6e8:	429d      	cmp	r5, r3
 800c6ea:	bfde      	ittt	le
 800c6ec:	461a      	movle	r2, r3
 800c6ee:	462b      	movle	r3, r5
 800c6f0:	4615      	movle	r5, r2
 800c6f2:	2d00      	cmp	r5, #0
 800c6f4:	bfa4      	itt	ge
 800c6f6:	351f      	addge	r5, #31
 800c6f8:	116d      	asrge	r5, r5, #5
 800c6fa:	f04f 0020 	mov.w	r0, #32
 800c6fe:	bfb8      	it	lt
 800c700:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c704:	b22d      	sxth	r5, r5
 800c706:	2d00      	cmp	r5, #0
 800c708:	b21b      	sxth	r3, r3
 800c70a:	fb93 f3f0 	sdiv	r3, r3, r0
 800c70e:	803b      	strh	r3, [r7, #0]
 800c710:	8035      	strh	r5, [r6, #0]
 800c712:	da33      	bge.n	800c77c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c714:	2000      	movs	r0, #0
 800c716:	8030      	strh	r0, [r6, #0]
 800c718:	8038      	strh	r0, [r7, #0]
 800c71a:	e784      	b.n	800c626 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c71c:	f06f 0101 	mvn.w	r1, #1
 800c720:	fb01 5303 	mla	r3, r1, r3, r5
 800c724:	1e59      	subs	r1, r3, #1
 800c726:	2302      	movs	r3, #2
 800c728:	fb91 f1f5 	sdiv	r1, r1, r5
 800c72c:	fb91 f1f3 	sdiv	r1, r1, r3
 800c730:	4249      	negs	r1, r1
 800c732:	e79e      	b.n	800c672 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c734:	f06f 0301 	mvn.w	r3, #1
 800c738:	fb03 c301 	mla	r3, r3, r1, ip
 800c73c:	3b01      	subs	r3, #1
 800c73e:	2502      	movs	r5, #2
 800c740:	fb93 f3fc 	sdiv	r3, r3, ip
 800c744:	fb93 f3f5 	sdiv	r3, r3, r5
 800c748:	425b      	negs	r3, r3
 800c74a:	e7a2      	b.n	800c692 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c74c:	f06f 0101 	mvn.w	r1, #1
 800c750:	fb01 c202 	mla	r2, r1, r2, ip
 800c754:	1e51      	subs	r1, r2, #1
 800c756:	2202      	movs	r2, #2
 800c758:	fb91 f1fc 	sdiv	r1, r1, ip
 800c75c:	fb91 f1f2 	sdiv	r1, r1, r2
 800c760:	4249      	negs	r1, r1
 800c762:	e7a9      	b.n	800c6b8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c764:	f06f 0101 	mvn.w	r1, #1
 800c768:	fb01 2303 	mla	r3, r1, r3, r2
 800c76c:	3b01      	subs	r3, #1
 800c76e:	fb93 f3f2 	sdiv	r3, r3, r2
 800c772:	2202      	movs	r2, #2
 800c774:	fb93 f3f2 	sdiv	r3, r3, r2
 800c778:	425b      	negs	r3, r3
 800c77a:	e7b3      	b.n	800c6e4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c77c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c780:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c784:	4293      	cmp	r3, r2
 800c786:	dc05      	bgt.n	800c794 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c788:	3b01      	subs	r3, #1
 800c78a:	b21b      	sxth	r3, r3
 800c78c:	8033      	strh	r3, [r6, #0]
 800c78e:	2000      	movs	r0, #0
 800c790:	803b      	strh	r3, [r7, #0]
 800c792:	e748      	b.n	800c626 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c794:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c798:	803a      	strh	r2, [r7, #0]
 800c79a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c79e:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c7a2:	4293      	cmp	r3, r2
 800c7a4:	bfdc      	itt	le
 800c7a6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c7aa:	b21a      	sxthle	r2, r3
 800c7ac:	8032      	strh	r2, [r6, #0]
 800c7ae:	e74d      	b.n	800c64c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c7b0 <_ZN8touchgfx9ContainerC1Ev>:
 800c7b0:	2101      	movs	r1, #1
 800c7b2:	2200      	movs	r2, #0
 800c7b4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c7b8:	4909      	ldr	r1, [pc, #36]	; (800c7e0 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c7ba:	8082      	strh	r2, [r0, #4]
 800c7bc:	80c2      	strh	r2, [r0, #6]
 800c7be:	8102      	strh	r2, [r0, #8]
 800c7c0:	8142      	strh	r2, [r0, #10]
 800c7c2:	8182      	strh	r2, [r0, #12]
 800c7c4:	81c2      	strh	r2, [r0, #14]
 800c7c6:	8202      	strh	r2, [r0, #16]
 800c7c8:	8242      	strh	r2, [r0, #18]
 800c7ca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c7ce:	61c2      	str	r2, [r0, #28]
 800c7d0:	8402      	strh	r2, [r0, #32]
 800c7d2:	8442      	strh	r2, [r0, #34]	; 0x22
 800c7d4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c7d8:	6001      	str	r1, [r0, #0]
 800c7da:	6282      	str	r2, [r0, #40]	; 0x28
 800c7dc:	4770      	bx	lr
 800c7de:	bf00      	nop
 800c7e0:	08023ca4 	.word	0x08023ca4

0800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c7e4:	6800      	ldr	r0, [r0, #0]
 800c7e6:	2800      	cmp	r0, #0
 800c7e8:	bfbd      	ittte	lt
 800c7ea:	380f      	sublt	r0, #15
 800c7ec:	2320      	movlt	r3, #32
 800c7ee:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c7f2:	3010      	addge	r0, #16
 800c7f4:	bfa8      	it	ge
 800c7f6:	1140      	asrge	r0, r0, #5
 800c7f8:	4770      	bx	lr

0800c7fa <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c7fa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7fe:	4605      	mov	r5, r0
 800c800:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c804:	4688      	mov	r8, r1
 800c806:	4691      	mov	r9, r2
 800c808:	469a      	mov	sl, r3
 800c80a:	b360      	cbz	r0, 800c866 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c80c:	2700      	movs	r7, #0
 800c80e:	f04f 3bff 	mov.w	fp, #4294967295
 800c812:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c816:	b23e      	sxth	r6, r7
 800c818:	42b3      	cmp	r3, r6
 800c81a:	dd23      	ble.n	800c864 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c81c:	682b      	ldr	r3, [r5, #0]
 800c81e:	4631      	mov	r1, r6
 800c820:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c824:	4628      	mov	r0, r5
 800c826:	4798      	blx	r3
 800c828:	9001      	str	r0, [sp, #4]
 800c82a:	a801      	add	r0, sp, #4
 800c82c:	f7ff ffda 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c830:	682b      	ldr	r3, [r5, #0]
 800c832:	eba0 0008 	sub.w	r0, r0, r8
 800c836:	b204      	sxth	r4, r0
 800c838:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c83c:	4631      	mov	r1, r6
 800c83e:	4628      	mov	r0, r5
 800c840:	4798      	blx	r3
 800c842:	9001      	str	r0, [sp, #4]
 800c844:	a801      	add	r0, sp, #4
 800c846:	f7ff ffcd 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c84a:	eba0 0009 	sub.w	r0, r0, r9
 800c84e:	fb10 f000 	smulbb	r0, r0, r0
 800c852:	fb04 0404 	mla	r4, r4, r4, r0
 800c856:	455c      	cmp	r4, fp
 800c858:	bf3c      	itt	cc
 800c85a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c85e:	46a3      	movcc	fp, r4
 800c860:	3701      	adds	r7, #1
 800c862:	e7d6      	b.n	800c812 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c864:	2001      	movs	r0, #1
 800c866:	b003      	add	sp, #12
 800c868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c86c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c86c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c870:	4604      	mov	r4, r0
 800c872:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c876:	4688      	mov	r8, r1
 800c878:	4691      	mov	r9, r2
 800c87a:	b1f8      	cbz	r0, 800c8bc <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c87c:	2500      	movs	r5, #0
 800c87e:	f04f 37ff 	mov.w	r7, #4294967295
 800c882:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c886:	b22e      	sxth	r6, r5
 800c888:	42b3      	cmp	r3, r6
 800c88a:	dd16      	ble.n	800c8ba <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c88c:	6823      	ldr	r3, [r4, #0]
 800c88e:	4631      	mov	r1, r6
 800c890:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c894:	4620      	mov	r0, r4
 800c896:	4798      	blx	r3
 800c898:	9001      	str	r0, [sp, #4]
 800c89a:	a801      	add	r0, sp, #4
 800c89c:	f7ff ffa2 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c8a0:	b200      	sxth	r0, r0
 800c8a2:	eba0 0008 	sub.w	r0, r0, r8
 800c8a6:	2800      	cmp	r0, #0
 800c8a8:	bfb8      	it	lt
 800c8aa:	4240      	neglt	r0, r0
 800c8ac:	42b8      	cmp	r0, r7
 800c8ae:	bf3c      	itt	cc
 800c8b0:	f8a9 6000 	strhcc.w	r6, [r9]
 800c8b4:	4607      	movcc	r7, r0
 800c8b6:	3501      	adds	r5, #1
 800c8b8:	e7e3      	b.n	800c882 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c8ba:	2001      	movs	r0, #1
 800c8bc:	b003      	add	sp, #12
 800c8be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c8c2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c8c2:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c8c6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c8ca:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c8ce:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c8d2:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c8d6:	4770      	bx	lr

0800c8d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c8d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c8da:	4604      	mov	r4, r0
 800c8dc:	3038      	adds	r0, #56	; 0x38
 800c8de:	460d      	mov	r5, r1
 800c8e0:	f7fe fb1c 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c8e4:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c8e8:	9200      	str	r2, [sp, #0]
 800c8ea:	2200      	movs	r2, #0
 800c8ec:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c8f0:	4611      	mov	r1, r2
 800c8f2:	4628      	mov	r0, r5
 800c8f4:	f7f6 fc07 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c8f8:	b003      	add	sp, #12
 800c8fa:	bd30      	pop	{r4, r5, pc}

0800c8fc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c8fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c8fe:	4604      	mov	r4, r0
 800c900:	3064      	adds	r0, #100	; 0x64
 800c902:	460d      	mov	r5, r1
 800c904:	f7fe fb0a 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c908:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c90c:	9200      	str	r2, [sp, #0]
 800c90e:	2200      	movs	r2, #0
 800c910:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c914:	4611      	mov	r1, r2
 800c916:	4628      	mov	r0, r5
 800c918:	f7f6 fbf5 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c91c:	b003      	add	sp, #12
 800c91e:	bd30      	pop	{r4, r5, pc}

0800c920 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c920:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c922:	4604      	mov	r4, r0
 800c924:	30e8      	adds	r0, #232	; 0xe8
 800c926:	460d      	mov	r5, r1
 800c928:	f7fe faf8 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c92c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c930:	9200      	str	r2, [sp, #0]
 800c932:	2200      	movs	r2, #0
 800c934:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c938:	4611      	mov	r1, r2
 800c93a:	4628      	mov	r0, r5
 800c93c:	f7f6 fbe3 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c940:	b003      	add	sp, #12
 800c942:	bd30      	pop	{r4, r5, pc}

0800c944 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c944:	b538      	push	{r3, r4, r5, lr}
 800c946:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c94a:	428b      	cmp	r3, r1
 800c94c:	460d      	mov	r5, r1
 800c94e:	dd08      	ble.n	800c962 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c950:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c952:	b134      	cbz	r4, 800c962 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c954:	6823      	ldr	r3, [r4, #0]
 800c956:	4620      	mov	r0, r4
 800c958:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c95a:	4629      	mov	r1, r5
 800c95c:	4798      	blx	r3
 800c95e:	69a4      	ldr	r4, [r4, #24]
 800c960:	e7f7      	b.n	800c952 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c962:	bd38      	pop	{r3, r4, r5, pc}

0800c964 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c964:	b570      	push	{r4, r5, r6, lr}
 800c966:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c96a:	4606      	mov	r6, r0
 800c96c:	460d      	mov	r5, r1
 800c96e:	b134      	cbz	r4, 800c97e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c970:	6823      	ldr	r3, [r4, #0]
 800c972:	4620      	mov	r0, r4
 800c974:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c976:	4629      	mov	r1, r5
 800c978:	4798      	blx	r3
 800c97a:	69a4      	ldr	r4, [r4, #24]
 800c97c:	e7f7      	b.n	800c96e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c97e:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c982:	b134      	cbz	r4, 800c992 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c984:	6823      	ldr	r3, [r4, #0]
 800c986:	4620      	mov	r0, r4
 800c988:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c98a:	4629      	mov	r1, r5
 800c98c:	4798      	blx	r3
 800c98e:	69a4      	ldr	r4, [r4, #24]
 800c990:	e7f7      	b.n	800c982 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c992:	bd70      	pop	{r4, r5, r6, pc}

0800c994 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c994:	b538      	push	{r3, r4, r5, lr}
 800c996:	4604      	mov	r4, r0
 800c998:	2500      	movs	r5, #0
 800c99a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c99e:	42ab      	cmp	r3, r5
 800c9a0:	db05      	blt.n	800c9ae <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c9a2:	b229      	sxth	r1, r5
 800c9a4:	4620      	mov	r0, r4
 800c9a6:	f7ff ffdd 	bl	800c964 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c9aa:	3501      	adds	r5, #1
 800c9ac:	e7f5      	b.n	800c99a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c9ae:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c9b2:	f005 fd6c 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c9b6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c9ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c9be:	f005 bd66 	b.w	801248e <_ZNK8touchgfx8Drawable10invalidateEv>

0800c9c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c9c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c9c4:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c9c6:	4604      	mov	r4, r0
 800c9c8:	b15d      	cbz	r5, 800c9e2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c9ca:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c9ce:	9200      	str	r2, [sp, #0]
 800c9d0:	2200      	movs	r2, #0
 800c9d2:	4628      	mov	r0, r5
 800c9d4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c9d8:	4611      	mov	r1, r2
 800c9da:	f7f6 fb94 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c9de:	69ad      	ldr	r5, [r5, #24]
 800c9e0:	e7f2      	b.n	800c9c8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c9e2:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c9e6:	b15d      	cbz	r5, 800ca00 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c9e8:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c9ec:	9200      	str	r2, [sp, #0]
 800c9ee:	2200      	movs	r2, #0
 800c9f0:	4628      	mov	r0, r5
 800c9f2:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c9f6:	4611      	mov	r1, r2
 800c9f8:	f7f6 fb85 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c9fc:	69ad      	ldr	r5, [r5, #24]
 800c9fe:	e7f2      	b.n	800c9e6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800ca00:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800ca04:	b15d      	cbz	r5, 800ca1e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800ca06:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800ca0a:	9200      	str	r2, [sp, #0]
 800ca0c:	2200      	movs	r2, #0
 800ca0e:	4628      	mov	r0, r5
 800ca10:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800ca14:	4611      	mov	r1, r2
 800ca16:	f7f6 fb76 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800ca1a:	69ad      	ldr	r5, [r5, #24]
 800ca1c:	e7f2      	b.n	800ca04 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800ca1e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800ca22:	b15d      	cbz	r5, 800ca3c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800ca24:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800ca28:	9200      	str	r2, [sp, #0]
 800ca2a:	2200      	movs	r2, #0
 800ca2c:	4628      	mov	r0, r5
 800ca2e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800ca32:	4611      	mov	r1, r2
 800ca34:	f7f6 fb67 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800ca38:	69ad      	ldr	r5, [r5, #24]
 800ca3a:	e7f2      	b.n	800ca22 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800ca3c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800ca40:	b15d      	cbz	r5, 800ca5a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800ca42:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800ca46:	9200      	str	r2, [sp, #0]
 800ca48:	2200      	movs	r2, #0
 800ca4a:	4628      	mov	r0, r5
 800ca4c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800ca50:	4611      	mov	r1, r2
 800ca52:	f7f6 fb58 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800ca56:	69ad      	ldr	r5, [r5, #24]
 800ca58:	e7f2      	b.n	800ca40 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800ca5a:	6823      	ldr	r3, [r4, #0]
 800ca5c:	695b      	ldr	r3, [r3, #20]
 800ca5e:	4620      	mov	r0, r4
 800ca60:	b003      	add	sp, #12
 800ca62:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ca66:	4718      	bx	r3

0800ca68 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800ca68:	b430      	push	{r4, r5}
 800ca6a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800ca6e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800ca72:	b28a      	uxth	r2, r1
 800ca74:	1b15      	subs	r5, r2, r4
 800ca76:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800ca7a:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800ca7e:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800ca82:	442c      	add	r4, r5
 800ca84:	1b12      	subs	r2, r2, r4
 800ca86:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ca8a:	8101      	strh	r1, [r0, #8]
 800ca8c:	bc30      	pop	{r4, r5}
 800ca8e:	f7ff bf98 	b.w	800c9c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800ca92 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800ca92:	b430      	push	{r4, r5}
 800ca94:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800ca98:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800ca9c:	b28a      	uxth	r2, r1
 800ca9e:	1b15      	subs	r5, r2, r4
 800caa0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800caa4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800caa8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800caac:	442c      	add	r4, r5
 800caae:	1b12      	subs	r2, r2, r4
 800cab0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800cab4:	8141      	strh	r1, [r0, #10]
 800cab6:	bc30      	pop	{r4, r5}
 800cab8:	f7ff bf83 	b.w	800c9c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800cabc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800cabc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800cac0:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800cac4:	fa1f fa83 	uxth.w	sl, r3
 800cac8:	4699      	mov	r9, r3
 800caca:	8903      	ldrh	r3, [r0, #8]
 800cacc:	4604      	mov	r4, r0
 800cace:	4615      	mov	r5, r2
 800cad0:	fa1f f887 	uxth.w	r8, r7
 800cad4:	4452      	add	r2, sl
 800cad6:	8940      	ldrh	r0, [r0, #10]
 800cad8:	1a9b      	subs	r3, r3, r2
 800cada:	eb08 0201 	add.w	r2, r8, r1
 800cade:	1a80      	subs	r0, r0, r2
 800cae0:	b200      	sxth	r0, r0
 800cae2:	460e      	mov	r6, r1
 800cae4:	9000      	str	r0, [sp, #0]
 800cae6:	460a      	mov	r2, r1
 800cae8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800caec:	4629      	mov	r1, r5
 800caee:	b21b      	sxth	r3, r3
 800caf0:	f7f6 fb09 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800caf4:	2200      	movs	r2, #0
 800caf6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800cafa:	9600      	str	r6, [sp, #0]
 800cafc:	4611      	mov	r1, r2
 800cafe:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800cb02:	f7f6 fb00 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cb06:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cb0a:	9300      	str	r3, [sp, #0]
 800cb0c:	2200      	movs	r2, #0
 800cb0e:	462b      	mov	r3, r5
 800cb10:	4611      	mov	r1, r2
 800cb12:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800cb16:	f7f6 faf6 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cb1a:	8921      	ldrh	r1, [r4, #8]
 800cb1c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cb20:	9300      	str	r3, [sp, #0]
 800cb22:	eba1 010a 	sub.w	r1, r1, sl
 800cb26:	464b      	mov	r3, r9
 800cb28:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800cb2c:	2200      	movs	r2, #0
 800cb2e:	b209      	sxth	r1, r1
 800cb30:	f7f6 fae9 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cb34:	8962      	ldrh	r2, [r4, #10]
 800cb36:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800cb3a:	9700      	str	r7, [sp, #0]
 800cb3c:	eba2 0208 	sub.w	r2, r2, r8
 800cb40:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800cb44:	b212      	sxth	r2, r2
 800cb46:	2100      	movs	r1, #0
 800cb48:	f7f6 fadd 	bl	8003106 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cb4c:	4620      	mov	r0, r4
 800cb4e:	b002      	add	sp, #8
 800cb50:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cb54:	f7ff bf35 	b.w	800c9c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800cb58 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800cb58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb5c:	b085      	sub	sp, #20
 800cb5e:	4604      	mov	r4, r0
 800cb60:	9103      	str	r1, [sp, #12]
 800cb62:	f7ff fe25 	bl	800c7b0 <_ZN8touchgfx9ContainerC1Ev>
 800cb66:	4b2d      	ldr	r3, [pc, #180]	; (800cc1c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800cb68:	6023      	str	r3, [r4, #0]
 800cb6a:	2601      	movs	r6, #1
 800cb6c:	23ff      	movs	r3, #255	; 0xff
 800cb6e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800cb72:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800cb76:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800cb7a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800cb7e:	4658      	mov	r0, fp
 800cb80:	f7ff fe16 	bl	800c7b0 <_ZN8touchgfx9ContainerC1Ev>
 800cb84:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800cb88:	4648      	mov	r0, r9
 800cb8a:	f7ff fe11 	bl	800c7b0 <_ZN8touchgfx9ContainerC1Ev>
 800cb8e:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800cb92:	4640      	mov	r0, r8
 800cb94:	f7ff fe0c 	bl	800c7b0 <_ZN8touchgfx9ContainerC1Ev>
 800cb98:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800cb9c:	4650      	mov	r0, sl
 800cb9e:	f7ff fe07 	bl	800c7b0 <_ZN8touchgfx9ContainerC1Ev>
 800cba2:	4638      	mov	r0, r7
 800cba4:	f7ff fe04 	bl	800c7b0 <_ZN8touchgfx9ContainerC1Ev>
 800cba8:	2500      	movs	r5, #0
 800cbaa:	9903      	ldr	r1, [sp, #12]
 800cbac:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800cbb0:	4620      	mov	r0, r4
 800cbb2:	4659      	mov	r1, fp
 800cbb4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800cbb8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800cbbc:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800cbc0:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800cbc4:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800cbc8:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800cbcc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800cbd0:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800cbd4:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800cbd8:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800cbdc:	f7fe f99e 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbe0:	4651      	mov	r1, sl
 800cbe2:	4620      	mov	r0, r4
 800cbe4:	f7fe f99a 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbe8:	4649      	mov	r1, r9
 800cbea:	4620      	mov	r0, r4
 800cbec:	f7fe f996 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbf0:	4641      	mov	r1, r8
 800cbf2:	4620      	mov	r0, r4
 800cbf4:	f7fe f992 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbf8:	4639      	mov	r1, r7
 800cbfa:	4620      	mov	r0, r4
 800cbfc:	f7fe f98e 	bl	800af1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cc00:	4620      	mov	r0, r4
 800cc02:	9500      	str	r5, [sp, #0]
 800cc04:	462b      	mov	r3, r5
 800cc06:	462a      	mov	r2, r5
 800cc08:	4629      	mov	r1, r5
 800cc0a:	f7ff ff57 	bl	800cabc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800cc0e:	4620      	mov	r0, r4
 800cc10:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800cc14:	b005      	add	sp, #20
 800cc16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc1a:	bf00      	nop
 800cc1c:	08023fac 	.word	0x08023fac

0800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800cc20:	4291      	cmp	r1, r2
 800cc22:	4613      	mov	r3, r2
 800cc24:	d003      	beq.n	800cc2e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800cc26:	460a      	mov	r2, r1
 800cc28:	4619      	mov	r1, r3
 800cc2a:	f005 bdf1 	b.w	8012810 <_ZN8touchgfx6muldivElll>
 800cc2e:	4770      	bx	lr

0800cc30 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800cc30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc34:	6803      	ldr	r3, [r0, #0]
 800cc36:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800cc3a:	460d      	mov	r5, r1
 800cc3c:	4604      	mov	r4, r0
 800cc3e:	4798      	blx	r3
 800cc40:	42a8      	cmp	r0, r5
 800cc42:	4606      	mov	r6, r0
 800cc44:	d024      	beq.n	800cc90 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800cc46:	6823      	ldr	r3, [r4, #0]
 800cc48:	4601      	mov	r1, r0
 800cc4a:	462a      	mov	r2, r5
 800cc4c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800cc50:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800cc54:	f7ff ffe4 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800cc58:	462a      	mov	r2, r5
 800cc5a:	4680      	mov	r8, r0
 800cc5c:	4631      	mov	r1, r6
 800cc5e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800cc62:	f7ff ffdd 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800cc66:	4641      	mov	r1, r8
 800cc68:	4602      	mov	r2, r0
 800cc6a:	4620      	mov	r0, r4
 800cc6c:	47b8      	blx	r7
 800cc6e:	462a      	mov	r2, r5
 800cc70:	4631      	mov	r1, r6
 800cc72:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800cc76:	f7ff ffd3 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800cc7a:	462a      	mov	r2, r5
 800cc7c:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800cc80:	4631      	mov	r1, r6
 800cc82:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800cc86:	f7ff ffcb 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800cc8a:	6325      	str	r5, [r4, #48]	; 0x30
 800cc8c:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800cc90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cc94 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800cc94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cc98:	4604      	mov	r4, r0
 800cc9a:	460f      	mov	r7, r1
 800cc9c:	b1ba      	cbz	r2, 800ccce <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800cc9e:	6803      	ldr	r3, [r0, #0]
 800cca0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800cca4:	4798      	blx	r3
 800cca6:	2600      	movs	r6, #0
 800cca8:	4681      	mov	r9, r0
 800ccaa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800ccae:	b235      	sxth	r5, r6
 800ccb0:	42ab      	cmp	r3, r5
 800ccb2:	f106 0601 	add.w	r6, r6, #1
 800ccb6:	dd0a      	ble.n	800ccce <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800ccb8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800ccbc:	463a      	mov	r2, r7
 800ccbe:	4649      	mov	r1, r9
 800ccc0:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800ccc4:	f7ff ffac 	bl	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800ccc8:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800cccc:	e7ed      	b.n	800ccaa <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800ccce:	6367      	str	r7, [r4, #52]	; 0x34
 800ccd0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800ccd4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800ccd4:	b570      	push	{r4, r5, r6, lr}
 800ccd6:	6803      	ldr	r3, [r0, #0]
 800ccd8:	4604      	mov	r4, r0
 800ccda:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800ccde:	460d      	mov	r5, r1
 800cce0:	4798      	blx	r3
 800cce2:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800cce6:	3301      	adds	r3, #1
 800cce8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800ccec:	6823      	ldr	r3, [r4, #0]
 800ccee:	4629      	mov	r1, r5
 800ccf0:	4620      	mov	r0, r4
 800ccf2:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800ccf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ccfa:	4718      	bx	r3

0800ccfc <_ZN8touchgfx16GraphElementLineD1Ev>:
 800ccfc:	4770      	bx	lr

0800ccfe <_ZN8touchgfx16GraphElementLineD0Ev>:
 800ccfe:	b510      	push	{r4, lr}
 800cd00:	2130      	movs	r1, #48	; 0x30
 800cd02:	4604      	mov	r4, r0
 800cd04:	f013 ff48 	bl	8020b98 <_ZdlPvj>
 800cd08:	4620      	mov	r0, r4
 800cd0a:	bd10      	pop	{r4, pc}

0800cd0c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cd0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd0e:	4604      	mov	r4, r0
 800cd10:	4608      	mov	r0, r1
 800cd12:	460d      	mov	r5, r1
 800cd14:	f7fe fad5 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cd18:	b978      	cbnz	r0, 800cd3a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cd1a:	4620      	mov	r0, r4
 800cd1c:	f7fe fad1 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cd20:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cd24:	b150      	cbz	r0, 800cd3c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cd26:	8026      	strh	r6, [r4, #0]
 800cd28:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cd2c:	8063      	strh	r3, [r4, #2]
 800cd2e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cd32:	80a3      	strh	r3, [r4, #4]
 800cd34:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cd38:	80e3      	strh	r3, [r4, #6]
 800cd3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cd3c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cd40:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cd44:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cd48:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cd4c:	88ed      	ldrh	r5, [r5, #6]
 800cd4e:	42b1      	cmp	r1, r6
 800cd50:	460f      	mov	r7, r1
 800cd52:	bfa8      	it	ge
 800cd54:	4637      	movge	r7, r6
 800cd56:	4293      	cmp	r3, r2
 800cd58:	4618      	mov	r0, r3
 800cd5a:	4466      	add	r6, ip
 800cd5c:	bfa8      	it	ge
 800cd5e:	4610      	movge	r0, r2
 800cd60:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800cd64:	8027      	strh	r7, [r4, #0]
 800cd66:	442a      	add	r2, r5
 800cd68:	88e5      	ldrh	r5, [r4, #6]
 800cd6a:	8060      	strh	r0, [r4, #2]
 800cd6c:	4461      	add	r1, ip
 800cd6e:	442b      	add	r3, r5
 800cd70:	b236      	sxth	r6, r6
 800cd72:	b209      	sxth	r1, r1
 800cd74:	b212      	sxth	r2, r2
 800cd76:	b21b      	sxth	r3, r3
 800cd78:	428e      	cmp	r6, r1
 800cd7a:	bfac      	ite	ge
 800cd7c:	ebc7 0106 	rsbge	r1, r7, r6
 800cd80:	ebc7 0101 	rsblt	r1, r7, r1
 800cd84:	429a      	cmp	r2, r3
 800cd86:	bfac      	ite	ge
 800cd88:	ebc0 0202 	rsbge	r2, r0, r2
 800cd8c:	ebc0 0203 	rsblt	r2, r0, r3
 800cd90:	80a1      	strh	r1, [r4, #4]
 800cd92:	80e2      	strh	r2, [r4, #6]
 800cd94:	e7d1      	b.n	800cd3a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800cd96 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800cd96:	6800      	ldr	r0, [r0, #0]
 800cd98:	2800      	cmp	r0, #0
 800cd9a:	bfb9      	ittee	lt
 800cd9c:	2320      	movlt	r3, #32
 800cd9e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800cda2:	301f      	addge	r0, #31
 800cda4:	1140      	asrge	r0, r0, #5
 800cda6:	4770      	bx	lr

0800cda8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800cda8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdac:	6803      	ldr	r3, [r0, #0]
 800cdae:	6945      	ldr	r5, [r0, #20]
 800cdb0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800cdb2:	b093      	sub	sp, #76	; 0x4c
 800cdb4:	4604      	mov	r4, r0
 800cdb6:	460f      	mov	r7, r1
 800cdb8:	2d00      	cmp	r5, #0
 800cdba:	f000 81ad 	beq.w	800d118 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800cdbe:	696d      	ldr	r5, [r5, #20]
 800cdc0:	4798      	blx	r3
 800cdc2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cdc6:	2b00      	cmp	r3, #0
 800cdc8:	d077      	beq.n	800ceba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cdca:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cdce:	fb13 f000 	smulbb	r0, r3, r0
 800cdd2:	b283      	uxth	r3, r0
 800cdd4:	1c58      	adds	r0, r3, #1
 800cdd6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800cdda:	1200      	asrs	r0, r0, #8
 800cddc:	d06d      	beq.n	800ceba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cdde:	b2c3      	uxtb	r3, r0
 800cde0:	9308      	str	r3, [sp, #32]
 800cde2:	6823      	ldr	r3, [r4, #0]
 800cde4:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800cde8:	462a      	mov	r2, r5
 800cdea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800cdee:	4621      	mov	r1, r4
 800cdf0:	4640      	mov	r0, r8
 800cdf2:	4798      	blx	r3
 800cdf4:	e898 0003 	ldmia.w	r8, {r0, r1}
 800cdf8:	ae0e      	add	r6, sp, #56	; 0x38
 800cdfa:	e886 0003 	stmia.w	r6, {r0, r1}
 800cdfe:	4639      	mov	r1, r7
 800ce00:	4630      	mov	r0, r6
 800ce02:	f7fe fa1b 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800ce06:	6823      	ldr	r3, [r4, #0]
 800ce08:	4629      	mov	r1, r5
 800ce0a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ce0e:	4620      	mov	r0, r4
 800ce10:	4798      	blx	r3
 800ce12:	6823      	ldr	r3, [r4, #0]
 800ce14:	4607      	mov	r7, r0
 800ce16:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ce1a:	4629      	mov	r1, r5
 800ce1c:	4620      	mov	r0, r4
 800ce1e:	4798      	blx	r3
 800ce20:	4681      	mov	r9, r0
 800ce22:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800ce26:	0103      	lsls	r3, r0, #4
 800ce28:	9309      	str	r3, [sp, #36]	; 0x24
 800ce2a:	6823      	ldr	r3, [r4, #0]
 800ce2c:	4629      	mov	r1, r5
 800ce2e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800ce32:	4620      	mov	r0, r4
 800ce34:	4798      	blx	r3
 800ce36:	b203      	sxth	r3, r0
 800ce38:	9306      	str	r3, [sp, #24]
 800ce3a:	6823      	ldr	r3, [r4, #0]
 800ce3c:	4629      	mov	r1, r5
 800ce3e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800ce42:	4620      	mov	r0, r4
 800ce44:	4798      	blx	r3
 800ce46:	2f00      	cmp	r7, #0
 800ce48:	b203      	sxth	r3, r0
 800ce4a:	9307      	str	r3, [sp, #28]
 800ce4c:	d138      	bne.n	800cec0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800ce4e:	f1b9 0f00 	cmp.w	r9, #0
 800ce52:	d132      	bne.n	800ceba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ce54:	6823      	ldr	r3, [r4, #0]
 800ce56:	464a      	mov	r2, r9
 800ce58:	4629      	mov	r1, r5
 800ce5a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ce5e:	4620      	mov	r0, r4
 800ce60:	4798      	blx	r3
 800ce62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce64:	1ac0      	subs	r0, r0, r3
 800ce66:	9010      	str	r0, [sp, #64]	; 0x40
 800ce68:	4640      	mov	r0, r8
 800ce6a:	f7ff fcbb 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ce6e:	6823      	ldr	r3, [r4, #0]
 800ce70:	4607      	mov	r7, r0
 800ce72:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800ce76:	4629      	mov	r1, r5
 800ce78:	4620      	mov	r0, r4
 800ce7a:	4798      	blx	r3
 800ce7c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ce80:	1a38      	subs	r0, r7, r0
 800ce82:	fa0f f880 	sxth.w	r8, r0
 800ce86:	eb13 0f08 	cmn.w	r3, r8
 800ce8a:	d416      	bmi.n	800ceba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ce8c:	6823      	ldr	r3, [r4, #0]
 800ce8e:	4629      	mov	r1, r5
 800ce90:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800ce94:	4620      	mov	r0, r4
 800ce96:	4798      	blx	r3
 800ce98:	4580      	cmp	r8, r0
 800ce9a:	da0e      	bge.n	800ceba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ce9c:	9a08      	ldr	r2, [sp, #32]
 800ce9e:	6823      	ldr	r3, [r4, #0]
 800cea0:	9202      	str	r2, [sp, #8]
 800cea2:	b23f      	sxth	r7, r7
 800cea4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cea8:	9201      	str	r2, [sp, #4]
 800ceaa:	9700      	str	r7, [sp, #0]
 800ceac:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800ceb0:	4631      	mov	r1, r6
 800ceb2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ceb6:	4620      	mov	r0, r4
 800ceb8:	47a8      	blx	r5
 800ceba:	b013      	add	sp, #76	; 0x4c
 800cebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cec0:	ddfb      	ble.n	800ceba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cec2:	6823      	ldr	r3, [r4, #0]
 800cec4:	4629      	mov	r1, r5
 800cec6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800ceca:	4620      	mov	r0, r4
 800cecc:	4798      	blx	r3
 800cece:	6823      	ldr	r3, [r4, #0]
 800ced0:	4683      	mov	fp, r0
 800ced2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800ced6:	4629      	mov	r1, r5
 800ced8:	4620      	mov	r0, r4
 800ceda:	4798      	blx	r3
 800cedc:	eba0 030b 	sub.w	r3, r0, fp
 800cee0:	2b00      	cmp	r3, #0
 800cee2:	bfb8      	it	lt
 800cee4:	425b      	neglt	r3, r3
 800cee6:	fb93 f3f7 	sdiv	r3, r3, r7
 800ceea:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ceee:	4680      	mov	r8, r0
 800cef0:	dce3      	bgt.n	800ceba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cef2:	6823      	ldr	r3, [r4, #0]
 800cef4:	465a      	mov	r2, fp
 800cef6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cefa:	4629      	mov	r1, r5
 800cefc:	4620      	mov	r0, r4
 800cefe:	4798      	blx	r3
 800cf00:	6823      	ldr	r3, [r4, #0]
 800cf02:	4606      	mov	r6, r0
 800cf04:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cf08:	4642      	mov	r2, r8
 800cf0a:	4629      	mov	r1, r5
 800cf0c:	4620      	mov	r0, r4
 800cf0e:	4798      	blx	r3
 800cf10:	42b0      	cmp	r0, r6
 800cf12:	bfa2      	ittt	ge
 800cf14:	4643      	movge	r3, r8
 800cf16:	46d8      	movge	r8, fp
 800cf18:	469b      	movge	fp, r3
 800cf1a:	45d8      	cmp	r8, fp
 800cf1c:	bfac      	ite	ge
 800cf1e:	f04f 33ff 	movge.w	r3, #4294967295
 800cf22:	2301      	movlt	r3, #1
 800cf24:	fb98 f6f7 	sdiv	r6, r8, r7
 800cf28:	fb9b f2f7 	sdiv	r2, fp, r7
 800cf2c:	1af6      	subs	r6, r6, r3
 800cf2e:	441a      	add	r2, r3
 800cf30:	4296      	cmp	r6, r2
 800cf32:	bfac      	ite	ge
 800cf34:	f04f 3aff 	movge.w	sl, #4294967295
 800cf38:	f04f 0a01 	movlt.w	sl, #1
 800cf3c:	f1b9 0f00 	cmp.w	r9, #0
 800cf40:	d13e      	bne.n	800cfc0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800cf42:	fb07 fb0a 	mul.w	fp, r7, sl
 800cf46:	eb0a 0802 	add.w	r8, sl, r2
 800cf4a:	4377      	muls	r7, r6
 800cf4c:	45b0      	cmp	r8, r6
 800cf4e:	d0b4      	beq.n	800ceba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cf50:	6823      	ldr	r3, [r4, #0]
 800cf52:	463a      	mov	r2, r7
 800cf54:	4629      	mov	r1, r5
 800cf56:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cf5a:	4620      	mov	r0, r4
 800cf5c:	4798      	blx	r3
 800cf5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf60:	1ac0      	subs	r0, r0, r3
 800cf62:	9010      	str	r0, [sp, #64]	; 0x40
 800cf64:	a810      	add	r0, sp, #64	; 0x40
 800cf66:	f7ff fc3d 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cf6a:	6823      	ldr	r3, [r4, #0]
 800cf6c:	4681      	mov	r9, r0
 800cf6e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cf72:	4629      	mov	r1, r5
 800cf74:	4620      	mov	r0, r4
 800cf76:	4798      	blx	r3
 800cf78:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cf7c:	eba9 0000 	sub.w	r0, r9, r0
 800cf80:	b203      	sxth	r3, r0
 800cf82:	42da      	cmn	r2, r3
 800cf84:	9304      	str	r3, [sp, #16]
 800cf86:	d418      	bmi.n	800cfba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cf88:	6822      	ldr	r2, [r4, #0]
 800cf8a:	4629      	mov	r1, r5
 800cf8c:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cf90:	4620      	mov	r0, r4
 800cf92:	4790      	blx	r2
 800cf94:	9b04      	ldr	r3, [sp, #16]
 800cf96:	4283      	cmp	r3, r0
 800cf98:	da0f      	bge.n	800cfba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cf9a:	9b08      	ldr	r3, [sp, #32]
 800cf9c:	9302      	str	r3, [sp, #8]
 800cf9e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cfa2:	6822      	ldr	r2, [r4, #0]
 800cfa4:	9301      	str	r3, [sp, #4]
 800cfa6:	fa0f f389 	sxth.w	r3, r9
 800cfaa:	9300      	str	r3, [sp, #0]
 800cfac:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800cfb0:	a90e      	add	r1, sp, #56	; 0x38
 800cfb2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cfb6:	4620      	mov	r0, r4
 800cfb8:	47c8      	blx	r9
 800cfba:	4456      	add	r6, sl
 800cfbc:	445f      	add	r7, fp
 800cfbe:	e7c5      	b.n	800cf4c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800cfc0:	fb98 f8f9 	sdiv	r8, r8, r9
 800cfc4:	eba8 0203 	sub.w	r2, r8, r3
 800cfc8:	fb9b f8f9 	sdiv	r8, fp, r9
 800cfcc:	4498      	add	r8, r3
 800cfce:	4542      	cmp	r2, r8
 800cfd0:	bfac      	ite	ge
 800cfd2:	f04f 33ff 	movge.w	r3, #4294967295
 800cfd6:	2301      	movlt	r3, #1
 800cfd8:	930a      	str	r3, [sp, #40]	; 0x28
 800cfda:	6823      	ldr	r3, [r4, #0]
 800cfdc:	9204      	str	r2, [sp, #16]
 800cfde:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cfe2:	fb02 f209 	mul.w	r2, r2, r9
 800cfe6:	4629      	mov	r1, r5
 800cfe8:	4620      	mov	r0, r4
 800cfea:	4798      	blx	r3
 800cfec:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800cff0:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800cff4:	4658      	mov	r0, fp
 800cff6:	f7ff fbf5 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cffa:	b203      	sxth	r3, r0
 800cffc:	9305      	str	r3, [sp, #20]
 800cffe:	6823      	ldr	r3, [r4, #0]
 800d000:	fb06 f207 	mul.w	r2, r6, r7
 800d004:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800d008:	4629      	mov	r1, r5
 800d00a:	4620      	mov	r0, r4
 800d00c:	4798      	blx	r3
 800d00e:	9010      	str	r0, [sp, #64]	; 0x40
 800d010:	4658      	mov	r0, fp
 800d012:	f7ff fbe7 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d016:	fb07 f20a 	mul.w	r2, r7, sl
 800d01a:	920b      	str	r2, [sp, #44]	; 0x2c
 800d01c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d01e:	4442      	add	r2, r8
 800d020:	b203      	sxth	r3, r0
 800d022:	920c      	str	r2, [sp, #48]	; 0x30
 800d024:	9a05      	ldr	r2, [sp, #20]
 800d026:	429a      	cmp	r2, r3
 800d028:	dc16      	bgt.n	800d058 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800d02a:	eb06 080a 	add.w	r8, r6, sl
 800d02e:	fb07 f808 	mul.w	r8, r7, r8
 800d032:	9a05      	ldr	r2, [sp, #20]
 800d034:	429a      	cmp	r2, r3
 800d036:	db54      	blt.n	800d0e2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800d038:	6823      	ldr	r3, [r4, #0]
 800d03a:	4642      	mov	r2, r8
 800d03c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800d040:	4629      	mov	r1, r5
 800d042:	4620      	mov	r0, r4
 800d044:	4798      	blx	r3
 800d046:	9010      	str	r0, [sp, #64]	; 0x40
 800d048:	4658      	mov	r0, fp
 800d04a:	f7ff fbcb 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d04e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d050:	4456      	add	r6, sl
 800d052:	b203      	sxth	r3, r0
 800d054:	4490      	add	r8, r2
 800d056:	e7ec      	b.n	800d032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800d058:	6823      	ldr	r3, [r4, #0]
 800d05a:	fb07 f206 	mul.w	r2, r7, r6
 800d05e:	4629      	mov	r1, r5
 800d060:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800d064:	4620      	mov	r0, r4
 800d066:	4798      	blx	r3
 800d068:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d06a:	1ac0      	subs	r0, r0, r3
 800d06c:	9010      	str	r0, [sp, #64]	; 0x40
 800d06e:	4658      	mov	r0, fp
 800d070:	f7ff fbb8 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d074:	6823      	ldr	r3, [r4, #0]
 800d076:	4680      	mov	r8, r0
 800d078:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800d07c:	4629      	mov	r1, r5
 800d07e:	4620      	mov	r0, r4
 800d080:	4798      	blx	r3
 800d082:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800d086:	eba8 0000 	sub.w	r0, r8, r0
 800d08a:	b203      	sxth	r3, r0
 800d08c:	42da      	cmn	r2, r3
 800d08e:	930d      	str	r3, [sp, #52]	; 0x34
 800d090:	d418      	bmi.n	800d0c4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800d092:	6822      	ldr	r2, [r4, #0]
 800d094:	4629      	mov	r1, r5
 800d096:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800d09a:	4620      	mov	r0, r4
 800d09c:	4790      	blx	r2
 800d09e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d0a0:	4283      	cmp	r3, r0
 800d0a2:	da0f      	bge.n	800d0c4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800d0a4:	9b08      	ldr	r3, [sp, #32]
 800d0a6:	9302      	str	r3, [sp, #8]
 800d0a8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d0ac:	6822      	ldr	r2, [r4, #0]
 800d0ae:	9301      	str	r3, [sp, #4]
 800d0b0:	fa0f f388 	sxth.w	r3, r8
 800d0b4:	9300      	str	r3, [sp, #0]
 800d0b6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800d0ba:	a90e      	add	r1, sp, #56	; 0x38
 800d0bc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d0c0:	4620      	mov	r0, r4
 800d0c2:	47c0      	blx	r8
 800d0c4:	6823      	ldr	r3, [r4, #0]
 800d0c6:	4456      	add	r6, sl
 800d0c8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800d0cc:	fb06 f207 	mul.w	r2, r6, r7
 800d0d0:	4629      	mov	r1, r5
 800d0d2:	4620      	mov	r0, r4
 800d0d4:	4798      	blx	r3
 800d0d6:	9010      	str	r0, [sp, #64]	; 0x40
 800d0d8:	4658      	mov	r0, fp
 800d0da:	f7ff fb83 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d0de:	b203      	sxth	r3, r0
 800d0e0:	e7a0      	b.n	800d024 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800d0e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d0e4:	930d      	str	r3, [sp, #52]	; 0x34
 800d0e6:	9b04      	ldr	r3, [sp, #16]
 800d0e8:	4413      	add	r3, r2
 800d0ea:	9304      	str	r3, [sp, #16]
 800d0ec:	9a04      	ldr	r2, [sp, #16]
 800d0ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d0f0:	4293      	cmp	r3, r2
 800d0f2:	f43f aee2 	beq.w	800ceba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800d0f6:	9b04      	ldr	r3, [sp, #16]
 800d0f8:	6822      	ldr	r2, [r4, #0]
 800d0fa:	4629      	mov	r1, r5
 800d0fc:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800d100:	4620      	mov	r0, r4
 800d102:	fb03 f209 	mul.w	r2, r3, r9
 800d106:	47c0      	blx	r8
 800d108:	9010      	str	r0, [sp, #64]	; 0x40
 800d10a:	4658      	mov	r0, fp
 800d10c:	f7ff fb6a 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d110:	b203      	sxth	r3, r0
 800d112:	9305      	str	r3, [sp, #20]
 800d114:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d116:	e785      	b.n	800d024 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800d118:	4798      	blx	r3
 800d11a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d11e:	deff      	udf	#255	; 0xff

0800d120 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800d120:	b510      	push	{r4, lr}
 800d122:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800d126:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800d12a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800d12e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800d132:	13a4      	asrs	r4, r4, #14
 800d134:	139b      	asrs	r3, r3, #14
 800d136:	429c      	cmp	r4, r3
 800d138:	bfb8      	it	lt
 800d13a:	461c      	movlt	r4, r3
 800d13c:	2c01      	cmp	r4, #1
 800d13e:	dd07      	ble.n	800d150 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800d140:	fb91 f1f4 	sdiv	r1, r1, r4
 800d144:	fb90 f0f4 	sdiv	r0, r0, r4
 800d148:	f7ff ffea 	bl	800d120 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800d14c:	4360      	muls	r0, r4
 800d14e:	bd10      	pop	{r4, pc}
 800d150:	4340      	muls	r0, r0
 800d152:	fb01 0101 	mla	r1, r1, r1, r0
 800d156:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800d15a:	bfb4      	ite	lt
 800d15c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800d160:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800d164:	2000      	movs	r0, #0
 800d166:	18c2      	adds	r2, r0, r3
 800d168:	428a      	cmp	r2, r1
 800d16a:	bf9c      	itt	ls
 800d16c:	1898      	addls	r0, r3, r2
 800d16e:	1a89      	subls	r1, r1, r2
 800d170:	089b      	lsrs	r3, r3, #2
 800d172:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800d176:	d1f6      	bne.n	800d166 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800d178:	e7e9      	b.n	800d14e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800d17a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800d17a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d17c:	9906      	ldr	r1, [sp, #24]
 800d17e:	4291      	cmp	r1, r2
 800d180:	bfbc      	itt	lt
 800d182:	9206      	strlt	r2, [sp, #24]
 800d184:	460a      	movlt	r2, r1
 800d186:	9907      	ldr	r1, [sp, #28]
 800d188:	428b      	cmp	r3, r1
 800d18a:	4606      	mov	r6, r0
 800d18c:	461c      	mov	r4, r3
 800d18e:	f04f 0020 	mov.w	r0, #32
 800d192:	bfc8      	it	gt
 800d194:	460c      	movgt	r4, r1
 800d196:	fb92 f5f0 	sdiv	r5, r2, r0
 800d19a:	fb94 f4f0 	sdiv	r4, r4, r0
 800d19e:	a806      	add	r0, sp, #24
 800d1a0:	bfc8      	it	gt
 800d1a2:	9307      	strgt	r3, [sp, #28]
 800d1a4:	f7ff fdf7 	bl	800cd96 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d1a8:	4607      	mov	r7, r0
 800d1aa:	a807      	add	r0, sp, #28
 800d1ac:	f7ff fdf3 	bl	800cd96 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d1b0:	1b7a      	subs	r2, r7, r5
 800d1b2:	1b00      	subs	r0, r0, r4
 800d1b4:	80f0      	strh	r0, [r6, #6]
 800d1b6:	8035      	strh	r5, [r6, #0]
 800d1b8:	8074      	strh	r4, [r6, #2]
 800d1ba:	80b2      	strh	r2, [r6, #4]
 800d1bc:	4630      	mov	r0, r6
 800d1be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d1c0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800d1c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d1c2:	9c08      	ldr	r4, [sp, #32]
 800d1c4:	2602      	movs	r6, #2
 800d1c6:	3401      	adds	r4, #1
 800d1c8:	fb94 f4f6 	sdiv	r4, r4, r6
 800d1cc:	18a6      	adds	r6, r4, r2
 800d1ce:	191f      	adds	r7, r3, r4
 800d1d0:	e9cd 6700 	strd	r6, r7, [sp]
 800d1d4:	1b1b      	subs	r3, r3, r4
 800d1d6:	1b12      	subs	r2, r2, r4
 800d1d8:	4605      	mov	r5, r0
 800d1da:	f7ff ffce 	bl	800d17a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800d1de:	4628      	mov	r0, r5
 800d1e0:	b003      	add	sp, #12
 800d1e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d1e4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800d1e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d1e8:	6943      	ldr	r3, [r0, #20]
 800d1ea:	b087      	sub	sp, #28
 800d1ec:	4606      	mov	r6, r0
 800d1ee:	460d      	mov	r5, r1
 800d1f0:	2b00      	cmp	r3, #0
 800d1f2:	d072      	beq.n	800d2da <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800d1f4:	695c      	ldr	r4, [r3, #20]
 800d1f6:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800d1fa:	6823      	ldr	r3, [r4, #0]
 800d1fc:	4620      	mov	r0, r4
 800d1fe:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d202:	4798      	blx	r3
 800d204:	6823      	ldr	r3, [r4, #0]
 800d206:	4680      	mov	r8, r0
 800d208:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d20c:	4629      	mov	r1, r5
 800d20e:	4620      	mov	r0, r4
 800d210:	4798      	blx	r3
 800d212:	017f      	lsls	r7, r7, #5
 800d214:	4603      	mov	r3, r0
 800d216:	9700      	str	r7, [sp, #0]
 800d218:	4642      	mov	r2, r8
 800d21a:	4631      	mov	r1, r6
 800d21c:	a802      	add	r0, sp, #8
 800d21e:	f7ff ffcf 	bl	800d1c0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800d222:	2d00      	cmp	r5, #0
 800d224:	dd1b      	ble.n	800d25e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800d226:	6823      	ldr	r3, [r4, #0]
 800d228:	f105 38ff 	add.w	r8, r5, #4294967295
 800d22c:	fa0f f888 	sxth.w	r8, r8
 800d230:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d234:	4641      	mov	r1, r8
 800d236:	4620      	mov	r0, r4
 800d238:	4798      	blx	r3
 800d23a:	6823      	ldr	r3, [r4, #0]
 800d23c:	4681      	mov	r9, r0
 800d23e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d242:	4641      	mov	r1, r8
 800d244:	4620      	mov	r0, r4
 800d246:	4798      	blx	r3
 800d248:	4631      	mov	r1, r6
 800d24a:	4603      	mov	r3, r0
 800d24c:	9700      	str	r7, [sp, #0]
 800d24e:	a804      	add	r0, sp, #16
 800d250:	464a      	mov	r2, r9
 800d252:	f7ff ffb5 	bl	800d1c0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800d256:	a904      	add	r1, sp, #16
 800d258:	a802      	add	r0, sp, #8
 800d25a:	f7ff fd57 	bl	800cd0c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d25e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d262:	3b01      	subs	r3, #1
 800d264:	429d      	cmp	r5, r3
 800d266:	da19      	bge.n	800d29c <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800d268:	6823      	ldr	r3, [r4, #0]
 800d26a:	3501      	adds	r5, #1
 800d26c:	b22d      	sxth	r5, r5
 800d26e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d272:	4629      	mov	r1, r5
 800d274:	4620      	mov	r0, r4
 800d276:	4798      	blx	r3
 800d278:	6823      	ldr	r3, [r4, #0]
 800d27a:	4680      	mov	r8, r0
 800d27c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d280:	4629      	mov	r1, r5
 800d282:	4620      	mov	r0, r4
 800d284:	4798      	blx	r3
 800d286:	4631      	mov	r1, r6
 800d288:	4603      	mov	r3, r0
 800d28a:	9700      	str	r7, [sp, #0]
 800d28c:	a804      	add	r0, sp, #16
 800d28e:	4642      	mov	r2, r8
 800d290:	f7ff ff96 	bl	800d1c0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800d294:	a904      	add	r1, sp, #16
 800d296:	a802      	add	r0, sp, #8
 800d298:	f7ff fd38 	bl	800cd0c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d29c:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800d2a0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d2a4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d2a8:	18ca      	adds	r2, r1, r3
 800d2aa:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d2ae:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d2b2:	1a9b      	subs	r3, r3, r2
 800d2b4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d2b8:	2200      	movs	r2, #0
 800d2ba:	a904      	add	r1, sp, #16
 800d2bc:	a802      	add	r0, sp, #8
 800d2be:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d2c2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d2c6:	f7fd ffb9 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800d2ca:	6833      	ldr	r3, [r6, #0]
 800d2cc:	a902      	add	r1, sp, #8
 800d2ce:	691b      	ldr	r3, [r3, #16]
 800d2d0:	4630      	mov	r0, r6
 800d2d2:	4798      	blx	r3
 800d2d4:	b007      	add	sp, #28
 800d2d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d2da:	681b      	ldr	r3, [r3, #0]
 800d2dc:	deff      	udf	#255	; 0xff

0800d2de <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800d2de:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800d2e2:	2b00      	cmp	r3, #0
 800d2e4:	da05      	bge.n	800d2f2 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800d2e6:	880a      	ldrh	r2, [r1, #0]
 800d2e8:	b29b      	uxth	r3, r3
 800d2ea:	441a      	add	r2, r3
 800d2ec:	425b      	negs	r3, r3
 800d2ee:	800a      	strh	r2, [r1, #0]
 800d2f0:	808b      	strh	r3, [r1, #4]
 800d2f2:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800d2f6:	2b00      	cmp	r3, #0
 800d2f8:	da05      	bge.n	800d306 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800d2fa:	884a      	ldrh	r2, [r1, #2]
 800d2fc:	b29b      	uxth	r3, r3
 800d2fe:	441a      	add	r2, r3
 800d300:	425b      	negs	r3, r3
 800d302:	804a      	strh	r2, [r1, #2]
 800d304:	80cb      	strh	r3, [r1, #6]
 800d306:	4770      	bx	lr

0800d308 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800d308:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d30a:	4604      	mov	r4, r0
 800d30c:	460d      	mov	r5, r1
 800d30e:	6801      	ldr	r1, [r0, #0]
 800d310:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800d314:	9001      	str	r0, [sp, #4]
 800d316:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800d31a:	9000      	str	r0, [sp, #0]
 800d31c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800d320:	a802      	add	r0, sp, #8
 800d322:	4621      	mov	r1, r4
 800d324:	47b0      	blx	r6
 800d326:	a902      	add	r1, sp, #8
 800d328:	4620      	mov	r0, r4
 800d32a:	f7ff ffd8 	bl	800d2de <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800d32e:	a802      	add	r0, sp, #8
 800d330:	4629      	mov	r1, r5
 800d332:	f7fd ff83 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800d336:	a802      	add	r0, sp, #8
 800d338:	f7fd ffc3 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d33c:	b968      	cbnz	r0, 800d35a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800d33e:	6823      	ldr	r3, [r4, #0]
 800d340:	a902      	add	r1, sp, #8
 800d342:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d344:	4620      	mov	r0, r4
 800d346:	4798      	blx	r3
 800d348:	f7f5 fbfc 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800d34c:	6803      	ldr	r3, [r0, #0]
 800d34e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d350:	6a1d      	ldr	r5, [r3, #32]
 800d352:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800d356:	a902      	add	r1, sp, #8
 800d358:	47a8      	blx	r5
 800d35a:	b004      	add	sp, #16
 800d35c:	bd70      	pop	{r4, r5, r6, pc}

0800d35e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800d35e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d362:	b08b      	sub	sp, #44	; 0x2c
 800d364:	461e      	mov	r6, r3
 800d366:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800d36a:	9304      	str	r3, [sp, #16]
 800d36c:	429e      	cmp	r6, r3
 800d36e:	4689      	mov	r9, r1
 800d370:	4615      	mov	r5, r2
 800d372:	d072      	beq.n	800d45a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800d374:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d378:	015b      	lsls	r3, r3, #5
 800d37a:	9303      	str	r3, [sp, #12]
 800d37c:	6813      	ldr	r3, [r2, #0]
 800d37e:	4610      	mov	r0, r2
 800d380:	4631      	mov	r1, r6
 800d382:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d386:	4798      	blx	r3
 800d388:	ab0a      	add	r3, sp, #40	; 0x28
 800d38a:	4634      	mov	r4, r6
 800d38c:	f843 0d10 	str.w	r0, [r3, #-16]!
 800d390:	4618      	mov	r0, r3
 800d392:	f7ff fa27 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d396:	682b      	ldr	r3, [r5, #0]
 800d398:	4631      	mov	r1, r6
 800d39a:	0147      	lsls	r7, r0, #5
 800d39c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d3a0:	4628      	mov	r0, r5
 800d3a2:	4798      	blx	r3
 800d3a4:	ab0a      	add	r3, sp, #40	; 0x28
 800d3a6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800d3aa:	4618      	mov	r0, r3
 800d3ac:	f7ff fa1a 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d3b0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800d3b4:	4642      	mov	r2, r8
 800d3b6:	4639      	mov	r1, r7
 800d3b8:	4648      	mov	r0, r9
 800d3ba:	f013 fb9b 	bl	8020af4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d3be:	2301      	movs	r3, #1
 800d3c0:	9300      	str	r3, [sp, #0]
 800d3c2:	9b00      	ldr	r3, [sp, #0]
 800d3c4:	441c      	add	r4, r3
 800d3c6:	682b      	ldr	r3, [r5, #0]
 800d3c8:	b224      	sxth	r4, r4
 800d3ca:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d3ce:	4621      	mov	r1, r4
 800d3d0:	4628      	mov	r0, r5
 800d3d2:	4798      	blx	r3
 800d3d4:	9008      	str	r0, [sp, #32]
 800d3d6:	a808      	add	r0, sp, #32
 800d3d8:	f7ff fa04 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d3dc:	0143      	lsls	r3, r0, #5
 800d3de:	9301      	str	r3, [sp, #4]
 800d3e0:	682b      	ldr	r3, [r5, #0]
 800d3e2:	4621      	mov	r1, r4
 800d3e4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d3e8:	4628      	mov	r0, r5
 800d3ea:	4798      	blx	r3
 800d3ec:	9009      	str	r0, [sp, #36]	; 0x24
 800d3ee:	a809      	add	r0, sp, #36	; 0x24
 800d3f0:	f7ff f9f8 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d3f4:	0143      	lsls	r3, r0, #5
 800d3f6:	9302      	str	r3, [sp, #8]
 800d3f8:	9b01      	ldr	r3, [sp, #4]
 800d3fa:	eba3 0b07 	sub.w	fp, r3, r7
 800d3fe:	9b02      	ldr	r3, [sp, #8]
 800d400:	eba3 0a08 	sub.w	sl, r3, r8
 800d404:	4651      	mov	r1, sl
 800d406:	4658      	mov	r0, fp
 800d408:	f7ff fe8a 	bl	800d120 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800d40c:	b318      	cbz	r0, 800d456 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800d40e:	4602      	mov	r2, r0
 800d410:	4651      	mov	r1, sl
 800d412:	9005      	str	r0, [sp, #20]
 800d414:	9803      	ldr	r0, [sp, #12]
 800d416:	f005 f9fb 	bl	8012810 <_ZN8touchgfx6muldivElll>
 800d41a:	2302      	movs	r3, #2
 800d41c:	fb90 faf3 	sdiv	sl, r0, r3
 800d420:	9b05      	ldr	r3, [sp, #20]
 800d422:	9803      	ldr	r0, [sp, #12]
 800d424:	461a      	mov	r2, r3
 800d426:	4659      	mov	r1, fp
 800d428:	f005 f9f2 	bl	8012810 <_ZN8touchgfx6muldivElll>
 800d42c:	2302      	movs	r3, #2
 800d42e:	eba7 010a 	sub.w	r1, r7, sl
 800d432:	fb90 fbf3 	sdiv	fp, r0, r3
 800d436:	4648      	mov	r0, r9
 800d438:	eb0b 0208 	add.w	r2, fp, r8
 800d43c:	f013 fa30 	bl	80208a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d440:	9b02      	ldr	r3, [sp, #8]
 800d442:	eb03 020b 	add.w	r2, r3, fp
 800d446:	9b01      	ldr	r3, [sp, #4]
 800d448:	4648      	mov	r0, r9
 800d44a:	eba3 010a 	sub.w	r1, r3, sl
 800d44e:	f013 fa27 	bl	80208a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d452:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800d456:	42a6      	cmp	r6, r4
 800d458:	db02      	blt.n	800d460 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800d45a:	b00b      	add	sp, #44	; 0x2c
 800d45c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d460:	9b00      	ldr	r3, [sp, #0]
 800d462:	9a04      	ldr	r2, [sp, #16]
 800d464:	42a2      	cmp	r2, r4
 800d466:	bf08      	it	eq
 800d468:	f04f 33ff 	moveq.w	r3, #4294967295
 800d46c:	e7a8      	b.n	800d3c0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800d470 <_ZN8touchgfx6CanvasD1Ev>:
 800d470:	b510      	push	{r4, lr}
 800d472:	4b04      	ldr	r3, [pc, #16]	; (800d484 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800d474:	4604      	mov	r4, r0
 800d476:	f840 3b20 	str.w	r3, [r0], #32
 800d47a:	f001 fd23 	bl	800eec4 <_ZN8touchgfx7OutlineD1Ev>
 800d47e:	4620      	mov	r0, r4
 800d480:	bd10      	pop	{r4, pc}
 800d482:	bf00      	nop
 800d484:	080240dc 	.word	0x080240dc

0800d488 <_ZN8touchgfx6CanvasD0Ev>:
 800d488:	b510      	push	{r4, lr}
 800d48a:	4604      	mov	r4, r0
 800d48c:	f7ff fff0 	bl	800d470 <_ZN8touchgfx6CanvasD1Ev>
 800d490:	4620      	mov	r0, r4
 800d492:	2170      	movs	r1, #112	; 0x70
 800d494:	f013 fb80 	bl	8020b98 <_ZdlPvj>
 800d498:	4620      	mov	r0, r4
 800d49a:	bd10      	pop	{r4, pc}

0800d49c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800d49c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d4a0:	6943      	ldr	r3, [r0, #20]
 800d4a2:	b0a2      	sub	sp, #136	; 0x88
 800d4a4:	4606      	mov	r6, r0
 800d4a6:	460f      	mov	r7, r1
 800d4a8:	2b00      	cmp	r3, #0
 800d4aa:	d06a      	beq.n	800d582 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800d4ac:	695c      	ldr	r4, [r3, #20]
 800d4ae:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d4b2:	2b01      	cmp	r3, #1
 800d4b4:	dc04      	bgt.n	800d4c0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800d4b6:	2401      	movs	r4, #1
 800d4b8:	4620      	mov	r0, r4
 800d4ba:	b022      	add	sp, #136	; 0x88
 800d4bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d4c0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d4c4:	ad22      	add	r5, sp, #136	; 0x88
 800d4c6:	011b      	lsls	r3, r3, #4
 800d4c8:	f845 3d70 	str.w	r3, [r5, #-112]!
 800d4cc:	4628      	mov	r0, r5
 800d4ce:	f7ff fc62 	bl	800cd96 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d4d2:	8839      	ldrh	r1, [r7, #0]
 800d4d4:	88ba      	ldrh	r2, [r7, #4]
 800d4d6:	6823      	ldr	r3, [r4, #0]
 800d4d8:	b280      	uxth	r0, r0
 800d4da:	440a      	add	r2, r1
 800d4dc:	4402      	add	r2, r0
 800d4de:	1a09      	subs	r1, r1, r0
 800d4e0:	f10d 000e 	add.w	r0, sp, #14
 800d4e4:	9000      	str	r0, [sp, #0]
 800d4e6:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800d4ea:	b212      	sxth	r2, r2
 800d4ec:	ab03      	add	r3, sp, #12
 800d4ee:	b209      	sxth	r1, r1
 800d4f0:	4620      	mov	r0, r4
 800d4f2:	47c0      	blx	r8
 800d4f4:	2800      	cmp	r0, #0
 800d4f6:	d0de      	beq.n	800d4b6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800d4f8:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800d4fc:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d500:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d504:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d508:	18ca      	adds	r2, r1, r3
 800d50a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d50e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d512:	1a9b      	subs	r3, r3, r2
 800d514:	4639      	mov	r1, r7
 800d516:	2200      	movs	r2, #0
 800d518:	a804      	add	r0, sp, #16
 800d51a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d51e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d522:	f7fd fe8b 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800d526:	aa04      	add	r2, sp, #16
 800d528:	4631      	mov	r1, r6
 800d52a:	4628      	mov	r0, r5
 800d52c:	f013 f90a 	bl	8020744 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d530:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800d534:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d538:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800d53c:	2f00      	cmp	r7, #0
 800d53e:	dd03      	ble.n	800d548 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d540:	42bb      	cmp	r3, r7
 800d542:	da01      	bge.n	800d548 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d544:	42ba      	cmp	r2, r7
 800d546:	da0f      	bge.n	800d568 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800d548:	9200      	str	r2, [sp, #0]
 800d54a:	4622      	mov	r2, r4
 800d54c:	4629      	mov	r1, r5
 800d54e:	4630      	mov	r0, r6
 800d550:	f7ff ff05 	bl	800d35e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d554:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800d558:	4628      	mov	r0, r5
 800d55a:	f013 fa1d 	bl	8020998 <_ZN8touchgfx6Canvas6renderEh>
 800d55e:	4604      	mov	r4, r0
 800d560:	4628      	mov	r0, r5
 800d562:	f7ff ff85 	bl	800d470 <_ZN8touchgfx6CanvasD1Ev>
 800d566:	e7a7      	b.n	800d4b8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800d568:	1e7a      	subs	r2, r7, #1
 800d56a:	b212      	sxth	r2, r2
 800d56c:	9200      	str	r2, [sp, #0]
 800d56e:	4629      	mov	r1, r5
 800d570:	4622      	mov	r2, r4
 800d572:	4630      	mov	r0, r6
 800d574:	f7ff fef3 	bl	800d35e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d578:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d57c:	9300      	str	r3, [sp, #0]
 800d57e:	463b      	mov	r3, r7
 800d580:	e7e3      	b.n	800d54a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800d582:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800d586:	deff      	udf	#255	; 0xff

0800d588 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800d588:	4770      	bx	lr

0800d58a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d58a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d58c:	b118      	cbz	r0, 800d596 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800d58e:	6803      	ldr	r3, [r0, #0]
 800d590:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d594:	4718      	bx	r3
 800d596:	4770      	bx	lr

0800d598 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d598:	680b      	ldr	r3, [r1, #0]
 800d59a:	4608      	mov	r0, r1
 800d59c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d5a0:	4718      	bx	r3

0800d5a2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d5a2:	680b      	ldr	r3, [r1, #0]
 800d5a4:	4608      	mov	r0, r1
 800d5a6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d5aa:	4718      	bx	r3

0800d5ac <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d5ac:	680b      	ldr	r3, [r1, #0]
 800d5ae:	4608      	mov	r0, r1
 800d5b0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800d5b4:	4718      	bx	r3

0800d5b6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d5b6:	680b      	ldr	r3, [r1, #0]
 800d5b8:	4608      	mov	r0, r1
 800d5ba:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800d5be:	4718      	bx	r3

0800d5c0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800d5c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5c4:	4a37      	ldr	r2, [pc, #220]	; (800d6a4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800d5c6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d5c8:	8812      	ldrh	r2, [r2, #0]
 800d5ca:	429a      	cmp	r2, r3
 800d5cc:	b087      	sub	sp, #28
 800d5ce:	4604      	mov	r4, r0
 800d5d0:	4689      	mov	r9, r1
 800d5d2:	d937      	bls.n	800d644 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d5d4:	4a34      	ldr	r2, [pc, #208]	; (800d6a8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800d5d6:	6812      	ldr	r2, [r2, #0]
 800d5d8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d5dc:	4b33      	ldr	r3, [pc, #204]	; (800d6ac <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800d5de:	681b      	ldr	r3, [r3, #0]
 800d5e0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d5e4:	f1b8 0f00 	cmp.w	r8, #0
 800d5e8:	d02c      	beq.n	800d644 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d5ea:	6803      	ldr	r3, [r0, #0]
 800d5ec:	6945      	ldr	r5, [r0, #20]
 800d5ee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d5f0:	2d00      	cmp	r5, #0
 800d5f2:	d052      	beq.n	800d69a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800d5f4:	696f      	ldr	r7, [r5, #20]
 800d5f6:	4798      	blx	r3
 800d5f8:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800d5fc:	fb15 f000 	smulbb	r0, r5, r0
 800d600:	b280      	uxth	r0, r0
 800d602:	1c45      	adds	r5, r0, #1
 800d604:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800d608:	122d      	asrs	r5, r5, #8
 800d60a:	d01b      	beq.n	800d644 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d60c:	6823      	ldr	r3, [r4, #0]
 800d60e:	4639      	mov	r1, r7
 800d610:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d614:	4620      	mov	r0, r4
 800d616:	4798      	blx	r3
 800d618:	6823      	ldr	r3, [r4, #0]
 800d61a:	4606      	mov	r6, r0
 800d61c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d620:	4639      	mov	r1, r7
 800d622:	4620      	mov	r0, r4
 800d624:	4798      	blx	r3
 800d626:	b2ed      	uxtb	r5, r5
 800d628:	4683      	mov	fp, r0
 800d62a:	b970      	cbnz	r0, 800d64a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d62c:	b96e      	cbnz	r6, 800d64a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d62e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800d632:	6823      	ldr	r3, [r4, #0]
 800d634:	9600      	str	r6, [sp, #0]
 800d636:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800d63a:	4642      	mov	r2, r8
 800d63c:	463b      	mov	r3, r7
 800d63e:	4649      	mov	r1, r9
 800d640:	4620      	mov	r0, r4
 800d642:	47a8      	blx	r5
 800d644:	b007      	add	sp, #28
 800d646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d64a:	2e00      	cmp	r6, #0
 800d64c:	ddfa      	ble.n	800d644 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d64e:	6823      	ldr	r3, [r4, #0]
 800d650:	4639      	mov	r1, r7
 800d652:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d656:	4620      	mov	r0, r4
 800d658:	4798      	blx	r3
 800d65a:	6823      	ldr	r3, [r4, #0]
 800d65c:	4682      	mov	sl, r0
 800d65e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d662:	4639      	mov	r1, r7
 800d664:	4620      	mov	r0, r4
 800d666:	4798      	blx	r3
 800d668:	4582      	cmp	sl, r0
 800d66a:	bfde      	ittt	le
 800d66c:	4603      	movle	r3, r0
 800d66e:	4650      	movle	r0, sl
 800d670:	469a      	movle	sl, r3
 800d672:	ebaa 0300 	sub.w	r3, sl, r0
 800d676:	fb93 f3f6 	sdiv	r3, r3, r6
 800d67a:	2b64      	cmp	r3, #100	; 0x64
 800d67c:	dce2      	bgt.n	800d644 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d67e:	e9cd b503 	strd	fp, r5, [sp, #12]
 800d682:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d686:	6823      	ldr	r3, [r4, #0]
 800d688:	9000      	str	r0, [sp, #0]
 800d68a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800d68e:	4642      	mov	r2, r8
 800d690:	463b      	mov	r3, r7
 800d692:	4649      	mov	r1, r9
 800d694:	4620      	mov	r0, r4
 800d696:	47a8      	blx	r5
 800d698:	e7d4      	b.n	800d644 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d69a:	4798      	blx	r3
 800d69c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d6a0:	deff      	udf	#255	; 0xff
 800d6a2:	bf00      	nop
 800d6a4:	2001585c 	.word	0x2001585c
 800d6a8:	20015858 	.word	0x20015858
 800d6ac:	20015860 	.word	0x20015860

0800d6b0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800d6b0:	4770      	bx	lr

0800d6b2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800d6b2:	4770      	bx	lr

0800d6b4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d6b4:	b538      	push	{r3, r4, r5, lr}
 800d6b6:	680a      	ldr	r2, [r1, #0]
 800d6b8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d6bc:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800d6c0:	4608      	mov	r0, r1
 800d6c2:	4790      	blx	r2
 800d6c4:	4629      	mov	r1, r5
 800d6c6:	4602      	mov	r2, r0
 800d6c8:	4620      	mov	r0, r4
 800d6ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d6ce:	f7ff baa7 	b.w	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d6d2 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d6d2:	b538      	push	{r3, r4, r5, lr}
 800d6d4:	680a      	ldr	r2, [r1, #0]
 800d6d6:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d6da:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800d6de:	4608      	mov	r0, r1
 800d6e0:	4790      	blx	r2
 800d6e2:	4629      	mov	r1, r5
 800d6e4:	4602      	mov	r2, r0
 800d6e6:	4620      	mov	r0, r4
 800d6e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d6ec:	f7ff ba98 	b.w	800cc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d6f0 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800d6f0:	b510      	push	{r4, lr}
 800d6f2:	214c      	movs	r1, #76	; 0x4c
 800d6f4:	4604      	mov	r4, r0
 800d6f6:	f013 fa4f 	bl	8020b98 <_ZdlPvj>
 800d6fa:	4620      	mov	r0, r4
 800d6fc:	bd10      	pop	{r4, pc}

0800d6fe <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800d6fe:	b510      	push	{r4, lr}
 800d700:	214c      	movs	r1, #76	; 0x4c
 800d702:	4604      	mov	r4, r0
 800d704:	f013 fa48 	bl	8020b98 <_ZdlPvj>
 800d708:	4620      	mov	r0, r4
 800d70a:	bd10      	pop	{r4, pc}

0800d70c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d70c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d710:	b08d      	sub	sp, #52	; 0x34
 800d712:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d716:	9309      	str	r3, [sp, #36]	; 0x24
 800d718:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d71c:	930a      	str	r3, [sp, #40]	; 0x28
 800d71e:	4606      	mov	r6, r0
 800d720:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d724:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d728:	f1b9 0f00 	cmp.w	r9, #0
 800d72c:	d117      	bne.n	800d75e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d72e:	2f00      	cmp	r7, #0
 800d730:	dc7c      	bgt.n	800d82c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d732:	f1b8 0f00 	cmp.w	r8, #0
 800d736:	da01      	bge.n	800d73c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d738:	2f00      	cmp	r7, #0
 800d73a:	d17a      	bne.n	800d832 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d73c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d73e:	9318      	str	r3, [sp, #96]	; 0x60
 800d740:	2300      	movs	r3, #0
 800d742:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d746:	6832      	ldr	r2, [r6, #0]
 800d748:	9907      	ldr	r1, [sp, #28]
 800d74a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d74e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d752:	4630      	mov	r0, r6
 800d754:	46a4      	mov	ip, r4
 800d756:	b00d      	add	sp, #52	; 0x34
 800d758:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d75c:	4760      	bx	ip
 800d75e:	fb97 f4f9 	sdiv	r4, r7, r9
 800d762:	1e63      	subs	r3, r4, #1
 800d764:	9305      	str	r3, [sp, #20]
 800d766:	f1ba 0f00 	cmp.w	sl, #0
 800d76a:	d122      	bne.n	800d7b2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d76c:	fb98 faf9 	sdiv	sl, r8, r9
 800d770:	fb03 f509 	mul.w	r5, r3, r9
 800d774:	f10a 0a02 	add.w	sl, sl, #2
 800d778:	9b05      	ldr	r3, [sp, #20]
 800d77a:	459a      	cmp	sl, r3
 800d77c:	d059      	beq.n	800d832 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d77e:	42af      	cmp	r7, r5
 800d780:	dc5a      	bgt.n	800d838 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d782:	45a8      	cmp	r8, r5
 800d784:	da01      	bge.n	800d78a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d786:	42af      	cmp	r7, r5
 800d788:	db0e      	blt.n	800d7a8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d78a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d78c:	9302      	str	r3, [sp, #8]
 800d78e:	9905      	ldr	r1, [sp, #20]
 800d790:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d792:	6832      	ldr	r2, [r6, #0]
 800d794:	434b      	muls	r3, r1
 800d796:	e9cd 5300 	strd	r5, r3, [sp]
 800d79a:	9907      	ldr	r1, [sp, #28]
 800d79c:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d7a0:	4630      	mov	r0, r6
 800d7a2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d7a6:	47d8      	blx	fp
 800d7a8:	9b05      	ldr	r3, [sp, #20]
 800d7aa:	3301      	adds	r3, #1
 800d7ac:	9305      	str	r3, [sp, #20]
 800d7ae:	444d      	add	r5, r9
 800d7b0:	e7e2      	b.n	800d778 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d7b2:	fb97 f3fa 	sdiv	r3, r7, sl
 800d7b6:	3b01      	subs	r3, #1
 800d7b8:	9306      	str	r3, [sp, #24]
 800d7ba:	9a06      	ldr	r2, [sp, #24]
 800d7bc:	fb98 f3fa 	sdiv	r3, r8, sl
 800d7c0:	fb02 fb0a 	mul.w	fp, r2, sl
 800d7c4:	9a05      	ldr	r2, [sp, #20]
 800d7c6:	3302      	adds	r3, #2
 800d7c8:	fb02 f509 	mul.w	r5, r2, r9
 800d7cc:	930b      	str	r3, [sp, #44]	; 0x2c
 800d7ce:	45ab      	cmp	fp, r5
 800d7d0:	dd1d      	ble.n	800d80e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d7d2:	42af      	cmp	r7, r5
 800d7d4:	dc08      	bgt.n	800d7e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d7d6:	45a8      	cmp	r8, r5
 800d7d8:	da08      	bge.n	800d7ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d7da:	42af      	cmp	r7, r5
 800d7dc:	da06      	bge.n	800d7ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d7de:	9b05      	ldr	r3, [sp, #20]
 800d7e0:	3301      	adds	r3, #1
 800d7e2:	9305      	str	r3, [sp, #20]
 800d7e4:	444d      	add	r5, r9
 800d7e6:	e7f2      	b.n	800d7ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d7e8:	45a8      	cmp	r8, r5
 800d7ea:	dcf8      	bgt.n	800d7de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d7ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d7ee:	9302      	str	r3, [sp, #8]
 800d7f0:	9905      	ldr	r1, [sp, #20]
 800d7f2:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d7f4:	6832      	ldr	r2, [r6, #0]
 800d7f6:	434b      	muls	r3, r1
 800d7f8:	e9cd 5300 	strd	r5, r3, [sp]
 800d7fc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d800:	9907      	ldr	r1, [sp, #28]
 800d802:	461c      	mov	r4, r3
 800d804:	4630      	mov	r0, r6
 800d806:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d80a:	47a0      	blx	r4
 800d80c:	e7e7      	b.n	800d7de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d80e:	45ab      	cmp	fp, r5
 800d810:	db04      	blt.n	800d81c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d812:	9b05      	ldr	r3, [sp, #20]
 800d814:	3301      	adds	r3, #1
 800d816:	9305      	str	r3, [sp, #20]
 800d818:	444d      	add	r5, r9
 800d81a:	e7f8      	b.n	800d80e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d81c:	9b06      	ldr	r3, [sp, #24]
 800d81e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d820:	3301      	adds	r3, #1
 800d822:	4293      	cmp	r3, r2
 800d824:	9306      	str	r3, [sp, #24]
 800d826:	d004      	beq.n	800d832 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d828:	44d3      	add	fp, sl
 800d82a:	e7d0      	b.n	800d7ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d82c:	f1b8 0f00 	cmp.w	r8, #0
 800d830:	dd84      	ble.n	800d73c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d832:	b00d      	add	sp, #52	; 0x34
 800d834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d838:	45a8      	cmp	r8, r5
 800d83a:	dcb5      	bgt.n	800d7a8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d83c:	e7a5      	b.n	800d78a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d83e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d83e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d842:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d846:	b089      	sub	sp, #36	; 0x24
 800d848:	2c00      	cmp	r4, #0
 800d84a:	9007      	str	r0, [sp, #28]
 800d84c:	468a      	mov	sl, r1
 800d84e:	4693      	mov	fp, r2
 800d850:	461d      	mov	r5, r3
 800d852:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d856:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d85a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d85e:	dd03      	ble.n	800d868 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d860:	4564      	cmp	r4, ip
 800d862:	dd01      	ble.n	800d868 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d864:	42b4      	cmp	r4, r6
 800d866:	dd0e      	ble.n	800d886 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d868:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d86c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d870:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d874:	9807      	ldr	r0, [sp, #28]
 800d876:	462b      	mov	r3, r5
 800d878:	465a      	mov	r2, fp
 800d87a:	4651      	mov	r1, sl
 800d87c:	b009      	add	sp, #36	; 0x24
 800d87e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d882:	f7ff bf43 	b.w	800d70c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d886:	f104 3eff 	add.w	lr, r4, #4294967295
 800d88a:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d88e:	9702      	str	r7, [sp, #8]
 800d890:	e9cd ce00 	strd	ip, lr, [sp]
 800d894:	f7ff ff3a 	bl	800d70c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d898:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d89c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d8a0:	9412      	str	r4, [sp, #72]	; 0x48
 800d8a2:	e7e7      	b.n	800d874 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d8a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d8a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d8a8:	f1b3 0900 	subs.w	r9, r3, #0
 800d8ac:	460d      	mov	r5, r1
 800d8ae:	4690      	mov	r8, r2
 800d8b0:	9f08      	ldr	r7, [sp, #32]
 800d8b2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d8b6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d8b8:	da18      	bge.n	800d8ec <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d8ba:	2a01      	cmp	r2, #1
 800d8bc:	dd16      	ble.n	800d8ec <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d8be:	232d      	movs	r3, #45	; 0x2d
 800d8c0:	800b      	strh	r3, [r1, #0]
 800d8c2:	f1c9 0900 	rsb	r9, r9, #0
 800d8c6:	2001      	movs	r0, #1
 800d8c8:	2f00      	cmp	r7, #0
 800d8ca:	d111      	bne.n	800d8f0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d8cc:	eba8 0100 	sub.w	r1, r8, r0
 800d8d0:	2302      	movs	r3, #2
 800d8d2:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d8d6:	fb96 f3f3 	sdiv	r3, r6, r3
 800d8da:	4a24      	ldr	r2, [pc, #144]	; (800d96c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d8dc:	444b      	add	r3, r9
 800d8de:	b289      	uxth	r1, r1
 800d8e0:	fb93 f3f6 	sdiv	r3, r3, r6
 800d8e4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d8e8:	f006 bdf8 	b.w	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d8ec:	2000      	movs	r0, #0
 800d8ee:	e7eb      	b.n	800d8c8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d8f0:	dd39      	ble.n	800d966 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d8f2:	fb99 f4f6 	sdiv	r4, r9, r6
 800d8f6:	eba8 0100 	sub.w	r1, r8, r0
 800d8fa:	4623      	mov	r3, r4
 800d8fc:	4a1b      	ldr	r2, [pc, #108]	; (800d96c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d8fe:	b289      	uxth	r1, r1
 800d900:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d904:	f006 fdea 	bl	80144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d908:	4628      	mov	r0, r5
 800d90a:	f006 fa73 	bl	8013df4 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d90e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d912:	4580      	cmp	r8, r0
 800d914:	dd27      	ble.n	800d966 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d916:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d91a:	fb06 9314 	mls	r3, r6, r4, r9
 800d91e:	3001      	adds	r0, #1
 800d920:	2200      	movs	r2, #0
 800d922:	f04f 090a 	mov.w	r9, #10
 800d926:	f107 3aff 	add.w	sl, r7, #4294967295
 800d92a:	f04f 0e02 	mov.w	lr, #2
 800d92e:	fb96 fefe 	sdiv	lr, r6, lr
 800d932:	4580      	cmp	r8, r0
 800d934:	4684      	mov	ip, r0
 800d936:	dd13      	ble.n	800d960 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d938:	fb09 f303 	mul.w	r3, r9, r3
 800d93c:	4592      	cmp	sl, r2
 800d93e:	f102 0201 	add.w	r2, r2, #1
 800d942:	bf08      	it	eq
 800d944:	4473      	addeq	r3, lr
 800d946:	f100 0c01 	add.w	ip, r0, #1
 800d94a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d94e:	4297      	cmp	r7, r2
 800d950:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d954:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d958:	fb06 3314 	mls	r3, r6, r4, r3
 800d95c:	4660      	mov	r0, ip
 800d95e:	d1e8      	bne.n	800d932 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d960:	2300      	movs	r3, #0
 800d962:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d966:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d96a:	bf00      	nop
 800d96c:	08023a68 	.word	0x08023a68

0800d970 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d974:	4a6b      	ldr	r2, [pc, #428]	; (800db24 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d976:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d978:	8812      	ldrh	r2, [r2, #0]
 800d97a:	429a      	cmp	r2, r3
 800d97c:	b092      	sub	sp, #72	; 0x48
 800d97e:	4604      	mov	r4, r0
 800d980:	460e      	mov	r6, r1
 800d982:	d93a      	bls.n	800d9fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d984:	4a68      	ldr	r2, [pc, #416]	; (800db28 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d986:	6812      	ldr	r2, [r2, #0]
 800d988:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d98c:	4b67      	ldr	r3, [pc, #412]	; (800db2c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d98e:	681b      	ldr	r3, [r3, #0]
 800d990:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d994:	f1b8 0f00 	cmp.w	r8, #0
 800d998:	d02f      	beq.n	800d9fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d99a:	6803      	ldr	r3, [r0, #0]
 800d99c:	6945      	ldr	r5, [r0, #20]
 800d99e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d9a0:	2d00      	cmp	r5, #0
 800d9a2:	f000 80ba 	beq.w	800db1a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d9a6:	696f      	ldr	r7, [r5, #20]
 800d9a8:	4798      	blx	r3
 800d9aa:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d9ae:	fb13 f000 	smulbb	r0, r3, r0
 800d9b2:	b280      	uxth	r0, r0
 800d9b4:	1c43      	adds	r3, r0, #1
 800d9b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d9ba:	0a03      	lsrs	r3, r0, #8
 800d9bc:	d01d      	beq.n	800d9fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d9be:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d9c0:	6823      	ldr	r3, [r4, #0]
 800d9c2:	434e      	muls	r6, r1
 800d9c4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d9c8:	4639      	mov	r1, r7
 800d9ca:	4620      	mov	r0, r4
 800d9cc:	4798      	blx	r3
 800d9ce:	6823      	ldr	r3, [r4, #0]
 800d9d0:	4605      	mov	r5, r0
 800d9d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d9d6:	4639      	mov	r1, r7
 800d9d8:	4620      	mov	r0, r4
 800d9da:	4798      	blx	r3
 800d9dc:	2d00      	cmp	r5, #0
 800d9de:	dd0f      	ble.n	800da00 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d9e0:	fb96 f3f5 	sdiv	r3, r6, r5
 800d9e4:	436b      	muls	r3, r5
 800d9e6:	1b9a      	subs	r2, r3, r6
 800d9e8:	4253      	negs	r3, r2
 800d9ea:	4153      	adcs	r3, r2
 800d9ec:	2800      	cmp	r0, #0
 800d9ee:	dd09      	ble.n	800da04 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d9f0:	fb96 f2f0 	sdiv	r2, r6, r0
 800d9f4:	4350      	muls	r0, r2
 800d9f6:	42b0      	cmp	r0, r6
 800d9f8:	d10e      	bne.n	800da18 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d9fa:	b012      	add	sp, #72	; 0x48
 800d9fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800da00:	2300      	movs	r3, #0
 800da02:	e7f3      	b.n	800d9ec <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800da04:	d108      	bne.n	800da18 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800da06:	2d00      	cmp	r5, #0
 800da08:	f040 8084 	bne.w	800db14 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800da0c:	2e00      	cmp	r6, #0
 800da0e:	d055      	beq.n	800dabc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800da10:	2b00      	cmp	r3, #0
 800da12:	d0f2      	beq.n	800d9fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800da14:	462a      	mov	r2, r5
 800da16:	e007      	b.n	800da28 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800da18:	2b00      	cmp	r3, #0
 800da1a:	d0ee      	beq.n	800d9fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800da1c:	2d00      	cmp	r5, #0
 800da1e:	d0f9      	beq.n	800da14 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800da20:	fb96 f2f5 	sdiv	r2, r6, r5
 800da24:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800da26:	436a      	muls	r2, r5
 800da28:	683b      	ldr	r3, [r7, #0]
 800da2a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800db30 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800da2e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800da32:	4631      	mov	r1, r6
 800da34:	4638      	mov	r0, r7
 800da36:	4798      	blx	r3
 800da38:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800da3a:	9302      	str	r3, [sp, #8]
 800da3c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800da40:	9301      	str	r3, [sp, #4]
 800da42:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800da46:	9300      	str	r3, [sp, #0]
 800da48:	a908      	add	r1, sp, #32
 800da4a:	4603      	mov	r3, r0
 800da4c:	2214      	movs	r2, #20
 800da4e:	4620      	mov	r0, r4
 800da50:	f7ff ff28 	bl	800d8a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800da54:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800da58:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800da5a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800da5e:	f8d8 3000 	ldr.w	r3, [r8]
 800da62:	d12d      	bne.n	800dac0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800da64:	f8d9 0000 	ldr.w	r0, [r9]
 800da68:	699d      	ldr	r5, [r3, #24]
 800da6a:	f7f7 fbd3 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800da6e:	aa08      	add	r2, sp, #32
 800da70:	4601      	mov	r1, r0
 800da72:	4640      	mov	r0, r8
 800da74:	47a8      	blx	r5
 800da76:	4605      	mov	r5, r0
 800da78:	683b      	ldr	r3, [r7, #0]
 800da7a:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800da7e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800da82:	4631      	mov	r1, r6
 800da84:	4638      	mov	r0, r7
 800da86:	4798      	blx	r3
 800da88:	ab12      	add	r3, sp, #72	; 0x48
 800da8a:	f843 0d34 	str.w	r0, [r3, #-52]!
 800da8e:	4618      	mov	r0, r3
 800da90:	f7fe fea8 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800da94:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800da98:	f8ad 301e 	strh.w	r3, [sp, #30]
 800da9c:	4440      	add	r0, r8
 800da9e:	6823      	ldr	r3, [r4, #0]
 800daa0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800daa4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800daa8:	2200      	movs	r2, #0
 800daaa:	f8ad 0018 	strh.w	r0, [sp, #24]
 800daae:	f8ad 201a 	strh.w	r2, [sp, #26]
 800dab2:	691b      	ldr	r3, [r3, #16]
 800dab4:	a906      	add	r1, sp, #24
 800dab6:	4620      	mov	r0, r4
 800dab8:	4798      	blx	r3
 800daba:	e79e      	b.n	800d9fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800dabc:	4632      	mov	r2, r6
 800dabe:	e7b3      	b.n	800da28 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800dac0:	f8d9 0000 	ldr.w	r0, [r9]
 800dac4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800dac6:	f7f7 fba5 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800daca:	aa08      	add	r2, sp, #32
 800dacc:	4601      	mov	r1, r0
 800dace:	4640      	mov	r0, r8
 800dad0:	47a8      	blx	r5
 800dad2:	f8d8 3000 	ldr.w	r3, [r8]
 800dad6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dad8:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800dadc:	4605      	mov	r5, r0
 800dade:	f8d9 0000 	ldr.w	r0, [r9]
 800dae2:	f7f7 fb97 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800dae6:	aa08      	add	r2, sp, #32
 800dae8:	4601      	mov	r1, r0
 800daea:	4640      	mov	r0, r8
 800daec:	47d0      	blx	sl
 800daee:	f8d8 3000 	ldr.w	r3, [r8]
 800daf2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800daf4:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800daf8:	fb15 f500 	smulbb	r5, r5, r0
 800dafc:	f8d9 0000 	ldr.w	r0, [r9]
 800db00:	f7f7 fb88 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800db04:	aa08      	add	r2, sp, #32
 800db06:	4601      	mov	r1, r0
 800db08:	4640      	mov	r0, r8
 800db0a:	47d0      	blx	sl
 800db0c:	b2ad      	uxth	r5, r5
 800db0e:	4405      	add	r5, r0
 800db10:	b2ad      	uxth	r5, r5
 800db12:	e7b1      	b.n	800da78 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800db14:	2b00      	cmp	r3, #0
 800db16:	d183      	bne.n	800da20 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800db18:	e76f      	b.n	800d9fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800db1a:	4798      	blx	r3
 800db1c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800db20:	deff      	udf	#255	; 0xff
 800db22:	bf00      	nop
 800db24:	2001585c 	.word	0x2001585c
 800db28:	20015858 	.word	0x20015858
 800db2c:	20015860 	.word	0x20015860
 800db30:	20015864 	.word	0x20015864

0800db34 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800db34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db38:	461d      	mov	r5, r3
 800db3a:	b099      	sub	sp, #100	; 0x64
 800db3c:	681b      	ldr	r3, [r3, #0]
 800db3e:	4604      	mov	r4, r0
 800db40:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800db44:	4689      	mov	r9, r1
 800db46:	4628      	mov	r0, r5
 800db48:	9922      	ldr	r1, [sp, #136]	; 0x88
 800db4a:	4690      	mov	r8, r2
 800db4c:	4798      	blx	r3
 800db4e:	af18      	add	r7, sp, #96	; 0x60
 800db50:	f847 0d28 	str.w	r0, [r7, #-40]!
 800db54:	4638      	mov	r0, r7
 800db56:	f7fe fe45 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800db5a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800db5e:	1ac0      	subs	r0, r0, r3
 800db60:	b200      	sxth	r0, r0
 800db62:	2800      	cmp	r0, #0
 800db64:	f2c0 80b0 	blt.w	800dcc8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800db68:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800db6c:	441a      	add	r2, r3
 800db6e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800db72:	1a9b      	subs	r3, r3, r2
 800db74:	b21b      	sxth	r3, r3
 800db76:	4298      	cmp	r0, r3
 800db78:	f280 80a6 	bge.w	800dcc8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800db7c:	682b      	ldr	r3, [r5, #0]
 800db7e:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800db82:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800db86:	4628      	mov	r0, r5
 800db88:	4798      	blx	r3
 800db8a:	682b      	ldr	r3, [r5, #0]
 800db8c:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800db90:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800db94:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800db98:	4606      	mov	r6, r0
 800db9a:	4628      	mov	r0, r5
 800db9c:	4798      	blx	r3
 800db9e:	f8cd a000 	str.w	sl, [sp]
 800dba2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800dba6:	4633      	mov	r3, r6
 800dba8:	4639      	mov	r1, r7
 800dbaa:	2214      	movs	r2, #20
 800dbac:	4620      	mov	r0, r4
 800dbae:	f7ff fe79 	bl	800d8a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800dbb2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800dbb6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dbb8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800dd28 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800dbbc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dbc0:	f8d8 3000 	ldr.w	r3, [r8]
 800dbc4:	f040 8083 	bne.w	800dcce <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800dbc8:	f8da 0000 	ldr.w	r0, [sl]
 800dbcc:	699e      	ldr	r6, [r3, #24]
 800dbce:	f7f7 fb21 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800dbd2:	463a      	mov	r2, r7
 800dbd4:	4601      	mov	r1, r0
 800dbd6:	4640      	mov	r0, r8
 800dbd8:	47b0      	blx	r6
 800dbda:	4606      	mov	r6, r0
 800dbdc:	682b      	ldr	r3, [r5, #0]
 800dbde:	9922      	ldr	r1, [sp, #136]	; 0x88
 800dbe0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800dbe4:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800dbe8:	4628      	mov	r0, r5
 800dbea:	4798      	blx	r3
 800dbec:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800dbf0:	ad05      	add	r5, sp, #20
 800dbf2:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800dbf6:	4658      	mov	r0, fp
 800dbf8:	f7fe fdf4 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dbfc:	4450      	add	r0, sl
 800dbfe:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dc02:	f8ad 6018 	strh.w	r6, [sp, #24]
 800dc06:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800dc0a:	f04f 0a00 	mov.w	sl, #0
 800dc0e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dc12:	f8ad 0014 	strh.w	r0, [sp, #20]
 800dc16:	f8ad a016 	strh.w	sl, [sp, #22]
 800dc1a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800dc1e:	ae07      	add	r6, sp, #28
 800dc20:	e886 0003 	stmia.w	r6, {r0, r1}
 800dc24:	4649      	mov	r1, r9
 800dc26:	4630      	mov	r0, r6
 800dc28:	f7fd fb08 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800dc2c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800dc30:	4553      	cmp	r3, sl
 800dc32:	dd49      	ble.n	800dcc8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800dc34:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800dc38:	4553      	cmp	r3, sl
 800dc3a:	dd45      	ble.n	800dcc8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800dc3c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800dc40:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800dc44:	1a9b      	subs	r3, r3, r2
 800dc46:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dc4a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800dc4e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800dc52:	1a9b      	subs	r3, r3, r2
 800dc54:	f8ad 301e 	strh.w	r3, [sp, #30]
 800dc58:	6823      	ldr	r3, [r4, #0]
 800dc5a:	4620      	mov	r0, r4
 800dc5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dc5e:	4629      	mov	r1, r5
 800dc60:	4798      	blx	r3
 800dc62:	4b30      	ldr	r3, [pc, #192]	; (800dd24 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800dc64:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800dc68:	681b      	ldr	r3, [r3, #0]
 800dc6a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800dc6e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dc70:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800dc74:	785b      	ldrb	r3, [r3, #1]
 800dc76:	920b      	str	r2, [sp, #44]	; 0x2c
 800dc78:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800dc7c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800dc80:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800dc84:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800dc88:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800dc8c:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800dc90:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800dc94:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800dc98:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800dc9c:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800dca0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800dca4:	f7f4 ff4e 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800dca8:	4b1f      	ldr	r3, [pc, #124]	; (800dd28 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800dcaa:	4604      	mov	r4, r0
 800dcac:	4649      	mov	r1, r9
 800dcae:	6818      	ldr	r0, [r3, #0]
 800dcb0:	f7f7 fab0 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800dcb4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800dcb8:	e9cd b000 	strd	fp, r0, [sp]
 800dcbc:	4633      	mov	r3, r6
 800dcbe:	e895 0006 	ldmia.w	r5, {r1, r2}
 800dcc2:	4620      	mov	r0, r4
 800dcc4:	f7f7 fa58 	bl	8005178 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800dcc8:	b019      	add	sp, #100	; 0x64
 800dcca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dcce:	f8da 0000 	ldr.w	r0, [sl]
 800dcd2:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800dcd4:	f7f7 fa9e 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800dcd8:	463a      	mov	r2, r7
 800dcda:	4601      	mov	r1, r0
 800dcdc:	4640      	mov	r0, r8
 800dcde:	47b0      	blx	r6
 800dce0:	f8d8 3000 	ldr.w	r3, [r8]
 800dce4:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dce6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800dcea:	4606      	mov	r6, r0
 800dcec:	f8da 0000 	ldr.w	r0, [sl]
 800dcf0:	f7f7 fa90 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800dcf4:	463a      	mov	r2, r7
 800dcf6:	4601      	mov	r1, r0
 800dcf8:	4640      	mov	r0, r8
 800dcfa:	47d8      	blx	fp
 800dcfc:	f8d8 3000 	ldr.w	r3, [r8]
 800dd00:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dd02:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800dd06:	fb16 f600 	smulbb	r6, r6, r0
 800dd0a:	f8da 0000 	ldr.w	r0, [sl]
 800dd0e:	f7f7 fa81 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800dd12:	463a      	mov	r2, r7
 800dd14:	4601      	mov	r1, r0
 800dd16:	4640      	mov	r0, r8
 800dd18:	47d8      	blx	fp
 800dd1a:	b2b6      	uxth	r6, r6
 800dd1c:	4406      	add	r6, r0
 800dd1e:	b2b6      	uxth	r6, r6
 800dd20:	e75c      	b.n	800dbdc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800dd22:	bf00      	nop
 800dd24:	20015858 	.word	0x20015858
 800dd28:	20015864 	.word	0x20015864

0800dd2c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800dd2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd30:	4698      	mov	r8, r3
 800dd32:	b099      	sub	sp, #100	; 0x64
 800dd34:	681b      	ldr	r3, [r3, #0]
 800dd36:	4604      	mov	r4, r0
 800dd38:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800dd3c:	4689      	mov	r9, r1
 800dd3e:	4640      	mov	r0, r8
 800dd40:	9922      	ldr	r1, [sp, #136]	; 0x88
 800dd42:	4617      	mov	r7, r2
 800dd44:	4798      	blx	r3
 800dd46:	ae18      	add	r6, sp, #96	; 0x60
 800dd48:	f846 0d28 	str.w	r0, [r6, #-40]!
 800dd4c:	4630      	mov	r0, r6
 800dd4e:	f7fe fd49 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dd52:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800dd56:	1ac0      	subs	r0, r0, r3
 800dd58:	b200      	sxth	r0, r0
 800dd5a:	2800      	cmp	r0, #0
 800dd5c:	f2c0 80c0 	blt.w	800dee0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800dd60:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800dd64:	441a      	add	r2, r3
 800dd66:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800dd6a:	1a9b      	subs	r3, r3, r2
 800dd6c:	b21b      	sxth	r3, r3
 800dd6e:	4298      	cmp	r0, r3
 800dd70:	f280 80b6 	bge.w	800dee0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800dd74:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dd76:	9302      	str	r3, [sp, #8]
 800dd78:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800dd7c:	9301      	str	r3, [sp, #4]
 800dd7e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800dd82:	9300      	str	r3, [sp, #0]
 800dd84:	4631      	mov	r1, r6
 800dd86:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800dd88:	f8df a174 	ldr.w	sl, [pc, #372]	; 800df00 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800dd8c:	2214      	movs	r2, #20
 800dd8e:	4620      	mov	r0, r4
 800dd90:	f7ff fd88 	bl	800d8a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800dd94:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800dd98:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dd9a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dd9e:	683b      	ldr	r3, [r7, #0]
 800dda0:	f040 80a1 	bne.w	800dee6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800dda4:	f8da 0000 	ldr.w	r0, [sl]
 800dda8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800ddaa:	f7f7 fa33 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800ddae:	4632      	mov	r2, r6
 800ddb0:	4601      	mov	r1, r0
 800ddb2:	4638      	mov	r0, r7
 800ddb4:	47a8      	blx	r5
 800ddb6:	683b      	ldr	r3, [r7, #0]
 800ddb8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ddba:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800ddbe:	4605      	mov	r5, r0
 800ddc0:	f8da 0000 	ldr.w	r0, [sl]
 800ddc4:	f7f7 fa26 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800ddc8:	4632      	mov	r2, r6
 800ddca:	4601      	mov	r1, r0
 800ddcc:	4638      	mov	r0, r7
 800ddce:	47d8      	blx	fp
 800ddd0:	683b      	ldr	r3, [r7, #0]
 800ddd2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ddd4:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800ddd8:	fb15 f500 	smulbb	r5, r5, r0
 800dddc:	f8da 0000 	ldr.w	r0, [sl]
 800dde0:	f7f7 fa18 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800dde4:	4632      	mov	r2, r6
 800dde6:	4601      	mov	r1, r0
 800dde8:	4638      	mov	r0, r7
 800ddea:	47d8      	blx	fp
 800ddec:	b2ad      	uxth	r5, r5
 800ddee:	4405      	add	r5, r0
 800ddf0:	b2ad      	uxth	r5, r5
 800ddf2:	f8d8 3000 	ldr.w	r3, [r8]
 800ddf6:	9922      	ldr	r1, [sp, #136]	; 0x88
 800ddf8:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800ddfc:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800de00:	4640      	mov	r0, r8
 800de02:	4798      	blx	r3
 800de04:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800de08:	f04f 0800 	mov.w	r8, #0
 800de0c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800de10:	4658      	mov	r0, fp
 800de12:	f7fe fce7 	bl	800c7e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800de16:	4450      	add	r0, sl
 800de18:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800de1c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800de20:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800de24:	f8ad 501a 	strh.w	r5, [sp, #26]
 800de28:	f8ad 8014 	strh.w	r8, [sp, #20]
 800de2c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800de30:	ad05      	add	r5, sp, #20
 800de32:	e895 0003 	ldmia.w	r5, {r0, r1}
 800de36:	f10d 0a1c 	add.w	sl, sp, #28
 800de3a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800de3e:	4649      	mov	r1, r9
 800de40:	4650      	mov	r0, sl
 800de42:	f7fd f9fb 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800de46:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800de4a:	4543      	cmp	r3, r8
 800de4c:	dd48      	ble.n	800dee0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800de4e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800de52:	4543      	cmp	r3, r8
 800de54:	dd44      	ble.n	800dee0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800de56:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800de5a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800de5e:	1a9b      	subs	r3, r3, r2
 800de60:	f8ad 301c 	strh.w	r3, [sp, #28]
 800de64:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800de68:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800de6c:	1a9b      	subs	r3, r3, r2
 800de6e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800de72:	6823      	ldr	r3, [r4, #0]
 800de74:	4620      	mov	r0, r4
 800de76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800de78:	4629      	mov	r1, r5
 800de7a:	4798      	blx	r3
 800de7c:	4b1f      	ldr	r3, [pc, #124]	; (800defc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800de7e:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800de82:	681b      	ldr	r3, [r3, #0]
 800de84:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800de88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800de8a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800de8e:	785b      	ldrb	r3, [r3, #1]
 800de90:	920b      	str	r2, [sp, #44]	; 0x2c
 800de92:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800de96:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800de9a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800de9e:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800dea2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800dea6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800deaa:	9709      	str	r7, [sp, #36]	; 0x24
 800deac:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800deb0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800deb4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800deb8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800debc:	f7f4 fe42 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800dec0:	4b0f      	ldr	r3, [pc, #60]	; (800df00 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800dec2:	4604      	mov	r4, r0
 800dec4:	4649      	mov	r1, r9
 800dec6:	6818      	ldr	r0, [r3, #0]
 800dec8:	f7f7 f9a4 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800decc:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800ded0:	e9cd b000 	strd	fp, r0, [sp]
 800ded4:	4653      	mov	r3, sl
 800ded6:	e895 0006 	ldmia.w	r5, {r1, r2}
 800deda:	4620      	mov	r0, r4
 800dedc:	f7f7 f94c 	bl	8005178 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800dee0:	b019      	add	sp, #100	; 0x64
 800dee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dee6:	f8da 0000 	ldr.w	r0, [sl]
 800deea:	699d      	ldr	r5, [r3, #24]
 800deec:	f7f7 f992 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800def0:	4632      	mov	r2, r6
 800def2:	4601      	mov	r1, r0
 800def4:	4638      	mov	r0, r7
 800def6:	47a8      	blx	r5
 800def8:	4605      	mov	r5, r0
 800defa:	e77a      	b.n	800ddf2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800defc:	20015858 	.word	0x20015858
 800df00:	20015864 	.word	0x20015864

0800df04 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800df04:	b510      	push	{r4, lr}
 800df06:	4604      	mov	r4, r0
 800df08:	f7fe fb05 	bl	800c516 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800df0c:	2300      	movs	r3, #0
 800df0e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800df12:	bd10      	pop	{r4, pc}

0800df14 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800df14:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800df18:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800df1c:	429a      	cmp	r2, r3
 800df1e:	d101      	bne.n	800df24 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800df20:	f7fe bd38 	b.w	800c994 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800df24:	4770      	bx	lr

0800df26 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800df26:	b538      	push	{r3, r4, r5, lr}
 800df28:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800df2c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800df30:	42a5      	cmp	r5, r4
 800df32:	da04      	bge.n	800df3e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800df34:	6803      	ldr	r3, [r0, #0]
 800df36:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800df3a:	4798      	blx	r3
 800df3c:	bd38      	pop	{r3, r4, r5, pc}
 800df3e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800df42:	4408      	add	r0, r1
 800df44:	1b00      	subs	r0, r0, r4
 800df46:	e7f9      	b.n	800df3c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800df48 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800df48:	b570      	push	{r4, r5, r6, lr}
 800df4a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800df4e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800df52:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800df56:	4604      	mov	r4, r0
 800df58:	1c6b      	adds	r3, r5, #1
 800df5a:	b21b      	sxth	r3, r3
 800df5c:	42ae      	cmp	r6, r5
 800df5e:	bf08      	it	eq
 800df60:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800df64:	fb93 f0f2 	sdiv	r0, r3, r2
 800df68:	fb02 3010 	mls	r0, r2, r0, r3
 800df6c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800df70:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800df74:	4296      	cmp	r6, r2
 800df76:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800df7a:	d108      	bne.n	800df8e <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800df7c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800df80:	f004 fa85 	bl	801248e <_ZNK8touchgfx8Drawable10invalidateEv>
 800df84:	4620      	mov	r0, r4
 800df86:	f7fe fd05 	bl	800c994 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800df8a:	4628      	mov	r0, r5
 800df8c:	bd70      	pop	{r4, r5, r6, pc}
 800df8e:	4629      	mov	r1, r5
 800df90:	4620      	mov	r0, r4
 800df92:	f7fe fcd7 	bl	800c944 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800df96:	e7f8      	b.n	800df8a <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800df98 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800df98:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800df9c:	4770      	bx	lr

0800df9e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800df9e:	b510      	push	{r4, lr}
 800dfa0:	4604      	mov	r4, r0
 800dfa2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800dfa4:	b150      	cbz	r0, 800dfbc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dfa6:	6803      	ldr	r3, [r0, #0]
 800dfa8:	68db      	ldr	r3, [r3, #12]
 800dfaa:	4798      	blx	r3
 800dfac:	b130      	cbz	r0, 800dfbc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dfae:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800dfb0:	6803      	ldr	r3, [r0, #0]
 800dfb2:	4621      	mov	r1, r4
 800dfb4:	689b      	ldr	r3, [r3, #8]
 800dfb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dfba:	4718      	bx	r3
 800dfbc:	bd10      	pop	{r4, pc}

0800dfbe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800dfbe:	b570      	push	{r4, r5, r6, lr}
 800dfc0:	790b      	ldrb	r3, [r1, #4]
 800dfc2:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800dfc6:	2b00      	cmp	r3, #0
 800dfc8:	bf0c      	ite	eq
 800dfca:	2301      	moveq	r3, #1
 800dfcc:	2300      	movne	r3, #0
 800dfce:	4604      	mov	r4, r0
 800dfd0:	460e      	mov	r6, r1
 800dfd2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800dfd6:	d109      	bne.n	800dfec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800dfd8:	b14d      	cbz	r5, 800dfee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800dfda:	7933      	ldrb	r3, [r6, #4]
 800dfdc:	2b01      	cmp	r3, #1
 800dfde:	d10c      	bne.n	800dffa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dfe0:	6823      	ldr	r3, [r4, #0]
 800dfe2:	4620      	mov	r0, r4
 800dfe4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800dfe6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dfea:	4718      	bx	r3
 800dfec:	b12d      	cbz	r5, 800dffa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dfee:	6823      	ldr	r3, [r4, #0]
 800dff0:	4620      	mov	r0, r4
 800dff2:	695b      	ldr	r3, [r3, #20]
 800dff4:	4798      	blx	r3
 800dff6:	2d00      	cmp	r5, #0
 800dff8:	d1ef      	bne.n	800dfda <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800dffa:	bd70      	pop	{r4, r5, r6, pc}

0800dffc <_ZN8touchgfx12ToggleButtonD1Ev>:
 800dffc:	4770      	bx	lr

0800dffe <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800dffe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e002:	b133      	cbz	r3, 800e012 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800e004:	790b      	ldrb	r3, [r1, #4]
 800e006:	2b01      	cmp	r3, #1
 800e008:	bf01      	itttt	eq
 800e00a:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800e00c:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800e00e:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800e010:	8603      	strheq	r3, [r0, #48]	; 0x30
 800e012:	f7ff bfd4 	b.w	800dfbe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800e016 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800e016:	8813      	ldrh	r3, [r2, #0]
 800e018:	8683      	strh	r3, [r0, #52]	; 0x34
 800e01a:	f000 bbd0 	b.w	800e7be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800e01e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800e01e:	b510      	push	{r4, lr}
 800e020:	2138      	movs	r1, #56	; 0x38
 800e022:	4604      	mov	r4, r0
 800e024:	f012 fdb8 	bl	8020b98 <_ZdlPvj>
 800e028:	4620      	mov	r0, r4
 800e02a:	bd10      	pop	{r4, pc}

0800e02c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800e02c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800e030:	b12a      	cbz	r2, 800e03e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e032:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e036:	b112      	cbz	r2, 800e03e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e038:	6803      	ldr	r3, [r0, #0]
 800e03a:	695b      	ldr	r3, [r3, #20]
 800e03c:	4718      	bx	r3
 800e03e:	4770      	bx	lr

0800e040 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800e040:	2000      	movs	r0, #0
 800e042:	4770      	bx	lr

0800e044 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800e044:	4b07      	ldr	r3, [pc, #28]	; (800e064 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800e046:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e048:	881b      	ldrh	r3, [r3, #0]
 800e04a:	4293      	cmp	r3, r2
 800e04c:	bf81      	itttt	hi
 800e04e:	4b06      	ldrhi	r3, [pc, #24]	; (800e068 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800e050:	681b      	ldrhi	r3, [r3, #0]
 800e052:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800e056:	7858      	ldrbhi	r0, [r3, #1]
 800e058:	bf8c      	ite	hi
 800e05a:	f000 0003 	andhi.w	r0, r0, #3
 800e05e:	2000      	movls	r0, #0
 800e060:	4770      	bx	lr
 800e062:	bf00      	nop
 800e064:	2001585c 	.word	0x2001585c
 800e068:	20015858 	.word	0x20015858

0800e06c <_ZN8touchgfx8TextAreaD1Ev>:
 800e06c:	4770      	bx	lr
	...

0800e070 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800e070:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e074:	4b10      	ldr	r3, [pc, #64]	; (800e0b8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800e076:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e078:	881b      	ldrh	r3, [r3, #0]
 800e07a:	428b      	cmp	r3, r1
 800e07c:	4604      	mov	r4, r0
 800e07e:	d918      	bls.n	800e0b2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800e080:	6803      	ldr	r3, [r0, #0]
 800e082:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800e084:	4b0d      	ldr	r3, [pc, #52]	; (800e0bc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800e086:	6818      	ldr	r0, [r3, #0]
 800e088:	f7f7 f8c4 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800e08c:	6823      	ldr	r3, [r4, #0]
 800e08e:	4606      	mov	r6, r0
 800e090:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e092:	4620      	mov	r0, r4
 800e094:	4798      	blx	r3
 800e096:	6823      	ldr	r3, [r4, #0]
 800e098:	4607      	mov	r7, r0
 800e09a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e09e:	4620      	mov	r0, r4
 800e0a0:	4798      	blx	r3
 800e0a2:	463a      	mov	r2, r7
 800e0a4:	4603      	mov	r3, r0
 800e0a6:	4631      	mov	r1, r6
 800e0a8:	4620      	mov	r0, r4
 800e0aa:	46ac      	mov	ip, r5
 800e0ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e0b0:	4760      	bx	ip
 800e0b2:	2000      	movs	r0, #0
 800e0b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e0b8:	2001585c 	.word	0x2001585c
 800e0bc:	20015864 	.word	0x20015864

0800e0c0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800e0c0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e0c4:	4b17      	ldr	r3, [pc, #92]	; (800e124 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800e0c6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e0c8:	881b      	ldrh	r3, [r3, #0]
 800e0ca:	428b      	cmp	r3, r1
 800e0cc:	4604      	mov	r4, r0
 800e0ce:	d926      	bls.n	800e11e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800e0d0:	4b15      	ldr	r3, [pc, #84]	; (800e128 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800e0d2:	681b      	ldr	r3, [r3, #0]
 800e0d4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800e0d8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800e0dc:	4b13      	ldr	r3, [pc, #76]	; (800e12c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e0de:	7855      	ldrb	r5, [r2, #1]
 800e0e0:	681b      	ldr	r3, [r3, #0]
 800e0e2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800e0e6:	6833      	ldr	r3, [r6, #0]
 800e0e8:	69df      	ldr	r7, [r3, #28]
 800e0ea:	4b11      	ldr	r3, [pc, #68]	; (800e130 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800e0ec:	6818      	ldr	r0, [r3, #0]
 800e0ee:	f7f7 f891 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800e0f2:	6823      	ldr	r3, [r4, #0]
 800e0f4:	4680      	mov	r8, r0
 800e0f6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e0f8:	4620      	mov	r0, r4
 800e0fa:	4798      	blx	r3
 800e0fc:	6823      	ldr	r3, [r4, #0]
 800e0fe:	4681      	mov	r9, r0
 800e100:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e104:	4620      	mov	r0, r4
 800e106:	4798      	blx	r3
 800e108:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800e10c:	9000      	str	r0, [sp, #0]
 800e10e:	464b      	mov	r3, r9
 800e110:	4642      	mov	r2, r8
 800e112:	4629      	mov	r1, r5
 800e114:	4630      	mov	r0, r6
 800e116:	47b8      	blx	r7
 800e118:	b003      	add	sp, #12
 800e11a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e11e:	2000      	movs	r0, #0
 800e120:	e7fa      	b.n	800e118 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800e122:	bf00      	nop
 800e124:	2001585c 	.word	0x2001585c
 800e128:	20015858 	.word	0x20015858
 800e12c:	20015860 	.word	0x20015860
 800e130:	20015864 	.word	0x20015864

0800e134 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800e134:	b40e      	push	{r1, r2, r3}
 800e136:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e13a:	4b2f      	ldr	r3, [pc, #188]	; (800e1f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800e13c:	881a      	ldrh	r2, [r3, #0]
 800e13e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800e140:	429a      	cmp	r2, r3
 800e142:	b09d      	sub	sp, #116	; 0x74
 800e144:	4604      	mov	r4, r0
 800e146:	d954      	bls.n	800e1f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800e148:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800e1fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800e14c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800e200 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800e150:	aa26      	add	r2, sp, #152	; 0x98
 800e152:	9202      	str	r2, [sp, #8]
 800e154:	f8d9 2000 	ldr.w	r2, [r9]
 800e158:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e15c:	f8d8 3000 	ldr.w	r3, [r8]
 800e160:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e164:	682b      	ldr	r3, [r5, #0]
 800e166:	4628      	mov	r0, r5
 800e168:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e16a:	4798      	blx	r3
 800e16c:	b207      	sxth	r7, r0
 800e16e:	4606      	mov	r6, r0
 800e170:	a803      	add	r0, sp, #12
 800e172:	f004 fedc 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 800e176:	682b      	ldr	r3, [r5, #0]
 800e178:	4628      	mov	r0, r5
 800e17a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e17c:	4798      	blx	r3
 800e17e:	682b      	ldr	r3, [r5, #0]
 800e180:	4682      	mov	sl, r0
 800e182:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e184:	4628      	mov	r0, r5
 800e186:	4798      	blx	r3
 800e188:	4653      	mov	r3, sl
 800e18a:	9000      	str	r0, [sp, #0]
 800e18c:	9a02      	ldr	r2, [sp, #8]
 800e18e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800e190:	a803      	add	r0, sp, #12
 800e192:	f004 ff27 	bl	8012fe4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e196:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e198:	f8d9 3000 	ldr.w	r3, [r9]
 800e19c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800e1a0:	8925      	ldrh	r5, [r4, #8]
 800e1a2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800e1a6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800e1aa:	eba5 050c 	sub.w	r5, r5, ip
 800e1ae:	784a      	ldrb	r2, [r1, #1]
 800e1b0:	f8d8 3000 	ldr.w	r3, [r8]
 800e1b4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800e1b8:	b22d      	sxth	r5, r5
 800e1ba:	9500      	str	r5, [sp, #0]
 800e1bc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e1c0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e1c4:	a803      	add	r0, sp, #12
 800e1c6:	f002 fd21 	bl	8010c0c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800e1ca:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800e1ce:	18b9      	adds	r1, r7, r2
 800e1d0:	2900      	cmp	r1, #0
 800e1d2:	b203      	sxth	r3, r0
 800e1d4:	dd0b      	ble.n	800e1ee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800e1d6:	3b01      	subs	r3, #1
 800e1d8:	fb13 f302 	smulbb	r3, r3, r2
 800e1dc:	fb16 3300 	smlabb	r3, r6, r0, r3
 800e1e0:	b21f      	sxth	r7, r3
 800e1e2:	4638      	mov	r0, r7
 800e1e4:	b01d      	add	sp, #116	; 0x74
 800e1e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e1ea:	b003      	add	sp, #12
 800e1ec:	4770      	bx	lr
 800e1ee:	2b00      	cmp	r3, #0
 800e1f0:	dcf7      	bgt.n	800e1e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e1f2:	2700      	movs	r7, #0
 800e1f4:	e7f5      	b.n	800e1e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e1f6:	bf00      	nop
 800e1f8:	2001585c 	.word	0x2001585c
 800e1fc:	20015858 	.word	0x20015858
 800e200:	20015860 	.word	0x20015860

0800e204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800e204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e208:	4bbb      	ldr	r3, [pc, #748]	; (800e4f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800e20a:	460c      	mov	r4, r1
 800e20c:	881b      	ldrh	r3, [r3, #0]
 800e20e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800e210:	428b      	cmp	r3, r1
 800e212:	b0a9      	sub	sp, #164	; 0xa4
 800e214:	4681      	mov	r9, r0
 800e216:	d809      	bhi.n	800e22c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800e218:	2300      	movs	r3, #0
 800e21a:	f04f 32ff 	mov.w	r2, #4294967295
 800e21e:	e9c0 3200 	strd	r3, r2, [r0]
 800e222:	6083      	str	r3, [r0, #8]
 800e224:	4648      	mov	r0, r9
 800e226:	b029      	add	sp, #164	; 0xa4
 800e228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e22c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800e500 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800e230:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800e504 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800e234:	f8db 3000 	ldr.w	r3, [fp]
 800e238:	f8d8 0000 	ldr.w	r0, [r8]
 800e23c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e240:	4bae      	ldr	r3, [pc, #696]	; (800e4fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800e242:	681b      	ldr	r3, [r3, #0]
 800e244:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e248:	f7f6 ffe4 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800e24c:	682b      	ldr	r3, [r5, #0]
 800e24e:	4607      	mov	r7, r0
 800e250:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e252:	4628      	mov	r0, r5
 800e254:	4798      	blx	r3
 800e256:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800e258:	f8cd 800c 	str.w	r8, [sp, #12]
 800e25c:	4430      	add	r0, r6
 800e25e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800e262:	b283      	uxth	r3, r0
 800e264:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800e268:	9302      	str	r3, [sp, #8]
 800e26a:	4650      	mov	r0, sl
 800e26c:	2e00      	cmp	r6, #0
 800e26e:	f040 8091 	bne.w	800e394 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e272:	f004 fe5c 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 800e276:	682b      	ldr	r3, [r5, #0]
 800e278:	4628      	mov	r0, r5
 800e27a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e27c:	4798      	blx	r3
 800e27e:	682b      	ldr	r3, [r5, #0]
 800e280:	9005      	str	r0, [sp, #20]
 800e282:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e284:	4628      	mov	r0, r5
 800e286:	4798      	blx	r3
 800e288:	6823      	ldr	r3, [r4, #0]
 800e28a:	4680      	mov	r8, r0
 800e28c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e28e:	4620      	mov	r0, r4
 800e290:	4798      	blx	r3
 800e292:	6822      	ldr	r2, [r4, #0]
 800e294:	9004      	str	r0, [sp, #16]
 800e296:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800e29a:	4620      	mov	r0, r4
 800e29c:	4790      	blx	r2
 800e29e:	9905      	ldr	r1, [sp, #20]
 800e2a0:	9b04      	ldr	r3, [sp, #16]
 800e2a2:	9001      	str	r0, [sp, #4]
 800e2a4:	9300      	str	r3, [sp, #0]
 800e2a6:	460a      	mov	r2, r1
 800e2a8:	4643      	mov	r3, r8
 800e2aa:	4639      	mov	r1, r7
 800e2ac:	4650      	mov	r0, sl
 800e2ae:	f004 feae 	bl	801300e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e2b2:	4637      	mov	r7, r6
 800e2b4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e2b6:	f8db 3000 	ldr.w	r3, [fp]
 800e2ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e2be:	4629      	mov	r1, r5
 800e2c0:	785b      	ldrb	r3, [r3, #1]
 800e2c2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e2c6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e2ca:	4650      	mov	r0, sl
 800e2cc:	f002 f9f0 	bl	80106b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e2d0:	4287      	cmp	r7, r0
 800e2d2:	bfb8      	it	lt
 800e2d4:	b207      	sxthlt	r7, r0
 800e2d6:	3601      	adds	r6, #1
 800e2d8:	4650      	mov	r0, sl
 800e2da:	b2b6      	uxth	r6, r6
 800e2dc:	f004 fe4e 	bl	8012f7c <_ZN8touchgfx12TextProvider11endOfStringEv>
 800e2e0:	2800      	cmp	r0, #0
 800e2e2:	d0e7      	beq.n	800e2b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800e2e4:	9b02      	ldr	r3, [sp, #8]
 800e2e6:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800e2ea:	fb13 f606 	smulbb	r6, r3, r6
 800e2ee:	eba6 0608 	sub.w	r6, r6, r8
 800e2f2:	b2b6      	uxth	r6, r6
 800e2f4:	fa0f f886 	sxth.w	r8, r6
 800e2f8:	f1b8 0f00 	cmp.w	r8, #0
 800e2fc:	dd06      	ble.n	800e30c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800e2fe:	682b      	ldr	r3, [r5, #0]
 800e300:	4628      	mov	r0, r5
 800e302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e304:	4798      	blx	r3
 800e306:	4430      	add	r0, r6
 800e308:	fa0f f880 	sxth.w	r8, r0
 800e30c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e310:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e314:	6823      	ldr	r3, [r4, #0]
 800e316:	bf08      	it	eq
 800e318:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800e31c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e31e:	bf18      	it	ne
 800e320:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800e324:	4620      	mov	r0, r4
 800e326:	4798      	blx	r3
 800e328:	2801      	cmp	r0, #1
 800e32a:	b2ba      	uxth	r2, r7
 800e32c:	f000 80d1 	beq.w	800e4d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800e330:	2802      	cmp	r0, #2
 800e332:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e336:	f000 80d2 	beq.w	800e4de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800e33a:	b21e      	sxth	r6, r3
 800e33c:	7a29      	ldrb	r1, [r5, #8]
 800e33e:	7a6d      	ldrb	r5, [r5, #9]
 800e340:	1a76      	subs	r6, r6, r1
 800e342:	4429      	add	r1, r5
 800e344:	440a      	add	r2, r1
 800e346:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800e34a:	b2b3      	uxth	r3, r6
 800e34c:	b292      	uxth	r2, r2
 800e34e:	2902      	cmp	r1, #2
 800e350:	b21f      	sxth	r7, r3
 800e352:	b216      	sxth	r6, r2
 800e354:	f000 80c6 	beq.w	800e4e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800e358:	2903      	cmp	r1, #3
 800e35a:	f000 80d5 	beq.w	800e508 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800e35e:	2901      	cmp	r1, #1
 800e360:	f040 80db 	bne.w	800e51a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800e364:	8923      	ldrh	r3, [r4, #8]
 800e366:	4632      	mov	r2, r6
 800e368:	eba3 0308 	sub.w	r3, r3, r8
 800e36c:	4646      	mov	r6, r8
 800e36e:	463d      	mov	r5, r7
 800e370:	4690      	mov	r8, r2
 800e372:	b21f      	sxth	r7, r3
 800e374:	9b03      	ldr	r3, [sp, #12]
 800e376:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e378:	6818      	ldr	r0, [r3, #0]
 800e37a:	f7f6 ff4b 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800e37e:	f8a9 7000 	strh.w	r7, [r9]
 800e382:	f8a9 5002 	strh.w	r5, [r9, #2]
 800e386:	f8a9 6004 	strh.w	r6, [r9, #4]
 800e38a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800e38e:	f8c9 0008 	str.w	r0, [r9, #8]
 800e392:	e747      	b.n	800e224 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800e394:	f004 fdcb 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 800e398:	682b      	ldr	r3, [r5, #0]
 800e39a:	4628      	mov	r0, r5
 800e39c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e39e:	4798      	blx	r3
 800e3a0:	682b      	ldr	r3, [r5, #0]
 800e3a2:	4606      	mov	r6, r0
 800e3a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e3a6:	4628      	mov	r0, r5
 800e3a8:	4798      	blx	r3
 800e3aa:	6823      	ldr	r3, [r4, #0]
 800e3ac:	4680      	mov	r8, r0
 800e3ae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e3b0:	4620      	mov	r0, r4
 800e3b2:	4798      	blx	r3
 800e3b4:	6822      	ldr	r2, [r4, #0]
 800e3b6:	9004      	str	r0, [sp, #16]
 800e3b8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800e3bc:	4620      	mov	r0, r4
 800e3be:	4790      	blx	r2
 800e3c0:	9b04      	ldr	r3, [sp, #16]
 800e3c2:	9001      	str	r0, [sp, #4]
 800e3c4:	4632      	mov	r2, r6
 800e3c6:	9300      	str	r3, [sp, #0]
 800e3c8:	4639      	mov	r1, r7
 800e3ca:	4643      	mov	r3, r8
 800e3cc:	4650      	mov	r0, sl
 800e3ce:	f004 fe1e 	bl	801300e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e3d2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e3d6:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800e3da:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e3dc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800e3e0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e3e4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e3e8:	bf0a      	itet	eq
 800e3ea:	4642      	moveq	r2, r8
 800e3ec:	461a      	movne	r2, r3
 800e3ee:	4698      	moveq	r8, r3
 800e3f0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e3f4:	1ad2      	subs	r2, r2, r3
 800e3f6:	f8db 3000 	ldr.w	r3, [fp]
 800e3fa:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e3fe:	7859      	ldrb	r1, [r3, #1]
 800e400:	f8cd a020 	str.w	sl, [sp, #32]
 800e404:	2300      	movs	r3, #0
 800e406:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e40a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e40e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800e412:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800e416:	950a      	str	r5, [sp, #40]	; 0x28
 800e418:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e41c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e420:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800e424:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800e428:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800e42c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e430:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e434:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800e438:	b350      	cbz	r0, 800e490 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e43a:	682b      	ldr	r3, [r5, #0]
 800e43c:	4628      	mov	r0, r5
 800e43e:	695b      	ldr	r3, [r3, #20]
 800e440:	4798      	blx	r3
 800e442:	4607      	mov	r7, r0
 800e444:	b320      	cbz	r0, 800e490 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e446:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e448:	6803      	ldr	r3, [r0, #0]
 800e44a:	4639      	mov	r1, r7
 800e44c:	68db      	ldr	r3, [r3, #12]
 800e44e:	4798      	blx	r3
 800e450:	4606      	mov	r6, r0
 800e452:	b1e8      	cbz	r0, 800e490 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e454:	7b43      	ldrb	r3, [r0, #13]
 800e456:	7a82      	ldrb	r2, [r0, #10]
 800e458:	005b      	lsls	r3, r3, #1
 800e45a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e45e:	4313      	orrs	r3, r2
 800e460:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e464:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800e468:	2b04      	cmp	r3, #4
 800e46a:	d111      	bne.n	800e490 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e46c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e46e:	6803      	ldr	r3, [r0, #0]
 800e470:	4632      	mov	r2, r6
 800e472:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e474:	4639      	mov	r1, r7
 800e476:	4798      	blx	r3
 800e478:	7b73      	ldrb	r3, [r6, #13]
 800e47a:	005b      	lsls	r3, r3, #1
 800e47c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e480:	7ab3      	ldrb	r3, [r6, #10]
 800e482:	4313      	orrs	r3, r2
 800e484:	4418      	add	r0, r3
 800e486:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800e48a:	4418      	add	r0, r3
 800e48c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800e490:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800e494:	2600      	movs	r6, #0
 800e496:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800e49a:	4637      	mov	r7, r6
 800e49c:	45c3      	cmp	fp, r8
 800e49e:	bfd4      	ite	le
 800e4a0:	2100      	movle	r1, #0
 800e4a2:	2101      	movgt	r1, #1
 800e4a4:	a807      	add	r0, sp, #28
 800e4a6:	f002 fae2 	bl	8010a6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e4aa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800e4ae:	429f      	cmp	r7, r3
 800e4b0:	bfb8      	it	lt
 800e4b2:	b21f      	sxthlt	r7, r3
 800e4b4:	9b02      	ldr	r3, [sp, #8]
 800e4b6:	eba8 0803 	sub.w	r8, r8, r3
 800e4ba:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800e4be:	3601      	adds	r6, #1
 800e4c0:	b2b6      	uxth	r6, r6
 800e4c2:	fa0f f888 	sxth.w	r8, r8
 800e4c6:	2b00      	cmp	r3, #0
 800e4c8:	f43f af0c 	beq.w	800e2e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e4cc:	45c2      	cmp	sl, r8
 800e4ce:	dbe5      	blt.n	800e49c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800e4d0:	e708      	b.n	800e2e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e4d2:	1bf6      	subs	r6, r6, r7
 800e4d4:	2702      	movs	r7, #2
 800e4d6:	fb96 f6f7 	sdiv	r6, r6, r7
 800e4da:	b236      	sxth	r6, r6
 800e4dc:	e72e      	b.n	800e33c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800e4de:	4413      	add	r3, r2
 800e4e0:	1af6      	subs	r6, r6, r3
 800e4e2:	e7fa      	b.n	800e4da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800e4e4:	8925      	ldrh	r5, [r4, #8]
 800e4e6:	1aad      	subs	r5, r5, r2
 800e4e8:	1aed      	subs	r5, r5, r3
 800e4ea:	b22f      	sxth	r7, r5
 800e4ec:	8965      	ldrh	r5, [r4, #10]
 800e4ee:	eba5 0508 	sub.w	r5, r5, r8
 800e4f2:	b22d      	sxth	r5, r5
 800e4f4:	e73e      	b.n	800e374 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e4f6:	bf00      	nop
 800e4f8:	2001585c 	.word	0x2001585c
 800e4fc:	20015860 	.word	0x20015860
 800e500:	20015858 	.word	0x20015858
 800e504:	20015864 	.word	0x20015864
 800e508:	8965      	ldrh	r5, [r4, #10]
 800e50a:	1aad      	subs	r5, r5, r2
 800e50c:	1aed      	subs	r5, r5, r3
 800e50e:	4633      	mov	r3, r6
 800e510:	b22d      	sxth	r5, r5
 800e512:	4646      	mov	r6, r8
 800e514:	2700      	movs	r7, #0
 800e516:	4698      	mov	r8, r3
 800e518:	e72c      	b.n	800e374 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e51a:	2500      	movs	r5, #0
 800e51c:	e72a      	b.n	800e374 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e51e:	bf00      	nop

0800e520 <_ZN8touchgfx8TextAreaD0Ev>:
 800e520:	b510      	push	{r4, lr}
 800e522:	2148      	movs	r1, #72	; 0x48
 800e524:	4604      	mov	r4, r0
 800e526:	f012 fb37 	bl	8020b98 <_ZdlPvj>
 800e52a:	4620      	mov	r0, r4
 800e52c:	bd10      	pop	{r4, pc}
	...

0800e530 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e530:	b513      	push	{r0, r1, r4, lr}
 800e532:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e536:	4604      	mov	r4, r0
 800e538:	b1fb      	cbz	r3, 800e57a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e53a:	4b16      	ldr	r3, [pc, #88]	; (800e594 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e53c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e53e:	881b      	ldrh	r3, [r3, #0]
 800e540:	428b      	cmp	r3, r1
 800e542:	d91a      	bls.n	800e57a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e544:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e548:	2b00      	cmp	r3, #0
 800e54a:	dd16      	ble.n	800e57a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e54c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e550:	2b00      	cmp	r3, #0
 800e552:	dd12      	ble.n	800e57a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e554:	4b10      	ldr	r3, [pc, #64]	; (800e598 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e556:	6818      	ldr	r0, [r3, #0]
 800e558:	f7f6 fe5c 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800e55c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e560:	6822      	ldr	r2, [r4, #0]
 800e562:	2b00      	cmp	r3, #0
 800e564:	db06      	blt.n	800e574 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e566:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e56a:	2b00      	cmp	r3, #0
 800e56c:	db02      	blt.n	800e574 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e56e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e570:	4298      	cmp	r0, r3
 800e572:	d004      	beq.n	800e57e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e574:	6953      	ldr	r3, [r2, #20]
 800e576:	4620      	mov	r0, r4
 800e578:	4798      	blx	r3
 800e57a:	b002      	add	sp, #8
 800e57c:	bd10      	pop	{r4, pc}
 800e57e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e582:	c903      	ldmia	r1, {r0, r1}
 800e584:	466b      	mov	r3, sp
 800e586:	e883 0003 	stmia.w	r3, {r0, r1}
 800e58a:	6912      	ldr	r2, [r2, #16]
 800e58c:	4619      	mov	r1, r3
 800e58e:	4620      	mov	r0, r4
 800e590:	4790      	blx	r2
 800e592:	e7f2      	b.n	800e57a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e594:	2001585c 	.word	0x2001585c
 800e598:	20015864 	.word	0x20015864

0800e59c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e59c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5a0:	4b44      	ldr	r3, [pc, #272]	; (800e6b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e5a2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e5a4:	881b      	ldrh	r3, [r3, #0]
 800e5a6:	4293      	cmp	r3, r2
 800e5a8:	b08e      	sub	sp, #56	; 0x38
 800e5aa:	4604      	mov	r4, r0
 800e5ac:	d97e      	bls.n	800e6ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e5ae:	6808      	ldr	r0, [r1, #0]
 800e5b0:	4d41      	ldr	r5, [pc, #260]	; (800e6b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e5b2:	6849      	ldr	r1, [r1, #4]
 800e5b4:	ab05      	add	r3, sp, #20
 800e5b6:	c303      	stmia	r3!, {r0, r1}
 800e5b8:	4611      	mov	r1, r2
 800e5ba:	6828      	ldr	r0, [r5, #0]
 800e5bc:	f7f6 fe2a 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800e5c0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e5c4:	2b00      	cmp	r3, #0
 800e5c6:	db11      	blt.n	800e5ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e5c8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e5cc:	2b00      	cmp	r3, #0
 800e5ce:	db0d      	blt.n	800e5ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e5d0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e5d2:	4298      	cmp	r0, r3
 800e5d4:	d10a      	bne.n	800e5ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e5d6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e5da:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e5de:	ab09      	add	r3, sp, #36	; 0x24
 800e5e0:	e883 0003 	stmia.w	r3, {r0, r1}
 800e5e4:	4619      	mov	r1, r3
 800e5e6:	a805      	add	r0, sp, #20
 800e5e8:	f7fc fe28 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800e5ec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e5f0:	2b00      	cmp	r3, #0
 800e5f2:	dd5b      	ble.n	800e6ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e5f4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e5f8:	2b00      	cmp	r3, #0
 800e5fa:	dd57      	ble.n	800e6ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e5fc:	4f2f      	ldr	r7, [pc, #188]	; (800e6bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e5fe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e600:	683b      	ldr	r3, [r7, #0]
 800e602:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e606:	4b2e      	ldr	r3, [pc, #184]	; (800e6c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e608:	681b      	ldr	r3, [r3, #0]
 800e60a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e60e:	2e00      	cmp	r6, #0
 800e610:	d04c      	beq.n	800e6ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e612:	6823      	ldr	r3, [r4, #0]
 800e614:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e618:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e61a:	4620      	mov	r0, r4
 800e61c:	4798      	blx	r3
 800e61e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e620:	683b      	ldr	r3, [r7, #0]
 800e622:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e626:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e62a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e62e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e630:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e634:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e638:	785b      	ldrb	r3, [r3, #1]
 800e63a:	9609      	str	r6, [sp, #36]	; 0x24
 800e63c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e640:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e644:	4b1f      	ldr	r3, [pc, #124]	; (800e6c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e646:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e64a:	681b      	ldr	r3, [r3, #0]
 800e64c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e650:	910b      	str	r1, [sp, #44]	; 0x2c
 800e652:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e656:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e65a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e65e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e662:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e666:	b10a      	cbz	r2, 800e66c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e668:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e66a:	b906      	cbnz	r6, 800e66e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e66c:	689e      	ldr	r6, [r3, #8]
 800e66e:	af07      	add	r7, sp, #28
 800e670:	4621      	mov	r1, r4
 800e672:	4638      	mov	r0, r7
 800e674:	f003 ffa6 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e678:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e67a:	6828      	ldr	r0, [r5, #0]
 800e67c:	f7f6 fdca 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800e680:	6823      	ldr	r3, [r4, #0]
 800e682:	4605      	mov	r5, r0
 800e684:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e686:	4620      	mov	r0, r4
 800e688:	4798      	blx	r3
 800e68a:	6823      	ldr	r3, [r4, #0]
 800e68c:	4680      	mov	r8, r0
 800e68e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e692:	4620      	mov	r0, r4
 800e694:	4798      	blx	r3
 800e696:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e69a:	ab09      	add	r3, sp, #36	; 0x24
 800e69c:	9300      	str	r3, [sp, #0]
 800e69e:	9501      	str	r5, [sp, #4]
 800e6a0:	ab05      	add	r3, sp, #20
 800e6a2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e6a6:	4630      	mov	r0, r6
 800e6a8:	f7f6 fd66 	bl	8005178 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e6ac:	b00e      	add	sp, #56	; 0x38
 800e6ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e6b2:	bf00      	nop
 800e6b4:	2001585c 	.word	0x2001585c
 800e6b8:	20015864 	.word	0x20015864
 800e6bc:	20015858 	.word	0x20015858
 800e6c0:	20015860 	.word	0x20015860
 800e6c4:	20015800 	.word	0x20015800

0800e6c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e6c8:	b538      	push	{r3, r4, r5, lr}
 800e6ca:	4b0e      	ldr	r3, [pc, #56]	; (800e704 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e6cc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e6ce:	881b      	ldrh	r3, [r3, #0]
 800e6d0:	429a      	cmp	r2, r3
 800e6d2:	4604      	mov	r4, r0
 800e6d4:	d214      	bcs.n	800e700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e6d6:	6803      	ldr	r3, [r0, #0]
 800e6d8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e6da:	4798      	blx	r3
 800e6dc:	6823      	ldr	r3, [r4, #0]
 800e6de:	4605      	mov	r5, r0
 800e6e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e6e2:	4620      	mov	r0, r4
 800e6e4:	4798      	blx	r3
 800e6e6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e6ea:	b22d      	sxth	r5, r5
 800e6ec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e6f0:	4601      	mov	r1, r0
 800e6f2:	bf06      	itte	eq
 800e6f4:	4602      	moveq	r2, r0
 800e6f6:	4629      	moveq	r1, r5
 800e6f8:	462a      	movne	r2, r5
 800e6fa:	4620      	mov	r0, r4
 800e6fc:	f7fc fb45 	bl	800ad8a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e700:	bd38      	pop	{r3, r4, r5, pc}
 800e702:	bf00      	nop
 800e704:	2001585c 	.word	0x2001585c

0800e708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e708:	b530      	push	{r4, r5, lr}
 800e70a:	888b      	ldrh	r3, [r1, #4]
 800e70c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e70e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e712:	b085      	sub	sp, #20
 800e714:	4604      	mov	r4, r0
 800e716:	b923      	cbnz	r3, 800e722 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e718:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e71c:	b90b      	cbnz	r3, 800e722 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e71e:	f7ff ffd3 	bl	800e6c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e722:	6823      	ldr	r3, [r4, #0]
 800e724:	466d      	mov	r5, sp
 800e726:	4621      	mov	r1, r4
 800e728:	4628      	mov	r0, r5
 800e72a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e72e:	4798      	blx	r3
 800e730:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e734:	343c      	adds	r4, #60	; 0x3c
 800e736:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e73a:	b005      	add	sp, #20
 800e73c:	bd30      	pop	{r4, r5, pc}

0800e73e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e73e:	2300      	movs	r3, #0
 800e740:	8083      	strh	r3, [r0, #4]
 800e742:	80c3      	strh	r3, [r0, #6]
 800e744:	8003      	strh	r3, [r0, #0]
 800e746:	8043      	strh	r3, [r0, #2]
 800e748:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e74c:	2bff      	cmp	r3, #255	; 0xff
 800e74e:	bf01      	itttt	eq
 800e750:	890b      	ldrheq	r3, [r1, #8]
 800e752:	8083      	strheq	r3, [r0, #4]
 800e754:	894b      	ldrheq	r3, [r1, #10]
 800e756:	80c3      	strheq	r3, [r0, #6]
 800e758:	4770      	bx	lr
	...

0800e75c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e75c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e75e:	4604      	mov	r4, r0
 800e760:	6808      	ldr	r0, [r1, #0]
 800e762:	6849      	ldr	r1, [r1, #4]
 800e764:	466b      	mov	r3, sp
 800e766:	c303      	stmia	r3!, {r0, r1}
 800e768:	6823      	ldr	r3, [r4, #0]
 800e76a:	4669      	mov	r1, sp
 800e76c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e76e:	4620      	mov	r0, r4
 800e770:	4798      	blx	r3
 800e772:	4b08      	ldr	r3, [pc, #32]	; (800e794 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e774:	681b      	ldr	r3, [r3, #0]
 800e776:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e77a:	b10a      	cbz	r2, 800e780 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e77c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e77e:	b900      	cbnz	r0, 800e782 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e780:	6898      	ldr	r0, [r3, #8]
 800e782:	6803      	ldr	r3, [r0, #0]
 800e784:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e786:	6a1d      	ldr	r5, [r3, #32]
 800e788:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e78c:	4669      	mov	r1, sp
 800e78e:	47a8      	blx	r5
 800e790:	b003      	add	sp, #12
 800e792:	bd30      	pop	{r4, r5, pc}
 800e794:	20015800 	.word	0x20015800

0800e798 <_ZN8touchgfx3BoxD1Ev>:
 800e798:	4770      	bx	lr

0800e79a <_ZN8touchgfx3BoxD0Ev>:
 800e79a:	b510      	push	{r4, lr}
 800e79c:	212c      	movs	r1, #44	; 0x2c
 800e79e:	4604      	mov	r4, r0
 800e7a0:	f012 f9fa 	bl	8020b98 <_ZdlPvj>
 800e7a4:	4620      	mov	r0, r4
 800e7a6:	bd10      	pop	{r4, pc}

0800e7a8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e7a8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e7ac:	b12a      	cbz	r2, 800e7ba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e7ae:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e7b2:	b112      	cbz	r2, 800e7ba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e7b4:	6803      	ldr	r3, [r0, #0]
 800e7b6:	695b      	ldr	r3, [r3, #20]
 800e7b8:	4718      	bx	r3
 800e7ba:	4770      	bx	lr

0800e7bc <_ZN8touchgfx6ButtonD1Ev>:
 800e7bc:	4770      	bx	lr

0800e7be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e7be:	b570      	push	{r4, r5, r6, lr}
 800e7c0:	880b      	ldrh	r3, [r1, #0]
 800e7c2:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e7c4:	4605      	mov	r5, r0
 800e7c6:	8813      	ldrh	r3, [r2, #0]
 800e7c8:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e7cc:	4604      	mov	r4, r0
 800e7ce:	4628      	mov	r0, r5
 800e7d0:	f006 f8f6 	bl	80149c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e7d4:	4606      	mov	r6, r0
 800e7d6:	4628      	mov	r0, r5
 800e7d8:	f006 f926 	bl	8014a28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e7dc:	6823      	ldr	r3, [r4, #0]
 800e7de:	4605      	mov	r5, r0
 800e7e0:	4631      	mov	r1, r6
 800e7e2:	4620      	mov	r0, r4
 800e7e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e7e6:	4798      	blx	r3
 800e7e8:	6823      	ldr	r3, [r4, #0]
 800e7ea:	4629      	mov	r1, r5
 800e7ec:	4620      	mov	r0, r4
 800e7ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e7f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e7f4:	4718      	bx	r3

0800e7f6 <_ZN8touchgfx6ButtonD0Ev>:
 800e7f6:	b510      	push	{r4, lr}
 800e7f8:	2134      	movs	r1, #52	; 0x34
 800e7fa:	4604      	mov	r4, r0
 800e7fc:	f012 f9cc 	bl	8020b98 <_ZdlPvj>
 800e800:	4620      	mov	r0, r4
 800e802:	bd10      	pop	{r4, pc}

0800e804 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e804:	b510      	push	{r4, lr}
 800e806:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e80a:	2bff      	cmp	r3, #255	; 0xff
 800e80c:	4604      	mov	r4, r0
 800e80e:	d006      	beq.n	800e81e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e810:	2300      	movs	r3, #0
 800e812:	8003      	strh	r3, [r0, #0]
 800e814:	8043      	strh	r3, [r0, #2]
 800e816:	8083      	strh	r3, [r0, #4]
 800e818:	80c3      	strh	r3, [r0, #6]
 800e81a:	4620      	mov	r0, r4
 800e81c:	bd10      	pop	{r4, pc}
 800e81e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e822:	b11b      	cbz	r3, 800e82c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e824:	3130      	adds	r1, #48	; 0x30
 800e826:	f006 f933 	bl	8014a90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e82a:	e7f6      	b.n	800e81a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e82c:	312e      	adds	r1, #46	; 0x2e
 800e82e:	e7fa      	b.n	800e826 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e830 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e834:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e838:	b08a      	sub	sp, #40	; 0x28
 800e83a:	4604      	mov	r4, r0
 800e83c:	4688      	mov	r8, r1
 800e83e:	2b00      	cmp	r3, #0
 800e840:	d066      	beq.n	800e910 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e842:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e844:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e848:	a805      	add	r0, sp, #20
 800e84a:	f006 f8b9 	bl	80149c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e84e:	4607      	mov	r7, r0
 800e850:	a805      	add	r0, sp, #20
 800e852:	f006 f8e9 	bl	8014a28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e856:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e85a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e85e:	4432      	add	r2, r6
 800e860:	b292      	uxth	r2, r2
 800e862:	2300      	movs	r3, #0
 800e864:	fa0f fc82 	sxth.w	ip, r2
 800e868:	459c      	cmp	ip, r3
 800e86a:	9306      	str	r3, [sp, #24]
 800e86c:	dd52      	ble.n	800e914 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e86e:	42b7      	cmp	r7, r6
 800e870:	dd50      	ble.n	800e914 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e872:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e876:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e87a:	442b      	add	r3, r5
 800e87c:	b29b      	uxth	r3, r3
 800e87e:	b219      	sxth	r1, r3
 800e880:	2900      	cmp	r1, #0
 800e882:	dd47      	ble.n	800e914 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e884:	42a8      	cmp	r0, r5
 800e886:	dd45      	ble.n	800e914 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e888:	4567      	cmp	r7, ip
 800e88a:	bfb8      	it	lt
 800e88c:	b2ba      	uxthlt	r2, r7
 800e88e:	4288      	cmp	r0, r1
 800e890:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e894:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e898:	bfb8      	it	lt
 800e89a:	b283      	uxthlt	r3, r0
 800e89c:	1b92      	subs	r2, r2, r6
 800e89e:	1b5b      	subs	r3, r3, r5
 800e8a0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e8a4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e8a8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e8ac:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e8b0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e8b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e8b8:	429a      	cmp	r2, r3
 800e8ba:	d026      	beq.n	800e90a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e8bc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e8c0:	2b00      	cmp	r3, #0
 800e8c2:	dd22      	ble.n	800e90a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e8c4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e8c8:	2b00      	cmp	r3, #0
 800e8ca:	dd1e      	ble.n	800e90a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e8cc:	2300      	movs	r3, #0
 800e8ce:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e8d2:	6823      	ldr	r3, [r4, #0]
 800e8d4:	a908      	add	r1, sp, #32
 800e8d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8d8:	4620      	mov	r0, r4
 800e8da:	4798      	blx	r3
 800e8dc:	4b0f      	ldr	r3, [pc, #60]	; (800e91c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e8de:	681b      	ldr	r3, [r3, #0]
 800e8e0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e8e4:	b10a      	cbz	r2, 800e8ea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e8e6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e8e8:	b900      	cbnz	r0, 800e8ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e8ea:	6898      	ldr	r0, [r3, #8]
 800e8ec:	6801      	ldr	r1, [r0, #0]
 800e8ee:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e8f2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e8f6:	2501      	movs	r5, #1
 800e8f8:	9502      	str	r5, [sp, #8]
 800e8fa:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e8fe:	9401      	str	r4, [sp, #4]
 800e900:	ac06      	add	r4, sp, #24
 800e902:	9400      	str	r4, [sp, #0]
 800e904:	688c      	ldr	r4, [r1, #8]
 800e906:	a905      	add	r1, sp, #20
 800e908:	47a0      	blx	r4
 800e90a:	b00a      	add	sp, #40	; 0x28
 800e90c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e910:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e912:	e797      	b.n	800e844 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e914:	2300      	movs	r3, #0
 800e916:	9307      	str	r3, [sp, #28]
 800e918:	e7ca      	b.n	800e8b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e91a:	bf00      	nop
 800e91c:	20015800 	.word	0x20015800

0800e920 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e920:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e924:	4b2f      	ldr	r3, [pc, #188]	; (800e9e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e926:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e928:	881b      	ldrh	r3, [r3, #0]
 800e92a:	4293      	cmp	r3, r2
 800e92c:	b08d      	sub	sp, #52	; 0x34
 800e92e:	4604      	mov	r4, r0
 800e930:	460f      	mov	r7, r1
 800e932:	d954      	bls.n	800e9de <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e934:	4b2c      	ldr	r3, [pc, #176]	; (800e9e8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e936:	6819      	ldr	r1, [r3, #0]
 800e938:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e93c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e940:	4a2a      	ldr	r2, [pc, #168]	; (800e9ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e942:	6812      	ldr	r2, [r2, #0]
 800e944:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e948:	2900      	cmp	r1, #0
 800e94a:	d048      	beq.n	800e9de <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e94c:	785a      	ldrb	r2, [r3, #1]
 800e94e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e952:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e956:	4b26      	ldr	r3, [pc, #152]	; (800e9f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e958:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e95c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e960:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e964:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e966:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e96a:	9107      	str	r1, [sp, #28]
 800e96c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e970:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e974:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e978:	681a      	ldr	r2, [r3, #0]
 800e97a:	f88d 8020 	strb.w	r8, [sp, #32]
 800e97e:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e982:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e986:	9609      	str	r6, [sp, #36]	; 0x24
 800e988:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e98c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e990:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e994:	b10b      	cbz	r3, 800e99a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e996:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e998:	b905      	cbnz	r5, 800e99c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e99a:	6895      	ldr	r5, [r2, #8]
 800e99c:	ae05      	add	r6, sp, #20
 800e99e:	4621      	mov	r1, r4
 800e9a0:	4630      	mov	r0, r6
 800e9a2:	f003 fe0f 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e9a6:	4b13      	ldr	r3, [pc, #76]	; (800e9f4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e9a8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e9aa:	6818      	ldr	r0, [r3, #0]
 800e9ac:	f7f6 fc32 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800e9b0:	6823      	ldr	r3, [r4, #0]
 800e9b2:	4680      	mov	r8, r0
 800e9b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e9b6:	4620      	mov	r0, r4
 800e9b8:	4798      	blx	r3
 800e9ba:	6823      	ldr	r3, [r4, #0]
 800e9bc:	4681      	mov	r9, r0
 800e9be:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e9c2:	4620      	mov	r0, r4
 800e9c4:	4798      	blx	r3
 800e9c6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e9ca:	ab07      	add	r3, sp, #28
 800e9cc:	9300      	str	r3, [sp, #0]
 800e9ce:	f8cd 8004 	str.w	r8, [sp, #4]
 800e9d2:	463b      	mov	r3, r7
 800e9d4:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e9d8:	4628      	mov	r0, r5
 800e9da:	f7f6 fbcd 	bl	8005178 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e9de:	b00d      	add	sp, #52	; 0x34
 800e9e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e9e4:	2001585c 	.word	0x2001585c
 800e9e8:	20015858 	.word	0x20015858
 800e9ec:	20015860 	.word	0x20015860
 800e9f0:	20015800 	.word	0x20015800
 800e9f4:	20015864 	.word	0x20015864

0800e9f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e9f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9fc:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800ea00:	b0a0      	sub	sp, #128	; 0x80
 800ea02:	4604      	mov	r4, r0
 800ea04:	b193      	cbz	r3, 800ea2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800ea06:	4b30      	ldr	r3, [pc, #192]	; (800eac8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800ea08:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ea0a:	881b      	ldrh	r3, [r3, #0]
 800ea0c:	428b      	cmp	r3, r1
 800ea0e:	d90d      	bls.n	800ea2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800ea10:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800ea14:	2b00      	cmp	r3, #0
 800ea16:	dd09      	ble.n	800ea2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800ea18:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ea1c:	2b00      	cmp	r3, #0
 800ea1e:	dd05      	ble.n	800ea2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800ea20:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800ea24:	b12b      	cbz	r3, 800ea32 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800ea26:	6803      	ldr	r3, [r0, #0]
 800ea28:	695b      	ldr	r3, [r3, #20]
 800ea2a:	4798      	blx	r3
 800ea2c:	b020      	add	sp, #128	; 0x80
 800ea2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea32:	4b26      	ldr	r3, [pc, #152]	; (800eacc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800ea34:	681b      	ldr	r3, [r3, #0]
 800ea36:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800ea3a:	4b25      	ldr	r3, [pc, #148]	; (800ead0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800ea3c:	681b      	ldr	r3, [r3, #0]
 800ea3e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800ea42:	4b24      	ldr	r3, [pc, #144]	; (800ead4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800ea44:	6818      	ldr	r0, [r3, #0]
 800ea46:	f7f6 fbe5 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800ea4a:	4606      	mov	r6, r0
 800ea4c:	a807      	add	r0, sp, #28
 800ea4e:	f004 fa6e 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 800ea52:	682b      	ldr	r3, [r5, #0]
 800ea54:	4628      	mov	r0, r5
 800ea56:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ea58:	4798      	blx	r3
 800ea5a:	682b      	ldr	r3, [r5, #0]
 800ea5c:	4607      	mov	r7, r0
 800ea5e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ea60:	4628      	mov	r0, r5
 800ea62:	4798      	blx	r3
 800ea64:	6823      	ldr	r3, [r4, #0]
 800ea66:	4605      	mov	r5, r0
 800ea68:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ea6a:	4620      	mov	r0, r4
 800ea6c:	4798      	blx	r3
 800ea6e:	6823      	ldr	r3, [r4, #0]
 800ea70:	4680      	mov	r8, r0
 800ea72:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ea76:	4620      	mov	r0, r4
 800ea78:	4798      	blx	r3
 800ea7a:	462b      	mov	r3, r5
 800ea7c:	e9cd 8000 	strd	r8, r0, [sp]
 800ea80:	463a      	mov	r2, r7
 800ea82:	a807      	add	r0, sp, #28
 800ea84:	4631      	mov	r1, r6
 800ea86:	f004 fac2 	bl	801300e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800ea8a:	a807      	add	r0, sp, #28
 800ea8c:	f004 fe7a 	bl	8013784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ea90:	280a      	cmp	r0, #10
 800ea92:	d103      	bne.n	800ea9c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800ea94:	6823      	ldr	r3, [r4, #0]
 800ea96:	4620      	mov	r0, r4
 800ea98:	695b      	ldr	r3, [r3, #20]
 800ea9a:	e7c6      	b.n	800ea2a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800ea9c:	a807      	add	r0, sp, #28
 800ea9e:	f004 fe71 	bl	8013784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eaa2:	2800      	cmp	r0, #0
 800eaa4:	d1f4      	bne.n	800ea90 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800eaa6:	ad04      	add	r5, sp, #16
 800eaa8:	4621      	mov	r1, r4
 800eaaa:	4628      	mov	r0, r5
 800eaac:	f7ff fbaa 	bl	800e204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800eab0:	e895 0003 	ldmia.w	r5, {r0, r1}
 800eab4:	6822      	ldr	r2, [r4, #0]
 800eab6:	ab02      	add	r3, sp, #8
 800eab8:	e883 0003 	stmia.w	r3, {r0, r1}
 800eabc:	6912      	ldr	r2, [r2, #16]
 800eabe:	4619      	mov	r1, r3
 800eac0:	4620      	mov	r0, r4
 800eac2:	4790      	blx	r2
 800eac4:	e7b2      	b.n	800ea2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800eac6:	bf00      	nop
 800eac8:	2001585c 	.word	0x2001585c
 800eacc:	20015858 	.word	0x20015858
 800ead0:	20015860 	.word	0x20015860
 800ead4:	20015864 	.word	0x20015864

0800ead8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800ead8:	4770      	bx	lr

0800eada <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800eada:	b510      	push	{r4, lr}
 800eadc:	2134      	movs	r1, #52	; 0x34
 800eade:	4604      	mov	r4, r0
 800eae0:	f012 f85a 	bl	8020b98 <_ZdlPvj>
 800eae4:	4620      	mov	r0, r4
 800eae6:	bd10      	pop	{r4, pc}

0800eae8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800eae8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eaec:	4604      	mov	r4, r0
 800eaee:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800eaf0:	8962      	ldrh	r2, [r4, #10]
 800eaf2:	b218      	sxth	r0, r3
 800eaf4:	460e      	mov	r6, r1
 800eaf6:	005b      	lsls	r3, r3, #1
 800eaf8:	8921      	ldrh	r1, [r4, #8]
 800eafa:	b29b      	uxth	r3, r3
 800eafc:	1ac9      	subs	r1, r1, r3
 800eafe:	b08e      	sub	sp, #56	; 0x38
 800eb00:	b209      	sxth	r1, r1
 800eb02:	1ad3      	subs	r3, r2, r3
 800eb04:	b21b      	sxth	r3, r3
 800eb06:	2900      	cmp	r1, #0
 800eb08:	f8ad 0000 	strh.w	r0, [sp]
 800eb0c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800eb10:	f8ad 1004 	strh.w	r1, [sp, #4]
 800eb14:	f8ad 3006 	strh.w	r3, [sp, #6]
 800eb18:	dd5e      	ble.n	800ebd8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800eb1a:	2b00      	cmp	r3, #0
 800eb1c:	dd5c      	ble.n	800ebd8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800eb1e:	6830      	ldr	r0, [r6, #0]
 800eb20:	6871      	ldr	r1, [r6, #4]
 800eb22:	ab02      	add	r3, sp, #8
 800eb24:	c303      	stmia	r3!, {r0, r1}
 800eb26:	4669      	mov	r1, sp
 800eb28:	a802      	add	r0, sp, #8
 800eb2a:	f7fc fb87 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800eb2e:	4620      	mov	r0, r4
 800eb30:	a902      	add	r1, sp, #8
 800eb32:	f7ff fe13 	bl	800e75c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800eb36:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800eb38:	2800      	cmp	r0, #0
 800eb3a:	d05f      	beq.n	800ebfc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800eb3c:	8963      	ldrh	r3, [r4, #10]
 800eb3e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800eb42:	f8ad 101c 	strh.w	r1, [sp, #28]
 800eb46:	1a1f      	subs	r7, r3, r0
 800eb48:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800eb4c:	b202      	sxth	r2, r0
 800eb4e:	2500      	movs	r5, #0
 800eb50:	b21b      	sxth	r3, r3
 800eb52:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800eb56:	1a09      	subs	r1, r1, r0
 800eb58:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800eb5c:	9506      	str	r5, [sp, #24]
 800eb5e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800eb62:	f8ad 5020 	strh.w	r5, [sp, #32]
 800eb66:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800eb6a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800eb6e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800eb72:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800eb76:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800eb7a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800eb7e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800eb82:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800eb86:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800eb8a:	af04      	add	r7, sp, #16
 800eb8c:	ab06      	add	r3, sp, #24
 800eb8e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800eb92:	e893 0003 	ldmia.w	r3, {r0, r1}
 800eb96:	e887 0003 	stmia.w	r7, {r0, r1}
 800eb9a:	4631      	mov	r1, r6
 800eb9c:	4638      	mov	r0, r7
 800eb9e:	f7fc fb4d 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800eba2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800eba6:	2b00      	cmp	r3, #0
 800eba8:	dd12      	ble.n	800ebd0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800ebaa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ebae:	2b00      	cmp	r3, #0
 800ebb0:	dd0e      	ble.n	800ebd0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800ebb2:	6823      	ldr	r3, [r4, #0]
 800ebb4:	4639      	mov	r1, r7
 800ebb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebb8:	4620      	mov	r0, r4
 800ebba:	4798      	blx	r3
 800ebbc:	f7f3 ffc2 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800ebc0:	6803      	ldr	r3, [r0, #0]
 800ebc2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ebc4:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800ebc8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ebcc:	4639      	mov	r1, r7
 800ebce:	47c0      	blx	r8
 800ebd0:	3501      	adds	r5, #1
 800ebd2:	2d04      	cmp	r5, #4
 800ebd4:	d1da      	bne.n	800eb8c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800ebd6:	e011      	b.n	800ebfc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800ebd8:	6830      	ldr	r0, [r6, #0]
 800ebda:	6871      	ldr	r1, [r6, #4]
 800ebdc:	ab06      	add	r3, sp, #24
 800ebde:	c303      	stmia	r3!, {r0, r1}
 800ebe0:	6823      	ldr	r3, [r4, #0]
 800ebe2:	a906      	add	r1, sp, #24
 800ebe4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebe6:	4620      	mov	r0, r4
 800ebe8:	4798      	blx	r3
 800ebea:	f7f3 ffab 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 800ebee:	6803      	ldr	r3, [r0, #0]
 800ebf0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ebf2:	6a1d      	ldr	r5, [r3, #32]
 800ebf4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ebf8:	a906      	add	r1, sp, #24
 800ebfa:	47a8      	blx	r5
 800ebfc:	b00e      	add	sp, #56	; 0x38
 800ebfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ec02 <_ZN8touchgfx5ImageD1Ev>:
 800ec02:	4770      	bx	lr

0800ec04 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800ec04:	b570      	push	{r4, r5, r6, lr}
 800ec06:	880b      	ldrh	r3, [r1, #0]
 800ec08:	84c3      	strh	r3, [r0, #38]	; 0x26
 800ec0a:	4604      	mov	r4, r0
 800ec0c:	4608      	mov	r0, r1
 800ec0e:	460d      	mov	r5, r1
 800ec10:	f005 fed6 	bl	80149c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ec14:	4606      	mov	r6, r0
 800ec16:	4628      	mov	r0, r5
 800ec18:	f005 ff06 	bl	8014a28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ec1c:	6823      	ldr	r3, [r4, #0]
 800ec1e:	4605      	mov	r5, r0
 800ec20:	4631      	mov	r1, r6
 800ec22:	4620      	mov	r0, r4
 800ec24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ec26:	4798      	blx	r3
 800ec28:	6823      	ldr	r3, [r4, #0]
 800ec2a:	4629      	mov	r1, r5
 800ec2c:	4620      	mov	r0, r4
 800ec2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ec30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec34:	4718      	bx	r3

0800ec36 <_ZN8touchgfx5ImageD0Ev>:
 800ec36:	b510      	push	{r4, lr}
 800ec38:	212c      	movs	r1, #44	; 0x2c
 800ec3a:	4604      	mov	r4, r0
 800ec3c:	f011 ffac 	bl	8020b98 <_ZdlPvj>
 800ec40:	4620      	mov	r0, r4
 800ec42:	bd10      	pop	{r4, pc}

0800ec44 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800ec44:	b510      	push	{r4, lr}
 800ec46:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800ec4a:	2bff      	cmp	r3, #255	; 0xff
 800ec4c:	4604      	mov	r4, r0
 800ec4e:	d006      	beq.n	800ec5e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800ec50:	2300      	movs	r3, #0
 800ec52:	8003      	strh	r3, [r0, #0]
 800ec54:	8043      	strh	r3, [r0, #2]
 800ec56:	8083      	strh	r3, [r0, #4]
 800ec58:	80c3      	strh	r3, [r0, #6]
 800ec5a:	4620      	mov	r0, r4
 800ec5c:	bd10      	pop	{r4, pc}
 800ec5e:	3126      	adds	r1, #38	; 0x26
 800ec60:	f005 ff16 	bl	8014a90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ec64:	e7f9      	b.n	800ec5a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800ec66 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800ec66:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800ec6a:	b12a      	cbz	r2, 800ec78 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ec6c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800ec70:	b112      	cbz	r2, 800ec78 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ec72:	6803      	ldr	r3, [r0, #0]
 800ec74:	695b      	ldr	r3, [r3, #20]
 800ec76:	4718      	bx	r3
 800ec78:	4770      	bx	lr
	...

0800ec7c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800ec7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec80:	4604      	mov	r4, r0
 800ec82:	b088      	sub	sp, #32
 800ec84:	f854 3b26 	ldr.w	r3, [r4], #38
 800ec88:	2500      	movs	r5, #0
 800ec8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec8c:	460f      	mov	r7, r1
 800ec8e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800ec92:	a904      	add	r1, sp, #16
 800ec94:	4606      	mov	r6, r0
 800ec96:	4798      	blx	r3
 800ec98:	4620      	mov	r0, r4
 800ec9a:	f005 fe91 	bl	80149c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ec9e:	4680      	mov	r8, r0
 800eca0:	4620      	mov	r0, r4
 800eca2:	f005 fec1 	bl	8014a28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800eca6:	9506      	str	r5, [sp, #24]
 800eca8:	ad06      	add	r5, sp, #24
 800ecaa:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ecae:	4639      	mov	r1, r7
 800ecb0:	4628      	mov	r0, r5
 800ecb2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800ecb6:	f7fc fac1 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800ecba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ecbe:	2b00      	cmp	r3, #0
 800ecc0:	dd19      	ble.n	800ecf6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ecc2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ecc6:	2b00      	cmp	r3, #0
 800ecc8:	dd15      	ble.n	800ecf6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ecca:	4b0c      	ldr	r3, [pc, #48]	; (800ecfc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800eccc:	681b      	ldr	r3, [r3, #0]
 800ecce:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ecd2:	b10a      	cbz	r2, 800ecd8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800ecd4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ecd6:	b900      	cbnz	r0, 800ecda <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800ecd8:	6898      	ldr	r0, [r3, #8]
 800ecda:	6801      	ldr	r1, [r0, #0]
 800ecdc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800ece0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800ece4:	2701      	movs	r7, #1
 800ece6:	9702      	str	r7, [sp, #8]
 800ece8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800ecec:	e9cd 5600 	strd	r5, r6, [sp]
 800ecf0:	688d      	ldr	r5, [r1, #8]
 800ecf2:	4621      	mov	r1, r4
 800ecf4:	47a8      	blx	r5
 800ecf6:	b008      	add	sp, #32
 800ecf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ecfc:	20015800 	.word	0x20015800

0800ed00 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800ed00:	4770      	bx	lr

0800ed02 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800ed02:	b510      	push	{r4, lr}
 800ed04:	2148      	movs	r1, #72	; 0x48
 800ed06:	4604      	mov	r4, r0
 800ed08:	f011 ff46 	bl	8020b98 <_ZdlPvj>
 800ed0c:	4620      	mov	r0, r4
 800ed0e:	bd10      	pop	{r4, pc}

0800ed10 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800ed10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed14:	b08d      	sub	sp, #52	; 0x34
 800ed16:	4604      	mov	r4, r0
 800ed18:	4688      	mov	r8, r1
 800ed1a:	f7ff fd89 	bl	800e830 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800ed1e:	4a4d      	ldr	r2, [pc, #308]	; (800ee54 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800ed20:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ed22:	8812      	ldrh	r2, [r2, #0]
 800ed24:	429a      	cmp	r2, r3
 800ed26:	f240 8081 	bls.w	800ee2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800ed2a:	4e4b      	ldr	r6, [pc, #300]	; (800ee58 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800ed2c:	6832      	ldr	r2, [r6, #0]
 800ed2e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ed32:	4b4a      	ldr	r3, [pc, #296]	; (800ee5c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800ed34:	681b      	ldr	r3, [r3, #0]
 800ed36:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800ed3a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800ed3e:	2300      	movs	r3, #0
 800ed40:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800ed44:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed48:	2b03      	cmp	r3, #3
 800ed4a:	d811      	bhi.n	800ed70 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800ed4c:	e8df f003 	tbb	[pc, r3]
 800ed50:	71027102 	.word	0x71027102
 800ed54:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ed58:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800ed5c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ed60:	1a9b      	subs	r3, r3, r2
 800ed62:	2002      	movs	r0, #2
 800ed64:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ed68:	fb93 f3f0 	sdiv	r3, r3, r0
 800ed6c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ed70:	ad03      	add	r5, sp, #12
 800ed72:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ed76:	f10d 0914 	add.w	r9, sp, #20
 800ed7a:	e889 0003 	stmia.w	r9, {r0, r1}
 800ed7e:	4641      	mov	r1, r8
 800ed80:	4648      	mov	r0, r9
 800ed82:	f7fc fa5b 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 800ed86:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ed8a:	2b00      	cmp	r3, #0
 800ed8c:	dd4e      	ble.n	800ee2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800ed8e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800ed92:	2b00      	cmp	r3, #0
 800ed94:	dd4a      	ble.n	800ee2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800ed96:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800ed9a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ed9e:	1a9b      	subs	r3, r3, r2
 800eda0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800eda4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800eda8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800edac:	1a9b      	subs	r3, r3, r2
 800edae:	f8ad 3016 	strh.w	r3, [sp, #22]
 800edb2:	6823      	ldr	r3, [r4, #0]
 800edb4:	4629      	mov	r1, r5
 800edb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800edb8:	4620      	mov	r0, r4
 800edba:	4798      	blx	r3
 800edbc:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800edc0:	2b00      	cmp	r3, #0
 800edc2:	d045      	beq.n	800ee50 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800edc4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800edc6:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800edc8:	6833      	ldr	r3, [r6, #0]
 800edca:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800edce:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800edd2:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800edd6:	785b      	ldrb	r3, [r3, #1]
 800edd8:	9209      	str	r2, [sp, #36]	; 0x24
 800edda:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800edde:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ede2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800ede6:	2300      	movs	r3, #0
 800ede8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800edec:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800edf0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800edf4:	4b1a      	ldr	r3, [pc, #104]	; (800ee60 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800edf6:	9707      	str	r7, [sp, #28]
 800edf8:	681b      	ldr	r3, [r3, #0]
 800edfa:	f88d 6020 	strb.w	r6, [sp, #32]
 800edfe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ee02:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ee06:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ee0a:	b10a      	cbz	r2, 800ee10 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800ee0c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800ee0e:	b904      	cbnz	r4, 800ee12 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800ee10:	689c      	ldr	r4, [r3, #8]
 800ee12:	4b14      	ldr	r3, [pc, #80]	; (800ee64 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800ee14:	6818      	ldr	r0, [r3, #0]
 800ee16:	f7f6 f9fd 	bl	8005214 <_ZNK8touchgfx5Texts7getTextEt>
 800ee1a:	ab07      	add	r3, sp, #28
 800ee1c:	9001      	str	r0, [sp, #4]
 800ee1e:	9300      	str	r3, [sp, #0]
 800ee20:	e895 0006 	ldmia.w	r5, {r1, r2}
 800ee24:	464b      	mov	r3, r9
 800ee26:	4620      	mov	r0, r4
 800ee28:	f7f6 f9a6 	bl	8005178 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ee2c:	b00d      	add	sp, #52	; 0x34
 800ee2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ee32:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800ee36:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800ee3a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ee3e:	1a9b      	subs	r3, r3, r2
 800ee40:	2002      	movs	r0, #2
 800ee42:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ee46:	fb93 f3f0 	sdiv	r3, r3, r0
 800ee4a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ee4e:	e78f      	b.n	800ed70 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800ee50:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800ee52:	e7b8      	b.n	800edc6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800ee54:	2001585c 	.word	0x2001585c
 800ee58:	20015858 	.word	0x20015858
 800ee5c:	20015860 	.word	0x20015860
 800ee60:	20015800 	.word	0x20015800
 800ee64:	20015864 	.word	0x20015864

0800ee68 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800ee68:	b510      	push	{r4, lr}
 800ee6a:	2101      	movs	r1, #1
 800ee6c:	4c13      	ldr	r4, [pc, #76]	; (800eebc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800ee6e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800ee72:	2200      	movs	r2, #0
 800ee74:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800ee78:	6004      	str	r4, [r0, #0]
 800ee7a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ee7e:	4c10      	ldr	r4, [pc, #64]	; (800eec0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800ee80:	8082      	strh	r2, [r0, #4]
 800ee82:	80c2      	strh	r2, [r0, #6]
 800ee84:	8102      	strh	r2, [r0, #8]
 800ee86:	8142      	strh	r2, [r0, #10]
 800ee88:	8182      	strh	r2, [r0, #12]
 800ee8a:	81c2      	strh	r2, [r0, #14]
 800ee8c:	8202      	strh	r2, [r0, #16]
 800ee8e:	8242      	strh	r2, [r0, #18]
 800ee90:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800ee94:	61c2      	str	r2, [r0, #28]
 800ee96:	8402      	strh	r2, [r0, #32]
 800ee98:	8442      	strh	r2, [r0, #34]	; 0x22
 800ee9a:	6282      	str	r2, [r0, #40]	; 0x28
 800ee9c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800eea0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800eea2:	8601      	strh	r1, [r0, #48]	; 0x30
 800eea4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800eea8:	6344      	str	r4, [r0, #52]	; 0x34
 800eeaa:	8701      	strh	r1, [r0, #56]	; 0x38
 800eeac:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800eeb0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800eeb4:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800eeb8:	bd10      	pop	{r4, pc}
 800eeba:	bf00      	nop
 800eebc:	08024724 	.word	0x08024724
 800eec0:	08022724 	.word	0x08022724

0800eec4 <_ZN8touchgfx7OutlineD1Ev>:
 800eec4:	4770      	bx	lr

0800eec6 <_ZN8touchgfx7OutlineD0Ev>:
 800eec6:	b510      	push	{r4, lr}
 800eec8:	2130      	movs	r1, #48	; 0x30
 800eeca:	4604      	mov	r4, r0
 800eecc:	f011 fe64 	bl	8020b98 <_ZdlPvj>
 800eed0:	4620      	mov	r0, r4
 800eed2:	bd10      	pop	{r4, pc}

0800eed4 <_ZN8touchgfx7Outline5resetEv>:
 800eed4:	b510      	push	{r4, lr}
 800eed6:	4604      	mov	r4, r0
 800eed8:	f000 fe8c 	bl	800fbf4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800eedc:	60e0      	str	r0, [r4, #12]
 800eede:	f000 fe8f 	bl	800fc00 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800eee2:	68e3      	ldr	r3, [r4, #12]
 800eee4:	6123      	str	r3, [r4, #16]
 800eee6:	08c0      	lsrs	r0, r0, #3
 800eee8:	2200      	movs	r2, #0
 800eeea:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800eeee:	3801      	subs	r0, #1
 800eef0:	6060      	str	r0, [r4, #4]
 800eef2:	60a2      	str	r2, [r4, #8]
 800eef4:	8019      	strh	r1, [r3, #0]
 800eef6:	8059      	strh	r1, [r3, #2]
 800eef8:	809a      	strh	r2, [r3, #4]
 800eefa:	80da      	strh	r2, [r3, #6]
 800eefc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800eefe:	f023 0301 	bic.w	r3, r3, #1
 800ef02:	f043 0302 	orr.w	r3, r3, #2
 800ef06:	6263      	str	r3, [r4, #36]	; 0x24
 800ef08:	bd10      	pop	{r4, pc}
	...

0800ef0c <_ZN8touchgfx7OutlineC1Ev>:
 800ef0c:	b510      	push	{r4, lr}
 800ef0e:	4b0a      	ldr	r3, [pc, #40]	; (800ef38 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800ef10:	6003      	str	r3, [r0, #0]
 800ef12:	2300      	movs	r3, #0
 800ef14:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800ef18:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ef1c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ef20:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ef24:	6243      	str	r3, [r0, #36]	; 0x24
 800ef26:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800ef2a:	4604      	mov	r4, r0
 800ef2c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800ef30:	f7ff ffd0 	bl	800eed4 <_ZN8touchgfx7Outline5resetEv>
 800ef34:	4620      	mov	r0, r4
 800ef36:	bd10      	pop	{r4, pc}
 800ef38:	08024798 	.word	0x08024798

0800ef3c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800ef3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef40:	b093      	sub	sp, #76	; 0x4c
 800ef42:	1156      	asrs	r6, r2, #5
 800ef44:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800ef46:	9305      	str	r3, [sp, #20]
 800ef48:	f004 051f 	and.w	r5, r4, #31
 800ef4c:	1153      	asrs	r3, r2, #5
 800ef4e:	9504      	str	r5, [sp, #16]
 800ef50:	1165      	asrs	r5, r4, #5
 800ef52:	9303      	str	r3, [sp, #12]
 800ef54:	42ae      	cmp	r6, r5
 800ef56:	ea4f 1364 	mov.w	r3, r4, asr #5
 800ef5a:	9306      	str	r3, [sp, #24]
 800ef5c:	f002 031f 	and.w	r3, r2, #31
 800ef60:	f040 80f8 	bne.w	800f154 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800ef64:	9c04      	ldr	r4, [sp, #16]
 800ef66:	9a05      	ldr	r2, [sp, #20]
 800ef68:	42a3      	cmp	r3, r4
 800ef6a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800ef6e:	6902      	ldr	r2, [r0, #16]
 800ef70:	d125      	bne.n	800efbe <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800ef72:	f9b2 3000 	ldrsh.w	r3, [r2]
 800ef76:	459e      	cmp	lr, r3
 800ef78:	d103      	bne.n	800ef82 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800ef7a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ef7e:	429e      	cmp	r6, r3
 800ef80:	d035      	beq.n	800efee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ef82:	88d1      	ldrh	r1, [r2, #6]
 800ef84:	8893      	ldrh	r3, [r2, #4]
 800ef86:	430b      	orrs	r3, r1
 800ef88:	d010      	beq.n	800efac <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ef8a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ef8e:	2b00      	cmp	r3, #0
 800ef90:	db0c      	blt.n	800efac <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ef92:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ef94:	428b      	cmp	r3, r1
 800ef96:	da09      	bge.n	800efac <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ef98:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ef9c:	428b      	cmp	r3, r1
 800ef9e:	bf38      	it	cc
 800efa0:	3208      	addcc	r2, #8
 800efa2:	f103 0301 	add.w	r3, r3, #1
 800efa6:	bf38      	it	cc
 800efa8:	6102      	strcc	r2, [r0, #16]
 800efaa:	6083      	str	r3, [r0, #8]
 800efac:	6903      	ldr	r3, [r0, #16]
 800efae:	9a03      	ldr	r2, [sp, #12]
 800efb0:	f8a3 e000 	strh.w	lr, [r3]
 800efb4:	805a      	strh	r2, [r3, #2]
 800efb6:	2200      	movs	r2, #0
 800efb8:	809a      	strh	r2, [r3, #4]
 800efba:	80da      	strh	r2, [r3, #6]
 800efbc:	e017      	b.n	800efee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800efbe:	9c05      	ldr	r4, [sp, #20]
 800efc0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800efc4:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800efc8:	f004 041f 	and.w	r4, r4, #31
 800efcc:	114e      	asrs	r6, r1, #5
 800efce:	9402      	str	r4, [sp, #8]
 800efd0:	9c04      	ldr	r4, [sp, #16]
 800efd2:	4576      	cmp	r6, lr
 800efd4:	f001 0c1f 	and.w	ip, r1, #31
 800efd8:	eba4 0403 	sub.w	r4, r4, r3
 800efdc:	d10a      	bne.n	800eff4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800efde:	9b02      	ldr	r3, [sp, #8]
 800efe0:	449c      	add	ip, r3
 800efe2:	44a0      	add	r8, r4
 800efe4:	fb04 a40c 	mla	r4, r4, ip, sl
 800efe8:	f8a2 8004 	strh.w	r8, [r2, #4]
 800efec:	80d4      	strh	r4, [r2, #6]
 800efee:	b013      	add	sp, #76	; 0x4c
 800eff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eff4:	9d05      	ldr	r5, [sp, #20]
 800eff6:	1a69      	subs	r1, r5, r1
 800eff8:	bf5b      	ittet	pl
 800effa:	f1cc 0520 	rsbpl	r5, ip, #32
 800effe:	436c      	mulpl	r4, r5
 800f000:	2500      	movmi	r5, #0
 800f002:	2520      	movpl	r5, #32
 800f004:	bf44      	itt	mi
 800f006:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f00a:	4249      	negmi	r1, r1
 800f00c:	9501      	str	r5, [sp, #4]
 800f00e:	9f01      	ldr	r7, [sp, #4]
 800f010:	fb94 f5f1 	sdiv	r5, r4, r1
 800f014:	fb01 4415 	mls	r4, r1, r5, r4
 800f018:	bf54      	ite	pl
 800f01a:	f04f 0901 	movpl.w	r9, #1
 800f01e:	f04f 39ff 	movmi.w	r9, #4294967295
 800f022:	2c00      	cmp	r4, #0
 800f024:	bfb8      	it	lt
 800f026:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f02a:	44bc      	add	ip, r7
 800f02c:	44a8      	add	r8, r5
 800f02e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f032:	f8a2 8004 	strh.w	r8, [r2, #4]
 800f036:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f03a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f03e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f042:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800f046:	bfb8      	it	lt
 800f048:	1864      	addlt	r4, r4, r1
 800f04a:	ea58 0202 	orrs.w	r2, r8, r2
 800f04e:	444e      	add	r6, r9
 800f050:	d011      	beq.n	800f076 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f052:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f056:	f1b8 0f00 	cmp.w	r8, #0
 800f05a:	db0c      	blt.n	800f076 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f05c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800f05e:	4590      	cmp	r8, r2
 800f060:	da09      	bge.n	800f076 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f062:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800f066:	4590      	cmp	r8, r2
 800f068:	bf3c      	itt	cc
 800f06a:	f10c 0208 	addcc.w	r2, ip, #8
 800f06e:	6102      	strcc	r2, [r0, #16]
 800f070:	f108 0201 	add.w	r2, r8, #1
 800f074:	6082      	str	r2, [r0, #8]
 800f076:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f07a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f07e:	f8ac 6000 	strh.w	r6, [ip]
 800f082:	2700      	movs	r7, #0
 800f084:	45b6      	cmp	lr, r6
 800f086:	f8ac 2002 	strh.w	r2, [ip, #2]
 800f08a:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f08e:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f092:	442b      	add	r3, r5
 800f094:	d04d      	beq.n	800f132 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800f096:	9f04      	ldr	r7, [sp, #16]
 800f098:	1aff      	subs	r7, r7, r3
 800f09a:	443d      	add	r5, r7
 800f09c:	016d      	lsls	r5, r5, #5
 800f09e:	fb95 f8f1 	sdiv	r8, r5, r1
 800f0a2:	fb01 5518 	mls	r5, r1, r8, r5
 800f0a6:	2d00      	cmp	r5, #0
 800f0a8:	bfb8      	it	lt
 800f0aa:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f0ae:	f108 0701 	add.w	r7, r8, #1
 800f0b2:	bfb8      	it	lt
 800f0b4:	186d      	addlt	r5, r5, r1
 800f0b6:	1a64      	subs	r4, r4, r1
 800f0b8:	9703      	str	r7, [sp, #12]
 800f0ba:	f04f 0a00 	mov.w	sl, #0
 800f0be:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f0c2:	1964      	adds	r4, r4, r5
 800f0c4:	bf58      	it	pl
 800f0c6:	9f03      	ldrpl	r7, [sp, #12]
 800f0c8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f0cc:	bf48      	it	mi
 800f0ce:	4647      	movmi	r7, r8
 800f0d0:	44bb      	add	fp, r7
 800f0d2:	f8ac b004 	strh.w	fp, [ip, #4]
 800f0d6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f0da:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f0de:	f8ac b006 	strh.w	fp, [ip, #6]
 800f0e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f0e6:	443b      	add	r3, r7
 800f0e8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f0ec:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f0f0:	bf58      	it	pl
 800f0f2:	1a64      	subpl	r4, r4, r1
 800f0f4:	ea5b 0707 	orrs.w	r7, fp, r7
 800f0f8:	444e      	add	r6, r9
 800f0fa:	d011      	beq.n	800f120 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f0fc:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f100:	f1bb 0f00 	cmp.w	fp, #0
 800f104:	db0c      	blt.n	800f120 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f106:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f108:	45bb      	cmp	fp, r7
 800f10a:	da09      	bge.n	800f120 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f10c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f110:	45bb      	cmp	fp, r7
 800f112:	bf3c      	itt	cc
 800f114:	f10c 0708 	addcc.w	r7, ip, #8
 800f118:	6107      	strcc	r7, [r0, #16]
 800f11a:	f10b 0701 	add.w	r7, fp, #1
 800f11e:	6087      	str	r7, [r0, #8]
 800f120:	6907      	ldr	r7, [r0, #16]
 800f122:	45b6      	cmp	lr, r6
 800f124:	803e      	strh	r6, [r7, #0]
 800f126:	807a      	strh	r2, [r7, #2]
 800f128:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f12c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f130:	d1c5      	bne.n	800f0be <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800f132:	9a04      	ldr	r2, [sp, #16]
 800f134:	1ad3      	subs	r3, r2, r3
 800f136:	6902      	ldr	r2, [r0, #16]
 800f138:	8891      	ldrh	r1, [r2, #4]
 800f13a:	88d6      	ldrh	r6, [r2, #6]
 800f13c:	4419      	add	r1, r3
 800f13e:	8091      	strh	r1, [r2, #4]
 800f140:	9902      	ldr	r1, [sp, #8]
 800f142:	f101 0c20 	add.w	ip, r1, #32
 800f146:	9901      	ldr	r1, [sp, #4]
 800f148:	ebac 0c01 	sub.w	ip, ip, r1
 800f14c:	fb03 630c 	mla	r3, r3, ip, r6
 800f150:	80d3      	strh	r3, [r2, #6]
 800f152:	e74c      	b.n	800efee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f154:	9d05      	ldr	r5, [sp, #20]
 800f156:	1aa2      	subs	r2, r4, r2
 800f158:	eba5 0501 	sub.w	r5, r5, r1
 800f15c:	9508      	str	r5, [sp, #32]
 800f15e:	9202      	str	r2, [sp, #8]
 800f160:	f140 8128 	bpl.w	800f3b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800f164:	9a03      	ldr	r2, [sp, #12]
 800f166:	2a00      	cmp	r2, #0
 800f168:	f6ff af41 	blt.w	800efee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f16c:	9a02      	ldr	r2, [sp, #8]
 800f16e:	4252      	negs	r2, r2
 800f170:	9202      	str	r2, [sp, #8]
 800f172:	9a06      	ldr	r2, [sp, #24]
 800f174:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800f178:	f04f 34ff 	mov.w	r4, #4294967295
 800f17c:	9206      	str	r2, [sp, #24]
 800f17e:	462a      	mov	r2, r5
 800f180:	940b      	str	r4, [sp, #44]	; 0x2c
 800f182:	435a      	muls	r2, r3
 800f184:	2400      	movs	r4, #0
 800f186:	9d02      	ldr	r5, [sp, #8]
 800f188:	9401      	str	r4, [sp, #4]
 800f18a:	9c02      	ldr	r4, [sp, #8]
 800f18c:	fb92 f4f4 	sdiv	r4, r2, r4
 800f190:	fb05 2214 	mls	r2, r5, r4, r2
 800f194:	2a00      	cmp	r2, #0
 800f196:	9207      	str	r2, [sp, #28]
 800f198:	bfbc      	itt	lt
 800f19a:	1952      	addlt	r2, r2, r5
 800f19c:	9207      	strlt	r2, [sp, #28]
 800f19e:	9a01      	ldr	r2, [sp, #4]
 800f1a0:	6905      	ldr	r5, [r0, #16]
 800f1a2:	bfb8      	it	lt
 800f1a4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f1a8:	eb04 0901 	add.w	r9, r4, r1
 800f1ac:	429a      	cmp	r2, r3
 800f1ae:	ea4f 1669 	mov.w	r6, r9, asr #5
 800f1b2:	f040 8112 	bne.w	800f3da <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800f1b6:	f9b5 3000 	ldrsh.w	r3, [r5]
 800f1ba:	429e      	cmp	r6, r3
 800f1bc:	d104      	bne.n	800f1c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800f1be:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f1c2:	9a03      	ldr	r2, [sp, #12]
 800f1c4:	429a      	cmp	r2, r3
 800f1c6:	d01b      	beq.n	800f200 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f1c8:	88ea      	ldrh	r2, [r5, #6]
 800f1ca:	88ab      	ldrh	r3, [r5, #4]
 800f1cc:	4313      	orrs	r3, r2
 800f1ce:	d010      	beq.n	800f1f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f1d0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f1d4:	2a00      	cmp	r2, #0
 800f1d6:	db0c      	blt.n	800f1f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f1d8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f1da:	429a      	cmp	r2, r3
 800f1dc:	da09      	bge.n	800f1f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f1de:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800f1e2:	429a      	cmp	r2, r3
 800f1e4:	bf38      	it	cc
 800f1e6:	3508      	addcc	r5, #8
 800f1e8:	f102 0201 	add.w	r2, r2, #1
 800f1ec:	bf38      	it	cc
 800f1ee:	6105      	strcc	r5, [r0, #16]
 800f1f0:	6082      	str	r2, [r0, #8]
 800f1f2:	6903      	ldr	r3, [r0, #16]
 800f1f4:	9a03      	ldr	r2, [sp, #12]
 800f1f6:	805a      	strh	r2, [r3, #2]
 800f1f8:	2200      	movs	r2, #0
 800f1fa:	801e      	strh	r6, [r3, #0]
 800f1fc:	809a      	strh	r2, [r3, #4]
 800f1fe:	80da      	strh	r2, [r3, #6]
 800f200:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f202:	9a03      	ldr	r2, [sp, #12]
 800f204:	6901      	ldr	r1, [r0, #16]
 800f206:	441a      	add	r2, r3
 800f208:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f20c:	42b3      	cmp	r3, r6
 800f20e:	d103      	bne.n	800f218 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800f210:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f214:	429a      	cmp	r2, r3
 800f216:	d01a      	beq.n	800f24e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800f218:	88cc      	ldrh	r4, [r1, #6]
 800f21a:	888b      	ldrh	r3, [r1, #4]
 800f21c:	4323      	orrs	r3, r4
 800f21e:	d010      	beq.n	800f242 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f220:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f224:	2c00      	cmp	r4, #0
 800f226:	db0c      	blt.n	800f242 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f228:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f22a:	429c      	cmp	r4, r3
 800f22c:	da09      	bge.n	800f242 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f22e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f232:	429c      	cmp	r4, r3
 800f234:	bf38      	it	cc
 800f236:	3108      	addcc	r1, #8
 800f238:	f104 0401 	add.w	r4, r4, #1
 800f23c:	bf38      	it	cc
 800f23e:	6101      	strcc	r1, [r0, #16]
 800f240:	6084      	str	r4, [r0, #8]
 800f242:	6903      	ldr	r3, [r0, #16]
 800f244:	2100      	movs	r1, #0
 800f246:	801e      	strh	r6, [r3, #0]
 800f248:	805a      	strh	r2, [r3, #2]
 800f24a:	8099      	strh	r1, [r3, #4]
 800f24c:	80d9      	strh	r1, [r3, #6]
 800f24e:	9b06      	ldr	r3, [sp, #24]
 800f250:	4293      	cmp	r3, r2
 800f252:	f000 8082 	beq.w	800f35a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800f256:	9b08      	ldr	r3, [sp, #32]
 800f258:	9c02      	ldr	r4, [sp, #8]
 800f25a:	9902      	ldr	r1, [sp, #8]
 800f25c:	015b      	lsls	r3, r3, #5
 800f25e:	fb93 f1f1 	sdiv	r1, r3, r1
 800f262:	fb04 3311 	mls	r3, r4, r1, r3
 800f266:	2b00      	cmp	r3, #0
 800f268:	9103      	str	r1, [sp, #12]
 800f26a:	9308      	str	r3, [sp, #32]
 800f26c:	da04      	bge.n	800f278 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800f26e:	1e4b      	subs	r3, r1, #1
 800f270:	9303      	str	r3, [sp, #12]
 800f272:	9b08      	ldr	r3, [sp, #32]
 800f274:	4423      	add	r3, r4
 800f276:	9308      	str	r3, [sp, #32]
 800f278:	9b07      	ldr	r3, [sp, #28]
 800f27a:	9902      	ldr	r1, [sp, #8]
 800f27c:	1a5b      	subs	r3, r3, r1
 800f27e:	9307      	str	r3, [sp, #28]
 800f280:	9b01      	ldr	r3, [sp, #4]
 800f282:	f1c3 0320 	rsb	r3, r3, #32
 800f286:	930e      	str	r3, [sp, #56]	; 0x38
 800f288:	990e      	ldr	r1, [sp, #56]	; 0x38
 800f28a:	9b01      	ldr	r3, [sp, #4]
 800f28c:	1a5b      	subs	r3, r3, r1
 800f28e:	464f      	mov	r7, r9
 800f290:	930a      	str	r3, [sp, #40]	; 0x28
 800f292:	2600      	movs	r6, #0
 800f294:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800f298:	185b      	adds	r3, r3, r1
 800f29a:	bf58      	it	pl
 800f29c:	9902      	ldrpl	r1, [sp, #8]
 800f29e:	9307      	str	r3, [sp, #28]
 800f2a0:	bf5d      	ittte	pl
 800f2a2:	1a5b      	subpl	r3, r3, r1
 800f2a4:	9307      	strpl	r3, [sp, #28]
 800f2a6:	9b03      	ldrpl	r3, [sp, #12]
 800f2a8:	9903      	ldrmi	r1, [sp, #12]
 800f2aa:	bf58      	it	pl
 800f2ac:	1c59      	addpl	r1, r3, #1
 800f2ae:	4489      	add	r9, r1
 800f2b0:	2a00      	cmp	r2, #0
 800f2b2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800f2b6:	db2e      	blt.n	800f316 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f2b8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f2ba:	4293      	cmp	r3, r2
 800f2bc:	dd2b      	ble.n	800f316 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f2be:	9c01      	ldr	r4, [sp, #4]
 800f2c0:	6905      	ldr	r5, [r0, #16]
 800f2c2:	46a0      	mov	r8, r4
 800f2c4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800f2c6:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800f2ca:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800f2ce:	45a0      	cmp	r8, r4
 800f2d0:	f040 814f 	bne.w	800f572 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800f2d4:	f9b5 1000 	ldrsh.w	r1, [r5]
 800f2d8:	4551      	cmp	r1, sl
 800f2da:	d103      	bne.n	800f2e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800f2dc:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f2e0:	4291      	cmp	r1, r2
 800f2e2:	d018      	beq.n	800f316 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f2e4:	ea5c 010e 	orrs.w	r1, ip, lr
 800f2e8:	d00f      	beq.n	800f30a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f2ea:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f2ee:	2900      	cmp	r1, #0
 800f2f0:	db0b      	blt.n	800f30a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f2f2:	428b      	cmp	r3, r1
 800f2f4:	dd09      	ble.n	800f30a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f2f6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800f2fa:	4299      	cmp	r1, r3
 800f2fc:	bf38      	it	cc
 800f2fe:	3508      	addcc	r5, #8
 800f300:	f101 0101 	add.w	r1, r1, #1
 800f304:	bf38      	it	cc
 800f306:	6105      	strcc	r5, [r0, #16]
 800f308:	6081      	str	r1, [r0, #8]
 800f30a:	6903      	ldr	r3, [r0, #16]
 800f30c:	f8a3 a000 	strh.w	sl, [r3]
 800f310:	805a      	strh	r2, [r3, #2]
 800f312:	809e      	strh	r6, [r3, #4]
 800f314:	80de      	strh	r6, [r3, #6]
 800f316:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f318:	6901      	ldr	r1, [r0, #16]
 800f31a:	441a      	add	r2, r3
 800f31c:	88cc      	ldrh	r4, [r1, #6]
 800f31e:	888b      	ldrh	r3, [r1, #4]
 800f320:	4323      	orrs	r3, r4
 800f322:	d010      	beq.n	800f346 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f324:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f328:	2c00      	cmp	r4, #0
 800f32a:	db0c      	blt.n	800f346 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f32c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f32e:	429c      	cmp	r4, r3
 800f330:	da09      	bge.n	800f346 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f332:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f336:	429c      	cmp	r4, r3
 800f338:	bf38      	it	cc
 800f33a:	3108      	addcc	r1, #8
 800f33c:	f104 0401 	add.w	r4, r4, #1
 800f340:	bf38      	it	cc
 800f342:	6101      	strcc	r1, [r0, #16]
 800f344:	6084      	str	r4, [r0, #8]
 800f346:	6903      	ldr	r3, [r0, #16]
 800f348:	f8a3 a000 	strh.w	sl, [r3]
 800f34c:	805a      	strh	r2, [r3, #2]
 800f34e:	809e      	strh	r6, [r3, #4]
 800f350:	80de      	strh	r6, [r3, #6]
 800f352:	9b06      	ldr	r3, [sp, #24]
 800f354:	4293      	cmp	r3, r2
 800f356:	464f      	mov	r7, r9
 800f358:	d19c      	bne.n	800f294 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800f35a:	9b01      	ldr	r3, [sp, #4]
 800f35c:	6907      	ldr	r7, [r0, #16]
 800f35e:	f1c3 0620 	rsb	r6, r3, #32
 800f362:	9b05      	ldr	r3, [sp, #20]
 800f364:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800f368:	9b04      	ldr	r3, [sp, #16]
 800f36a:	429e      	cmp	r6, r3
 800f36c:	f040 81cc 	bne.w	800f708 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800f370:	f9b7 3000 	ldrsh.w	r3, [r7]
 800f374:	459e      	cmp	lr, r3
 800f376:	d104      	bne.n	800f382 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800f378:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f37c:	429a      	cmp	r2, r3
 800f37e:	f43f ae36 	beq.w	800efee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f382:	88f9      	ldrh	r1, [r7, #6]
 800f384:	88bb      	ldrh	r3, [r7, #4]
 800f386:	430b      	orrs	r3, r1
 800f388:	d010      	beq.n	800f3ac <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f38a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f38e:	2b00      	cmp	r3, #0
 800f390:	db0c      	blt.n	800f3ac <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f392:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800f394:	428b      	cmp	r3, r1
 800f396:	da09      	bge.n	800f3ac <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f398:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800f39c:	428b      	cmp	r3, r1
 800f39e:	bf38      	it	cc
 800f3a0:	3708      	addcc	r7, #8
 800f3a2:	f103 0301 	add.w	r3, r3, #1
 800f3a6:	bf38      	it	cc
 800f3a8:	6107      	strcc	r7, [r0, #16]
 800f3aa:	6083      	str	r3, [r0, #8]
 800f3ac:	6903      	ldr	r3, [r0, #16]
 800f3ae:	f8a3 e000 	strh.w	lr, [r3]
 800f3b2:	e5ff      	b.n	800efb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800f3b4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800f3b6:	9c03      	ldr	r4, [sp, #12]
 800f3b8:	42a2      	cmp	r2, r4
 800f3ba:	f6ff ae18 	blt.w	800efee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f3be:	9c06      	ldr	r4, [sp, #24]
 800f3c0:	42a2      	cmp	r2, r4
 800f3c2:	bfb8      	it	lt
 800f3c4:	3201      	addlt	r2, #1
 800f3c6:	9c08      	ldr	r4, [sp, #32]
 800f3c8:	bfb8      	it	lt
 800f3ca:	9206      	strlt	r2, [sp, #24]
 800f3cc:	f1c3 0220 	rsb	r2, r3, #32
 800f3d0:	4362      	muls	r2, r4
 800f3d2:	2401      	movs	r4, #1
 800f3d4:	940b      	str	r4, [sp, #44]	; 0x2c
 800f3d6:	2420      	movs	r4, #32
 800f3d8:	e6d5      	b.n	800f186 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800f3da:	f009 021f 	and.w	r2, r9, #31
 800f3de:	ea4f 1861 	mov.w	r8, r1, asr #5
 800f3e2:	920c      	str	r2, [sp, #48]	; 0x30
 800f3e4:	9a01      	ldr	r2, [sp, #4]
 800f3e6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800f3ea:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800f3ee:	45b0      	cmp	r8, r6
 800f3f0:	f001 011f 	and.w	r1, r1, #31
 800f3f4:	eba2 0203 	sub.w	r2, r2, r3
 800f3f8:	d108      	bne.n	800f40c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800f3fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f3fc:	4419      	add	r1, r3
 800f3fe:	4496      	add	lr, r2
 800f400:	fb02 a101 	mla	r1, r2, r1, sl
 800f404:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f408:	80e9      	strh	r1, [r5, #6]
 800f40a:	e6f9      	b.n	800f200 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f40c:	2c00      	cmp	r4, #0
 800f40e:	f2c0 80a9 	blt.w	800f564 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800f412:	2701      	movs	r7, #1
 800f414:	f1c1 0c20 	rsb	ip, r1, #32
 800f418:	970a      	str	r7, [sp, #40]	; 0x28
 800f41a:	fb02 f20c 	mul.w	r2, r2, ip
 800f41e:	2720      	movs	r7, #32
 800f420:	9709      	str	r7, [sp, #36]	; 0x24
 800f422:	fb92 fcf4 	sdiv	ip, r2, r4
 800f426:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800f428:	fb04 221c 	mls	r2, r4, ip, r2
 800f42c:	2a00      	cmp	r2, #0
 800f42e:	bfb8      	it	lt
 800f430:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800f434:	4439      	add	r1, r7
 800f436:	fb0c a101 	mla	r1, ip, r1, sl
 800f43a:	80e9      	strh	r1, [r5, #6]
 800f43c:	44e6      	add	lr, ip
 800f43e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f440:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f444:	eb08 0501 	add.w	r5, r8, r1
 800f448:	6901      	ldr	r1, [r0, #16]
 800f44a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800f44e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800f452:	bfb8      	it	lt
 800f454:	1912      	addlt	r2, r2, r4
 800f456:	ea58 070e 	orrs.w	r7, r8, lr
 800f45a:	d010      	beq.n	800f47e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f45c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800f460:	f1be 0f00 	cmp.w	lr, #0
 800f464:	db0b      	blt.n	800f47e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f466:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f468:	45be      	cmp	lr, r7
 800f46a:	da08      	bge.n	800f47e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f46c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f470:	45be      	cmp	lr, r7
 800f472:	bf3c      	itt	cc
 800f474:	3108      	addcc	r1, #8
 800f476:	6101      	strcc	r1, [r0, #16]
 800f478:	f10e 0101 	add.w	r1, lr, #1
 800f47c:	6081      	str	r1, [r0, #8]
 800f47e:	6901      	ldr	r1, [r0, #16]
 800f480:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800f484:	800d      	strh	r5, [r1, #0]
 800f486:	f04f 0e00 	mov.w	lr, #0
 800f48a:	42ae      	cmp	r6, r5
 800f48c:	f8a1 8002 	strh.w	r8, [r1, #2]
 800f490:	f8a1 e004 	strh.w	lr, [r1, #4]
 800f494:	f8a1 e006 	strh.w	lr, [r1, #6]
 800f498:	4463      	add	r3, ip
 800f49a:	d054      	beq.n	800f546 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800f49c:	9901      	ldr	r1, [sp, #4]
 800f49e:	1ac9      	subs	r1, r1, r3
 800f4a0:	4461      	add	r1, ip
 800f4a2:	0149      	lsls	r1, r1, #5
 800f4a4:	fb91 fef4 	sdiv	lr, r1, r4
 800f4a8:	fb04 111e 	mls	r1, r4, lr, r1
 800f4ac:	2900      	cmp	r1, #0
 800f4ae:	bfb8      	it	lt
 800f4b0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800f4b4:	f10e 0701 	add.w	r7, lr, #1
 800f4b8:	bfb8      	it	lt
 800f4ba:	1909      	addlt	r1, r1, r4
 800f4bc:	1b12      	subs	r2, r2, r4
 800f4be:	970d      	str	r7, [sp, #52]	; 0x34
 800f4c0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f4c4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f4c6:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f4ca:	1852      	adds	r2, r2, r1
 800f4cc:	bf54      	ite	pl
 800f4ce:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800f4d2:	46f4      	movmi	ip, lr
 800f4d4:	44e3      	add	fp, ip
 800f4d6:	f8aa b004 	strh.w	fp, [sl, #4]
 800f4da:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f4de:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f4e2:	f8aa b006 	strh.w	fp, [sl, #6]
 800f4e6:	4463      	add	r3, ip
 800f4e8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f4ec:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f4f0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f4f4:	bf58      	it	pl
 800f4f6:	1b12      	subpl	r2, r2, r4
 800f4f8:	443d      	add	r5, r7
 800f4fa:	ea5b 070a 	orrs.w	r7, fp, sl
 800f4fe:	d014      	beq.n	800f52a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f500:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f504:	f1ba 0f00 	cmp.w	sl, #0
 800f508:	db0f      	blt.n	800f52a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f50a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f50c:	45ba      	cmp	sl, r7
 800f50e:	da0c      	bge.n	800f52a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f510:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f514:	45ba      	cmp	sl, r7
 800f516:	bf38      	it	cc
 800f518:	f10c 0c08 	addcc.w	ip, ip, #8
 800f51c:	f10a 0a01 	add.w	sl, sl, #1
 800f520:	bf38      	it	cc
 800f522:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f526:	f8c0 a008 	str.w	sl, [r0, #8]
 800f52a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f52e:	f04f 0700 	mov.w	r7, #0
 800f532:	42ae      	cmp	r6, r5
 800f534:	f8ac 5000 	strh.w	r5, [ip]
 800f538:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f53c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f540:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f544:	d1bc      	bne.n	800f4c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f546:	6904      	ldr	r4, [r0, #16]
 800f548:	9a01      	ldr	r2, [sp, #4]
 800f54a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f54c:	1ad3      	subs	r3, r2, r3
 800f54e:	88a2      	ldrh	r2, [r4, #4]
 800f550:	441a      	add	r2, r3
 800f552:	80a2      	strh	r2, [r4, #4]
 800f554:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f556:	3120      	adds	r1, #32
 800f558:	1a89      	subs	r1, r1, r2
 800f55a:	88e2      	ldrh	r2, [r4, #6]
 800f55c:	fb03 2301 	mla	r3, r3, r1, r2
 800f560:	80e3      	strh	r3, [r4, #6]
 800f562:	e64d      	b.n	800f200 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f564:	f04f 37ff 	mov.w	r7, #4294967295
 800f568:	970a      	str	r7, [sp, #40]	; 0x28
 800f56a:	434a      	muls	r2, r1
 800f56c:	4264      	negs	r4, r4
 800f56e:	2700      	movs	r7, #0
 800f570:	e756      	b.n	800f420 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f572:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f576:	f009 031f 	and.w	r3, r9, #31
 800f57a:	45d0      	cmp	r8, sl
 800f57c:	f007 071f 	and.w	r7, r7, #31
 800f580:	930f      	str	r3, [sp, #60]	; 0x3c
 800f582:	fa1f fc8c 	uxth.w	ip, ip
 800f586:	fa1f fe8e 	uxth.w	lr, lr
 800f58a:	d10a      	bne.n	800f5a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f58c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f58e:	449c      	add	ip, r3
 800f590:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f592:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f596:	441f      	add	r7, r3
 800f598:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f59a:	fb03 e707 	mla	r7, r3, r7, lr
 800f59e:	80ef      	strh	r7, [r5, #6]
 800f5a0:	e6b9      	b.n	800f316 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f5a2:	2900      	cmp	r1, #0
 800f5a4:	f2c0 80a8 	blt.w	800f6f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f5a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f5aa:	f1c7 0320 	rsb	r3, r7, #32
 800f5ae:	4363      	muls	r3, r4
 800f5b0:	2401      	movs	r4, #1
 800f5b2:	940d      	str	r4, [sp, #52]	; 0x34
 800f5b4:	2420      	movs	r4, #32
 800f5b6:	940c      	str	r4, [sp, #48]	; 0x30
 800f5b8:	fb93 f4f1 	sdiv	r4, r3, r1
 800f5bc:	fb01 3b14 	mls	fp, r1, r4, r3
 800f5c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f5c2:	f1bb 0f00 	cmp.w	fp, #0
 800f5c6:	bfb8      	it	lt
 800f5c8:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f5cc:	441f      	add	r7, r3
 800f5ce:	fb04 e707 	mla	r7, r4, r7, lr
 800f5d2:	44a4      	add	ip, r4
 800f5d4:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f5d8:	80ef      	strh	r7, [r5, #6]
 800f5da:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f5de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5e0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f5e4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f5e8:	bfb8      	it	lt
 800f5ea:	448b      	addlt	fp, r1
 800f5ec:	eb08 0503 	add.w	r5, r8, r3
 800f5f0:	ea5e 0307 	orrs.w	r3, lr, r7
 800f5f4:	d011      	beq.n	800f61a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f5f6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f5fa:	f1be 0f00 	cmp.w	lr, #0
 800f5fe:	db0c      	blt.n	800f61a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f600:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f602:	45be      	cmp	lr, r7
 800f604:	da09      	bge.n	800f61a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f606:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f60a:	45be      	cmp	lr, r7
 800f60c:	bf3c      	itt	cc
 800f60e:	f10c 0708 	addcc.w	r7, ip, #8
 800f612:	6107      	strcc	r7, [r0, #16]
 800f614:	f10e 0701 	add.w	r7, lr, #1
 800f618:	6087      	str	r7, [r0, #8]
 800f61a:	6907      	ldr	r7, [r0, #16]
 800f61c:	b213      	sxth	r3, r2
 800f61e:	9310      	str	r3, [sp, #64]	; 0x40
 800f620:	807b      	strh	r3, [r7, #2]
 800f622:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f624:	803d      	strh	r5, [r7, #0]
 800f626:	4555      	cmp	r5, sl
 800f628:	80be      	strh	r6, [r7, #4]
 800f62a:	80fe      	strh	r6, [r7, #6]
 800f62c:	eb04 0c03 	add.w	ip, r4, r3
 800f630:	d051      	beq.n	800f6d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f632:	9b01      	ldr	r3, [sp, #4]
 800f634:	eba3 070c 	sub.w	r7, r3, ip
 800f638:	443c      	add	r4, r7
 800f63a:	0164      	lsls	r4, r4, #5
 800f63c:	fb94 f8f1 	sdiv	r8, r4, r1
 800f640:	fb01 4418 	mls	r4, r1, r8, r4
 800f644:	2c00      	cmp	r4, #0
 800f646:	bfb8      	it	lt
 800f648:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f64c:	ebab 0301 	sub.w	r3, fp, r1
 800f650:	f108 0701 	add.w	r7, r8, #1
 800f654:	bfb8      	it	lt
 800f656:	1864      	addlt	r4, r4, r1
 800f658:	9309      	str	r3, [sp, #36]	; 0x24
 800f65a:	9711      	str	r7, [sp, #68]	; 0x44
 800f65c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f65e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f662:	191b      	adds	r3, r3, r4
 800f664:	bf58      	it	pl
 800f666:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f668:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f66c:	9309      	str	r3, [sp, #36]	; 0x24
 800f66e:	bf48      	it	mi
 800f670:	4647      	movmi	r7, r8
 800f672:	44bb      	add	fp, r7
 800f674:	f8ae b004 	strh.w	fp, [lr, #4]
 800f678:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f67c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f680:	f8ae b006 	strh.w	fp, [lr, #6]
 800f684:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f688:	44bc      	add	ip, r7
 800f68a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f68c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f690:	443d      	add	r5, r7
 800f692:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f696:	bf5c      	itt	pl
 800f698:	1a5b      	subpl	r3, r3, r1
 800f69a:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f69c:	ea5b 0307 	orrs.w	r3, fp, r7
 800f6a0:	d011      	beq.n	800f6c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f6a2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f6a6:	f1bb 0f00 	cmp.w	fp, #0
 800f6aa:	db0c      	blt.n	800f6c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f6ac:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f6ae:	45bb      	cmp	fp, r7
 800f6b0:	da09      	bge.n	800f6c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f6b2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f6b6:	45bb      	cmp	fp, r7
 800f6b8:	bf3c      	itt	cc
 800f6ba:	f10e 0708 	addcc.w	r7, lr, #8
 800f6be:	6107      	strcc	r7, [r0, #16]
 800f6c0:	f10b 0701 	add.w	r7, fp, #1
 800f6c4:	6087      	str	r7, [r0, #8]
 800f6c6:	6907      	ldr	r7, [r0, #16]
 800f6c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f6ca:	803d      	strh	r5, [r7, #0]
 800f6cc:	4555      	cmp	r5, sl
 800f6ce:	807b      	strh	r3, [r7, #2]
 800f6d0:	80be      	strh	r6, [r7, #4]
 800f6d2:	80fe      	strh	r6, [r7, #6]
 800f6d4:	d1c2      	bne.n	800f65c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f6d6:	9b01      	ldr	r3, [sp, #4]
 800f6d8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f6da:	eba3 0c0c 	sub.w	ip, r3, ip
 800f6de:	6903      	ldr	r3, [r0, #16]
 800f6e0:	8899      	ldrh	r1, [r3, #4]
 800f6e2:	4461      	add	r1, ip
 800f6e4:	8099      	strh	r1, [r3, #4]
 800f6e6:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f6e8:	3720      	adds	r7, #32
 800f6ea:	1a7f      	subs	r7, r7, r1
 800f6ec:	88d9      	ldrh	r1, [r3, #6]
 800f6ee:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f6f2:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f6f6:	e60e      	b.n	800f316 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f6f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f6fa:	f04f 34ff 	mov.w	r4, #4294967295
 800f6fe:	940d      	str	r4, [sp, #52]	; 0x34
 800f700:	437b      	muls	r3, r7
 800f702:	4249      	negs	r1, r1
 800f704:	2400      	movs	r4, #0
 800f706:	e756      	b.n	800f5b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f708:	9905      	ldr	r1, [sp, #20]
 800f70a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f70e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f712:	f001 011f 	and.w	r1, r1, #31
 800f716:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f71a:	9102      	str	r1, [sp, #8]
 800f71c:	9904      	ldr	r1, [sp, #16]
 800f71e:	45f3      	cmp	fp, lr
 800f720:	f009 0c1f 	and.w	ip, r9, #31
 800f724:	eba1 0406 	sub.w	r4, r1, r6
 800f728:	d108      	bne.n	800f73c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f72a:	9b02      	ldr	r3, [sp, #8]
 800f72c:	449c      	add	ip, r3
 800f72e:	44a0      	add	r8, r4
 800f730:	fb04 a40c 	mla	r4, r4, ip, sl
 800f734:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f738:	80fc      	strh	r4, [r7, #6]
 800f73a:	e458      	b.n	800efee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f73c:	9905      	ldr	r1, [sp, #20]
 800f73e:	ebb1 0109 	subs.w	r1, r1, r9
 800f742:	bf5b      	ittet	pl
 800f744:	f1cc 0520 	rsbpl	r5, ip, #32
 800f748:	436c      	mulpl	r4, r5
 800f74a:	2500      	movmi	r5, #0
 800f74c:	2520      	movpl	r5, #32
 800f74e:	bf44      	itt	mi
 800f750:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f754:	4249      	negmi	r1, r1
 800f756:	9501      	str	r5, [sp, #4]
 800f758:	9b01      	ldr	r3, [sp, #4]
 800f75a:	fb94 f5f1 	sdiv	r5, r4, r1
 800f75e:	fb01 4415 	mls	r4, r1, r5, r4
 800f762:	bf54      	ite	pl
 800f764:	f04f 0901 	movpl.w	r9, #1
 800f768:	f04f 39ff 	movmi.w	r9, #4294967295
 800f76c:	2c00      	cmp	r4, #0
 800f76e:	bfb8      	it	lt
 800f770:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f774:	449c      	add	ip, r3
 800f776:	44a8      	add	r8, r5
 800f778:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f77c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f780:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f784:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f788:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f78c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f790:	bfb8      	it	lt
 800f792:	1864      	addlt	r4, r4, r1
 800f794:	ea58 0707 	orrs.w	r7, r8, r7
 800f798:	eb0b 0309 	add.w	r3, fp, r9
 800f79c:	d011      	beq.n	800f7c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f79e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f7a2:	f1b8 0f00 	cmp.w	r8, #0
 800f7a6:	db0c      	blt.n	800f7c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f7a8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f7aa:	45b8      	cmp	r8, r7
 800f7ac:	da09      	bge.n	800f7c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f7ae:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f7b2:	45b8      	cmp	r8, r7
 800f7b4:	bf3c      	itt	cc
 800f7b6:	f10c 0708 	addcc.w	r7, ip, #8
 800f7ba:	6107      	strcc	r7, [r0, #16]
 800f7bc:	f108 0701 	add.w	r7, r8, #1
 800f7c0:	6087      	str	r7, [r0, #8]
 800f7c2:	6907      	ldr	r7, [r0, #16]
 800f7c4:	f04f 0c00 	mov.w	ip, #0
 800f7c8:	b212      	sxth	r2, r2
 800f7ca:	459e      	cmp	lr, r3
 800f7cc:	803b      	strh	r3, [r7, #0]
 800f7ce:	807a      	strh	r2, [r7, #2]
 800f7d0:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f7d4:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f7d8:	442e      	add	r6, r5
 800f7da:	d04d      	beq.n	800f878 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f7dc:	9f04      	ldr	r7, [sp, #16]
 800f7de:	1bbf      	subs	r7, r7, r6
 800f7e0:	443d      	add	r5, r7
 800f7e2:	016d      	lsls	r5, r5, #5
 800f7e4:	fb95 f8f1 	sdiv	r8, r5, r1
 800f7e8:	fb01 5518 	mls	r5, r1, r8, r5
 800f7ec:	4565      	cmp	r5, ip
 800f7ee:	bfb8      	it	lt
 800f7f0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f7f4:	f108 0701 	add.w	r7, r8, #1
 800f7f8:	bfb8      	it	lt
 800f7fa:	186d      	addlt	r5, r5, r1
 800f7fc:	1a64      	subs	r4, r4, r1
 800f7fe:	9703      	str	r7, [sp, #12]
 800f800:	f04f 0a00 	mov.w	sl, #0
 800f804:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f808:	1964      	adds	r4, r4, r5
 800f80a:	bf58      	it	pl
 800f80c:	9f03      	ldrpl	r7, [sp, #12]
 800f80e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f812:	bf48      	it	mi
 800f814:	4647      	movmi	r7, r8
 800f816:	44bb      	add	fp, r7
 800f818:	f8ac b004 	strh.w	fp, [ip, #4]
 800f81c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f820:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f824:	f8ac b006 	strh.w	fp, [ip, #6]
 800f828:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f82c:	443e      	add	r6, r7
 800f82e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f832:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f836:	bf58      	it	pl
 800f838:	1a64      	subpl	r4, r4, r1
 800f83a:	ea5b 0707 	orrs.w	r7, fp, r7
 800f83e:	444b      	add	r3, r9
 800f840:	d011      	beq.n	800f866 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f842:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f846:	f1bb 0f00 	cmp.w	fp, #0
 800f84a:	db0c      	blt.n	800f866 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f84c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f84e:	45bb      	cmp	fp, r7
 800f850:	da09      	bge.n	800f866 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f852:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f856:	45bb      	cmp	fp, r7
 800f858:	bf3c      	itt	cc
 800f85a:	f10c 0708 	addcc.w	r7, ip, #8
 800f85e:	6107      	strcc	r7, [r0, #16]
 800f860:	f10b 0701 	add.w	r7, fp, #1
 800f864:	6087      	str	r7, [r0, #8]
 800f866:	6907      	ldr	r7, [r0, #16]
 800f868:	459e      	cmp	lr, r3
 800f86a:	803b      	strh	r3, [r7, #0]
 800f86c:	807a      	strh	r2, [r7, #2]
 800f86e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f872:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f876:	d1c5      	bne.n	800f804 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f878:	9b04      	ldr	r3, [sp, #16]
 800f87a:	1b9e      	subs	r6, r3, r6
 800f87c:	6903      	ldr	r3, [r0, #16]
 800f87e:	889a      	ldrh	r2, [r3, #4]
 800f880:	4432      	add	r2, r6
 800f882:	809a      	strh	r2, [r3, #4]
 800f884:	9a02      	ldr	r2, [sp, #8]
 800f886:	f102 0c20 	add.w	ip, r2, #32
 800f88a:	9a01      	ldr	r2, [sp, #4]
 800f88c:	ebac 0c02 	sub.w	ip, ip, r2
 800f890:	88da      	ldrh	r2, [r3, #6]
 800f892:	fb06 260c 	mla	r6, r6, ip, r2
 800f896:	80de      	strh	r6, [r3, #6]
 800f898:	f7ff bba9 	b.w	800efee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f89c <_ZN8touchgfx7Outline6lineToEii>:
 800f89c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f89e:	079b      	lsls	r3, r3, #30
 800f8a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f8a2:	460e      	mov	r6, r1
 800f8a4:	4615      	mov	r5, r2
 800f8a6:	d511      	bpl.n	800f8cc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f8a8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f8ac:	ea86 0701 	eor.w	r7, r6, r1
 800f8b0:	ea85 0302 	eor.w	r3, r5, r2
 800f8b4:	433b      	orrs	r3, r7
 800f8b6:	d009      	beq.n	800f8cc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f8b8:	4633      	mov	r3, r6
 800f8ba:	9500      	str	r5, [sp, #0]
 800f8bc:	f7ff fb3e 	bl	800ef3c <_ZN8touchgfx7Outline10renderLineEiiii>
 800f8c0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f8c2:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f8c6:	f043 0301 	orr.w	r3, r3, #1
 800f8ca:	6243      	str	r3, [r0, #36]	; 0x24
 800f8cc:	b003      	add	sp, #12
 800f8ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f8d0 <_ZN8touchgfx7Outline6moveToEii>:
 800f8d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f8d2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f8d4:	4615      	mov	r5, r2
 800f8d6:	079a      	lsls	r2, r3, #30
 800f8d8:	4604      	mov	r4, r0
 800f8da:	460e      	mov	r6, r1
 800f8dc:	d401      	bmi.n	800f8e2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f8de:	f7ff faf9 	bl	800eed4 <_ZN8touchgfx7Outline5resetEv>
 800f8e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f8e4:	07db      	lsls	r3, r3, #31
 800f8e6:	d504      	bpl.n	800f8f2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f8e8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f8ec:	4620      	mov	r0, r4
 800f8ee:	f7ff ffd5 	bl	800f89c <_ZN8touchgfx7Outline6lineToEii>
 800f8f2:	6923      	ldr	r3, [r4, #16]
 800f8f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f8f8:	1170      	asrs	r0, r6, #5
 800f8fa:	4290      	cmp	r0, r2
 800f8fc:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f900:	d103      	bne.n	800f90a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f902:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f906:	4291      	cmp	r1, r2
 800f908:	d01a      	beq.n	800f940 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f90a:	88df      	ldrh	r7, [r3, #6]
 800f90c:	889a      	ldrh	r2, [r3, #4]
 800f90e:	433a      	orrs	r2, r7
 800f910:	d010      	beq.n	800f934 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f912:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f916:	2a00      	cmp	r2, #0
 800f918:	db0c      	blt.n	800f934 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f91a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f91c:	42ba      	cmp	r2, r7
 800f91e:	da09      	bge.n	800f934 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f920:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f924:	42ba      	cmp	r2, r7
 800f926:	bf38      	it	cc
 800f928:	3308      	addcc	r3, #8
 800f92a:	f102 0201 	add.w	r2, r2, #1
 800f92e:	bf38      	it	cc
 800f930:	6123      	strcc	r3, [r4, #16]
 800f932:	60a2      	str	r2, [r4, #8]
 800f934:	6923      	ldr	r3, [r4, #16]
 800f936:	2200      	movs	r2, #0
 800f938:	8018      	strh	r0, [r3, #0]
 800f93a:	8059      	strh	r1, [r3, #2]
 800f93c:	809a      	strh	r2, [r3, #4]
 800f93e:	80da      	strh	r2, [r3, #6]
 800f940:	6166      	str	r6, [r4, #20]
 800f942:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f946:	6225      	str	r5, [r4, #32]
 800f948:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f94a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f94a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f94e:	b0d0      	sub	sp, #320	; 0x140
 800f950:	466c      	mov	r4, sp
 800f952:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f956:	4627      	mov	r7, r4
 800f958:	1a0d      	subs	r5, r1, r0
 800f95a:	2d48      	cmp	r5, #72	; 0x48
 800f95c:	f100 0308 	add.w	r3, r0, #8
 800f960:	f340 80d5 	ble.w	800fb0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f964:	112d      	asrs	r5, r5, #4
 800f966:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f96a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f96e:	6816      	ldr	r6, [r2, #0]
 800f970:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f974:	6006      	str	r6, [r0, #0]
 800f976:	6856      	ldr	r6, [r2, #4]
 800f978:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f97c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f980:	6046      	str	r6, [r0, #4]
 800f982:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f986:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f98a:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f98e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f992:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f996:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f99a:	4565      	cmp	r5, ip
 800f99c:	f1a1 0208 	sub.w	r2, r1, #8
 800f9a0:	db06      	blt.n	800f9b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f9a2:	d119      	bne.n	800f9d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f9a4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f9a8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f9ac:	42ae      	cmp	r6, r5
 800f9ae:	dd13      	ble.n	800f9d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f9b0:	460e      	mov	r6, r1
 800f9b2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f9b6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f9ba:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f9be:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f9c2:	601d      	str	r5, [r3, #0]
 800f9c4:	6875      	ldr	r5, [r6, #4]
 800f9c6:	605d      	str	r5, [r3, #4]
 800f9c8:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f9cc:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f9d0:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f9d4:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f9d8:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f9dc:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f9e0:	42ae      	cmp	r6, r5
 800f9e2:	db06      	blt.n	800f9f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f9e4:	d116      	bne.n	800fa14 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f9e6:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f9ea:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f9ee:	45ac      	cmp	ip, r5
 800f9f0:	da10      	bge.n	800fa14 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f9f2:	681d      	ldr	r5, [r3, #0]
 800f9f4:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f9f8:	6005      	str	r5, [r0, #0]
 800f9fa:	685d      	ldr	r5, [r3, #4]
 800f9fc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800fa00:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800fa04:	f8a0 8008 	strh.w	r8, [r0, #8]
 800fa08:	6045      	str	r5, [r0, #4]
 800fa0a:	8146      	strh	r6, [r0, #10]
 800fa0c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800fa10:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800fa14:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800fa18:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800fa1c:	4565      	cmp	r5, ip
 800fa1e:	db06      	blt.n	800fa2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800fa20:	d119      	bne.n	800fa56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fa22:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800fa26:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fa2a:	42ae      	cmp	r6, r5
 800fa2c:	da13      	bge.n	800fa56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fa2e:	460e      	mov	r6, r1
 800fa30:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fa34:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800fa38:	6005      	str	r5, [r0, #0]
 800fa3a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800fa3e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800fa42:	6875      	ldr	r5, [r6, #4]
 800fa44:	6045      	str	r5, [r0, #4]
 800fa46:	f821 9c08 	strh.w	r9, [r1, #-8]
 800fa4a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800fa4e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800fa52:	f821 ec02 	strh.w	lr, [r1, #-2]
 800fa56:	3308      	adds	r3, #8
 800fa58:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800fa5c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800fa60:	45e6      	cmp	lr, ip
 800fa62:	dbf8      	blt.n	800fa56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fa64:	d105      	bne.n	800fa72 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800fa66:	f9b3 6000 	ldrsh.w	r6, [r3]
 800fa6a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fa6e:	42ae      	cmp	r6, r5
 800fa70:	dbf1      	blt.n	800fa56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fa72:	4615      	mov	r5, r2
 800fa74:	3a08      	subs	r2, #8
 800fa76:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800fa7a:	45b4      	cmp	ip, r6
 800fa7c:	dbf9      	blt.n	800fa72 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800fa7e:	d105      	bne.n	800fa8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800fa80:	f9b0 8000 	ldrsh.w	r8, [r0]
 800fa84:	f9b2 6000 	ldrsh.w	r6, [r2]
 800fa88:	45b0      	cmp	r8, r6
 800fa8a:	dbf2      	blt.n	800fa72 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800fa8c:	4293      	cmp	r3, r2
 800fa8e:	f1a5 0608 	sub.w	r6, r5, #8
 800fa92:	d816      	bhi.n	800fac2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800fa94:	f8d6 c000 	ldr.w	ip, [r6]
 800fa98:	f9b3 a000 	ldrsh.w	sl, [r3]
 800fa9c:	f8c3 c000 	str.w	ip, [r3]
 800faa0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800faa4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800faa8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800faac:	f8c3 c004 	str.w	ip, [r3, #4]
 800fab0:	f825 ac08 	strh.w	sl, [r5, #-8]
 800fab4:	f825 ec06 	strh.w	lr, [r5, #-6]
 800fab8:	f825 9c04 	strh.w	r9, [r5, #-4]
 800fabc:	f825 8c02 	strh.w	r8, [r5, #-2]
 800fac0:	e7c9      	b.n	800fa56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fac2:	f8d6 e000 	ldr.w	lr, [r6]
 800fac6:	f9b0 a000 	ldrsh.w	sl, [r0]
 800faca:	f8c0 e000 	str.w	lr, [r0]
 800face:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800fad2:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800fad6:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800fada:	f8c0 e004 	str.w	lr, [r0, #4]
 800fade:	f825 ac08 	strh.w	sl, [r5, #-8]
 800fae2:	f825 cc06 	strh.w	ip, [r5, #-6]
 800fae6:	f825 9c04 	strh.w	r9, [r5, #-4]
 800faea:	f825 8c02 	strh.w	r8, [r5, #-2]
 800faee:	1acd      	subs	r5, r1, r3
 800faf0:	1a16      	subs	r6, r2, r0
 800faf2:	10ed      	asrs	r5, r5, #3
 800faf4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800faf8:	bfb5      	itete	lt
 800fafa:	e9c4 0200 	strdlt	r0, r2, [r4]
 800fafe:	e9c4 3100 	strdge	r3, r1, [r4]
 800fb02:	460a      	movlt	r2, r1
 800fb04:	4603      	movge	r3, r0
 800fb06:	3408      	adds	r4, #8
 800fb08:	4618      	mov	r0, r3
 800fb0a:	4611      	mov	r1, r2
 800fb0c:	e724      	b.n	800f958 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800fb0e:	4299      	cmp	r1, r3
 800fb10:	d928      	bls.n	800fb64 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800fb12:	f1a3 0210 	sub.w	r2, r3, #16
 800fb16:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800fb1a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800fb1e:	45ac      	cmp	ip, r5
 800fb20:	db06      	blt.n	800fb30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800fb22:	d11d      	bne.n	800fb60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800fb24:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800fb28:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800fb2c:	42ae      	cmp	r6, r5
 800fb2e:	da17      	bge.n	800fb60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800fb30:	4615      	mov	r5, r2
 800fb32:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800fb36:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800fb3a:	6116      	str	r6, [r2, #16]
 800fb3c:	686e      	ldr	r6, [r5, #4]
 800fb3e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800fb42:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800fb46:	f8a2 9008 	strh.w	r9, [r2, #8]
 800fb4a:	42a8      	cmp	r0, r5
 800fb4c:	6156      	str	r6, [r2, #20]
 800fb4e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800fb52:	f8a2 800c 	strh.w	r8, [r2, #12]
 800fb56:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800fb5a:	f1a2 0208 	sub.w	r2, r2, #8
 800fb5e:	d1da      	bne.n	800fb16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800fb60:	3308      	adds	r3, #8
 800fb62:	e7d4      	b.n	800fb0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800fb64:	42bc      	cmp	r4, r7
 800fb66:	d903      	bls.n	800fb70 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800fb68:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800fb6c:	3c08      	subs	r4, #8
 800fb6e:	e6f3      	b.n	800f958 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800fb70:	b050      	add	sp, #320	; 0x140
 800fb72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800fb76 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800fb76:	b510      	push	{r4, lr}
 800fb78:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800fb7a:	07da      	lsls	r2, r3, #31
 800fb7c:	4604      	mov	r4, r0
 800fb7e:	d507      	bpl.n	800fb90 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800fb80:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800fb84:	f7ff fe8a 	bl	800f89c <_ZN8touchgfx7Outline6lineToEii>
 800fb88:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800fb8a:	f023 0301 	bic.w	r3, r3, #1
 800fb8e:	6243      	str	r3, [r0, #36]	; 0x24
 800fb90:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fb92:	079b      	lsls	r3, r3, #30
 800fb94:	d521      	bpl.n	800fbda <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800fb96:	6923      	ldr	r3, [r4, #16]
 800fb98:	88d9      	ldrh	r1, [r3, #6]
 800fb9a:	889a      	ldrh	r2, [r3, #4]
 800fb9c:	430a      	orrs	r2, r1
 800fb9e:	d010      	beq.n	800fbc2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fba0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800fba4:	2a00      	cmp	r2, #0
 800fba6:	db0c      	blt.n	800fbc2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fba8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fbaa:	428a      	cmp	r2, r1
 800fbac:	da09      	bge.n	800fbc2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fbae:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800fbb2:	4291      	cmp	r1, r2
 800fbb4:	bf88      	it	hi
 800fbb6:	3308      	addhi	r3, #8
 800fbb8:	f102 0201 	add.w	r2, r2, #1
 800fbbc:	bf88      	it	hi
 800fbbe:	6123      	strhi	r3, [r4, #16]
 800fbc0:	60a2      	str	r2, [r4, #8]
 800fbc2:	68a1      	ldr	r1, [r4, #8]
 800fbc4:	b129      	cbz	r1, 800fbd2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800fbc6:	6863      	ldr	r3, [r4, #4]
 800fbc8:	4299      	cmp	r1, r3
 800fbca:	d802      	bhi.n	800fbd2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800fbcc:	68e0      	ldr	r0, [r4, #12]
 800fbce:	f7ff febc 	bl	800f94a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800fbd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fbd4:	f023 0302 	bic.w	r3, r3, #2
 800fbd8:	6263      	str	r3, [r4, #36]	; 0x24
 800fbda:	68e0      	ldr	r0, [r4, #12]
 800fbdc:	bd10      	pop	{r4, pc}
	...

0800fbe0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800fbe0:	4b02      	ldr	r3, [pc, #8]	; (800fbec <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800fbe2:	6018      	str	r0, [r3, #0]
 800fbe4:	4b02      	ldr	r3, [pc, #8]	; (800fbf0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800fbe6:	6019      	str	r1, [r3, #0]
 800fbe8:	4770      	bx	lr
 800fbea:	bf00      	nop
 800fbec:	20015808 	.word	0x20015808
 800fbf0:	2001580c 	.word	0x2001580c

0800fbf4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800fbf4:	4b01      	ldr	r3, [pc, #4]	; (800fbfc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800fbf6:	6818      	ldr	r0, [r3, #0]
 800fbf8:	4770      	bx	lr
 800fbfa:	bf00      	nop
 800fbfc:	20015808 	.word	0x20015808

0800fc00 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800fc00:	4b01      	ldr	r3, [pc, #4]	; (800fc08 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800fc02:	6818      	ldr	r0, [r3, #0]
 800fc04:	4770      	bx	lr
 800fc06:	bf00      	nop
 800fc08:	2001580c 	.word	0x2001580c

0800fc0c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800fc0c:	b510      	push	{r4, lr}
 800fc0e:	6803      	ldr	r3, [r0, #0]
 800fc10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc12:	460c      	mov	r4, r1
 800fc14:	4798      	blx	r3
 800fc16:	1b03      	subs	r3, r0, r4
 800fc18:	4258      	negs	r0, r3
 800fc1a:	4158      	adcs	r0, r3
 800fc1c:	bd10      	pop	{r4, pc}
	...

0800fc20 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800fc20:	4b01      	ldr	r3, [pc, #4]	; (800fc28 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800fc22:	6019      	str	r1, [r3, #0]
 800fc24:	4770      	bx	lr
 800fc26:	bf00      	nop
 800fc28:	20015810 	.word	0x20015810

0800fc2c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fc2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc30:	4696      	mov	lr, r2
 800fc32:	4605      	mov	r5, r0
 800fc34:	4614      	mov	r4, r2
 800fc36:	460e      	mov	r6, r1
 800fc38:	461f      	mov	r7, r3
 800fc3a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fc3e:	b097      	sub	sp, #92	; 0x5c
 800fc40:	f10d 0c1c 	add.w	ip, sp, #28
 800fc44:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fc48:	f8de 3000 	ldr.w	r3, [lr]
 800fc4c:	f8cc 3000 	str.w	r3, [ip]
 800fc50:	f104 0e14 	add.w	lr, r4, #20
 800fc54:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fc58:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800fc5c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fc60:	f8de 3000 	ldr.w	r3, [lr]
 800fc64:	f8cc 3000 	str.w	r3, [ip]
 800fc68:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800fc6c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fc70:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800fc74:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fc78:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800fc7c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800fc80:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800fc84:	f8de 3000 	ldr.w	r3, [lr]
 800fc88:	f8cc 3000 	str.w	r3, [ip]
 800fc8c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fc8e:	682b      	ldr	r3, [r5, #0]
 800fc90:	9201      	str	r2, [sp, #4]
 800fc92:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fc96:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fc98:	9200      	str	r2, [sp, #0]
 800fc9a:	f8cd 8008 	str.w	r8, [sp, #8]
 800fc9e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800fca2:	aa07      	add	r2, sp, #28
 800fca4:	463b      	mov	r3, r7
 800fca6:	4631      	mov	r1, r6
 800fca8:	4628      	mov	r0, r5
 800fcaa:	47d8      	blx	fp
 800fcac:	46a6      	mov	lr, r4
 800fcae:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fcb2:	f10d 0c1c 	add.w	ip, sp, #28
 800fcb6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fcba:	f8de 3000 	ldr.w	r3, [lr]
 800fcbe:	f8cc 3000 	str.w	r3, [ip]
 800fcc2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800fcc6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fcca:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800fcce:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fcd2:	343c      	adds	r4, #60	; 0x3c
 800fcd4:	f8de 3000 	ldr.w	r3, [lr]
 800fcd8:	f8cc 3000 	str.w	r3, [ip]
 800fcdc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fcde:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800fce2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fce6:	6823      	ldr	r3, [r4, #0]
 800fce8:	f8cc 3000 	str.w	r3, [ip]
 800fcec:	682b      	ldr	r3, [r5, #0]
 800fcee:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fcf2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fcf4:	9201      	str	r2, [sp, #4]
 800fcf6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fcf8:	9200      	str	r2, [sp, #0]
 800fcfa:	f8cd 8008 	str.w	r8, [sp, #8]
 800fcfe:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800fd00:	aa07      	add	r2, sp, #28
 800fd02:	463b      	mov	r3, r7
 800fd04:	4631      	mov	r1, r6
 800fd06:	4628      	mov	r0, r5
 800fd08:	47a0      	blx	r4
 800fd0a:	b017      	add	sp, #92	; 0x5c
 800fd0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fd10 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800fd10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd14:	b08d      	sub	sp, #52	; 0x34
 800fd16:	4688      	mov	r8, r1
 800fd18:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fd1a:	f8d3 c000 	ldr.w	ip, [r3]
 800fd1e:	680f      	ldr	r7, [r1, #0]
 800fd20:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800fd24:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800fd28:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800fd2c:	edd3 6a07 	vldr	s13, [r3, #28]
 800fd30:	9918      	ldr	r1, [sp, #96]	; 0x60
 800fd32:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800fd36:	f9b1 9000 	ldrsh.w	r9, [r1]
 800fd3a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800fd3e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800fd42:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800fd46:	eba7 070c 	sub.w	r7, r7, ip
 800fd4a:	42bc      	cmp	r4, r7
 800fd4c:	bfa8      	it	ge
 800fd4e:	463c      	movge	r4, r7
 800fd50:	ee07 4a90 	vmov	s15, r4
 800fd54:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800fd58:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800fd5c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800fd60:	ee65 4a24 	vmul.f32	s9, s10, s9
 800fd64:	ee25 5a27 	vmul.f32	s10, s10, s15
 800fd68:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800fd6c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800fd70:	eb09 0e0c 	add.w	lr, r9, ip
 800fd74:	4571      	cmp	r1, lr
 800fd76:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800fd7a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800fd7e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800fd82:	ee61 1a87 	vmul.f32	s3, s3, s14
 800fd86:	ee22 2a07 	vmul.f32	s4, s4, s14
 800fd8a:	f340 808d 	ble.w	800fea8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800fd8e:	eba1 060e 	sub.w	r6, r1, lr
 800fd92:	fb96 f5f4 	sdiv	r5, r6, r4
 800fd96:	ee07 5a10 	vmov	s14, r5
 800fd9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fd9e:	2d00      	cmp	r5, #0
 800fda0:	fb04 6615 	mls	r6, r4, r5, r6
 800fda4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800fda8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800fdac:	eea7 1a05 	vfma.f32	s2, s14, s10
 800fdb0:	dd13      	ble.n	800fdda <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800fdb2:	ee70 6a44 	vsub.f32	s13, s0, s8
 800fdb6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800fdba:	eef5 6a40 	vcmp.f32	s13, #0.0
 800fdbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fdc2:	bf18      	it	ne
 800fdc4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800fdc8:	ee31 2a45 	vsub.f32	s4, s2, s10
 800fdcc:	bf08      	it	eq
 800fdce:	eeb0 7a67 	vmoveq.f32	s14, s15
 800fdd2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800fdd6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800fdda:	fb05 f204 	mul.w	r2, r5, r4
 800fdde:	1abf      	subs	r7, r7, r2
 800fde0:	4494      	add	ip, r2
 800fde2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800fde6:	4411      	add	r1, r2
 800fde8:	eb09 020c 	add.w	r2, r9, ip
 800fdec:	443a      	add	r2, r7
 800fdee:	b209      	sxth	r1, r1
 800fdf0:	428a      	cmp	r2, r1
 800fdf2:	bfc4      	itt	gt
 800fdf4:	eba1 0209 	subgt.w	r2, r1, r9
 800fdf8:	eba2 070c 	subgt.w	r7, r2, ip
 800fdfc:	2f00      	cmp	r7, #0
 800fdfe:	dd50      	ble.n	800fea2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800fe00:	fb97 f1f4 	sdiv	r1, r7, r4
 800fe04:	fb04 7211 	mls	r2, r4, r1, r7
 800fe08:	b90a      	cbnz	r2, 800fe0e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800fe0a:	3901      	subs	r1, #1
 800fe0c:	4622      	mov	r2, r4
 800fe0e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800fe12:	6840      	ldr	r0, [r0, #4]
 800fe14:	900b      	str	r0, [sp, #44]	; 0x2c
 800fe16:	f8d0 a000 	ldr.w	sl, [r0]
 800fe1a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800fe1c:	9008      	str	r0, [sp, #32]
 800fe1e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800fe22:	9818      	ldr	r0, [sp, #96]	; 0x60
 800fe24:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800fe28:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800fe2c:	695b      	ldr	r3, [r3, #20]
 800fe2e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800fe30:	445b      	add	r3, fp
 800fe32:	eef0 6a42 	vmov.f32	s13, s4
 800fe36:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800fe3a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800fe3e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800fe42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fe46:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fe4a:	9307      	str	r3, [sp, #28]
 800fe4c:	ee17 7a90 	vmov	r7, s15
 800fe50:	ee73 7a42 	vsub.f32	s15, s6, s4
 800fe54:	eeb0 7a61 	vmov.f32	s14, s3
 800fe58:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fe5c:	ee16 3a90 	vmov	r3, s13
 800fe60:	fb97 f7f4 	sdiv	r7, r7, r4
 800fe64:	ee17 ca90 	vmov	ip, s15
 800fe68:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800fe6c:	fb9c fcf4 	sdiv	ip, ip, r4
 800fe70:	fb0c 3306 	mla	r3, ip, r6, r3
 800fe74:	9302      	str	r3, [sp, #8]
 800fe76:	ee17 3a10 	vmov	r3, s14
 800fe7a:	44b6      	add	lr, r6
 800fe7c:	fb04 e505 	mla	r5, r4, r5, lr
 800fe80:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800fe84:	fb07 3706 	mla	r7, r7, r6, r3
 800fe88:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800fe8c:	e9cd 4700 	strd	r4, r7, [sp]
 800fe90:	2900      	cmp	r1, #0
 800fe92:	bfcc      	ite	gt
 800fe94:	46a1      	movgt	r9, r4
 800fe96:	4691      	movle	r9, r2
 800fe98:	eba9 0306 	sub.w	r3, r9, r6
 800fe9c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800fea0:	47a0      	blx	r4
 800fea2:	b00d      	add	sp, #52	; 0x34
 800fea4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fea8:	2500      	movs	r5, #0
 800feaa:	462e      	mov	r6, r5
 800feac:	e799      	b.n	800fde2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800feb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800feb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feb4:	b0db      	sub	sp, #364	; 0x16c
 800feb6:	461d      	mov	r5, r3
 800feb8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800febc:	930a      	str	r3, [sp, #40]	; 0x28
 800febe:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800fec2:	930b      	str	r3, [sp, #44]	; 0x2c
 800fec4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800fec8:	9310      	str	r3, [sp, #64]	; 0x40
 800feca:	6803      	ldr	r3, [r0, #0]
 800fecc:	910f      	str	r1, [sp, #60]	; 0x3c
 800fece:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800fed0:	9009      	str	r0, [sp, #36]	; 0x24
 800fed2:	4614      	mov	r4, r2
 800fed4:	4629      	mov	r1, r5
 800fed6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800feda:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800fede:	47b8      	blx	r7
 800fee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fee2:	6058      	str	r0, [r3, #4]
 800fee4:	2800      	cmp	r0, #0
 800fee6:	f000 83a1 	beq.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800feea:	682b      	ldr	r3, [r5, #0]
 800feec:	9314      	str	r3, [sp, #80]	; 0x50
 800feee:	686b      	ldr	r3, [r5, #4]
 800fef0:	9315      	str	r3, [sp, #84]	; 0x54
 800fef2:	4bc4      	ldr	r3, [pc, #784]	; (8010204 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800fef4:	ed94 7a02 	vldr	s14, [r4, #8]
 800fef8:	7819      	ldrb	r1, [r3, #0]
 800fefa:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800fefe:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800ff02:	2900      	cmp	r1, #0
 800ff04:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ff08:	bf16      	itet	ne
 800ff0a:	4619      	movne	r1, r3
 800ff0c:	4611      	moveq	r1, r2
 800ff0e:	4613      	movne	r3, r2
 800ff10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff14:	9116      	str	r1, [sp, #88]	; 0x58
 800ff16:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800ff1a:	f240 8387 	bls.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff1e:	ed94 7a07 	vldr	s14, [r4, #28]
 800ff22:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ff26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff2a:	f240 837f 	bls.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff2e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800ff32:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ff36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff3a:	f240 8377 	bls.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff3e:	6822      	ldr	r2, [r4, #0]
 800ff40:	4bb1      	ldr	r3, [pc, #708]	; (8010208 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800ff42:	429a      	cmp	r2, r3
 800ff44:	f2c0 8372 	blt.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff48:	49b0      	ldr	r1, [pc, #704]	; (801020c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800ff4a:	6963      	ldr	r3, [r4, #20]
 800ff4c:	428a      	cmp	r2, r1
 800ff4e:	f300 836d 	bgt.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff52:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ff56:	48ae      	ldr	r0, [pc, #696]	; (8010210 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800ff58:	33ff      	adds	r3, #255	; 0xff
 800ff5a:	4283      	cmp	r3, r0
 800ff5c:	f200 8366 	bhi.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff60:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ff62:	4dac      	ldr	r5, [pc, #688]	; (8010214 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800ff64:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ff68:	33ff      	adds	r3, #255	; 0xff
 800ff6a:	42ab      	cmp	r3, r5
 800ff6c:	f200 835e 	bhi.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff70:	6862      	ldr	r2, [r4, #4]
 800ff72:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800ff76:	33ff      	adds	r3, #255	; 0xff
 800ff78:	4283      	cmp	r3, r0
 800ff7a:	f200 8357 	bhi.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff7e:	69a1      	ldr	r1, [r4, #24]
 800ff80:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800ff84:	33ff      	adds	r3, #255	; 0xff
 800ff86:	4283      	cmp	r3, r0
 800ff88:	f200 8350 	bhi.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff8c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ff8e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800ff92:	30ff      	adds	r0, #255	; 0xff
 800ff94:	42a8      	cmp	r0, r5
 800ff96:	f200 8349 	bhi.w	801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff9a:	428a      	cmp	r2, r1
 800ff9c:	f280 8110 	bge.w	80101c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ffa0:	429a      	cmp	r2, r3
 800ffa2:	f300 8119 	bgt.w	80101d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ffa6:	4299      	cmp	r1, r3
 800ffa8:	f280 811d 	bge.w	80101e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ffac:	2502      	movs	r5, #2
 800ffae:	2701      	movs	r7, #1
 800ffb0:	46a9      	mov	r9, r5
 800ffb2:	46b8      	mov	r8, r7
 800ffb4:	f04f 0a00 	mov.w	sl, #0
 800ffb8:	4621      	mov	r1, r4
 800ffba:	a849      	add	r0, sp, #292	; 0x124
 800ffbc:	f003 fcfe 	bl	80139bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ffc0:	4622      	mov	r2, r4
 800ffc2:	4653      	mov	r3, sl
 800ffc4:	a949      	add	r1, sp, #292	; 0x124
 800ffc6:	f8cd 9000 	str.w	r9, [sp]
 800ffca:	a819      	add	r0, sp, #100	; 0x64
 800ffcc:	f003 fe26 	bl	8013c1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ffd0:	4622      	mov	r2, r4
 800ffd2:	4653      	mov	r3, sl
 800ffd4:	a949      	add	r1, sp, #292	; 0x124
 800ffd6:	f8cd 8000 	str.w	r8, [sp]
 800ffda:	a829      	add	r0, sp, #164	; 0xa4
 800ffdc:	f003 fe1e 	bl	8013c1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ffe0:	4643      	mov	r3, r8
 800ffe2:	4622      	mov	r2, r4
 800ffe4:	a949      	add	r1, sp, #292	; 0x124
 800ffe6:	f8cd 9000 	str.w	r9, [sp]
 800ffea:	a839      	add	r0, sp, #228	; 0xe4
 800ffec:	f003 fe16 	bl	8013c1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fff0:	42af      	cmp	r7, r5
 800fff2:	bfb5      	itete	lt
 800fff4:	2300      	movlt	r3, #0
 800fff6:	2301      	movge	r3, #1
 800fff8:	930e      	strlt	r3, [sp, #56]	; 0x38
 800fffa:	930e      	strge	r3, [sp, #56]	; 0x38
 800fffc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fffe:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010002:	af12      	add	r7, sp, #72	; 0x48
 8010004:	bfb9      	ittee	lt
 8010006:	ad29      	addlt	r5, sp, #164	; 0xa4
 8010008:	ac19      	addlt	r4, sp, #100	; 0x64
 801000a:	ad19      	addge	r5, sp, #100	; 0x64
 801000c:	ac29      	addge	r4, sp, #164	; 0xa4
 801000e:	e887 0003 	stmia.w	r7, {r0, r1}
 8010012:	b928      	cbnz	r0, 8010020 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8010014:	4b80      	ldr	r3, [pc, #512]	; (8010218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8010016:	6818      	ldr	r0, [r3, #0]
 8010018:	6803      	ldr	r3, [r0, #0]
 801001a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801001c:	4798      	blx	r3
 801001e:	6038      	str	r0, [r7, #0]
 8010020:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010022:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010026:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801002a:	930c      	str	r3, [sp, #48]	; 0x30
 801002c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801002e:	6963      	ldr	r3, [r4, #20]
 8010030:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8010032:	440b      	add	r3, r1
 8010034:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010038:	4408      	add	r0, r1
 801003a:	b200      	sxth	r0, r0
 801003c:	4283      	cmp	r3, r0
 801003e:	900d      	str	r0, [sp, #52]	; 0x34
 8010040:	f280 80dd 	bge.w	80101fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8010044:	428b      	cmp	r3, r1
 8010046:	da08      	bge.n	801005a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010048:	2a00      	cmp	r2, #0
 801004a:	dd06      	ble.n	801005a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801004c:	1acb      	subs	r3, r1, r3
 801004e:	429a      	cmp	r2, r3
 8010050:	f2c0 80e4 	blt.w	801021c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8010054:	2b00      	cmp	r3, #0
 8010056:	f300 80e2 	bgt.w	801021e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801005a:	6967      	ldr	r7, [r4, #20]
 801005c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801005e:	443b      	add	r3, r7
 8010060:	461f      	mov	r7, r3
 8010062:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010064:	1bdf      	subs	r7, r3, r7
 8010066:	4297      	cmp	r7, r2
 8010068:	bfa8      	it	ge
 801006a:	4617      	movge	r7, r2
 801006c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8010070:	2f00      	cmp	r7, #0
 8010072:	f340 8166 	ble.w	8010342 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8010076:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010078:	6829      	ldr	r1, [r5, #0]
 801007a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801007e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010082:	6820      	ldr	r0, [r4, #0]
 8010084:	4411      	add	r1, r2
 8010086:	4299      	cmp	r1, r3
 8010088:	dd1a      	ble.n	80100c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801008a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801008e:	440b      	add	r3, r1
 8010090:	4402      	add	r2, r0
 8010092:	b21b      	sxth	r3, r3
 8010094:	429a      	cmp	r2, r3
 8010096:	dc13      	bgt.n	80100c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8010098:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801009a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801009c:	681b      	ldr	r3, [r3, #0]
 801009e:	9206      	str	r2, [sp, #24]
 80100a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80100a2:	9205      	str	r2, [sp, #20]
 80100a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80100a6:	9500      	str	r5, [sp, #0]
 80100a8:	e9cd b203 	strd	fp, r2, [sp, #12]
 80100ac:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80100ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 80100b0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80100b4:	a912      	add	r1, sp, #72	; 0x48
 80100b6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80100ba:	aa49      	add	r2, sp, #292	; 0x124
 80100bc:	4623      	mov	r3, r4
 80100be:	47c8      	blx	r9
 80100c0:	e9d4 2300 	ldrd	r2, r3, [r4]
 80100c4:	441a      	add	r2, r3
 80100c6:	6963      	ldr	r3, [r4, #20]
 80100c8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80100cc:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80100d0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80100d4:	68a1      	ldr	r1, [r4, #8]
 80100d6:	ed94 6a08 	vldr	s12, [r4, #32]
 80100da:	6022      	str	r2, [r4, #0]
 80100dc:	3301      	adds	r3, #1
 80100de:	6163      	str	r3, [r4, #20]
 80100e0:	69a3      	ldr	r3, [r4, #24]
 80100e2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80100e6:	3b01      	subs	r3, #1
 80100e8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80100ec:	61a3      	str	r3, [r4, #24]
 80100ee:	6923      	ldr	r3, [r4, #16]
 80100f0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80100f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80100f8:	edd4 6a07 	vldr	s13, [r4, #28]
 80100fc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010100:	440b      	add	r3, r1
 8010102:	68e1      	ldr	r1, [r4, #12]
 8010104:	6123      	str	r3, [r4, #16]
 8010106:	ee76 6a86 	vadd.f32	s13, s13, s12
 801010a:	428b      	cmp	r3, r1
 801010c:	edc4 6a07 	vstr	s13, [r4, #28]
 8010110:	db15      	blt.n	801013e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8010112:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010116:	ee76 6a26 	vadd.f32	s13, s12, s13
 801011a:	3201      	adds	r2, #1
 801011c:	edc4 6a07 	vstr	s13, [r4, #28]
 8010120:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010124:	6022      	str	r2, [r4, #0]
 8010126:	ee36 7a87 	vadd.f32	s14, s13, s14
 801012a:	1a5b      	subs	r3, r3, r1
 801012c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010130:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010134:	6123      	str	r3, [r4, #16]
 8010136:	ee77 7a27 	vadd.f32	s15, s14, s15
 801013a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801013e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010142:	441a      	add	r2, r3
 8010144:	696b      	ldr	r3, [r5, #20]
 8010146:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801014a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801014e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8010152:	68a9      	ldr	r1, [r5, #8]
 8010154:	ed95 6a08 	vldr	s12, [r5, #32]
 8010158:	602a      	str	r2, [r5, #0]
 801015a:	3301      	adds	r3, #1
 801015c:	616b      	str	r3, [r5, #20]
 801015e:	69ab      	ldr	r3, [r5, #24]
 8010160:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010164:	3b01      	subs	r3, #1
 8010166:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801016a:	61ab      	str	r3, [r5, #24]
 801016c:	692b      	ldr	r3, [r5, #16]
 801016e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010172:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010176:	edd5 6a07 	vldr	s13, [r5, #28]
 801017a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801017e:	440b      	add	r3, r1
 8010180:	68e9      	ldr	r1, [r5, #12]
 8010182:	612b      	str	r3, [r5, #16]
 8010184:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010188:	428b      	cmp	r3, r1
 801018a:	edc5 6a07 	vstr	s13, [r5, #28]
 801018e:	db15      	blt.n	80101bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8010190:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8010194:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010198:	3201      	adds	r2, #1
 801019a:	edc5 6a07 	vstr	s13, [r5, #28]
 801019e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80101a2:	602a      	str	r2, [r5, #0]
 80101a4:	ee36 7a87 	vadd.f32	s14, s13, s14
 80101a8:	1a5b      	subs	r3, r3, r1
 80101aa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80101ae:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80101b2:	612b      	str	r3, [r5, #16]
 80101b4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80101b8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80101bc:	3f01      	subs	r7, #1
 80101be:	e757      	b.n	8010070 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80101c0:	4299      	cmp	r1, r3
 80101c2:	dc13      	bgt.n	80101ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80101c4:	429a      	cmp	r2, r3
 80101c6:	da14      	bge.n	80101f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80101c8:	2502      	movs	r5, #2
 80101ca:	2703      	movs	r7, #3
 80101cc:	46a9      	mov	r9, r5
 80101ce:	f04f 0800 	mov.w	r8, #0
 80101d2:	f04f 0a01 	mov.w	sl, #1
 80101d6:	e6ef      	b.n	800ffb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80101d8:	2501      	movs	r5, #1
 80101da:	2700      	movs	r7, #0
 80101dc:	46a9      	mov	r9, r5
 80101de:	46b8      	mov	r8, r7
 80101e0:	f04f 0a02 	mov.w	sl, #2
 80101e4:	e6e8      	b.n	800ffb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80101e6:	2501      	movs	r5, #1
 80101e8:	2702      	movs	r7, #2
 80101ea:	e6e1      	b.n	800ffb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80101ec:	2500      	movs	r5, #0
 80101ee:	2701      	movs	r7, #1
 80101f0:	e7f4      	b.n	80101dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80101f2:	2702      	movs	r7, #2
 80101f4:	2503      	movs	r5, #3
 80101f6:	f04f 0900 	mov.w	r9, #0
 80101fa:	46b8      	mov	r8, r7
 80101fc:	e7e9      	b.n	80101d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80101fe:	4613      	mov	r3, r2
 8010200:	e728      	b.n	8010054 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8010202:	bf00      	nop
 8010204:	200157f8 	.word	0x200157f8
 8010208:	fffd8f01 	.word	0xfffd8f01
 801020c:	00027100 	.word	0x00027100
 8010210:	0004e1ff 	.word	0x0004e1ff
 8010214:	0004e1fe 	.word	0x0004e1fe
 8010218:	20015800 	.word	0x20015800
 801021c:	4613      	mov	r3, r2
 801021e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010220:	9111      	str	r1, [sp, #68]	; 0x44
 8010222:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8010226:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 801022a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 801022c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8010230:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8010234:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8010238:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 801023c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8010240:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8010244:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8010248:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 801024c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8010250:	469e      	mov	lr, r3
 8010252:	469c      	mov	ip, r3
 8010254:	f04f 0900 	mov.w	r9, #0
 8010258:	f1bc 0f00 	cmp.w	ip, #0
 801025c:	d147      	bne.n	80102ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801025e:	eb03 0c07 	add.w	ip, r3, r7
 8010262:	1ad7      	subs	r7, r2, r3
 8010264:	f1b9 0f00 	cmp.w	r9, #0
 8010268:	d009      	beq.n	801027e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801026a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801026e:	9029      	str	r0, [sp, #164]	; 0xa4
 8010270:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8010274:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8010278:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 801027c:	912d      	str	r1, [sp, #180]	; 0xb4
 801027e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8010280:	9111      	str	r1, [sp, #68]	; 0x44
 8010282:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010286:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801028a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801028e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8010292:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8010296:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801029a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801029e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80102a2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80102a6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80102aa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80102ae:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80102b2:	f04f 0800 	mov.w	r8, #0
 80102b6:	f1be 0f00 	cmp.w	lr, #0
 80102ba:	d031      	beq.n	8010320 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80102bc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80102be:	4431      	add	r1, r6
 80102c0:	4549      	cmp	r1, r9
 80102c2:	4450      	add	r0, sl
 80102c4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80102c8:	ee37 7a04 	vadd.f32	s14, s14, s8
 80102cc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80102d0:	db08      	blt.n	80102e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80102d2:	ee77 7a85 	vadd.f32	s15, s15, s10
 80102d6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80102da:	ee37 7a06 	vadd.f32	s14, s14, s12
 80102de:	3001      	adds	r0, #1
 80102e0:	eba1 0109 	sub.w	r1, r1, r9
 80102e4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80102e8:	f04f 0801 	mov.w	r8, #1
 80102ec:	e7e3      	b.n	80102b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80102ee:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80102f0:	4431      	add	r1, r6
 80102f2:	4541      	cmp	r1, r8
 80102f4:	4450      	add	r0, sl
 80102f6:	ee37 7a24 	vadd.f32	s14, s14, s9
 80102fa:	ee77 7a84 	vadd.f32	s15, s15, s8
 80102fe:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010302:	db08      	blt.n	8010316 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8010304:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010308:	ee37 7a25 	vadd.f32	s14, s14, s11
 801030c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010310:	3001      	adds	r0, #1
 8010312:	eba1 0108 	sub.w	r1, r1, r8
 8010316:	f10c 3cff 	add.w	ip, ip, #4294967295
 801031a:	f04f 0901 	mov.w	r9, #1
 801031e:	e79b      	b.n	8010258 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010320:	449c      	add	ip, r3
 8010322:	1aff      	subs	r7, r7, r3
 8010324:	f1b8 0f00 	cmp.w	r8, #0
 8010328:	d009      	beq.n	801033e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801032a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801032e:	9019      	str	r0, [sp, #100]	; 0x64
 8010330:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010334:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010338:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801033c:	911d      	str	r1, [sp, #116]	; 0x74
 801033e:	1ad2      	subs	r2, r2, r3
 8010340:	e68b      	b.n	801005a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010342:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010344:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8010346:	2b00      	cmp	r3, #0
 8010348:	f000 80d1 	beq.w	80104ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801034c:	ad19      	add	r5, sp, #100	; 0x64
 801034e:	ac39      	add	r4, sp, #228	; 0xe4
 8010350:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010352:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010356:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801035a:	930c      	str	r3, [sp, #48]	; 0x30
 801035c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801035e:	6963      	ldr	r3, [r4, #20]
 8010360:	440b      	add	r3, r1
 8010362:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010366:	4408      	add	r0, r1
 8010368:	b200      	sxth	r0, r0
 801036a:	4283      	cmp	r3, r0
 801036c:	900d      	str	r0, [sp, #52]	; 0x34
 801036e:	f280 80c1 	bge.w	80104f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8010372:	428b      	cmp	r3, r1
 8010374:	da08      	bge.n	8010388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010376:	2a00      	cmp	r2, #0
 8010378:	dd06      	ble.n	8010388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801037a:	1acb      	subs	r3, r1, r3
 801037c:	429a      	cmp	r2, r3
 801037e:	f2c0 80bb 	blt.w	80104f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8010382:	2b00      	cmp	r3, #0
 8010384:	f300 80b9 	bgt.w	80104fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8010388:	6967      	ldr	r7, [r4, #20]
 801038a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801038c:	443b      	add	r3, r7
 801038e:	461f      	mov	r7, r3
 8010390:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010392:	1bdf      	subs	r7, r3, r7
 8010394:	4297      	cmp	r7, r2
 8010396:	bfa8      	it	ge
 8010398:	4617      	movge	r7, r2
 801039a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801039e:	2f00      	cmp	r7, #0
 80103a0:	f340 813c 	ble.w	801061c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80103a4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80103a6:	6829      	ldr	r1, [r5, #0]
 80103a8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80103ac:	f9bb 3000 	ldrsh.w	r3, [fp]
 80103b0:	6820      	ldr	r0, [r4, #0]
 80103b2:	4411      	add	r1, r2
 80103b4:	4299      	cmp	r1, r3
 80103b6:	dd1a      	ble.n	80103ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80103b8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80103bc:	440b      	add	r3, r1
 80103be:	4402      	add	r2, r0
 80103c0:	b21b      	sxth	r3, r3
 80103c2:	429a      	cmp	r2, r3
 80103c4:	dc13      	bgt.n	80103ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80103c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80103c8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80103ca:	681b      	ldr	r3, [r3, #0]
 80103cc:	9206      	str	r2, [sp, #24]
 80103ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80103d0:	9205      	str	r2, [sp, #20]
 80103d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80103d4:	9500      	str	r5, [sp, #0]
 80103d6:	e9cd b203 	strd	fp, r2, [sp, #12]
 80103da:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80103dc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80103de:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80103e2:	a912      	add	r1, sp, #72	; 0x48
 80103e4:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80103e8:	aa49      	add	r2, sp, #292	; 0x124
 80103ea:	4623      	mov	r3, r4
 80103ec:	47c8      	blx	r9
 80103ee:	e9d4 2300 	ldrd	r2, r3, [r4]
 80103f2:	441a      	add	r2, r3
 80103f4:	6963      	ldr	r3, [r4, #20]
 80103f6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80103fa:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80103fe:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010402:	68a1      	ldr	r1, [r4, #8]
 8010404:	ed94 6a08 	vldr	s12, [r4, #32]
 8010408:	6022      	str	r2, [r4, #0]
 801040a:	3301      	adds	r3, #1
 801040c:	6163      	str	r3, [r4, #20]
 801040e:	69a3      	ldr	r3, [r4, #24]
 8010410:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010414:	3b01      	subs	r3, #1
 8010416:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801041a:	61a3      	str	r3, [r4, #24]
 801041c:	6923      	ldr	r3, [r4, #16]
 801041e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010422:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010426:	edd4 6a07 	vldr	s13, [r4, #28]
 801042a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801042e:	440b      	add	r3, r1
 8010430:	68e1      	ldr	r1, [r4, #12]
 8010432:	6123      	str	r3, [r4, #16]
 8010434:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010438:	428b      	cmp	r3, r1
 801043a:	edc4 6a07 	vstr	s13, [r4, #28]
 801043e:	db15      	blt.n	801046c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010440:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010444:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010448:	3201      	adds	r2, #1
 801044a:	edc4 6a07 	vstr	s13, [r4, #28]
 801044e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010452:	6022      	str	r2, [r4, #0]
 8010454:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010458:	1a5b      	subs	r3, r3, r1
 801045a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801045e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010462:	6123      	str	r3, [r4, #16]
 8010464:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010468:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801046c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010470:	441a      	add	r2, r3
 8010472:	696b      	ldr	r3, [r5, #20]
 8010474:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8010478:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801047c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8010480:	68a9      	ldr	r1, [r5, #8]
 8010482:	ed95 6a08 	vldr	s12, [r5, #32]
 8010486:	602a      	str	r2, [r5, #0]
 8010488:	3301      	adds	r3, #1
 801048a:	616b      	str	r3, [r5, #20]
 801048c:	69ab      	ldr	r3, [r5, #24]
 801048e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010492:	3b01      	subs	r3, #1
 8010494:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8010498:	61ab      	str	r3, [r5, #24]
 801049a:	692b      	ldr	r3, [r5, #16]
 801049c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80104a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80104a4:	edd5 6a07 	vldr	s13, [r5, #28]
 80104a8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80104ac:	440b      	add	r3, r1
 80104ae:	68e9      	ldr	r1, [r5, #12]
 80104b0:	612b      	str	r3, [r5, #16]
 80104b2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80104b6:	428b      	cmp	r3, r1
 80104b8:	edc5 6a07 	vstr	s13, [r5, #28]
 80104bc:	db15      	blt.n	80104ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80104be:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80104c2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80104c6:	3201      	adds	r2, #1
 80104c8:	edc5 6a07 	vstr	s13, [r5, #28]
 80104cc:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80104d0:	602a      	str	r2, [r5, #0]
 80104d2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80104d6:	1a5b      	subs	r3, r3, r1
 80104d8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80104dc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80104e0:	612b      	str	r3, [r5, #16]
 80104e2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80104e6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80104ea:	3f01      	subs	r7, #1
 80104ec:	e757      	b.n	801039e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80104ee:	ad39      	add	r5, sp, #228	; 0xe4
 80104f0:	ac19      	add	r4, sp, #100	; 0x64
 80104f2:	e72d      	b.n	8010350 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80104f4:	4613      	mov	r3, r2
 80104f6:	e744      	b.n	8010382 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80104f8:	4613      	mov	r3, r2
 80104fa:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80104fe:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010500:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010504:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010508:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801050c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010510:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010514:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010518:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801051c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801051e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010522:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010526:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801052a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801052e:	960e      	str	r6, [sp, #56]	; 0x38
 8010530:	469e      	mov	lr, r3
 8010532:	461f      	mov	r7, r3
 8010534:	f04f 0900 	mov.w	r9, #0
 8010538:	2f00      	cmp	r7, #0
 801053a:	d146      	bne.n	80105ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801053c:	449c      	add	ip, r3
 801053e:	1ad7      	subs	r7, r2, r3
 8010540:	f1b9 0f00 	cmp.w	r9, #0
 8010544:	d009      	beq.n	801055a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010546:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801054a:	9039      	str	r0, [sp, #228]	; 0xe4
 801054c:	913d      	str	r1, [sp, #244]	; 0xf4
 801054e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010552:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8010556:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801055a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801055c:	910e      	str	r1, [sp, #56]	; 0x38
 801055e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010562:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8010566:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801056a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801056e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8010572:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8010576:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801057a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801057e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8010582:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8010586:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801058a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801058e:	f04f 0800 	mov.w	r8, #0
 8010592:	f1be 0f00 	cmp.w	lr, #0
 8010596:	d030      	beq.n	80105fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8010598:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801059a:	4431      	add	r1, r6
 801059c:	4549      	cmp	r1, r9
 801059e:	4450      	add	r0, sl
 80105a0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80105a4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80105a8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80105ac:	db08      	blt.n	80105c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80105ae:	ee77 7a85 	vadd.f32	s15, s15, s10
 80105b2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80105b6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80105ba:	3001      	adds	r0, #1
 80105bc:	eba1 0109 	sub.w	r1, r1, r9
 80105c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80105c4:	f04f 0801 	mov.w	r8, #1
 80105c8:	e7e3      	b.n	8010592 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80105ca:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80105cc:	4431      	add	r1, r6
 80105ce:	4541      	cmp	r1, r8
 80105d0:	4450      	add	r0, sl
 80105d2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80105d6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80105da:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80105de:	db08      	blt.n	80105f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80105e0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80105e4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80105e8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80105ec:	3001      	adds	r0, #1
 80105ee:	eba1 0108 	sub.w	r1, r1, r8
 80105f2:	3f01      	subs	r7, #1
 80105f4:	f04f 0901 	mov.w	r9, #1
 80105f8:	e79e      	b.n	8010538 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80105fa:	449c      	add	ip, r3
 80105fc:	1aff      	subs	r7, r7, r3
 80105fe:	f1b8 0f00 	cmp.w	r8, #0
 8010602:	d009      	beq.n	8010618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010604:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010608:	9019      	str	r0, [sp, #100]	; 0x64
 801060a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801060e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010612:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010616:	911d      	str	r1, [sp, #116]	; 0x74
 8010618:	1ad2      	subs	r2, r2, r3
 801061a:	e6b5      	b.n	8010388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801061c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801061e:	681b      	ldr	r3, [r3, #0]
 8010620:	b923      	cbnz	r3, 801062c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010622:	4b04      	ldr	r3, [pc, #16]	; (8010634 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010624:	6818      	ldr	r0, [r3, #0]
 8010626:	6803      	ldr	r3, [r0, #0]
 8010628:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801062a:	4798      	blx	r3
 801062c:	b05b      	add	sp, #364	; 0x16c
 801062e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010632:	bf00      	nop
 8010634:	20015800 	.word	0x20015800

08010638 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010638:	b570      	push	{r4, r5, r6, lr}
 801063a:	4604      	mov	r4, r0
 801063c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010640:	9804      	ldr	r0, [sp, #16]
 8010642:	6061      	str	r1, [r4, #4]
 8010644:	2500      	movs	r5, #0
 8010646:	8025      	strh	r5, [r4, #0]
 8010648:	7223      	strb	r3, [r4, #8]
 801064a:	7266      	strb	r6, [r4, #9]
 801064c:	60e0      	str	r0, [r4, #12]
 801064e:	8222      	strh	r2, [r4, #16]
 8010650:	8265      	strh	r5, [r4, #18]
 8010652:	82a5      	strh	r5, [r4, #20]
 8010654:	82e5      	strh	r5, [r4, #22]
 8010656:	8325      	strh	r5, [r4, #24]
 8010658:	8365      	strh	r5, [r4, #26]
 801065a:	83a5      	strh	r5, [r4, #28]
 801065c:	77a5      	strb	r5, [r4, #30]
 801065e:	b32e      	cbz	r6, 80106ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010660:	6803      	ldr	r3, [r0, #0]
 8010662:	695b      	ldr	r3, [r3, #20]
 8010664:	4798      	blx	r3
 8010666:	4606      	mov	r6, r0
 8010668:	b300      	cbz	r0, 80106ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801066a:	68e0      	ldr	r0, [r4, #12]
 801066c:	6803      	ldr	r3, [r0, #0]
 801066e:	4631      	mov	r1, r6
 8010670:	68db      	ldr	r3, [r3, #12]
 8010672:	4798      	blx	r3
 8010674:	4605      	mov	r5, r0
 8010676:	b1c8      	cbz	r0, 80106ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010678:	7b43      	ldrb	r3, [r0, #13]
 801067a:	7a82      	ldrb	r2, [r0, #10]
 801067c:	005b      	lsls	r3, r3, #1
 801067e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010682:	4313      	orrs	r3, r2
 8010684:	83a3      	strh	r3, [r4, #28]
 8010686:	7a63      	ldrb	r3, [r4, #9]
 8010688:	2b04      	cmp	r3, #4
 801068a:	d10f      	bne.n	80106ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801068c:	68e0      	ldr	r0, [r4, #12]
 801068e:	6803      	ldr	r3, [r0, #0]
 8010690:	462a      	mov	r2, r5
 8010692:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010694:	4631      	mov	r1, r6
 8010696:	4798      	blx	r3
 8010698:	7b6b      	ldrb	r3, [r5, #13]
 801069a:	005b      	lsls	r3, r3, #1
 801069c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80106a0:	7aab      	ldrb	r3, [r5, #10]
 80106a2:	4313      	orrs	r3, r2
 80106a4:	4418      	add	r0, r3
 80106a6:	8ba3      	ldrh	r3, [r4, #28]
 80106a8:	4418      	add	r0, r3
 80106aa:	83a0      	strh	r0, [r4, #28]
 80106ac:	4620      	mov	r0, r4
 80106ae:	bd70      	pop	{r4, r5, r6, pc}

080106b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80106b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106b4:	2400      	movs	r4, #0
 80106b6:	b085      	sub	sp, #20
 80106b8:	4681      	mov	r9, r0
 80106ba:	4688      	mov	r8, r1
 80106bc:	4692      	mov	sl, r2
 80106be:	469b      	mov	fp, r3
 80106c0:	4627      	mov	r7, r4
 80106c2:	4625      	mov	r5, r4
 80106c4:	4626      	mov	r6, r4
 80106c6:	4554      	cmp	r4, sl
 80106c8:	da2a      	bge.n	8010720 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80106ca:	2300      	movs	r3, #0
 80106cc:	9303      	str	r3, [sp, #12]
 80106ce:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80106d2:	429d      	cmp	r5, r3
 80106d4:	d004      	beq.n	80106e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80106d6:	f242 030b 	movw	r3, #8203	; 0x200b
 80106da:	429d      	cmp	r5, r3
 80106dc:	bf18      	it	ne
 80106de:	462f      	movne	r7, r5
 80106e0:	ab03      	add	r3, sp, #12
 80106e2:	4642      	mov	r2, r8
 80106e4:	4659      	mov	r1, fp
 80106e6:	4648      	mov	r0, r9
 80106e8:	f002 ff7e 	bl	80135e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80106ec:	4605      	mov	r5, r0
 80106ee:	b1b8      	cbz	r0, 8010720 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80106f0:	280a      	cmp	r0, #10
 80106f2:	d015      	beq.n	8010720 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80106f4:	9a03      	ldr	r2, [sp, #12]
 80106f6:	b18a      	cbz	r2, 801071c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80106f8:	7b50      	ldrb	r0, [r2, #13]
 80106fa:	7a93      	ldrb	r3, [r2, #10]
 80106fc:	8895      	ldrh	r5, [r2, #4]
 80106fe:	0040      	lsls	r0, r0, #1
 8010700:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010704:	4303      	orrs	r3, r0
 8010706:	9301      	str	r3, [sp, #4]
 8010708:	f8d8 3000 	ldr.w	r3, [r8]
 801070c:	4639      	mov	r1, r7
 801070e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010710:	4640      	mov	r0, r8
 8010712:	4798      	blx	r3
 8010714:	9b01      	ldr	r3, [sp, #4]
 8010716:	4418      	add	r0, r3
 8010718:	4406      	add	r6, r0
 801071a:	b2b6      	uxth	r6, r6
 801071c:	3401      	adds	r4, #1
 801071e:	e7d2      	b.n	80106c6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010720:	4630      	mov	r0, r6
 8010722:	b005      	add	sp, #20
 8010724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010728 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010728:	2a02      	cmp	r2, #2
 801072a:	b530      	push	{r4, r5, lr}
 801072c:	d011      	beq.n	8010752 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801072e:	2a03      	cmp	r2, #3
 8010730:	d01c      	beq.n	801076c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010732:	2a01      	cmp	r2, #1
 8010734:	d10c      	bne.n	8010750 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010736:	888b      	ldrh	r3, [r1, #4]
 8010738:	8801      	ldrh	r1, [r0, #0]
 801073a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801073e:	8844      	ldrh	r4, [r0, #2]
 8010740:	8004      	strh	r4, [r0, #0]
 8010742:	1a5b      	subs	r3, r3, r1
 8010744:	1a9b      	subs	r3, r3, r2
 8010746:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801074a:	8043      	strh	r3, [r0, #2]
 801074c:	8081      	strh	r1, [r0, #4]
 801074e:	80c2      	strh	r2, [r0, #6]
 8010750:	bd30      	pop	{r4, r5, pc}
 8010752:	88cb      	ldrh	r3, [r1, #6]
 8010754:	8842      	ldrh	r2, [r0, #2]
 8010756:	1a9b      	subs	r3, r3, r2
 8010758:	88c2      	ldrh	r2, [r0, #6]
 801075a:	1a9b      	subs	r3, r3, r2
 801075c:	888a      	ldrh	r2, [r1, #4]
 801075e:	8801      	ldrh	r1, [r0, #0]
 8010760:	8043      	strh	r3, [r0, #2]
 8010762:	1a52      	subs	r2, r2, r1
 8010764:	8881      	ldrh	r1, [r0, #4]
 8010766:	1a52      	subs	r2, r2, r1
 8010768:	8002      	strh	r2, [r0, #0]
 801076a:	e7f1      	b.n	8010750 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801076c:	88cb      	ldrh	r3, [r1, #6]
 801076e:	8841      	ldrh	r1, [r0, #2]
 8010770:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010774:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010778:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801077c:	8045      	strh	r5, [r0, #2]
 801077e:	1a5b      	subs	r3, r3, r1
 8010780:	1a9b      	subs	r3, r3, r2
 8010782:	8003      	strh	r3, [r0, #0]
 8010784:	8082      	strh	r2, [r0, #4]
 8010786:	80c4      	strh	r4, [r0, #6]
 8010788:	e7e2      	b.n	8010750 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801078a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801078a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801078e:	b09f      	sub	sp, #124	; 0x7c
 8010790:	9116      	str	r1, [sp, #88]	; 0x58
 8010792:	9317      	str	r3, [sp, #92]	; 0x5c
 8010794:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010796:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010798:	8809      	ldrh	r1, [r1, #0]
 801079a:	889b      	ldrh	r3, [r3, #4]
 801079c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80107a0:	9212      	str	r2, [sp, #72]	; 0x48
 80107a2:	440b      	add	r3, r1
 80107a4:	b21b      	sxth	r3, r3
 80107a6:	9310      	str	r3, [sp, #64]	; 0x40
 80107a8:	f8d8 3000 	ldr.w	r3, [r8]
 80107ac:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80107b0:	7a59      	ldrb	r1, [r3, #9]
 80107b2:	7a1b      	ldrb	r3, [r3, #8]
 80107b4:	9011      	str	r0, [sp, #68]	; 0x44
 80107b6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80107ba:	9114      	str	r1, [sp, #80]	; 0x50
 80107bc:	9315      	str	r3, [sp, #84]	; 0x54
 80107be:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 80107c2:	2a00      	cmp	r2, #0
 80107c4:	d06a      	beq.n	801089c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80107c6:	f898 3010 	ldrb.w	r3, [r8, #16]
 80107ca:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80107cc:	2b04      	cmp	r3, #4
 80107ce:	bf14      	ite	ne
 80107d0:	2301      	movne	r3, #1
 80107d2:	2302      	moveq	r3, #2
 80107d4:	4413      	add	r3, r2
 80107d6:	f04f 0900 	mov.w	r9, #0
 80107da:	930f      	str	r3, [sp, #60]	; 0x3c
 80107dc:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80107e0:	464c      	mov	r4, r9
 80107e2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80107e6:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80107ea:	4293      	cmp	r3, r2
 80107ec:	f280 808f 	bge.w	801090e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80107f0:	2300      	movs	r3, #0
 80107f2:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80107f6:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80107fa:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80107fe:	429c      	cmp	r4, r3
 8010800:	d006      	beq.n	8010810 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010802:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010804:	f242 020b 	movw	r2, #8203	; 0x200b
 8010808:	4294      	cmp	r4, r2
 801080a:	bf18      	it	ne
 801080c:	4623      	movne	r3, r4
 801080e:	930d      	str	r3, [sp, #52]	; 0x34
 8010810:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010812:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010814:	f8d8 2000 	ldr.w	r2, [r8]
 8010818:	428b      	cmp	r3, r1
 801081a:	db41      	blt.n	80108a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801081c:	6813      	ldr	r3, [r2, #0]
 801081e:	4610      	mov	r0, r2
 8010820:	695b      	ldr	r3, [r3, #20]
 8010822:	4798      	blx	r3
 8010824:	4604      	mov	r4, r0
 8010826:	f8d8 0000 	ldr.w	r0, [r8]
 801082a:	6803      	ldr	r3, [r0, #0]
 801082c:	aa1d      	add	r2, sp, #116	; 0x74
 801082e:	689e      	ldr	r6, [r3, #8]
 8010830:	4621      	mov	r1, r4
 8010832:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010836:	47b0      	blx	r6
 8010838:	901c      	str	r0, [sp, #112]	; 0x70
 801083a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801083e:	429c      	cmp	r4, r3
 8010840:	f000 80e9 	beq.w	8010a16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010844:	f242 030b 	movw	r3, #8203	; 0x200b
 8010848:	429c      	cmp	r4, r3
 801084a:	f000 80e4 	beq.w	8010a16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801084e:	2c00      	cmp	r4, #0
 8010850:	f000 80f6 	beq.w	8010a40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010854:	2c0a      	cmp	r4, #10
 8010856:	d060      	beq.n	801091a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010858:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801085a:	b36a      	cbz	r2, 80108b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801085c:	8894      	ldrh	r4, [r2, #4]
 801085e:	f1bb 0f00 	cmp.w	fp, #0
 8010862:	d03b      	beq.n	80108dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010864:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010868:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801086c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8010870:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010874:	f1bb 0f01 	cmp.w	fp, #1
 8010878:	ea49 0903 	orr.w	r9, r9, r3
 801087c:	d134      	bne.n	80108e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801087e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010880:	eba5 0509 	sub.w	r5, r5, r9
 8010884:	2b00      	cmp	r3, #0
 8010886:	d14f      	bne.n	8010928 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010888:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801088a:	eb09 0305 	add.w	r3, r9, r5
 801088e:	4413      	add	r3, r2
 8010890:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8010892:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010896:	4293      	cmp	r3, r2
 8010898:	da51      	bge.n	801093e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801089a:	e038      	b.n	801090e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801089c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801089e:	e79a      	b.n	80107d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80108a0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80108a4:	9301      	str	r3, [sp, #4]
 80108a6:	ab1d      	add	r3, sp, #116	; 0x74
 80108a8:	9300      	str	r3, [sp, #0]
 80108aa:	4659      	mov	r1, fp
 80108ac:	ab1c      	add	r3, sp, #112	; 0x70
 80108ae:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80108b0:	f002 fee3 	bl	801367a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80108b4:	4604      	mov	r4, r0
 80108b6:	e7c0      	b.n	801083a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80108b8:	f8d8 0000 	ldr.w	r0, [r8]
 80108bc:	6803      	ldr	r3, [r0, #0]
 80108be:	691b      	ldr	r3, [r3, #16]
 80108c0:	4798      	blx	r3
 80108c2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80108c6:	4298      	cmp	r0, r3
 80108c8:	f000 80a5 	beq.w	8010a16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80108cc:	f242 030b 	movw	r3, #8203	; 0x200b
 80108d0:	4298      	cmp	r0, r3
 80108d2:	f000 80a0 	beq.w	8010a16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80108d6:	f1bb 0f00 	cmp.w	fp, #0
 80108da:	d100      	bne.n	80108de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80108dc:	444d      	add	r5, r9
 80108de:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80108e0:	2a00      	cmp	r2, #0
 80108e2:	d1bf      	bne.n	8010864 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80108e4:	4691      	mov	r9, r2
 80108e6:	e096      	b.n	8010a16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80108e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80108ea:	2b00      	cmp	r3, #0
 80108ec:	f000 80aa 	beq.w	8010a44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80108f0:	f1bb 0f00 	cmp.w	fp, #0
 80108f4:	d118      	bne.n	8010928 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80108f6:	f8d8 0000 	ldr.w	r0, [r8]
 80108fa:	990d      	ldr	r1, [sp, #52]	; 0x34
 80108fc:	6803      	ldr	r3, [r0, #0]
 80108fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010900:	4798      	blx	r3
 8010902:	4405      	add	r5, r0
 8010904:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010906:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010908:	1aeb      	subs	r3, r5, r3
 801090a:	4293      	cmp	r3, r2
 801090c:	dd17      	ble.n	801093e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801090e:	2c00      	cmp	r4, #0
 8010910:	f000 8096 	beq.w	8010a40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010914:	2c0a      	cmp	r4, #10
 8010916:	f040 8084 	bne.w	8010a22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801091a:	240a      	movs	r4, #10
 801091c:	fab4 f084 	clz	r0, r4
 8010920:	0940      	lsrs	r0, r0, #5
 8010922:	b01f      	add	sp, #124	; 0x7c
 8010924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010928:	f8d8 0000 	ldr.w	r0, [r8]
 801092c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801092e:	6803      	ldr	r3, [r0, #0]
 8010930:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010932:	4798      	blx	r3
 8010934:	f1bb 0f01 	cmp.w	fp, #1
 8010938:	eba5 0500 	sub.w	r5, r5, r0
 801093c:	d0a4      	beq.n	8010888 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801093e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010940:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010942:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010946:	f9b3 6000 	ldrsh.w	r6, [r3]
 801094a:	7b43      	ldrb	r3, [r0, #13]
 801094c:	015b      	lsls	r3, r3, #5
 801094e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010952:	7983      	ldrb	r3, [r0, #6]
 8010954:	4429      	add	r1, r5
 8010956:	4313      	orrs	r3, r2
 8010958:	440b      	add	r3, r1
 801095a:	42b3      	cmp	r3, r6
 801095c:	db5b      	blt.n	8010a16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801095e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010960:	4299      	cmp	r1, r3
 8010962:	da58      	bge.n	8010a16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010964:	f8d8 0000 	ldr.w	r0, [r8]
 8010968:	6803      	ldr	r3, [r0, #0]
 801096a:	42ae      	cmp	r6, r5
 801096c:	bfc8      	it	gt
 801096e:	1b76      	subgt	r6, r6, r5
 8010970:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010972:	bfcc      	ite	gt
 8010974:	b2b6      	uxthgt	r6, r6
 8010976:	2600      	movle	r6, #0
 8010978:	4798      	blx	r3
 801097a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801097c:	7b5a      	ldrb	r2, [r3, #13]
 801097e:	00d1      	lsls	r1, r2, #3
 8010980:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8010984:	7a19      	ldrb	r1, [r3, #8]
 8010986:	4339      	orrs	r1, r7
 8010988:	0657      	lsls	r7, r2, #25
 801098a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 801098c:	bf44      	itt	mi
 801098e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8010992:	b209      	sxthmi	r1, r1
 8010994:	19c7      	adds	r7, r0, r7
 8010996:	1a7f      	subs	r7, r7, r1
 8010998:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801099a:	b2bf      	uxth	r7, r7
 801099c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80109a0:	fa0f fa87 	sxth.w	sl, r7
 80109a4:	4551      	cmp	r1, sl
 80109a6:	dd3a      	ble.n	8010a1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80109a8:	0112      	lsls	r2, r2, #4
 80109aa:	79d8      	ldrb	r0, [r3, #7]
 80109ac:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80109b0:	4302      	orrs	r2, r0
 80109b2:	4492      	add	sl, r2
 80109b4:	4551      	cmp	r1, sl
 80109b6:	dc2e      	bgt.n	8010a16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80109b8:	1bcf      	subs	r7, r1, r7
 80109ba:	b2bf      	uxth	r7, r7
 80109bc:	468a      	mov	sl, r1
 80109be:	9319      	str	r3, [sp, #100]	; 0x64
 80109c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80109c2:	f8d8 0000 	ldr.w	r0, [r8]
 80109c6:	681a      	ldr	r2, [r3, #0]
 80109c8:	6801      	ldr	r1, [r0, #0]
 80109ca:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80109cc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80109ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80109d0:	9218      	str	r2, [sp, #96]	; 0x60
 80109d2:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80109d4:	4788      	blx	r1
 80109d6:	f898 1006 	ldrb.w	r1, [r8, #6]
 80109da:	910b      	str	r1, [sp, #44]	; 0x2c
 80109dc:	f898 100e 	ldrb.w	r1, [r8, #14]
 80109e0:	910a      	str	r1, [sp, #40]	; 0x28
 80109e2:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80109e6:	9109      	str	r1, [sp, #36]	; 0x24
 80109e8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80109ea:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80109ee:	9305      	str	r3, [sp, #20]
 80109f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80109f2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80109f4:	9206      	str	r2, [sp, #24]
 80109f6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80109fa:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80109fe:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010a02:	442e      	add	r6, r5
 8010a04:	b236      	sxth	r6, r6
 8010a06:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010a08:	9600      	str	r6, [sp, #0]
 8010a0a:	681a      	ldr	r2, [r3, #0]
 8010a0c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010a0e:	685b      	ldr	r3, [r3, #4]
 8010a10:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010a12:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010a14:	47b0      	blx	r6
 8010a16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010a18:	3301      	adds	r3, #1
 8010a1a:	930e      	str	r3, [sp, #56]	; 0x38
 8010a1c:	e6e3      	b.n	80107e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8010a1e:	2700      	movs	r7, #0
 8010a20:	e7cd      	b.n	80109be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010a22:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010a24:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010a26:	3501      	adds	r5, #1
 8010a28:	429d      	cmp	r5, r3
 8010a2a:	f6bf af77 	bge.w	801091c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010a2e:	4659      	mov	r1, fp
 8010a30:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010a32:	f7f4 fb5d 	bl	80050f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010a36:	4604      	mov	r4, r0
 8010a38:	b110      	cbz	r0, 8010a40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010a3a:	280a      	cmp	r0, #10
 8010a3c:	d1f2      	bne.n	8010a24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8010a3e:	e76c      	b.n	801091a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010a40:	2400      	movs	r4, #0
 8010a42:	e76b      	b.n	801091c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010a44:	f1bb 0f00 	cmp.w	fp, #0
 8010a48:	f43f af5c 	beq.w	8010904 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8010a4c:	e777      	b.n	801093e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08010a4e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8010a4e:	b530      	push	{r4, r5, lr}
 8010a50:	8a44      	ldrh	r4, [r0, #18]
 8010a52:	8ac5      	ldrh	r5, [r0, #22]
 8010a54:	82c3      	strh	r3, [r0, #22]
 8010a56:	442c      	add	r4, r5
 8010a58:	1ae4      	subs	r4, r4, r3
 8010a5a:	8244      	strh	r4, [r0, #18]
 8010a5c:	8b03      	ldrh	r3, [r0, #24]
 8010a5e:	8a84      	ldrh	r4, [r0, #20]
 8010a60:	4422      	add	r2, r4
 8010a62:	440c      	add	r4, r1
 8010a64:	1a59      	subs	r1, r3, r1
 8010a66:	8342      	strh	r2, [r0, #26]
 8010a68:	8284      	strh	r4, [r0, #20]
 8010a6a:	8301      	strh	r1, [r0, #24]
 8010a6c:	bd30      	pop	{r4, r5, pc}

08010a6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8010a6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a72:	7a43      	ldrb	r3, [r0, #9]
 8010a74:	1eda      	subs	r2, r3, #3
 8010a76:	b087      	sub	sp, #28
 8010a78:	4604      	mov	r4, r0
 8010a7a:	b2d2      	uxtb	r2, r2
 8010a7c:	460f      	mov	r7, r1
 8010a7e:	2900      	cmp	r1, #0
 8010a80:	d036      	beq.n	8010af0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8010a82:	2a01      	cmp	r2, #1
 8010a84:	d932      	bls.n	8010aec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8010a86:	1e58      	subs	r0, r3, #1
 8010a88:	f1d0 0b00 	rsbs	fp, r0, #0
 8010a8c:	eb4b 0b00 	adc.w	fp, fp, r0
 8010a90:	1e99      	subs	r1, r3, #2
 8010a92:	424b      	negs	r3, r1
 8010a94:	414b      	adcs	r3, r1
 8010a96:	9303      	str	r3, [sp, #12]
 8010a98:	2300      	movs	r3, #0
 8010a9a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8010a9e:	2500      	movs	r5, #0
 8010aa0:	8265      	strh	r5, [r4, #18]
 8010aa2:	82a5      	strh	r5, [r4, #20]
 8010aa4:	46a9      	mov	r9, r5
 8010aa6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8010aaa:	2300      	movs	r3, #0
 8010aac:	9305      	str	r3, [sp, #20]
 8010aae:	8823      	ldrh	r3, [r4, #0]
 8010ab0:	2b20      	cmp	r3, #32
 8010ab2:	d02b      	beq.n	8010b0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8010ab4:	eba3 020a 	sub.w	r2, r3, sl
 8010ab8:	4256      	negs	r6, r2
 8010aba:	4156      	adcs	r6, r2
 8010abc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010ac0:	4293      	cmp	r3, r2
 8010ac2:	d004      	beq.n	8010ace <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010ac4:	4553      	cmp	r3, sl
 8010ac6:	bf16      	itet	ne
 8010ac8:	4699      	movne	r9, r3
 8010aca:	2601      	moveq	r6, #1
 8010acc:	2600      	movne	r6, #0
 8010ace:	ab05      	add	r3, sp, #20
 8010ad0:	68e2      	ldr	r2, [r4, #12]
 8010ad2:	7a21      	ldrb	r1, [r4, #8]
 8010ad4:	6860      	ldr	r0, [r4, #4]
 8010ad6:	f002 fd87 	bl	80135e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010ada:	8020      	strh	r0, [r4, #0]
 8010adc:	b9c8      	cbnz	r0, 8010b12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8010ade:	8b22      	ldrh	r2, [r4, #24]
 8010ae0:	2300      	movs	r3, #0
 8010ae2:	4611      	mov	r1, r2
 8010ae4:	4620      	mov	r0, r4
 8010ae6:	f7ff ffb2 	bl	8010a4e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010aea:	e066      	b.n	8010bba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8010aec:	468b      	mov	fp, r1
 8010aee:	e7cf      	b.n	8010a90 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8010af0:	3b01      	subs	r3, #1
 8010af2:	2a01      	cmp	r2, #1
 8010af4:	bf8c      	ite	hi
 8010af6:	2200      	movhi	r2, #0
 8010af8:	2201      	movls	r2, #1
 8010afa:	2b01      	cmp	r3, #1
 8010afc:	bf8c      	ite	hi
 8010afe:	2300      	movhi	r3, #0
 8010b00:	2301      	movls	r3, #1
 8010b02:	9202      	str	r2, [sp, #8]
 8010b04:	9301      	str	r3, [sp, #4]
 8010b06:	9103      	str	r1, [sp, #12]
 8010b08:	468b      	mov	fp, r1
 8010b0a:	e7c8      	b.n	8010a9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8010b0c:	4699      	mov	r9, r3
 8010b0e:	2601      	movs	r6, #1
 8010b10:	e7dd      	b.n	8010ace <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010b12:	8ae3      	ldrh	r3, [r4, #22]
 8010b14:	280a      	cmp	r0, #10
 8010b16:	f103 0301 	add.w	r3, r3, #1
 8010b1a:	82e3      	strh	r3, [r4, #22]
 8010b1c:	d0df      	beq.n	8010ade <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8010b1e:	9a05      	ldr	r2, [sp, #20]
 8010b20:	bb42      	cbnz	r2, 8010b74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010b22:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010b26:	4298      	cmp	r0, r3
 8010b28:	d001      	beq.n	8010b2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010b2a:	4550      	cmp	r0, sl
 8010b2c:	d1bd      	bne.n	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b2e:	8823      	ldrh	r3, [r4, #0]
 8010b30:	8b21      	ldrh	r1, [r4, #24]
 8010b32:	2b20      	cmp	r3, #32
 8010b34:	d001      	beq.n	8010b3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010b36:	4553      	cmp	r3, sl
 8010b38:	d131      	bne.n	8010b9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8010b3a:	2e00      	cmp	r6, #0
 8010b3c:	bf0a      	itet	eq
 8010b3e:	460d      	moveq	r5, r1
 8010b40:	4630      	movne	r0, r6
 8010b42:	2001      	moveq	r0, #1
 8010b44:	440a      	add	r2, r1
 8010b46:	8aa3      	ldrh	r3, [r4, #20]
 8010b48:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010b4c:	b292      	uxth	r2, r2
 8010b4e:	8322      	strh	r2, [r4, #24]
 8010b50:	4413      	add	r3, r2
 8010b52:	2f00      	cmp	r7, #0
 8010b54:	d03a      	beq.n	8010bcc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010b56:	f1bb 0f00 	cmp.w	fp, #0
 8010b5a:	d102      	bne.n	8010b62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8010b5c:	9903      	ldr	r1, [sp, #12]
 8010b5e:	b301      	cbz	r1, 8010ba2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010b60:	b1f8      	cbz	r0, 8010ba2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010b62:	8ba1      	ldrh	r1, [r4, #28]
 8010b64:	4419      	add	r1, r3
 8010b66:	458c      	cmp	ip, r1
 8010b68:	da2a      	bge.n	8010bc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010b6a:	8a61      	ldrh	r1, [r4, #18]
 8010b6c:	b341      	cbz	r1, 8010bc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010b6e:	4563      	cmp	r3, ip
 8010b70:	dd9b      	ble.n	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b72:	e01c      	b.n	8010bae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010b74:	8893      	ldrh	r3, [r2, #4]
 8010b76:	8023      	strh	r3, [r4, #0]
 8010b78:	f892 800d 	ldrb.w	r8, [r2, #13]
 8010b7c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8010b80:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8010b84:	f892 800a 	ldrb.w	r8, [r2, #10]
 8010b88:	ea48 0800 	orr.w	r8, r8, r0
 8010b8c:	68e0      	ldr	r0, [r4, #12]
 8010b8e:	6803      	ldr	r3, [r0, #0]
 8010b90:	4649      	mov	r1, r9
 8010b92:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010b94:	4798      	blx	r3
 8010b96:	eb08 0200 	add.w	r2, r8, r0
 8010b9a:	b292      	uxth	r2, r2
 8010b9c:	e7c7      	b.n	8010b2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010b9e:	2000      	movs	r0, #0
 8010ba0:	e7d0      	b.n	8010b44 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8010ba2:	4563      	cmp	r3, ip
 8010ba4:	dd81      	ble.n	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010ba6:	8a63      	ldrh	r3, [r4, #18]
 8010ba8:	2b00      	cmp	r3, #0
 8010baa:	f43f af7e 	beq.w	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010bae:	2301      	movs	r3, #1
 8010bb0:	77a3      	strb	r3, [r4, #30]
 8010bb2:	8ba2      	ldrh	r2, [r4, #28]
 8010bb4:	8b63      	ldrh	r3, [r4, #26]
 8010bb6:	4413      	add	r3, r2
 8010bb8:	8363      	strh	r3, [r4, #26]
 8010bba:	b007      	add	sp, #28
 8010bbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010bc0:	2300      	movs	r3, #0
 8010bc2:	4611      	mov	r1, r2
 8010bc4:	4620      	mov	r0, r4
 8010bc6:	f7ff ff42 	bl	8010a4e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010bca:	e76e      	b.n	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010bcc:	4563      	cmp	r3, ip
 8010bce:	dd14      	ble.n	8010bfa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8010bd0:	9b02      	ldr	r3, [sp, #8]
 8010bd2:	b113      	cbz	r3, 8010bda <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8010bd4:	2301      	movs	r3, #1
 8010bd6:	460a      	mov	r2, r1
 8010bd8:	e783      	b.n	8010ae2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8010bda:	9b01      	ldr	r3, [sp, #4]
 8010bdc:	2b00      	cmp	r3, #0
 8010bde:	f43f af64 	beq.w	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010be2:	2800      	cmp	r0, #0
 8010be4:	f47f af61 	bne.w	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010be8:	b116      	cbz	r6, 8010bf0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8010bea:	2301      	movs	r3, #1
 8010bec:	462a      	mov	r2, r5
 8010bee:	e779      	b.n	8010ae4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8010bf0:	8a63      	ldrh	r3, [r4, #18]
 8010bf2:	2b00      	cmp	r3, #0
 8010bf4:	f43f af59 	beq.w	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010bf8:	e7df      	b.n	8010bba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8010bfa:	2800      	cmp	r0, #0
 8010bfc:	f47f af55 	bne.w	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c00:	2e00      	cmp	r6, #0
 8010c02:	f43f af52 	beq.w	8010aaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c06:	2301      	movs	r3, #1
 8010c08:	462a      	mov	r2, r5
 8010c0a:	e7db      	b.n	8010bc4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08010c0c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010c0c:	b530      	push	{r4, r5, lr}
 8010c0e:	4605      	mov	r5, r0
 8010c10:	b08b      	sub	sp, #44	; 0x2c
 8010c12:	b191      	cbz	r1, 8010c3a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010c14:	e9cd 3100 	strd	r3, r1, [sp]
 8010c18:	4613      	mov	r3, r2
 8010c1a:	4601      	mov	r1, r0
 8010c1c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010c20:	a802      	add	r0, sp, #8
 8010c22:	f7ff fd09 	bl	8010638 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010c26:	2401      	movs	r4, #1
 8010c28:	2100      	movs	r1, #0
 8010c2a:	a802      	add	r0, sp, #8
 8010c2c:	f7ff ff1f 	bl	8010a6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010c30:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010c34:	b163      	cbz	r3, 8010c50 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010c36:	3401      	adds	r4, #1
 8010c38:	e7f6      	b.n	8010c28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8010c3a:	f002 fda3 	bl	8013784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010c3e:	2401      	movs	r4, #1
 8010c40:	280a      	cmp	r0, #10
 8010c42:	4628      	mov	r0, r5
 8010c44:	bf08      	it	eq
 8010c46:	3401      	addeq	r4, #1
 8010c48:	f002 fd9c 	bl	8013784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010c4c:	2800      	cmp	r0, #0
 8010c4e:	d1f7      	bne.n	8010c40 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010c50:	b2a0      	uxth	r0, r4
 8010c52:	b00b      	add	sp, #44	; 0x2c
 8010c54:	bd30      	pop	{r4, r5, pc}

08010c56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010c56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c5a:	b0e5      	sub	sp, #404	; 0x194
 8010c5c:	4689      	mov	r9, r1
 8010c5e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8010c62:	900a      	str	r0, [sp, #40]	; 0x28
 8010c64:	461c      	mov	r4, r3
 8010c66:	f1ba 0f00 	cmp.w	sl, #0
 8010c6a:	f000 80b4 	beq.w	8010dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010c6e:	681b      	ldr	r3, [r3, #0]
 8010c70:	2b00      	cmp	r3, #0
 8010c72:	f000 80b0 	beq.w	8010dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010c76:	7ba3      	ldrb	r3, [r4, #14]
 8010c78:	2b00      	cmp	r3, #0
 8010c7a:	f000 80ac 	beq.w	8010dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010c7e:	6810      	ldr	r0, [r2, #0]
 8010c80:	6851      	ldr	r1, [r2, #4]
 8010c82:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8010c86:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8010c8a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 8010c8e:	4643      	mov	r3, r8
 8010c90:	c303      	stmia	r3!, {r0, r1}
 8010c92:	2500      	movs	r5, #0
 8010c94:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8010c98:	79a2      	ldrb	r2, [r4, #6]
 8010c9a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010c9e:	a90f      	add	r1, sp, #60	; 0x3c
 8010ca0:	4640      	mov	r0, r8
 8010ca2:	950f      	str	r5, [sp, #60]	; 0x3c
 8010ca4:	f7ff fd40 	bl	8010728 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010ca8:	a90f      	add	r1, sp, #60	; 0x3c
 8010caa:	4608      	mov	r0, r1
 8010cac:	79a2      	ldrb	r2, [r4, #6]
 8010cae:	af19      	add	r7, sp, #100	; 0x64
 8010cb0:	f7ff fd3a 	bl	8010728 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010cb4:	4638      	mov	r0, r7
 8010cb6:	f002 f93a 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 8010cba:	6820      	ldr	r0, [r4, #0]
 8010cbc:	6803      	ldr	r3, [r0, #0]
 8010cbe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010cc0:	4798      	blx	r3
 8010cc2:	4606      	mov	r6, r0
 8010cc4:	6820      	ldr	r0, [r4, #0]
 8010cc6:	6803      	ldr	r3, [r0, #0]
 8010cc8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010cca:	4798      	blx	r3
 8010ccc:	4633      	mov	r3, r6
 8010cce:	9000      	str	r0, [sp, #0]
 8010cd0:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010cd2:	4651      	mov	r1, sl
 8010cd4:	4638      	mov	r0, r7
 8010cd6:	f002 f985 	bl	8012fe4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010cda:	6820      	ldr	r0, [r4, #0]
 8010cdc:	7923      	ldrb	r3, [r4, #4]
 8010cde:	9308      	str	r3, [sp, #32]
 8010ce0:	6803      	ldr	r3, [r0, #0]
 8010ce2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010ce4:	4798      	blx	r3
 8010ce6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010cea:	181e      	adds	r6, r3, r0
 8010cec:	42ae      	cmp	r6, r5
 8010cee:	dd06      	ble.n	8010cfe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8010cf0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8010cf4:	4282      	cmp	r2, r0
 8010cf6:	bfa4      	itt	ge
 8010cf8:	189d      	addge	r5, r3, r2
 8010cfa:	fb95 f5f6 	sdivge	r5, r5, r6
 8010cfe:	a832      	add	r0, sp, #200	; 0xc8
 8010d00:	f002 f915 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 8010d04:	7c23      	ldrb	r3, [r4, #16]
 8010d06:	b17b      	cbz	r3, 8010d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010d08:	6820      	ldr	r0, [r4, #0]
 8010d0a:	6803      	ldr	r3, [r0, #0]
 8010d0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010d0e:	4798      	blx	r3
 8010d10:	4683      	mov	fp, r0
 8010d12:	6820      	ldr	r0, [r4, #0]
 8010d14:	6803      	ldr	r3, [r0, #0]
 8010d16:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010d18:	4798      	blx	r3
 8010d1a:	465b      	mov	r3, fp
 8010d1c:	9000      	str	r0, [sp, #0]
 8010d1e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010d20:	4651      	mov	r1, sl
 8010d22:	a832      	add	r0, sp, #200	; 0xc8
 8010d24:	f002 f95e 	bl	8012fe4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010d28:	7be1      	ldrb	r1, [r4, #15]
 8010d2a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010d2e:	7963      	ldrb	r3, [r4, #5]
 8010d30:	1a52      	subs	r2, r2, r1
 8010d32:	7c21      	ldrb	r1, [r4, #16]
 8010d34:	9101      	str	r1, [sp, #4]
 8010d36:	6821      	ldr	r1, [r4, #0]
 8010d38:	9100      	str	r1, [sp, #0]
 8010d3a:	b292      	uxth	r2, r2
 8010d3c:	a932      	add	r1, sp, #200	; 0xc8
 8010d3e:	a811      	add	r0, sp, #68	; 0x44
 8010d40:	f7ff fc7a 	bl	8010638 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010d44:	7c23      	ldrb	r3, [r4, #16]
 8010d46:	b9bb      	cbnz	r3, 8010d78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010d48:	fa1f fa86 	uxth.w	sl, r6
 8010d4c:	2d00      	cmp	r5, #0
 8010d4e:	dd45      	ble.n	8010ddc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010d50:	4638      	mov	r0, r7
 8010d52:	f002 fd17 	bl	8013784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010d56:	2800      	cmp	r0, #0
 8010d58:	d03d      	beq.n	8010dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010d5a:	280a      	cmp	r0, #10
 8010d5c:	d1f6      	bne.n	8010d4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010d5e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010d62:	4453      	add	r3, sl
 8010d64:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010d68:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010d6c:	eba3 030a 	sub.w	r3, r3, sl
 8010d70:	3d01      	subs	r5, #1
 8010d72:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010d76:	e7e9      	b.n	8010d4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010d78:	0073      	lsls	r3, r6, #1
 8010d7a:	9309      	str	r3, [sp, #36]	; 0x24
 8010d7c:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8010d80:	fa1f fa86 	uxth.w	sl, r6
 8010d84:	2d00      	cmp	r5, #0
 8010d86:	dd29      	ble.n	8010ddc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010d88:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010d8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010d8e:	428b      	cmp	r3, r1
 8010d90:	bfd4      	ite	le
 8010d92:	2100      	movle	r1, #0
 8010d94:	2101      	movgt	r1, #1
 8010d96:	a811      	add	r0, sp, #68	; 0x44
 8010d98:	f7ff fe69 	bl	8010a6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010d9c:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8010da0:	3b01      	subs	r3, #1
 8010da2:	b29b      	uxth	r3, r3
 8010da4:	455b      	cmp	r3, fp
 8010da6:	930b      	str	r3, [sp, #44]	; 0x2c
 8010da8:	d005      	beq.n	8010db6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8010daa:	7961      	ldrb	r1, [r4, #5]
 8010dac:	4638      	mov	r0, r7
 8010dae:	f7f4 f99f 	bl	80050f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010db2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010db4:	e7f4      	b.n	8010da0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8010db6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010dba:	4453      	add	r3, sl
 8010dbc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010dc0:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010dc4:	eba3 030a 	sub.w	r3, r3, sl
 8010dc8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010dcc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010dd0:	3d01      	subs	r5, #1
 8010dd2:	2b00      	cmp	r3, #0
 8010dd4:	d1d6      	bne.n	8010d84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8010dd6:	b065      	add	sp, #404	; 0x194
 8010dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ddc:	0075      	lsls	r5, r6, #1
 8010dde:	f04f 0a00 	mov.w	sl, #0
 8010de2:	7c23      	ldrb	r3, [r4, #16]
 8010de4:	2b00      	cmp	r3, #0
 8010de6:	d066      	beq.n	8010eb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8010de8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010dec:	428d      	cmp	r5, r1
 8010dee:	bfd4      	ite	le
 8010df0:	2100      	movle	r1, #0
 8010df2:	2101      	movgt	r1, #1
 8010df4:	a811      	add	r0, sp, #68	; 0x44
 8010df6:	f7ff fe3a 	bl	8010a6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010dfa:	9b08      	ldr	r3, [sp, #32]
 8010dfc:	2b00      	cmp	r3, #0
 8010dfe:	d055      	beq.n	8010eac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010e00:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010e04:	2264      	movs	r2, #100	; 0x64
 8010e06:	4639      	mov	r1, r7
 8010e08:	a84b      	add	r0, sp, #300	; 0x12c
 8010e0a:	f010 f8f1 	bl	8020ff0 <memcpy>
 8010e0e:	f1bb 0f00 	cmp.w	fp, #0
 8010e12:	d058      	beq.n	8010ec6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010e14:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010e18:	7922      	ldrb	r2, [r4, #4]
 8010e1a:	2a01      	cmp	r2, #1
 8010e1c:	d13c      	bne.n	8010e98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8010e1e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010e22:	1ac0      	subs	r0, r0, r3
 8010e24:	2302      	movs	r3, #2
 8010e26:	fb90 f0f3 	sdiv	r0, r0, r3
 8010e2a:	b200      	sxth	r0, r0
 8010e2c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010e30:	4418      	add	r0, r3
 8010e32:	7c23      	ldrb	r3, [r4, #16]
 8010e34:	b200      	sxth	r0, r0
 8010e36:	2b00      	cmp	r3, #0
 8010e38:	d03a      	beq.n	8010eb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8010e3a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8010e3e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010e42:	9000      	str	r0, [sp, #0]
 8010e44:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010e48:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8010e4c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8010e4e:	e9cd a703 	strd	sl, r7, [sp, #12]
 8010e52:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010e56:	464a      	mov	r2, r9
 8010e58:	2100      	movs	r1, #0
 8010e5a:	f7ff fc96 	bl	801078a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010e5e:	2800      	cmp	r0, #0
 8010e60:	d1b9      	bne.n	8010dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010e62:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010e66:	b2b2      	uxth	r2, r6
 8010e68:	4611      	mov	r1, r2
 8010e6a:	4413      	add	r3, r2
 8010e6c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010e70:	1a52      	subs	r2, r2, r1
 8010e72:	7c21      	ldrb	r1, [r4, #16]
 8010e74:	b21b      	sxth	r3, r3
 8010e76:	b212      	sxth	r2, r2
 8010e78:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010e7c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8010e80:	b109      	cbz	r1, 8010e86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8010e82:	42b2      	cmp	r2, r6
 8010e84:	dba7      	blt.n	8010dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010e86:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8010e8a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8010e8e:	440a      	add	r2, r1
 8010e90:	b212      	sxth	r2, r2
 8010e92:	4293      	cmp	r3, r2
 8010e94:	dda5      	ble.n	8010de2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010e96:	e79e      	b.n	8010dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010e98:	2a02      	cmp	r2, #2
 8010e9a:	d105      	bne.n	8010ea8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010e9c:	7be2      	ldrb	r2, [r4, #15]
 8010e9e:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8010ea2:	1a80      	subs	r0, r0, r2
 8010ea4:	1ac0      	subs	r0, r0, r3
 8010ea6:	e7c0      	b.n	8010e2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010ea8:	2000      	movs	r0, #0
 8010eaa:	e7bf      	b.n	8010e2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010eac:	7be0      	ldrb	r0, [r4, #15]
 8010eae:	e7bd      	b.n	8010e2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010eb0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010eb4:	e7c3      	b.n	8010e3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010eb6:	9b08      	ldr	r3, [sp, #32]
 8010eb8:	2b00      	cmp	r3, #0
 8010eba:	d0f7      	beq.n	8010eac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010ebc:	2264      	movs	r2, #100	; 0x64
 8010ebe:	4639      	mov	r1, r7
 8010ec0:	a84b      	add	r0, sp, #300	; 0x12c
 8010ec2:	f010 f895 	bl	8020ff0 <memcpy>
 8010ec6:	2300      	movs	r3, #0
 8010ec8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010ecc:	6821      	ldr	r1, [r4, #0]
 8010ece:	a84b      	add	r0, sp, #300	; 0x12c
 8010ed0:	f7ff fbee 	bl	80106b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010ed4:	b203      	sxth	r3, r0
 8010ed6:	e79f      	b.n	8010e18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08010ed8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010ed8:	2b03      	cmp	r3, #3
 8010eda:	d818      	bhi.n	8010f0e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010edc:	e8df f003 	tbb	[pc, r3]
 8010ee0:	130d0602 	.word	0x130d0602
 8010ee4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010ee8:	1850      	adds	r0, r2, r1
 8010eea:	4770      	bx	lr
 8010eec:	8803      	ldrh	r3, [r0, #0]
 8010eee:	8880      	ldrh	r0, [r0, #4]
 8010ef0:	4418      	add	r0, r3
 8010ef2:	b200      	sxth	r0, r0
 8010ef4:	1a80      	subs	r0, r0, r2
 8010ef6:	3801      	subs	r0, #1
 8010ef8:	4770      	bx	lr
 8010efa:	8803      	ldrh	r3, [r0, #0]
 8010efc:	8880      	ldrh	r0, [r0, #4]
 8010efe:	4418      	add	r0, r3
 8010f00:	b200      	sxth	r0, r0
 8010f02:	1a40      	subs	r0, r0, r1
 8010f04:	e7f7      	b.n	8010ef6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010f06:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010f0a:	4410      	add	r0, r2
 8010f0c:	4770      	bx	lr
 8010f0e:	2000      	movs	r0, #0
 8010f10:	4770      	bx	lr

08010f12 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010f12:	2b03      	cmp	r3, #3
 8010f14:	d817      	bhi.n	8010f46 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010f16:	e8df f003 	tbb	[pc, r3]
 8010f1a:	0602      	.short	0x0602
 8010f1c:	1009      	.short	0x1009
 8010f1e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010f22:	1850      	adds	r0, r2, r1
 8010f24:	4770      	bx	lr
 8010f26:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010f2a:	e7fa      	b.n	8010f22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010f2c:	8843      	ldrh	r3, [r0, #2]
 8010f2e:	88c0      	ldrh	r0, [r0, #6]
 8010f30:	4418      	add	r0, r3
 8010f32:	b200      	sxth	r0, r0
 8010f34:	1a80      	subs	r0, r0, r2
 8010f36:	3801      	subs	r0, #1
 8010f38:	4770      	bx	lr
 8010f3a:	8843      	ldrh	r3, [r0, #2]
 8010f3c:	88c0      	ldrh	r0, [r0, #6]
 8010f3e:	4418      	add	r0, r3
 8010f40:	b200      	sxth	r0, r0
 8010f42:	1a40      	subs	r0, r0, r1
 8010f44:	e7f7      	b.n	8010f36 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010f46:	2000      	movs	r0, #0
 8010f48:	4770      	bx	lr
	...

08010f4c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010f4c:	4b01      	ldr	r3, [pc, #4]	; (8010f54 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010f4e:	2200      	movs	r2, #0
 8010f50:	601a      	str	r2, [r3, #0]
 8010f52:	4770      	bx	lr
 8010f54:	20015810 	.word	0x20015810

08010f58 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010f58:	4603      	mov	r3, r0
 8010f5a:	b1c8      	cbz	r0, 8010f90 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010f5c:	0c02      	lsrs	r2, r0, #16
 8010f5e:	0412      	lsls	r2, r2, #16
 8010f60:	b9a2      	cbnz	r2, 8010f8c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010f62:	0403      	lsls	r3, r0, #16
 8010f64:	2010      	movs	r0, #16
 8010f66:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010f6a:	bf04      	itt	eq
 8010f6c:	021b      	lsleq	r3, r3, #8
 8010f6e:	3008      	addeq	r0, #8
 8010f70:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010f74:	bf04      	itt	eq
 8010f76:	011b      	lsleq	r3, r3, #4
 8010f78:	3004      	addeq	r0, #4
 8010f7a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010f7e:	bf04      	itt	eq
 8010f80:	009b      	lsleq	r3, r3, #2
 8010f82:	3002      	addeq	r0, #2
 8010f84:	2b00      	cmp	r3, #0
 8010f86:	db04      	blt.n	8010f92 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010f88:	3001      	adds	r0, #1
 8010f8a:	4770      	bx	lr
 8010f8c:	2000      	movs	r0, #0
 8010f8e:	e7ea      	b.n	8010f66 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010f90:	2020      	movs	r0, #32
 8010f92:	4770      	bx	lr

08010f94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010f94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f98:	b087      	sub	sp, #28
 8010f9a:	4681      	mov	r9, r0
 8010f9c:	4698      	mov	r8, r3
 8010f9e:	4610      	mov	r0, r2
 8010fa0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010fa4:	460d      	mov	r5, r1
 8010fa6:	b981      	cbnz	r1, 8010fca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010fa8:	b14b      	cbz	r3, 8010fbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010faa:	460b      	mov	r3, r1
 8010fac:	e9cd 4700 	strd	r4, r7, [sp]
 8010fb0:	464a      	mov	r2, r9
 8010fb2:	4641      	mov	r1, r8
 8010fb4:	f7ff ffee 	bl	8010f94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010fb8:	b007      	add	sp, #28
 8010fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fbe:	f04f 33ff 	mov.w	r3, #4294967295
 8010fc2:	603b      	str	r3, [r7, #0]
 8010fc4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010fc8:	e7f6      	b.n	8010fb8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010fca:	fa32 fa01 	lsrs.w	sl, r2, r1
 8010fce:	d107      	bne.n	8010fe0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8010fd0:	fb09 f602 	mul.w	r6, r9, r2
 8010fd4:	fbb6 f0f4 	udiv	r0, r6, r4
 8010fd8:	fb04 6610 	mls	r6, r4, r0, r6
 8010fdc:	603e      	str	r6, [r7, #0]
 8010fde:	e7eb      	b.n	8010fb8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010fe0:	2601      	movs	r6, #1
 8010fe2:	408e      	lsls	r6, r1
 8010fe4:	3e01      	subs	r6, #1
 8010fe6:	4016      	ands	r6, r2
 8010fe8:	fa09 fb01 	lsl.w	fp, r9, r1
 8010fec:	4630      	mov	r0, r6
 8010fee:	fbbb f3f4 	udiv	r3, fp, r4
 8010ff2:	9302      	str	r3, [sp, #8]
 8010ff4:	fb0a f303 	mul.w	r3, sl, r3
 8010ff8:	9303      	str	r3, [sp, #12]
 8010ffa:	f7ff ffad 	bl	8010f58 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010ffe:	464a      	mov	r2, r9
 8011000:	460b      	mov	r3, r1
 8011002:	e9cd 4700 	strd	r4, r7, [sp]
 8011006:	4601      	mov	r1, r0
 8011008:	4630      	mov	r0, r6
 801100a:	f7ff ffc3 	bl	8010f94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801100e:	9b02      	ldr	r3, [sp, #8]
 8011010:	fb04 bb13 	mls	fp, r4, r3, fp
 8011014:	4606      	mov	r6, r0
 8011016:	4658      	mov	r0, fp
 8011018:	eb05 0108 	add.w	r1, r5, r8
 801101c:	f7ff ff9c 	bl	8010f58 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011020:	ab05      	add	r3, sp, #20
 8011022:	e9cd 4300 	strd	r4, r3, [sp]
 8011026:	465a      	mov	r2, fp
 8011028:	4603      	mov	r3, r0
 801102a:	4650      	mov	r0, sl
 801102c:	f7ff ffb2 	bl	8010f94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011030:	6839      	ldr	r1, [r7, #0]
 8011032:	9a05      	ldr	r2, [sp, #20]
 8011034:	9b03      	ldr	r3, [sp, #12]
 8011036:	4411      	add	r1, r2
 8011038:	fbb1 f2f4 	udiv	r2, r1, r4
 801103c:	18d3      	adds	r3, r2, r3
 801103e:	441e      	add	r6, r3
 8011040:	fb04 1412 	mls	r4, r4, r2, r1
 8011044:	4430      	add	r0, r6
 8011046:	603c      	str	r4, [r7, #0]
 8011048:	e7b6      	b.n	8010fb8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0801104a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801104a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801104e:	b085      	sub	sp, #20
 8011050:	f1b0 0900 	subs.w	r9, r0, #0
 8011054:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011056:	461d      	mov	r5, r3
 8011058:	bfbf      	itttt	lt
 801105a:	6823      	ldrlt	r3, [r4, #0]
 801105c:	425b      	neglt	r3, r3
 801105e:	f1c9 0900 	rsblt	r9, r9, #0
 8011062:	6023      	strlt	r3, [r4, #0]
 8011064:	bfb4      	ite	lt
 8011066:	f04f 36ff 	movlt.w	r6, #4294967295
 801106a:	2601      	movge	r6, #1
 801106c:	2a00      	cmp	r2, #0
 801106e:	4617      	mov	r7, r2
 8011070:	da04      	bge.n	801107c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8011072:	6823      	ldr	r3, [r4, #0]
 8011074:	425b      	negs	r3, r3
 8011076:	4257      	negs	r7, r2
 8011078:	4276      	negs	r6, r6
 801107a:	6023      	str	r3, [r4, #0]
 801107c:	2d00      	cmp	r5, #0
 801107e:	4638      	mov	r0, r7
 8011080:	bfba      	itte	lt
 8011082:	426d      	neglt	r5, r5
 8011084:	f04f 38ff 	movlt.w	r8, #4294967295
 8011088:	f04f 0801 	movge.w	r8, #1
 801108c:	f7ff ff64 	bl	8010f58 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011090:	ab03      	add	r3, sp, #12
 8011092:	e9cd 5300 	strd	r5, r3, [sp]
 8011096:	463a      	mov	r2, r7
 8011098:	4603      	mov	r3, r0
 801109a:	4648      	mov	r0, r9
 801109c:	f7ff ff7a 	bl	8010f94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80110a0:	6823      	ldr	r3, [r4, #0]
 80110a2:	9a03      	ldr	r2, [sp, #12]
 80110a4:	4546      	cmp	r6, r8
 80110a6:	441a      	add	r2, r3
 80110a8:	fb92 f3f5 	sdiv	r3, r2, r5
 80110ac:	4418      	add	r0, r3
 80110ae:	bf18      	it	ne
 80110b0:	4240      	negne	r0, r0
 80110b2:	fb05 2313 	mls	r3, r5, r3, r2
 80110b6:	1c72      	adds	r2, r6, #1
 80110b8:	6023      	str	r3, [r4, #0]
 80110ba:	d105      	bne.n	80110c8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80110bc:	2b00      	cmp	r3, #0
 80110be:	f1c3 0200 	rsb	r2, r3, #0
 80110c2:	db0b      	blt.n	80110dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80110c4:	6022      	str	r2, [r4, #0]
 80110c6:	e006      	b.n	80110d6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80110c8:	2e01      	cmp	r6, #1
 80110ca:	d104      	bne.n	80110d6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80110cc:	2b00      	cmp	r3, #0
 80110ce:	da02      	bge.n	80110d6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80110d0:	442b      	add	r3, r5
 80110d2:	3801      	subs	r0, #1
 80110d4:	6023      	str	r3, [r4, #0]
 80110d6:	b005      	add	sp, #20
 80110d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80110dc:	3801      	subs	r0, #1
 80110de:	1b52      	subs	r2, r2, r5
 80110e0:	e7f0      	b.n	80110c4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

080110e4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80110e4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80110e8:	4c1c      	ldr	r4, [pc, #112]	; (801115c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80110ea:	6807      	ldr	r7, [r0, #0]
 80110ec:	69a3      	ldr	r3, [r4, #24]
 80110ee:	4605      	mov	r5, r0
 80110f0:	b92b      	cbnz	r3, 80110fe <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80110f2:	6840      	ldr	r0, [r0, #4]
 80110f4:	e9c5 7000 	strd	r7, r0, [r5]
 80110f8:	b004      	add	sp, #16
 80110fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80110fe:	68a2      	ldr	r2, [r4, #8]
 8011100:	6820      	ldr	r0, [r4, #0]
 8011102:	ae04      	add	r6, sp, #16
 8011104:	f04f 0802 	mov.w	r8, #2
 8011108:	fb93 f1f8 	sdiv	r1, r3, r8
 801110c:	440a      	add	r2, r1
 801110e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8011112:	69e1      	ldr	r1, [r4, #28]
 8011114:	9600      	str	r6, [sp, #0]
 8011116:	463a      	mov	r2, r7
 8011118:	f7ff ff97 	bl	801104a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801111c:	69a3      	ldr	r3, [r4, #24]
 801111e:	686a      	ldr	r2, [r5, #4]
 8011120:	6a21      	ldr	r1, [r4, #32]
 8011122:	9600      	str	r6, [sp, #0]
 8011124:	4607      	mov	r7, r0
 8011126:	6860      	ldr	r0, [r4, #4]
 8011128:	f7ff ff8f 	bl	801104a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801112c:	6962      	ldr	r2, [r4, #20]
 801112e:	69a3      	ldr	r3, [r4, #24]
 8011130:	fb93 f8f8 	sdiv	r8, r3, r8
 8011134:	4442      	add	r2, r8
 8011136:	9203      	str	r2, [sp, #12]
 8011138:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801113a:	682a      	ldr	r2, [r5, #0]
 801113c:	9600      	str	r6, [sp, #0]
 801113e:	4407      	add	r7, r0
 8011140:	68e0      	ldr	r0, [r4, #12]
 8011142:	f7ff ff82 	bl	801104a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011146:	9600      	str	r6, [sp, #0]
 8011148:	4680      	mov	r8, r0
 801114a:	69a3      	ldr	r3, [r4, #24]
 801114c:	686a      	ldr	r2, [r5, #4]
 801114e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8011150:	6920      	ldr	r0, [r4, #16]
 8011152:	f7ff ff7a 	bl	801104a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011156:	4440      	add	r0, r8
 8011158:	e7cc      	b.n	80110f4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801115a:	bf00      	nop
 801115c:	20015814 	.word	0x20015814

08011160 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8011160:	4b07      	ldr	r3, [pc, #28]	; (8011180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8011162:	781b      	ldrb	r3, [r3, #0]
 8011164:	2b01      	cmp	r3, #1
 8011166:	d109      	bne.n	801117c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8011168:	f9b1 3000 	ldrsh.w	r3, [r1]
 801116c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011170:	8003      	strh	r3, [r0, #0]
 8011172:	4b04      	ldr	r3, [pc, #16]	; (8011184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8011174:	881b      	ldrh	r3, [r3, #0]
 8011176:	3b01      	subs	r3, #1
 8011178:	1a9b      	subs	r3, r3, r2
 801117a:	800b      	strh	r3, [r1, #0]
 801117c:	4770      	bx	lr
 801117e:	bf00      	nop
 8011180:	200157f8 	.word	0x200157f8
 8011184:	200157f4 	.word	0x200157f4

08011188 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8011188:	b510      	push	{r4, lr}
 801118a:	4b07      	ldr	r3, [pc, #28]	; (80111a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801118c:	781b      	ldrb	r3, [r3, #0]
 801118e:	2b01      	cmp	r3, #1
 8011190:	d108      	bne.n	80111a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8011192:	4b06      	ldr	r3, [pc, #24]	; (80111ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8011194:	880c      	ldrh	r4, [r1, #0]
 8011196:	881b      	ldrh	r3, [r3, #0]
 8011198:	f9b0 2000 	ldrsh.w	r2, [r0]
 801119c:	3b01      	subs	r3, #1
 801119e:	1b1b      	subs	r3, r3, r4
 80111a0:	8003      	strh	r3, [r0, #0]
 80111a2:	800a      	strh	r2, [r1, #0]
 80111a4:	bd10      	pop	{r4, pc}
 80111a6:	bf00      	nop
 80111a8:	200157f8 	.word	0x200157f8
 80111ac:	200157f4 	.word	0x200157f4

080111b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80111b0:	b510      	push	{r4, lr}
 80111b2:	4b0a      	ldr	r3, [pc, #40]	; (80111dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80111b4:	781b      	ldrb	r3, [r3, #0]
 80111b6:	2b01      	cmp	r3, #1
 80111b8:	d10e      	bne.n	80111d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80111ba:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80111be:	8843      	ldrh	r3, [r0, #2]
 80111c0:	f9b0 4000 	ldrsh.w	r4, [r0]
 80111c4:	8044      	strh	r4, [r0, #2]
 80111c6:	18ca      	adds	r2, r1, r3
 80111c8:	4b05      	ldr	r3, [pc, #20]	; (80111e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80111ca:	881b      	ldrh	r3, [r3, #0]
 80111cc:	1a9b      	subs	r3, r3, r2
 80111ce:	8003      	strh	r3, [r0, #0]
 80111d0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80111d4:	80c3      	strh	r3, [r0, #6]
 80111d6:	8081      	strh	r1, [r0, #4]
 80111d8:	bd10      	pop	{r4, pc}
 80111da:	bf00      	nop
 80111dc:	200157f8 	.word	0x200157f8
 80111e0:	200157f4 	.word	0x200157f4

080111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80111e4:	4b08      	ldr	r3, [pc, #32]	; (8011208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80111e6:	781b      	ldrb	r3, [r3, #0]
 80111e8:	2b01      	cmp	r3, #1
 80111ea:	d10c      	bne.n	8011206 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80111ec:	8803      	ldrh	r3, [r0, #0]
 80111ee:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80111f2:	8842      	ldrh	r2, [r0, #2]
 80111f4:	8002      	strh	r2, [r0, #0]
 80111f6:	185a      	adds	r2, r3, r1
 80111f8:	4b04      	ldr	r3, [pc, #16]	; (801120c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80111fa:	881b      	ldrh	r3, [r3, #0]
 80111fc:	1a9b      	subs	r3, r3, r2
 80111fe:	8043      	strh	r3, [r0, #2]
 8011200:	88c3      	ldrh	r3, [r0, #6]
 8011202:	8083      	strh	r3, [r0, #4]
 8011204:	80c1      	strh	r1, [r0, #6]
 8011206:	4770      	bx	lr
 8011208:	200157f8 	.word	0x200157f8
 801120c:	200157f4 	.word	0x200157f4

08011210 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8011210:	b510      	push	{r4, lr}
 8011212:	4b07      	ldr	r3, [pc, #28]	; (8011230 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8011214:	781b      	ldrb	r3, [r3, #0]
 8011216:	2b01      	cmp	r3, #1
 8011218:	d108      	bne.n	801122c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801121a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801121e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011222:	8003      	strh	r3, [r0, #0]
 8011224:	8893      	ldrh	r3, [r2, #4]
 8011226:	3b01      	subs	r3, #1
 8011228:	1b1b      	subs	r3, r3, r4
 801122a:	800b      	strh	r3, [r1, #0]
 801122c:	bd10      	pop	{r4, pc}
 801122e:	bf00      	nop
 8011230:	200157f8 	.word	0x200157f8

08011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8011234:	b510      	push	{r4, lr}
 8011236:	4b0a      	ldr	r3, [pc, #40]	; (8011260 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8011238:	781b      	ldrb	r3, [r3, #0]
 801123a:	2b01      	cmp	r3, #1
 801123c:	460a      	mov	r2, r1
 801123e:	d10d      	bne.n	801125c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8011240:	8881      	ldrh	r1, [r0, #4]
 8011242:	8803      	ldrh	r3, [r0, #0]
 8011244:	440b      	add	r3, r1
 8011246:	4601      	mov	r1, r0
 8011248:	3b01      	subs	r3, #1
 801124a:	f821 3b02 	strh.w	r3, [r1], #2
 801124e:	f7ff ffdf 	bl	8011210 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8011252:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011256:	88c2      	ldrh	r2, [r0, #6]
 8011258:	8082      	strh	r2, [r0, #4]
 801125a:	80c3      	strh	r3, [r0, #6]
 801125c:	bd10      	pop	{r4, pc}
 801125e:	bf00      	nop
 8011260:	200157f8 	.word	0x200157f8

08011264 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8011264:	b570      	push	{r4, r5, r6, lr}
 8011266:	4c0b      	ldr	r4, [pc, #44]	; (8011294 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8011268:	2300      	movs	r3, #0
 801126a:	4605      	mov	r5, r0
 801126c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8011270:	6820      	ldr	r0, [r4, #0]
 8011272:	460e      	mov	r6, r1
 8011274:	b110      	cbz	r0, 801127c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8011276:	6803      	ldr	r3, [r0, #0]
 8011278:	695b      	ldr	r3, [r3, #20]
 801127a:	4798      	blx	r3
 801127c:	6026      	str	r6, [r4, #0]
 801127e:	6833      	ldr	r3, [r6, #0]
 8011280:	4630      	mov	r0, r6
 8011282:	68db      	ldr	r3, [r3, #12]
 8011284:	4798      	blx	r3
 8011286:	682b      	ldr	r3, [r5, #0]
 8011288:	4628      	mov	r0, r5
 801128a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801128c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011290:	4718      	bx	r3
 8011292:	bf00      	nop
 8011294:	20015844 	.word	0x20015844

08011298 <_ZN8touchgfx11Application13requestRedrawEv>:
 8011298:	4b06      	ldr	r3, [pc, #24]	; (80112b4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801129a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801129e:	4b06      	ldr	r3, [pc, #24]	; (80112b8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80112a0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 80112a4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80112a8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 80112ac:	2100      	movs	r1, #0
 80112ae:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 80112b2:	4770      	bx	lr
 80112b4:	200157f4 	.word	0x200157f4
 80112b8:	200157f6 	.word	0x200157f6

080112bc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80112bc:	4b03      	ldr	r3, [pc, #12]	; (80112cc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80112be:	6818      	ldr	r0, [r3, #0]
 80112c0:	b110      	cbz	r0, 80112c8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80112c2:	6803      	ldr	r3, [r0, #0]
 80112c4:	699b      	ldr	r3, [r3, #24]
 80112c6:	4718      	bx	r3
 80112c8:	4770      	bx	lr
 80112ca:	bf00      	nop
 80112cc:	20015844 	.word	0x20015844

080112d0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80112d0:	4770      	bx	lr
	...

080112d4 <_ZN8touchgfx11Application4drawEv>:
 80112d4:	b507      	push	{r0, r1, r2, lr}
 80112d6:	4b09      	ldr	r3, [pc, #36]	; (80112fc <_ZN8touchgfx11Application4drawEv+0x28>)
 80112d8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80112dc:	4b08      	ldr	r3, [pc, #32]	; (8011300 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80112de:	f8ad 2004 	strh.w	r2, [sp, #4]
 80112e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80112e6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80112ea:	6803      	ldr	r3, [r0, #0]
 80112ec:	2100      	movs	r1, #0
 80112ee:	9100      	str	r1, [sp, #0]
 80112f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80112f2:	4669      	mov	r1, sp
 80112f4:	4798      	blx	r3
 80112f6:	b003      	add	sp, #12
 80112f8:	f85d fb04 	ldr.w	pc, [sp], #4
 80112fc:	200157f4 	.word	0x200157f4
 8011300:	200157f6 	.word	0x200157f6

08011304 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8011304:	4b03      	ldr	r3, [pc, #12]	; (8011314 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8011306:	6818      	ldr	r0, [r3, #0]
 8011308:	b110      	cbz	r0, 8011310 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801130a:	6803      	ldr	r3, [r0, #0]
 801130c:	69db      	ldr	r3, [r3, #28]
 801130e:	4718      	bx	r3
 8011310:	4770      	bx	lr
 8011312:	bf00      	nop
 8011314:	20015844 	.word	0x20015844

08011318 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8011318:	4b03      	ldr	r3, [pc, #12]	; (8011328 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801131a:	6818      	ldr	r0, [r3, #0]
 801131c:	b110      	cbz	r0, 8011324 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801131e:	6803      	ldr	r3, [r0, #0]
 8011320:	6a1b      	ldr	r3, [r3, #32]
 8011322:	4718      	bx	r3
 8011324:	4770      	bx	lr
 8011326:	bf00      	nop
 8011328:	20015844 	.word	0x20015844

0801132c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801132c:	2300      	movs	r3, #0
 801132e:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8011332:	4770      	bx	lr

08011334 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8011334:	4b03      	ldr	r3, [pc, #12]	; (8011344 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8011336:	6818      	ldr	r0, [r3, #0]
 8011338:	b110      	cbz	r0, 8011340 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801133a:	6803      	ldr	r3, [r0, #0]
 801133c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801133e:	4718      	bx	r3
 8011340:	4770      	bx	lr
 8011342:	bf00      	nop
 8011344:	20015844 	.word	0x20015844

08011348 <_ZN8touchgfx11Application15handleTickEventEv>:
 8011348:	b570      	push	{r4, r5, r6, lr}
 801134a:	4d32      	ldr	r5, [pc, #200]	; (8011414 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 801134c:	4604      	mov	r4, r0
 801134e:	6828      	ldr	r0, [r5, #0]
 8011350:	b140      	cbz	r0, 8011364 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011352:	7a03      	ldrb	r3, [r0, #8]
 8011354:	b933      	cbnz	r3, 8011364 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011356:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801135a:	6803      	ldr	r3, [r0, #0]
 801135c:	689b      	ldr	r3, [r3, #8]
 801135e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011362:	4718      	bx	r3
 8011364:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8011368:	b97b      	cbnz	r3, 801138a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801136a:	b170      	cbz	r0, 801138a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801136c:	7a03      	ldrb	r3, [r0, #8]
 801136e:	b163      	cbz	r3, 801138a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011370:	4b29      	ldr	r3, [pc, #164]	; (8011418 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8011372:	6818      	ldr	r0, [r3, #0]
 8011374:	b110      	cbz	r0, 801137c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8011376:	6803      	ldr	r3, [r0, #0]
 8011378:	691b      	ldr	r3, [r3, #16]
 801137a:	4798      	blx	r3
 801137c:	6828      	ldr	r0, [r5, #0]
 801137e:	6803      	ldr	r3, [r0, #0]
 8011380:	68db      	ldr	r3, [r3, #12]
 8011382:	4798      	blx	r3
 8011384:	2301      	movs	r3, #1
 8011386:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801138a:	2500      	movs	r5, #0
 801138c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8011390:	42a8      	cmp	r0, r5
 8011392:	dd0c      	ble.n	80113ae <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8011394:	1963      	adds	r3, r4, r5
 8011396:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 801139a:	b132      	cbz	r2, 80113aa <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 801139c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80113a0:	4413      	add	r3, r2
 80113a2:	6858      	ldr	r0, [r3, #4]
 80113a4:	6803      	ldr	r3, [r0, #0]
 80113a6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80113a8:	4798      	blx	r3
 80113aa:	3501      	adds	r5, #1
 80113ac:	e7ee      	b.n	801138c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80113ae:	2300      	movs	r3, #0
 80113b0:	461a      	mov	r2, r3
 80113b2:	4298      	cmp	r0, r3
 80113b4:	d015      	beq.n	80113e2 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 80113b6:	18e1      	adds	r1, r4, r3
 80113b8:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 80113bc:	b16d      	cbz	r5, 80113da <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 80113be:	429a      	cmp	r2, r3
 80113c0:	d00a      	beq.n	80113d8 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 80113c2:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80113c6:	4431      	add	r1, r6
 80113c8:	684e      	ldr	r6, [r1, #4]
 80113ca:	b291      	uxth	r1, r2
 80113cc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80113d0:	604e      	str	r6, [r1, #4]
 80113d2:	18a1      	adds	r1, r4, r2
 80113d4:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 80113d8:	3201      	adds	r2, #1
 80113da:	3301      	adds	r3, #1
 80113dc:	e7e9      	b.n	80113b2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 80113de:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 80113e2:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 80113e6:	4295      	cmp	r5, r2
 80113e8:	dd0d      	ble.n	8011406 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 80113ea:	1e6b      	subs	r3, r5, #1
 80113ec:	b29b      	uxth	r3, r3
 80113ee:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 80113f2:	4618      	mov	r0, r3
 80113f4:	3104      	adds	r1, #4
 80113f6:	4285      	cmp	r5, r0
 80113f8:	ddf1      	ble.n	80113de <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 80113fa:	f851 6f04 	ldr.w	r6, [r1, #4]!
 80113fe:	f841 6c04 	str.w	r6, [r1, #-4]
 8011402:	3001      	adds	r0, #1
 8011404:	e7f7      	b.n	80113f6 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8011406:	4b04      	ldr	r3, [pc, #16]	; (8011418 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8011408:	6818      	ldr	r0, [r3, #0]
 801140a:	b110      	cbz	r0, 8011412 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 801140c:	6803      	ldr	r3, [r0, #0]
 801140e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011410:	e7a5      	b.n	801135e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8011412:	bd70      	pop	{r4, r5, r6, pc}
 8011414:	20015848 	.word	0x20015848
 8011418:	20015844 	.word	0x20015844

0801141c <_ZN8touchgfx11ApplicationD1Ev>:
 801141c:	4770      	bx	lr

0801141e <_ZN8touchgfx11ApplicationD0Ev>:
 801141e:	b510      	push	{r4, lr}
 8011420:	f44f 719c 	mov.w	r1, #312	; 0x138
 8011424:	4604      	mov	r4, r0
 8011426:	f00f fbb7 	bl	8020b98 <_ZdlPvj>
 801142a:	4620      	mov	r0, r4
 801142c:	bd10      	pop	{r4, pc}

0801142e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801142e:	b510      	push	{r4, lr}
 8011430:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011434:	888a      	ldrh	r2, [r1, #4]
 8011436:	f9b0 3000 	ldrsh.w	r3, [r0]
 801143a:	4422      	add	r2, r4
 801143c:	b212      	sxth	r2, r2
 801143e:	4293      	cmp	r3, r2
 8011440:	da15      	bge.n	801146e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011442:	8882      	ldrh	r2, [r0, #4]
 8011444:	4413      	add	r3, r2
 8011446:	b21b      	sxth	r3, r3
 8011448:	429c      	cmp	r4, r3
 801144a:	da10      	bge.n	801146e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801144c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8011450:	88c9      	ldrh	r1, [r1, #6]
 8011452:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011456:	4419      	add	r1, r3
 8011458:	b209      	sxth	r1, r1
 801145a:	428a      	cmp	r2, r1
 801145c:	da07      	bge.n	801146e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801145e:	88c0      	ldrh	r0, [r0, #6]
 8011460:	4410      	add	r0, r2
 8011462:	b200      	sxth	r0, r0
 8011464:	4283      	cmp	r3, r0
 8011466:	bfac      	ite	ge
 8011468:	2000      	movge	r0, #0
 801146a:	2001      	movlt	r0, #1
 801146c:	bd10      	pop	{r4, pc}
 801146e:	2000      	movs	r0, #0
 8011470:	e7fc      	b.n	801146c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08011472 <_ZN8touchgfx4Rect10restrictToEss>:
 8011472:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011476:	2b00      	cmp	r3, #0
 8011478:	b510      	push	{r4, lr}
 801147a:	da04      	bge.n	8011486 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801147c:	8884      	ldrh	r4, [r0, #4]
 801147e:	4423      	add	r3, r4
 8011480:	8083      	strh	r3, [r0, #4]
 8011482:	2300      	movs	r3, #0
 8011484:	8003      	strh	r3, [r0, #0]
 8011486:	f9b0 4000 	ldrsh.w	r4, [r0]
 801148a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801148e:	1b09      	subs	r1, r1, r4
 8011490:	428b      	cmp	r3, r1
 8011492:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011496:	bfc8      	it	gt
 8011498:	8081      	strhgt	r1, [r0, #4]
 801149a:	2b00      	cmp	r3, #0
 801149c:	da04      	bge.n	80114a8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801149e:	88c1      	ldrh	r1, [r0, #6]
 80114a0:	440b      	add	r3, r1
 80114a2:	80c3      	strh	r3, [r0, #6]
 80114a4:	2300      	movs	r3, #0
 80114a6:	8043      	strh	r3, [r0, #2]
 80114a8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80114ac:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80114b0:	1a52      	subs	r2, r2, r1
 80114b2:	4293      	cmp	r3, r2
 80114b4:	bfc8      	it	gt
 80114b6:	80c2      	strhgt	r2, [r0, #6]
 80114b8:	bd10      	pop	{r4, pc}
	...

080114bc <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80114bc:	b510      	push	{r4, lr}
 80114be:	4b10      	ldr	r3, [pc, #64]	; (8011500 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80114c0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80114c4:	4b0f      	ldr	r3, [pc, #60]	; (8011504 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80114c6:	460c      	mov	r4, r1
 80114c8:	4620      	mov	r0, r4
 80114ca:	f9b3 1000 	ldrsh.w	r1, [r3]
 80114ce:	f7ff ffd0 	bl	8011472 <_ZN8touchgfx4Rect10restrictToEss>
 80114d2:	4b0d      	ldr	r3, [pc, #52]	; (8011508 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80114d4:	6818      	ldr	r0, [r3, #0]
 80114d6:	b190      	cbz	r0, 80114fe <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80114d8:	6803      	ldr	r3, [r0, #0]
 80114da:	4621      	mov	r1, r4
 80114dc:	689b      	ldr	r3, [r3, #8]
 80114de:	4798      	blx	r3
 80114e0:	4b0a      	ldr	r3, [pc, #40]	; (801150c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80114e2:	6818      	ldr	r0, [r3, #0]
 80114e4:	b118      	cbz	r0, 80114ee <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80114e6:	6803      	ldr	r3, [r0, #0]
 80114e8:	4621      	mov	r1, r4
 80114ea:	689b      	ldr	r3, [r3, #8]
 80114ec:	4798      	blx	r3
 80114ee:	4b08      	ldr	r3, [pc, #32]	; (8011510 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80114f0:	6818      	ldr	r0, [r3, #0]
 80114f2:	6803      	ldr	r3, [r0, #0]
 80114f4:	4621      	mov	r1, r4
 80114f6:	69db      	ldr	r3, [r3, #28]
 80114f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80114fc:	4718      	bx	r3
 80114fe:	bd10      	pop	{r4, pc}
 8011500:	200157f6 	.word	0x200157f6
 8011504:	200157f4 	.word	0x200157f4
 8011508:	20015844 	.word	0x20015844
 801150c:	20015840 	.word	0x20015840
 8011510:	20015800 	.word	0x20015800

08011514 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011516:	4606      	mov	r6, r0
 8011518:	4608      	mov	r0, r1
 801151a:	460f      	mov	r7, r1
 801151c:	f7f9 fed1 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011520:	b9e8      	cbnz	r0, 801155e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011522:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011526:	f9b6 4000 	ldrsh.w	r4, [r6]
 801152a:	42a5      	cmp	r5, r4
 801152c:	db17      	blt.n	801155e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801152e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011532:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011536:	429a      	cmp	r2, r3
 8011538:	db11      	blt.n	801155e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801153a:	88b9      	ldrh	r1, [r7, #4]
 801153c:	440d      	add	r5, r1
 801153e:	88b1      	ldrh	r1, [r6, #4]
 8011540:	440c      	add	r4, r1
 8011542:	b22d      	sxth	r5, r5
 8011544:	b224      	sxth	r4, r4
 8011546:	42a5      	cmp	r5, r4
 8011548:	dc09      	bgt.n	801155e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801154a:	88f8      	ldrh	r0, [r7, #6]
 801154c:	4410      	add	r0, r2
 801154e:	88f2      	ldrh	r2, [r6, #6]
 8011550:	4413      	add	r3, r2
 8011552:	b200      	sxth	r0, r0
 8011554:	b21b      	sxth	r3, r3
 8011556:	4298      	cmp	r0, r3
 8011558:	bfcc      	ite	gt
 801155a:	2000      	movgt	r0, #0
 801155c:	2001      	movle	r0, #1
 801155e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011560 <_ZN8touchgfx11Application11getInstanceEv>:
 8011560:	4b01      	ldr	r3, [pc, #4]	; (8011568 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8011562:	6818      	ldr	r0, [r3, #0]
 8011564:	4770      	bx	lr
 8011566:	bf00      	nop
 8011568:	20015854 	.word	0x20015854

0801156c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 801156c:	2300      	movs	r3, #0
 801156e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8011572:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8011576:	30a8      	adds	r0, #168	; 0xa8
 8011578:	f802 3b01 	strb.w	r3, [r2], #1
 801157c:	4282      	cmp	r2, r0
 801157e:	d1fb      	bne.n	8011578 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8011580:	4770      	bx	lr

08011582 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011582:	4603      	mov	r3, r0
 8011584:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8011588:	2200      	movs	r2, #0
 801158a:	801a      	strh	r2, [r3, #0]
 801158c:	805a      	strh	r2, [r3, #2]
 801158e:	809a      	strh	r2, [r3, #4]
 8011590:	80da      	strh	r2, [r3, #6]
 8011592:	3308      	adds	r3, #8
 8011594:	428b      	cmp	r3, r1
 8011596:	d1f8      	bne.n	801158a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8011598:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801159c:	4770      	bx	lr
	...

080115a0 <_ZN8touchgfx11ApplicationC1Ev>:
 80115a0:	b570      	push	{r4, r5, r6, lr}
 80115a2:	4b19      	ldr	r3, [pc, #100]	; (8011608 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80115a4:	6003      	str	r3, [r0, #0]
 80115a6:	2500      	movs	r5, #0
 80115a8:	4604      	mov	r4, r0
 80115aa:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80115ae:	30a8      	adds	r0, #168	; 0xa8
 80115b0:	f7ff ffe7 	bl	8011582 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80115b4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80115b8:	f7ff ffe3 	bl	8011582 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80115bc:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80115c0:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80115c4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80115c8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80115cc:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80115d0:	490e      	ldr	r1, [pc, #56]	; (801160c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80115d2:	480f      	ldr	r0, [pc, #60]	; (8011610 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80115d4:	4e0f      	ldr	r6, [pc, #60]	; (8011614 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80115d6:	f00e fec3 	bl	8020360 <CRC_Lock>
 80115da:	4b0f      	ldr	r3, [pc, #60]	; (8011618 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80115dc:	b158      	cbz	r0, 80115f6 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 80115de:	801d      	strh	r5, [r3, #0]
 80115e0:	4a0e      	ldr	r2, [pc, #56]	; (801161c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80115e2:	2300      	movs	r3, #0
 80115e4:	6013      	str	r3, [r2, #0]
 80115e6:	4a0e      	ldr	r2, [pc, #56]	; (8011620 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80115e8:	6033      	str	r3, [r6, #0]
 80115ea:	4620      	mov	r0, r4
 80115ec:	6013      	str	r3, [r2, #0]
 80115ee:	f7ff ffbd 	bl	801156c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80115f2:	4620      	mov	r0, r4
 80115f4:	bd70      	pop	{r4, r5, r6, pc}
 80115f6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80115fa:	2002      	movs	r0, #2
 80115fc:	801a      	strh	r2, [r3, #0]
 80115fe:	6030      	str	r0, [r6, #0]
 8011600:	f001 fae8 	bl	8012bd4 <_ZN8touchgfx6Screen4drawEv>
 8011604:	e7ec      	b.n	80115e0 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8011606:	bf00      	nop
 8011608:	080247a8 	.word	0x080247a8
 801160c:	b5e8b5cd 	.word	0xb5e8b5cd
 8011610:	f407a5c2 	.word	0xf407a5c2
 8011614:	20015844 	.word	0x20015844
 8011618:	2000008c 	.word	0x2000008c
 801161c:	20015854 	.word	0x20015854
 8011620:	20015848 	.word	0x20015848

08011624 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011624:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011628:	3b01      	subs	r3, #1
 801162a:	b29b      	uxth	r3, r3
 801162c:	428b      	cmp	r3, r1
 801162e:	b510      	push	{r4, lr}
 8011630:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011634:	d908      	bls.n	8011648 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011636:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801163a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801163e:	681a      	ldr	r2, [r3, #0]
 8011640:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011644:	685a      	ldr	r2, [r3, #4]
 8011646:	6062      	str	r2, [r4, #4]
 8011648:	bd10      	pop	{r4, pc}
	...

0801164c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801164c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011650:	4b94      	ldr	r3, [pc, #592]	; (80118a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011652:	b08f      	sub	sp, #60	; 0x3c
 8011654:	ac0a      	add	r4, sp, #40	; 0x28
 8011656:	e884 0006 	stmia.w	r4, {r1, r2}
 801165a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801165e:	4b92      	ldr	r3, [pc, #584]	; (80118a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8011660:	4683      	mov	fp, r0
 8011662:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011666:	4620      	mov	r0, r4
 8011668:	f7ff ff03 	bl	8011472 <_ZN8touchgfx4Rect10restrictToEss>
 801166c:	4620      	mov	r0, r4
 801166e:	f7f9 fe28 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011672:	2800      	cmp	r0, #0
 8011674:	d16a      	bne.n	801174c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011676:	9403      	str	r4, [sp, #12]
 8011678:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801167c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011680:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8011684:	2400      	movs	r4, #0
 8011686:	9301      	str	r3, [sp, #4]
 8011688:	36a0      	adds	r6, #160	; 0xa0
 801168a:	42a5      	cmp	r5, r4
 801168c:	d00d      	beq.n	80116aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801168e:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8011692:	9803      	ldr	r0, [sp, #12]
 8011694:	f7ff ff3e 	bl	8011514 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011698:	b128      	cbz	r0, 80116a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 801169a:	1e69      	subs	r1, r5, #1
 801169c:	1b09      	subs	r1, r1, r4
 801169e:	b289      	uxth	r1, r1
 80116a0:	9801      	ldr	r0, [sp, #4]
 80116a2:	f7ff ffbf 	bl	8011624 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80116a6:	3401      	adds	r4, #1
 80116a8:	e7ef      	b.n	801168a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80116aa:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80116ae:	9704      	str	r7, [sp, #16]
 80116b0:	1e7b      	subs	r3, r7, #1
 80116b2:	9302      	str	r3, [sp, #8]
 80116b4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80116b8:	2400      	movs	r4, #0
 80116ba:	4655      	mov	r5, sl
 80116bc:	9705      	str	r7, [sp, #20]
 80116be:	4626      	mov	r6, r4
 80116c0:	9b05      	ldr	r3, [sp, #20]
 80116c2:	2b00      	cmp	r3, #0
 80116c4:	d078      	beq.n	80117b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 80116c6:	9903      	ldr	r1, [sp, #12]
 80116c8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80116cc:	f7ff feaf 	bl	801142e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80116d0:	b360      	cbz	r0, 801172c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80116d2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80116d6:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 80116da:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 80116de:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 80116e2:	45e6      	cmp	lr, ip
 80116e4:	db35      	blt.n	8011752 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80116e6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80116ea:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80116ee:	4472      	add	r2, lr
 80116f0:	4463      	add	r3, ip
 80116f2:	b212      	sxth	r2, r2
 80116f4:	b21b      	sxth	r3, r3
 80116f6:	429a      	cmp	r2, r3
 80116f8:	dc2b      	bgt.n	8011752 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80116fa:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80116fe:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011702:	fa1f f288 	uxth.w	r2, r8
 8011706:	4413      	add	r3, r2
 8011708:	b29b      	uxth	r3, r3
 801170a:	45c1      	cmp	r9, r8
 801170c:	fa0f fe83 	sxth.w	lr, r3
 8011710:	fa1f fc89 	uxth.w	ip, r9
 8011714:	db0f      	blt.n	8011736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011716:	eba3 030c 	sub.w	r3, r3, ip
 801171a:	1ac9      	subs	r1, r1, r3
 801171c:	b209      	sxth	r1, r1
 801171e:	2900      	cmp	r1, #0
 8011720:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011724:	dd12      	ble.n	801174c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011726:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801172a:	4604      	mov	r4, r0
 801172c:	9b05      	ldr	r3, [sp, #20]
 801172e:	3b01      	subs	r3, #1
 8011730:	9305      	str	r3, [sp, #20]
 8011732:	3d08      	subs	r5, #8
 8011734:	e7c4      	b.n	80116c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011736:	4461      	add	r1, ip
 8011738:	b209      	sxth	r1, r1
 801173a:	4571      	cmp	r1, lr
 801173c:	dc3a      	bgt.n	80117b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801173e:	eba2 020c 	sub.w	r2, r2, ip
 8011742:	b212      	sxth	r2, r2
 8011744:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011748:	2a00      	cmp	r2, #0
 801174a:	dcee      	bgt.n	801172a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801174c:	b00f      	add	sp, #60	; 0x3c
 801174e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011752:	45c1      	cmp	r9, r8
 8011754:	db2e      	blt.n	80117b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011756:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801175a:	4499      	add	r9, r3
 801175c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8011760:	4498      	add	r8, r3
 8011762:	fa0f f989 	sxth.w	r9, r9
 8011766:	fa0f f888 	sxth.w	r8, r8
 801176a:	45c1      	cmp	r9, r8
 801176c:	dc22      	bgt.n	80117b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801176e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8011772:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011776:	fa1f f28c 	uxth.w	r2, ip
 801177a:	4413      	add	r3, r2
 801177c:	b29b      	uxth	r3, r3
 801177e:	45e6      	cmp	lr, ip
 8011780:	fa1f f88e 	uxth.w	r8, lr
 8011784:	fa0f f983 	sxth.w	r9, r3
 8011788:	db0a      	blt.n	80117a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 801178a:	eba3 0308 	sub.w	r3, r3, r8
 801178e:	1ac9      	subs	r1, r1, r3
 8011790:	b209      	sxth	r1, r1
 8011792:	2900      	cmp	r1, #0
 8011794:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8011798:	ddd8      	ble.n	801174c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801179a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801179e:	e7c4      	b.n	801172a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80117a0:	4441      	add	r1, r8
 80117a2:	b209      	sxth	r1, r1
 80117a4:	4549      	cmp	r1, r9
 80117a6:	dc05      	bgt.n	80117b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80117a8:	eba2 0208 	sub.w	r2, r2, r8
 80117ac:	b212      	sxth	r2, r2
 80117ae:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80117b2:	e7c9      	b.n	8011748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80117b4:	4606      	mov	r6, r0
 80117b6:	e7b9      	b.n	801172c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80117b8:	2c00      	cmp	r4, #0
 80117ba:	f47f af7d 	bne.w	80116b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80117be:	2e00      	cmp	r6, #0
 80117c0:	f000 81e1 	beq.w	8011b86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80117c4:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80117c8:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80117cc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80117d0:	b2b9      	uxth	r1, r7
 80117d2:	9105      	str	r1, [sp, #20]
 80117d4:	9805      	ldr	r0, [sp, #20]
 80117d6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80117da:	4401      	add	r1, r0
 80117dc:	b2b3      	uxth	r3, r6
 80117de:	b289      	uxth	r1, r1
 80117e0:	441a      	add	r2, r3
 80117e2:	9106      	str	r1, [sp, #24]
 80117e4:	b292      	uxth	r2, r2
 80117e6:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 80117ea:	fa0f f882 	sxth.w	r8, r2
 80117ee:	4655      	mov	r5, sl
 80117f0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80117f4:	9b04      	ldr	r3, [sp, #16]
 80117f6:	2b00      	cmp	r3, #0
 80117f8:	d058      	beq.n	80118ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 80117fa:	9903      	ldr	r1, [sp, #12]
 80117fc:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011800:	f7ff fe15 	bl	801142e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011804:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011808:	b1d8      	cbz	r0, 8011842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801180a:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801180e:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011812:	4576      	cmp	r6, lr
 8011814:	dc26      	bgt.n	8011864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011816:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801181a:	44f4      	add	ip, lr
 801181c:	fa0f fc8c 	sxth.w	ip, ip
 8011820:	45e0      	cmp	r8, ip
 8011822:	db1f      	blt.n	8011864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011824:	428f      	cmp	r7, r1
 8011826:	fa1f fc81 	uxth.w	ip, r1
 801182a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801182e:	dc0f      	bgt.n	8011850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011830:	9806      	ldr	r0, [sp, #24]
 8011832:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011836:	eba0 0c0c 	sub.w	ip, r0, ip
 801183a:	eba1 010c 	sub.w	r1, r1, ip
 801183e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011842:	4620      	mov	r0, r4
 8011844:	9904      	ldr	r1, [sp, #16]
 8011846:	3901      	subs	r1, #1
 8011848:	9104      	str	r1, [sp, #16]
 801184a:	3d08      	subs	r5, #8
 801184c:	4604      	mov	r4, r0
 801184e:	e7cf      	b.n	80117f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8011850:	4461      	add	r1, ip
 8011852:	b209      	sxth	r1, r1
 8011854:	4549      	cmp	r1, r9
 8011856:	dcf5      	bgt.n	8011844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011858:	9905      	ldr	r1, [sp, #20]
 801185a:	eba1 0c0c 	sub.w	ip, r1, ip
 801185e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8011862:	e7ee      	b.n	8011842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011864:	428f      	cmp	r7, r1
 8011866:	dced      	bgt.n	8011844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011868:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801186c:	4461      	add	r1, ip
 801186e:	b209      	sxth	r1, r1
 8011870:	4589      	cmp	r9, r1
 8011872:	dbe7      	blt.n	8011844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011874:	4576      	cmp	r6, lr
 8011876:	fa1f fc8e 	uxth.w	ip, lr
 801187a:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801187e:	dc08      	bgt.n	8011892 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8011880:	eba2 0c0c 	sub.w	ip, r2, ip
 8011884:	eba1 010c 	sub.w	r1, r1, ip
 8011888:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 801188c:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8011890:	e7d7      	b.n	8011842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011892:	4461      	add	r1, ip
 8011894:	b209      	sxth	r1, r1
 8011896:	4588      	cmp	r8, r1
 8011898:	dbd4      	blt.n	8011844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801189a:	eba3 0c0c 	sub.w	ip, r3, ip
 801189e:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80118a2:	e7ce      	b.n	8011842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80118a4:	200157f6 	.word	0x200157f6
 80118a8:	200157f4 	.word	0x200157f4
 80118ac:	2c00      	cmp	r4, #0
 80118ae:	f000 816a 	beq.w	8011b86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80118b2:	9b02      	ldr	r3, [sp, #8]
 80118b4:	3301      	adds	r3, #1
 80118b6:	f000 8166 	beq.w	8011b86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80118ba:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80118be:	4621      	mov	r1, r4
 80118c0:	9803      	ldr	r0, [sp, #12]
 80118c2:	f7ff fe27 	bl	8011514 <_ZNK8touchgfx4Rect8includesERKS0_>
 80118c6:	b120      	cbz	r0, 80118d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80118c8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80118cc:	9801      	ldr	r0, [sp, #4]
 80118ce:	f7ff fea9 	bl	8011624 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80118d2:	9903      	ldr	r1, [sp, #12]
 80118d4:	4620      	mov	r0, r4
 80118d6:	f7ff fdaa 	bl	801142e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80118da:	2800      	cmp	r0, #0
 80118dc:	f000 809b 	beq.w	8011a16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80118e0:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 80118e4:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 80118e8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80118ec:	9309      	str	r3, [sp, #36]	; 0x24
 80118ee:	b281      	uxth	r1, r0
 80118f0:	eb01 0c03 	add.w	ip, r1, r3
 80118f4:	fa1f f98c 	uxth.w	r9, ip
 80118f8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80118fc:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011900:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8011904:	b2ab      	uxth	r3, r5
 8011906:	eb03 040c 	add.w	r4, r3, ip
 801190a:	b2a4      	uxth	r4, r4
 801190c:	9405      	str	r4, [sp, #20]
 801190e:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8011912:	9404      	str	r4, [sp, #16]
 8011914:	4285      	cmp	r5, r0
 8011916:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801191a:	f340 809a 	ble.w	8011a52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801191e:	1a5b      	subs	r3, r3, r1
 8011920:	b29b      	uxth	r3, r3
 8011922:	4596      	cmp	lr, r2
 8011924:	fa0f f589 	sxth.w	r5, r9
 8011928:	b21e      	sxth	r6, r3
 801192a:	dd2e      	ble.n	801198a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801192c:	9f02      	ldr	r7, [sp, #8]
 801192e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8011932:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011936:	9f04      	ldr	r7, [sp, #16]
 8011938:	1b7f      	subs	r7, r7, r5
 801193a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801193e:	fa1f fe8e 	uxth.w	lr, lr
 8011942:	b292      	uxth	r2, r2
 8011944:	ebae 0102 	sub.w	r1, lr, r2
 8011948:	4486      	add	lr, r0
 801194a:	442a      	add	r2, r5
 801194c:	b289      	uxth	r1, r1
 801194e:	fa0f fe8e 	sxth.w	lr, lr
 8011952:	b212      	sxth	r2, r2
 8011954:	b20c      	sxth	r4, r1
 8011956:	ebae 0202 	sub.w	r2, lr, r2
 801195a:	4367      	muls	r7, r4
 801195c:	4372      	muls	r2, r6
 801195e:	4297      	cmp	r7, r2
 8011960:	db09      	blt.n	8011976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 8011962:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8011966:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 801196a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801196e:	449c      	add	ip, r3
 8011970:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011974:	e680      	b.n	8011678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011976:	4401      	add	r1, r0
 8011978:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 801197c:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 8011980:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011984:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011988:	e676      	b.n	8011678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801198a:	9f04      	ldr	r7, [sp, #16]
 801198c:	42bd      	cmp	r5, r7
 801198e:	da27      	bge.n	80119e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8011990:	9902      	ldr	r1, [sp, #8]
 8011992:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8011996:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 801199a:	eb04 010e 	add.w	r1, r4, lr
 801199e:	fa1f f881 	uxth.w	r8, r1
 80119a2:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80119a6:	4411      	add	r1, r2
 80119a8:	eba1 0108 	sub.w	r1, r1, r8
 80119ac:	b289      	uxth	r1, r1
 80119ae:	fa0f f988 	sxth.w	r9, r8
 80119b2:	eba2 020e 	sub.w	r2, r2, lr
 80119b6:	fa0f f881 	sxth.w	r8, r1
 80119ba:	1b7f      	subs	r7, r7, r5
 80119bc:	4372      	muls	r2, r6
 80119be:	fb08 f707 	mul.w	r7, r8, r7
 80119c2:	42ba      	cmp	r2, r7
 80119c4:	dc06      	bgt.n	80119d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80119c6:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 80119ca:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 80119ce:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 80119d2:	e7ca      	b.n	801196a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80119d4:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 80119d8:	4421      	add	r1, r4
 80119da:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80119de:	e64b      	b.n	8011678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80119e0:	9d05      	ldr	r5, [sp, #20]
 80119e2:	eba9 0505 	sub.w	r5, r9, r5
 80119e6:	b2ad      	uxth	r5, r5
 80119e8:	2c06      	cmp	r4, #6
 80119ea:	fa0f fe85 	sxth.w	lr, r5
 80119ee:	d818      	bhi.n	8011a22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 80119f0:	9b04      	ldr	r3, [sp, #16]
 80119f2:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 80119f6:	1c63      	adds	r3, r4, #1
 80119f8:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 80119fc:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8011a00:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011a04:	9b01      	ldr	r3, [sp, #4]
 8011a06:	9d01      	ldr	r5, [sp, #4]
 8011a08:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011a0c:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8011a10:	805a      	strh	r2, [r3, #2]
 8011a12:	809e      	strh	r6, [r3, #4]
 8011a14:	80d9      	strh	r1, [r3, #6]
 8011a16:	9b02      	ldr	r3, [sp, #8]
 8011a18:	3b01      	subs	r3, #1
 8011a1a:	9302      	str	r3, [sp, #8]
 8011a1c:	f1aa 0a08 	sub.w	sl, sl, #8
 8011a20:	e747      	b.n	80118b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8011a22:	9a02      	ldr	r2, [sp, #8]
 8011a24:	45b6      	cmp	lr, r6
 8011a26:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011a2a:	db0d      	blt.n	8011a48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 8011a2c:	449c      	add	ip, r3
 8011a2e:	fa1f fc8c 	uxth.w	ip, ip
 8011a32:	445a      	add	r2, fp
 8011a34:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011a38:	448c      	add	ip, r1
 8011a3a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 8011a3e:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8011a42:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011a46:	e617      	b.n	8011678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011a48:	445a      	add	r2, fp
 8011a4a:	44ac      	add	ip, r5
 8011a4c:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8011a50:	e78e      	b.n	8011970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011a52:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011a56:	fa1f f18e 	uxth.w	r1, lr
 8011a5a:	eb01 0806 	add.w	r8, r1, r6
 8011a5e:	b293      	uxth	r3, r2
 8011a60:	fa1f f888 	uxth.w	r8, r8
 8011a64:	9306      	str	r3, [sp, #24]
 8011a66:	fa0f f388 	sxth.w	r3, r8
 8011a6a:	9307      	str	r3, [sp, #28]
 8011a6c:	9f06      	ldr	r7, [sp, #24]
 8011a6e:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 8011a72:	443b      	add	r3, r7
 8011a74:	b29b      	uxth	r3, r3
 8011a76:	4596      	cmp	lr, r2
 8011a78:	9308      	str	r3, [sp, #32]
 8011a7a:	da25      	bge.n	8011ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8011a7c:	9905      	ldr	r1, [sp, #20]
 8011a7e:	eba3 0308 	sub.w	r3, r3, r8
 8011a82:	eba9 0401 	sub.w	r4, r9, r1
 8011a86:	b2a4      	uxth	r4, r4
 8011a88:	b29b      	uxth	r3, r3
 8011a8a:	fa0f f984 	sxth.w	r9, r4
 8011a8e:	b219      	sxth	r1, r3
 8011a90:	eba2 020e 	sub.w	r2, r2, lr
 8011a94:	1b40      	subs	r0, r0, r5
 8011a96:	fb09 f202 	mul.w	r2, r9, r2
 8011a9a:	4348      	muls	r0, r1
 8011a9c:	4282      	cmp	r2, r0
 8011a9e:	9a02      	ldr	r2, [sp, #8]
 8011aa0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011aa4:	445a      	add	r2, fp
 8011aa6:	dc06      	bgt.n	8011ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8011aa8:	9b07      	ldr	r3, [sp, #28]
 8011aaa:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 8011aae:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 8011ab2:	44a4      	add	ip, r4
 8011ab4:	e75c      	b.n	8011970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011ab6:	9904      	ldr	r1, [sp, #16]
 8011ab8:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 8011abc:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 8011ac0:	4433      	add	r3, r6
 8011ac2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011ac6:	e5d7      	b.n	8011678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011ac8:	9f06      	ldr	r7, [sp, #24]
 8011aca:	9b04      	ldr	r3, [sp, #16]
 8011acc:	1bc9      	subs	r1, r1, r7
 8011ace:	fa0f f789 	sxth.w	r7, r9
 8011ad2:	b289      	uxth	r1, r1
 8011ad4:	429f      	cmp	r7, r3
 8011ad6:	fa0f fe81 	sxth.w	lr, r1
 8011ada:	dd22      	ble.n	8011b22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 8011adc:	9a05      	ldr	r2, [sp, #20]
 8011ade:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011ae2:	1b40      	subs	r0, r0, r5
 8011ae4:	eba9 0202 	sub.w	r2, r9, r2
 8011ae8:	9d07      	ldr	r5, [sp, #28]
 8011aea:	b292      	uxth	r2, r2
 8011aec:	eba5 0a03 	sub.w	sl, r5, r3
 8011af0:	b214      	sxth	r4, r2
 8011af2:	9b02      	ldr	r3, [sp, #8]
 8011af4:	fb0e f000 	mul.w	r0, lr, r0
 8011af8:	fb04 fa0a 	mul.w	sl, r4, sl
 8011afc:	00db      	lsls	r3, r3, #3
 8011afe:	4550      	cmp	r0, sl
 8011b00:	445b      	add	r3, fp
 8011b02:	db03      	blt.n	8011b0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011b04:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8011b08:	4494      	add	ip, r2
 8011b0a:	e731      	b.n	8011970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011b0c:	9a04      	ldr	r2, [sp, #16]
 8011b0e:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011b12:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011b16:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8011b1a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011b1e:	4431      	add	r1, r6
 8011b20:	e75b      	b.n	80119da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8011b22:	9b08      	ldr	r3, [sp, #32]
 8011b24:	eba3 0308 	sub.w	r3, r3, r8
 8011b28:	b29b      	uxth	r3, r3
 8011b2a:	2c06      	cmp	r4, #6
 8011b2c:	b21d      	sxth	r5, r3
 8011b2e:	d813      	bhi.n	8011b58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8011b30:	9b07      	ldr	r3, [sp, #28]
 8011b32:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011b36:	1c63      	adds	r3, r4, #1
 8011b38:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 8011b3c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011b40:	9b01      	ldr	r3, [sp, #4]
 8011b42:	9901      	ldr	r1, [sp, #4]
 8011b44:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011b48:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 8011b4c:	805a      	strh	r2, [r3, #2]
 8011b4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011b50:	809a      	strh	r2, [r3, #4]
 8011b52:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011b56:	e75e      	b.n	8011a16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011b58:	9802      	ldr	r0, [sp, #8]
 8011b5a:	4575      	cmp	r5, lr
 8011b5c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8011b60:	db0d      	blt.n	8011b7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8011b62:	4431      	add	r1, r6
 8011b64:	9b06      	ldr	r3, [sp, #24]
 8011b66:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8011b6a:	b289      	uxth	r1, r1
 8011b6c:	4458      	add	r0, fp
 8011b6e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011b72:	4419      	add	r1, r3
 8011b74:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8011b78:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 8011b7c:	e57c      	b.n	8011678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011b7e:	4458      	add	r0, fp
 8011b80:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8011b84:	e79c      	b.n	8011ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8011b86:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 8011b8a:	2e07      	cmp	r6, #7
 8011b8c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8011b90:	d812      	bhi.n	8011bb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 8011b92:	1c75      	adds	r5, r6, #1
 8011b94:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8011b98:	9d01      	ldr	r5, [sp, #4]
 8011b9a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8011b9e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011ba2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8011ba6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8011baa:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8011bae:	442c      	add	r4, r5
 8011bb0:	8061      	strh	r1, [r4, #2]
 8011bb2:	80a2      	strh	r2, [r4, #4]
 8011bb4:	80e3      	strh	r3, [r4, #6]
 8011bb6:	e5c9      	b.n	801174c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011bb8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011bbc:	3e01      	subs	r6, #1
 8011bbe:	445c      	add	r4, fp
 8011bc0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8011bc4:	f04f 37ff 	mov.w	r7, #4294967295
 8011bc8:	2500      	movs	r5, #0
 8011bca:	9305      	str	r3, [sp, #20]
 8011bcc:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8011bd0:	9302      	str	r3, [sp, #8]
 8011bd2:	1e72      	subs	r2, r6, #1
 8011bd4:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8011bd8:	9304      	str	r3, [sp, #16]
 8011bda:	4691      	mov	r9, r2
 8011bdc:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8011be0:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011be4:	bf14      	ite	ne
 8011be6:	9905      	ldrne	r1, [sp, #20]
 8011be8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8011bec:	6818      	ldr	r0, [r3, #0]
 8011bee:	9207      	str	r2, [sp, #28]
 8011bf0:	bf18      	it	ne
 8011bf2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011bf6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8011bfa:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8011bfe:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011c02:	9306      	str	r3, [sp, #24]
 8011c04:	fb18 f801 	smulbb	r8, r8, r1
 8011c08:	6859      	ldr	r1, [r3, #4]
 8011c0a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011c0e:	4671      	mov	r1, lr
 8011c10:	a80c      	add	r0, sp, #48	; 0x30
 8011c12:	f7fb f87b 	bl	800cd0c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011c16:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8011c1a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8011c1e:	9b04      	ldr	r3, [sp, #16]
 8011c20:	9a02      	ldr	r2, [sp, #8]
 8011c22:	fb10 f001 	smulbb	r0, r0, r1
 8011c26:	fb02 8803 	mla	r8, r2, r3, r8
 8011c2a:	eba0 0108 	sub.w	r1, r0, r8
 8011c2e:	f04f 0c08 	mov.w	ip, #8
 8011c32:	fb90 f0fc 	sdiv	r0, r0, ip
 8011c36:	4288      	cmp	r0, r1
 8011c38:	dc20      	bgt.n	8011c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011c3a:	4551      	cmp	r1, sl
 8011c3c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011c40:	da03      	bge.n	8011c4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8011c42:	b1d9      	cbz	r1, 8011c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011c44:	468a      	mov	sl, r1
 8011c46:	464f      	mov	r7, r9
 8011c48:	4635      	mov	r5, r6
 8011c4a:	f109 39ff 	add.w	r9, r9, #4294967295
 8011c4e:	f119 0f02 	cmn.w	r9, #2
 8011c52:	d1c5      	bne.n	8011be0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011c54:	4616      	mov	r6, r2
 8011c56:	3201      	adds	r2, #1
 8011c58:	f1a4 0408 	sub.w	r4, r4, #8
 8011c5c:	d1b6      	bne.n	8011bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 8011c5e:	9b01      	ldr	r3, [sp, #4]
 8011c60:	b2ac      	uxth	r4, r5
 8011c62:	00ed      	lsls	r5, r5, #3
 8011c64:	1958      	adds	r0, r3, r5
 8011c66:	1c7b      	adds	r3, r7, #1
 8011c68:	d10b      	bne.n	8011c82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 8011c6a:	4601      	mov	r1, r0
 8011c6c:	9803      	ldr	r0, [sp, #12]
 8011c6e:	f7fb f84d 	bl	800cd0c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011c72:	4621      	mov	r1, r4
 8011c74:	9801      	ldr	r0, [sp, #4]
 8011c76:	f7ff fcd5 	bl	8011624 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011c7a:	e4fd      	b.n	8011678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011c7c:	464f      	mov	r7, r9
 8011c7e:	4635      	mov	r5, r6
 8011c80:	e7ed      	b.n	8011c5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8011c82:	9b01      	ldr	r3, [sp, #4]
 8011c84:	00ff      	lsls	r7, r7, #3
 8011c86:	19d9      	adds	r1, r3, r7
 8011c88:	f7fb f840 	bl	800cd0c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011c8c:	9b03      	ldr	r3, [sp, #12]
 8011c8e:	cb03      	ldmia	r3!, {r0, r1}
 8011c90:	445f      	add	r7, fp
 8011c92:	445d      	add	r5, fp
 8011c94:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8011c98:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 8011c9c:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 8011ca0:	9b03      	ldr	r3, [sp, #12]
 8011ca2:	6869      	ldr	r1, [r5, #4]
 8011ca4:	c303      	stmia	r3!, {r0, r1}
 8011ca6:	e7e4      	b.n	8011c72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

08011ca8 <_ZN8touchgfx11Application10invalidateEv>:
 8011ca8:	4b09      	ldr	r3, [pc, #36]	; (8011cd0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8011caa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011cae:	4b09      	ldr	r3, [pc, #36]	; (8011cd4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8011cb0:	b082      	sub	sp, #8
 8011cb2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011cb6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011cba:	2100      	movs	r1, #0
 8011cbc:	9100      	str	r1, [sp, #0]
 8011cbe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011cc2:	ab02      	add	r3, sp, #8
 8011cc4:	e913 0006 	ldmdb	r3, {r1, r2}
 8011cc8:	b002      	add	sp, #8
 8011cca:	f7ff bcbf 	b.w	801164c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011cce:	bf00      	nop
 8011cd0:	200157f4 	.word	0x200157f4
 8011cd4:	200157f6 	.word	0x200157f6

08011cd8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cdc:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8011ce0:	b09b      	sub	sp, #108	; 0x6c
 8011ce2:	4604      	mov	r4, r0
 8011ce4:	4630      	mov	r0, r6
 8011ce6:	f7f9 faec 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011cea:	4605      	mov	r5, r0
 8011cec:	b940      	cbnz	r0, 8011d00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8011cee:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011cf2:	4620      	mov	r0, r4
 8011cf4:	f7ff fcaa 	bl	801164c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011cf8:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8011cfc:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011d00:	4bc9      	ldr	r3, [pc, #804]	; (8012028 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011d02:	681b      	ldr	r3, [r3, #0]
 8011d04:	2b00      	cmp	r3, #0
 8011d06:	d03e      	beq.n	8011d86 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011d08:	4dc8      	ldr	r5, [pc, #800]	; (801202c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8011d0a:	4628      	mov	r0, r5
 8011d0c:	f7f9 fad9 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d10:	4606      	mov	r6, r0
 8011d12:	2800      	cmp	r0, #0
 8011d14:	d137      	bne.n	8011d86 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011d16:	4628      	mov	r0, r5
 8011d18:	f7ff fa4a 	bl	80111b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011d1c:	6829      	ldr	r1, [r5, #0]
 8011d1e:	686a      	ldr	r2, [r5, #4]
 8011d20:	4620      	mov	r0, r4
 8011d22:	f7ff fc93 	bl	801164c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011d26:	802e      	strh	r6, [r5, #0]
 8011d28:	806e      	strh	r6, [r5, #2]
 8011d2a:	80ae      	strh	r6, [r5, #4]
 8011d2c:	80ee      	strh	r6, [r5, #6]
 8011d2e:	ae09      	add	r6, sp, #36	; 0x24
 8011d30:	4630      	mov	r0, r6
 8011d32:	f7ff fc26 	bl	8011582 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011d36:	4abe      	ldr	r2, [pc, #760]	; (8012030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011d38:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8011d3c:	8815      	ldrh	r5, [r2, #0]
 8011d3e:	9202      	str	r2, [sp, #8]
 8011d40:	462b      	mov	r3, r5
 8011d42:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011d46:	429f      	cmp	r7, r3
 8011d48:	d924      	bls.n	8011d94 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8011d4a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8011d4e:	2907      	cmp	r1, #7
 8011d50:	d816      	bhi.n	8011d80 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8011d52:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011d56:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8011d5a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 8011d5e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8011d62:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011d66:	1c4a      	adds	r2, r1, #1
 8011d68:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8011d6c:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8011d70:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8011d74:	f8a2 9002 	strh.w	r9, [r2, #2]
 8011d78:	f8a2 e004 	strh.w	lr, [r2, #4]
 8011d7c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011d80:	3301      	adds	r3, #1
 8011d82:	b29b      	uxth	r3, r3
 8011d84:	e7df      	b.n	8011d46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8011d86:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011d8a:	2b00      	cmp	r3, #0
 8011d8c:	d1cf      	bne.n	8011d2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8011d8e:	b01b      	add	sp, #108	; 0x6c
 8011d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d94:	462f      	mov	r7, r5
 8011d96:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8011d9a:	42bb      	cmp	r3, r7
 8011d9c:	d90b      	bls.n	8011db6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8011d9e:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8011da2:	4620      	mov	r0, r4
 8011da4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8011da8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8011dac:	3701      	adds	r7, #1
 8011dae:	f7ff fc4d 	bl	801164c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011db2:	b2bf      	uxth	r7, r7
 8011db4:	e7ef      	b.n	8011d96 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8011db6:	4a9f      	ldr	r2, [pc, #636]	; (8012034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8011db8:	6813      	ldr	r3, [r2, #0]
 8011dba:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8011dbe:	2b01      	cmp	r3, #1
 8011dc0:	4690      	mov	r8, r2
 8011dc2:	f040 80e6 	bne.w	8011f92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8011dc6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8011dca:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8011dce:	4629      	mov	r1, r5
 8011dd0:	33aa      	adds	r3, #170	; 0xaa
 8011dd2:	2500      	movs	r5, #0
 8011dd4:	428f      	cmp	r7, r1
 8011dd6:	f103 0308 	add.w	r3, r3, #8
 8011dda:	dd0a      	ble.n	8011df2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8011ddc:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8011de0:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8011de4:	4402      	add	r2, r0
 8011de6:	b212      	sxth	r2, r2
 8011de8:	4295      	cmp	r5, r2
 8011dea:	bfb8      	it	lt
 8011dec:	4615      	movlt	r5, r2
 8011dee:	3101      	adds	r1, #1
 8011df0:	e7f0      	b.n	8011dd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8011df2:	4b91      	ldr	r3, [pc, #580]	; (8012038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011df4:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8012034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8011df8:	881b      	ldrh	r3, [r3, #0]
 8011dfa:	2b0f      	cmp	r3, #15
 8011dfc:	bf88      	it	hi
 8011dfe:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8011e02:	f04f 0300 	mov.w	r3, #0
 8011e06:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8011e0a:	bf98      	it	ls
 8011e0c:	f04f 0a01 	movls.w	sl, #1
 8011e10:	46d8      	mov	r8, fp
 8011e12:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011e16:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8011e1a:	4438      	add	r0, r7
 8011e1c:	b207      	sxth	r7, r0
 8011e1e:	f8db 0000 	ldr.w	r0, [fp]
 8011e22:	42bd      	cmp	r5, r7
 8011e24:	6803      	ldr	r3, [r0, #0]
 8011e26:	f340 8084 	ble.w	8011f32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011e2a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8011e2e:	4798      	blx	r3
 8011e30:	eb07 030a 	add.w	r3, r7, sl
 8011e34:	4298      	cmp	r0, r3
 8011e36:	da07      	bge.n	8011e48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011e38:	4285      	cmp	r5, r0
 8011e3a:	dd05      	ble.n	8011e48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011e3c:	4287      	cmp	r7, r0
 8011e3e:	dd6d      	ble.n	8011f1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011e40:	2f00      	cmp	r7, #0
 8011e42:	dd6b      	ble.n	8011f1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011e44:	4628      	mov	r0, r5
 8011e46:	e004      	b.n	8011e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011e48:	4287      	cmp	r7, r0
 8011e4a:	dcfb      	bgt.n	8011e44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8011e4c:	42a8      	cmp	r0, r5
 8011e4e:	bfa8      	it	ge
 8011e50:	4628      	movge	r0, r5
 8011e52:	4b7a      	ldr	r3, [pc, #488]	; (801203c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011e54:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011e58:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011e5c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011e60:	9b02      	ldr	r3, [sp, #8]
 8011e62:	1bc0      	subs	r0, r0, r7
 8011e64:	2200      	movs	r2, #0
 8011e66:	881f      	ldrh	r7, [r3, #0]
 8011e68:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011e6c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011e70:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011e74:	42bb      	cmp	r3, r7
 8011e76:	d9cc      	bls.n	8011e12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011e78:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8011e7c:	ab07      	add	r3, sp, #28
 8011e7e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011e82:	6851      	ldr	r1, [r2, #4]
 8011e84:	c303      	stmia	r3!, {r0, r1}
 8011e86:	a905      	add	r1, sp, #20
 8011e88:	a807      	add	r0, sp, #28
 8011e8a:	f7ff fad0 	bl	801142e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011e8e:	2800      	cmp	r0, #0
 8011e90:	d04c      	beq.n	8011f2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8011e92:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011e96:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8011e9a:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8011e9e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8011ea2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011ea6:	9303      	str	r3, [sp, #12]
 8011ea8:	4686      	mov	lr, r0
 8011eaa:	4290      	cmp	r0, r2
 8011eac:	4448      	add	r0, r9
 8011eae:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8011eb2:	bfb8      	it	lt
 8011eb4:	4696      	movlt	lr, r2
 8011eb6:	444a      	add	r2, r9
 8011eb8:	4299      	cmp	r1, r3
 8011eba:	b280      	uxth	r0, r0
 8011ebc:	b292      	uxth	r2, r2
 8011ebe:	468c      	mov	ip, r1
 8011ec0:	fa0f f982 	sxth.w	r9, r2
 8011ec4:	bfb8      	it	lt
 8011ec6:	469c      	movlt	ip, r3
 8011ec8:	b203      	sxth	r3, r0
 8011eca:	454b      	cmp	r3, r9
 8011ecc:	bfb8      	it	lt
 8011ece:	4602      	movlt	r2, r0
 8011ed0:	eba2 020e 	sub.w	r2, r2, lr
 8011ed4:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011ed8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011edc:	9b03      	ldr	r3, [sp, #12]
 8011ede:	f8ad e01c 	strh.w	lr, [sp, #28]
 8011ee2:	4411      	add	r1, r2
 8011ee4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011ee8:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011eec:	4413      	add	r3, r2
 8011eee:	b289      	uxth	r1, r1
 8011ef0:	b29b      	uxth	r3, r3
 8011ef2:	b208      	sxth	r0, r1
 8011ef4:	b21a      	sxth	r2, r3
 8011ef6:	4290      	cmp	r0, r2
 8011ef8:	bfb8      	it	lt
 8011efa:	460b      	movlt	r3, r1
 8011efc:	eba3 030c 	sub.w	r3, r3, ip
 8011f00:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011f04:	a807      	add	r0, sp, #28
 8011f06:	f7f9 f9dc 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011f0a:	b920      	cbnz	r0, 8011f16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011f0c:	6823      	ldr	r3, [r4, #0]
 8011f0e:	a907      	add	r1, sp, #28
 8011f10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011f12:	4620      	mov	r0, r4
 8011f14:	4798      	blx	r3
 8011f16:	3701      	adds	r7, #1
 8011f18:	b2bf      	uxth	r7, r7
 8011f1a:	e7a9      	b.n	8011e70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011f1c:	f8d8 0000 	ldr.w	r0, [r8]
 8011f20:	6803      	ldr	r3, [r0, #0]
 8011f22:	2101      	movs	r1, #1
 8011f24:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011f28:	4798      	blx	r3
 8011f2a:	e772      	b.n	8011e12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011f2c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011f30:	e7e8      	b.n	8011f04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8011f32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011f34:	4798      	blx	r3
 8011f36:	4b42      	ldr	r3, [pc, #264]	; (8012040 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011f38:	781b      	ldrb	r3, [r3, #0]
 8011f3a:	2b00      	cmp	r3, #0
 8011f3c:	f43f af27 	beq.w	8011d8e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011f40:	2300      	movs	r3, #0
 8011f42:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011f46:	9b02      	ldr	r3, [sp, #8]
 8011f48:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011f4c:	881b      	ldrh	r3, [r3, #0]
 8011f4e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011f52:	429d      	cmp	r5, r3
 8011f54:	f67f af1b 	bls.w	8011d8e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011f58:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011f5c:	2907      	cmp	r1, #7
 8011f5e:	d815      	bhi.n	8011f8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8011f60:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011f64:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011f68:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011f6c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011f70:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011f74:	1c4a      	adds	r2, r1, #1
 8011f76:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011f7a:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011f7e:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8011f82:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011f86:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011f8a:	80d7      	strh	r7, [r2, #6]
 8011f8c:	3301      	adds	r3, #1
 8011f8e:	b29b      	uxth	r3, r3
 8011f90:	e7df      	b.n	8011f52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8011f92:	2b02      	cmp	r3, #2
 8011f94:	f040 8136 	bne.w	8012204 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011f98:	4b2a      	ldr	r3, [pc, #168]	; (8012044 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011f9a:	781b      	ldrb	r3, [r3, #0]
 8011f9c:	2b01      	cmp	r3, #1
 8011f9e:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011fa2:	f000 809c 	beq.w	80120de <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011fa6:	9b02      	ldr	r3, [sp, #8]
 8011fa8:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011fac:	f8b3 b000 	ldrh.w	fp, [r3]
 8011fb0:	f10b 0b01 	add.w	fp, fp, #1
 8011fb4:	fa1f fb8b 	uxth.w	fp, fp
 8011fb8:	2a00      	cmp	r2, #0
 8011fba:	d0bc      	beq.n	8011f36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011fbc:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8011fc0:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011fc4:	441d      	add	r5, r3
 8011fc6:	b22d      	sxth	r5, r5
 8011fc8:	4659      	mov	r1, fp
 8011fca:	f04f 0800 	mov.w	r8, #0
 8011fce:	b28b      	uxth	r3, r1
 8011fd0:	429a      	cmp	r2, r3
 8011fd2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011fd6:	f240 80c1 	bls.w	801215c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011fda:	4427      	add	r7, r4
 8011fdc:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8011fe0:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011fe4:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011fe8:	4563      	cmp	r3, ip
 8011fea:	4608      	mov	r0, r1
 8011fec:	f340 80a3 	ble.w	8012136 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011ff0:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011ff4:	4465      	add	r5, ip
 8011ff6:	b22d      	sxth	r5, r5
 8011ff8:	429d      	cmp	r5, r3
 8011ffa:	bfa8      	it	ge
 8011ffc:	461d      	movge	r5, r3
 8011ffe:	3101      	adds	r1, #1
 8012000:	4680      	mov	r8, r0
 8012002:	e7e4      	b.n	8011fce <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8012004:	d10b      	bne.n	801201e <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8012006:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 801200a:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 801200e:	458c      	cmp	ip, r1
 8012010:	bfb4      	ite	lt
 8012012:	469c      	movlt	ip, r3
 8012014:	46bc      	movge	ip, r7
 8012016:	4572      	cmp	r2, lr
 8012018:	bfb8      	it	lt
 801201a:	4672      	movlt	r2, lr
 801201c:	e088      	b.n	8012130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 801201e:	428a      	cmp	r2, r1
 8012020:	bfb8      	it	lt
 8012022:	460a      	movlt	r2, r1
 8012024:	46bc      	mov	ip, r7
 8012026:	e083      	b.n	8012130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8012028:	20015840 	.word	0x20015840
 801202c:	2001584c 	.word	0x2001584c
 8012030:	2000008c 	.word	0x2000008c
 8012034:	20015800 	.word	0x20015800
 8012038:	200157f6 	.word	0x200157f6
 801203c:	200157f4 	.word	0x200157f4
 8012040:	200157fe 	.word	0x200157fe
 8012044:	200157f8 	.word	0x200157f8
 8012048:	1961      	adds	r1, r4, r5
 801204a:	ab07      	add	r3, sp, #28
 801204c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8012050:	6849      	ldr	r1, [r1, #4]
 8012052:	c303      	stmia	r3!, {r0, r1}
 8012054:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8012058:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801205c:	2b13      	cmp	r3, #19
 801205e:	bfd8      	it	le
 8012060:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8012064:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012068:	440b      	add	r3, r1
 801206a:	1a9b      	subs	r3, r3, r2
 801206c:	a807      	add	r0, sp, #28
 801206e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012072:	f7ff f8b7 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012076:	a807      	add	r0, sp, #28
 8012078:	f7f9 f923 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801207c:	bb78      	cbnz	r0, 80120de <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801207e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8012082:	f8d8 0000 	ldr.w	r0, [r8]
 8012086:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801208a:	f8d0 e000 	ldr.w	lr, [r0]
 801208e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8012092:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012096:	f1bc 0f14 	cmp.w	ip, #20
 801209a:	bfa8      	it	ge
 801209c:	f04f 0c14 	movge.w	ip, #20
 80120a0:	fa1f fc8c 	uxth.w	ip, ip
 80120a4:	f8cd c000 	str.w	ip, [sp]
 80120a8:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 80120ac:	47d0      	blx	sl
 80120ae:	4682      	mov	sl, r0
 80120b0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80120b4:	a807      	add	r0, sp, #28
 80120b6:	f7ff f87b 	bl	80111b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80120ba:	6823      	ldr	r3, [r4, #0]
 80120bc:	4425      	add	r5, r4
 80120be:	4620      	mov	r0, r4
 80120c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80120c2:	a907      	add	r1, sp, #28
 80120c4:	4798      	blx	r3
 80120c6:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 80120ca:	eba0 000a 	sub.w	r0, r0, sl
 80120ce:	b200      	sxth	r0, r0
 80120d0:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 80120d4:	b918      	cbnz	r0, 80120de <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80120d6:	b2b9      	uxth	r1, r7
 80120d8:	4648      	mov	r0, r9
 80120da:	f7ff faa3 	bl	8011624 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80120de:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 80120e2:	f1bb 0f00 	cmp.w	fp, #0
 80120e6:	f43f af26 	beq.w	8011f36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80120ea:	9b02      	ldr	r3, [sp, #8]
 80120ec:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80120f0:	881b      	ldrh	r3, [r3, #0]
 80120f2:	3301      	adds	r3, #1
 80120f4:	b29b      	uxth	r3, r3
 80120f6:	2700      	movs	r7, #0
 80120f8:	b299      	uxth	r1, r3
 80120fa:	458b      	cmp	fp, r1
 80120fc:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8012100:	d9a2      	bls.n	8012048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8012102:	4425      	add	r5, r4
 8012104:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8012108:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 801210c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8012110:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8012114:	4408      	add	r0, r1
 8012116:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 801211a:	4471      	add	r1, lr
 801211c:	b200      	sxth	r0, r0
 801211e:	b209      	sxth	r1, r1
 8012120:	4288      	cmp	r0, r1
 8012122:	469c      	mov	ip, r3
 8012124:	f6bf af6e 	bge.w	8012004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8012128:	4586      	cmp	lr, r0
 801212a:	4672      	mov	r2, lr
 801212c:	bfb8      	it	lt
 801212e:	4602      	movlt	r2, r0
 8012130:	3301      	adds	r3, #1
 8012132:	4667      	mov	r7, ip
 8012134:	e7e0      	b.n	80120f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8012136:	d10c      	bne.n	8012152 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8012138:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 801213c:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8012140:	4287      	cmp	r7, r0
 8012142:	bfb4      	ite	lt
 8012144:	4608      	movlt	r0, r1
 8012146:	4640      	movge	r0, r8
 8012148:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 801214c:	443b      	add	r3, r7
 801214e:	b21b      	sxth	r3, r3
 8012150:	e752      	b.n	8011ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8012152:	4565      	cmp	r5, ip
 8012154:	bfa8      	it	ge
 8012156:	4665      	movge	r5, ip
 8012158:	4640      	mov	r0, r8
 801215a:	e750      	b.n	8011ffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 801215c:	eb09 0007 	add.w	r0, r9, r7
 8012160:	4427      	add	r7, r4
 8012162:	9203      	str	r2, [sp, #12]
 8012164:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8012168:	f1ba 0f13 	cmp.w	sl, #19
 801216c:	bfde      	ittt	le
 801216e:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8012172:	4455      	addle	r5, sl
 8012174:	b22d      	sxthle	r5, r5
 8012176:	f7f9 f8a4 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801217a:	9a03      	ldr	r2, [sp, #12]
 801217c:	2800      	cmp	r0, #0
 801217e:	f47f af1b 	bne.w	8011fb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8012182:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8012186:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801218a:	482a      	ldr	r0, [pc, #168]	; (8012234 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 801218c:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8012190:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8012194:	6800      	ldr	r0, [r0, #0]
 8012196:	f8ad 101c 	strh.w	r1, [sp, #28]
 801219a:	1aad      	subs	r5, r5, r2
 801219c:	2d14      	cmp	r5, #20
 801219e:	f8ad 201e 	strh.w	r2, [sp, #30]
 80121a2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80121a6:	bfa8      	it	ge
 80121a8:	2514      	movge	r5, #20
 80121aa:	f8d0 c000 	ldr.w	ip, [r0]
 80121ae:	b2ad      	uxth	r5, r5
 80121b0:	fa1f fa8a 	uxth.w	sl, sl
 80121b4:	4555      	cmp	r5, sl
 80121b6:	bf94      	ite	ls
 80121b8:	9500      	strls	r5, [sp, #0]
 80121ba:	f8cd a000 	strhi.w	sl, [sp]
 80121be:	b292      	uxth	r2, r2
 80121c0:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 80121c4:	b29b      	uxth	r3, r3
 80121c6:	b289      	uxth	r1, r1
 80121c8:	47a8      	blx	r5
 80121ca:	6823      	ldr	r3, [r4, #0]
 80121cc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80121d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80121d2:	a907      	add	r1, sp, #28
 80121d4:	4620      	mov	r0, r4
 80121d6:	4798      	blx	r3
 80121d8:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80121dc:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 80121e0:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 80121e4:	1a5b      	subs	r3, r3, r1
 80121e6:	440a      	add	r2, r1
 80121e8:	b21b      	sxth	r3, r3
 80121ea:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 80121ee:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 80121f2:	2b00      	cmp	r3, #0
 80121f4:	f47f aed7 	bne.w	8011fa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 80121f8:	fa1f f188 	uxth.w	r1, r8
 80121fc:	4648      	mov	r0, r9
 80121fe:	f7ff fa11 	bl	8011624 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012202:	e6d0      	b.n	8011fa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8012204:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8012208:	42ab      	cmp	r3, r5
 801220a:	f67f ae94 	bls.w	8011f36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801220e:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8012212:	ab07      	add	r3, sp, #28
 8012214:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8012218:	6851      	ldr	r1, [r2, #4]
 801221a:	c303      	stmia	r3!, {r0, r1}
 801221c:	a807      	add	r0, sp, #28
 801221e:	f7f9 f850 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012222:	b920      	cbnz	r0, 801222e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8012224:	6823      	ldr	r3, [r4, #0]
 8012226:	a907      	add	r1, sp, #28
 8012228:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801222a:	4620      	mov	r0, r4
 801222c:	4798      	blx	r3
 801222e:	3501      	adds	r5, #1
 8012230:	b2ad      	uxth	r5, r5
 8012232:	e7e7      	b.n	8012204 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8012234:	20015800 	.word	0x20015800

08012238 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8012238:	4b03      	ldr	r3, [pc, #12]	; (8012248 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801223a:	2200      	movs	r2, #0
 801223c:	801a      	strh	r2, [r3, #0]
 801223e:	805a      	strh	r2, [r3, #2]
 8012240:	809a      	strh	r2, [r3, #4]
 8012242:	80da      	strh	r2, [r3, #6]
 8012244:	4770      	bx	lr
 8012246:	bf00      	nop
 8012248:	2001584c 	.word	0x2001584c

0801224c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801224c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012250:	4606      	mov	r6, r0
 8012252:	b09d      	sub	sp, #116	; 0x74
 8012254:	a803      	add	r0, sp, #12
 8012256:	4614      	mov	r4, r2
 8012258:	468a      	mov	sl, r1
 801225a:	461d      	mov	r5, r3
 801225c:	f000 fe67 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 8012260:	6833      	ldr	r3, [r6, #0]
 8012262:	4630      	mov	r0, r6
 8012264:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012266:	4798      	blx	r3
 8012268:	6833      	ldr	r3, [r6, #0]
 801226a:	4607      	mov	r7, r0
 801226c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801226e:	4630      	mov	r0, r6
 8012270:	4798      	blx	r3
 8012272:	462a      	mov	r2, r5
 8012274:	9000      	str	r0, [sp, #0]
 8012276:	4621      	mov	r1, r4
 8012278:	463b      	mov	r3, r7
 801227a:	a803      	add	r0, sp, #12
 801227c:	f000 feb2 	bl	8012fe4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012280:	2500      	movs	r5, #0
 8012282:	462c      	mov	r4, r5
 8012284:	46a9      	mov	r9, r5
 8012286:	46a8      	mov	r8, r5
 8012288:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801228c:	2300      	movs	r3, #0
 801228e:	9302      	str	r3, [sp, #8]
 8012290:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012294:	429c      	cmp	r4, r3
 8012296:	d002      	beq.n	801229e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8012298:	455c      	cmp	r4, fp
 801229a:	bf18      	it	ne
 801229c:	4625      	movne	r5, r4
 801229e:	ab02      	add	r3, sp, #8
 80122a0:	4632      	mov	r2, r6
 80122a2:	4651      	mov	r1, sl
 80122a4:	a803      	add	r0, sp, #12
 80122a6:	f001 f99f 	bl	80135e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80122aa:	4604      	mov	r4, r0
 80122ac:	b108      	cbz	r0, 80122b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80122ae:	280a      	cmp	r0, #10
 80122b0:	d10a      	bne.n	80122c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80122b2:	45c1      	cmp	r9, r8
 80122b4:	bf38      	it	cc
 80122b6:	46c1      	movcc	r9, r8
 80122b8:	f04f 0800 	mov.w	r8, #0
 80122bc:	2c00      	cmp	r4, #0
 80122be:	d1e5      	bne.n	801228c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80122c0:	4648      	mov	r0, r9
 80122c2:	b01d      	add	sp, #116	; 0x74
 80122c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122c8:	9a02      	ldr	r2, [sp, #8]
 80122ca:	2a00      	cmp	r2, #0
 80122cc:	d0de      	beq.n	801228c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80122ce:	7b57      	ldrb	r7, [r2, #13]
 80122d0:	6833      	ldr	r3, [r6, #0]
 80122d2:	8894      	ldrh	r4, [r2, #4]
 80122d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80122d6:	007f      	lsls	r7, r7, #1
 80122d8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80122dc:	7a97      	ldrb	r7, [r2, #10]
 80122de:	4629      	mov	r1, r5
 80122e0:	4307      	orrs	r7, r0
 80122e2:	4630      	mov	r0, r6
 80122e4:	4798      	blx	r3
 80122e6:	4438      	add	r0, r7
 80122e8:	4480      	add	r8, r0
 80122ea:	fa1f f888 	uxth.w	r8, r8
 80122ee:	e7e5      	b.n	80122bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080122f0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80122f0:	b508      	push	{r3, lr}
 80122f2:	6803      	ldr	r3, [r0, #0]
 80122f4:	68db      	ldr	r3, [r3, #12]
 80122f6:	4798      	blx	r3
 80122f8:	b128      	cbz	r0, 8012306 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80122fa:	7b43      	ldrb	r3, [r0, #13]
 80122fc:	7a80      	ldrb	r0, [r0, #10]
 80122fe:	005b      	lsls	r3, r3, #1
 8012300:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012304:	4318      	orrs	r0, r3
 8012306:	bd08      	pop	{r3, pc}

08012308 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8012308:	b40e      	push	{r1, r2, r3}
 801230a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801230c:	b09e      	sub	sp, #120	; 0x78
 801230e:	ab23      	add	r3, sp, #140	; 0x8c
 8012310:	4605      	mov	r5, r0
 8012312:	f853 4b04 	ldr.w	r4, [r3], #4
 8012316:	9303      	str	r3, [sp, #12]
 8012318:	a805      	add	r0, sp, #20
 801231a:	f000 fe08 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 801231e:	682b      	ldr	r3, [r5, #0]
 8012320:	4628      	mov	r0, r5
 8012322:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012324:	4798      	blx	r3
 8012326:	682b      	ldr	r3, [r5, #0]
 8012328:	4606      	mov	r6, r0
 801232a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801232c:	4628      	mov	r0, r5
 801232e:	4798      	blx	r3
 8012330:	4633      	mov	r3, r6
 8012332:	ae1e      	add	r6, sp, #120	; 0x78
 8012334:	4621      	mov	r1, r4
 8012336:	9000      	str	r0, [sp, #0]
 8012338:	9a03      	ldr	r2, [sp, #12]
 801233a:	2400      	movs	r4, #0
 801233c:	a805      	add	r0, sp, #20
 801233e:	f000 fe51 	bl	8012fe4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012342:	f846 4d68 	str.w	r4, [r6, #-104]!
 8012346:	462a      	mov	r2, r5
 8012348:	4633      	mov	r3, r6
 801234a:	4621      	mov	r1, r4
 801234c:	a805      	add	r0, sp, #20
 801234e:	f001 f94b 	bl	80135e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012352:	b1f0      	cbz	r0, 8012392 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8012354:	280a      	cmp	r0, #10
 8012356:	d018      	beq.n	801238a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8012358:	9f04      	ldr	r7, [sp, #16]
 801235a:	b1b7      	cbz	r7, 801238a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801235c:	7b78      	ldrb	r0, [r7, #13]
 801235e:	7a3b      	ldrb	r3, [r7, #8]
 8012360:	88aa      	ldrh	r2, [r5, #4]
 8012362:	00c1      	lsls	r1, r0, #3
 8012364:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012368:	4319      	orrs	r1, r3
 801236a:	0643      	lsls	r3, r0, #25
 801236c:	bf44      	itt	mi
 801236e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8012372:	b219      	sxthmi	r1, r3
 8012374:	0100      	lsls	r0, r0, #4
 8012376:	79fb      	ldrb	r3, [r7, #7]
 8012378:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801237c:	4303      	orrs	r3, r0
 801237e:	4413      	add	r3, r2
 8012380:	1a5b      	subs	r3, r3, r1
 8012382:	b29b      	uxth	r3, r3
 8012384:	42a3      	cmp	r3, r4
 8012386:	bfc8      	it	gt
 8012388:	b21c      	sxthgt	r4, r3
 801238a:	4633      	mov	r3, r6
 801238c:	462a      	mov	r2, r5
 801238e:	2100      	movs	r1, #0
 8012390:	e7dc      	b.n	801234c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8012392:	b2a0      	uxth	r0, r4
 8012394:	b01e      	add	sp, #120	; 0x78
 8012396:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801239a:	b003      	add	sp, #12
 801239c:	4770      	bx	lr

0801239e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801239e:	b40e      	push	{r1, r2, r3}
 80123a0:	b570      	push	{r4, r5, r6, lr}
 80123a2:	b09d      	sub	sp, #116	; 0x74
 80123a4:	ab21      	add	r3, sp, #132	; 0x84
 80123a6:	4604      	mov	r4, r0
 80123a8:	f853 5b04 	ldr.w	r5, [r3], #4
 80123ac:	9302      	str	r3, [sp, #8]
 80123ae:	a803      	add	r0, sp, #12
 80123b0:	f000 fdbd 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 80123b4:	6823      	ldr	r3, [r4, #0]
 80123b6:	4620      	mov	r0, r4
 80123b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80123ba:	4798      	blx	r3
 80123bc:	6823      	ldr	r3, [r4, #0]
 80123be:	4606      	mov	r6, r0
 80123c0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80123c2:	4620      	mov	r0, r4
 80123c4:	4798      	blx	r3
 80123c6:	4633      	mov	r3, r6
 80123c8:	9000      	str	r0, [sp, #0]
 80123ca:	9a02      	ldr	r2, [sp, #8]
 80123cc:	4629      	mov	r1, r5
 80123ce:	a803      	add	r0, sp, #12
 80123d0:	f000 fe08 	bl	8012fe4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80123d4:	a803      	add	r0, sp, #12
 80123d6:	f001 f9d5 	bl	8013784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80123da:	2401      	movs	r4, #1
 80123dc:	b2a3      	uxth	r3, r4
 80123de:	b140      	cbz	r0, 80123f2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80123e0:	280a      	cmp	r0, #10
 80123e2:	bf08      	it	eq
 80123e4:	3301      	addeq	r3, #1
 80123e6:	a803      	add	r0, sp, #12
 80123e8:	bf08      	it	eq
 80123ea:	b21c      	sxtheq	r4, r3
 80123ec:	f001 f9ca 	bl	8013784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80123f0:	e7f4      	b.n	80123dc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80123f2:	4618      	mov	r0, r3
 80123f4:	b01d      	add	sp, #116	; 0x74
 80123f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80123fa:	b003      	add	sp, #12
 80123fc:	4770      	bx	lr

080123fe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80123fe:	b40e      	push	{r1, r2, r3}
 8012400:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012402:	b09e      	sub	sp, #120	; 0x78
 8012404:	ab23      	add	r3, sp, #140	; 0x8c
 8012406:	4604      	mov	r4, r0
 8012408:	f853 5b04 	ldr.w	r5, [r3], #4
 801240c:	9303      	str	r3, [sp, #12]
 801240e:	a805      	add	r0, sp, #20
 8012410:	f000 fd8d 	bl	8012f2e <_ZN8touchgfx12TextProviderC1Ev>
 8012414:	6823      	ldr	r3, [r4, #0]
 8012416:	4620      	mov	r0, r4
 8012418:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801241a:	4798      	blx	r3
 801241c:	6823      	ldr	r3, [r4, #0]
 801241e:	4606      	mov	r6, r0
 8012420:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012422:	4620      	mov	r0, r4
 8012424:	4798      	blx	r3
 8012426:	4633      	mov	r3, r6
 8012428:	4629      	mov	r1, r5
 801242a:	9000      	str	r0, [sp, #0]
 801242c:	9a03      	ldr	r2, [sp, #12]
 801242e:	a805      	add	r0, sp, #20
 8012430:	ad1e      	add	r5, sp, #120	; 0x78
 8012432:	f000 fdd7 	bl	8012fe4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012436:	2100      	movs	r1, #0
 8012438:	f845 1d68 	str.w	r1, [r5, #-104]!
 801243c:	4622      	mov	r2, r4
 801243e:	462b      	mov	r3, r5
 8012440:	a805      	add	r0, sp, #20
 8012442:	f001 f8d1 	bl	80135e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012446:	26ff      	movs	r6, #255	; 0xff
 8012448:	b1d8      	cbz	r0, 8012482 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 801244a:	280a      	cmp	r0, #10
 801244c:	d012      	beq.n	8012474 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801244e:	9804      	ldr	r0, [sp, #16]
 8012450:	b180      	cbz	r0, 8012474 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8012452:	7b47      	ldrb	r7, [r0, #13]
 8012454:	7922      	ldrb	r2, [r4, #4]
 8012456:	00fb      	lsls	r3, r7, #3
 8012458:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801245c:	7a03      	ldrb	r3, [r0, #8]
 801245e:	430b      	orrs	r3, r1
 8012460:	0679      	lsls	r1, r7, #25
 8012462:	bf44      	itt	mi
 8012464:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012468:	b21b      	sxthmi	r3, r3
 801246a:	1ad3      	subs	r3, r2, r3
 801246c:	b2db      	uxtb	r3, r3
 801246e:	429e      	cmp	r6, r3
 8012470:	bf28      	it	cs
 8012472:	461e      	movcs	r6, r3
 8012474:	462b      	mov	r3, r5
 8012476:	4622      	mov	r2, r4
 8012478:	2100      	movs	r1, #0
 801247a:	a805      	add	r0, sp, #20
 801247c:	f001 f8b4 	bl	80135e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012480:	e7e2      	b.n	8012448 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8012482:	4630      	mov	r0, r6
 8012484:	b01e      	add	sp, #120	; 0x78
 8012486:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801248a:	b003      	add	sp, #12
 801248c:	4770      	bx	lr

0801248e <_ZNK8touchgfx8Drawable10invalidateEv>:
 801248e:	b513      	push	{r0, r1, r4, lr}
 8012490:	6803      	ldr	r3, [r0, #0]
 8012492:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012496:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801249a:	f8ad 1004 	strh.w	r1, [sp, #4]
 801249e:	2400      	movs	r4, #0
 80124a0:	9400      	str	r4, [sp, #0]
 80124a2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80124a6:	691b      	ldr	r3, [r3, #16]
 80124a8:	4669      	mov	r1, sp
 80124aa:	4798      	blx	r3
 80124ac:	b002      	add	sp, #8
 80124ae:	bd10      	pop	{r4, pc}

080124b0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80124b0:	b538      	push	{r3, r4, r5, lr}
 80124b2:	680b      	ldr	r3, [r1, #0]
 80124b4:	460c      	mov	r4, r1
 80124b6:	68db      	ldr	r3, [r3, #12]
 80124b8:	4605      	mov	r5, r0
 80124ba:	4798      	blx	r3
 80124bc:	6823      	ldr	r3, [r4, #0]
 80124be:	4620      	mov	r0, r4
 80124c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80124c2:	4629      	mov	r1, r5
 80124c4:	4798      	blx	r3
 80124c6:	4628      	mov	r0, r5
 80124c8:	bd38      	pop	{r3, r4, r5, pc}

080124ca <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80124ca:	b410      	push	{r4}
 80124cc:	880a      	ldrh	r2, [r1, #0]
 80124ce:	8884      	ldrh	r4, [r0, #4]
 80124d0:	4422      	add	r2, r4
 80124d2:	800a      	strh	r2, [r1, #0]
 80124d4:	88c4      	ldrh	r4, [r0, #6]
 80124d6:	884a      	ldrh	r2, [r1, #2]
 80124d8:	4422      	add	r2, r4
 80124da:	804a      	strh	r2, [r1, #2]
 80124dc:	6940      	ldr	r0, [r0, #20]
 80124de:	b120      	cbz	r0, 80124ea <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80124e0:	6803      	ldr	r3, [r0, #0]
 80124e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80124e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80124e8:	4718      	bx	r3
 80124ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80124ee:	4770      	bx	lr

080124f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80124f0:	b570      	push	{r4, r5, r6, lr}
 80124f2:	8882      	ldrh	r2, [r0, #4]
 80124f4:	880b      	ldrh	r3, [r1, #0]
 80124f6:	4413      	add	r3, r2
 80124f8:	800b      	strh	r3, [r1, #0]
 80124fa:	88c2      	ldrh	r2, [r0, #6]
 80124fc:	884b      	ldrh	r3, [r1, #2]
 80124fe:	460c      	mov	r4, r1
 8012500:	4413      	add	r3, r2
 8012502:	804b      	strh	r3, [r1, #2]
 8012504:	4605      	mov	r5, r0
 8012506:	1d01      	adds	r1, r0, #4
 8012508:	4620      	mov	r0, r4
 801250a:	f7f8 fe97 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 801250e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012512:	2b00      	cmp	r3, #0
 8012514:	dd0b      	ble.n	801252e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012516:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801251a:	2b00      	cmp	r3, #0
 801251c:	dd07      	ble.n	801252e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801251e:	6968      	ldr	r0, [r5, #20]
 8012520:	b128      	cbz	r0, 801252e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012522:	6803      	ldr	r3, [r0, #0]
 8012524:	4621      	mov	r1, r4
 8012526:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012528:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801252c:	4718      	bx	r3
 801252e:	bd70      	pop	{r4, r5, r6, pc}

08012530 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012530:	b570      	push	{r4, r5, r6, lr}
 8012532:	8882      	ldrh	r2, [r0, #4]
 8012534:	880b      	ldrh	r3, [r1, #0]
 8012536:	4413      	add	r3, r2
 8012538:	800b      	strh	r3, [r1, #0]
 801253a:	88c2      	ldrh	r2, [r0, #6]
 801253c:	884b      	ldrh	r3, [r1, #2]
 801253e:	460c      	mov	r4, r1
 8012540:	4413      	add	r3, r2
 8012542:	804b      	strh	r3, [r1, #2]
 8012544:	4605      	mov	r5, r0
 8012546:	1d01      	adds	r1, r0, #4
 8012548:	4620      	mov	r0, r4
 801254a:	f7f8 fe77 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 801254e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012552:	2b00      	cmp	r3, #0
 8012554:	dd18      	ble.n	8012588 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012556:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801255a:	2b00      	cmp	r3, #0
 801255c:	dd14      	ble.n	8012588 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801255e:	6968      	ldr	r0, [r5, #20]
 8012560:	b128      	cbz	r0, 801256e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8012562:	6803      	ldr	r3, [r0, #0]
 8012564:	4621      	mov	r1, r4
 8012566:	691b      	ldr	r3, [r3, #16]
 8012568:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801256c:	4718      	bx	r3
 801256e:	4b07      	ldr	r3, [pc, #28]	; (801258c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8012570:	681b      	ldr	r3, [r3, #0]
 8012572:	3304      	adds	r3, #4
 8012574:	429d      	cmp	r5, r3
 8012576:	d107      	bne.n	8012588 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012578:	f7fe fff2 	bl	8011560 <_ZN8touchgfx11Application11getInstanceEv>
 801257c:	6821      	ldr	r1, [r4, #0]
 801257e:	6862      	ldr	r2, [r4, #4]
 8012580:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012584:	f7ff b862 	b.w	801164c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012588:	bd70      	pop	{r4, r5, r6, pc}
 801258a:	bf00      	nop
 801258c:	20015844 	.word	0x20015844

08012590 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8012590:	b570      	push	{r4, r5, r6, lr}
 8012592:	4604      	mov	r4, r0
 8012594:	4616      	mov	r6, r2
 8012596:	460d      	mov	r5, r1
 8012598:	b901      	cbnz	r1, 801259c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801259a:	b192      	cbz	r2, 80125c2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801259c:	6823      	ldr	r3, [r4, #0]
 801259e:	4620      	mov	r0, r4
 80125a0:	699b      	ldr	r3, [r3, #24]
 80125a2:	4798      	blx	r3
 80125a4:	88e2      	ldrh	r2, [r4, #6]
 80125a6:	88a1      	ldrh	r1, [r4, #4]
 80125a8:	4432      	add	r2, r6
 80125aa:	4429      	add	r1, r5
 80125ac:	4620      	mov	r0, r4
 80125ae:	b212      	sxth	r2, r2
 80125b0:	b209      	sxth	r1, r1
 80125b2:	f7f0 fd69 	bl	8003088 <_ZN8touchgfx8Drawable5setXYEss>
 80125b6:	6823      	ldr	r3, [r4, #0]
 80125b8:	4620      	mov	r0, r4
 80125ba:	699b      	ldr	r3, [r3, #24]
 80125bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125c0:	4718      	bx	r3
 80125c2:	bd70      	pop	{r4, r5, r6, pc}

080125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80125c4:	b510      	push	{r4, lr}
 80125c6:	4604      	mov	r4, r0
 80125c8:	4608      	mov	r0, r1
 80125ca:	2300      	movs	r3, #0
 80125cc:	8023      	strh	r3, [r4, #0]
 80125ce:	8063      	strh	r3, [r4, #2]
 80125d0:	6803      	ldr	r3, [r0, #0]
 80125d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80125d6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80125da:	80a1      	strh	r1, [r4, #4]
 80125dc:	80e2      	strh	r2, [r4, #6]
 80125de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80125e0:	4621      	mov	r1, r4
 80125e2:	4798      	blx	r3
 80125e4:	4620      	mov	r0, r4
 80125e6:	bd10      	pop	{r4, pc}

080125e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 80125e8:	b530      	push	{r4, r5, lr}
 80125ea:	8083      	strh	r3, [r0, #4]
 80125ec:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80125f0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 80125f4:	7183      	strb	r3, [r0, #6]
 80125f6:	79c3      	ldrb	r3, [r0, #7]
 80125f8:	6101      	str	r1, [r0, #16]
 80125fa:	f365 0306 	bfi	r3, r5, #0, #7
 80125fe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8012602:	8282      	strh	r2, [r0, #20]
 8012604:	f365 13c7 	bfi	r3, r5, #7, #1
 8012608:	71c3      	strb	r3, [r0, #7]
 801260a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801260e:	7203      	strb	r3, [r0, #8]
 8012610:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8012614:	7243      	strb	r3, [r0, #9]
 8012616:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801261a:	8143      	strh	r3, [r0, #10]
 801261c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012620:	8183      	strh	r3, [r0, #12]
 8012622:	4b01      	ldr	r3, [pc, #4]	; (8012628 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012624:	6003      	str	r3, [r0, #0]
 8012626:	bd30      	pop	{r4, r5, pc}
 8012628:	0802485c 	.word	0x0802485c

0801262c <_ZNK8touchgfx9ConstFont4findEt>:
 801262c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801262e:	6904      	ldr	r4, [r0, #16]
 8012630:	b3bc      	cbz	r4, 80126a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012632:	88a3      	ldrh	r3, [r4, #4]
 8012634:	8a82      	ldrh	r2, [r0, #20]
 8012636:	1acb      	subs	r3, r1, r3
 8012638:	f102 32ff 	add.w	r2, r2, #4294967295
 801263c:	d431      	bmi.n	80126a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801263e:	4293      	cmp	r3, r2
 8012640:	dd0c      	ble.n	801265c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012642:	230e      	movs	r3, #14
 8012644:	fb03 4302 	mla	r3, r3, r2, r4
 8012648:	889b      	ldrh	r3, [r3, #4]
 801264a:	1a5b      	subs	r3, r3, r1
 801264c:	1ad3      	subs	r3, r2, r3
 801264e:	429a      	cmp	r2, r3
 8012650:	db27      	blt.n	80126a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012652:	2b00      	cmp	r3, #0
 8012654:	bfbc      	itt	lt
 8012656:	2302      	movlt	r3, #2
 8012658:	fb92 f3f3 	sdivlt	r3, r2, r3
 801265c:	2500      	movs	r5, #0
 801265e:	260e      	movs	r6, #14
 8012660:	4295      	cmp	r5, r2
 8012662:	dc1e      	bgt.n	80126a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012664:	fb06 4003 	mla	r0, r6, r3, r4
 8012668:	8887      	ldrh	r7, [r0, #4]
 801266a:	42b9      	cmp	r1, r7
 801266c:	d01a      	beq.n	80126a4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801266e:	d20d      	bcs.n	801268c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8012670:	1e5a      	subs	r2, r3, #1
 8012672:	4295      	cmp	r5, r2
 8012674:	dc15      	bgt.n	80126a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012676:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801267a:	1a5b      	subs	r3, r3, r1
 801267c:	1ad3      	subs	r3, r2, r3
 801267e:	429a      	cmp	r2, r3
 8012680:	db0f      	blt.n	80126a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012682:	429d      	cmp	r5, r3
 8012684:	ddec      	ble.n	8012660 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012686:	1953      	adds	r3, r2, r5
 8012688:	105b      	asrs	r3, r3, #1
 801268a:	e7e9      	b.n	8012660 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801268c:	1c5d      	adds	r5, r3, #1
 801268e:	42aa      	cmp	r2, r5
 8012690:	db07      	blt.n	80126a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012692:	8a43      	ldrh	r3, [r0, #18]
 8012694:	1acb      	subs	r3, r1, r3
 8012696:	442b      	add	r3, r5
 8012698:	429d      	cmp	r5, r3
 801269a:	dc02      	bgt.n	80126a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801269c:	429a      	cmp	r2, r3
 801269e:	dadf      	bge.n	8012660 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80126a0:	e7f1      	b.n	8012686 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80126a2:	2000      	movs	r0, #0
 80126a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080126a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80126a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80126a8:	4604      	mov	r4, r0
 80126aa:	4617      	mov	r7, r2
 80126ac:	461e      	mov	r6, r3
 80126ae:	b911      	cbnz	r1, 80126b6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80126b0:	2500      	movs	r5, #0
 80126b2:	4628      	mov	r0, r5
 80126b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80126b6:	290a      	cmp	r1, #10
 80126b8:	d0fa      	beq.n	80126b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80126ba:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80126be:	4291      	cmp	r1, r2
 80126c0:	d0f6      	beq.n	80126b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80126c2:	f242 020b 	movw	r2, #8203	; 0x200b
 80126c6:	4291      	cmp	r1, r2
 80126c8:	d0f2      	beq.n	80126b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80126ca:	f7ff ffaf 	bl	801262c <_ZNK8touchgfx9ConstFont4findEt>
 80126ce:	4605      	mov	r5, r0
 80126d0:	b950      	cbnz	r0, 80126e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80126d2:	6823      	ldr	r3, [r4, #0]
 80126d4:	4620      	mov	r0, r4
 80126d6:	691b      	ldr	r3, [r3, #16]
 80126d8:	4798      	blx	r3
 80126da:	4601      	mov	r1, r0
 80126dc:	4620      	mov	r0, r4
 80126de:	f7ff ffa5 	bl	801262c <_ZNK8touchgfx9ConstFont4findEt>
 80126e2:	4605      	mov	r5, r0
 80126e4:	2800      	cmp	r0, #0
 80126e6:	d0e3      	beq.n	80126b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80126e8:	6823      	ldr	r3, [r4, #0]
 80126ea:	4629      	mov	r1, r5
 80126ec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80126ee:	4620      	mov	r0, r4
 80126f0:	4798      	blx	r3
 80126f2:	6038      	str	r0, [r7, #0]
 80126f4:	6823      	ldr	r3, [r4, #0]
 80126f6:	4620      	mov	r0, r4
 80126f8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80126fa:	4798      	blx	r3
 80126fc:	7030      	strb	r0, [r6, #0]
 80126fe:	e7d8      	b.n	80126b2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012700 <_ZN8touchgfx4clzuEm>:
 8012700:	4603      	mov	r3, r0
 8012702:	b1c8      	cbz	r0, 8012738 <_ZN8touchgfx4clzuEm+0x38>
 8012704:	0c02      	lsrs	r2, r0, #16
 8012706:	0412      	lsls	r2, r2, #16
 8012708:	b9a2      	cbnz	r2, 8012734 <_ZN8touchgfx4clzuEm+0x34>
 801270a:	0403      	lsls	r3, r0, #16
 801270c:	2010      	movs	r0, #16
 801270e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012712:	bf04      	itt	eq
 8012714:	021b      	lsleq	r3, r3, #8
 8012716:	3008      	addeq	r0, #8
 8012718:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801271c:	bf04      	itt	eq
 801271e:	011b      	lsleq	r3, r3, #4
 8012720:	3004      	addeq	r0, #4
 8012722:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012726:	bf04      	itt	eq
 8012728:	009b      	lsleq	r3, r3, #2
 801272a:	3002      	addeq	r0, #2
 801272c:	2b00      	cmp	r3, #0
 801272e:	db04      	blt.n	801273a <_ZN8touchgfx4clzuEm+0x3a>
 8012730:	3001      	adds	r0, #1
 8012732:	4770      	bx	lr
 8012734:	2000      	movs	r0, #0
 8012736:	e7ea      	b.n	801270e <_ZN8touchgfx4clzuEm+0xe>
 8012738:	2020      	movs	r0, #32
 801273a:	4770      	bx	lr

0801273c <_ZN8touchgfx7muldivuEmmmRm>:
 801273c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012740:	4680      	mov	r8, r0
 8012742:	460f      	mov	r7, r1
 8012744:	4615      	mov	r5, r2
 8012746:	461e      	mov	r6, r3
 8012748:	f7ff ffda 	bl	8012700 <_ZN8touchgfx4clzuEm>
 801274c:	b998      	cbnz	r0, 8012776 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801274e:	4608      	mov	r0, r1
 8012750:	f7ff ffd6 	bl	8012700 <_ZN8touchgfx4clzuEm>
 8012754:	2800      	cmp	r0, #0
 8012756:	dd08      	ble.n	801276a <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012758:	4633      	mov	r3, r6
 801275a:	462a      	mov	r2, r5
 801275c:	4641      	mov	r1, r8
 801275e:	4638      	mov	r0, r7
 8012760:	f7ff ffec 	bl	801273c <_ZN8touchgfx7muldivuEmmmRm>
 8012764:	b003      	add	sp, #12
 8012766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801276a:	f04f 33ff 	mov.w	r3, #4294967295
 801276e:	6033      	str	r3, [r6, #0]
 8012770:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012774:	e7f6      	b.n	8012764 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012776:	fa31 f900 	lsrs.w	r9, r1, r0
 801277a:	fb01 f308 	mul.w	r3, r1, r8
 801277e:	d105      	bne.n	801278c <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8012780:	fbb3 f0f5 	udiv	r0, r3, r5
 8012784:	fb05 3510 	mls	r5, r5, r0, r3
 8012788:	6035      	str	r5, [r6, #0]
 801278a:	e7eb      	b.n	8012764 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801278c:	2301      	movs	r3, #1
 801278e:	fa08 fb00 	lsl.w	fp, r8, r0
 8012792:	fa03 f000 	lsl.w	r0, r3, r0
 8012796:	3801      	subs	r0, #1
 8012798:	462a      	mov	r2, r5
 801279a:	4633      	mov	r3, r6
 801279c:	4641      	mov	r1, r8
 801279e:	4038      	ands	r0, r7
 80127a0:	f7ff ffcc 	bl	801273c <_ZN8touchgfx7muldivuEmmmRm>
 80127a4:	fbbb faf5 	udiv	sl, fp, r5
 80127a8:	462a      	mov	r2, r5
 80127aa:	4607      	mov	r7, r0
 80127ac:	ab01      	add	r3, sp, #4
 80127ae:	fb05 b11a 	mls	r1, r5, sl, fp
 80127b2:	4648      	mov	r0, r9
 80127b4:	f7ff ffc2 	bl	801273c <_ZN8touchgfx7muldivuEmmmRm>
 80127b8:	9b01      	ldr	r3, [sp, #4]
 80127ba:	6832      	ldr	r2, [r6, #0]
 80127bc:	fb09 f40a 	mul.w	r4, r9, sl
 80127c0:	441a      	add	r2, r3
 80127c2:	fbb2 f3f5 	udiv	r3, r2, r5
 80127c6:	441c      	add	r4, r3
 80127c8:	443c      	add	r4, r7
 80127ca:	4420      	add	r0, r4
 80127cc:	fb05 2513 	mls	r5, r5, r3, r2
 80127d0:	e7da      	b.n	8012788 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

080127d2 <_ZN8touchgfx6muldivElllRl>:
 80127d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80127d4:	2800      	cmp	r0, #0
 80127d6:	bfba      	itte	lt
 80127d8:	4240      	neglt	r0, r0
 80127da:	f04f 34ff 	movlt.w	r4, #4294967295
 80127de:	2401      	movge	r4, #1
 80127e0:	2900      	cmp	r1, #0
 80127e2:	bfbc      	itt	lt
 80127e4:	4249      	neglt	r1, r1
 80127e6:	4264      	neglt	r4, r4
 80127e8:	2a00      	cmp	r2, #0
 80127ea:	bfb6      	itet	lt
 80127ec:	4265      	neglt	r5, r4
 80127ee:	4625      	movge	r5, r4
 80127f0:	4252      	neglt	r2, r2
 80127f2:	4288      	cmp	r0, r1
 80127f4:	461e      	mov	r6, r3
 80127f6:	bfc2      	ittt	gt
 80127f8:	4603      	movgt	r3, r0
 80127fa:	4608      	movgt	r0, r1
 80127fc:	4619      	movgt	r1, r3
 80127fe:	ab01      	add	r3, sp, #4
 8012800:	f7ff ff9c 	bl	801273c <_ZN8touchgfx7muldivuEmmmRm>
 8012804:	9b01      	ldr	r3, [sp, #4]
 8012806:	4368      	muls	r0, r5
 8012808:	435c      	muls	r4, r3
 801280a:	6034      	str	r4, [r6, #0]
 801280c:	b002      	add	sp, #8
 801280e:	bd70      	pop	{r4, r5, r6, pc}

08012810 <_ZN8touchgfx6muldivElll>:
 8012810:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012812:	4606      	mov	r6, r0
 8012814:	ab01      	add	r3, sp, #4
 8012816:	460d      	mov	r5, r1
 8012818:	4614      	mov	r4, r2
 801281a:	f7ff ffda 	bl	80127d2 <_ZN8touchgfx6muldivElllRl>
 801281e:	2e00      	cmp	r6, #0
 8012820:	db20      	blt.n	8012864 <_ZN8touchgfx6muldivElll+0x54>
 8012822:	bf14      	ite	ne
 8012824:	2301      	movne	r3, #1
 8012826:	2300      	moveq	r3, #0
 8012828:	2d00      	cmp	r5, #0
 801282a:	db1e      	blt.n	801286a <_ZN8touchgfx6muldivElll+0x5a>
 801282c:	bf14      	ite	ne
 801282e:	2201      	movne	r2, #1
 8012830:	2200      	moveq	r2, #0
 8012832:	2c00      	cmp	r4, #0
 8012834:	fb03 f202 	mul.w	r2, r3, r2
 8012838:	db1a      	blt.n	8012870 <_ZN8touchgfx6muldivElll+0x60>
 801283a:	bf14      	ite	ne
 801283c:	2301      	movne	r3, #1
 801283e:	2300      	moveq	r3, #0
 8012840:	4353      	muls	r3, r2
 8012842:	2b01      	cmp	r3, #1
 8012844:	d117      	bne.n	8012876 <_ZN8touchgfx6muldivElll+0x66>
 8012846:	9b01      	ldr	r3, [sp, #4]
 8012848:	2c00      	cmp	r4, #0
 801284a:	bfb8      	it	lt
 801284c:	4264      	neglt	r4, r4
 801284e:	2b00      	cmp	r3, #0
 8012850:	f104 0401 	add.w	r4, r4, #1
 8012854:	bfb8      	it	lt
 8012856:	425b      	neglt	r3, r3
 8012858:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801285c:	db00      	blt.n	8012860 <_ZN8touchgfx6muldivElll+0x50>
 801285e:	3001      	adds	r0, #1
 8012860:	b002      	add	sp, #8
 8012862:	bd70      	pop	{r4, r5, r6, pc}
 8012864:	f04f 33ff 	mov.w	r3, #4294967295
 8012868:	e7de      	b.n	8012828 <_ZN8touchgfx6muldivElll+0x18>
 801286a:	f04f 32ff 	mov.w	r2, #4294967295
 801286e:	e7e0      	b.n	8012832 <_ZN8touchgfx6muldivElll+0x22>
 8012870:	f04f 33ff 	mov.w	r3, #4294967295
 8012874:	e7e4      	b.n	8012840 <_ZN8touchgfx6muldivElll+0x30>
 8012876:	3301      	adds	r3, #1
 8012878:	d1f2      	bne.n	8012860 <_ZN8touchgfx6muldivElll+0x50>
 801287a:	9b01      	ldr	r3, [sp, #4]
 801287c:	2c00      	cmp	r4, #0
 801287e:	bfb8      	it	lt
 8012880:	4264      	neglt	r4, r4
 8012882:	2b00      	cmp	r3, #0
 8012884:	bfb8      	it	lt
 8012886:	425b      	neglt	r3, r3
 8012888:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801288c:	bfc8      	it	gt
 801288e:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8012892:	e7e5      	b.n	8012860 <_ZN8touchgfx6muldivElll+0x50>

08012894 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012894:	2000      	movs	r0, #0
 8012896:	4770      	bx	lr

08012898 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012898:	2001      	movs	r0, #1
 801289a:	4770      	bx	lr

0801289c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801289c:	2002      	movs	r0, #2
 801289e:	4770      	bx	lr

080128a0 <_ZN8touchgfx6ScreenD1Ev>:
 80128a0:	4770      	bx	lr

080128a2 <_ZN8touchgfx12GestureEventD1Ev>:
 80128a2:	4770      	bx	lr

080128a4 <_ZN8touchgfx9DragEventD1Ev>:
 80128a4:	4770      	bx	lr

080128a6 <_ZN8touchgfx10ClickEventD1Ev>:
 80128a6:	4770      	bx	lr

080128a8 <_ZN8touchgfx10ClickEventD0Ev>:
 80128a8:	b510      	push	{r4, lr}
 80128aa:	210c      	movs	r1, #12
 80128ac:	4604      	mov	r4, r0
 80128ae:	f00e f973 	bl	8020b98 <_ZdlPvj>
 80128b2:	4620      	mov	r0, r4
 80128b4:	bd10      	pop	{r4, pc}

080128b6 <_ZN8touchgfx9DragEventD0Ev>:
 80128b6:	b510      	push	{r4, lr}
 80128b8:	2110      	movs	r1, #16
 80128ba:	4604      	mov	r4, r0
 80128bc:	f00e f96c 	bl	8020b98 <_ZdlPvj>
 80128c0:	4620      	mov	r0, r4
 80128c2:	bd10      	pop	{r4, pc}

080128c4 <_ZN8touchgfx12GestureEventD0Ev>:
 80128c4:	b510      	push	{r4, lr}
 80128c6:	210c      	movs	r1, #12
 80128c8:	4604      	mov	r4, r0
 80128ca:	f00e f965 	bl	8020b98 <_ZdlPvj>
 80128ce:	4620      	mov	r0, r4
 80128d0:	bd10      	pop	{r4, pc}

080128d2 <_ZN8touchgfx6ScreenD0Ev>:
 80128d2:	b510      	push	{r4, lr}
 80128d4:	213c      	movs	r1, #60	; 0x3c
 80128d6:	4604      	mov	r4, r0
 80128d8:	f00e f95e 	bl	8020b98 <_ZdlPvj>
 80128dc:	4620      	mov	r0, r4
 80128de:	bd10      	pop	{r4, pc}

080128e0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80128e0:	b530      	push	{r4, r5, lr}
 80128e2:	460d      	mov	r5, r1
 80128e4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80128e6:	b087      	sub	sp, #28
 80128e8:	4604      	mov	r4, r0
 80128ea:	b301      	cbz	r1, 801292e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80128ec:	a801      	add	r0, sp, #4
 80128ee:	f7ff fe69 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80128f2:	892a      	ldrh	r2, [r5, #8]
 80128f4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80128f8:	7928      	ldrb	r0, [r5, #4]
 80128fa:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80128fe:	f88d 0010 	strb.w	r0, [sp, #16]
 8012902:	1ad2      	subs	r2, r2, r3
 8012904:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012906:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012908:	f8ad 1012 	strh.w	r1, [sp, #18]
 801290c:	441a      	add	r2, r3
 801290e:	896b      	ldrh	r3, [r5, #10]
 8012910:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012914:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012918:	1b5b      	subs	r3, r3, r5
 801291a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801291c:	442b      	add	r3, r5
 801291e:	4d05      	ldr	r5, [pc, #20]	; (8012934 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012920:	9503      	str	r5, [sp, #12]
 8012922:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012926:	6803      	ldr	r3, [r0, #0]
 8012928:	a903      	add	r1, sp, #12
 801292a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801292c:	4798      	blx	r3
 801292e:	b007      	add	sp, #28
 8012930:	bd30      	pop	{r4, r5, pc}
 8012932:	bf00      	nop
 8012934:	080248dc 	.word	0x080248dc

08012938 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801293c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801293e:	b08a      	sub	sp, #40	; 0x28
 8012940:	4604      	mov	r4, r0
 8012942:	460d      	mov	r5, r1
 8012944:	b113      	cbz	r3, 801294c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012946:	790b      	ldrb	r3, [r1, #4]
 8012948:	2b00      	cmp	r3, #0
 801294a:	d044      	beq.n	80129d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801294c:	f104 0804 	add.w	r8, r4, #4
 8012950:	4641      	mov	r1, r8
 8012952:	a803      	add	r0, sp, #12
 8012954:	f7ff fe36 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012958:	792b      	ldrb	r3, [r5, #4]
 801295a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801295e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012962:	b983      	cbnz	r3, 8012986 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012964:	892a      	ldrh	r2, [r5, #8]
 8012966:	88e9      	ldrh	r1, [r5, #6]
 8012968:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801296c:	1b92      	subs	r2, r2, r6
 801296e:	1bc9      	subs	r1, r1, r7
 8012970:	9301      	str	r3, [sp, #4]
 8012972:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012976:	9300      	str	r3, [sp, #0]
 8012978:	b212      	sxth	r2, r2
 801297a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801297e:	b209      	sxth	r1, r1
 8012980:	4640      	mov	r0, r8
 8012982:	f7f8 fb77 	bl	800b074 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012986:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012988:	b329      	cbz	r1, 80129d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801298a:	a805      	add	r0, sp, #20
 801298c:	f7ff fe1a 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012990:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012994:	792b      	ldrb	r3, [r5, #4]
 8012996:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012998:	f88d 3020 	strb.w	r3, [sp, #32]
 801299c:	1abf      	subs	r7, r7, r2
 801299e:	88ea      	ldrh	r2, [r5, #6]
 80129a0:	4417      	add	r7, r2
 80129a2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80129a4:	4417      	add	r7, r2
 80129a6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80129aa:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80129ae:	1ab6      	subs	r6, r6, r2
 80129b0:	892a      	ldrh	r2, [r5, #8]
 80129b2:	4416      	add	r6, r2
 80129b4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80129b6:	4416      	add	r6, r2
 80129b8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80129bc:	4a07      	ldr	r2, [pc, #28]	; (80129dc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80129be:	9207      	str	r2, [sp, #28]
 80129c0:	2600      	movs	r6, #0
 80129c2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80129c6:	6803      	ldr	r3, [r0, #0]
 80129c8:	a907      	add	r1, sp, #28
 80129ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80129cc:	4798      	blx	r3
 80129ce:	792b      	ldrb	r3, [r5, #4]
 80129d0:	b10b      	cbz	r3, 80129d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80129d2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80129d6:	b00a      	add	sp, #40	; 0x28
 80129d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80129dc:	080248b4 	.word	0x080248b4

080129e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80129e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80129e4:	460c      	mov	r4, r1
 80129e6:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80129e8:	b088      	sub	sp, #32
 80129ea:	4605      	mov	r5, r0
 80129ec:	2900      	cmp	r1, #0
 80129ee:	d06d      	beq.n	8012acc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80129f0:	4668      	mov	r0, sp
 80129f2:	f7ff fde7 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80129f6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80129f8:	88e3      	ldrh	r3, [r4, #6]
 80129fa:	f9bd 8000 	ldrsh.w	r8, [sp]
 80129fe:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012a02:	440b      	add	r3, r1
 8012a04:	b21b      	sxth	r3, r3
 8012a06:	4543      	cmp	r3, r8
 8012a08:	db31      	blt.n	8012a6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012a0a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8012a0e:	44c4      	add	ip, r8
 8012a10:	fa0f fc8c 	sxth.w	ip, ip
 8012a14:	4563      	cmp	r3, ip
 8012a16:	da2a      	bge.n	8012a6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012a18:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8012a1a:	8926      	ldrh	r6, [r4, #8]
 8012a1c:	4416      	add	r6, r2
 8012a1e:	b236      	sxth	r6, r6
 8012a20:	42be      	cmp	r6, r7
 8012a22:	db24      	blt.n	8012a6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012a24:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012a28:	4438      	add	r0, r7
 8012a2a:	b200      	sxth	r0, r0
 8012a2c:	4286      	cmp	r6, r0
 8012a2e:	da1e      	bge.n	8012a6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012a30:	8963      	ldrh	r3, [r4, #10]
 8012a32:	4419      	add	r1, r3
 8012a34:	b209      	sxth	r1, r1
 8012a36:	4541      	cmp	r1, r8
 8012a38:	db08      	blt.n	8012a4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012a3a:	4561      	cmp	r1, ip
 8012a3c:	da06      	bge.n	8012a4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012a3e:	89a3      	ldrh	r3, [r4, #12]
 8012a40:	441a      	add	r2, r3
 8012a42:	b212      	sxth	r2, r2
 8012a44:	42ba      	cmp	r2, r7
 8012a46:	db01      	blt.n	8012a4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012a48:	4282      	cmp	r2, r0
 8012a4a:	db10      	blt.n	8012a6e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012a4c:	4b21      	ldr	r3, [pc, #132]	; (8012ad4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8012a4e:	9304      	str	r3, [sp, #16]
 8012a50:	2302      	movs	r3, #2
 8012a52:	f88d 3014 	strb.w	r3, [sp, #20]
 8012a56:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012a58:	2300      	movs	r3, #0
 8012a5a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012a5e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012a62:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012a66:	6803      	ldr	r3, [r0, #0]
 8012a68:	a904      	add	r1, sp, #16
 8012a6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012a6c:	4798      	blx	r3
 8012a6e:	1d29      	adds	r1, r5, #4
 8012a70:	a802      	add	r0, sp, #8
 8012a72:	f7ff fda7 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a76:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012a7a:	88e0      	ldrh	r0, [r4, #6]
 8012a7c:	7921      	ldrb	r1, [r4, #4]
 8012a7e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8012a82:	8922      	ldrh	r2, [r4, #8]
 8012a84:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8012a86:	f88d 1014 	strb.w	r1, [sp, #20]
 8012a8a:	eba3 0808 	sub.w	r8, r3, r8
 8012a8e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012a92:	1bdf      	subs	r7, r3, r7
 8012a94:	b2bb      	uxth	r3, r7
 8012a96:	fa1f f888 	uxth.w	r8, r8
 8012a9a:	8967      	ldrh	r7, [r4, #10]
 8012a9c:	89a4      	ldrh	r4, [r4, #12]
 8012a9e:	4440      	add	r0, r8
 8012aa0:	4460      	add	r0, ip
 8012aa2:	441a      	add	r2, r3
 8012aa4:	44b8      	add	r8, r7
 8012aa6:	4423      	add	r3, r4
 8012aa8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012aac:	4433      	add	r3, r6
 8012aae:	4432      	add	r2, r6
 8012ab0:	44e0      	add	r8, ip
 8012ab2:	4c09      	ldr	r4, [pc, #36]	; (8012ad8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012ab4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012ab6:	9404      	str	r4, [sp, #16]
 8012ab8:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012abc:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012ac0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012ac4:	6803      	ldr	r3, [r0, #0]
 8012ac6:	a904      	add	r1, sp, #16
 8012ac8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012aca:	4798      	blx	r3
 8012acc:	b008      	add	sp, #32
 8012ace:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ad2:	bf00      	nop
 8012ad4:	080248b4 	.word	0x080248b4
 8012ad8:	080248c8 	.word	0x080248c8

08012adc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8012adc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012ade:	4604      	mov	r4, r0
 8012ae0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012ae4:	3201      	adds	r2, #1
 8012ae6:	d112      	bne.n	8012b0e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012ae8:	6803      	ldr	r3, [r0, #0]
 8012aea:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012aee:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012af2:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012af6:	2500      	movs	r5, #0
 8012af8:	9500      	str	r5, [sp, #0]
 8012afa:	466d      	mov	r5, sp
 8012afc:	4629      	mov	r1, r5
 8012afe:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012b02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012b04:	4798      	blx	r3
 8012b06:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012b0a:	e884 0003 	stmia.w	r4, {r0, r1}
 8012b0e:	4620      	mov	r0, r4
 8012b10:	b003      	add	sp, #12
 8012b12:	bd30      	pop	{r4, r5, pc}

08012b14 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012b14:	b513      	push	{r0, r1, r4, lr}
 8012b16:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012b1a:	3301      	adds	r3, #1
 8012b1c:	4604      	mov	r4, r0
 8012b1e:	d109      	bne.n	8012b34 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012b20:	4601      	mov	r1, r0
 8012b22:	4668      	mov	r0, sp
 8012b24:	f7ff fd4e 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b28:	f8bd 3000 	ldrh.w	r3, [sp]
 8012b2c:	8423      	strh	r3, [r4, #32]
 8012b2e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012b32:	8463      	strh	r3, [r4, #34]	; 0x22
 8012b34:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012b38:	b002      	add	sp, #8
 8012b3a:	bd10      	pop	{r4, pc}

08012b3c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012b3c:	b513      	push	{r0, r1, r4, lr}
 8012b3e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012b42:	3301      	adds	r3, #1
 8012b44:	4604      	mov	r4, r0
 8012b46:	d109      	bne.n	8012b5c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012b48:	4601      	mov	r1, r0
 8012b4a:	4668      	mov	r0, sp
 8012b4c:	f7ff fd3a 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b50:	f8bd 3000 	ldrh.w	r3, [sp]
 8012b54:	8423      	strh	r3, [r4, #32]
 8012b56:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012b5a:	8463      	strh	r3, [r4, #34]	; 0x22
 8012b5c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8012b60:	b002      	add	sp, #8
 8012b62:	bd10      	pop	{r4, pc}

08012b64 <_ZN8touchgfx6ScreenC1Ev>:
 8012b64:	b570      	push	{r4, r5, r6, lr}
 8012b66:	4605      	mov	r5, r0
 8012b68:	4b16      	ldr	r3, [pc, #88]	; (8012bc4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012b6a:	f845 3b04 	str.w	r3, [r5], #4
 8012b6e:	2300      	movs	r3, #0
 8012b70:	8103      	strh	r3, [r0, #8]
 8012b72:	8143      	strh	r3, [r0, #10]
 8012b74:	8183      	strh	r3, [r0, #12]
 8012b76:	81c3      	strh	r3, [r0, #14]
 8012b78:	8203      	strh	r3, [r0, #16]
 8012b7a:	8243      	strh	r3, [r0, #18]
 8012b7c:	8283      	strh	r3, [r0, #20]
 8012b7e:	82c3      	strh	r3, [r0, #22]
 8012b80:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012b84:	6203      	str	r3, [r0, #32]
 8012b86:	8483      	strh	r3, [r0, #36]	; 0x24
 8012b88:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012b8a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8012b8e:	4a0e      	ldr	r2, [pc, #56]	; (8012bc8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8012b90:	6343      	str	r3, [r0, #52]	; 0x34
 8012b92:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8012b96:	4b0d      	ldr	r3, [pc, #52]	; (8012bcc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012b98:	6042      	str	r2, [r0, #4]
 8012b9a:	f9b3 6000 	ldrsh.w	r6, [r3]
 8012b9e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8012ba0:	4a0b      	ldr	r2, [pc, #44]	; (8012bd0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8012ba2:	4604      	mov	r4, r0
 8012ba4:	2101      	movs	r1, #1
 8012ba6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8012baa:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8012bae:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012bb2:	4628      	mov	r0, r5
 8012bb4:	4798      	blx	r3
 8012bb6:	6863      	ldr	r3, [r4, #4]
 8012bb8:	4628      	mov	r0, r5
 8012bba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012bbc:	4631      	mov	r1, r6
 8012bbe:	4798      	blx	r3
 8012bc0:	4620      	mov	r0, r4
 8012bc2:	bd70      	pop	{r4, r5, r6, pc}
 8012bc4:	080248f0 	.word	0x080248f0
 8012bc8:	08023ca4 	.word	0x08023ca4
 8012bcc:	200157f6 	.word	0x200157f6
 8012bd0:	200157f4 	.word	0x200157f4

08012bd4 <_ZN8touchgfx6Screen4drawEv>:
 8012bd4:	b507      	push	{r0, r1, r2, lr}
 8012bd6:	4b09      	ldr	r3, [pc, #36]	; (8012bfc <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012bd8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012bdc:	4b08      	ldr	r3, [pc, #32]	; (8012c00 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8012bde:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012be2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012be6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012bea:	6803      	ldr	r3, [r0, #0]
 8012bec:	2100      	movs	r1, #0
 8012bee:	9100      	str	r1, [sp, #0]
 8012bf0:	689b      	ldr	r3, [r3, #8]
 8012bf2:	4669      	mov	r1, sp
 8012bf4:	4798      	blx	r3
 8012bf6:	b003      	add	sp, #12
 8012bf8:	f85d fb04 	ldr.w	pc, [sp], #4
 8012bfc:	200157f4 	.word	0x200157f4
 8012c00:	200157f6 	.word	0x200157f6

08012c04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c08:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012c0c:	2b00      	cmp	r3, #0
 8012c0e:	b089      	sub	sp, #36	; 0x24
 8012c10:	4680      	mov	r8, r0
 8012c12:	460c      	mov	r4, r1
 8012c14:	4615      	mov	r5, r2
 8012c16:	dd0e      	ble.n	8012c36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012c18:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012c1c:	2b00      	cmp	r3, #0
 8012c1e:	dd0a      	ble.n	8012c36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012c20:	4628      	mov	r0, r5
 8012c22:	f7ff ff5b 	bl	8012adc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012c26:	4621      	mov	r1, r4
 8012c28:	f7fe fc01 	bl	801142e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012c2c:	69eb      	ldr	r3, [r5, #28]
 8012c2e:	b928      	cbnz	r0, 8012c3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012c30:	461d      	mov	r5, r3
 8012c32:	2b00      	cmp	r3, #0
 8012c34:	d1f4      	bne.n	8012c20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012c36:	b009      	add	sp, #36	; 0x24
 8012c38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c3c:	ae04      	add	r6, sp, #16
 8012c3e:	2b00      	cmp	r3, #0
 8012c40:	f000 80b5 	beq.w	8012dae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012c44:	682b      	ldr	r3, [r5, #0]
 8012c46:	4629      	mov	r1, r5
 8012c48:	68db      	ldr	r3, [r3, #12]
 8012c4a:	a802      	add	r0, sp, #8
 8012c4c:	4798      	blx	r3
 8012c4e:	4628      	mov	r0, r5
 8012c50:	f7ff ff60 	bl	8012b14 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012c54:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012c58:	4407      	add	r7, r0
 8012c5a:	4628      	mov	r0, r5
 8012c5c:	f7ff ff6e 	bl	8012b3c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012c60:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012c64:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012c68:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012c6c:	4418      	add	r0, r3
 8012c6e:	4621      	mov	r1, r4
 8012c70:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012c74:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012c78:	b23f      	sxth	r7, r7
 8012c7a:	4630      	mov	r0, r6
 8012c7c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012c80:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012c84:	f7f8 fada 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 8012c88:	4628      	mov	r0, r5
 8012c8a:	f7ff ff27 	bl	8012adc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012c8e:	4602      	mov	r2, r0
 8012c90:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012c94:	ab06      	add	r3, sp, #24
 8012c96:	e883 0003 	stmia.w	r3, {r0, r1}
 8012c9a:	4611      	mov	r1, r2
 8012c9c:	4618      	mov	r0, r3
 8012c9e:	f7f8 facd 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 8012ca2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012ca6:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012caa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8012cae:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8012cb2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012cb6:	4299      	cmp	r1, r3
 8012cb8:	d10b      	bne.n	8012cd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012cba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012cbe:	4552      	cmp	r2, sl
 8012cc0:	d107      	bne.n	8012cd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012cc2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012cc6:	455a      	cmp	r2, fp
 8012cc8:	d103      	bne.n	8012cd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012cca:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012cce:	454a      	cmp	r2, r9
 8012cd0:	d06d      	beq.n	8012dae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012cd2:	f1bb 0f00 	cmp.w	fp, #0
 8012cd6:	dd65      	ble.n	8012da4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012cd8:	f1b9 0f00 	cmp.w	r9, #0
 8012cdc:	dd62      	ble.n	8012da4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012cde:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012ce2:	fa1f f08a 	uxth.w	r0, sl
 8012ce6:	4552      	cmp	r2, sl
 8012ce8:	9000      	str	r0, [sp, #0]
 8012cea:	da12      	bge.n	8012d12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8012cec:	9301      	str	r3, [sp, #4]
 8012cee:	9b00      	ldr	r3, [sp, #0]
 8012cf0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012cf4:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012cf8:	1a9a      	subs	r2, r3, r2
 8012cfa:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012cfe:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012d02:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012d06:	69ea      	ldr	r2, [r5, #28]
 8012d08:	4631      	mov	r1, r6
 8012d0a:	4640      	mov	r0, r8
 8012d0c:	f7ff ff7a 	bl	8012c04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012d10:	9b01      	ldr	r3, [sp, #4]
 8012d12:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012d16:	429a      	cmp	r2, r3
 8012d18:	b29f      	uxth	r7, r3
 8012d1a:	da0d      	bge.n	8012d38 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012d1c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012d20:	1aba      	subs	r2, r7, r2
 8012d22:	f8ad a012 	strh.w	sl, [sp, #18]
 8012d26:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012d2a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012d2e:	69ea      	ldr	r2, [r5, #28]
 8012d30:	4631      	mov	r1, r6
 8012d32:	4640      	mov	r0, r8
 8012d34:	f7ff ff66 	bl	8012c04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012d38:	8822      	ldrh	r2, [r4, #0]
 8012d3a:	88a3      	ldrh	r3, [r4, #4]
 8012d3c:	445f      	add	r7, fp
 8012d3e:	4413      	add	r3, r2
 8012d40:	b29b      	uxth	r3, r3
 8012d42:	b2bf      	uxth	r7, r7
 8012d44:	b23a      	sxth	r2, r7
 8012d46:	b219      	sxth	r1, r3
 8012d48:	4291      	cmp	r1, r2
 8012d4a:	dd0d      	ble.n	8012d68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012d4c:	1bdb      	subs	r3, r3, r7
 8012d4e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012d52:	f8ad a012 	strh.w	sl, [sp, #18]
 8012d56:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012d5a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012d5e:	69ea      	ldr	r2, [r5, #28]
 8012d60:	4631      	mov	r1, r6
 8012d62:	4640      	mov	r0, r8
 8012d64:	f7ff ff4e 	bl	8012c04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012d68:	88e2      	ldrh	r2, [r4, #6]
 8012d6a:	8863      	ldrh	r3, [r4, #2]
 8012d6c:	4413      	add	r3, r2
 8012d6e:	9a00      	ldr	r2, [sp, #0]
 8012d70:	444a      	add	r2, r9
 8012d72:	b29b      	uxth	r3, r3
 8012d74:	fa1f f982 	uxth.w	r9, r2
 8012d78:	fa0f f289 	sxth.w	r2, r9
 8012d7c:	b219      	sxth	r1, r3
 8012d7e:	428a      	cmp	r2, r1
 8012d80:	da15      	bge.n	8012dae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012d82:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012d86:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012d8a:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012d8e:	eba3 0309 	sub.w	r3, r3, r9
 8012d92:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012d96:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012d9a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012d9e:	69ea      	ldr	r2, [r5, #28]
 8012da0:	4631      	mov	r1, r6
 8012da2:	e001      	b.n	8012da8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012da4:	69ea      	ldr	r2, [r5, #28]
 8012da6:	4621      	mov	r1, r4
 8012da8:	4640      	mov	r0, r8
 8012daa:	f7ff ff2b 	bl	8012c04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012dae:	4628      	mov	r0, r5
 8012db0:	f7ff fe94 	bl	8012adc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012db4:	6861      	ldr	r1, [r4, #4]
 8012db6:	4602      	mov	r2, r0
 8012db8:	6820      	ldr	r0, [r4, #0]
 8012dba:	4633      	mov	r3, r6
 8012dbc:	c303      	stmia	r3!, {r0, r1}
 8012dbe:	4611      	mov	r1, r2
 8012dc0:	4630      	mov	r0, r6
 8012dc2:	f7f8 fa3b 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 8012dc6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012dca:	2b00      	cmp	r3, #0
 8012dcc:	f77f af33 	ble.w	8012c36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012dd0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012dd4:	2b00      	cmp	r3, #0
 8012dd6:	f77f af2e 	ble.w	8012c36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012dda:	4628      	mov	r0, r5
 8012ddc:	f7ff fe9a 	bl	8012b14 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012de0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012de4:	1a18      	subs	r0, r3, r0
 8012de6:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012dea:	4628      	mov	r0, r5
 8012dec:	f7ff fea6 	bl	8012b3c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012df0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012df4:	1a18      	subs	r0, r3, r0
 8012df6:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012dfa:	682b      	ldr	r3, [r5, #0]
 8012dfc:	4631      	mov	r1, r6
 8012dfe:	689b      	ldr	r3, [r3, #8]
 8012e00:	4628      	mov	r0, r5
 8012e02:	4798      	blx	r3
 8012e04:	e717      	b.n	8012c36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012e06 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012e06:	b570      	push	{r4, r5, r6, lr}
 8012e08:	460c      	mov	r4, r1
 8012e0a:	b086      	sub	sp, #24
 8012e0c:	1d06      	adds	r6, r0, #4
 8012e0e:	2300      	movs	r3, #0
 8012e10:	4631      	mov	r1, r6
 8012e12:	4605      	mov	r5, r0
 8012e14:	a802      	add	r0, sp, #8
 8012e16:	9301      	str	r3, [sp, #4]
 8012e18:	f7ff fbd4 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012e1c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012e20:	8822      	ldrh	r2, [r4, #0]
 8012e22:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012e26:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012e2a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012e2e:	1ad2      	subs	r2, r2, r3
 8012e30:	8863      	ldrh	r3, [r4, #2]
 8012e32:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012e36:	1a5b      	subs	r3, r3, r1
 8012e38:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012e3c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012e40:	aa01      	add	r2, sp, #4
 8012e42:	a904      	add	r1, sp, #16
 8012e44:	4630      	mov	r0, r6
 8012e46:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012e4a:	f7f8 facf 	bl	800b3ec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012e4e:	9a01      	ldr	r2, [sp, #4]
 8012e50:	b11a      	cbz	r2, 8012e5a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012e52:	4621      	mov	r1, r4
 8012e54:	4628      	mov	r0, r5
 8012e56:	f7ff fed5 	bl	8012c04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012e5a:	b006      	add	sp, #24
 8012e5c:	bd70      	pop	{r4, r5, r6, pc}

08012e5e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8012e5e:	b530      	push	{r4, r5, lr}
 8012e60:	4602      	mov	r2, r0
 8012e62:	4604      	mov	r4, r0
 8012e64:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012e68:	b085      	sub	sp, #20
 8012e6a:	460d      	mov	r5, r1
 8012e6c:	6851      	ldr	r1, [r2, #4]
 8012e6e:	466b      	mov	r3, sp
 8012e70:	c303      	stmia	r3!, {r0, r1}
 8012e72:	4629      	mov	r1, r5
 8012e74:	4668      	mov	r0, sp
 8012e76:	f7f8 f9e1 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 8012e7a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012e7e:	b12b      	cbz	r3, 8012e8c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8012e80:	4669      	mov	r1, sp
 8012e82:	4620      	mov	r0, r4
 8012e84:	f7ff ffbf 	bl	8012e06 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012e88:	b005      	add	sp, #20
 8012e8a:	bd30      	pop	{r4, r5, pc}
 8012e8c:	3404      	adds	r4, #4
 8012e8e:	4621      	mov	r1, r4
 8012e90:	a802      	add	r0, sp, #8
 8012e92:	f7ff fb97 	bl	80125c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012e96:	f8bd 3000 	ldrh.w	r3, [sp]
 8012e9a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8012e9e:	1a9b      	subs	r3, r3, r2
 8012ea0:	f8ad 3000 	strh.w	r3, [sp]
 8012ea4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012ea8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012eac:	4669      	mov	r1, sp
 8012eae:	1a9b      	subs	r3, r3, r2
 8012eb0:	4620      	mov	r0, r4
 8012eb2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012eb6:	f7f8 fa60 	bl	800b37a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012eba:	e7e5      	b.n	8012e88 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012ebc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012ebc:	680a      	ldr	r2, [r1, #0]
 8012ebe:	460b      	mov	r3, r1
 8012ec0:	6992      	ldr	r2, [r2, #24]
 8012ec2:	1d01      	adds	r1, r0, #4
 8012ec4:	4618      	mov	r0, r3
 8012ec6:	4710      	bx	r2

08012ec8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012ec8:	4298      	cmp	r0, r3
 8012eca:	d200      	bcs.n	8012ece <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012ecc:	b913      	cbnz	r3, 8012ed4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8012ece:	440a      	add	r2, r1
 8012ed0:	b210      	sxth	r0, r2
 8012ed2:	4770      	bx	lr
 8012ed4:	ee07 0a90 	vmov	s15, r0
 8012ed8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012edc:	ee07 3a90 	vmov	s15, r3
 8012ee0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ee4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012ee8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012eec:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012ef0:	ee07 2a90 	vmov	s15, r2
 8012ef4:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012ef8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012efc:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012f00:	ee07 1a90 	vmov	s15, r1
 8012f04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f08:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012f0c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012f10:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012f14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f18:	bfcc      	ite	gt
 8012f1a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012f1e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012f22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012f26:	ee17 3a90 	vmov	r3, s15
 8012f2a:	b218      	sxth	r0, r3
 8012f2c:	4770      	bx	lr

08012f2e <_ZN8touchgfx12TextProviderC1Ev>:
 8012f2e:	b538      	push	{r3, r4, r5, lr}
 8012f30:	2500      	movs	r5, #0
 8012f32:	2302      	movs	r3, #2
 8012f34:	4604      	mov	r4, r0
 8012f36:	e9c0 5500 	strd	r5, r5, [r0]
 8012f3a:	7403      	strb	r3, [r0, #16]
 8012f3c:	6145      	str	r5, [r0, #20]
 8012f3e:	7605      	strb	r5, [r0, #24]
 8012f40:	83c5      	strh	r5, [r0, #30]
 8012f42:	8405      	strh	r5, [r0, #32]
 8012f44:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012f46:	8705      	strh	r5, [r0, #56]	; 0x38
 8012f48:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012f4a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012f4e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012f52:	220e      	movs	r2, #14
 8012f54:	4629      	mov	r1, r5
 8012f56:	304c      	adds	r0, #76	; 0x4c
 8012f58:	f00e f858 	bl	802100c <memset>
 8012f5c:	2301      	movs	r3, #1
 8012f5e:	4620      	mov	r0, r4
 8012f60:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012f64:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012f68:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012f6c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012f70:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012f74:	f7f2 f8fe 	bl	8005174 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012f78:	4620      	mov	r0, r4
 8012f7a:	bd38      	pop	{r3, r4, r5, pc}

08012f7c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012f7c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012f7e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012f82:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012f84:	fab0 f080 	clz	r0, r0
 8012f88:	0940      	lsrs	r0, r0, #5
 8012f8a:	4770      	bx	lr

08012f8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012f8c:	b530      	push	{r4, r5, lr}
 8012f8e:	2500      	movs	r5, #0
 8012f90:	2401      	movs	r4, #1
 8012f92:	6843      	ldr	r3, [r0, #4]
 8012f94:	b913      	cbnz	r3, 8012f9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012f96:	6803      	ldr	r3, [r0, #0]
 8012f98:	b313      	cbz	r3, 8012fe0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012f9a:	6043      	str	r3, [r0, #4]
 8012f9c:	7e03      	ldrb	r3, [r0, #24]
 8012f9e:	b143      	cbz	r3, 8012fb2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012fa0:	6943      	ldr	r3, [r0, #20]
 8012fa2:	b12b      	cbz	r3, 8012fb0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012fa4:	881a      	ldrh	r2, [r3, #0]
 8012fa6:	b11a      	cbz	r2, 8012fb0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012fa8:	1c9a      	adds	r2, r3, #2
 8012faa:	6142      	str	r2, [r0, #20]
 8012fac:	8818      	ldrh	r0, [r3, #0]
 8012fae:	bd30      	pop	{r4, r5, pc}
 8012fb0:	7605      	strb	r5, [r0, #24]
 8012fb2:	6843      	ldr	r3, [r0, #4]
 8012fb4:	8819      	ldrh	r1, [r3, #0]
 8012fb6:	b199      	cbz	r1, 8012fe0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012fb8:	1c9a      	adds	r2, r3, #2
 8012fba:	2902      	cmp	r1, #2
 8012fbc:	6042      	str	r2, [r0, #4]
 8012fbe:	d1f5      	bne.n	8012fac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012fc0:	7c03      	ldrb	r3, [r0, #16]
 8012fc2:	2b01      	cmp	r3, #1
 8012fc4:	d8e5      	bhi.n	8012f92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012fc6:	1c5a      	adds	r2, r3, #1
 8012fc8:	3302      	adds	r3, #2
 8012fca:	7402      	strb	r2, [r0, #16]
 8012fcc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012fd0:	6143      	str	r3, [r0, #20]
 8012fd2:	2b00      	cmp	r3, #0
 8012fd4:	d0dd      	beq.n	8012f92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012fd6:	881b      	ldrh	r3, [r3, #0]
 8012fd8:	2b00      	cmp	r3, #0
 8012fda:	d0da      	beq.n	8012f92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012fdc:	7604      	strb	r4, [r0, #24]
 8012fde:	e7d8      	b.n	8012f92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012fe0:	2000      	movs	r0, #0
 8012fe2:	e7e4      	b.n	8012fae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012fe4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012fe4:	b430      	push	{r4, r5}
 8012fe6:	6001      	str	r1, [r0, #0]
 8012fe8:	2100      	movs	r1, #0
 8012fea:	6041      	str	r1, [r0, #4]
 8012fec:	6815      	ldr	r5, [r2, #0]
 8012fee:	6085      	str	r5, [r0, #8]
 8012ff0:	6852      	ldr	r2, [r2, #4]
 8012ff2:	6443      	str	r3, [r0, #68]	; 0x44
 8012ff4:	9b02      	ldr	r3, [sp, #8]
 8012ff6:	60c2      	str	r2, [r0, #12]
 8012ff8:	7401      	strb	r1, [r0, #16]
 8012ffa:	6141      	str	r1, [r0, #20]
 8012ffc:	7601      	strb	r1, [r0, #24]
 8012ffe:	8701      	strh	r1, [r0, #56]	; 0x38
 8013000:	8401      	strh	r1, [r0, #32]
 8013002:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8013006:	6483      	str	r3, [r0, #72]	; 0x48
 8013008:	bc30      	pop	{r4, r5}
 801300a:	f7f2 b8b3 	b.w	8005174 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801300e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801300e:	b408      	push	{r3}
 8013010:	b510      	push	{r4, lr}
 8013012:	b085      	sub	sp, #20
 8013014:	ac07      	add	r4, sp, #28
 8013016:	f854 3b04 	ldr.w	r3, [r4], #4
 801301a:	9300      	str	r3, [sp, #0]
 801301c:	4613      	mov	r3, r2
 801301e:	4622      	mov	r2, r4
 8013020:	9403      	str	r4, [sp, #12]
 8013022:	f7ff ffdf 	bl	8012fe4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013026:	b005      	add	sp, #20
 8013028:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801302c:	b001      	add	sp, #4
 801302e:	4770      	bx	lr

08013030 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8013030:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013032:	4605      	mov	r5, r0
 8013034:	4608      	mov	r0, r1
 8013036:	b1e9      	cbz	r1, 8013074 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8013038:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801303c:	460b      	mov	r3, r1
 801303e:	f101 0708 	add.w	r7, r1, #8
 8013042:	4622      	mov	r2, r4
 8013044:	6818      	ldr	r0, [r3, #0]
 8013046:	6859      	ldr	r1, [r3, #4]
 8013048:	4626      	mov	r6, r4
 801304a:	c603      	stmia	r6!, {r0, r1}
 801304c:	3308      	adds	r3, #8
 801304e:	42bb      	cmp	r3, r7
 8013050:	4634      	mov	r4, r6
 8013052:	d1f7      	bne.n	8013044 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8013054:	6818      	ldr	r0, [r3, #0]
 8013056:	6030      	str	r0, [r6, #0]
 8013058:	889b      	ldrh	r3, [r3, #4]
 801305a:	80b3      	strh	r3, [r6, #4]
 801305c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8013060:	015b      	lsls	r3, r3, #5
 8013062:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013066:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801306a:	430b      	orrs	r3, r1
 801306c:	425b      	negs	r3, r3
 801306e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8013072:	4610      	mov	r0, r2
 8013074:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013076 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8013076:	b538      	push	{r3, r4, r5, lr}
 8013078:	460c      	mov	r4, r1
 801307a:	6811      	ldr	r1, [r2, #0]
 801307c:	4610      	mov	r0, r2
 801307e:	68cd      	ldr	r5, [r1, #12]
 8013080:	4619      	mov	r1, r3
 8013082:	47a8      	blx	r5
 8013084:	2800      	cmp	r0, #0
 8013086:	bf08      	it	eq
 8013088:	4620      	moveq	r0, r4
 801308a:	bd38      	pop	{r3, r4, r5, pc}

0801308c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801308c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801308e:	4604      	mov	r4, r0
 8013090:	4615      	mov	r5, r2
 8013092:	4608      	mov	r0, r1
 8013094:	b93a      	cbnz	r2, 80130a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8013096:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801309a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801309e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80130a2:	4628      	mov	r0, r5
 80130a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80130a6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80130aa:	8893      	ldrh	r3, [r2, #4]
 80130ac:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80130b0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80130b4:	79ee      	ldrb	r6, [r5, #7]
 80130b6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80130ba:	4316      	orrs	r6, r2
 80130bc:	19da      	adds	r2, r3, r7
 80130be:	b291      	uxth	r1, r2
 80130c0:	291d      	cmp	r1, #29
 80130c2:	b2b7      	uxth	r7, r6
 80130c4:	d87a      	bhi.n	80131bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80130c6:	2201      	movs	r2, #1
 80130c8:	408a      	lsls	r2, r1
 80130ca:	4975      	ldr	r1, [pc, #468]	; (80132a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80130cc:	420a      	tst	r2, r1
 80130ce:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80130d2:	d12d      	bne.n	8013130 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80130d4:	f412 7f60 	tst.w	r2, #896	; 0x380
 80130d8:	d070      	beq.n	80131bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80130da:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80130de:	462b      	mov	r3, r5
 80130e0:	f105 0e08 	add.w	lr, r5, #8
 80130e4:	4615      	mov	r5, r2
 80130e6:	6818      	ldr	r0, [r3, #0]
 80130e8:	6859      	ldr	r1, [r3, #4]
 80130ea:	4694      	mov	ip, r2
 80130ec:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80130f0:	3308      	adds	r3, #8
 80130f2:	4573      	cmp	r3, lr
 80130f4:	4662      	mov	r2, ip
 80130f6:	d1f6      	bne.n	80130e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80130f8:	6818      	ldr	r0, [r3, #0]
 80130fa:	f8cc 0000 	str.w	r0, [ip]
 80130fe:	889b      	ldrh	r3, [r3, #4]
 8013100:	f8ac 3004 	strh.w	r3, [ip, #4]
 8013104:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8013108:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801310c:	b2b3      	uxth	r3, r6
 801310e:	1aca      	subs	r2, r1, r3
 8013110:	b292      	uxth	r2, r2
 8013112:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8013116:	10d2      	asrs	r2, r2, #3
 8013118:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801311c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8013120:	4302      	orrs	r2, r0
 8013122:	1bcf      	subs	r7, r1, r7
 8013124:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8013128:	1afb      	subs	r3, r7, r3
 801312a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801312e:	e7b8      	b.n	80130a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013130:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013132:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013136:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8013138:	f640 6333 	movw	r3, #3635	; 0xe33
 801313c:	4299      	cmp	r1, r3
 801313e:	d110      	bne.n	8013162 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8013140:	6803      	ldr	r3, [r0, #0]
 8013142:	68db      	ldr	r3, [r3, #12]
 8013144:	4798      	blx	r3
 8013146:	7b41      	ldrb	r1, [r0, #13]
 8013148:	00cb      	lsls	r3, r1, #3
 801314a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801314e:	7a03      	ldrb	r3, [r0, #8]
 8013150:	0648      	lsls	r0, r1, #25
 8013152:	ea43 0302 	orr.w	r3, r3, r2
 8013156:	bf44      	itt	mi
 8013158:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801315c:	b21b      	sxthmi	r3, r3
 801315e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013162:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8013166:	443b      	add	r3, r7
 8013168:	4433      	add	r3, r6
 801316a:	b29b      	uxth	r3, r3
 801316c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8013170:	462a      	mov	r2, r5
 8013172:	f105 0c08 	add.w	ip, r5, #8
 8013176:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801317a:	4635      	mov	r5, r6
 801317c:	6810      	ldr	r0, [r2, #0]
 801317e:	6851      	ldr	r1, [r2, #4]
 8013180:	4637      	mov	r7, r6
 8013182:	c703      	stmia	r7!, {r0, r1}
 8013184:	3208      	adds	r2, #8
 8013186:	4562      	cmp	r2, ip
 8013188:	463e      	mov	r6, r7
 801318a:	d1f7      	bne.n	801317c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801318c:	6810      	ldr	r0, [r2, #0]
 801318e:	6038      	str	r0, [r7, #0]
 8013190:	8892      	ldrh	r2, [r2, #4]
 8013192:	80ba      	strh	r2, [r7, #4]
 8013194:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013198:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801319c:	10db      	asrs	r3, r3, #3
 801319e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80131a2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80131a6:	4313      	orrs	r3, r2
 80131a8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80131ac:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80131b0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80131b4:	1a9b      	subs	r3, r3, r2
 80131b6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80131ba:	e772      	b.n	80130a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80131bc:	f023 0204 	bic.w	r2, r3, #4
 80131c0:	f640 611b 	movw	r1, #3611	; 0xe1b
 80131c4:	428a      	cmp	r2, r1
 80131c6:	d003      	beq.n	80131d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80131c8:	f640 621d 	movw	r2, #3613	; 0xe1d
 80131cc:	4293      	cmp	r3, r2
 80131ce:	d120      	bne.n	8013212 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 80131d0:	3b01      	subs	r3, #1
 80131d2:	4602      	mov	r2, r0
 80131d4:	b29b      	uxth	r3, r3
 80131d6:	4629      	mov	r1, r5
 80131d8:	4620      	mov	r0, r4
 80131da:	f7ff ff4c 	bl	8013076 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80131de:	7b41      	ldrb	r1, [r0, #13]
 80131e0:	00cb      	lsls	r3, r1, #3
 80131e2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80131e6:	7a03      	ldrb	r3, [r0, #8]
 80131e8:	0649      	lsls	r1, r1, #25
 80131ea:	ea43 0302 	orr.w	r3, r3, r2
 80131ee:	bf44      	itt	mi
 80131f0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80131f4:	b21b      	sxthmi	r3, r3
 80131f6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80131fa:	7b6b      	ldrb	r3, [r5, #13]
 80131fc:	7aaa      	ldrb	r2, [r5, #10]
 80131fe:	005b      	lsls	r3, r3, #1
 8013200:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013204:	4313      	orrs	r3, r2
 8013206:	115a      	asrs	r2, r3, #5
 8013208:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801320c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013210:	e036      	b.n	8013280 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8013212:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8013216:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801321a:	7a2a      	ldrb	r2, [r5, #8]
 801321c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8013220:	ea42 0201 	orr.w	r2, r2, r1
 8013224:	bf1c      	itt	ne
 8013226:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801322a:	b212      	sxthne	r2, r2
 801322c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8013230:	f640 6109 	movw	r1, #3593	; 0xe09
 8013234:	f023 0210 	bic.w	r2, r3, #16
 8013238:	428a      	cmp	r2, r1
 801323a:	d003      	beq.n	8013244 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801323c:	f640 6213 	movw	r2, #3603	; 0xe13
 8013240:	4293      	cmp	r3, r2
 8013242:	d12a      	bne.n	801329a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8013244:	7b6e      	ldrb	r6, [r5, #13]
 8013246:	0076      	lsls	r6, r6, #1
 8013248:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801324c:	7aae      	ldrb	r6, [r5, #10]
 801324e:	4316      	orrs	r6, r2
 8013250:	f640 6213 	movw	r2, #3603	; 0xe13
 8013254:	4293      	cmp	r3, r2
 8013256:	bf18      	it	ne
 8013258:	f103 33ff 	addne.w	r3, r3, #4294967295
 801325c:	4602      	mov	r2, r0
 801325e:	bf14      	ite	ne
 8013260:	b29b      	uxthne	r3, r3
 8013262:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8013266:	4629      	mov	r1, r5
 8013268:	4620      	mov	r0, r4
 801326a:	f7ff ff04 	bl	8013076 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801326e:	7b43      	ldrb	r3, [r0, #13]
 8013270:	7a82      	ldrb	r2, [r0, #10]
 8013272:	005b      	lsls	r3, r3, #1
 8013274:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013278:	4313      	orrs	r3, r2
 801327a:	1af6      	subs	r6, r6, r3
 801327c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8013280:	7b69      	ldrb	r1, [r5, #13]
 8013282:	00cb      	lsls	r3, r1, #3
 8013284:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013288:	7a2b      	ldrb	r3, [r5, #8]
 801328a:	4313      	orrs	r3, r2
 801328c:	064a      	lsls	r2, r1, #25
 801328e:	bf44      	itt	mi
 8013290:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013294:	b21b      	sxthmi	r3, r3
 8013296:	1bdb      	subs	r3, r3, r7
 8013298:	e747      	b.n	801312a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801329a:	2300      	movs	r3, #0
 801329c:	e7b6      	b.n	801320c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801329e:	bf00      	nop
 80132a0:	3fc00079 	.word	0x3fc00079

080132a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80132a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80132a8:	4604      	mov	r4, r0
 80132aa:	b942      	cbnz	r2, 80132be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80132ac:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80132b0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80132b4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80132b8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80132bc:	e047      	b.n	801334e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80132be:	7b51      	ldrb	r1, [r2, #13]
 80132c0:	8893      	ldrh	r3, [r2, #4]
 80132c2:	010d      	lsls	r5, r1, #4
 80132c4:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80132c8:	79d5      	ldrb	r5, [r2, #7]
 80132ca:	4305      	orrs	r5, r0
 80132cc:	2d04      	cmp	r5, #4
 80132ce:	bfcc      	ite	gt
 80132d0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80132d4:	f04f 0e01 	movle.w	lr, #1
 80132d8:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80132dc:	f200 80ab 	bhi.w	8013436 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80132e0:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80132e4:	4283      	cmp	r3, r0
 80132e6:	d216      	bcs.n	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80132e8:	f240 605b 	movw	r0, #1627	; 0x65b
 80132ec:	4283      	cmp	r3, r0
 80132ee:	d859      	bhi.n	80133a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80132f0:	f240 6057 	movw	r0, #1623	; 0x657
 80132f4:	4283      	cmp	r3, r0
 80132f6:	d20e      	bcs.n	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80132f8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80132fc:	d24a      	bcs.n	8013394 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80132fe:	f240 604e 	movw	r0, #1614	; 0x64e
 8013302:	4283      	cmp	r3, r0
 8013304:	d207      	bcs.n	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013306:	f240 601a 	movw	r0, #1562	; 0x61a
 801330a:	4283      	cmp	r3, r0
 801330c:	d02a      	beq.n	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801330e:	d821      	bhi.n	8013354 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8013310:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8013314:	d35b      	bcc.n	80133ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013316:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801331a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801331e:	f040 80d0 	bne.w	80134c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013322:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8013326:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801332a:	f040 80ca 	bne.w	80134c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801332e:	00cb      	lsls	r3, r1, #3
 8013330:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013334:	7a13      	ldrb	r3, [r2, #8]
 8013336:	0649      	lsls	r1, r1, #25
 8013338:	ea43 0300 	orr.w	r3, r3, r0
 801333c:	bf44      	itt	mi
 801333e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013342:	b21b      	sxthmi	r3, r3
 8013344:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013348:	1b5d      	subs	r5, r3, r5
 801334a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801334e:	4610      	mov	r0, r2
 8013350:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013354:	f240 604b 	movw	r0, #1611	; 0x64b
 8013358:	4283      	cmp	r3, r0
 801335a:	d338      	bcc.n	80133ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801335c:	f240 604c 	movw	r0, #1612	; 0x64c
 8013360:	4283      	cmp	r3, r0
 8013362:	d9d8      	bls.n	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013364:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8013368:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801336c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013370:	f040 80f2 	bne.w	8013558 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8013374:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013378:	f040 80ee 	bne.w	8013558 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801337c:	00cb      	lsls	r3, r1, #3
 801337e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013382:	7a13      	ldrb	r3, [r2, #8]
 8013384:	064e      	lsls	r6, r1, #25
 8013386:	ea43 0300 	orr.w	r3, r3, r0
 801338a:	bf44      	itt	mi
 801338c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013390:	b21b      	sxthmi	r3, r3
 8013392:	e7d9      	b.n	8013348 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8013394:	f240 6054 	movw	r0, #1620	; 0x654
 8013398:	4283      	cmp	r3, r0
 801339a:	d8e3      	bhi.n	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801339c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80133a0:	d9e0      	bls.n	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80133a2:	e7b8      	b.n	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80133a4:	f240 6074 	movw	r0, #1652	; 0x674
 80133a8:	4283      	cmp	r3, r0
 80133aa:	d0b4      	beq.n	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80133ac:	d82d      	bhi.n	801340a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80133ae:	f240 605e 	movw	r0, #1630	; 0x65e
 80133b2:	4283      	cmp	r3, r0
 80133b4:	d804      	bhi.n	80133c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80133b6:	f240 605d 	movw	r0, #1629	; 0x65d
 80133ba:	4283      	cmp	r3, r0
 80133bc:	d3d2      	bcc.n	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80133be:	e7aa      	b.n	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80133c0:	f240 605f 	movw	r0, #1631	; 0x65f
 80133c4:	4283      	cmp	r3, r0
 80133c6:	d0cd      	beq.n	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80133c8:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80133cc:	d0a3      	beq.n	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80133ce:	00cb      	lsls	r3, r1, #3
 80133d0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80133d4:	7a13      	ldrb	r3, [r2, #8]
 80133d6:	0649      	lsls	r1, r1, #25
 80133d8:	ea43 0300 	orr.w	r3, r3, r0
 80133dc:	bf44      	itt	mi
 80133de:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80133e2:	b21b      	sxthmi	r3, r3
 80133e4:	1b5d      	subs	r5, r3, r5
 80133e6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80133ea:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80133ee:	7b53      	ldrb	r3, [r2, #13]
 80133f0:	015b      	lsls	r3, r3, #5
 80133f2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80133f6:	7993      	ldrb	r3, [r2, #6]
 80133f8:	430b      	orrs	r3, r1
 80133fa:	005b      	lsls	r3, r3, #1
 80133fc:	2105      	movs	r1, #5
 80133fe:	fb93 f3f1 	sdiv	r3, r3, r1
 8013402:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013406:	440b      	add	r3, r1
 8013408:	e756      	b.n	80132b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801340a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801340e:	4283      	cmp	r3, r0
 8013410:	d809      	bhi.n	8013426 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8013412:	f240 60df 	movw	r0, #1759	; 0x6df
 8013416:	4283      	cmp	r3, r0
 8013418:	f4bf af7d 	bcs.w	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801341c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013420:	2b05      	cmp	r3, #5
 8013422:	d8d4      	bhi.n	80133ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013424:	e777      	b.n	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013426:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801342a:	4283      	cmp	r3, r0
 801342c:	d09a      	beq.n	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801342e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8013432:	4283      	cmp	r3, r0
 8013434:	e7ca      	b.n	80133cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013436:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801343a:	d22b      	bcs.n	8013494 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801343c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8013440:	4283      	cmp	r3, r0
 8013442:	d28f      	bcs.n	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013444:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8013448:	4283      	cmp	r3, r0
 801344a:	d816      	bhi.n	801347a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801344c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8013450:	4283      	cmp	r3, r0
 8013452:	f4bf af60 	bcs.w	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013456:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801345a:	4283      	cmp	r3, r0
 801345c:	d80a      	bhi.n	8013474 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801345e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8013462:	4283      	cmp	r3, r0
 8013464:	f4bf af57 	bcs.w	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013468:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801346c:	4283      	cmp	r3, r0
 801346e:	f43f af79 	beq.w	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013472:	e7ac      	b.n	80133ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013474:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8013478:	e7f8      	b.n	801346c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801347a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801347e:	4283      	cmp	r3, r0
 8013480:	d802      	bhi.n	8013488 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8013482:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8013486:	e798      	b.n	80133ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8013488:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801348c:	4283      	cmp	r3, r0
 801348e:	f47f af42 	bne.w	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013492:	e767      	b.n	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013494:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8013498:	4283      	cmp	r3, r0
 801349a:	f43f af63 	beq.w	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801349e:	d802      	bhi.n	80134a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80134a0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80134a4:	e7f2      	b.n	801348c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80134a6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80134aa:	4283      	cmp	r3, r0
 80134ac:	d805      	bhi.n	80134ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80134ae:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80134b2:	4283      	cmp	r3, r0
 80134b4:	f4ff af2f 	bcc.w	8013316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80134b8:	e754      	b.n	8013364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80134ba:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80134be:	4283      	cmp	r3, r0
 80134c0:	e7af      	b.n	8013422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80134c2:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80134c6:	4617      	mov	r7, r2
 80134c8:	f102 0808 	add.w	r8, r2, #8
 80134cc:	4666      	mov	r6, ip
 80134ce:	6838      	ldr	r0, [r7, #0]
 80134d0:	6879      	ldr	r1, [r7, #4]
 80134d2:	46e6      	mov	lr, ip
 80134d4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80134d8:	3708      	adds	r7, #8
 80134da:	4547      	cmp	r7, r8
 80134dc:	46f4      	mov	ip, lr
 80134de:	d1f6      	bne.n	80134ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80134e0:	6838      	ldr	r0, [r7, #0]
 80134e2:	f8ce 0000 	str.w	r0, [lr]
 80134e6:	88b9      	ldrh	r1, [r7, #4]
 80134e8:	f8ae 1004 	strh.w	r1, [lr, #4]
 80134ec:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80134f0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80134f4:	d009      	beq.n	801350a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80134f6:	7b51      	ldrb	r1, [r2, #13]
 80134f8:	7992      	ldrb	r2, [r2, #6]
 80134fa:	0149      	lsls	r1, r1, #5
 80134fc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013500:	4311      	orrs	r1, r2
 8013502:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013506:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801350a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801350e:	b2ad      	uxth	r5, r5
 8013510:	d00d      	beq.n	801352e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013512:	442b      	add	r3, r5
 8013514:	b29b      	uxth	r3, r3
 8013516:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801351a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801351e:	10db      	asrs	r3, r3, #3
 8013520:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013524:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013528:	4313      	orrs	r3, r2
 801352a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801352e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013532:	00cb      	lsls	r3, r1, #3
 8013534:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013538:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801353c:	064f      	lsls	r7, r1, #25
 801353e:	ea43 0302 	orr.w	r3, r3, r2
 8013542:	bf44      	itt	mi
 8013544:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013548:	b21b      	sxthmi	r3, r3
 801354a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801354e:	1b5b      	subs	r3, r3, r5
 8013550:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013554:	4632      	mov	r2, r6
 8013556:	e6fa      	b.n	801334e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013558:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801355c:	4617      	mov	r7, r2
 801355e:	f102 0908 	add.w	r9, r2, #8
 8013562:	4666      	mov	r6, ip
 8013564:	6838      	ldr	r0, [r7, #0]
 8013566:	6879      	ldr	r1, [r7, #4]
 8013568:	46e0      	mov	r8, ip
 801356a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801356e:	3708      	adds	r7, #8
 8013570:	454f      	cmp	r7, r9
 8013572:	46c4      	mov	ip, r8
 8013574:	d1f6      	bne.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8013576:	6838      	ldr	r0, [r7, #0]
 8013578:	f8c8 0000 	str.w	r0, [r8]
 801357c:	88b9      	ldrh	r1, [r7, #4]
 801357e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8013582:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013586:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801358a:	d009      	beq.n	80135a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801358c:	7b51      	ldrb	r1, [r2, #13]
 801358e:	7992      	ldrb	r2, [r2, #6]
 8013590:	0149      	lsls	r1, r1, #5
 8013592:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013596:	4311      	orrs	r1, r2
 8013598:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801359c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80135a0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80135a4:	d00e      	beq.n	80135c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80135a6:	eba3 030e 	sub.w	r3, r3, lr
 80135aa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80135ae:	b29b      	uxth	r3, r3
 80135b0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80135b4:	10db      	asrs	r3, r3, #3
 80135b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80135ba:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80135be:	4313      	orrs	r3, r2
 80135c0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80135c4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80135c8:	00cb      	lsls	r3, r1, #3
 80135ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80135ce:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80135d2:	0648      	lsls	r0, r1, #25
 80135d4:	ea43 0302 	orr.w	r3, r3, r2
 80135d8:	bf44      	itt	mi
 80135da:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80135de:	b21b      	sxthmi	r3, r3
 80135e0:	1b5d      	subs	r5, r3, r5
 80135e2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80135e6:	e7b5      	b.n	8013554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080135e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80135e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135ec:	461e      	mov	r6, r3
 80135ee:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80135f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80135f4:	4604      	mov	r4, r0
 80135f6:	4617      	mov	r7, r2
 80135f8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80135fc:	f7f1 fd78 	bl	80050f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013600:	4605      	mov	r5, r0
 8013602:	b918      	cbnz	r0, 801360c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013604:	6030      	str	r0, [r6, #0]
 8013606:	4628      	mov	r0, r5
 8013608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801360c:	683b      	ldr	r3, [r7, #0]
 801360e:	4601      	mov	r1, r0
 8013610:	68db      	ldr	r3, [r3, #12]
 8013612:	4638      	mov	r0, r7
 8013614:	4798      	blx	r3
 8013616:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801361a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801361e:	4602      	mov	r2, r0
 8013620:	6030      	str	r0, [r6, #0]
 8013622:	d213      	bcs.n	801364c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013624:	4643      	mov	r3, r8
 8013626:	4639      	mov	r1, r7
 8013628:	4620      	mov	r0, r4
 801362a:	f7ff fe3b 	bl	80132a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801362e:	6030      	str	r0, [r6, #0]
 8013630:	6833      	ldr	r3, [r6, #0]
 8013632:	b143      	cbz	r3, 8013646 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013634:	7b5a      	ldrb	r2, [r3, #13]
 8013636:	7a9b      	ldrb	r3, [r3, #10]
 8013638:	0052      	lsls	r2, r2, #1
 801363a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801363e:	4313      	orrs	r3, r2
 8013640:	bf0c      	ite	eq
 8013642:	2301      	moveq	r3, #1
 8013644:	2300      	movne	r3, #0
 8013646:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801364a:	e7dc      	b.n	8013606 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801364c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013650:	b29b      	uxth	r3, r3
 8013652:	2b7f      	cmp	r3, #127	; 0x7f
 8013654:	d804      	bhi.n	8013660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013656:	4639      	mov	r1, r7
 8013658:	4620      	mov	r0, r4
 801365a:	f7ff fd17 	bl	801308c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801365e:	e7e6      	b.n	801362e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8013660:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013664:	2b00      	cmp	r3, #0
 8013666:	d0e3      	beq.n	8013630 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013668:	f640 1302 	movw	r3, #2306	; 0x902
 801366c:	429d      	cmp	r5, r3
 801366e:	d1df      	bne.n	8013630 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013670:	4601      	mov	r1, r0
 8013672:	4620      	mov	r0, r4
 8013674:	f7ff fcdc 	bl	8013030 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013678:	e7d9      	b.n	801362e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801367a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801367a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801367e:	461e      	mov	r6, r3
 8013680:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013682:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013686:	4604      	mov	r4, r0
 8013688:	4617      	mov	r7, r2
 801368a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801368e:	f7f1 fd2f 	bl	80050f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013692:	4605      	mov	r5, r0
 8013694:	b918      	cbnz	r0, 801369e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8013696:	6030      	str	r0, [r6, #0]
 8013698:	4628      	mov	r0, r5
 801369a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801369e:	683b      	ldr	r3, [r7, #0]
 80136a0:	4601      	mov	r1, r0
 80136a2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80136a6:	4638      	mov	r0, r7
 80136a8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80136ac:	47c8      	blx	r9
 80136ae:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80136b2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80136b6:	4602      	mov	r2, r0
 80136b8:	6030      	str	r0, [r6, #0]
 80136ba:	d213      	bcs.n	80136e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80136bc:	4643      	mov	r3, r8
 80136be:	4639      	mov	r1, r7
 80136c0:	4620      	mov	r0, r4
 80136c2:	f7ff fdef 	bl	80132a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80136c6:	6030      	str	r0, [r6, #0]
 80136c8:	6833      	ldr	r3, [r6, #0]
 80136ca:	b143      	cbz	r3, 80136de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80136cc:	7b5a      	ldrb	r2, [r3, #13]
 80136ce:	7a9b      	ldrb	r3, [r3, #10]
 80136d0:	0052      	lsls	r2, r2, #1
 80136d2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80136d6:	4313      	orrs	r3, r2
 80136d8:	bf0c      	ite	eq
 80136da:	2301      	moveq	r3, #1
 80136dc:	2300      	movne	r3, #0
 80136de:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80136e2:	e7d9      	b.n	8013698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80136e4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80136e8:	b29b      	uxth	r3, r3
 80136ea:	2b7f      	cmp	r3, #127	; 0x7f
 80136ec:	d804      	bhi.n	80136f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80136ee:	4639      	mov	r1, r7
 80136f0:	4620      	mov	r0, r4
 80136f2:	f7ff fccb 	bl	801308c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80136f6:	e7e6      	b.n	80136c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80136f8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80136fc:	2b00      	cmp	r3, #0
 80136fe:	d0e3      	beq.n	80136c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013700:	f640 1302 	movw	r3, #2306	; 0x902
 8013704:	429d      	cmp	r5, r3
 8013706:	d1df      	bne.n	80136c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013708:	4601      	mov	r1, r0
 801370a:	4620      	mov	r0, r4
 801370c:	f7ff fc90 	bl	8013030 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013710:	e7d9      	b.n	80136c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013712 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013712:	b510      	push	{r4, lr}
 8013714:	4604      	mov	r4, r0
 8013716:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801371a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801371c:	b1f1      	cbz	r1, 801375c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801371e:	2b0a      	cmp	r3, #10
 8013720:	d02f      	beq.n	8013782 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013722:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013724:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013728:	3901      	subs	r1, #1
 801372a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801372c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013730:	1c51      	adds	r1, r2, #1
 8013732:	b289      	uxth	r1, r1
 8013734:	2901      	cmp	r1, #1
 8013736:	bf84      	itt	hi
 8013738:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801373c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801373e:	f103 0201 	add.w	r2, r3, #1
 8013742:	8722      	strh	r2, [r4, #56]	; 0x38
 8013744:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013746:	bf98      	it	ls
 8013748:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801374a:	4413      	add	r3, r2
 801374c:	b29b      	uxth	r3, r3
 801374e:	2b09      	cmp	r3, #9
 8013750:	bf88      	it	hi
 8013752:	3b0a      	subhi	r3, #10
 8013754:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013758:	8458      	strh	r0, [r3, #34]	; 0x22
 801375a:	e7dc      	b.n	8013716 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801375c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801375e:	2b0a      	cmp	r3, #10
 8013760:	d00f      	beq.n	8013782 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013762:	4620      	mov	r0, r4
 8013764:	f7ff fc12 	bl	8012f8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013768:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801376a:	1c5a      	adds	r2, r3, #1
 801376c:	8722      	strh	r2, [r4, #56]	; 0x38
 801376e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013770:	4413      	add	r3, r2
 8013772:	b29b      	uxth	r3, r3
 8013774:	2b09      	cmp	r3, #9
 8013776:	bf88      	it	hi
 8013778:	3b0a      	subhi	r3, #10
 801377a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801377e:	8458      	strh	r0, [r3, #34]	; 0x22
 8013780:	e7ec      	b.n	801375c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013782:	bd10      	pop	{r4, pc}

08013784 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013784:	b538      	push	{r3, r4, r5, lr}
 8013786:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013788:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801378c:	4604      	mov	r4, r0
 801378e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8013790:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8013792:	3a01      	subs	r2, #1
 8013794:	8702      	strh	r2, [r0, #56]	; 0x38
 8013796:	1c5a      	adds	r2, r3, #1
 8013798:	b292      	uxth	r2, r2
 801379a:	2a09      	cmp	r2, #9
 801379c:	bf86      	itte	hi
 801379e:	3b09      	subhi	r3, #9
 80137a0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80137a2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80137a4:	f7ff ffb5 	bl	8013712 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80137a8:	8c23      	ldrh	r3, [r4, #32]
 80137aa:	2b01      	cmp	r3, #1
 80137ac:	bf9c      	itt	ls
 80137ae:	3301      	addls	r3, #1
 80137b0:	8423      	strhls	r3, [r4, #32]
 80137b2:	8be3      	ldrh	r3, [r4, #30]
 80137b4:	b90b      	cbnz	r3, 80137ba <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80137b6:	2302      	movs	r3, #2
 80137b8:	83e3      	strh	r3, [r4, #30]
 80137ba:	8be3      	ldrh	r3, [r4, #30]
 80137bc:	3b01      	subs	r3, #1
 80137be:	b29b      	uxth	r3, r3
 80137c0:	83e3      	strh	r3, [r4, #30]
 80137c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80137c6:	4628      	mov	r0, r5
 80137c8:	8365      	strh	r5, [r4, #26]
 80137ca:	bd38      	pop	{r3, r4, r5, pc}

080137cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80137cc:	428a      	cmp	r2, r1
 80137ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80137d2:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80137d4:	d931      	bls.n	801383a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80137d6:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80137d8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80137dc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80137e0:	19ee      	adds	r6, r5, r7
 80137e2:	1a54      	subs	r4, r2, r1
 80137e4:	3e01      	subs	r6, #1
 80137e6:	fa1f fe84 	uxth.w	lr, r4
 80137ea:	b2b4      	uxth	r4, r6
 80137ec:	eba4 090e 	sub.w	r9, r4, lr
 80137f0:	fa1f f989 	uxth.w	r9, r9
 80137f4:	2c09      	cmp	r4, #9
 80137f6:	4626      	mov	r6, r4
 80137f8:	bf88      	it	hi
 80137fa:	f1a4 060a 	subhi.w	r6, r4, #10
 80137fe:	f1bc 0f00 	cmp.w	ip, #0
 8013802:	bf08      	it	eq
 8013804:	f04f 0c02 	moveq.w	ip, #2
 8013808:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801380c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013810:	fa1f fc8c 	uxth.w	ip, ip
 8013814:	3c01      	subs	r4, #1
 8013816:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801381a:	b2a4      	uxth	r4, r4
 801381c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013820:	454c      	cmp	r4, r9
 8013822:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013826:	d1e5      	bne.n	80137f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013828:	eba5 050e 	sub.w	r5, r5, lr
 801382c:	eb0e 0408 	add.w	r4, lr, r8
 8013830:	8705      	strh	r5, [r0, #56]	; 0x38
 8013832:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013836:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801383a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801383c:	1a64      	subs	r4, r4, r1
 801383e:	4439      	add	r1, r7
 8013840:	b289      	uxth	r1, r1
 8013842:	2909      	cmp	r1, #9
 8013844:	bf88      	it	hi
 8013846:	390a      	subhi	r1, #10
 8013848:	8704      	strh	r4, [r0, #56]	; 0x38
 801384a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801384c:	250a      	movs	r5, #10
 801384e:	b18a      	cbz	r2, 8013874 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013850:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013852:	3a01      	subs	r2, #1
 8013854:	b292      	uxth	r2, r2
 8013856:	3101      	adds	r1, #1
 8013858:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801385c:	8701      	strh	r1, [r0, #56]	; 0x38
 801385e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013860:	b901      	cbnz	r1, 8013864 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8013862:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013864:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013866:	3901      	subs	r1, #1
 8013868:	b289      	uxth	r1, r1
 801386a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801386c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013870:	844c      	strh	r4, [r1, #34]	; 0x22
 8013872:	e7ec      	b.n	801384e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013874:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013878:	f7ff bf4b 	b.w	8013712 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801387c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801387c:	b570      	push	{r4, r5, r6, lr}
 801387e:	2500      	movs	r5, #0
 8013880:	4295      	cmp	r5, r2
 8013882:	d011      	beq.n	80138a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013884:	8bc4      	ldrh	r4, [r0, #30]
 8013886:	f831 6b02 	ldrh.w	r6, [r1], #2
 801388a:	4414      	add	r4, r2
 801388c:	3c01      	subs	r4, #1
 801388e:	1b64      	subs	r4, r4, r5
 8013890:	b2a4      	uxth	r4, r4
 8013892:	2c01      	cmp	r4, #1
 8013894:	bf88      	it	hi
 8013896:	3c02      	subhi	r4, #2
 8013898:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801389c:	8b64      	ldrh	r4, [r4, #26]
 801389e:	42b4      	cmp	r4, r6
 80138a0:	d117      	bne.n	80138d2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80138a2:	3501      	adds	r5, #1
 80138a4:	b2ad      	uxth	r5, r5
 80138a6:	e7eb      	b.n	8013880 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80138a8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80138ac:	2400      	movs	r4, #0
 80138ae:	4413      	add	r3, r2
 80138b0:	b2a2      	uxth	r2, r4
 80138b2:	429a      	cmp	r2, r3
 80138b4:	da0f      	bge.n	80138d6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80138b6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80138b8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80138bc:	4432      	add	r2, r6
 80138be:	b292      	uxth	r2, r2
 80138c0:	2a09      	cmp	r2, #9
 80138c2:	bf88      	it	hi
 80138c4:	3a0a      	subhi	r2, #10
 80138c6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80138ca:	3401      	adds	r4, #1
 80138cc:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80138ce:	42aa      	cmp	r2, r5
 80138d0:	d0ee      	beq.n	80138b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80138d2:	2000      	movs	r0, #0
 80138d4:	bd70      	pop	{r4, r5, r6, pc}
 80138d6:	2001      	movs	r0, #1
 80138d8:	e7fc      	b.n	80138d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080138da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80138da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138de:	4605      	mov	r5, r0
 80138e0:	4616      	mov	r6, r2
 80138e2:	1c8c      	adds	r4, r1, #2
 80138e4:	8809      	ldrh	r1, [r1, #0]
 80138e6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80138ea:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80138ee:	42b3      	cmp	r3, r6
 80138f0:	d124      	bne.n	801393c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80138f2:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80138f6:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80138fa:	f001 070f 	and.w	r7, r1, #15
 80138fe:	f8cd 8000 	str.w	r8, [sp]
 8013902:	464b      	mov	r3, r9
 8013904:	4652      	mov	r2, sl
 8013906:	4621      	mov	r1, r4
 8013908:	4628      	mov	r0, r5
 801390a:	f7ff ffb7 	bl	801387c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801390e:	4683      	mov	fp, r0
 8013910:	b168      	cbz	r0, 801392e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013912:	eb0a 0109 	add.w	r1, sl, r9
 8013916:	4441      	add	r1, r8
 8013918:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801391c:	463a      	mov	r2, r7
 801391e:	4649      	mov	r1, r9
 8013920:	4628      	mov	r0, r5
 8013922:	f7ff ff53 	bl	80137cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013926:	4658      	mov	r0, fp
 8013928:	b003      	add	sp, #12
 801392a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801392e:	eb07 010a 	add.w	r1, r7, sl
 8013932:	4449      	add	r1, r9
 8013934:	4441      	add	r1, r8
 8013936:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801393a:	e7d2      	b.n	80138e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801393c:	f04f 0b00 	mov.w	fp, #0
 8013940:	e7f1      	b.n	8013926 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013942 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013942:	b570      	push	{r4, r5, r6, lr}
 8013944:	8810      	ldrh	r0, [r2, #0]
 8013946:	4298      	cmp	r0, r3
 8013948:	d817      	bhi.n	801397a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801394a:	1e48      	subs	r0, r1, #1
 801394c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013950:	4298      	cmp	r0, r3
 8013952:	d312      	bcc.n	801397a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013954:	2400      	movs	r4, #0
 8013956:	428c      	cmp	r4, r1
 8013958:	d20f      	bcs.n	801397a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801395a:	1860      	adds	r0, r4, r1
 801395c:	1040      	asrs	r0, r0, #1
 801395e:	0085      	lsls	r5, r0, #2
 8013960:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013964:	42b3      	cmp	r3, r6
 8013966:	d902      	bls.n	801396e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013968:	3001      	adds	r0, #1
 801396a:	b284      	uxth	r4, r0
 801396c:	e7f3      	b.n	8013956 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801396e:	d201      	bcs.n	8013974 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013970:	b281      	uxth	r1, r0
 8013972:	e7f0      	b.n	8013956 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013974:	442a      	add	r2, r5
 8013976:	8850      	ldrh	r0, [r2, #2]
 8013978:	bd70      	pop	{r4, r5, r6, pc}
 801397a:	2000      	movs	r0, #0
 801397c:	e7fc      	b.n	8013978 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801397e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801397e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013982:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013984:	886f      	ldrh	r7, [r5, #2]
 8013986:	4604      	mov	r4, r0
 8013988:	087f      	lsrs	r7, r7, #1
 801398a:	260b      	movs	r6, #11
 801398c:	3e01      	subs	r6, #1
 801398e:	d013      	beq.n	80139b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013990:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013992:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013996:	462a      	mov	r2, r5
 8013998:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801399c:	4639      	mov	r1, r7
 801399e:	4643      	mov	r3, r8
 80139a0:	4620      	mov	r0, r4
 80139a2:	f7ff ffce 	bl	8013942 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80139a6:	b138      	cbz	r0, 80139b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80139a8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80139ac:	4642      	mov	r2, r8
 80139ae:	4620      	mov	r0, r4
 80139b0:	f7ff ff93 	bl	80138da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80139b4:	2800      	cmp	r0, #0
 80139b6:	d1e9      	bne.n	801398c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80139b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080139bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80139bc:	b570      	push	{r4, r5, r6, lr}
 80139be:	694a      	ldr	r2, [r1, #20]
 80139c0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80139c2:	684b      	ldr	r3, [r1, #4]
 80139c4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80139c6:	1b54      	subs	r4, r2, r5
 80139c8:	f000 8106 	beq.w	8013bd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80139cc:	1b9b      	subs	r3, r3, r6
 80139ce:	d003      	beq.n	80139d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80139d0:	4363      	muls	r3, r4
 80139d2:	2210      	movs	r2, #16
 80139d4:	fb93 f3f2 	sdiv	r3, r3, r2
 80139d8:	680c      	ldr	r4, [r1, #0]
 80139da:	698a      	ldr	r2, [r1, #24]
 80139dc:	1b65      	subs	r5, r4, r5
 80139de:	f000 80fd 	beq.w	8013bdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80139e2:	1b92      	subs	r2, r2, r6
 80139e4:	d003      	beq.n	80139ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80139e6:	436a      	muls	r2, r5
 80139e8:	2410      	movs	r4, #16
 80139ea:	fb92 f2f4 	sdiv	r2, r2, r4
 80139ee:	1a9b      	subs	r3, r3, r2
 80139f0:	ee07 3a90 	vmov	s15, r3
 80139f4:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013c18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80139f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80139fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013a00:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013a04:	460a      	mov	r2, r1
 8013a06:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8013a0a:	4603      	mov	r3, r0
 8013a0c:	f100 040c 	add.w	r4, r0, #12
 8013a10:	eeb1 6a43 	vneg.f32	s12, s6
 8013a14:	edd2 7a02 	vldr	s15, [r2, #8]
 8013a18:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8013a1c:	3214      	adds	r2, #20
 8013a1e:	ece3 6a01 	vstmia	r3!, {s13}
 8013a22:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013a26:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013a2a:	429c      	cmp	r4, r3
 8013a2c:	edc3 7a02 	vstr	s15, [r3, #8]
 8013a30:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013a34:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013a38:	edc3 7a05 	vstr	s15, [r3, #20]
 8013a3c:	d1ea      	bne.n	8013a14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8013a3e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013a40:	698b      	ldr	r3, [r1, #24]
 8013a42:	edd0 4a02 	vldr	s9, [r0, #8]
 8013a46:	edd0 3a00 	vldr	s7, [r0]
 8013a4a:	edd0 6a01 	vldr	s13, [r0, #4]
 8013a4e:	ed90 5a05 	vldr	s10, [r0, #20]
 8013a52:	ed90 2a03 	vldr	s4, [r0, #12]
 8013a56:	edd0 5a04 	vldr	s11, [r0, #16]
 8013a5a:	ed90 1a07 	vldr	s2, [r0, #28]
 8013a5e:	edd0 2a06 	vldr	s5, [r0, #24]
 8013a62:	1a9b      	subs	r3, r3, r2
 8013a64:	ee07 3a90 	vmov	s15, r3
 8013a68:	684b      	ldr	r3, [r1, #4]
 8013a6a:	1a9b      	subs	r3, r3, r2
 8013a6c:	ee07 3a10 	vmov	s14, r3
 8013a70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013a74:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013a78:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013a7c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8013a80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a84:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013a88:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013a8c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8013a90:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013a94:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013a98:	ee67 7a83 	vmul.f32	s15, s15, s6
 8013a9c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8013aa0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013aa2:	694a      	ldr	r2, [r1, #20]
 8013aa4:	1b13      	subs	r3, r2, r4
 8013aa6:	ee07 3a10 	vmov	s14, r3
 8013aaa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013aae:	680b      	ldr	r3, [r1, #0]
 8013ab0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013ab4:	1b1b      	subs	r3, r3, r4
 8013ab6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8013aba:	ee07 3a10 	vmov	s14, r3
 8013abe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013ac2:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013ac6:	eee6 4a87 	vfma.f32	s9, s13, s14
 8013aca:	ee64 4a86 	vmul.f32	s9, s9, s12
 8013ace:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8013ad2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013ad4:	698b      	ldr	r3, [r1, #24]
 8013ad6:	1a9b      	subs	r3, r3, r2
 8013ad8:	ee06 3a90 	vmov	s13, r3
 8013adc:	684b      	ldr	r3, [r1, #4]
 8013ade:	1a9b      	subs	r3, r3, r2
 8013ae0:	ee07 3a10 	vmov	s14, r3
 8013ae4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013ae8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013aec:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013af0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013af4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013af8:	eee5 6a87 	vfma.f32	s13, s11, s14
 8013afc:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013b00:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013b04:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013b06:	694a      	ldr	r2, [r1, #20]
 8013b08:	1b13      	subs	r3, r2, r4
 8013b0a:	ee07 3a10 	vmov	s14, r3
 8013b0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013b12:	680b      	ldr	r3, [r1, #0]
 8013b14:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013b18:	1b1b      	subs	r3, r3, r4
 8013b1a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8013b1e:	ee07 3a10 	vmov	s14, r3
 8013b22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013b26:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013b2a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8013b2e:	edd0 5a08 	vldr	s11, [r0, #32]
 8013b32:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013b36:	ee31 1a65 	vsub.f32	s2, s2, s11
 8013b3a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8013b3e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013b40:	698b      	ldr	r3, [r1, #24]
 8013b42:	1a9b      	subs	r3, r3, r2
 8013b44:	ee07 3a10 	vmov	s14, r3
 8013b48:	684b      	ldr	r3, [r1, #4]
 8013b4a:	1a9b      	subs	r3, r3, r2
 8013b4c:	ee01 3a90 	vmov	s3, r3
 8013b50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013b54:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013b58:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013b5c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013b60:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013b64:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013b68:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013b6c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013b70:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013b74:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013b76:	694a      	ldr	r2, [r1, #20]
 8013b78:	1b13      	subs	r3, r2, r4
 8013b7a:	ee03 3a10 	vmov	s6, r3
 8013b7e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013b82:	680b      	ldr	r3, [r1, #0]
 8013b84:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013b88:	1b1b      	subs	r3, r3, r4
 8013b8a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8013b8e:	ee03 3a10 	vmov	s6, r3
 8013b92:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013b96:	ee23 4a04 	vmul.f32	s8, s6, s8
 8013b9a:	eee1 5a04 	vfma.f32	s11, s2, s8
 8013b9e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8013ba2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8013ba6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8013baa:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8013bae:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8013bb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013bb6:	dd13      	ble.n	8013be0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8013bb8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013bbc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8013bc0:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013bc2:	eee3 7a87 	vfma.f32	s15, s7, s14
 8013bc6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013bca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013bce:	dd15      	ble.n	8013bfc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013bd0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013bd4:	6403      	str	r3, [r0, #64]	; 0x40
 8013bd6:	bd70      	pop	{r4, r5, r6, pc}
 8013bd8:	4623      	mov	r3, r4
 8013bda:	e6fd      	b.n	80139d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013bdc:	462a      	mov	r2, r5
 8013bde:	e706      	b.n	80139ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013be0:	d502      	bpl.n	8013be8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013be2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013be6:	e7e9      	b.n	8013bbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013be8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8013bec:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013bf0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013bf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013bf8:	dade      	bge.n	8013bb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8013bfa:	e7f2      	b.n	8013be2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8013bfc:	d502      	bpl.n	8013c04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8013bfe:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013c02:	e7e7      	b.n	8013bd4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013c04:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013c08:	eee3 4a86 	vfma.f32	s9, s7, s12
 8013c0c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013c10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c14:	dadc      	bge.n	8013bd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013c16:	e7f2      	b.n	8013bfe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013c18:	3d800000 	.word	0x3d800000

08013c1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8013c1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013c20:	2714      	movs	r7, #20
 8013c22:	435f      	muls	r7, r3
 8013c24:	eb02 0c07 	add.w	ip, r2, r7
 8013c28:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8013c2c:	f115 0e0f 	adds.w	lr, r5, #15
 8013c30:	f100 80a2 	bmi.w	8013d78 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013c34:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013c38:	9c08      	ldr	r4, [sp, #32]
 8013c3a:	f8c0 e014 	str.w	lr, [r0, #20]
 8013c3e:	2614      	movs	r6, #20
 8013c40:	4366      	muls	r6, r4
 8013c42:	eb02 0806 	add.w	r8, r2, r6
 8013c46:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013c4a:	f115 040f 	adds.w	r4, r5, #15
 8013c4e:	f100 809f 	bmi.w	8013d90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013c52:	1124      	asrs	r4, r4, #4
 8013c54:	eba4 040e 	sub.w	r4, r4, lr
 8013c58:	6184      	str	r4, [r0, #24]
 8013c5a:	2c00      	cmp	r4, #0
 8013c5c:	f000 808a 	beq.w	8013d74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013c60:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013c64:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013c68:	5995      	ldr	r5, [r2, r6]
 8013c6a:	eba4 0809 	sub.w	r8, r4, r9
 8013c6e:	59d4      	ldr	r4, [r2, r7]
 8013c70:	eba5 0a04 	sub.w	sl, r5, r4
 8013c74:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013c78:	fb0e fe05 	mul.w	lr, lr, r5
 8013c7c:	fb0a ee19 	mls	lr, sl, r9, lr
 8013c80:	fb08 e404 	mla	r4, r8, r4, lr
 8013c84:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013c88:	3c01      	subs	r4, #1
 8013c8a:	19a4      	adds	r4, r4, r6
 8013c8c:	f100 808c 	bmi.w	8013da8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8013c90:	fb94 fef6 	sdiv	lr, r4, r6
 8013c94:	f8c0 e000 	str.w	lr, [r0]
 8013c98:	fb06 441e 	mls	r4, r6, lr, r4
 8013c9c:	6104      	str	r4, [r0, #16]
 8013c9e:	2d00      	cmp	r5, #0
 8013ca0:	f2c0 8095 	blt.w	8013dce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8013ca4:	fb95 f4f6 	sdiv	r4, r5, r6
 8013ca8:	6044      	str	r4, [r0, #4]
 8013caa:	fb06 5514 	mls	r5, r6, r4, r5
 8013cae:	6085      	str	r5, [r0, #8]
 8013cb0:	60c6      	str	r6, [r0, #12]
 8013cb2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8013cb6:	6945      	ldr	r5, [r0, #20]
 8013cb8:	59d2      	ldr	r2, [r2, r7]
 8013cba:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8013df0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8013cbe:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013cc2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8013cc6:	ee07 4a10 	vmov	s14, r4
 8013cca:	6804      	ldr	r4, [r0, #0]
 8013ccc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013cd0:	ee07 2a90 	vmov	s15, r2
 8013cd4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013cd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013cdc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013ce0:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013ce4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013ce8:	edd3 6a00 	vldr	s13, [r3]
 8013cec:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013cf0:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8013cf4:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013cf8:	edc0 6a07 	vstr	s13, [r0, #28]
 8013cfc:	edd0 6a01 	vldr	s13, [r0, #4]
 8013d00:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013d04:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013d08:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013d0c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013d10:	ed80 6a08 	vstr	s12, [r0, #32]
 8013d14:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013d16:	6242      	str	r2, [r0, #36]	; 0x24
 8013d18:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8013d1c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013d20:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013d24:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013d28:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8013d2c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013d30:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013d34:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013d38:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013d3c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013d40:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013d42:	6302      	str	r2, [r0, #48]	; 0x30
 8013d44:	ed93 6a06 	vldr	s12, [r3, #24]
 8013d48:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8013d4c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013d50:	eeb0 7a46 	vmov.f32	s14, s12
 8013d54:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013d58:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013d5c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013d60:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013d64:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013d68:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013d6c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8013d70:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8013d72:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013d74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013d78:	f1c5 0501 	rsb	r5, r5, #1
 8013d7c:	f015 050f 	ands.w	r5, r5, #15
 8013d80:	bf18      	it	ne
 8013d82:	2501      	movne	r5, #1
 8013d84:	2410      	movs	r4, #16
 8013d86:	fb9e fef4 	sdiv	lr, lr, r4
 8013d8a:	ebae 0e05 	sub.w	lr, lr, r5
 8013d8e:	e753      	b.n	8013c38 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8013d90:	f1c5 0501 	rsb	r5, r5, #1
 8013d94:	f015 050f 	ands.w	r5, r5, #15
 8013d98:	bf18      	it	ne
 8013d9a:	2501      	movne	r5, #1
 8013d9c:	f04f 0910 	mov.w	r9, #16
 8013da0:	fb94 f4f9 	sdiv	r4, r4, r9
 8013da4:	1b64      	subs	r4, r4, r5
 8013da6:	e755      	b.n	8013c54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013da8:	4264      	negs	r4, r4
 8013daa:	fb94 fef6 	sdiv	lr, r4, r6
 8013dae:	f1ce 0800 	rsb	r8, lr, #0
 8013db2:	fb06 441e 	mls	r4, r6, lr, r4
 8013db6:	f8c0 8000 	str.w	r8, [r0]
 8013dba:	6104      	str	r4, [r0, #16]
 8013dbc:	2c00      	cmp	r4, #0
 8013dbe:	f43f af6e 	beq.w	8013c9e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8013dc2:	ea6f 0e0e 	mvn.w	lr, lr
 8013dc6:	f8c0 e000 	str.w	lr, [r0]
 8013dca:	1b34      	subs	r4, r6, r4
 8013dcc:	e766      	b.n	8013c9c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8013dce:	426d      	negs	r5, r5
 8013dd0:	fb95 f4f6 	sdiv	r4, r5, r6
 8013dd4:	f1c4 0e00 	rsb	lr, r4, #0
 8013dd8:	fb06 5514 	mls	r5, r6, r4, r5
 8013ddc:	f8c0 e004 	str.w	lr, [r0, #4]
 8013de0:	6085      	str	r5, [r0, #8]
 8013de2:	2d00      	cmp	r5, #0
 8013de4:	f43f af64 	beq.w	8013cb0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013de8:	43e4      	mvns	r4, r4
 8013dea:	6044      	str	r4, [r0, #4]
 8013dec:	1b75      	subs	r5, r6, r5
 8013dee:	e75e      	b.n	8013cae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013df0:	3d800000 	.word	0x3d800000

08013df4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013df4:	4602      	mov	r2, r0
 8013df6:	b148      	cbz	r0, 8013e0c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013df8:	2300      	movs	r3, #0
 8013dfa:	b298      	uxth	r0, r3
 8013dfc:	3301      	adds	r3, #1
 8013dfe:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013e02:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013e06:	2900      	cmp	r1, #0
 8013e08:	d1f7      	bne.n	8013dfa <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8013e0a:	4770      	bx	lr
 8013e0c:	4770      	bx	lr

08013e0e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8013e0e:	b530      	push	{r4, r5, lr}
 8013e10:	4604      	mov	r4, r0
 8013e12:	b159      	cbz	r1, 8013e2c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013e14:	b148      	cbz	r0, 8013e2a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013e16:	2300      	movs	r3, #0
 8013e18:	b298      	uxth	r0, r3
 8013e1a:	4282      	cmp	r2, r0
 8013e1c:	d905      	bls.n	8013e2a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013e1e:	5ccd      	ldrb	r5, [r1, r3]
 8013e20:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013e24:	3301      	adds	r3, #1
 8013e26:	2d00      	cmp	r5, #0
 8013e28:	d1f6      	bne.n	8013e18 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8013e2a:	bd30      	pop	{r4, r5, pc}
 8013e2c:	4608      	mov	r0, r1
 8013e2e:	e7fc      	b.n	8013e2a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013e30 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013e30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013e32:	b08b      	sub	sp, #44	; 0x2c
 8013e34:	468c      	mov	ip, r1
 8013e36:	2100      	movs	r1, #0
 8013e38:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013e3c:	ae01      	add	r6, sp, #4
 8013e3e:	211f      	movs	r1, #31
 8013e40:	fbb0 f7f3 	udiv	r7, r0, r3
 8013e44:	fb03 0517 	mls	r5, r3, r7, r0
 8013e48:	b2ec      	uxtb	r4, r5
 8013e4a:	2d09      	cmp	r5, #9
 8013e4c:	bfd4      	ite	le
 8013e4e:	3430      	addle	r4, #48	; 0x30
 8013e50:	3457      	addgt	r4, #87	; 0x57
 8013e52:	b2e4      	uxtb	r4, r4
 8013e54:	558c      	strb	r4, [r1, r6]
 8013e56:	4638      	mov	r0, r7
 8013e58:	1e4c      	subs	r4, r1, #1
 8013e5a:	b92f      	cbnz	r7, 8013e68 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013e5c:	4431      	add	r1, r6
 8013e5e:	4660      	mov	r0, ip
 8013e60:	f7ff ffd5 	bl	8013e0e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013e64:	b00b      	add	sp, #44	; 0x2c
 8013e66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e68:	4621      	mov	r1, r4
 8013e6a:	e7e9      	b.n	8013e40 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013e6c <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013e6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013e6e:	4607      	mov	r7, r0
 8013e70:	b08b      	sub	sp, #44	; 0x2c
 8013e72:	4608      	mov	r0, r1
 8013e74:	b341      	cbz	r1, 8013ec8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013e76:	1e99      	subs	r1, r3, #2
 8013e78:	2922      	cmp	r1, #34	; 0x22
 8013e7a:	d825      	bhi.n	8013ec8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013e7c:	2100      	movs	r1, #0
 8013e7e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013e82:	463c      	mov	r4, r7
 8013e84:	261f      	movs	r6, #31
 8013e86:	f10d 0c04 	add.w	ip, sp, #4
 8013e8a:	fb94 fef3 	sdiv	lr, r4, r3
 8013e8e:	fb03 441e 	mls	r4, r3, lr, r4
 8013e92:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013e96:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013e9a:	b2ec      	uxtb	r4, r5
 8013e9c:	2d09      	cmp	r5, #9
 8013e9e:	bfd4      	ite	le
 8013ea0:	3430      	addle	r4, #48	; 0x30
 8013ea2:	3457      	addgt	r4, #87	; 0x57
 8013ea4:	b2e4      	uxtb	r4, r4
 8013ea6:	f80c 4006 	strb.w	r4, [ip, r6]
 8013eaa:	4674      	mov	r4, lr
 8013eac:	1e71      	subs	r1, r6, #1
 8013eae:	b96c      	cbnz	r4, 8013ecc <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8013eb0:	2f00      	cmp	r7, #0
 8013eb2:	da05      	bge.n	8013ec0 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8013eb4:	ab0a      	add	r3, sp, #40	; 0x28
 8013eb6:	4419      	add	r1, r3
 8013eb8:	232d      	movs	r3, #45	; 0x2d
 8013eba:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013ebe:	1eb1      	subs	r1, r6, #2
 8013ec0:	3101      	adds	r1, #1
 8013ec2:	4461      	add	r1, ip
 8013ec4:	f7ff ffa3 	bl	8013e0e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013ec8:	b00b      	add	sp, #44	; 0x2c
 8013eca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ecc:	460e      	mov	r6, r1
 8013ece:	e7dc      	b.n	8013e8a <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08013ed0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013ed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ed4:	4691      	mov	r9, r2
 8013ed6:	b085      	sub	sp, #20
 8013ed8:	6802      	ldr	r2, [r0, #0]
 8013eda:	9201      	str	r2, [sp, #4]
 8013edc:	4688      	mov	r8, r1
 8013ede:	4683      	mov	fp, r0
 8013ee0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013ee4:	9103      	str	r1, [sp, #12]
 8013ee6:	4610      	mov	r0, r2
 8013ee8:	461c      	mov	r4, r3
 8013eea:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013eee:	9302      	str	r3, [sp, #8]
 8013ef0:	f7ff ff80 	bl	8013df4 <_ZN8touchgfx7Unicode6strlenEPKt>
 8013ef4:	f1b8 0f00 	cmp.w	r8, #0
 8013ef8:	bf0c      	ite	eq
 8013efa:	4684      	moveq	ip, r0
 8013efc:	f100 0c01 	addne.w	ip, r0, #1
 8013f00:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013f04:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013f08:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013f0a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013f0c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013f10:	9903      	ldr	r1, [sp, #12]
 8013f12:	fa1f fc8c 	uxth.w	ip, ip
 8013f16:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013f1a:	d041      	beq.n	8013fa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013f1c:	d834      	bhi.n	8013f88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013f1e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013f22:	d059      	beq.n	8013fd8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013f24:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013f28:	d03a      	beq.n	8013fa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013f2a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013f2e:	d034      	beq.n	8013f9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013f30:	2400      	movs	r4, #0
 8013f32:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013f36:	3a01      	subs	r2, #1
 8013f38:	b169      	cbz	r1, 8013f56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013f3a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013f3c:	458c      	cmp	ip, r1
 8013f3e:	da09      	bge.n	8013f54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013f40:	eba1 010c 	sub.w	r1, r1, ip
 8013f44:	b289      	uxth	r1, r1
 8013f46:	b933      	cbnz	r3, 8013f56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013f48:	2e00      	cmp	r6, #0
 8013f4a:	d051      	beq.n	8013ff0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013f4c:	2800      	cmp	r0, #0
 8013f4e:	d04f      	beq.n	8013ff0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013f50:	440c      	add	r4, r1
 8013f52:	b2a4      	uxth	r4, r4
 8013f54:	2100      	movs	r1, #0
 8013f56:	682b      	ldr	r3, [r5, #0]
 8013f58:	4293      	cmp	r3, r2
 8013f5a:	da07      	bge.n	8013f6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013f5c:	f1b8 0f00 	cmp.w	r8, #0
 8013f60:	d004      	beq.n	8013f6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013f62:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013f66:	682b      	ldr	r3, [r5, #0]
 8013f68:	3301      	adds	r3, #1
 8013f6a:	602b      	str	r3, [r5, #0]
 8013f6c:	2730      	movs	r7, #48	; 0x30
 8013f6e:	2c00      	cmp	r4, #0
 8013f70:	d04e      	beq.n	8014010 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013f72:	682e      	ldr	r6, [r5, #0]
 8013f74:	3c01      	subs	r4, #1
 8013f76:	42b2      	cmp	r2, r6
 8013f78:	b2a4      	uxth	r4, r4
 8013f7a:	dd49      	ble.n	8014010 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013f7c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013f80:	682b      	ldr	r3, [r5, #0]
 8013f82:	3301      	adds	r3, #1
 8013f84:	602b      	str	r3, [r5, #0]
 8013f86:	e7f2      	b.n	8013f6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013f88:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013f8c:	d01d      	beq.n	8013fca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013f8e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013f92:	d002      	beq.n	8013f9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013f94:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013f98:	e7c9      	b.n	8013f2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013f9a:	4684      	mov	ip, r0
 8013f9c:	f04f 0800 	mov.w	r8, #0
 8013fa0:	2c00      	cmp	r4, #0
 8013fa2:	d0c6      	beq.n	8013f32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013fa4:	b947      	cbnz	r7, 8013fb8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013fa6:	2801      	cmp	r0, #1
 8013fa8:	d106      	bne.n	8013fb8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013faa:	8814      	ldrh	r4, [r2, #0]
 8013fac:	2c30      	cmp	r4, #48	; 0x30
 8013fae:	bf02      	ittt	eq
 8013fb0:	3202      	addeq	r2, #2
 8013fb2:	f8cb 2000 	streq.w	r2, [fp]
 8013fb6:	4638      	moveq	r0, r7
 8013fb8:	45bc      	cmp	ip, r7
 8013fba:	da14      	bge.n	8013fe6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013fbc:	b2bf      	uxth	r7, r7
 8013fbe:	eba7 040c 	sub.w	r4, r7, ip
 8013fc2:	b2a4      	uxth	r4, r4
 8013fc4:	46bc      	mov	ip, r7
 8013fc6:	2600      	movs	r6, #0
 8013fc8:	e7b3      	b.n	8013f32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013fca:	4684      	mov	ip, r0
 8013fcc:	b16c      	cbz	r4, 8013fea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013fce:	42b8      	cmp	r0, r7
 8013fd0:	dd00      	ble.n	8013fd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013fd2:	b2b8      	uxth	r0, r7
 8013fd4:	2400      	movs	r4, #0
 8013fd6:	e003      	b.n	8013fe0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013fd8:	f04f 0c01 	mov.w	ip, #1
 8013fdc:	2400      	movs	r4, #0
 8013fde:	4660      	mov	r0, ip
 8013fe0:	4626      	mov	r6, r4
 8013fe2:	46a0      	mov	r8, r4
 8013fe4:	e7a5      	b.n	8013f32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013fe6:	2400      	movs	r4, #0
 8013fe8:	e7ed      	b.n	8013fc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013fea:	4626      	mov	r6, r4
 8013fec:	46a0      	mov	r8, r4
 8013fee:	e7a0      	b.n	8013f32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013ff0:	2900      	cmp	r1, #0
 8013ff2:	d0b0      	beq.n	8013f56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013ff4:	2720      	movs	r7, #32
 8013ff6:	682e      	ldr	r6, [r5, #0]
 8013ff8:	2900      	cmp	r1, #0
 8013ffa:	d0ac      	beq.n	8013f56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013ffc:	3901      	subs	r1, #1
 8013ffe:	4296      	cmp	r6, r2
 8014000:	b289      	uxth	r1, r1
 8014002:	daa7      	bge.n	8013f54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014004:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8014008:	682b      	ldr	r3, [r5, #0]
 801400a:	3301      	adds	r3, #1
 801400c:	602b      	str	r3, [r5, #0]
 801400e:	e7f2      	b.n	8013ff6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8014010:	b188      	cbz	r0, 8014036 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014012:	682b      	ldr	r3, [r5, #0]
 8014014:	3801      	subs	r0, #1
 8014016:	429a      	cmp	r2, r3
 8014018:	b280      	uxth	r0, r0
 801401a:	dd0c      	ble.n	8014036 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801401c:	f8db 3000 	ldr.w	r3, [fp]
 8014020:	1c9c      	adds	r4, r3, #2
 8014022:	f8cb 4000 	str.w	r4, [fp]
 8014026:	881c      	ldrh	r4, [r3, #0]
 8014028:	682b      	ldr	r3, [r5, #0]
 801402a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801402e:	682b      	ldr	r3, [r5, #0]
 8014030:	3301      	adds	r3, #1
 8014032:	602b      	str	r3, [r5, #0]
 8014034:	e7ec      	b.n	8014010 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014036:	2620      	movs	r6, #32
 8014038:	b151      	cbz	r1, 8014050 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801403a:	6828      	ldr	r0, [r5, #0]
 801403c:	3901      	subs	r1, #1
 801403e:	4282      	cmp	r2, r0
 8014040:	b289      	uxth	r1, r1
 8014042:	dd05      	ble.n	8014050 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014044:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8014048:	682b      	ldr	r3, [r5, #0]
 801404a:	3301      	adds	r3, #1
 801404c:	602b      	str	r3, [r5, #0]
 801404e:	e7f3      	b.n	8014038 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8014050:	b005      	add	sp, #20
 8014052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014056 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8014056:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801405a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801405e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8014062:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8014066:	2400      	movs	r4, #0
 8014068:	8014      	strh	r4, [r2, #0]
 801406a:	701c      	strb	r4, [r3, #0]
 801406c:	f888 4000 	strb.w	r4, [r8]
 8014070:	f88c 4000 	strb.w	r4, [ip]
 8014074:	f88e 4000 	strb.w	r4, [lr]
 8014078:	703c      	strb	r4, [r7, #0]
 801407a:	6804      	ldr	r4, [r0, #0]
 801407c:	b1a4      	cbz	r4, 80140a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801407e:	8824      	ldrh	r4, [r4, #0]
 8014080:	f04f 0901 	mov.w	r9, #1
 8014084:	b314      	cbz	r4, 80140cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014086:	2c2b      	cmp	r4, #43	; 0x2b
 8014088:	d001      	beq.n	801408e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801408a:	2c20      	cmp	r4, #32
 801408c:	d110      	bne.n	80140b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801408e:	8014      	strh	r4, [r2, #0]
 8014090:	6804      	ldr	r4, [r0, #0]
 8014092:	b10c      	cbz	r4, 8014098 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8014094:	3402      	adds	r4, #2
 8014096:	6004      	str	r4, [r0, #0]
 8014098:	680c      	ldr	r4, [r1, #0]
 801409a:	b10c      	cbz	r4, 80140a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801409c:	3401      	adds	r4, #1
 801409e:	600c      	str	r4, [r1, #0]
 80140a0:	6804      	ldr	r4, [r0, #0]
 80140a2:	b17c      	cbz	r4, 80140c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80140a4:	8824      	ldrh	r4, [r4, #0]
 80140a6:	e7ed      	b.n	8014084 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80140a8:	680c      	ldr	r4, [r1, #0]
 80140aa:	b17c      	cbz	r4, 80140cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80140ac:	7824      	ldrb	r4, [r4, #0]
 80140ae:	e7e7      	b.n	8014080 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80140b0:	2c2d      	cmp	r4, #45	; 0x2d
 80140b2:	d102      	bne.n	80140ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80140b4:	f883 9000 	strb.w	r9, [r3]
 80140b8:	e7ea      	b.n	8014090 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80140ba:	2c23      	cmp	r4, #35	; 0x23
 80140bc:	d107      	bne.n	80140ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80140be:	f888 9000 	strb.w	r9, [r8]
 80140c2:	e7e5      	b.n	8014090 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80140c4:	680c      	ldr	r4, [r1, #0]
 80140c6:	b10c      	cbz	r4, 80140cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80140c8:	7824      	ldrb	r4, [r4, #0]
 80140ca:	e7db      	b.n	8014084 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80140cc:	2400      	movs	r4, #0
 80140ce:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80140d2:	2b09      	cmp	r3, #9
 80140d4:	d901      	bls.n	80140da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80140d6:	2c2a      	cmp	r4, #42	; 0x2a
 80140d8:	d122      	bne.n	8014120 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80140da:	2301      	movs	r3, #1
 80140dc:	2c30      	cmp	r4, #48	; 0x30
 80140de:	f88e 3000 	strb.w	r3, [lr]
 80140e2:	d10d      	bne.n	8014100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80140e4:	f88c 3000 	strb.w	r3, [ip]
 80140e8:	6803      	ldr	r3, [r0, #0]
 80140ea:	b10b      	cbz	r3, 80140f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80140ec:	3302      	adds	r3, #2
 80140ee:	6003      	str	r3, [r0, #0]
 80140f0:	680b      	ldr	r3, [r1, #0]
 80140f2:	b10b      	cbz	r3, 80140f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80140f4:	3301      	adds	r3, #1
 80140f6:	600b      	str	r3, [r1, #0]
 80140f8:	6803      	ldr	r3, [r0, #0]
 80140fa:	2b00      	cmp	r3, #0
 80140fc:	d02f      	beq.n	801415e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80140fe:	881c      	ldrh	r4, [r3, #0]
 8014100:	2c2a      	cmp	r4, #42	; 0x2a
 8014102:	d135      	bne.n	8014170 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014104:	f04f 33ff 	mov.w	r3, #4294967295
 8014108:	6033      	str	r3, [r6, #0]
 801410a:	6803      	ldr	r3, [r0, #0]
 801410c:	b10b      	cbz	r3, 8014112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801410e:	3302      	adds	r3, #2
 8014110:	6003      	str	r3, [r0, #0]
 8014112:	680b      	ldr	r3, [r1, #0]
 8014114:	b10b      	cbz	r3, 801411a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8014116:	3301      	adds	r3, #1
 8014118:	600b      	str	r3, [r1, #0]
 801411a:	6803      	ldr	r3, [r0, #0]
 801411c:	b31b      	cbz	r3, 8014166 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801411e:	881c      	ldrh	r4, [r3, #0]
 8014120:	2c2e      	cmp	r4, #46	; 0x2e
 8014122:	d11a      	bne.n	801415a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014124:	2301      	movs	r3, #1
 8014126:	703b      	strb	r3, [r7, #0]
 8014128:	6803      	ldr	r3, [r0, #0]
 801412a:	b10b      	cbz	r3, 8014130 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801412c:	3302      	adds	r3, #2
 801412e:	6003      	str	r3, [r0, #0]
 8014130:	680b      	ldr	r3, [r1, #0]
 8014132:	b10b      	cbz	r3, 8014138 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8014134:	3301      	adds	r3, #1
 8014136:	600b      	str	r3, [r1, #0]
 8014138:	6803      	ldr	r3, [r0, #0]
 801413a:	2b00      	cmp	r3, #0
 801413c:	d036      	beq.n	80141ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801413e:	881b      	ldrh	r3, [r3, #0]
 8014140:	2b2a      	cmp	r3, #42	; 0x2a
 8014142:	d137      	bne.n	80141b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014144:	f04f 33ff 	mov.w	r3, #4294967295
 8014148:	602b      	str	r3, [r5, #0]
 801414a:	6803      	ldr	r3, [r0, #0]
 801414c:	b10b      	cbz	r3, 8014152 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801414e:	3302      	adds	r3, #2
 8014150:	6003      	str	r3, [r0, #0]
 8014152:	680b      	ldr	r3, [r1, #0]
 8014154:	b10b      	cbz	r3, 801415a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014156:	3301      	adds	r3, #1
 8014158:	600b      	str	r3, [r1, #0]
 801415a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801415e:	680c      	ldr	r4, [r1, #0]
 8014160:	b134      	cbz	r4, 8014170 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014162:	7824      	ldrb	r4, [r4, #0]
 8014164:	e7cc      	b.n	8014100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014166:	680b      	ldr	r3, [r1, #0]
 8014168:	2b00      	cmp	r3, #0
 801416a:	d0f6      	beq.n	801415a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801416c:	781c      	ldrb	r4, [r3, #0]
 801416e:	e7d7      	b.n	8014120 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014170:	2300      	movs	r3, #0
 8014172:	6033      	str	r3, [r6, #0]
 8014174:	220a      	movs	r2, #10
 8014176:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801417a:	fa1f f38c 	uxth.w	r3, ip
 801417e:	2b09      	cmp	r3, #9
 8014180:	d8ce      	bhi.n	8014120 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014182:	6833      	ldr	r3, [r6, #0]
 8014184:	fb02 c303 	mla	r3, r2, r3, ip
 8014188:	6033      	str	r3, [r6, #0]
 801418a:	6803      	ldr	r3, [r0, #0]
 801418c:	b10b      	cbz	r3, 8014192 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801418e:	3302      	adds	r3, #2
 8014190:	6003      	str	r3, [r0, #0]
 8014192:	680b      	ldr	r3, [r1, #0]
 8014194:	b10b      	cbz	r3, 801419a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8014196:	3301      	adds	r3, #1
 8014198:	600b      	str	r3, [r1, #0]
 801419a:	6803      	ldr	r3, [r0, #0]
 801419c:	b10b      	cbz	r3, 80141a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801419e:	881c      	ldrh	r4, [r3, #0]
 80141a0:	e7e9      	b.n	8014176 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80141a2:	680c      	ldr	r4, [r1, #0]
 80141a4:	2c00      	cmp	r4, #0
 80141a6:	d0e6      	beq.n	8014176 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80141a8:	7824      	ldrb	r4, [r4, #0]
 80141aa:	e7e4      	b.n	8014176 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80141ac:	680b      	ldr	r3, [r1, #0]
 80141ae:	b10b      	cbz	r3, 80141b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80141b0:	781b      	ldrb	r3, [r3, #0]
 80141b2:	e7c5      	b.n	8014140 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80141b4:	2200      	movs	r2, #0
 80141b6:	602a      	str	r2, [r5, #0]
 80141b8:	240a      	movs	r4, #10
 80141ba:	3b30      	subs	r3, #48	; 0x30
 80141bc:	b29e      	uxth	r6, r3
 80141be:	2e09      	cmp	r6, #9
 80141c0:	682a      	ldr	r2, [r5, #0]
 80141c2:	d813      	bhi.n	80141ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80141c4:	fb04 3302 	mla	r3, r4, r2, r3
 80141c8:	602b      	str	r3, [r5, #0]
 80141ca:	6803      	ldr	r3, [r0, #0]
 80141cc:	b10b      	cbz	r3, 80141d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80141ce:	3302      	adds	r3, #2
 80141d0:	6003      	str	r3, [r0, #0]
 80141d2:	680b      	ldr	r3, [r1, #0]
 80141d4:	b10b      	cbz	r3, 80141da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80141d6:	3301      	adds	r3, #1
 80141d8:	600b      	str	r3, [r1, #0]
 80141da:	6803      	ldr	r3, [r0, #0]
 80141dc:	b10b      	cbz	r3, 80141e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80141de:	881b      	ldrh	r3, [r3, #0]
 80141e0:	e7eb      	b.n	80141ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80141e2:	680b      	ldr	r3, [r1, #0]
 80141e4:	2b00      	cmp	r3, #0
 80141e6:	d0e8      	beq.n	80141ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80141e8:	781b      	ldrb	r3, [r3, #0]
 80141ea:	e7e6      	b.n	80141ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80141ec:	2a06      	cmp	r2, #6
 80141ee:	bfa8      	it	ge
 80141f0:	2206      	movge	r2, #6
 80141f2:	602a      	str	r2, [r5, #0]
 80141f4:	e7b1      	b.n	801415a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080141f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80141f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141fa:	b0a3      	sub	sp, #140	; 0x8c
 80141fc:	2600      	movs	r6, #0
 80141fe:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8014202:	4607      	mov	r7, r0
 8014204:	4688      	mov	r8, r1
 8014206:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801420a:	4631      	mov	r1, r6
 801420c:	2242      	movs	r2, #66	; 0x42
 801420e:	4648      	mov	r0, r9
 8014210:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8014212:	960d      	str	r6, [sp, #52]	; 0x34
 8014214:	f00c fefa 	bl	802100c <memset>
 8014218:	b15f      	cbz	r7, 8014232 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801421a:	f108 3aff 	add.w	sl, r8, #4294967295
 801421e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014220:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014222:	b152      	cbz	r2, 801423a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8014224:	8812      	ldrh	r2, [r2, #0]
 8014226:	b10a      	cbz	r2, 801422c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014228:	459a      	cmp	sl, r3
 801422a:	dc2e      	bgt.n	801428a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801422c:	2200      	movs	r2, #0
 801422e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014232:	4638      	mov	r0, r7
 8014234:	b023      	add	sp, #140	; 0x8c
 8014236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801423a:	9a08      	ldr	r2, [sp, #32]
 801423c:	2a00      	cmp	r2, #0
 801423e:	d0f5      	beq.n	801422c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014240:	7812      	ldrb	r2, [r2, #0]
 8014242:	e7f0      	b.n	8014226 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8014244:	2d00      	cmp	r5, #0
 8014246:	d0ea      	beq.n	801421e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014248:	782a      	ldrb	r2, [r5, #0]
 801424a:	b142      	cbz	r2, 801425e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801424c:	2a25      	cmp	r2, #37	; 0x25
 801424e:	d001      	beq.n	8014254 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8014250:	459a      	cmp	sl, r3
 8014252:	dc08      	bgt.n	8014266 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8014254:	f1bb 0f00 	cmp.w	fp, #0
 8014258:	d121      	bne.n	801429e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801425a:	2d00      	cmp	r5, #0
 801425c:	d0df      	beq.n	801421e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801425e:	782a      	ldrb	r2, [r5, #0]
 8014260:	f04f 0b00 	mov.w	fp, #0
 8014264:	e01d      	b.n	80142a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8014266:	f1bb 0f00 	cmp.w	fp, #0
 801426a:	d078      	beq.n	801435e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801426c:	f8bb 2000 	ldrh.w	r2, [fp]
 8014270:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014274:	f1bb 0f00 	cmp.w	fp, #0
 8014278:	d002      	beq.n	8014280 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801427a:	f10b 0202 	add.w	r2, fp, #2
 801427e:	9209      	str	r2, [sp, #36]	; 0x24
 8014280:	b10d      	cbz	r5, 8014286 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8014282:	3501      	adds	r5, #1
 8014284:	9508      	str	r5, [sp, #32]
 8014286:	3301      	adds	r3, #1
 8014288:	930d      	str	r3, [sp, #52]	; 0x34
 801428a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801428e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014290:	f1bb 0f00 	cmp.w	fp, #0
 8014294:	d0d6      	beq.n	8014244 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8014296:	f8bb 2000 	ldrh.w	r2, [fp]
 801429a:	2a00      	cmp	r2, #0
 801429c:	d1d6      	bne.n	801424c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801429e:	f8bb 2000 	ldrh.w	r2, [fp]
 80142a2:	2a00      	cmp	r2, #0
 80142a4:	d0bb      	beq.n	801421e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80142a6:	459a      	cmp	sl, r3
 80142a8:	ddb9      	ble.n	801421e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80142aa:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80142ae:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80142b2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80142b6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80142ba:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80142be:	960e      	str	r6, [sp, #56]	; 0x38
 80142c0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80142c4:	960f      	str	r6, [sp, #60]	; 0x3c
 80142c6:	f1bb 0f00 	cmp.w	fp, #0
 80142ca:	d002      	beq.n	80142d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80142cc:	f10b 0302 	add.w	r3, fp, #2
 80142d0:	9309      	str	r3, [sp, #36]	; 0x24
 80142d2:	b10d      	cbz	r5, 80142d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80142d4:	1c6b      	adds	r3, r5, #1
 80142d6:	9308      	str	r3, [sp, #32]
 80142d8:	ab0f      	add	r3, sp, #60	; 0x3c
 80142da:	9305      	str	r3, [sp, #20]
 80142dc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80142e0:	9304      	str	r3, [sp, #16]
 80142e2:	ab0e      	add	r3, sp, #56	; 0x38
 80142e4:	9303      	str	r3, [sp, #12]
 80142e6:	ab0c      	add	r3, sp, #48	; 0x30
 80142e8:	9302      	str	r3, [sp, #8]
 80142ea:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80142ee:	9301      	str	r3, [sp, #4]
 80142f0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80142f4:	9300      	str	r3, [sp, #0]
 80142f6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80142fa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80142fe:	a908      	add	r1, sp, #32
 8014300:	a809      	add	r0, sp, #36	; 0x24
 8014302:	f7ff fea8 	bl	8014056 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014306:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014308:	2b00      	cmp	r3, #0
 801430a:	bfbe      	ittt	lt
 801430c:	6823      	ldrlt	r3, [r4, #0]
 801430e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014312:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014314:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014316:	bfb8      	it	lt
 8014318:	3404      	addlt	r4, #4
 801431a:	2b00      	cmp	r3, #0
 801431c:	bfb8      	it	lt
 801431e:	6823      	ldrlt	r3, [r4, #0]
 8014320:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8014324:	bfbe      	ittt	lt
 8014326:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801432a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801432c:	3404      	addlt	r4, #4
 801432e:	b1d9      	cbz	r1, 8014368 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8014330:	880b      	ldrh	r3, [r1, #0]
 8014332:	2b69      	cmp	r3, #105	; 0x69
 8014334:	d01f      	beq.n	8014376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014336:	d82f      	bhi.n	8014398 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8014338:	2b58      	cmp	r3, #88	; 0x58
 801433a:	d01c      	beq.n	8014376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801433c:	d818      	bhi.n	8014370 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801433e:	2b25      	cmp	r3, #37	; 0x25
 8014340:	d034      	beq.n	80143ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8014342:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8014346:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014348:	f1bb 0f00 	cmp.w	fp, #0
 801434c:	f000 80b8 	beq.w	80144c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8014350:	f8bb 5000 	ldrh.w	r5, [fp]
 8014354:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8014358:	3301      	adds	r3, #1
 801435a:	930d      	str	r3, [sp, #52]	; 0x34
 801435c:	e029      	b.n	80143b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801435e:	b10d      	cbz	r5, 8014364 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8014360:	782a      	ldrb	r2, [r5, #0]
 8014362:	e785      	b.n	8014270 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014364:	462a      	mov	r2, r5
 8014366:	e783      	b.n	8014270 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014368:	2a00      	cmp	r2, #0
 801436a:	d0ea      	beq.n	8014342 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801436c:	7813      	ldrb	r3, [r2, #0]
 801436e:	e7e0      	b.n	8014332 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8014370:	3b63      	subs	r3, #99	; 0x63
 8014372:	2b01      	cmp	r3, #1
 8014374:	d8e5      	bhi.n	8014342 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8014376:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801437a:	b329      	cbz	r1, 80143c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801437c:	880b      	ldrh	r3, [r1, #0]
 801437e:	2b69      	cmp	r3, #105	; 0x69
 8014380:	d063      	beq.n	801444a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8014382:	d825      	bhi.n	80143d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8014384:	2b63      	cmp	r3, #99	; 0x63
 8014386:	d038      	beq.n	80143fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8014388:	2b64      	cmp	r3, #100	; 0x64
 801438a:	d05e      	beq.n	801444a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801438c:	2b58      	cmp	r3, #88	; 0x58
 801438e:	d07b      	beq.n	8014488 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8014390:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8014394:	4625      	mov	r5, r4
 8014396:	e036      	b.n	8014406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014398:	2b73      	cmp	r3, #115	; 0x73
 801439a:	d0ec      	beq.n	8014376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801439c:	d802      	bhi.n	80143a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801439e:	2b6f      	cmp	r3, #111	; 0x6f
 80143a0:	d1cf      	bne.n	8014342 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80143a2:	e7e8      	b.n	8014376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80143a4:	2b75      	cmp	r3, #117	; 0x75
 80143a6:	d0e6      	beq.n	8014376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80143a8:	2b78      	cmp	r3, #120	; 0x78
 80143aa:	e7f9      	b.n	80143a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80143ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80143ae:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80143b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143b4:	b10b      	cbz	r3, 80143ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80143b6:	3302      	adds	r3, #2
 80143b8:	9309      	str	r3, [sp, #36]	; 0x24
 80143ba:	9b08      	ldr	r3, [sp, #32]
 80143bc:	2b00      	cmp	r3, #0
 80143be:	f43f af2e 	beq.w	801421e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80143c2:	3301      	adds	r3, #1
 80143c4:	9308      	str	r3, [sp, #32]
 80143c6:	e72a      	b.n	801421e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80143c8:	2a00      	cmp	r2, #0
 80143ca:	d0e1      	beq.n	8014390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80143cc:	7813      	ldrb	r3, [r2, #0]
 80143ce:	e7d6      	b.n	801437e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80143d0:	2b73      	cmp	r3, #115	; 0x73
 80143d2:	d036      	beq.n	8014442 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80143d4:	d807      	bhi.n	80143e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80143d6:	2b6f      	cmp	r3, #111	; 0x6f
 80143d8:	d1da      	bne.n	8014390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80143da:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80143dc:	1d25      	adds	r5, r4, #4
 80143de:	eba8 0202 	sub.w	r2, r8, r2
 80143e2:	2308      	movs	r3, #8
 80143e4:	e04a      	b.n	801447c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80143e6:	2b75      	cmp	r3, #117	; 0x75
 80143e8:	d043      	beq.n	8014472 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80143ea:	2b78      	cmp	r3, #120	; 0x78
 80143ec:	d1d0      	bne.n	8014390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80143ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80143f0:	1d25      	adds	r5, r4, #4
 80143f2:	eba8 0202 	sub.w	r2, r8, r2
 80143f6:	2310      	movs	r3, #16
 80143f8:	e040      	b.n	801447c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80143fa:	6823      	ldr	r3, [r4, #0]
 80143fc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014400:	1d25      	adds	r5, r4, #4
 8014402:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8014406:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014408:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801440c:	2b00      	cmp	r3, #0
 801440e:	d052      	beq.n	80144b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8014410:	881a      	ldrh	r2, [r3, #0]
 8014412:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8014416:	a80d      	add	r0, sp, #52	; 0x34
 8014418:	9005      	str	r0, [sp, #20]
 801441a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801441e:	9004      	str	r0, [sp, #16]
 8014420:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014422:	9003      	str	r0, [sp, #12]
 8014424:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014428:	9002      	str	r0, [sp, #8]
 801442a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801442c:	9001      	str	r0, [sp, #4]
 801442e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8014432:	9000      	str	r0, [sp, #0]
 8014434:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014438:	a810      	add	r0, sp, #64	; 0x40
 801443a:	f7ff fd49 	bl	8013ed0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801443e:	462c      	mov	r4, r5
 8014440:	e7b7      	b.n	80143b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8014442:	6823      	ldr	r3, [r4, #0]
 8014444:	1d25      	adds	r5, r4, #4
 8014446:	9310      	str	r3, [sp, #64]	; 0x40
 8014448:	e7dd      	b.n	8014406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801444a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801444c:	6820      	ldr	r0, [r4, #0]
 801444e:	eba8 0202 	sub.w	r2, r8, r2
 8014452:	230a      	movs	r3, #10
 8014454:	b292      	uxth	r2, r2
 8014456:	4649      	mov	r1, r9
 8014458:	f7ff fd08 	bl	8013e6c <_ZN8touchgfx7Unicode4itoaElPtti>
 801445c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8014460:	2b2d      	cmp	r3, #45	; 0x2d
 8014462:	f104 0504 	add.w	r5, r4, #4
 8014466:	d1ce      	bne.n	8014406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014468:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801446c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801446e:	3302      	adds	r3, #2
 8014470:	e7e9      	b.n	8014446 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8014472:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014474:	1d25      	adds	r5, r4, #4
 8014476:	eba8 0202 	sub.w	r2, r8, r2
 801447a:	230a      	movs	r3, #10
 801447c:	b292      	uxth	r2, r2
 801447e:	4649      	mov	r1, r9
 8014480:	6820      	ldr	r0, [r4, #0]
 8014482:	f7ff fcd5 	bl	8013e30 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8014486:	e7be      	b.n	8014406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014488:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801448a:	6820      	ldr	r0, [r4, #0]
 801448c:	eba8 0202 	sub.w	r2, r8, r2
 8014490:	b292      	uxth	r2, r2
 8014492:	2310      	movs	r3, #16
 8014494:	4649      	mov	r1, r9
 8014496:	f7ff fccb 	bl	8013e30 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801449a:	1d25      	adds	r5, r4, #4
 801449c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80144a0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80144a4:	2b00      	cmp	r3, #0
 80144a6:	d0ae      	beq.n	8014406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80144a8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80144ac:	2919      	cmp	r1, #25
 80144ae:	d8f7      	bhi.n	80144a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80144b0:	3b20      	subs	r3, #32
 80144b2:	8013      	strh	r3, [r2, #0]
 80144b4:	e7f4      	b.n	80144a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80144b6:	9a08      	ldr	r2, [sp, #32]
 80144b8:	2a00      	cmp	r2, #0
 80144ba:	d0aa      	beq.n	8014412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80144bc:	7812      	ldrb	r2, [r2, #0]
 80144be:	e7a8      	b.n	8014412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80144c0:	2d00      	cmp	r5, #0
 80144c2:	f43f af47 	beq.w	8014354 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80144c6:	782d      	ldrb	r5, [r5, #0]
 80144c8:	e744      	b.n	8014354 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080144ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80144ca:	b507      	push	{r0, r1, r2, lr}
 80144cc:	9300      	str	r3, [sp, #0]
 80144ce:	4613      	mov	r3, r2
 80144d0:	2200      	movs	r2, #0
 80144d2:	f7ff fe90 	bl	80141f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80144d6:	b003      	add	sp, #12
 80144d8:	f85d fb04 	ldr.w	pc, [sp], #4

080144dc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80144dc:	b40c      	push	{r2, r3}
 80144de:	b507      	push	{r0, r1, r2, lr}
 80144e0:	ab04      	add	r3, sp, #16
 80144e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80144e6:	9301      	str	r3, [sp, #4]
 80144e8:	f7ff ffef 	bl	80144ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80144ec:	b003      	add	sp, #12
 80144ee:	f85d eb04 	ldr.w	lr, [sp], #4
 80144f2:	b002      	add	sp, #8
 80144f4:	4770      	bx	lr
	...

080144f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 80144f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144fc:	b0c3      	sub	sp, #268	; 0x10c
 80144fe:	2600      	movs	r6, #0
 8014500:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8014504:	4607      	mov	r7, r0
 8014506:	4689      	mov	r9, r1
 8014508:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801450c:	4631      	mov	r1, r6
 801450e:	22c8      	movs	r2, #200	; 0xc8
 8014510:	4640      	mov	r0, r8
 8014512:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8014516:	960c      	str	r6, [sp, #48]	; 0x30
 8014518:	f00c fd78 	bl	802100c <memset>
 801451c:	b17f      	cbz	r7, 801453e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 801451e:	eddf 5aa4 	vldr	s11, [pc, #656]	; 80147b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8014522:	f8df b298 	ldr.w	fp, [pc, #664]	; 80147bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8014526:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014528:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801452a:	b162      	cbz	r2, 8014546 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 801452c:	8812      	ldrh	r2, [r2, #0]
 801452e:	b11a      	cbz	r2, 8014538 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014530:	f109 31ff 	add.w	r1, r9, #4294967295
 8014534:	4299      	cmp	r1, r3
 8014536:	dc26      	bgt.n	8014586 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014538:	2200      	movs	r2, #0
 801453a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801453e:	4638      	mov	r0, r7
 8014540:	b043      	add	sp, #268	; 0x10c
 8014542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014546:	9a08      	ldr	r2, [sp, #32]
 8014548:	2a00      	cmp	r2, #0
 801454a:	d0f5      	beq.n	8014538 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801454c:	7812      	ldrb	r2, [r2, #0]
 801454e:	e7ee      	b.n	801452e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8014550:	2c00      	cmp	r4, #0
 8014552:	d0e8      	beq.n	8014526 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014554:	7822      	ldrb	r2, [r4, #0]
 8014556:	b132      	cbz	r2, 8014566 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8014558:	2a25      	cmp	r2, #37	; 0x25
 801455a:	d001      	beq.n	8014560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 801455c:	4299      	cmp	r1, r3
 801455e:	dc05      	bgt.n	801456c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8014560:	b9cd      	cbnz	r5, 8014596 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8014562:	2c00      	cmp	r4, #0
 8014564:	d0df      	beq.n	8014526 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014566:	7822      	ldrb	r2, [r4, #0]
 8014568:	2500      	movs	r5, #0
 801456a:	e015      	b.n	8014598 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 801456c:	2d00      	cmp	r5, #0
 801456e:	d073      	beq.n	8014658 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8014570:	882a      	ldrh	r2, [r5, #0]
 8014572:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014576:	b10d      	cbz	r5, 801457c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8014578:	3502      	adds	r5, #2
 801457a:	9509      	str	r5, [sp, #36]	; 0x24
 801457c:	b10c      	cbz	r4, 8014582 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 801457e:	3401      	adds	r4, #1
 8014580:	9408      	str	r4, [sp, #32]
 8014582:	3301      	adds	r3, #1
 8014584:	930c      	str	r3, [sp, #48]	; 0x30
 8014586:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 801458a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801458c:	2d00      	cmp	r5, #0
 801458e:	d0df      	beq.n	8014550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8014590:	882a      	ldrh	r2, [r5, #0]
 8014592:	2a00      	cmp	r2, #0
 8014594:	d1e0      	bne.n	8014558 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8014596:	882a      	ldrh	r2, [r5, #0]
 8014598:	2a00      	cmp	r2, #0
 801459a:	d0c4      	beq.n	8014526 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801459c:	4299      	cmp	r1, r3
 801459e:	ddc2      	ble.n	8014526 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80145a0:	2300      	movs	r3, #0
 80145a2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80145a6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80145aa:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80145ae:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80145b2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80145b6:	930d      	str	r3, [sp, #52]	; 0x34
 80145b8:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80145bc:	930e      	str	r3, [sp, #56]	; 0x38
 80145be:	b10d      	cbz	r5, 80145c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 80145c0:	1cab      	adds	r3, r5, #2
 80145c2:	9309      	str	r3, [sp, #36]	; 0x24
 80145c4:	b10c      	cbz	r4, 80145ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 80145c6:	1c63      	adds	r3, r4, #1
 80145c8:	9308      	str	r3, [sp, #32]
 80145ca:	ab0e      	add	r3, sp, #56	; 0x38
 80145cc:	9305      	str	r3, [sp, #20]
 80145ce:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80145d2:	9304      	str	r3, [sp, #16]
 80145d4:	ab0d      	add	r3, sp, #52	; 0x34
 80145d6:	9303      	str	r3, [sp, #12]
 80145d8:	ab0b      	add	r3, sp, #44	; 0x2c
 80145da:	9302      	str	r3, [sp, #8]
 80145dc:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 80145e0:	9301      	str	r3, [sp, #4]
 80145e2:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 80145e6:	9300      	str	r3, [sp, #0]
 80145e8:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 80145ec:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 80145f0:	a908      	add	r1, sp, #32
 80145f2:	a809      	add	r0, sp, #36	; 0x24
 80145f4:	f7ff fd2f 	bl	8014056 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80145f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80145fa:	2b00      	cmp	r3, #0
 80145fc:	da0b      	bge.n	8014616 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 80145fe:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014602:	edd3 7a00 	vldr	s15, [r3]
 8014606:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801460a:	3601      	adds	r6, #1
 801460c:	ee17 3a90 	vmov	r3, s15
 8014610:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014614:	930d      	str	r3, [sp, #52]	; 0x34
 8014616:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014618:	2b00      	cmp	r3, #0
 801461a:	da0b      	bge.n	8014634 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 801461c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014620:	edd3 7a00 	vldr	s15, [r3]
 8014624:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014628:	3601      	adds	r6, #1
 801462a:	ee17 3a90 	vmov	r3, s15
 801462e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014632:	930e      	str	r3, [sp, #56]	; 0x38
 8014634:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014636:	b1a3      	cbz	r3, 8014662 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014638:	881a      	ldrh	r2, [r3, #0]
 801463a:	2a25      	cmp	r2, #37	; 0x25
 801463c:	d016      	beq.n	801466c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 801463e:	2a66      	cmp	r2, #102	; 0x66
 8014640:	d01a      	beq.n	8014678 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8014642:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8014646:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014648:	2d00      	cmp	r5, #0
 801464a:	f000 80fe 	beq.w	801484a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 801464e:	882c      	ldrh	r4, [r5, #0]
 8014650:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8014654:	3301      	adds	r3, #1
 8014656:	e00d      	b.n	8014674 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8014658:	b10c      	cbz	r4, 801465e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 801465a:	7822      	ldrb	r2, [r4, #0]
 801465c:	e789      	b.n	8014572 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801465e:	4622      	mov	r2, r4
 8014660:	e787      	b.n	8014572 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8014662:	9b08      	ldr	r3, [sp, #32]
 8014664:	2b00      	cmp	r3, #0
 8014666:	d0ec      	beq.n	8014642 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8014668:	781a      	ldrb	r2, [r3, #0]
 801466a:	e7e6      	b.n	801463a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 801466c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801466e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014672:	3302      	adds	r3, #2
 8014674:	930c      	str	r3, [sp, #48]	; 0x30
 8014676:	e042      	b.n	80146fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8014678:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801467c:	edd3 7a00 	vldr	s15, [r3]
 8014680:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014684:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8014688:	3601      	adds	r6, #1
 801468a:	b923      	cbnz	r3, 8014696 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 801468c:	2301      	movs	r3, #1
 801468e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8014692:	2306      	movs	r3, #6
 8014694:	930e      	str	r3, [sp, #56]	; 0x38
 8014696:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801469a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801469e:	bf48      	it	mi
 80146a0:	eef1 7a67 	vnegmi.f32	s15, s15
 80146a4:	eeb0 7ae7 	vabs.f32	s14, s15
 80146a8:	bf48      	it	mi
 80146aa:	232d      	movmi	r3, #45	; 0x2d
 80146ac:	eeb4 7a65 	vcmp.f32	s14, s11
 80146b0:	bf48      	it	mi
 80146b2:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 80146b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80146ba:	dd2b      	ble.n	8014714 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 80146bc:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80146c0:	2366      	movs	r3, #102	; 0x66
 80146c2:	9311      	str	r3, [sp, #68]	; 0x44
 80146c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146c6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80146ca:	2b00      	cmp	r3, #0
 80146cc:	f000 80b7 	beq.w	801483e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 80146d0:	881a      	ldrh	r2, [r3, #0]
 80146d2:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80146d6:	a80c      	add	r0, sp, #48	; 0x30
 80146d8:	9005      	str	r0, [sp, #20]
 80146da:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 80146de:	9004      	str	r0, [sp, #16]
 80146e0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80146e2:	9003      	str	r0, [sp, #12]
 80146e4:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 80146e8:	9002      	str	r0, [sp, #8]
 80146ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 80146ec:	9001      	str	r0, [sp, #4]
 80146ee:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 80146f2:	9000      	str	r0, [sp, #0]
 80146f4:	e9cd 9706 	strd	r9, r7, [sp, #24]
 80146f8:	a80f      	add	r0, sp, #60	; 0x3c
 80146fa:	f7ff fbe9 	bl	8013ed0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80146fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014700:	b10b      	cbz	r3, 8014706 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8014702:	3302      	adds	r3, #2
 8014704:	9309      	str	r3, [sp, #36]	; 0x24
 8014706:	9b08      	ldr	r3, [sp, #32]
 8014708:	2b00      	cmp	r3, #0
 801470a:	f43f af0c 	beq.w	8014526 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801470e:	3301      	adds	r3, #1
 8014710:	9308      	str	r3, [sp, #32]
 8014712:	e708      	b.n	8014526 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014714:	eef4 7a67 	vcmp.f32	s15, s15
 8014718:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801471c:	d60b      	bvs.n	8014736 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801471e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014720:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80147b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014724:	2300      	movs	r3, #0
 8014726:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801472a:	4283      	cmp	r3, r0
 801472c:	da07      	bge.n	801473e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801472e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014732:	3301      	adds	r3, #1
 8014734:	e7f9      	b.n	801472a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014736:	4b20      	ldr	r3, [pc, #128]	; (80147b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014738:	9310      	str	r3, [sp, #64]	; 0x40
 801473a:	236e      	movs	r3, #110	; 0x6e
 801473c:	e7c1      	b.n	80146c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801473e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014742:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014746:	eeb0 7a67 	vmov.f32	s14, s15
 801474a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801474e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014752:	da27      	bge.n	80147a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014754:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014756:	2100      	movs	r1, #0
 8014758:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801475c:	eba9 0202 	sub.w	r2, r9, r2
 8014760:	eef4 6ac5 	vcmpe.f32	s13, s10
 8014764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014768:	b28c      	uxth	r4, r1
 801476a:	db2a      	blt.n	80147c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801476c:	1a53      	subs	r3, r2, r1
 801476e:	2b00      	cmp	r3, #0
 8014770:	dd27      	ble.n	80147c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8014772:	2963      	cmp	r1, #99	; 0x63
 8014774:	d024      	beq.n	80147c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8014776:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801477a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801477e:	ee17 3a10 	vmov	r3, s14
 8014782:	2b09      	cmp	r3, #9
 8014784:	bfa8      	it	ge
 8014786:	2309      	movge	r3, #9
 8014788:	ee07 3a10 	vmov	s14, r3
 801478c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014790:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8014794:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 8014798:	eee7 7a66 	vfms.f32	s15, s14, s13
 801479c:	3101      	adds	r1, #1
 801479e:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80147a2:	e7dd      	b.n	8014760 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80147a4:	ee66 6a86 	vmul.f32	s13, s13, s12
 80147a8:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80147ac:	e7cd      	b.n	801474a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 80147ae:	bf00      	nop
 80147b0:	7f7fffff 	.word	0x7f7fffff
 80147b4:	3f000002 	.word	0x3f000002
 80147b8:	0061006e 	.word	0x0061006e
 80147bc:	006e0069 	.word	0x006e0069
 80147c0:	460c      	mov	r4, r1
 80147c2:	2a63      	cmp	r2, #99	; 0x63
 80147c4:	bfd4      	ite	le
 80147c6:	ebc4 0202 	rsble	r2, r4, r2
 80147ca:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 80147ce:	2a00      	cmp	r2, #0
 80147d0:	dd30      	ble.n	8014834 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80147d2:	4603      	mov	r3, r0
 80147d4:	2501      	movs	r5, #1
 80147d6:	210a      	movs	r1, #10
 80147d8:	2b00      	cmp	r3, #0
 80147da:	dd0d      	ble.n	80147f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 80147dc:	ee67 7a86 	vmul.f32	s15, s15, s12
 80147e0:	3b01      	subs	r3, #1
 80147e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80147e6:	ee17 ca10 	vmov	ip, s14
 80147ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80147ee:	fb01 c505 	mla	r5, r1, r5, ip
 80147f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80147f6:	e7ef      	b.n	80147d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 80147f8:	2800      	cmp	r0, #0
 80147fa:	f100 33ff 	add.w	r3, r0, #4294967295
 80147fe:	bfac      	ite	ge
 8014800:	1a18      	subge	r0, r3, r0
 8014802:	4618      	movlt	r0, r3
 8014804:	0064      	lsls	r4, r4, #1
 8014806:	900e      	str	r0, [sp, #56]	; 0x38
 8014808:	230a      	movs	r3, #10
 801480a:	b292      	uxth	r2, r2
 801480c:	eb08 0104 	add.w	r1, r8, r4
 8014810:	4628      	mov	r0, r5
 8014812:	f7ff fb2b 	bl	8013e6c <_ZN8touchgfx7Unicode4itoaElPtti>
 8014816:	2d01      	cmp	r5, #1
 8014818:	dc0a      	bgt.n	8014830 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801481a:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801481e:	2b00      	cmp	r3, #0
 8014820:	bf0c      	ite	eq
 8014822:	2300      	moveq	r3, #0
 8014824:	232e      	movne	r3, #46	; 0x2e
 8014826:	aa42      	add	r2, sp, #264	; 0x108
 8014828:	4414      	add	r4, r2
 801482a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801482e:	e749      	b.n	80146c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014830:	232e      	movs	r3, #46	; 0x2e
 8014832:	e7f8      	b.n	8014826 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014834:	ab42      	add	r3, sp, #264	; 0x108
 8014836:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801483a:	2300      	movs	r3, #0
 801483c:	e7f5      	b.n	801482a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801483e:	9a08      	ldr	r2, [sp, #32]
 8014840:	2a00      	cmp	r2, #0
 8014842:	f43f af46 	beq.w	80146d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014846:	7812      	ldrb	r2, [r2, #0]
 8014848:	e743      	b.n	80146d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801484a:	2c00      	cmp	r4, #0
 801484c:	f43f af00 	beq.w	8014650 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8014850:	7824      	ldrb	r4, [r4, #0]
 8014852:	e6fd      	b.n	8014650 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014854 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014854:	b507      	push	{r0, r1, r2, lr}
 8014856:	9300      	str	r3, [sp, #0]
 8014858:	4613      	mov	r3, r2
 801485a:	2200      	movs	r2, #0
 801485c:	f7ff fe4c 	bl	80144f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8014860:	b003      	add	sp, #12
 8014862:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014868 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014868:	4b01      	ldr	r3, [pc, #4]	; (8014870 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801486a:	6018      	str	r0, [r3, #0]
 801486c:	4770      	bx	lr
 801486e:	bf00      	nop
 8014870:	20015868 	.word	0x20015868

08014874 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014874:	4b06      	ldr	r3, [pc, #24]	; (8014890 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014876:	881a      	ldrh	r2, [r3, #0]
 8014878:	4282      	cmp	r2, r0
 801487a:	d807      	bhi.n	801488c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801487c:	4b05      	ldr	r3, [pc, #20]	; (8014894 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801487e:	881b      	ldrh	r3, [r3, #0]
 8014880:	4413      	add	r3, r2
 8014882:	4298      	cmp	r0, r3
 8014884:	bfac      	ite	ge
 8014886:	2000      	movge	r0, #0
 8014888:	2001      	movlt	r0, #1
 801488a:	4770      	bx	lr
 801488c:	2000      	movs	r0, #0
 801488e:	4770      	bx	lr
 8014890:	20015888 	.word	0x20015888
 8014894:	2001588c 	.word	0x2001588c

08014898 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014898:	b508      	push	{r3, lr}
 801489a:	4601      	mov	r1, r0
 801489c:	f7ff ffea 	bl	8014874 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80148a0:	b118      	cbz	r0, 80148aa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80148a2:	4b02      	ldr	r3, [pc, #8]	; (80148ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80148a4:	681b      	ldr	r3, [r3, #0]
 80148a6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80148aa:	bd08      	pop	{r3, pc}
 80148ac:	2001586c 	.word	0x2001586c

080148b0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80148b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80148b2:	4c24      	ldr	r4, [pc, #144]	; (8014944 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80148b4:	6823      	ldr	r3, [r4, #0]
 80148b6:	2b00      	cmp	r3, #0
 80148b8:	d042      	beq.n	8014940 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80148ba:	4a23      	ldr	r2, [pc, #140]	; (8014948 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80148bc:	4d23      	ldr	r5, [pc, #140]	; (801494c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80148be:	8811      	ldrh	r1, [r2, #0]
 80148c0:	f8b5 c000 	ldrh.w	ip, [r5]
 80148c4:	4822      	ldr	r0, [pc, #136]	; (8014950 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80148c6:	4461      	add	r1, ip
 80148c8:	1c4a      	adds	r2, r1, #1
 80148ca:	f022 0201 	bic.w	r2, r2, #1
 80148ce:	008f      	lsls	r7, r1, #2
 80148d0:	0412      	lsls	r2, r2, #16
 80148d2:	19de      	adds	r6, r3, r7
 80148d4:	0c12      	lsrs	r2, r2, #16
 80148d6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80148da:	6006      	str	r6, [r0, #0]
 80148dc:	4e1d      	ldr	r6, [pc, #116]	; (8014954 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80148de:	19da      	adds	r2, r3, r7
 80148e0:	6032      	str	r2, [r6, #0]
 80148e2:	220e      	movs	r2, #14
 80148e4:	fb02 f20c 	mul.w	r2, r2, ip
 80148e8:	3203      	adds	r2, #3
 80148ea:	f022 0203 	bic.w	r2, r2, #3
 80148ee:	443a      	add	r2, r7
 80148f0:	4f19      	ldr	r7, [pc, #100]	; (8014958 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80148f2:	4413      	add	r3, r2
 80148f4:	603b      	str	r3, [r7, #0]
 80148f6:	4f19      	ldr	r7, [pc, #100]	; (801495c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80148f8:	2300      	movs	r3, #0
 80148fa:	803b      	strh	r3, [r7, #0]
 80148fc:	4f18      	ldr	r7, [pc, #96]	; (8014960 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80148fe:	683f      	ldr	r7, [r7, #0]
 8014900:	1aba      	subs	r2, r7, r2
 8014902:	4f18      	ldr	r7, [pc, #96]	; (8014964 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014904:	603a      	str	r2, [r7, #0]
 8014906:	4a18      	ldr	r2, [pc, #96]	; (8014968 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014908:	469c      	mov	ip, r3
 801490a:	8013      	strh	r3, [r2, #0]
 801490c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014910:	428b      	cmp	r3, r1
 8014912:	d10d      	bne.n	8014930 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014914:	882d      	ldrh	r5, [r5, #0]
 8014916:	6830      	ldr	r0, [r6, #0]
 8014918:	2300      	movs	r3, #0
 801491a:	240e      	movs	r4, #14
 801491c:	429d      	cmp	r5, r3
 801491e:	d90f      	bls.n	8014940 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014920:	fb04 0203 	mla	r2, r4, r3, r0
 8014924:	3301      	adds	r3, #1
 8014926:	7b11      	ldrb	r1, [r2, #12]
 8014928:	f36f 1145 	bfc	r1, #5, #1
 801492c:	7311      	strb	r1, [r2, #12]
 801492e:	e7f5      	b.n	801491c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014930:	6822      	ldr	r2, [r4, #0]
 8014932:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014936:	6802      	ldr	r2, [r0, #0]
 8014938:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801493c:	3301      	adds	r3, #1
 801493e:	e7e7      	b.n	8014910 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014940:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014942:	bf00      	nop
 8014944:	2001586c 	.word	0x2001586c
 8014948:	20015888 	.word	0x20015888
 801494c:	2001588c 	.word	0x2001588c
 8014950:	20015880 	.word	0x20015880
 8014954:	20015870 	.word	0x20015870
 8014958:	20015878 	.word	0x20015878
 801495c:	2001588a 	.word	0x2001588a
 8014960:	20015874 	.word	0x20015874
 8014964:	20015884 	.word	0x20015884
 8014968:	2001587c 	.word	0x2001587c

0801496c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801496c:	4b06      	ldr	r3, [pc, #24]	; (8014988 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801496e:	681b      	ldr	r3, [r3, #0]
 8014970:	b943      	cbnz	r3, 8014984 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014972:	b139      	cbz	r1, 8014984 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014974:	4b05      	ldr	r3, [pc, #20]	; (801498c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014976:	801a      	strh	r2, [r3, #0]
 8014978:	4b05      	ldr	r3, [pc, #20]	; (8014990 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801497a:	6019      	str	r1, [r3, #0]
 801497c:	4b05      	ldr	r3, [pc, #20]	; (8014994 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801497e:	6018      	str	r0, [r3, #0]
 8014980:	f7ff bf96 	b.w	80148b0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014984:	4770      	bx	lr
 8014986:	bf00      	nop
 8014988:	20015878 	.word	0x20015878
 801498c:	2001588c 	.word	0x2001588c
 8014990:	20015874 	.word	0x20015874
 8014994:	2001586c 	.word	0x2001586c

08014998 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014998:	b470      	push	{r4, r5, r6}
 801499a:	4c07      	ldr	r4, [pc, #28]	; (80149b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801499c:	6826      	ldr	r6, [r4, #0]
 801499e:	4605      	mov	r5, r0
 80149a0:	4610      	mov	r0, r2
 80149a2:	9a03      	ldr	r2, [sp, #12]
 80149a4:	b936      	cbnz	r6, 80149b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80149a6:	6025      	str	r5, [r4, #0]
 80149a8:	4c04      	ldr	r4, [pc, #16]	; (80149bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80149aa:	8021      	strh	r1, [r4, #0]
 80149ac:	bc70      	pop	{r4, r5, r6}
 80149ae:	4619      	mov	r1, r3
 80149b0:	f7ff bfdc 	b.w	801496c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80149b4:	bc70      	pop	{r4, r5, r6}
 80149b6:	4770      	bx	lr
 80149b8:	20015890 	.word	0x20015890
 80149bc:	20015888 	.word	0x20015888

080149c0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80149c0:	4a12      	ldr	r2, [pc, #72]	; (8014a0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80149c2:	8803      	ldrh	r3, [r0, #0]
 80149c4:	8812      	ldrh	r2, [r2, #0]
 80149c6:	4293      	cmp	r3, r2
 80149c8:	d207      	bcs.n	80149da <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80149ca:	4a11      	ldr	r2, [pc, #68]	; (8014a10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80149cc:	6812      	ldr	r2, [r2, #0]
 80149ce:	2114      	movs	r1, #20
 80149d0:	fb01 2303 	mla	r3, r1, r3, r2
 80149d4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80149d8:	4770      	bx	lr
 80149da:	490e      	ldr	r1, [pc, #56]	; (8014a14 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80149dc:	8809      	ldrh	r1, [r1, #0]
 80149de:	4411      	add	r1, r2
 80149e0:	428b      	cmp	r3, r1
 80149e2:	da04      	bge.n	80149ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80149e4:	1a9b      	subs	r3, r3, r2
 80149e6:	4a0c      	ldr	r2, [pc, #48]	; (8014a18 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80149e8:	210e      	movs	r1, #14
 80149ea:	6812      	ldr	r2, [r2, #0]
 80149ec:	e7f0      	b.n	80149d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80149ee:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80149f2:	4293      	cmp	r3, r2
 80149f4:	d108      	bne.n	8014a08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80149f6:	4b09      	ldr	r3, [pc, #36]	; (8014a1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80149f8:	781b      	ldrb	r3, [r3, #0]
 80149fa:	b91b      	cbnz	r3, 8014a04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80149fc:	4b08      	ldr	r3, [pc, #32]	; (8014a20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80149fe:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014a02:	4770      	bx	lr
 8014a04:	4b07      	ldr	r3, [pc, #28]	; (8014a24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014a06:	e7fa      	b.n	80149fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014a08:	2000      	movs	r0, #0
 8014a0a:	4770      	bx	lr
 8014a0c:	20015888 	.word	0x20015888
 8014a10:	20015890 	.word	0x20015890
 8014a14:	2001588c 	.word	0x2001588c
 8014a18:	20015870 	.word	0x20015870
 8014a1c:	200157f8 	.word	0x200157f8
 8014a20:	200157fa 	.word	0x200157fa
 8014a24:	200157fc 	.word	0x200157fc

08014a28 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014a28:	4a12      	ldr	r2, [pc, #72]	; (8014a74 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8014a2a:	8803      	ldrh	r3, [r0, #0]
 8014a2c:	8812      	ldrh	r2, [r2, #0]
 8014a2e:	4293      	cmp	r3, r2
 8014a30:	d207      	bcs.n	8014a42 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014a32:	4a11      	ldr	r2, [pc, #68]	; (8014a78 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014a34:	6812      	ldr	r2, [r2, #0]
 8014a36:	2114      	movs	r1, #20
 8014a38:	fb01 2303 	mla	r3, r1, r3, r2
 8014a3c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014a40:	4770      	bx	lr
 8014a42:	490e      	ldr	r1, [pc, #56]	; (8014a7c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014a44:	8809      	ldrh	r1, [r1, #0]
 8014a46:	4411      	add	r1, r2
 8014a48:	428b      	cmp	r3, r1
 8014a4a:	da04      	bge.n	8014a56 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8014a4c:	1a9b      	subs	r3, r3, r2
 8014a4e:	4a0c      	ldr	r2, [pc, #48]	; (8014a80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8014a50:	210e      	movs	r1, #14
 8014a52:	6812      	ldr	r2, [r2, #0]
 8014a54:	e7f0      	b.n	8014a38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014a56:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014a5a:	4293      	cmp	r3, r2
 8014a5c:	d108      	bne.n	8014a70 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8014a5e:	4b09      	ldr	r3, [pc, #36]	; (8014a84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8014a60:	781b      	ldrb	r3, [r3, #0]
 8014a62:	b91b      	cbnz	r3, 8014a6c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014a64:	4b08      	ldr	r3, [pc, #32]	; (8014a88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014a66:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014a6a:	4770      	bx	lr
 8014a6c:	4b07      	ldr	r3, [pc, #28]	; (8014a8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8014a6e:	e7fa      	b.n	8014a66 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8014a70:	2000      	movs	r0, #0
 8014a72:	4770      	bx	lr
 8014a74:	20015888 	.word	0x20015888
 8014a78:	20015890 	.word	0x20015890
 8014a7c:	2001588c 	.word	0x2001588c
 8014a80:	20015870 	.word	0x20015870
 8014a84:	200157f8 	.word	0x200157f8
 8014a88:	200157fc 	.word	0x200157fc
 8014a8c:	200157fa 	.word	0x200157fa

08014a90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8014a90:	b510      	push	{r4, lr}
 8014a92:	4a1f      	ldr	r2, [pc, #124]	; (8014b10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8014a94:	880b      	ldrh	r3, [r1, #0]
 8014a96:	8812      	ldrh	r2, [r2, #0]
 8014a98:	4293      	cmp	r3, r2
 8014a9a:	d213      	bcs.n	8014ac4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8014a9c:	4a1d      	ldr	r2, [pc, #116]	; (8014b14 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8014a9e:	6812      	ldr	r2, [r2, #0]
 8014aa0:	2114      	movs	r1, #20
 8014aa2:	fb01 2303 	mla	r3, r1, r3, r2
 8014aa6:	8a1a      	ldrh	r2, [r3, #16]
 8014aa8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8014aac:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8014ab0:	8a5b      	ldrh	r3, [r3, #18]
 8014ab2:	8004      	strh	r4, [r0, #0]
 8014ab4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014ab8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8014abc:	8041      	strh	r1, [r0, #2]
 8014abe:	8082      	strh	r2, [r0, #4]
 8014ac0:	80c3      	strh	r3, [r0, #6]
 8014ac2:	e00e      	b.n	8014ae2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014ac4:	4914      	ldr	r1, [pc, #80]	; (8014b18 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8014ac6:	8809      	ldrh	r1, [r1, #0]
 8014ac8:	4411      	add	r1, r2
 8014aca:	428b      	cmp	r3, r1
 8014acc:	da0a      	bge.n	8014ae4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8014ace:	1a9b      	subs	r3, r3, r2
 8014ad0:	4a12      	ldr	r2, [pc, #72]	; (8014b1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8014ad2:	6812      	ldr	r2, [r2, #0]
 8014ad4:	210e      	movs	r1, #14
 8014ad6:	fb01 2303 	mla	r3, r1, r3, r2
 8014ada:	681a      	ldr	r2, [r3, #0]
 8014adc:	6002      	str	r2, [r0, #0]
 8014ade:	685a      	ldr	r2, [r3, #4]
 8014ae0:	6042      	str	r2, [r0, #4]
 8014ae2:	bd10      	pop	{r4, pc}
 8014ae4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014ae8:	4293      	cmp	r3, r2
 8014aea:	d10b      	bne.n	8014b04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8014aec:	4b0c      	ldr	r3, [pc, #48]	; (8014b20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8014aee:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014af2:	4b0c      	ldr	r3, [pc, #48]	; (8014b24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014af4:	8081      	strh	r1, [r0, #4]
 8014af6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014afa:	80c2      	strh	r2, [r0, #6]
 8014afc:	2300      	movs	r3, #0
 8014afe:	8003      	strh	r3, [r0, #0]
 8014b00:	8043      	strh	r3, [r0, #2]
 8014b02:	e7ee      	b.n	8014ae2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014b04:	2300      	movs	r3, #0
 8014b06:	8003      	strh	r3, [r0, #0]
 8014b08:	8043      	strh	r3, [r0, #2]
 8014b0a:	8083      	strh	r3, [r0, #4]
 8014b0c:	e7d8      	b.n	8014ac0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8014b0e:	bf00      	nop
 8014b10:	20015888 	.word	0x20015888
 8014b14:	20015890 	.word	0x20015890
 8014b18:	2001588c 	.word	0x2001588c
 8014b1c:	20015870 	.word	0x20015870
 8014b20:	200157f4 	.word	0x200157f4
 8014b24:	200157f6 	.word	0x200157f6

08014b28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014b28:	4a17      	ldr	r2, [pc, #92]	; (8014b88 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8014b2a:	8803      	ldrh	r3, [r0, #0]
 8014b2c:	8812      	ldrh	r2, [r2, #0]
 8014b2e:	4293      	cmp	r3, r2
 8014b30:	d213      	bcs.n	8014b5a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014b32:	4a16      	ldr	r2, [pc, #88]	; (8014b8c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014b34:	6812      	ldr	r2, [r2, #0]
 8014b36:	2114      	movs	r1, #20
 8014b38:	fb01 2303 	mla	r3, r1, r3, r2
 8014b3c:	8a1a      	ldrh	r2, [r3, #16]
 8014b3e:	8919      	ldrh	r1, [r3, #8]
 8014b40:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014b44:	428a      	cmp	r2, r1
 8014b46:	db1d      	blt.n	8014b84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014b48:	8a58      	ldrh	r0, [r3, #18]
 8014b4a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8014b4e:	895b      	ldrh	r3, [r3, #10]
 8014b50:	4298      	cmp	r0, r3
 8014b52:	bfac      	ite	ge
 8014b54:	2000      	movge	r0, #0
 8014b56:	2001      	movlt	r0, #1
 8014b58:	4770      	bx	lr
 8014b5a:	490d      	ldr	r1, [pc, #52]	; (8014b90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8014b5c:	8809      	ldrh	r1, [r1, #0]
 8014b5e:	4411      	add	r1, r2
 8014b60:	428b      	cmp	r3, r1
 8014b62:	da0d      	bge.n	8014b80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014b64:	1a9b      	subs	r3, r3, r2
 8014b66:	4a0b      	ldr	r2, [pc, #44]	; (8014b94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014b68:	6812      	ldr	r2, [r2, #0]
 8014b6a:	210e      	movs	r1, #14
 8014b6c:	fb01 2303 	mla	r3, r1, r3, r2
 8014b70:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014b74:	891a      	ldrh	r2, [r3, #8]
 8014b76:	4291      	cmp	r1, r2
 8014b78:	db04      	blt.n	8014b84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014b7a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8014b7e:	e7e6      	b.n	8014b4e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8014b80:	2000      	movs	r0, #0
 8014b82:	4770      	bx	lr
 8014b84:	2001      	movs	r0, #1
 8014b86:	4770      	bx	lr
 8014b88:	20015888 	.word	0x20015888
 8014b8c:	20015890 	.word	0x20015890
 8014b90:	2001588c 	.word	0x2001588c
 8014b94:	20015870 	.word	0x20015870

08014b98 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014b98:	4a12      	ldr	r2, [pc, #72]	; (8014be4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8014b9a:	8803      	ldrh	r3, [r0, #0]
 8014b9c:	8811      	ldrh	r1, [r2, #0]
 8014b9e:	428b      	cmp	r3, r1
 8014ba0:	d20b      	bcs.n	8014bba <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8014ba2:	4a11      	ldr	r2, [pc, #68]	; (8014be8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014ba4:	6812      	ldr	r2, [r2, #0]
 8014ba6:	b112      	cbz	r2, 8014bae <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8014ba8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014bac:	b9c0      	cbnz	r0, 8014be0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8014bae:	4a0f      	ldr	r2, [pc, #60]	; (8014bec <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8014bb0:	6811      	ldr	r1, [r2, #0]
 8014bb2:	2214      	movs	r2, #20
 8014bb4:	4353      	muls	r3, r2
 8014bb6:	58c8      	ldr	r0, [r1, r3]
 8014bb8:	4770      	bx	lr
 8014bba:	4a0d      	ldr	r2, [pc, #52]	; (8014bf0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8014bbc:	8812      	ldrh	r2, [r2, #0]
 8014bbe:	440a      	add	r2, r1
 8014bc0:	4293      	cmp	r3, r2
 8014bc2:	da04      	bge.n	8014bce <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014bc4:	4a08      	ldr	r2, [pc, #32]	; (8014be8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014bc6:	6812      	ldr	r2, [r2, #0]
 8014bc8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014bcc:	4770      	bx	lr
 8014bce:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014bd2:	4293      	cmp	r3, r2
 8014bd4:	d103      	bne.n	8014bde <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014bd6:	4b07      	ldr	r3, [pc, #28]	; (8014bf4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014bd8:	681b      	ldr	r3, [r3, #0]
 8014bda:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8014bdc:	4770      	bx	lr
 8014bde:	2000      	movs	r0, #0
 8014be0:	4770      	bx	lr
 8014be2:	bf00      	nop
 8014be4:	20015888 	.word	0x20015888
 8014be8:	2001586c 	.word	0x2001586c
 8014bec:	20015890 	.word	0x20015890
 8014bf0:	2001588c 	.word	0x2001588c
 8014bf4:	20015800 	.word	0x20015800

08014bf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014bf8:	4b24      	ldr	r3, [pc, #144]	; (8014c8c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8014bfa:	8802      	ldrh	r2, [r0, #0]
 8014bfc:	8818      	ldrh	r0, [r3, #0]
 8014bfe:	4282      	cmp	r2, r0
 8014c00:	d221      	bcs.n	8014c46 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8014c02:	4b23      	ldr	r3, [pc, #140]	; (8014c90 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014c04:	6819      	ldr	r1, [r3, #0]
 8014c06:	2314      	movs	r3, #20
 8014c08:	fb03 1302 	mla	r3, r3, r2, r1
 8014c0c:	6858      	ldr	r0, [r3, #4]
 8014c0e:	2800      	cmp	r0, #0
 8014c10:	d03a      	beq.n	8014c88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014c12:	4920      	ldr	r1, [pc, #128]	; (8014c94 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014c14:	6809      	ldr	r1, [r1, #0]
 8014c16:	2900      	cmp	r1, #0
 8014c18:	d036      	beq.n	8014c88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014c1a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8014c1e:	2900      	cmp	r1, #0
 8014c20:	d032      	beq.n	8014c88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014c22:	891a      	ldrh	r2, [r3, #8]
 8014c24:	8958      	ldrh	r0, [r3, #10]
 8014c26:	4350      	muls	r0, r2
 8014c28:	7c5a      	ldrb	r2, [r3, #17]
 8014c2a:	7cdb      	ldrb	r3, [r3, #19]
 8014c2c:	0952      	lsrs	r2, r2, #5
 8014c2e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014c32:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014c36:	2b0b      	cmp	r3, #11
 8014c38:	bf18      	it	ne
 8014c3a:	0040      	lslne	r0, r0, #1
 8014c3c:	3003      	adds	r0, #3
 8014c3e:	f020 0003 	bic.w	r0, r0, #3
 8014c42:	4408      	add	r0, r1
 8014c44:	4770      	bx	lr
 8014c46:	4b14      	ldr	r3, [pc, #80]	; (8014c98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014c48:	881b      	ldrh	r3, [r3, #0]
 8014c4a:	4403      	add	r3, r0
 8014c4c:	429a      	cmp	r2, r3
 8014c4e:	da1a      	bge.n	8014c86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014c50:	4b12      	ldr	r3, [pc, #72]	; (8014c9c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014c52:	681b      	ldr	r3, [r3, #0]
 8014c54:	1a10      	subs	r0, r2, r0
 8014c56:	210e      	movs	r1, #14
 8014c58:	fb01 3000 	mla	r0, r1, r0, r3
 8014c5c:	7b03      	ldrb	r3, [r0, #12]
 8014c5e:	f003 031f 	and.w	r3, r3, #31
 8014c62:	2b0b      	cmp	r3, #11
 8014c64:	d10b      	bne.n	8014c7e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014c66:	8903      	ldrh	r3, [r0, #8]
 8014c68:	8940      	ldrh	r0, [r0, #10]
 8014c6a:	4358      	muls	r0, r3
 8014c6c:	4b09      	ldr	r3, [pc, #36]	; (8014c94 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014c6e:	6819      	ldr	r1, [r3, #0]
 8014c70:	3003      	adds	r0, #3
 8014c72:	f020 0303 	bic.w	r3, r0, #3
 8014c76:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8014c7a:	4418      	add	r0, r3
 8014c7c:	4770      	bx	lr
 8014c7e:	2b0d      	cmp	r3, #13
 8014c80:	d101      	bne.n	8014c86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014c82:	300d      	adds	r0, #13
 8014c84:	4770      	bx	lr
 8014c86:	2000      	movs	r0, #0
 8014c88:	4770      	bx	lr
 8014c8a:	bf00      	nop
 8014c8c:	20015888 	.word	0x20015888
 8014c90:	20015890 	.word	0x20015890
 8014c94:	2001586c 	.word	0x2001586c
 8014c98:	2001588c 	.word	0x2001588c
 8014c9c:	20015870 	.word	0x20015870

08014ca0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8014ca0:	b510      	push	{r4, lr}
 8014ca2:	4a17      	ldr	r2, [pc, #92]	; (8014d00 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8014ca4:	8803      	ldrh	r3, [r0, #0]
 8014ca6:	8812      	ldrh	r2, [r2, #0]
 8014ca8:	4293      	cmp	r3, r2
 8014caa:	d20c      	bcs.n	8014cc6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8014cac:	4a15      	ldr	r2, [pc, #84]	; (8014d04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8014cae:	6812      	ldr	r2, [r2, #0]
 8014cb0:	2114      	movs	r1, #20
 8014cb2:	fb01 2303 	mla	r3, r1, r3, r2
 8014cb6:	7c58      	ldrb	r0, [r3, #17]
 8014cb8:	0942      	lsrs	r2, r0, #5
 8014cba:	7cd8      	ldrb	r0, [r3, #19]
 8014cbc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8014cc0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8014cc4:	bd10      	pop	{r4, pc}
 8014cc6:	4910      	ldr	r1, [pc, #64]	; (8014d08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8014cc8:	8809      	ldrh	r1, [r1, #0]
 8014cca:	4411      	add	r1, r2
 8014ccc:	428b      	cmp	r3, r1
 8014cce:	da09      	bge.n	8014ce4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8014cd0:	1a9b      	subs	r3, r3, r2
 8014cd2:	4a0e      	ldr	r2, [pc, #56]	; (8014d0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8014cd4:	6812      	ldr	r2, [r2, #0]
 8014cd6:	210e      	movs	r1, #14
 8014cd8:	fb01 2303 	mla	r3, r1, r3, r2
 8014cdc:	7b18      	ldrb	r0, [r3, #12]
 8014cde:	f000 001f 	and.w	r0, r0, #31
 8014ce2:	e7ef      	b.n	8014cc4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014ce4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014ce8:	4293      	cmp	r3, r2
 8014cea:	d106      	bne.n	8014cfa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8014cec:	f7ed ff2a 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 8014cf0:	6803      	ldr	r3, [r0, #0]
 8014cf2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014cf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014cf8:	4718      	bx	r3
 8014cfa:	2000      	movs	r0, #0
 8014cfc:	e7e2      	b.n	8014cc4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014cfe:	bf00      	nop
 8014d00:	20015888 	.word	0x20015888
 8014d04:	20015890 	.word	0x20015890
 8014d08:	2001588c 	.word	0x2001588c
 8014d0c:	20015870 	.word	0x20015870

08014d10 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014d10:	2010      	movs	r0, #16
 8014d12:	4770      	bx	lr

08014d14 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014d14:	2000      	movs	r0, #0
 8014d16:	4770      	bx	lr

08014d18 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014d18:	4b02      	ldr	r3, [pc, #8]	; (8014d24 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8014d1a:	8818      	ldrh	r0, [r3, #0]
 8014d1c:	0040      	lsls	r0, r0, #1
 8014d1e:	b280      	uxth	r0, r0
 8014d20:	4770      	bx	lr
 8014d22:	bf00      	nop
 8014d24:	200157fa 	.word	0x200157fa

08014d28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014d28:	2bff      	cmp	r3, #255	; 0xff
 8014d2a:	d050      	beq.n	8014dce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8014d2c:	2a0b      	cmp	r2, #11
 8014d2e:	d04a      	beq.n	8014dc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014d30:	d80e      	bhi.n	8014d50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014d32:	2a03      	cmp	r2, #3
 8014d34:	d03f      	beq.n	8014db6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014d36:	d804      	bhi.n	8014d42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014d38:	2a01      	cmp	r2, #1
 8014d3a:	d03e      	beq.n	8014dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8014d3c:	d93f      	bls.n	8014dbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8014d3e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014d40:	4770      	bx	lr
 8014d42:	2a09      	cmp	r2, #9
 8014d44:	d03f      	beq.n	8014dc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014d46:	d83c      	bhi.n	8014dc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014d48:	2a08      	cmp	r2, #8
 8014d4a:	d03a      	beq.n	8014dc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014d4c:	2000      	movs	r0, #0
 8014d4e:	4770      	bx	lr
 8014d50:	2a2f      	cmp	r2, #47	; 0x2f
 8014d52:	d024      	beq.n	8014d9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014d54:	d80d      	bhi.n	8014d72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014d56:	2a2d      	cmp	r2, #45	; 0x2d
 8014d58:	d014      	beq.n	8014d84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8014d5a:	d826      	bhi.n	8014daa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014d5c:	2a2c      	cmp	r2, #44	; 0x2c
 8014d5e:	d1f5      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d60:	684b      	ldr	r3, [r1, #4]
 8014d62:	781b      	ldrb	r3, [r3, #0]
 8014d64:	2b01      	cmp	r3, #1
 8014d66:	d018      	beq.n	8014d9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014d68:	d323      	bcc.n	8014db2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8014d6a:	2b02      	cmp	r3, #2
 8014d6c:	d1ee      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d6e:	6880      	ldr	r0, [r0, #8]
 8014d70:	4770      	bx	lr
 8014d72:	2a31      	cmp	r2, #49	; 0x31
 8014d74:	d004      	beq.n	8014d80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014d76:	d328      	bcc.n	8014dca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014d78:	2a32      	cmp	r2, #50	; 0x32
 8014d7a:	d026      	beq.n	8014dca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014d7c:	2a33      	cmp	r2, #51	; 0x33
 8014d7e:	d1e5      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d80:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8014d82:	4770      	bx	lr
 8014d84:	684b      	ldr	r3, [r1, #4]
 8014d86:	781b      	ldrb	r3, [r3, #0]
 8014d88:	2b01      	cmp	r3, #1
 8014d8a:	d004      	beq.n	8014d96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8014d8c:	d30b      	bcc.n	8014da6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014d8e:	2b02      	cmp	r3, #2
 8014d90:	d1dc      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d92:	6900      	ldr	r0, [r0, #16]
 8014d94:	4770      	bx	lr
 8014d96:	6a00      	ldr	r0, [r0, #32]
 8014d98:	4770      	bx	lr
 8014d9a:	6980      	ldr	r0, [r0, #24]
 8014d9c:	4770      	bx	lr
 8014d9e:	684b      	ldr	r3, [r1, #4]
 8014da0:	781b      	ldrb	r3, [r3, #0]
 8014da2:	2b00      	cmp	r3, #0
 8014da4:	d1d2      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014da6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014da8:	4770      	bx	lr
 8014daa:	684b      	ldr	r3, [r1, #4]
 8014dac:	781b      	ldrb	r3, [r3, #0]
 8014dae:	2b00      	cmp	r3, #0
 8014db0:	d1cc      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014db2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014db4:	4770      	bx	lr
 8014db6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8014db8:	4770      	bx	lr
 8014dba:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8014dbc:	4770      	bx	lr
 8014dbe:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8014dc0:	4770      	bx	lr
 8014dc2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8014dc4:	4770      	bx	lr
 8014dc6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8014dc8:	4770      	bx	lr
 8014dca:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8014dcc:	4770      	bx	lr
 8014dce:	2a0b      	cmp	r2, #11
 8014dd0:	d049      	beq.n	8014e66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014dd2:	d80e      	bhi.n	8014df2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8014dd4:	2a03      	cmp	r2, #3
 8014dd6:	d040      	beq.n	8014e5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8014dd8:	d804      	bhi.n	8014de4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8014dda:	2a01      	cmp	r2, #1
 8014ddc:	d03f      	beq.n	8014e5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8014dde:	d940      	bls.n	8014e62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8014de0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8014de2:	4770      	bx	lr
 8014de4:	2a09      	cmp	r2, #9
 8014de6:	d03e      	beq.n	8014e66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014de8:	d801      	bhi.n	8014dee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8014dea:	2a08      	cmp	r2, #8
 8014dec:	d1ae      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014dee:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8014df0:	4770      	bx	lr
 8014df2:	2a2f      	cmp	r2, #47	; 0x2f
 8014df4:	d024      	beq.n	8014e40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014df6:	d80d      	bhi.n	8014e14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014df8:	2a2d      	cmp	r2, #45	; 0x2d
 8014dfa:	d014      	beq.n	8014e26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8014dfc:	d826      	bhi.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8014dfe:	2a2c      	cmp	r2, #44	; 0x2c
 8014e00:	d1a4      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e02:	684b      	ldr	r3, [r1, #4]
 8014e04:	781b      	ldrb	r3, [r3, #0]
 8014e06:	2b01      	cmp	r3, #1
 8014e08:	d018      	beq.n	8014e3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8014e0a:	d324      	bcc.n	8014e56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8014e0c:	2b02      	cmp	r3, #2
 8014e0e:	d19d      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e10:	68c0      	ldr	r0, [r0, #12]
 8014e12:	4770      	bx	lr
 8014e14:	2a31      	cmp	r2, #49	; 0x31
 8014e16:	d004      	beq.n	8014e22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014e18:	d327      	bcc.n	8014e6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014e1a:	2a32      	cmp	r2, #50	; 0x32
 8014e1c:	d025      	beq.n	8014e6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014e1e:	2a33      	cmp	r2, #51	; 0x33
 8014e20:	d194      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e22:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014e24:	4770      	bx	lr
 8014e26:	684b      	ldr	r3, [r1, #4]
 8014e28:	781b      	ldrb	r3, [r3, #0]
 8014e2a:	2b01      	cmp	r3, #1
 8014e2c:	d004      	beq.n	8014e38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8014e2e:	d30b      	bcc.n	8014e48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014e30:	2b02      	cmp	r3, #2
 8014e32:	d18b      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e34:	6940      	ldr	r0, [r0, #20]
 8014e36:	4770      	bx	lr
 8014e38:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014e3a:	4770      	bx	lr
 8014e3c:	69c0      	ldr	r0, [r0, #28]
 8014e3e:	4770      	bx	lr
 8014e40:	684b      	ldr	r3, [r1, #4]
 8014e42:	781b      	ldrb	r3, [r3, #0]
 8014e44:	2b00      	cmp	r3, #0
 8014e46:	d181      	bne.n	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e48:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014e4a:	4770      	bx	lr
 8014e4c:	684b      	ldr	r3, [r1, #4]
 8014e4e:	781b      	ldrb	r3, [r3, #0]
 8014e50:	2b00      	cmp	r3, #0
 8014e52:	f47f af7b 	bne.w	8014d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e56:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014e58:	4770      	bx	lr
 8014e5a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014e5c:	4770      	bx	lr
 8014e5e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014e60:	4770      	bx	lr
 8014e62:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014e64:	4770      	bx	lr
 8014e66:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014e68:	4770      	bx	lr
 8014e6a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8014e6c:	4770      	bx	lr

08014e6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e72:	b087      	sub	sp, #28
 8014e74:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014e76:	9205      	str	r2, [sp, #20]
 8014e78:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014e7c:	9202      	str	r2, [sp, #8]
 8014e7e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014e82:	9101      	str	r1, [sp, #4]
 8014e84:	6841      	ldr	r1, [r0, #4]
 8014e86:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014e8a:	fb01 2404 	mla	r4, r1, r4, r2
 8014e8e:	6802      	ldr	r2, [r0, #0]
 8014e90:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e94:	f8de 2000 	ldr.w	r2, [lr]
 8014e98:	9203      	str	r2, [sp, #12]
 8014e9a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014e9e:	3204      	adds	r2, #4
 8014ea0:	9204      	str	r2, [sp, #16]
 8014ea2:	9a02      	ldr	r2, [sp, #8]
 8014ea4:	43d6      	mvns	r6, r2
 8014ea6:	b2f6      	uxtb	r6, r6
 8014ea8:	9a01      	ldr	r2, [sp, #4]
 8014eaa:	2a00      	cmp	r2, #0
 8014eac:	dc03      	bgt.n	8014eb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014eae:	9a05      	ldr	r2, [sp, #20]
 8014eb0:	2a00      	cmp	r2, #0
 8014eb2:	f340 8129 	ble.w	8015108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014eb6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014eb8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014ebc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014ec0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014ec4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014ec6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014eca:	2b00      	cmp	r3, #0
 8014ecc:	dd0e      	ble.n	8014eec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014ece:	1408      	asrs	r0, r1, #16
 8014ed0:	d405      	bmi.n	8014ede <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ed2:	4560      	cmp	r0, ip
 8014ed4:	da03      	bge.n	8014ede <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ed6:	1410      	asrs	r0, r2, #16
 8014ed8:	d401      	bmi.n	8014ede <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014eda:	42b8      	cmp	r0, r7
 8014edc:	db07      	blt.n	8014eee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014ede:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014ee0:	4401      	add	r1, r0
 8014ee2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014ee4:	3b01      	subs	r3, #1
 8014ee6:	4402      	add	r2, r0
 8014ee8:	3402      	adds	r4, #2
 8014eea:	e7ee      	b.n	8014eca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014eec:	d071      	beq.n	8014fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014eee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014ef0:	1e58      	subs	r0, r3, #1
 8014ef2:	fb05 1500 	mla	r5, r5, r0, r1
 8014ef6:	142d      	asrs	r5, r5, #16
 8014ef8:	d45f      	bmi.n	8014fba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014efa:	4565      	cmp	r5, ip
 8014efc:	da5d      	bge.n	8014fba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014efe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014f00:	fb05 2000 	mla	r0, r5, r0, r2
 8014f04:	1400      	asrs	r0, r0, #16
 8014f06:	d458      	bmi.n	8014fba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014f08:	42b8      	cmp	r0, r7
 8014f0a:	da56      	bge.n	8014fba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014f0c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014f10:	4699      	mov	r9, r3
 8014f12:	46a2      	mov	sl, r4
 8014f14:	f1b9 0f00 	cmp.w	r9, #0
 8014f18:	dd57      	ble.n	8014fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014f1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014f1e:	9803      	ldr	r0, [sp, #12]
 8014f20:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014f24:	140d      	asrs	r5, r1, #16
 8014f26:	fb07 000c 	mla	r0, r7, ip, r0
 8014f2a:	f109 39ff 	add.w	r9, r9, #4294967295
 8014f2e:	5d40      	ldrb	r0, [r0, r5]
 8014f30:	9d04      	ldr	r5, [sp, #16]
 8014f32:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014f36:	f8ba 5000 	ldrh.w	r5, [sl]
 8014f3a:	122f      	asrs	r7, r5, #8
 8014f3c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014f40:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014f44:	fb17 f706 	smulbb	r7, r7, r6
 8014f48:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014f4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014f50:	00ed      	lsls	r5, r5, #3
 8014f52:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014f56:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014f5a:	10c7      	asrs	r7, r0, #3
 8014f5c:	b2ed      	uxtb	r5, r5
 8014f5e:	00c0      	lsls	r0, r0, #3
 8014f60:	fb18 f806 	smulbb	r8, r8, r6
 8014f64:	fb15 f506 	smulbb	r5, r5, r6
 8014f68:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014f6c:	b2c0      	uxtb	r0, r0
 8014f6e:	fa1f fc8c 	uxth.w	ip, ip
 8014f72:	fb07 870b 	mla	r7, r7, fp, r8
 8014f76:	fb00 500b 	mla	r0, r0, fp, r5
 8014f7a:	b280      	uxth	r0, r0
 8014f7c:	b2bf      	uxth	r7, r7
 8014f7e:	f10c 0501 	add.w	r5, ip, #1
 8014f82:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014f86:	f107 0801 	add.w	r8, r7, #1
 8014f8a:	1c45      	adds	r5, r0, #1
 8014f8c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014f90:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014f94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014f96:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014f9a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014f9e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014fa2:	ea45 0c0c 	orr.w	ip, r5, ip
 8014fa6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014faa:	4401      	add	r1, r0
 8014fac:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014fae:	ea4c 0c08 	orr.w	ip, ip, r8
 8014fb2:	f82a cb02 	strh.w	ip, [sl], #2
 8014fb6:	4402      	add	r2, r0
 8014fb8:	e7ac      	b.n	8014f14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014fba:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014fbe:	f04f 0800 	mov.w	r8, #0
 8014fc2:	eb03 0008 	add.w	r0, r3, r8
 8014fc6:	2800      	cmp	r0, #0
 8014fc8:	dc41      	bgt.n	801504e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014fca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014fce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014fd2:	9b01      	ldr	r3, [sp, #4]
 8014fd4:	2b00      	cmp	r3, #0
 8014fd6:	f340 8097 	ble.w	8015108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014fda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014fde:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014fe2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014fe6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014fe8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014fec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ff0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ff4:	eef0 6a62 	vmov.f32	s13, s5
 8014ff8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014ffc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015000:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015004:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015008:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801500c:	eef0 6a43 	vmov.f32	s13, s6
 8015010:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015014:	ee12 2a90 	vmov	r2, s5
 8015018:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801501c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015020:	ee13 2a10 	vmov	r2, s6
 8015024:	9313      	str	r3, [sp, #76]	; 0x4c
 8015026:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015028:	fb92 f3f3 	sdiv	r3, r2, r3
 801502c:	9314      	str	r3, [sp, #80]	; 0x50
 801502e:	9b01      	ldr	r3, [sp, #4]
 8015030:	9a05      	ldr	r2, [sp, #20]
 8015032:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015036:	3b01      	subs	r3, #1
 8015038:	9301      	str	r3, [sp, #4]
 801503a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801503e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015040:	eeb0 3a67 	vmov.f32	s6, s15
 8015044:	bf08      	it	eq
 8015046:	4613      	moveq	r3, r2
 8015048:	eef0 2a47 	vmov.f32	s5, s14
 801504c:	e72c      	b.n	8014ea8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801504e:	140f      	asrs	r7, r1, #16
 8015050:	d453      	bmi.n	80150fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015052:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015056:	42bd      	cmp	r5, r7
 8015058:	dd4f      	ble.n	80150fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801505a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801505e:	d44c      	bmi.n	80150fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015060:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015064:	4560      	cmp	r0, ip
 8015066:	dd48      	ble.n	80150fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015068:	9803      	ldr	r0, [sp, #12]
 801506a:	b22d      	sxth	r5, r5
 801506c:	fb0c 0505 	mla	r5, ip, r5, r0
 8015070:	5de8      	ldrb	r0, [r5, r7]
 8015072:	9d04      	ldr	r5, [sp, #16]
 8015074:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015078:	f06f 0501 	mvn.w	r5, #1
 801507c:	fb05 fb08 	mul.w	fp, r5, r8
 8015080:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015084:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015088:	122f      	asrs	r7, r5, #8
 801508a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801508e:	fb17 f706 	smulbb	r7, r7, r6
 8015092:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015096:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801509a:	00ed      	lsls	r5, r5, #3
 801509c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80150a0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80150a4:	10c7      	asrs	r7, r0, #3
 80150a6:	b2ed      	uxtb	r5, r5
 80150a8:	00c0      	lsls	r0, r0, #3
 80150aa:	fb19 f906 	smulbb	r9, r9, r6
 80150ae:	fb15 f506 	smulbb	r5, r5, r6
 80150b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80150b6:	b2c0      	uxtb	r0, r0
 80150b8:	fa1f fc8c 	uxth.w	ip, ip
 80150bc:	fb07 970a 	mla	r7, r7, sl, r9
 80150c0:	fb00 500a 	mla	r0, r0, sl, r5
 80150c4:	b2bf      	uxth	r7, r7
 80150c6:	b280      	uxth	r0, r0
 80150c8:	f10c 0501 	add.w	r5, ip, #1
 80150cc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80150d0:	f107 0901 	add.w	r9, r7, #1
 80150d4:	1c45      	adds	r5, r0, #1
 80150d6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80150da:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80150de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80150e2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80150e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80150ea:	ea45 0c0c 	orr.w	ip, r5, ip
 80150ee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80150f2:	ea4c 0c09 	orr.w	ip, ip, r9
 80150f6:	f824 c00b 	strh.w	ip, [r4, fp]
 80150fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80150fc:	4401      	add	r1, r0
 80150fe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015100:	f108 38ff 	add.w	r8, r8, #4294967295
 8015104:	4402      	add	r2, r0
 8015106:	e75c      	b.n	8014fc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015108:	b007      	add	sp, #28
 801510a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801510e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801510e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015112:	b085      	sub	sp, #20
 8015114:	4693      	mov	fp, r2
 8015116:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015118:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801511a:	6870      	ldr	r0, [r6, #4]
 801511c:	9100      	str	r1, [sp, #0]
 801511e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015122:	fb00 2404 	mla	r4, r0, r4, r2
 8015126:	6832      	ldr	r2, [r6, #0]
 8015128:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801512c:	682a      	ldr	r2, [r5, #0]
 801512e:	9201      	str	r2, [sp, #4]
 8015130:	686a      	ldr	r2, [r5, #4]
 8015132:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8015136:	3204      	adds	r2, #4
 8015138:	9202      	str	r2, [sp, #8]
 801513a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801513e:	9a00      	ldr	r2, [sp, #0]
 8015140:	2a00      	cmp	r2, #0
 8015142:	dc03      	bgt.n	801514c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015144:	f1bb 0f00 	cmp.w	fp, #0
 8015148:	f340 80a0 	ble.w	801528c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801514c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801514e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015152:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015156:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801515a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801515c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015160:	2b00      	cmp	r3, #0
 8015162:	dd0c      	ble.n	801517e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015164:	1406      	asrs	r6, r0, #16
 8015166:	d405      	bmi.n	8015174 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015168:	454e      	cmp	r6, r9
 801516a:	da03      	bge.n	8015174 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801516c:	1416      	asrs	r6, r2, #16
 801516e:	d401      	bmi.n	8015174 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015170:	4546      	cmp	r6, r8
 8015172:	db05      	blt.n	8015180 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015174:	4470      	add	r0, lr
 8015176:	4462      	add	r2, ip
 8015178:	3b01      	subs	r3, #1
 801517a:	3402      	adds	r4, #2
 801517c:	e7f0      	b.n	8015160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801517e:	d00f      	beq.n	80151a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015180:	1e5e      	subs	r6, r3, #1
 8015182:	fb0e 0706 	mla	r7, lr, r6, r0
 8015186:	143f      	asrs	r7, r7, #16
 8015188:	d541      	bpl.n	801520e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801518a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801518e:	4698      	mov	r8, r3
 8015190:	9603      	str	r6, [sp, #12]
 8015192:	f1b8 0f00 	cmp.w	r8, #0
 8015196:	dc59      	bgt.n	801524c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015198:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801519c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80151a0:	9b00      	ldr	r3, [sp, #0]
 80151a2:	2b00      	cmp	r3, #0
 80151a4:	dd72      	ble.n	801528c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80151a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80151aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80151ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80151b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80151b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80151bc:	eeb0 6a62 	vmov.f32	s12, s5
 80151c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80151c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80151c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80151cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80151d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80151d4:	eeb0 6a43 	vmov.f32	s12, s6
 80151d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80151dc:	ee12 2a90 	vmov	r2, s5
 80151e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80151e4:	fb92 fef3 	sdiv	lr, r2, r3
 80151e8:	ee13 2a10 	vmov	r2, s6
 80151ec:	fb92 fcf3 	sdiv	ip, r2, r3
 80151f0:	9b00      	ldr	r3, [sp, #0]
 80151f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80151f6:	3b01      	subs	r3, #1
 80151f8:	9300      	str	r3, [sp, #0]
 80151fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80151fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015200:	eeb0 3a67 	vmov.f32	s6, s15
 8015204:	bf08      	it	eq
 8015206:	465b      	moveq	r3, fp
 8015208:	eef0 2a47 	vmov.f32	s5, s14
 801520c:	e797      	b.n	801513e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801520e:	454f      	cmp	r7, r9
 8015210:	dabb      	bge.n	801518a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015212:	fb0c 2606 	mla	r6, ip, r6, r2
 8015216:	1436      	asrs	r6, r6, #16
 8015218:	d4b7      	bmi.n	801518a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801521a:	4546      	cmp	r6, r8
 801521c:	dab5      	bge.n	801518a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801521e:	461e      	mov	r6, r3
 8015220:	46a0      	mov	r8, r4
 8015222:	2e00      	cmp	r6, #0
 8015224:	ddb8      	ble.n	8015198 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015226:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801522a:	9901      	ldr	r1, [sp, #4]
 801522c:	1417      	asrs	r7, r2, #16
 801522e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015232:	fb0a 1707 	mla	r7, sl, r7, r1
 8015236:	9902      	ldr	r1, [sp, #8]
 8015238:	f817 7009 	ldrb.w	r7, [r7, r9]
 801523c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015240:	f828 7b02 	strh.w	r7, [r8], #2
 8015244:	4470      	add	r0, lr
 8015246:	4462      	add	r2, ip
 8015248:	3e01      	subs	r6, #1
 801524a:	e7ea      	b.n	8015222 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801524c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015250:	d417      	bmi.n	8015282 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015252:	68ae      	ldr	r6, [r5, #8]
 8015254:	454e      	cmp	r6, r9
 8015256:	dd14      	ble.n	8015282 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015258:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801525c:	d411      	bmi.n	8015282 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801525e:	68ef      	ldr	r7, [r5, #12]
 8015260:	4557      	cmp	r7, sl
 8015262:	dd0e      	ble.n	8015282 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015264:	9f01      	ldr	r7, [sp, #4]
 8015266:	b236      	sxth	r6, r6
 8015268:	fb0a 7606 	mla	r6, sl, r6, r7
 801526c:	9f02      	ldr	r7, [sp, #8]
 801526e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8015272:	f06f 0101 	mvn.w	r1, #1
 8015276:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801527a:	fb01 f608 	mul.w	r6, r1, r8
 801527e:	9903      	ldr	r1, [sp, #12]
 8015280:	538f      	strh	r7, [r1, r6]
 8015282:	4470      	add	r0, lr
 8015284:	4462      	add	r2, ip
 8015286:	f108 38ff 	add.w	r8, r8, #4294967295
 801528a:	e782      	b.n	8015192 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801528c:	b005      	add	sp, #20
 801528e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015292 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015292:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015296:	b087      	sub	sp, #28
 8015298:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801529a:	9205      	str	r2, [sp, #20]
 801529c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80152a0:	9203      	str	r2, [sp, #12]
 80152a2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80152a6:	9102      	str	r1, [sp, #8]
 80152a8:	6861      	ldr	r1, [r4, #4]
 80152aa:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80152ae:	fb01 2000 	mla	r0, r1, r0, r2
 80152b2:	6822      	ldr	r2, [r4, #0]
 80152b4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80152b8:	9200      	str	r2, [sp, #0]
 80152ba:	f8dc 2000 	ldr.w	r2, [ip]
 80152be:	9204      	str	r2, [sp, #16]
 80152c0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80152c4:	3204      	adds	r2, #4
 80152c6:	9201      	str	r2, [sp, #4]
 80152c8:	9a03      	ldr	r2, [sp, #12]
 80152ca:	43d5      	mvns	r5, r2
 80152cc:	b2ed      	uxtb	r5, r5
 80152ce:	9a02      	ldr	r2, [sp, #8]
 80152d0:	2a00      	cmp	r2, #0
 80152d2:	dc03      	bgt.n	80152dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80152d4:	9a05      	ldr	r2, [sp, #20]
 80152d6:	2a00      	cmp	r2, #0
 80152d8:	f340 812c 	ble.w	8015534 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80152dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80152de:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80152e2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80152e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80152ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80152ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80152f0:	2b00      	cmp	r3, #0
 80152f2:	dd10      	ble.n	8015316 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80152f4:	140c      	asrs	r4, r1, #16
 80152f6:	d405      	bmi.n	8015304 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80152f8:	4574      	cmp	r4, lr
 80152fa:	da03      	bge.n	8015304 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80152fc:	1414      	asrs	r4, r2, #16
 80152fe:	d401      	bmi.n	8015304 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015300:	42bc      	cmp	r4, r7
 8015302:	db09      	blt.n	8015318 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015304:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015306:	9800      	ldr	r0, [sp, #0]
 8015308:	4421      	add	r1, r4
 801530a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801530c:	3002      	adds	r0, #2
 801530e:	4422      	add	r2, r4
 8015310:	3b01      	subs	r3, #1
 8015312:	9000      	str	r0, [sp, #0]
 8015314:	e7ec      	b.n	80152f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015316:	d071      	beq.n	80153fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8015318:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801531a:	1e5c      	subs	r4, r3, #1
 801531c:	fb06 1604 	mla	r6, r6, r4, r1
 8015320:	1436      	asrs	r6, r6, #16
 8015322:	d45d      	bmi.n	80153e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015324:	4576      	cmp	r6, lr
 8015326:	da5b      	bge.n	80153e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015328:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801532a:	fb06 2404 	mla	r4, r6, r4, r2
 801532e:	1424      	asrs	r4, r4, #16
 8015330:	d456      	bmi.n	80153e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015332:	42bc      	cmp	r4, r7
 8015334:	da54      	bge.n	80153e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015336:	f8dd 9000 	ldr.w	r9, [sp]
 801533a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801533e:	4698      	mov	r8, r3
 8015340:	f1b8 0f00 	cmp.w	r8, #0
 8015344:	dd54      	ble.n	80153f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015346:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801534a:	9804      	ldr	r0, [sp, #16]
 801534c:	1414      	asrs	r4, r2, #16
 801534e:	fb07 0404 	mla	r4, r7, r4, r0
 8015352:	140e      	asrs	r6, r1, #16
 8015354:	9801      	ldr	r0, [sp, #4]
 8015356:	f814 e006 	ldrb.w	lr, [r4, r6]
 801535a:	f8b9 4000 	ldrh.w	r4, [r9]
 801535e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015362:	eb00 0b0e 	add.w	fp, r0, lr
 8015366:	1227      	asrs	r7, r4, #8
 8015368:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801536c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015370:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8015374:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015376:	fb16 f60a 	smulbb	r6, r6, sl
 801537a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801537e:	fb07 6705 	mla	r7, r7, r5, r6
 8015382:	10e6      	asrs	r6, r4, #3
 8015384:	00e4      	lsls	r4, r4, #3
 8015386:	b2e4      	uxtb	r4, r4
 8015388:	fb1b fb0a 	smulbb	fp, fp, sl
 801538c:	fb14 f405 	smulbb	r4, r4, r5
 8015390:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015394:	b2bf      	uxth	r7, r7
 8015396:	fb06 b605 	mla	r6, r6, r5, fp
 801539a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801539e:	b2b6      	uxth	r6, r6
 80153a0:	fa1f fe8e 	uxth.w	lr, lr
 80153a4:	1c7c      	adds	r4, r7, #1
 80153a6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80153aa:	f106 0b01 	add.w	fp, r6, #1
 80153ae:	f10e 0401 	add.w	r4, lr, #1
 80153b2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80153b6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80153ba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80153be:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80153c2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80153c6:	4327      	orrs	r7, r4
 80153c8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80153cc:	4401      	add	r1, r0
 80153ce:	9814      	ldr	r0, [sp, #80]	; 0x50
 80153d0:	ea47 070b 	orr.w	r7, r7, fp
 80153d4:	f829 7b02 	strh.w	r7, [r9], #2
 80153d8:	4402      	add	r2, r0
 80153da:	f108 38ff 	add.w	r8, r8, #4294967295
 80153de:	e7af      	b.n	8015340 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80153e0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80153e4:	f04f 0e00 	mov.w	lr, #0
 80153e8:	eb03 040e 	add.w	r4, r3, lr
 80153ec:	2c00      	cmp	r4, #0
 80153ee:	dc43      	bgt.n	8015478 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80153f0:	9a00      	ldr	r2, [sp, #0]
 80153f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80153f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80153fa:	9300      	str	r3, [sp, #0]
 80153fc:	9b02      	ldr	r3, [sp, #8]
 80153fe:	2b00      	cmp	r3, #0
 8015400:	f340 8098 	ble.w	8015534 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015404:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015408:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801540c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015410:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015412:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015416:	ee31 1a05 	vadd.f32	s2, s2, s10
 801541a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801541e:	eef0 6a62 	vmov.f32	s13, s5
 8015422:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015426:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801542a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801542e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015432:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015436:	eef0 6a43 	vmov.f32	s13, s6
 801543a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801543e:	ee12 2a90 	vmov	r2, s5
 8015442:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015446:	fb92 f3f3 	sdiv	r3, r2, r3
 801544a:	ee13 2a10 	vmov	r2, s6
 801544e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015450:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015452:	fb92 f3f3 	sdiv	r3, r2, r3
 8015456:	9314      	str	r3, [sp, #80]	; 0x50
 8015458:	9b02      	ldr	r3, [sp, #8]
 801545a:	9a05      	ldr	r2, [sp, #20]
 801545c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015460:	3b01      	subs	r3, #1
 8015462:	9302      	str	r3, [sp, #8]
 8015464:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8015468:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801546a:	eeb0 3a67 	vmov.f32	s6, s15
 801546e:	bf08      	it	eq
 8015470:	4613      	moveq	r3, r2
 8015472:	eef0 2a47 	vmov.f32	s5, s14
 8015476:	e72a      	b.n	80152ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015478:	140f      	asrs	r7, r1, #16
 801547a:	d454      	bmi.n	8015526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801547c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015480:	42be      	cmp	r6, r7
 8015482:	dd50      	ble.n	8015526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015484:	ea5f 4822 	movs.w	r8, r2, asr #16
 8015488:	d44d      	bmi.n	8015526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801548a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801548e:	4544      	cmp	r4, r8
 8015490:	dd49      	ble.n	8015526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015492:	9c04      	ldr	r4, [sp, #16]
 8015494:	b236      	sxth	r6, r6
 8015496:	fb08 4606 	mla	r6, r8, r6, r4
 801549a:	f06f 0001 	mvn.w	r0, #1
 801549e:	f816 8007 	ldrb.w	r8, [r6, r7]
 80154a2:	9c01      	ldr	r4, [sp, #4]
 80154a4:	fb00 fa0e 	mul.w	sl, r0, lr
 80154a8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80154ac:	9800      	ldr	r0, [sp, #0]
 80154ae:	eb04 0b08 	add.w	fp, r4, r8
 80154b2:	f830 400a 	ldrh.w	r4, [r0, sl]
 80154b6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80154ba:	9801      	ldr	r0, [sp, #4]
 80154bc:	f89b b001 	ldrb.w	fp, [fp, #1]
 80154c0:	f810 8008 	ldrb.w	r8, [r0, r8]
 80154c4:	9800      	ldr	r0, [sp, #0]
 80154c6:	1227      	asrs	r7, r4, #8
 80154c8:	fb16 f609 	smulbb	r6, r6, r9
 80154cc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80154d0:	fb07 6705 	mla	r7, r7, r5, r6
 80154d4:	10e6      	asrs	r6, r4, #3
 80154d6:	00e4      	lsls	r4, r4, #3
 80154d8:	b2e4      	uxtb	r4, r4
 80154da:	fb1b fb09 	smulbb	fp, fp, r9
 80154de:	fb14 f405 	smulbb	r4, r4, r5
 80154e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80154e6:	b2bf      	uxth	r7, r7
 80154e8:	fb06 b605 	mla	r6, r6, r5, fp
 80154ec:	fb08 4809 	mla	r8, r8, r9, r4
 80154f0:	b2b6      	uxth	r6, r6
 80154f2:	fa1f f888 	uxth.w	r8, r8
 80154f6:	1c7c      	adds	r4, r7, #1
 80154f8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80154fc:	f106 0b01 	add.w	fp, r6, #1
 8015500:	f108 0401 	add.w	r4, r8, #1
 8015504:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015508:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801550c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015510:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015514:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015518:	4327      	orrs	r7, r4
 801551a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801551e:	ea47 070b 	orr.w	r7, r7, fp
 8015522:	f820 700a 	strh.w	r7, [r0, sl]
 8015526:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015528:	4401      	add	r1, r0
 801552a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801552c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015530:	4402      	add	r2, r0
 8015532:	e759      	b.n	80153e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015534:	b007      	add	sp, #28
 8015536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801553c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801553c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015540:	b085      	sub	sp, #20
 8015542:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015546:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015548:	9203      	str	r2, [sp, #12]
 801554a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801554e:	6870      	ldr	r0, [r6, #4]
 8015550:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015552:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015556:	686f      	ldr	r7, [r5, #4]
 8015558:	9101      	str	r1, [sp, #4]
 801555a:	fb00 2404 	mla	r4, r0, r4, r2
 801555e:	6832      	ldr	r2, [r6, #0]
 8015560:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015564:	682a      	ldr	r2, [r5, #0]
 8015566:	9202      	str	r2, [sp, #8]
 8015568:	3704      	adds	r7, #4
 801556a:	9a01      	ldr	r2, [sp, #4]
 801556c:	2a00      	cmp	r2, #0
 801556e:	dc03      	bgt.n	8015578 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015570:	9a03      	ldr	r2, [sp, #12]
 8015572:	2a00      	cmp	r2, #0
 8015574:	f340 80cc 	ble.w	8015710 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015578:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801557a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801557e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015582:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015586:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015588:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801558c:	2b00      	cmp	r3, #0
 801558e:	dd0d      	ble.n	80155ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015590:	1406      	asrs	r6, r0, #16
 8015592:	d405      	bmi.n	80155a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015594:	454e      	cmp	r6, r9
 8015596:	da03      	bge.n	80155a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015598:	1416      	asrs	r6, r2, #16
 801559a:	d401      	bmi.n	80155a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801559c:	4546      	cmp	r6, r8
 801559e:	db06      	blt.n	80155ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80155a0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80155a2:	4460      	add	r0, ip
 80155a4:	4432      	add	r2, r6
 80155a6:	3b01      	subs	r3, #1
 80155a8:	3402      	adds	r4, #2
 80155aa:	e7ef      	b.n	801558c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80155ac:	d00f      	beq.n	80155ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80155ae:	1e5e      	subs	r6, r3, #1
 80155b0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80155b4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80155b8:	d543      	bpl.n	8015642 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80155ba:	4698      	mov	r8, r3
 80155bc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80155c0:	f1b8 0f00 	cmp.w	r8, #0
 80155c4:	dc71      	bgt.n	80156aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80155c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80155ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155ce:	9b01      	ldr	r3, [sp, #4]
 80155d0:	2b00      	cmp	r3, #0
 80155d2:	f340 809d 	ble.w	8015710 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80155d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80155da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80155de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80155e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80155e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80155ec:	eeb0 6a62 	vmov.f32	s12, s5
 80155f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80155f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80155fc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015600:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015604:	eeb0 6a43 	vmov.f32	s12, s6
 8015608:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801560c:	ee12 2a90 	vmov	r2, s5
 8015610:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015614:	fb92 fcf3 	sdiv	ip, r2, r3
 8015618:	ee13 2a10 	vmov	r2, s6
 801561c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015620:	9312      	str	r3, [sp, #72]	; 0x48
 8015622:	9b01      	ldr	r3, [sp, #4]
 8015624:	9a03      	ldr	r2, [sp, #12]
 8015626:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801562a:	3b01      	subs	r3, #1
 801562c:	9301      	str	r3, [sp, #4]
 801562e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015632:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015634:	eeb0 3a67 	vmov.f32	s6, s15
 8015638:	bf08      	it	eq
 801563a:	4613      	moveq	r3, r2
 801563c:	eef0 2a47 	vmov.f32	s5, s14
 8015640:	e793      	b.n	801556a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015642:	45ce      	cmp	lr, r9
 8015644:	dab9      	bge.n	80155ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015646:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015648:	fb01 2606 	mla	r6, r1, r6, r2
 801564c:	1436      	asrs	r6, r6, #16
 801564e:	d4b4      	bmi.n	80155ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015650:	4546      	cmp	r6, r8
 8015652:	dab2      	bge.n	80155ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015654:	4698      	mov	r8, r3
 8015656:	46a2      	mov	sl, r4
 8015658:	f1b8 0f00 	cmp.w	r8, #0
 801565c:	ddb3      	ble.n	80155c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801565e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015662:	9902      	ldr	r1, [sp, #8]
 8015664:	1416      	asrs	r6, r2, #16
 8015666:	fb09 1606 	mla	r6, r9, r6, r1
 801566a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801566e:	492a      	ldr	r1, [pc, #168]	; (8015718 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8015670:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015674:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015678:	eb07 0b0e 	add.w	fp, r7, lr
 801567c:	4460      	add	r0, ip
 801567e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8015682:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015686:	00f6      	lsls	r6, r6, #3
 8015688:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801568c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015690:	ea49 0606 	orr.w	r6, r9, r6
 8015694:	f817 900e 	ldrb.w	r9, [r7, lr]
 8015698:	9912      	ldr	r1, [sp, #72]	; 0x48
 801569a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801569e:	f82a 6b02 	strh.w	r6, [sl], #2
 80156a2:	440a      	add	r2, r1
 80156a4:	f108 38ff 	add.w	r8, r8, #4294967295
 80156a8:	e7d6      	b.n	8015658 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80156aa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80156ae:	d429      	bmi.n	8015704 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80156b0:	68ae      	ldr	r6, [r5, #8]
 80156b2:	454e      	cmp	r6, r9
 80156b4:	dd26      	ble.n	8015704 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80156b6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80156ba:	d423      	bmi.n	8015704 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80156bc:	68e9      	ldr	r1, [r5, #12]
 80156be:	4559      	cmp	r1, fp
 80156c0:	dd20      	ble.n	8015704 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80156c2:	9902      	ldr	r1, [sp, #8]
 80156c4:	fa0f fe86 	sxth.w	lr, r6
 80156c8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80156cc:	f06f 0101 	mvn.w	r1, #1
 80156d0:	f81e e009 	ldrb.w	lr, [lr, r9]
 80156d4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80156d8:	eb07 060e 	add.w	r6, r7, lr
 80156dc:	fb01 f908 	mul.w	r9, r1, r8
 80156e0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80156e4:	7876      	ldrb	r6, [r6, #1]
 80156e6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80156ea:	00f6      	lsls	r6, r6, #3
 80156ec:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80156f0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80156f4:	ea4b 0606 	orr.w	r6, fp, r6
 80156f8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80156fc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015700:	f82a 6009 	strh.w	r6, [sl, r9]
 8015704:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015706:	4460      	add	r0, ip
 8015708:	440a      	add	r2, r1
 801570a:	f108 38ff 	add.w	r8, r8, #4294967295
 801570e:	e757      	b.n	80155c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015710:	b005      	add	sp, #20
 8015712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015716:	bf00      	nop
 8015718:	fffff800 	.word	0xfffff800

0801571c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801571c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015720:	b087      	sub	sp, #28
 8015722:	468b      	mov	fp, r1
 8015724:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015726:	9204      	str	r2, [sp, #16]
 8015728:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801572c:	9205      	str	r2, [sp, #20]
 801572e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015732:	6841      	ldr	r1, [r0, #4]
 8015734:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015738:	fb01 2404 	mla	r4, r1, r4, r2
 801573c:	6802      	ldr	r2, [r0, #0]
 801573e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015742:	f8dc 2000 	ldr.w	r2, [ip]
 8015746:	9201      	str	r2, [sp, #4]
 8015748:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801574c:	3204      	adds	r2, #4
 801574e:	9202      	str	r2, [sp, #8]
 8015750:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015754:	f1bb 0f00 	cmp.w	fp, #0
 8015758:	dc03      	bgt.n	8015762 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801575a:	9a04      	ldr	r2, [sp, #16]
 801575c:	2a00      	cmp	r2, #0
 801575e:	f340 8138 	ble.w	80159d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015762:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015764:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015768:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801576c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015770:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015772:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015776:	2b00      	cmp	r3, #0
 8015778:	dd0e      	ble.n	8015798 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801577a:	1402      	asrs	r2, r0, #16
 801577c:	d405      	bmi.n	801578a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801577e:	42ba      	cmp	r2, r7
 8015780:	da03      	bge.n	801578a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015782:	140a      	asrs	r2, r1, #16
 8015784:	d401      	bmi.n	801578a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015786:	42b2      	cmp	r2, r6
 8015788:	db07      	blt.n	801579a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801578a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801578c:	4410      	add	r0, r2
 801578e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015790:	3b01      	subs	r3, #1
 8015792:	4411      	add	r1, r2
 8015794:	3402      	adds	r4, #2
 8015796:	e7ee      	b.n	8015776 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015798:	d019      	beq.n	80157ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801579a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801579c:	1e5a      	subs	r2, r3, #1
 801579e:	fb05 0502 	mla	r5, r5, r2, r0
 80157a2:	142d      	asrs	r5, r5, #16
 80157a4:	d409      	bmi.n	80157ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80157a6:	42bd      	cmp	r5, r7
 80157a8:	da07      	bge.n	80157ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80157aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80157ac:	fb05 1202 	mla	r2, r5, r2, r1
 80157b0:	1412      	asrs	r2, r2, #16
 80157b2:	d402      	bmi.n	80157ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80157b4:	42b2      	cmp	r2, r6
 80157b6:	f2c0 80ac 	blt.w	8015912 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80157ba:	f04f 0e00 	mov.w	lr, #0
 80157be:	eb03 020e 	add.w	r2, r3, lr
 80157c2:	2a00      	cmp	r2, #0
 80157c4:	dc3e      	bgt.n	8015844 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80157c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80157ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80157ce:	f1bb 0f00 	cmp.w	fp, #0
 80157d2:	f340 80fe 	ble.w	80159d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80157d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80157da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80157de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80157e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80157e4:	f1bb 0b01 	subs.w	fp, fp, #1
 80157e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80157ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80157f0:	eeb0 6a62 	vmov.f32	s12, s5
 80157f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80157f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80157fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015800:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015804:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015808:	eeb0 6a43 	vmov.f32	s12, s6
 801580c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015810:	ee12 2a90 	vmov	r2, s5
 8015814:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015818:	fb92 f3f3 	sdiv	r3, r2, r3
 801581c:	ee13 2a10 	vmov	r2, s6
 8015820:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015824:	9313      	str	r3, [sp, #76]	; 0x4c
 8015826:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015828:	fb92 f3f3 	sdiv	r3, r2, r3
 801582c:	9a04      	ldr	r2, [sp, #16]
 801582e:	9314      	str	r3, [sp, #80]	; 0x50
 8015830:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015834:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015836:	eeb0 3a67 	vmov.f32	s6, s15
 801583a:	bf08      	it	eq
 801583c:	4613      	moveq	r3, r2
 801583e:	eef0 2a47 	vmov.f32	s5, s14
 8015842:	e787      	b.n	8015754 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015844:	1406      	asrs	r6, r0, #16
 8015846:	d45d      	bmi.n	8015904 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015848:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801584c:	42b5      	cmp	r5, r6
 801584e:	dd59      	ble.n	8015904 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015850:	140f      	asrs	r7, r1, #16
 8015852:	d457      	bmi.n	8015904 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015854:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015858:	42ba      	cmp	r2, r7
 801585a:	dd53      	ble.n	8015904 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801585c:	9a01      	ldr	r2, [sp, #4]
 801585e:	b22d      	sxth	r5, r5
 8015860:	fb07 2505 	mla	r5, r7, r5, r2
 8015864:	5daa      	ldrb	r2, [r5, r6]
 8015866:	9d02      	ldr	r5, [sp, #8]
 8015868:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801586c:	0e2e      	lsrs	r6, r5, #24
 801586e:	d049      	beq.n	8015904 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015870:	f06f 0201 	mvn.w	r2, #1
 8015874:	fb02 f20e 	mul.w	r2, r2, lr
 8015878:	9203      	str	r2, [sp, #12]
 801587a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801587e:	9a05      	ldr	r2, [sp, #20]
 8015880:	4356      	muls	r6, r2
 8015882:	1c72      	adds	r2, r6, #1
 8015884:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015888:	1212      	asrs	r2, r2, #8
 801588a:	fa1f f982 	uxth.w	r9, r2
 801588e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8015892:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015896:	43d2      	mvns	r2, r2
 8015898:	b2d2      	uxtb	r2, r2
 801589a:	fb16 f609 	smulbb	r6, r6, r9
 801589e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80158a2:	fb07 6702 	mla	r7, r7, r2, r6
 80158a6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80158aa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80158ae:	b2ed      	uxtb	r5, r5
 80158b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80158b4:	fa5f f888 	uxtb.w	r8, r8
 80158b8:	fb15 f509 	smulbb	r5, r5, r9
 80158bc:	fb08 5502 	mla	r5, r8, r2, r5
 80158c0:	b2bf      	uxth	r7, r7
 80158c2:	fb1a fa09 	smulbb	sl, sl, r9
 80158c6:	b2ad      	uxth	r5, r5
 80158c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80158cc:	fb06 a602 	mla	r6, r6, r2, sl
 80158d0:	1c7a      	adds	r2, r7, #1
 80158d2:	f105 0a01 	add.w	sl, r5, #1
 80158d6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80158da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80158de:	b2b6      	uxth	r6, r6
 80158e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80158e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80158e8:	ea4a 0707 	orr.w	r7, sl, r7
 80158ec:	f106 0a01 	add.w	sl, r6, #1
 80158f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80158f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80158f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80158fc:	9a03      	ldr	r2, [sp, #12]
 80158fe:	ea47 070a 	orr.w	r7, r7, sl
 8015902:	52a7      	strh	r7, [r4, r2]
 8015904:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015906:	4410      	add	r0, r2
 8015908:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801590a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801590e:	4411      	add	r1, r2
 8015910:	e755      	b.n	80157be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015912:	f04f 0800 	mov.w	r8, #0
 8015916:	eba3 0208 	sub.w	r2, r3, r8
 801591a:	2a00      	cmp	r2, #0
 801591c:	f77f af53 	ble.w	80157c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015920:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015924:	9f01      	ldr	r7, [sp, #4]
 8015926:	140a      	asrs	r2, r1, #16
 8015928:	1405      	asrs	r5, r0, #16
 801592a:	fb06 7202 	mla	r2, r6, r2, r7
 801592e:	5d52      	ldrb	r2, [r2, r5]
 8015930:	9d02      	ldr	r5, [sp, #8]
 8015932:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015936:	0e2e      	lsrs	r6, r5, #24
 8015938:	d044      	beq.n	80159c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801593a:	9a05      	ldr	r2, [sp, #20]
 801593c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015940:	4356      	muls	r6, r2
 8015942:	1c72      	adds	r2, r6, #1
 8015944:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015948:	1212      	asrs	r2, r2, #8
 801594a:	fa1f f982 	uxth.w	r9, r2
 801594e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015952:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015956:	43d2      	mvns	r2, r2
 8015958:	b2d2      	uxtb	r2, r2
 801595a:	fb16 f609 	smulbb	r6, r6, r9
 801595e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015962:	fb07 6702 	mla	r7, r7, r2, r6
 8015966:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801596a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801596e:	b2ed      	uxtb	r5, r5
 8015970:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015974:	fa5f fe8e 	uxtb.w	lr, lr
 8015978:	fb15 f509 	smulbb	r5, r5, r9
 801597c:	fb0e 5502 	mla	r5, lr, r2, r5
 8015980:	b2bf      	uxth	r7, r7
 8015982:	fb1a fa09 	smulbb	sl, sl, r9
 8015986:	b2ad      	uxth	r5, r5
 8015988:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801598c:	fb06 a602 	mla	r6, r6, r2, sl
 8015990:	1c7a      	adds	r2, r7, #1
 8015992:	f105 0a01 	add.w	sl, r5, #1
 8015996:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801599a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801599e:	b2b6      	uxth	r6, r6
 80159a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80159a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80159a8:	ea4a 0707 	orr.w	r7, sl, r7
 80159ac:	f106 0a01 	add.w	sl, r6, #1
 80159b0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80159b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80159b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80159bc:	ea47 070a 	orr.w	r7, r7, sl
 80159c0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80159c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80159c6:	4410      	add	r0, r2
 80159c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80159ca:	f108 0801 	add.w	r8, r8, #1
 80159ce:	4411      	add	r1, r2
 80159d0:	e7a1      	b.n	8015916 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80159d2:	b007      	add	sp, #28
 80159d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080159d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80159d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159dc:	b085      	sub	sp, #20
 80159de:	468b      	mov	fp, r1
 80159e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80159e2:	9203      	str	r2, [sp, #12]
 80159e4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80159e8:	6841      	ldr	r1, [r0, #4]
 80159ea:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80159ee:	fb01 2404 	mla	r4, r1, r4, r2
 80159f2:	6802      	ldr	r2, [r0, #0]
 80159f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80159f8:	f8de 2000 	ldr.w	r2, [lr]
 80159fc:	9200      	str	r2, [sp, #0]
 80159fe:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015a02:	3204      	adds	r2, #4
 8015a04:	9201      	str	r2, [sp, #4]
 8015a06:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015a0a:	f1bb 0f00 	cmp.w	fp, #0
 8015a0e:	dc03      	bgt.n	8015a18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015a10:	9a03      	ldr	r2, [sp, #12]
 8015a12:	2a00      	cmp	r2, #0
 8015a14:	f340 8153 	ble.w	8015cbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015a18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015a1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015a1e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015a22:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015a26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015a28:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015a2c:	2b00      	cmp	r3, #0
 8015a2e:	dd0e      	ble.n	8015a4e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015a30:	1408      	asrs	r0, r1, #16
 8015a32:	d405      	bmi.n	8015a40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015a34:	42b8      	cmp	r0, r7
 8015a36:	da03      	bge.n	8015a40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015a38:	1410      	asrs	r0, r2, #16
 8015a3a:	d401      	bmi.n	8015a40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015a3c:	42b0      	cmp	r0, r6
 8015a3e:	db07      	blt.n	8015a50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015a40:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015a42:	4401      	add	r1, r0
 8015a44:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015a46:	3b01      	subs	r3, #1
 8015a48:	4402      	add	r2, r0
 8015a4a:	3402      	adds	r4, #2
 8015a4c:	e7ee      	b.n	8015a2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015a4e:	d017      	beq.n	8015a80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015a50:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015a52:	1e58      	subs	r0, r3, #1
 8015a54:	fb05 1500 	mla	r5, r5, r0, r1
 8015a58:	142d      	asrs	r5, r5, #16
 8015a5a:	d409      	bmi.n	8015a70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015a5c:	42bd      	cmp	r5, r7
 8015a5e:	da07      	bge.n	8015a70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015a60:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015a62:	fb05 2000 	mla	r0, r5, r0, r2
 8015a66:	1400      	asrs	r0, r0, #16
 8015a68:	d402      	bmi.n	8015a70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015a6a:	42b0      	cmp	r0, r6
 8015a6c:	f2c0 80bc 	blt.w	8015be8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8015a70:	2600      	movs	r6, #0
 8015a72:	1998      	adds	r0, r3, r6
 8015a74:	2800      	cmp	r0, #0
 8015a76:	dc3e      	bgt.n	8015af6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015a78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015a7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015a80:	f1bb 0f00 	cmp.w	fp, #0
 8015a84:	f340 811b 	ble.w	8015cbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015a88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015a8c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015a90:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015a94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a96:	f1bb 0b01 	subs.w	fp, fp, #1
 8015a9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015a9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015aa2:	eeb0 6a62 	vmov.f32	s12, s5
 8015aa6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015aaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015aae:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015ab2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015ab6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015aba:	eeb0 6a43 	vmov.f32	s12, s6
 8015abe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015ac2:	ee12 2a90 	vmov	r2, s5
 8015ac6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015aca:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ace:	ee13 2a10 	vmov	r2, s6
 8015ad2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ad6:	9311      	str	r3, [sp, #68]	; 0x44
 8015ad8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ada:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ade:	9a03      	ldr	r2, [sp, #12]
 8015ae0:	9312      	str	r3, [sp, #72]	; 0x48
 8015ae2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015ae6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ae8:	eeb0 3a67 	vmov.f32	s6, s15
 8015aec:	bf08      	it	eq
 8015aee:	4613      	moveq	r3, r2
 8015af0:	eef0 2a47 	vmov.f32	s5, s14
 8015af4:	e789      	b.n	8015a0a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015af6:	140f      	asrs	r7, r1, #16
 8015af8:	d426      	bmi.n	8015b48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015afa:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015afe:	42bd      	cmp	r5, r7
 8015b00:	dd22      	ble.n	8015b48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015b02:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015b06:	d41f      	bmi.n	8015b48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015b08:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015b0c:	4560      	cmp	r0, ip
 8015b0e:	dd1b      	ble.n	8015b48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015b10:	9800      	ldr	r0, [sp, #0]
 8015b12:	b22d      	sxth	r5, r5
 8015b14:	fb0c 0505 	mla	r5, ip, r5, r0
 8015b18:	5de8      	ldrb	r0, [r5, r7]
 8015b1a:	9d01      	ldr	r5, [sp, #4]
 8015b1c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015b20:	0e07      	lsrs	r7, r0, #24
 8015b22:	2fff      	cmp	r7, #255	; 0xff
 8015b24:	d116      	bne.n	8015b54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015b26:	f06f 0501 	mvn.w	r5, #1
 8015b2a:	fb05 f706 	mul.w	r7, r5, r6
 8015b2e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015b32:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015b36:	0945      	lsrs	r5, r0, #5
 8015b38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015b3c:	ea4c 0505 	orr.w	r5, ip, r5
 8015b40:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015b44:	4305      	orrs	r5, r0
 8015b46:	53e5      	strh	r5, [r4, r7]
 8015b48:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015b4a:	4401      	add	r1, r0
 8015b4c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015b4e:	3e01      	subs	r6, #1
 8015b50:	4402      	add	r2, r0
 8015b52:	e78e      	b.n	8015a72 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015b54:	b2fd      	uxtb	r5, r7
 8015b56:	2f00      	cmp	r7, #0
 8015b58:	d0f6      	beq.n	8015b48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015b5a:	f06f 0701 	mvn.w	r7, #1
 8015b5e:	4377      	muls	r7, r6
 8015b60:	fa1f f985 	uxth.w	r9, r5
 8015b64:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015b68:	9702      	str	r7, [sp, #8]
 8015b6a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015b6e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015b72:	43ed      	mvns	r5, r5
 8015b74:	b2ed      	uxtb	r5, r5
 8015b76:	fb17 f709 	smulbb	r7, r7, r9
 8015b7a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015b7e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015b82:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015b86:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8015b8a:	b2c0      	uxtb	r0, r0
 8015b8c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015b90:	fa5f f888 	uxtb.w	r8, r8
 8015b94:	fb10 f009 	smulbb	r0, r0, r9
 8015b98:	fb08 0005 	mla	r0, r8, r5, r0
 8015b9c:	b280      	uxth	r0, r0
 8015b9e:	fa1f fc8c 	uxth.w	ip, ip
 8015ba2:	fb1a fa09 	smulbb	sl, sl, r9
 8015ba6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015baa:	fb07 a705 	mla	r7, r7, r5, sl
 8015bae:	f100 0a01 	add.w	sl, r0, #1
 8015bb2:	f10c 0501 	add.w	r5, ip, #1
 8015bb6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015bba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015bbe:	b2bf      	uxth	r7, r7
 8015bc0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015bc4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015bc8:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015bcc:	f107 0a01 	add.w	sl, r7, #1
 8015bd0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015bd4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015bd8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015bdc:	9802      	ldr	r0, [sp, #8]
 8015bde:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015be2:	f824 c000 	strh.w	ip, [r4, r0]
 8015be6:	e7af      	b.n	8015b48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015be8:	f04f 0800 	mov.w	r8, #0
 8015bec:	eba3 0008 	sub.w	r0, r3, r8
 8015bf0:	2800      	cmp	r0, #0
 8015bf2:	f77f af41 	ble.w	8015a78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015bf6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015bfa:	9f00      	ldr	r7, [sp, #0]
 8015bfc:	1410      	asrs	r0, r2, #16
 8015bfe:	140d      	asrs	r5, r1, #16
 8015c00:	fb06 7000 	mla	r0, r6, r0, r7
 8015c04:	5d40      	ldrb	r0, [r0, r5]
 8015c06:	9d01      	ldr	r5, [sp, #4]
 8015c08:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015c0c:	0e2e      	lsrs	r6, r5, #24
 8015c0e:	2eff      	cmp	r6, #255	; 0xff
 8015c10:	d112      	bne.n	8015c38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015c12:	482c      	ldr	r0, [pc, #176]	; (8015cc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015c14:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015c18:	0968      	lsrs	r0, r5, #5
 8015c1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015c1e:	4330      	orrs	r0, r6
 8015c20:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015c24:	4328      	orrs	r0, r5
 8015c26:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8015c2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c2c:	4401      	add	r1, r0
 8015c2e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015c30:	f108 0801 	add.w	r8, r8, #1
 8015c34:	4402      	add	r2, r0
 8015c36:	e7d9      	b.n	8015bec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015c38:	b2f0      	uxtb	r0, r6
 8015c3a:	2e00      	cmp	r6, #0
 8015c3c:	d0f5      	beq.n	8015c2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8015c3e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015c42:	fa1f f980 	uxth.w	r9, r0
 8015c46:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015c4a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015c4e:	43c0      	mvns	r0, r0
 8015c50:	b2c0      	uxtb	r0, r0
 8015c52:	fb16 f609 	smulbb	r6, r6, r9
 8015c56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015c5a:	fb07 6700 	mla	r7, r7, r0, r6
 8015c5e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015c62:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015c66:	b2ed      	uxtb	r5, r5
 8015c68:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015c6c:	fa5f fc8c 	uxtb.w	ip, ip
 8015c70:	fb15 f509 	smulbb	r5, r5, r9
 8015c74:	fb0c 5500 	mla	r5, ip, r0, r5
 8015c78:	b2bf      	uxth	r7, r7
 8015c7a:	fb1a fa09 	smulbb	sl, sl, r9
 8015c7e:	b2ad      	uxth	r5, r5
 8015c80:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015c84:	fb06 a600 	mla	r6, r6, r0, sl
 8015c88:	1c78      	adds	r0, r7, #1
 8015c8a:	f105 0a01 	add.w	sl, r5, #1
 8015c8e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015c92:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015c96:	b2b6      	uxth	r6, r6
 8015c98:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c9c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015ca0:	ea4a 0707 	orr.w	r7, sl, r7
 8015ca4:	f106 0a01 	add.w	sl, r6, #1
 8015ca8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015cac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015cb0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015cb4:	ea47 070a 	orr.w	r7, r7, sl
 8015cb8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015cbc:	e7b5      	b.n	8015c2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8015cbe:	b005      	add	sp, #20
 8015cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cc4:	fffff800 	.word	0xfffff800

08015cc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ccc:	b087      	sub	sp, #28
 8015cce:	468b      	mov	fp, r1
 8015cd0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015cd2:	9204      	str	r2, [sp, #16]
 8015cd4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015cd8:	9205      	str	r2, [sp, #20]
 8015cda:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8015cde:	6861      	ldr	r1, [r4, #4]
 8015ce0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015ce4:	fb01 2000 	mla	r0, r1, r0, r2
 8015ce8:	6822      	ldr	r2, [r4, #0]
 8015cea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015cee:	f8de 2000 	ldr.w	r2, [lr]
 8015cf2:	9201      	str	r2, [sp, #4]
 8015cf4:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015cf8:	9202      	str	r2, [sp, #8]
 8015cfa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015cfe:	f1bb 0f00 	cmp.w	fp, #0
 8015d02:	dc03      	bgt.n	8015d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015d04:	9a04      	ldr	r2, [sp, #16]
 8015d06:	2a00      	cmp	r2, #0
 8015d08:	f340 8142 	ble.w	8015f90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015d0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015d0e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015d12:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015d16:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015d1a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015d1c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015d20:	2b00      	cmp	r3, #0
 8015d22:	dd0e      	ble.n	8015d42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015d24:	140c      	asrs	r4, r1, #16
 8015d26:	d405      	bmi.n	8015d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015d28:	42bc      	cmp	r4, r7
 8015d2a:	da03      	bge.n	8015d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015d2c:	1414      	asrs	r4, r2, #16
 8015d2e:	d401      	bmi.n	8015d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015d30:	42b4      	cmp	r4, r6
 8015d32:	db07      	blt.n	8015d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015d34:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015d36:	4421      	add	r1, r4
 8015d38:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015d3a:	3b01      	subs	r3, #1
 8015d3c:	4422      	add	r2, r4
 8015d3e:	3002      	adds	r0, #2
 8015d40:	e7ee      	b.n	8015d20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015d42:	d019      	beq.n	8015d78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015d44:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015d46:	1e5c      	subs	r4, r3, #1
 8015d48:	fb05 1504 	mla	r5, r5, r4, r1
 8015d4c:	142d      	asrs	r5, r5, #16
 8015d4e:	d409      	bmi.n	8015d64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015d50:	42bd      	cmp	r5, r7
 8015d52:	da07      	bge.n	8015d64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015d54:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015d56:	fb05 2404 	mla	r4, r5, r4, r2
 8015d5a:	1424      	asrs	r4, r4, #16
 8015d5c:	d402      	bmi.n	8015d64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015d5e:	42b4      	cmp	r4, r6
 8015d60:	f2c0 80b1 	blt.w	8015ec6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015d64:	f04f 0800 	mov.w	r8, #0
 8015d68:	eb03 0408 	add.w	r4, r3, r8
 8015d6c:	2c00      	cmp	r4, #0
 8015d6e:	dc3e      	bgt.n	8015dee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015d70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015d78:	f1bb 0f00 	cmp.w	fp, #0
 8015d7c:	f340 8108 	ble.w	8015f90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015d80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015d84:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015d88:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015d8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d8e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015d92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015d96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015d9a:	eeb0 6a62 	vmov.f32	s12, s5
 8015d9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015da2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015da6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015daa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015dae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015db2:	eeb0 6a43 	vmov.f32	s12, s6
 8015db6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015dba:	ee12 2a90 	vmov	r2, s5
 8015dbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015dc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015dc6:	ee13 2a10 	vmov	r2, s6
 8015dca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015dce:	9313      	str	r3, [sp, #76]	; 0x4c
 8015dd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015dd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015dd6:	9a04      	ldr	r2, [sp, #16]
 8015dd8:	9314      	str	r3, [sp, #80]	; 0x50
 8015dda:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015dde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015de0:	eeb0 3a67 	vmov.f32	s6, s15
 8015de4:	bf08      	it	eq
 8015de6:	4613      	moveq	r3, r2
 8015de8:	eef0 2a47 	vmov.f32	s5, s14
 8015dec:	e787      	b.n	8015cfe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015dee:	140e      	asrs	r6, r1, #16
 8015df0:	d462      	bmi.n	8015eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015df2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015df6:	42b5      	cmp	r5, r6
 8015df8:	dd5e      	ble.n	8015eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015dfa:	1417      	asrs	r7, r2, #16
 8015dfc:	d45c      	bmi.n	8015eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015dfe:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015e02:	42bc      	cmp	r4, r7
 8015e04:	dd58      	ble.n	8015eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015e06:	b22d      	sxth	r5, r5
 8015e08:	fb07 6505 	mla	r5, r7, r5, r6
 8015e0c:	9c02      	ldr	r4, [sp, #8]
 8015e0e:	5d66      	ldrb	r6, [r4, r5]
 8015e10:	2e00      	cmp	r6, #0
 8015e12:	d051      	beq.n	8015eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015e14:	9c01      	ldr	r4, [sp, #4]
 8015e16:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015e1a:	f06f 0401 	mvn.w	r4, #1
 8015e1e:	fb04 f408 	mul.w	r4, r4, r8
 8015e22:	9403      	str	r4, [sp, #12]
 8015e24:	5b05      	ldrh	r5, [r0, r4]
 8015e26:	9c05      	ldr	r4, [sp, #20]
 8015e28:	4366      	muls	r6, r4
 8015e2a:	1c74      	adds	r4, r6, #1
 8015e2c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015e30:	1224      	asrs	r4, r4, #8
 8015e32:	b2a7      	uxth	r7, r4
 8015e34:	122e      	asrs	r6, r5, #8
 8015e36:	43e4      	mvns	r4, r4
 8015e38:	b2e4      	uxtb	r4, r4
 8015e3a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015e3e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015e42:	fb16 f604 	smulbb	r6, r6, r4
 8015e46:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015e4a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015e4e:	00ed      	lsls	r5, r5, #3
 8015e50:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015e54:	b2ed      	uxtb	r5, r5
 8015e56:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015e5a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015e5e:	fb15 f504 	smulbb	r5, r5, r4
 8015e62:	fa5f f989 	uxtb.w	r9, r9
 8015e66:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015e6a:	fb09 5507 	mla	r5, r9, r7, r5
 8015e6e:	fb1a fa04 	smulbb	sl, sl, r4
 8015e72:	fa1f fc8c 	uxth.w	ip, ip
 8015e76:	b2ad      	uxth	r5, r5
 8015e78:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015e7c:	fb06 a607 	mla	r6, r6, r7, sl
 8015e80:	f10c 0401 	add.w	r4, ip, #1
 8015e84:	f105 0a01 	add.w	sl, r5, #1
 8015e88:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015e8c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015e90:	b2b6      	uxth	r6, r6
 8015e92:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015e96:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015e9a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015e9e:	f106 0a01 	add.w	sl, r6, #1
 8015ea2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ea6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015eaa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015eae:	9c03      	ldr	r4, [sp, #12]
 8015eb0:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015eb4:	f820 c004 	strh.w	ip, [r0, r4]
 8015eb8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015eba:	4421      	add	r1, r4
 8015ebc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015ebe:	f108 38ff 	add.w	r8, r8, #4294967295
 8015ec2:	4422      	add	r2, r4
 8015ec4:	e750      	b.n	8015d68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015ec6:	f04f 0900 	mov.w	r9, #0
 8015eca:	eba3 0409 	sub.w	r4, r3, r9
 8015ece:	2c00      	cmp	r4, #0
 8015ed0:	f77f af4e 	ble.w	8015d70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015ed4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015ed8:	140d      	asrs	r5, r1, #16
 8015eda:	1414      	asrs	r4, r2, #16
 8015edc:	fb06 5404 	mla	r4, r6, r4, r5
 8015ee0:	9d02      	ldr	r5, [sp, #8]
 8015ee2:	5d2e      	ldrb	r6, [r5, r4]
 8015ee4:	2e00      	cmp	r6, #0
 8015ee6:	d04c      	beq.n	8015f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015ee8:	9d01      	ldr	r5, [sp, #4]
 8015eea:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015eee:	9c05      	ldr	r4, [sp, #20]
 8015ef0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015ef4:	4366      	muls	r6, r4
 8015ef6:	1c74      	adds	r4, r6, #1
 8015ef8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015efc:	1224      	asrs	r4, r4, #8
 8015efe:	b2a7      	uxth	r7, r4
 8015f00:	122e      	asrs	r6, r5, #8
 8015f02:	43e4      	mvns	r4, r4
 8015f04:	b2e4      	uxtb	r4, r4
 8015f06:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015f0a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015f0e:	fb16 f604 	smulbb	r6, r6, r4
 8015f12:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015f16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015f1a:	00ed      	lsls	r5, r5, #3
 8015f1c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015f20:	b2ed      	uxtb	r5, r5
 8015f22:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015f26:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015f2a:	fb15 f504 	smulbb	r5, r5, r4
 8015f2e:	fa5f f888 	uxtb.w	r8, r8
 8015f32:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015f36:	fb08 5507 	mla	r5, r8, r7, r5
 8015f3a:	fb1a fa04 	smulbb	sl, sl, r4
 8015f3e:	fa1f fc8c 	uxth.w	ip, ip
 8015f42:	b2ad      	uxth	r5, r5
 8015f44:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015f48:	fb06 a607 	mla	r6, r6, r7, sl
 8015f4c:	f10c 0401 	add.w	r4, ip, #1
 8015f50:	f105 0a01 	add.w	sl, r5, #1
 8015f54:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015f58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015f5c:	b2b6      	uxth	r6, r6
 8015f5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015f62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015f66:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015f6a:	f106 0a01 	add.w	sl, r6, #1
 8015f6e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015f72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f7a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015f7e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015f82:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015f84:	4421      	add	r1, r4
 8015f86:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015f88:	f109 0901 	add.w	r9, r9, #1
 8015f8c:	4422      	add	r2, r4
 8015f8e:	e79c      	b.n	8015eca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015f90:	b007      	add	sp, #28
 8015f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015f96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f9a:	b085      	sub	sp, #20
 8015f9c:	468b      	mov	fp, r1
 8015f9e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015fa0:	9203      	str	r2, [sp, #12]
 8015fa2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015fa6:	6861      	ldr	r1, [r4, #4]
 8015fa8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015fac:	fb01 2000 	mla	r0, r1, r0, r2
 8015fb0:	6822      	ldr	r2, [r4, #0]
 8015fb2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015fb6:	f8d8 2000 	ldr.w	r2, [r8]
 8015fba:	9200      	str	r2, [sp, #0]
 8015fbc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015fc0:	9201      	str	r2, [sp, #4]
 8015fc2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015fc6:	f1bb 0f00 	cmp.w	fp, #0
 8015fca:	dc03      	bgt.n	8015fd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015fcc:	9a03      	ldr	r2, [sp, #12]
 8015fce:	2a00      	cmp	r2, #0
 8015fd0:	f340 8146 	ble.w	8016260 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015fd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015fd6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015fda:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015fde:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015fe2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015fe4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015fe8:	2b00      	cmp	r3, #0
 8015fea:	dd0e      	ble.n	801600a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015fec:	140c      	asrs	r4, r1, #16
 8015fee:	d405      	bmi.n	8015ffc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015ff0:	42bc      	cmp	r4, r7
 8015ff2:	da03      	bge.n	8015ffc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015ff4:	1414      	asrs	r4, r2, #16
 8015ff6:	d401      	bmi.n	8015ffc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015ff8:	42b4      	cmp	r4, r6
 8015ffa:	db07      	blt.n	801600c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015ffc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015ffe:	4421      	add	r1, r4
 8016000:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016002:	3b01      	subs	r3, #1
 8016004:	4422      	add	r2, r4
 8016006:	3002      	adds	r0, #2
 8016008:	e7ee      	b.n	8015fe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801600a:	d017      	beq.n	801603c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801600c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801600e:	1e5c      	subs	r4, r3, #1
 8016010:	fb05 1504 	mla	r5, r5, r4, r1
 8016014:	142d      	asrs	r5, r5, #16
 8016016:	d409      	bmi.n	801602c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016018:	42bd      	cmp	r5, r7
 801601a:	da07      	bge.n	801602c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801601c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801601e:	fb05 2404 	mla	r4, r5, r4, r2
 8016022:	1424      	asrs	r4, r4, #16
 8016024:	d402      	bmi.n	801602c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016026:	42b4      	cmp	r4, r6
 8016028:	f2c0 80b3 	blt.w	8016192 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801602c:	2600      	movs	r6, #0
 801602e:	199c      	adds	r4, r3, r6
 8016030:	2c00      	cmp	r4, #0
 8016032:	dc3e      	bgt.n	80160b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016034:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016038:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801603c:	f1bb 0f00 	cmp.w	fp, #0
 8016040:	f340 810e 	ble.w	8016260 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016044:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016048:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801604c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016050:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016052:	f1bb 0b01 	subs.w	fp, fp, #1
 8016056:	ee31 1a05 	vadd.f32	s2, s2, s10
 801605a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801605e:	eeb0 6a62 	vmov.f32	s12, s5
 8016062:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016066:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801606a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801606e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016072:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016076:	eeb0 6a43 	vmov.f32	s12, s6
 801607a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801607e:	ee12 2a90 	vmov	r2, s5
 8016082:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016086:	fb92 f3f3 	sdiv	r3, r2, r3
 801608a:	ee13 2a10 	vmov	r2, s6
 801608e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016092:	9311      	str	r3, [sp, #68]	; 0x44
 8016094:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016096:	fb92 f3f3 	sdiv	r3, r2, r3
 801609a:	9a03      	ldr	r2, [sp, #12]
 801609c:	9312      	str	r3, [sp, #72]	; 0x48
 801609e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80160a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160a4:	eeb0 3a67 	vmov.f32	s6, s15
 80160a8:	bf08      	it	eq
 80160aa:	4613      	moveq	r3, r2
 80160ac:	eef0 2a47 	vmov.f32	s5, s14
 80160b0:	e789      	b.n	8015fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80160b2:	140f      	asrs	r7, r1, #16
 80160b4:	d418      	bmi.n	80160e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80160b6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80160ba:	42bd      	cmp	r5, r7
 80160bc:	dd14      	ble.n	80160e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80160be:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80160c2:	d411      	bmi.n	80160e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80160c4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80160c8:	4564      	cmp	r4, ip
 80160ca:	dd0d      	ble.n	80160e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80160cc:	b22d      	sxth	r5, r5
 80160ce:	fb0c 7505 	mla	r5, ip, r5, r7
 80160d2:	9c01      	ldr	r4, [sp, #4]
 80160d4:	5d64      	ldrb	r4, [r4, r5]
 80160d6:	2cff      	cmp	r4, #255	; 0xff
 80160d8:	d10c      	bne.n	80160f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80160da:	9c00      	ldr	r4, [sp, #0]
 80160dc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80160e0:	f06f 0401 	mvn.w	r4, #1
 80160e4:	4374      	muls	r4, r6
 80160e6:	5305      	strh	r5, [r0, r4]
 80160e8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80160ea:	4421      	add	r1, r4
 80160ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80160ee:	3e01      	subs	r6, #1
 80160f0:	4422      	add	r2, r4
 80160f2:	e79c      	b.n	801602e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80160f4:	2c00      	cmp	r4, #0
 80160f6:	d0f7      	beq.n	80160e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80160f8:	9f00      	ldr	r7, [sp, #0]
 80160fa:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80160fe:	f06f 0501 	mvn.w	r5, #1
 8016102:	4375      	muls	r5, r6
 8016104:	9502      	str	r5, [sp, #8]
 8016106:	5b45      	ldrh	r5, [r0, r5]
 8016108:	fa1f fc84 	uxth.w	ip, r4
 801610c:	122f      	asrs	r7, r5, #8
 801610e:	43e4      	mvns	r4, r4
 8016110:	b2e4      	uxtb	r4, r4
 8016112:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8016116:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801611a:	fb17 f704 	smulbb	r7, r7, r4
 801611e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016122:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016126:	00ed      	lsls	r5, r5, #3
 8016128:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801612c:	b2ed      	uxtb	r5, r5
 801612e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8016132:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016136:	fb15 f504 	smulbb	r5, r5, r4
 801613a:	fa5f f989 	uxtb.w	r9, r9
 801613e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016142:	fb09 550c 	mla	r5, r9, ip, r5
 8016146:	fb1a fa04 	smulbb	sl, sl, r4
 801614a:	fa1f fe8e 	uxth.w	lr, lr
 801614e:	b2ad      	uxth	r5, r5
 8016150:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016154:	fb07 a70c 	mla	r7, r7, ip, sl
 8016158:	f10e 0401 	add.w	r4, lr, #1
 801615c:	f105 0a01 	add.w	sl, r5, #1
 8016160:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8016164:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016168:	b2bf      	uxth	r7, r7
 801616a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801616e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016172:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016176:	f107 0a01 	add.w	sl, r7, #1
 801617a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801617e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016182:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016186:	9c02      	ldr	r4, [sp, #8]
 8016188:	ea4e 0e0a 	orr.w	lr, lr, sl
 801618c:	f820 e004 	strh.w	lr, [r0, r4]
 8016190:	e7aa      	b.n	80160e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016192:	f04f 0900 	mov.w	r9, #0
 8016196:	eba3 0409 	sub.w	r4, r3, r9
 801619a:	2c00      	cmp	r4, #0
 801619c:	f77f af4a 	ble.w	8016034 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80161a0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80161a4:	1414      	asrs	r4, r2, #16
 80161a6:	140d      	asrs	r5, r1, #16
 80161a8:	fb06 5504 	mla	r5, r6, r4, r5
 80161ac:	9c01      	ldr	r4, [sp, #4]
 80161ae:	5d64      	ldrb	r4, [r4, r5]
 80161b0:	2cff      	cmp	r4, #255	; 0xff
 80161b2:	d10b      	bne.n	80161cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80161b4:	9c00      	ldr	r4, [sp, #0]
 80161b6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80161ba:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80161be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80161c0:	4421      	add	r1, r4
 80161c2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80161c4:	f109 0901 	add.w	r9, r9, #1
 80161c8:	4422      	add	r2, r4
 80161ca:	e7e4      	b.n	8016196 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80161cc:	2c00      	cmp	r4, #0
 80161ce:	d0f6      	beq.n	80161be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80161d0:	9e00      	ldr	r6, [sp, #0]
 80161d2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80161d6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80161da:	b2a7      	uxth	r7, r4
 80161dc:	122e      	asrs	r6, r5, #8
 80161de:	43e4      	mvns	r4, r4
 80161e0:	b2e4      	uxtb	r4, r4
 80161e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80161e6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80161ea:	fb16 f604 	smulbb	r6, r6, r4
 80161ee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80161f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80161f6:	00ed      	lsls	r5, r5, #3
 80161f8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80161fc:	b2ed      	uxtb	r5, r5
 80161fe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016202:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016206:	fb15 f504 	smulbb	r5, r5, r4
 801620a:	fa5f fe8e 	uxtb.w	lr, lr
 801620e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016212:	fb0e 5507 	mla	r5, lr, r7, r5
 8016216:	fb1a fa04 	smulbb	sl, sl, r4
 801621a:	fa1f fc8c 	uxth.w	ip, ip
 801621e:	b2ad      	uxth	r5, r5
 8016220:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016224:	fb06 a607 	mla	r6, r6, r7, sl
 8016228:	f10c 0401 	add.w	r4, ip, #1
 801622c:	f105 0a01 	add.w	sl, r5, #1
 8016230:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016234:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016238:	b2b6      	uxth	r6, r6
 801623a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801623e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016242:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016246:	f106 0a01 	add.w	sl, r6, #1
 801624a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801624e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016252:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016256:	ea4c 0c0a 	orr.w	ip, ip, sl
 801625a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801625e:	e7ae      	b.n	80161be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016260:	b005      	add	sp, #20
 8016262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016266 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801626a:	b085      	sub	sp, #20
 801626c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801626e:	9203      	str	r2, [sp, #12]
 8016270:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8016274:	9201      	str	r2, [sp, #4]
 8016276:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801627a:	9100      	str	r1, [sp, #0]
 801627c:	6841      	ldr	r1, [r0, #4]
 801627e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8016282:	fb01 2404 	mla	r4, r1, r4, r2
 8016286:	6802      	ldr	r2, [r0, #0]
 8016288:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801628c:	f8de 2000 	ldr.w	r2, [lr]
 8016290:	9202      	str	r2, [sp, #8]
 8016292:	9a01      	ldr	r2, [sp, #4]
 8016294:	43d6      	mvns	r6, r2
 8016296:	b2f6      	uxtb	r6, r6
 8016298:	9a00      	ldr	r2, [sp, #0]
 801629a:	2a00      	cmp	r2, #0
 801629c:	dc03      	bgt.n	80162a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801629e:	9a03      	ldr	r2, [sp, #12]
 80162a0:	2a00      	cmp	r2, #0
 80162a2:	f340 8124 	ble.w	80164ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80162a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80162a8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80162ac:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80162b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80162b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80162b6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80162ba:	2b00      	cmp	r3, #0
 80162bc:	dd0e      	ble.n	80162dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80162be:	1408      	asrs	r0, r1, #16
 80162c0:	d405      	bmi.n	80162ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80162c2:	4560      	cmp	r0, ip
 80162c4:	da03      	bge.n	80162ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80162c6:	1410      	asrs	r0, r2, #16
 80162c8:	d401      	bmi.n	80162ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80162ca:	42b8      	cmp	r0, r7
 80162cc:	db07      	blt.n	80162de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80162ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 80162d0:	4401      	add	r1, r0
 80162d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80162d4:	3b01      	subs	r3, #1
 80162d6:	4402      	add	r2, r0
 80162d8:	3402      	adds	r4, #2
 80162da:	e7ee      	b.n	80162ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80162dc:	d06e      	beq.n	80163bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80162de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80162e0:	1e58      	subs	r0, r3, #1
 80162e2:	fb05 1500 	mla	r5, r5, r0, r1
 80162e6:	142d      	asrs	r5, r5, #16
 80162e8:	d45c      	bmi.n	80163a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80162ea:	4565      	cmp	r5, ip
 80162ec:	da5a      	bge.n	80163a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80162ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80162f0:	fb05 2000 	mla	r0, r5, r0, r2
 80162f4:	1400      	asrs	r0, r0, #16
 80162f6:	d455      	bmi.n	80163a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80162f8:	42b8      	cmp	r0, r7
 80162fa:	da53      	bge.n	80163a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80162fc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8016300:	4699      	mov	r9, r3
 8016302:	46a2      	mov	sl, r4
 8016304:	f1b9 0f00 	cmp.w	r9, #0
 8016308:	dd54      	ble.n	80163b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801630a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801630e:	140d      	asrs	r5, r1, #16
 8016310:	1410      	asrs	r0, r2, #16
 8016312:	fb07 5000 	mla	r0, r7, r0, r5
 8016316:	9d02      	ldr	r5, [sp, #8]
 8016318:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801631c:	f8ba 5000 	ldrh.w	r5, [sl]
 8016320:	122f      	asrs	r7, r5, #8
 8016322:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016326:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801632a:	fb17 f706 	smulbb	r7, r7, r6
 801632e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016332:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016336:	00ed      	lsls	r5, r5, #3
 8016338:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801633c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8016340:	10c7      	asrs	r7, r0, #3
 8016342:	b2ed      	uxtb	r5, r5
 8016344:	00c0      	lsls	r0, r0, #3
 8016346:	fb18 f806 	smulbb	r8, r8, r6
 801634a:	fb15 f506 	smulbb	r5, r5, r6
 801634e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016352:	b2c0      	uxtb	r0, r0
 8016354:	fa1f fc8c 	uxth.w	ip, ip
 8016358:	fb07 870b 	mla	r7, r7, fp, r8
 801635c:	fb00 500b 	mla	r0, r0, fp, r5
 8016360:	b280      	uxth	r0, r0
 8016362:	b2bf      	uxth	r7, r7
 8016364:	f10c 0501 	add.w	r5, ip, #1
 8016368:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801636c:	f107 0801 	add.w	r8, r7, #1
 8016370:	1c45      	adds	r5, r0, #1
 8016372:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016376:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801637a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801637c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016380:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016384:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016388:	ea45 0c0c 	orr.w	ip, r5, ip
 801638c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016390:	4401      	add	r1, r0
 8016392:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016394:	ea4c 0c08 	orr.w	ip, ip, r8
 8016398:	f82a cb02 	strh.w	ip, [sl], #2
 801639c:	4402      	add	r2, r0
 801639e:	f109 39ff 	add.w	r9, r9, #4294967295
 80163a2:	e7af      	b.n	8016304 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80163a4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80163a8:	f04f 0800 	mov.w	r8, #0
 80163ac:	eb03 0008 	add.w	r0, r3, r8
 80163b0:	2800      	cmp	r0, #0
 80163b2:	dc41      	bgt.n	8016438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80163b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80163b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80163bc:	9b00      	ldr	r3, [sp, #0]
 80163be:	2b00      	cmp	r3, #0
 80163c0:	f340 8095 	ble.w	80164ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80163c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80163c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80163cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80163d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80163d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80163d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80163da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80163de:	eef0 6a62 	vmov.f32	s13, s5
 80163e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80163e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80163ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 80163ee:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80163f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80163f6:	eef0 6a43 	vmov.f32	s13, s6
 80163fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80163fe:	ee12 2a90 	vmov	r2, s5
 8016402:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016406:	fb92 f3f3 	sdiv	r3, r2, r3
 801640a:	ee13 2a10 	vmov	r2, s6
 801640e:	9311      	str	r3, [sp, #68]	; 0x44
 8016410:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016412:	fb92 f3f3 	sdiv	r3, r2, r3
 8016416:	9312      	str	r3, [sp, #72]	; 0x48
 8016418:	9b00      	ldr	r3, [sp, #0]
 801641a:	9a03      	ldr	r2, [sp, #12]
 801641c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016420:	3b01      	subs	r3, #1
 8016422:	9300      	str	r3, [sp, #0]
 8016424:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8016428:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801642a:	eeb0 3a67 	vmov.f32	s6, s15
 801642e:	bf08      	it	eq
 8016430:	4613      	moveq	r3, r2
 8016432:	eef0 2a47 	vmov.f32	s5, s14
 8016436:	e72f      	b.n	8016298 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016438:	140f      	asrs	r7, r1, #16
 801643a:	d451      	bmi.n	80164e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801643c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016440:	42bd      	cmp	r5, r7
 8016442:	dd4d      	ble.n	80164e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016444:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016448:	d44a      	bmi.n	80164e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801644a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801644e:	4560      	cmp	r0, ip
 8016450:	dd46      	ble.n	80164e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016452:	b22d      	sxth	r5, r5
 8016454:	fb0c 7505 	mla	r5, ip, r5, r7
 8016458:	9802      	ldr	r0, [sp, #8]
 801645a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801645e:	f06f 0501 	mvn.w	r5, #1
 8016462:	fb05 fb08 	mul.w	fp, r5, r8
 8016466:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801646a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801646e:	122f      	asrs	r7, r5, #8
 8016470:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016474:	fb17 f706 	smulbb	r7, r7, r6
 8016478:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801647c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016480:	00ed      	lsls	r5, r5, #3
 8016482:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016486:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801648a:	10c7      	asrs	r7, r0, #3
 801648c:	b2ed      	uxtb	r5, r5
 801648e:	00c0      	lsls	r0, r0, #3
 8016490:	fb19 f906 	smulbb	r9, r9, r6
 8016494:	fb15 f506 	smulbb	r5, r5, r6
 8016498:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801649c:	b2c0      	uxtb	r0, r0
 801649e:	fa1f fc8c 	uxth.w	ip, ip
 80164a2:	fb07 970a 	mla	r7, r7, sl, r9
 80164a6:	fb00 500a 	mla	r0, r0, sl, r5
 80164aa:	b2bf      	uxth	r7, r7
 80164ac:	b280      	uxth	r0, r0
 80164ae:	f10c 0501 	add.w	r5, ip, #1
 80164b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80164b6:	f107 0901 	add.w	r9, r7, #1
 80164ba:	1c45      	adds	r5, r0, #1
 80164bc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80164c0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80164c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80164c8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80164cc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80164d0:	ea45 0c0c 	orr.w	ip, r5, ip
 80164d4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80164d8:	ea4c 0c09 	orr.w	ip, ip, r9
 80164dc:	f824 c00b 	strh.w	ip, [r4, fp]
 80164e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80164e2:	4401      	add	r1, r0
 80164e4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80164e6:	f108 38ff 	add.w	r8, r8, #4294967295
 80164ea:	4402      	add	r2, r0
 80164ec:	e75e      	b.n	80163ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80164ee:	b005      	add	sp, #20
 80164f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080164f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80164f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164f8:	b085      	sub	sp, #20
 80164fa:	4693      	mov	fp, r2
 80164fc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80164fe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016500:	6870      	ldr	r0, [r6, #4]
 8016502:	9101      	str	r1, [sp, #4]
 8016504:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016508:	fb00 2404 	mla	r4, r0, r4, r2
 801650c:	6832      	ldr	r2, [r6, #0]
 801650e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016512:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016516:	682a      	ldr	r2, [r5, #0]
 8016518:	9202      	str	r2, [sp, #8]
 801651a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801651e:	9a01      	ldr	r2, [sp, #4]
 8016520:	2a00      	cmp	r2, #0
 8016522:	dc03      	bgt.n	801652c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016524:	f1bb 0f00 	cmp.w	fp, #0
 8016528:	f340 809a 	ble.w	8016660 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801652c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801652e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016532:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016536:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801653a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801653c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016540:	2b00      	cmp	r3, #0
 8016542:	dd0c      	ble.n	801655e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016544:	1406      	asrs	r6, r0, #16
 8016546:	d405      	bmi.n	8016554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016548:	454e      	cmp	r6, r9
 801654a:	da03      	bge.n	8016554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801654c:	1416      	asrs	r6, r2, #16
 801654e:	d401      	bmi.n	8016554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016550:	4546      	cmp	r6, r8
 8016552:	db05      	blt.n	8016560 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016554:	4470      	add	r0, lr
 8016556:	4462      	add	r2, ip
 8016558:	3b01      	subs	r3, #1
 801655a:	3402      	adds	r4, #2
 801655c:	e7f0      	b.n	8016540 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801655e:	d00f      	beq.n	8016580 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016560:	1e5e      	subs	r6, r3, #1
 8016562:	fb0e 0706 	mla	r7, lr, r6, r0
 8016566:	143f      	asrs	r7, r7, #16
 8016568:	d541      	bpl.n	80165ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801656a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801656e:	4698      	mov	r8, r3
 8016570:	9603      	str	r6, [sp, #12]
 8016572:	f1b8 0f00 	cmp.w	r8, #0
 8016576:	dc56      	bgt.n	8016626 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016578:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801657c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016580:	9b01      	ldr	r3, [sp, #4]
 8016582:	2b00      	cmp	r3, #0
 8016584:	dd6c      	ble.n	8016660 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016586:	ee30 0a04 	vadd.f32	s0, s0, s8
 801658a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801658e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016592:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016594:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016598:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801659c:	eeb0 6a62 	vmov.f32	s12, s5
 80165a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80165a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80165a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80165ac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80165b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80165b4:	eeb0 6a43 	vmov.f32	s12, s6
 80165b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80165bc:	ee12 2a90 	vmov	r2, s5
 80165c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80165c4:	fb92 fef3 	sdiv	lr, r2, r3
 80165c8:	ee13 2a10 	vmov	r2, s6
 80165cc:	fb92 fcf3 	sdiv	ip, r2, r3
 80165d0:	9b01      	ldr	r3, [sp, #4]
 80165d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80165d6:	3b01      	subs	r3, #1
 80165d8:	9301      	str	r3, [sp, #4]
 80165da:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80165de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80165e0:	eeb0 3a67 	vmov.f32	s6, s15
 80165e4:	bf08      	it	eq
 80165e6:	465b      	moveq	r3, fp
 80165e8:	eef0 2a47 	vmov.f32	s5, s14
 80165ec:	e797      	b.n	801651e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80165ee:	454f      	cmp	r7, r9
 80165f0:	dabb      	bge.n	801656a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80165f2:	fb0c 2606 	mla	r6, ip, r6, r2
 80165f6:	1436      	asrs	r6, r6, #16
 80165f8:	d4b7      	bmi.n	801656a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80165fa:	4546      	cmp	r6, r8
 80165fc:	dab5      	bge.n	801656a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80165fe:	461e      	mov	r6, r3
 8016600:	46a0      	mov	r8, r4
 8016602:	2e00      	cmp	r6, #0
 8016604:	ddb8      	ble.n	8016578 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016606:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801660a:	9902      	ldr	r1, [sp, #8]
 801660c:	1417      	asrs	r7, r2, #16
 801660e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016612:	fb0a 9707 	mla	r7, sl, r7, r9
 8016616:	4470      	add	r0, lr
 8016618:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801661c:	f828 7b02 	strh.w	r7, [r8], #2
 8016620:	4462      	add	r2, ip
 8016622:	3e01      	subs	r6, #1
 8016624:	e7ed      	b.n	8016602 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016626:	ea5f 4920 	movs.w	r9, r0, asr #16
 801662a:	d414      	bmi.n	8016656 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801662c:	68ae      	ldr	r6, [r5, #8]
 801662e:	454e      	cmp	r6, r9
 8016630:	dd11      	ble.n	8016656 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016632:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016636:	d40e      	bmi.n	8016656 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016638:	68ef      	ldr	r7, [r5, #12]
 801663a:	4557      	cmp	r7, sl
 801663c:	dd0b      	ble.n	8016656 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801663e:	b236      	sxth	r6, r6
 8016640:	fb0a 9606 	mla	r6, sl, r6, r9
 8016644:	9f02      	ldr	r7, [sp, #8]
 8016646:	f06f 0101 	mvn.w	r1, #1
 801664a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801664e:	fb01 f608 	mul.w	r6, r1, r8
 8016652:	9903      	ldr	r1, [sp, #12]
 8016654:	538f      	strh	r7, [r1, r6]
 8016656:	4470      	add	r0, lr
 8016658:	4462      	add	r2, ip
 801665a:	f108 38ff 	add.w	r8, r8, #4294967295
 801665e:	e788      	b.n	8016572 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016660:	b005      	add	sp, #20
 8016662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016666 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016666:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801666a:	b087      	sub	sp, #28
 801666c:	468b      	mov	fp, r1
 801666e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016670:	9203      	str	r2, [sp, #12]
 8016672:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016676:	9204      	str	r2, [sp, #16]
 8016678:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801667c:	6841      	ldr	r1, [r0, #4]
 801667e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016682:	fb01 2505 	mla	r5, r1, r5, r2
 8016686:	6802      	ldr	r2, [r0, #0]
 8016688:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801668c:	f8d9 2000 	ldr.w	r2, [r9]
 8016690:	9201      	str	r2, [sp, #4]
 8016692:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016696:	f1bb 0f00 	cmp.w	fp, #0
 801669a:	dc03      	bgt.n	80166a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801669c:	9a03      	ldr	r2, [sp, #12]
 801669e:	2a00      	cmp	r2, #0
 80166a0:	f340 8159 	ble.w	8016956 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80166a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80166a6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80166aa:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80166ae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80166b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80166b4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80166b8:	2b00      	cmp	r3, #0
 80166ba:	dd0e      	ble.n	80166da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80166bc:	1402      	asrs	r2, r0, #16
 80166be:	d405      	bmi.n	80166cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80166c0:	42ba      	cmp	r2, r7
 80166c2:	da03      	bge.n	80166cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80166c4:	140a      	asrs	r2, r1, #16
 80166c6:	d401      	bmi.n	80166cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80166c8:	42b2      	cmp	r2, r6
 80166ca:	db07      	blt.n	80166dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80166cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80166ce:	4410      	add	r0, r2
 80166d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80166d2:	3b01      	subs	r3, #1
 80166d4:	4411      	add	r1, r2
 80166d6:	3502      	adds	r5, #2
 80166d8:	e7ee      	b.n	80166b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80166da:	d017      	beq.n	801670c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80166dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80166de:	1e5a      	subs	r2, r3, #1
 80166e0:	fb04 0402 	mla	r4, r4, r2, r0
 80166e4:	1424      	asrs	r4, r4, #16
 80166e6:	d409      	bmi.n	80166fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80166e8:	42bc      	cmp	r4, r7
 80166ea:	da07      	bge.n	80166fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80166ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80166ee:	fb04 1202 	mla	r2, r4, r2, r1
 80166f2:	1412      	asrs	r2, r2, #16
 80166f4:	d402      	bmi.n	80166fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80166f6:	42b2      	cmp	r2, r6
 80166f8:	f2c0 80bf 	blt.w	801687a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80166fc:	2700      	movs	r7, #0
 80166fe:	19da      	adds	r2, r3, r7
 8016700:	2a00      	cmp	r2, #0
 8016702:	dc3e      	bgt.n	8016782 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016704:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016708:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801670c:	f1bb 0f00 	cmp.w	fp, #0
 8016710:	f340 8121 	ble.w	8016956 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016714:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016718:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801671c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016720:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016722:	f1bb 0b01 	subs.w	fp, fp, #1
 8016726:	ee31 1a05 	vadd.f32	s2, s2, s10
 801672a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801672e:	eeb0 6a62 	vmov.f32	s12, s5
 8016732:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016736:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801673a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801673e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016742:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016746:	eeb0 6a43 	vmov.f32	s12, s6
 801674a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801674e:	ee12 2a90 	vmov	r2, s5
 8016752:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016756:	fb92 f3f3 	sdiv	r3, r2, r3
 801675a:	ee13 2a10 	vmov	r2, s6
 801675e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016762:	9313      	str	r3, [sp, #76]	; 0x4c
 8016764:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016766:	fb92 f3f3 	sdiv	r3, r2, r3
 801676a:	9a03      	ldr	r2, [sp, #12]
 801676c:	9314      	str	r3, [sp, #80]	; 0x50
 801676e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016772:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016774:	eeb0 3a67 	vmov.f32	s6, s15
 8016778:	bf08      	it	eq
 801677a:	4613      	moveq	r3, r2
 801677c:	eef0 2a47 	vmov.f32	s5, s14
 8016780:	e789      	b.n	8016696 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016782:	1406      	asrs	r6, r0, #16
 8016784:	d42d      	bmi.n	80167e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016786:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801678a:	42b4      	cmp	r4, r6
 801678c:	dd29      	ble.n	80167e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801678e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8016792:	d426      	bmi.n	80167e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016794:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016798:	4562      	cmp	r2, ip
 801679a:	dd22      	ble.n	80167e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801679c:	b224      	sxth	r4, r4
 801679e:	9a01      	ldr	r2, [sp, #4]
 80167a0:	fb0c 6404 	mla	r4, ip, r4, r6
 80167a4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80167a8:	0e22      	lsrs	r2, r4, #24
 80167aa:	d01a      	beq.n	80167e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80167ac:	9e04      	ldr	r6, [sp, #16]
 80167ae:	4372      	muls	r2, r6
 80167b0:	1c56      	adds	r6, r2, #1
 80167b2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80167b6:	1212      	asrs	r2, r2, #8
 80167b8:	0a26      	lsrs	r6, r4, #8
 80167ba:	2aff      	cmp	r2, #255	; 0xff
 80167bc:	9605      	str	r6, [sp, #20]
 80167be:	d116      	bne.n	80167ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80167c0:	f06f 0201 	mvn.w	r2, #1
 80167c4:	fb02 fc07 	mul.w	ip, r2, r7
 80167c8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80167cc:	0962      	lsrs	r2, r4, #5
 80167ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80167d2:	f026 0607 	bic.w	r6, r6, #7
 80167d6:	4316      	orrs	r6, r2
 80167d8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80167dc:	4326      	orrs	r6, r4
 80167de:	f825 600c 	strh.w	r6, [r5, ip]
 80167e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167e4:	4410      	add	r0, r2
 80167e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167e8:	3f01      	subs	r7, #1
 80167ea:	4411      	add	r1, r2
 80167ec:	e787      	b.n	80166fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80167ee:	f06f 0601 	mvn.w	r6, #1
 80167f2:	437e      	muls	r6, r7
 80167f4:	fa1f fa82 	uxth.w	sl, r2
 80167f8:	f835 8006 	ldrh.w	r8, [r5, r6]
 80167fc:	9602      	str	r6, [sp, #8]
 80167fe:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016802:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016806:	43d2      	mvns	r2, r2
 8016808:	b2d2      	uxtb	r2, r2
 801680a:	fb1c fc0a 	smulbb	ip, ip, sl
 801680e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016812:	fb0e ce02 	mla	lr, lr, r2, ip
 8016816:	b2e4      	uxtb	r4, r4
 8016818:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801681c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016820:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016824:	fa5f f888 	uxtb.w	r8, r8
 8016828:	fb14 f40a 	smulbb	r4, r4, sl
 801682c:	fb08 4402 	mla	r4, r8, r2, r4
 8016830:	fa1f fe8e 	uxth.w	lr, lr
 8016834:	fb16 f60a 	smulbb	r6, r6, sl
 8016838:	b2a4      	uxth	r4, r4
 801683a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801683e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016842:	f10e 0201 	add.w	r2, lr, #1
 8016846:	1c66      	adds	r6, r4, #1
 8016848:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801684c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016850:	fa1f fc8c 	uxth.w	ip, ip
 8016854:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016858:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801685c:	ea46 0e0e 	orr.w	lr, r6, lr
 8016860:	f10c 0601 	add.w	r6, ip, #1
 8016864:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016868:	0976      	lsrs	r6, r6, #5
 801686a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801686e:	9a02      	ldr	r2, [sp, #8]
 8016870:	ea4e 0e06 	orr.w	lr, lr, r6
 8016874:	f825 e002 	strh.w	lr, [r5, r2]
 8016878:	e7b3      	b.n	80167e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801687a:	f04f 0800 	mov.w	r8, #0
 801687e:	eba3 0208 	sub.w	r2, r3, r8
 8016882:	2a00      	cmp	r2, #0
 8016884:	f77f af3e 	ble.w	8016704 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016888:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801688c:	1404      	asrs	r4, r0, #16
 801688e:	140a      	asrs	r2, r1, #16
 8016890:	fb06 4202 	mla	r2, r6, r2, r4
 8016894:	9c01      	ldr	r4, [sp, #4]
 8016896:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801689a:	0e22      	lsrs	r2, r4, #24
 801689c:	d016      	beq.n	80168cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801689e:	9e04      	ldr	r6, [sp, #16]
 80168a0:	4372      	muls	r2, r6
 80168a2:	1c56      	adds	r6, r2, #1
 80168a4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80168a8:	1212      	asrs	r2, r2, #8
 80168aa:	2aff      	cmp	r2, #255	; 0xff
 80168ac:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80168b0:	d113      	bne.n	80168da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80168b2:	0962      	lsrs	r2, r4, #5
 80168b4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80168b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80168bc:	f026 0607 	bic.w	r6, r6, #7
 80168c0:	4316      	orrs	r6, r2
 80168c2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80168c6:	4326      	orrs	r6, r4
 80168c8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80168cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168ce:	4410      	add	r0, r2
 80168d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168d2:	f108 0801 	add.w	r8, r8, #1
 80168d6:	4411      	add	r1, r2
 80168d8:	e7d1      	b.n	801687e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80168da:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80168de:	fa1f fa82 	uxth.w	sl, r2
 80168e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80168e6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80168ea:	43d2      	mvns	r2, r2
 80168ec:	b2d2      	uxtb	r2, r2
 80168ee:	fb17 f70a 	smulbb	r7, r7, sl
 80168f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80168f6:	fb0c 7c02 	mla	ip, ip, r2, r7
 80168fa:	b2e4      	uxtb	r4, r4
 80168fc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016900:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016904:	fa5f fe8e 	uxtb.w	lr, lr
 8016908:	fb14 f40a 	smulbb	r4, r4, sl
 801690c:	fb0e 4402 	mla	r4, lr, r2, r4
 8016910:	b2f6      	uxtb	r6, r6
 8016912:	fa1f fc8c 	uxth.w	ip, ip
 8016916:	fb16 f60a 	smulbb	r6, r6, sl
 801691a:	b2a4      	uxth	r4, r4
 801691c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016920:	fb07 6702 	mla	r7, r7, r2, r6
 8016924:	f10c 0201 	add.w	r2, ip, #1
 8016928:	1c66      	adds	r6, r4, #1
 801692a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801692e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016932:	b2bf      	uxth	r7, r7
 8016934:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016938:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801693c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016940:	1c7e      	adds	r6, r7, #1
 8016942:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016946:	0976      	lsrs	r6, r6, #5
 8016948:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801694c:	ea4c 0c06 	orr.w	ip, ip, r6
 8016950:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016954:	e7ba      	b.n	80168cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016956:	b007      	add	sp, #28
 8016958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801695c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801695c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016960:	b085      	sub	sp, #20
 8016962:	468b      	mov	fp, r1
 8016964:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016966:	9203      	str	r2, [sp, #12]
 8016968:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801696c:	6841      	ldr	r1, [r0, #4]
 801696e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8016972:	fb01 2404 	mla	r4, r1, r4, r2
 8016976:	6802      	ldr	r2, [r0, #0]
 8016978:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801697c:	f8d8 2000 	ldr.w	r2, [r8]
 8016980:	9201      	str	r2, [sp, #4]
 8016982:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016986:	f1bb 0f00 	cmp.w	fp, #0
 801698a:	dc03      	bgt.n	8016994 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801698c:	9a03      	ldr	r2, [sp, #12]
 801698e:	2a00      	cmp	r2, #0
 8016990:	f340 814f 	ble.w	8016c32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016994:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016996:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801699a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801699e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80169a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80169a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80169a8:	2b00      	cmp	r3, #0
 80169aa:	dd0e      	ble.n	80169ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80169ac:	1408      	asrs	r0, r1, #16
 80169ae:	d405      	bmi.n	80169bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80169b0:	42b8      	cmp	r0, r7
 80169b2:	da03      	bge.n	80169bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80169b4:	1410      	asrs	r0, r2, #16
 80169b6:	d401      	bmi.n	80169bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80169b8:	42b0      	cmp	r0, r6
 80169ba:	db07      	blt.n	80169cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80169bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80169be:	4401      	add	r1, r0
 80169c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80169c2:	3b01      	subs	r3, #1
 80169c4:	4402      	add	r2, r0
 80169c6:	3402      	adds	r4, #2
 80169c8:	e7ee      	b.n	80169a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80169ca:	d017      	beq.n	80169fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80169cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80169ce:	1e58      	subs	r0, r3, #1
 80169d0:	fb05 1500 	mla	r5, r5, r0, r1
 80169d4:	142d      	asrs	r5, r5, #16
 80169d6:	d409      	bmi.n	80169ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80169d8:	42bd      	cmp	r5, r7
 80169da:	da07      	bge.n	80169ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80169dc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80169de:	fb05 2000 	mla	r0, r5, r0, r2
 80169e2:	1400      	asrs	r0, r0, #16
 80169e4:	d402      	bmi.n	80169ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80169e6:	42b0      	cmp	r0, r6
 80169e8:	f2c0 80ba 	blt.w	8016b60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80169ec:	2600      	movs	r6, #0
 80169ee:	1998      	adds	r0, r3, r6
 80169f0:	2800      	cmp	r0, #0
 80169f2:	dc3e      	bgt.n	8016a72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80169f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80169f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80169fc:	f1bb 0f00 	cmp.w	fp, #0
 8016a00:	f340 8117 	ble.w	8016c32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016a04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016a08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016a0c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016a10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a12:	f1bb 0b01 	subs.w	fp, fp, #1
 8016a16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016a1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016a1e:	eeb0 6a62 	vmov.f32	s12, s5
 8016a22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016a26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016a2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016a2e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016a32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016a36:	eeb0 6a43 	vmov.f32	s12, s6
 8016a3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016a3e:	ee12 2a90 	vmov	r2, s5
 8016a42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016a46:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a4a:	ee13 2a10 	vmov	r2, s6
 8016a4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016a52:	9311      	str	r3, [sp, #68]	; 0x44
 8016a54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a56:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a5a:	9a03      	ldr	r2, [sp, #12]
 8016a5c:	9312      	str	r3, [sp, #72]	; 0x48
 8016a5e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016a62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a64:	eeb0 3a67 	vmov.f32	s6, s15
 8016a68:	bf08      	it	eq
 8016a6a:	4613      	moveq	r3, r2
 8016a6c:	eef0 2a47 	vmov.f32	s5, s14
 8016a70:	e789      	b.n	8016986 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016a72:	140f      	asrs	r7, r1, #16
 8016a74:	d424      	bmi.n	8016ac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016a76:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016a7a:	42bd      	cmp	r5, r7
 8016a7c:	dd20      	ble.n	8016ac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016a7e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016a82:	d41d      	bmi.n	8016ac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016a84:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8016a88:	4560      	cmp	r0, ip
 8016a8a:	dd19      	ble.n	8016ac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016a8c:	b22d      	sxth	r5, r5
 8016a8e:	fb0c 7505 	mla	r5, ip, r5, r7
 8016a92:	9801      	ldr	r0, [sp, #4]
 8016a94:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8016a98:	0e07      	lsrs	r7, r0, #24
 8016a9a:	2fff      	cmp	r7, #255	; 0xff
 8016a9c:	d116      	bne.n	8016acc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016a9e:	f06f 0501 	mvn.w	r5, #1
 8016aa2:	fb05 f706 	mul.w	r7, r5, r6
 8016aa6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016aaa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8016aae:	0945      	lsrs	r5, r0, #5
 8016ab0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016ab4:	ea4c 0505 	orr.w	r5, ip, r5
 8016ab8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016abc:	4305      	orrs	r5, r0
 8016abe:	53e5      	strh	r5, [r4, r7]
 8016ac0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016ac2:	4401      	add	r1, r0
 8016ac4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016ac6:	3e01      	subs	r6, #1
 8016ac8:	4402      	add	r2, r0
 8016aca:	e790      	b.n	80169ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016acc:	b2fd      	uxtb	r5, r7
 8016ace:	2f00      	cmp	r7, #0
 8016ad0:	d0f6      	beq.n	8016ac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016ad2:	f06f 0701 	mvn.w	r7, #1
 8016ad6:	4377      	muls	r7, r6
 8016ad8:	fa1f f985 	uxth.w	r9, r5
 8016adc:	f834 e007 	ldrh.w	lr, [r4, r7]
 8016ae0:	9702      	str	r7, [sp, #8]
 8016ae2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016ae6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8016aea:	43ed      	mvns	r5, r5
 8016aec:	b2ed      	uxtb	r5, r5
 8016aee:	fb17 f709 	smulbb	r7, r7, r9
 8016af2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016af6:	fb0c 7c05 	mla	ip, ip, r5, r7
 8016afa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016afe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016b02:	b2c0      	uxtb	r0, r0
 8016b04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016b08:	fa5f fe8e 	uxtb.w	lr, lr
 8016b0c:	fb10 f009 	smulbb	r0, r0, r9
 8016b10:	fb0e 0005 	mla	r0, lr, r5, r0
 8016b14:	b280      	uxth	r0, r0
 8016b16:	fa1f fc8c 	uxth.w	ip, ip
 8016b1a:	fb1a fa09 	smulbb	sl, sl, r9
 8016b1e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016b22:	fb07 a705 	mla	r7, r7, r5, sl
 8016b26:	f100 0a01 	add.w	sl, r0, #1
 8016b2a:	f10c 0501 	add.w	r5, ip, #1
 8016b2e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016b32:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016b36:	b2bf      	uxth	r7, r7
 8016b38:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016b3c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016b40:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016b44:	f107 0a01 	add.w	sl, r7, #1
 8016b48:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016b4c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016b50:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016b54:	9802      	ldr	r0, [sp, #8]
 8016b56:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016b5a:	f824 c000 	strh.w	ip, [r4, r0]
 8016b5e:	e7af      	b.n	8016ac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016b60:	f04f 0e00 	mov.w	lr, #0
 8016b64:	eba3 000e 	sub.w	r0, r3, lr
 8016b68:	2800      	cmp	r0, #0
 8016b6a:	f77f af43 	ble.w	80169f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016b6e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016b72:	140d      	asrs	r5, r1, #16
 8016b74:	1410      	asrs	r0, r2, #16
 8016b76:	fb06 5000 	mla	r0, r6, r0, r5
 8016b7a:	9d01      	ldr	r5, [sp, #4]
 8016b7c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016b80:	0e2e      	lsrs	r6, r5, #24
 8016b82:	2eff      	cmp	r6, #255	; 0xff
 8016b84:	d112      	bne.n	8016bac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016b86:	482c      	ldr	r0, [pc, #176]	; (8016c38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016b88:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016b8c:	0968      	lsrs	r0, r5, #5
 8016b8e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016b92:	4330      	orrs	r0, r6
 8016b94:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016b98:	4328      	orrs	r0, r5
 8016b9a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8016b9e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016ba0:	4401      	add	r1, r0
 8016ba2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016ba4:	f10e 0e01 	add.w	lr, lr, #1
 8016ba8:	4402      	add	r2, r0
 8016baa:	e7db      	b.n	8016b64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8016bac:	b2f0      	uxtb	r0, r6
 8016bae:	2e00      	cmp	r6, #0
 8016bb0:	d0f5      	beq.n	8016b9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016bb2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016bb6:	fa1f f980 	uxth.w	r9, r0
 8016bba:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016bbe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016bc2:	43c0      	mvns	r0, r0
 8016bc4:	b2c0      	uxtb	r0, r0
 8016bc6:	fb16 f609 	smulbb	r6, r6, r9
 8016bca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016bce:	fb07 6700 	mla	r7, r7, r0, r6
 8016bd2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016bd6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016bda:	b2ed      	uxtb	r5, r5
 8016bdc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016be0:	fa5f fc8c 	uxtb.w	ip, ip
 8016be4:	fb15 f509 	smulbb	r5, r5, r9
 8016be8:	fb0c 5500 	mla	r5, ip, r0, r5
 8016bec:	b2bf      	uxth	r7, r7
 8016bee:	fb1a fa09 	smulbb	sl, sl, r9
 8016bf2:	b2ad      	uxth	r5, r5
 8016bf4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016bf8:	fb06 a600 	mla	r6, r6, r0, sl
 8016bfc:	1c78      	adds	r0, r7, #1
 8016bfe:	f105 0a01 	add.w	sl, r5, #1
 8016c02:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016c06:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016c0a:	b2b6      	uxth	r6, r6
 8016c0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016c10:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016c14:	ea4a 0707 	orr.w	r7, sl, r7
 8016c18:	f106 0a01 	add.w	sl, r6, #1
 8016c1c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016c20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016c24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016c28:	ea47 070a 	orr.w	r7, r7, sl
 8016c2c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016c30:	e7b5      	b.n	8016b9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016c32:	b005      	add	sp, #20
 8016c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c38:	fffff800 	.word	0xfffff800

08016c3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c40:	b087      	sub	sp, #28
 8016c42:	468b      	mov	fp, r1
 8016c44:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016c46:	9203      	str	r2, [sp, #12]
 8016c48:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016c4c:	9204      	str	r2, [sp, #16]
 8016c4e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016c52:	6841      	ldr	r1, [r0, #4]
 8016c54:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016c58:	fb01 2404 	mla	r4, r1, r4, r2
 8016c5c:	6802      	ldr	r2, [r0, #0]
 8016c5e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016c62:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016c66:	3201      	adds	r2, #1
 8016c68:	f022 0201 	bic.w	r2, r2, #1
 8016c6c:	9200      	str	r2, [sp, #0]
 8016c6e:	f8d9 2000 	ldr.w	r2, [r9]
 8016c72:	9201      	str	r2, [sp, #4]
 8016c74:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016c78:	f1bb 0f00 	cmp.w	fp, #0
 8016c7c:	dc03      	bgt.n	8016c86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016c7e:	9a03      	ldr	r2, [sp, #12]
 8016c80:	2a00      	cmp	r2, #0
 8016c82:	f340 8169 	ble.w	8016f58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016c86:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016c88:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016c8c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016c90:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016c94:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016c96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016c9a:	2b00      	cmp	r3, #0
 8016c9c:	dd0e      	ble.n	8016cbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016c9e:	1402      	asrs	r2, r0, #16
 8016ca0:	d405      	bmi.n	8016cae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016ca2:	42ba      	cmp	r2, r7
 8016ca4:	da03      	bge.n	8016cae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016ca6:	140a      	asrs	r2, r1, #16
 8016ca8:	d401      	bmi.n	8016cae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016caa:	42b2      	cmp	r2, r6
 8016cac:	db07      	blt.n	8016cbe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8016cae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016cb0:	4410      	add	r0, r2
 8016cb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016cb4:	3b01      	subs	r3, #1
 8016cb6:	4411      	add	r1, r2
 8016cb8:	3402      	adds	r4, #2
 8016cba:	e7ee      	b.n	8016c9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016cbc:	d017      	beq.n	8016cee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016cbe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016cc0:	1e5a      	subs	r2, r3, #1
 8016cc2:	fb05 0502 	mla	r5, r5, r2, r0
 8016cc6:	142d      	asrs	r5, r5, #16
 8016cc8:	d409      	bmi.n	8016cde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016cca:	42bd      	cmp	r5, r7
 8016ccc:	da07      	bge.n	8016cde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016cce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016cd0:	fb05 1202 	mla	r2, r5, r2, r1
 8016cd4:	1412      	asrs	r2, r2, #16
 8016cd6:	d402      	bmi.n	8016cde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016cd8:	42b2      	cmp	r2, r6
 8016cda:	f2c0 80c7 	blt.w	8016e6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8016cde:	2700      	movs	r7, #0
 8016ce0:	19da      	adds	r2, r3, r7
 8016ce2:	2a00      	cmp	r2, #0
 8016ce4:	dc3e      	bgt.n	8016d64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016ce6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016cea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016cee:	f1bb 0f00 	cmp.w	fp, #0
 8016cf2:	f340 8131 	ble.w	8016f58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016cf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016cfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016cfe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016d02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d04:	f1bb 0b01 	subs.w	fp, fp, #1
 8016d08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016d0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016d10:	eeb0 6a62 	vmov.f32	s12, s5
 8016d14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016d18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016d20:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016d24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016d28:	eeb0 6a43 	vmov.f32	s12, s6
 8016d2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016d30:	ee12 2a90 	vmov	r2, s5
 8016d34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016d38:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d3c:	ee13 2a10 	vmov	r2, s6
 8016d40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d44:	9313      	str	r3, [sp, #76]	; 0x4c
 8016d46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d48:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d4c:	9a03      	ldr	r2, [sp, #12]
 8016d4e:	9314      	str	r3, [sp, #80]	; 0x50
 8016d50:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016d54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d56:	eeb0 3a67 	vmov.f32	s6, s15
 8016d5a:	bf08      	it	eq
 8016d5c:	4613      	moveq	r3, r2
 8016d5e:	eef0 2a47 	vmov.f32	s5, s14
 8016d62:	e789      	b.n	8016c78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016d64:	1405      	asrs	r5, r0, #16
 8016d66:	d435      	bmi.n	8016dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016d68:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016d6c:	42aa      	cmp	r2, r5
 8016d6e:	dd31      	ble.n	8016dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016d70:	140e      	asrs	r6, r1, #16
 8016d72:	d42f      	bmi.n	8016dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016d74:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016d78:	42b2      	cmp	r2, r6
 8016d7a:	dd2b      	ble.n	8016dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016d7c:	9a00      	ldr	r2, [sp, #0]
 8016d7e:	fb06 5502 	mla	r5, r6, r2, r5
 8016d82:	086a      	lsrs	r2, r5, #1
 8016d84:	9e01      	ldr	r6, [sp, #4]
 8016d86:	5cb2      	ldrb	r2, [r6, r2]
 8016d88:	07ee      	lsls	r6, r5, #31
 8016d8a:	bf54      	ite	pl
 8016d8c:	f002 020f 	andpl.w	r2, r2, #15
 8016d90:	1112      	asrmi	r2, r2, #4
 8016d92:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016d96:	b2d2      	uxtb	r2, r2
 8016d98:	b1e2      	cbz	r2, 8016dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016d9a:	9d04      	ldr	r5, [sp, #16]
 8016d9c:	436a      	muls	r2, r5
 8016d9e:	1c55      	adds	r5, r2, #1
 8016da0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016da4:	4d6e      	ldr	r5, [pc, #440]	; (8016f60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016da6:	682d      	ldr	r5, [r5, #0]
 8016da8:	1212      	asrs	r2, r2, #8
 8016daa:	0a2e      	lsrs	r6, r5, #8
 8016dac:	2aff      	cmp	r2, #255	; 0xff
 8016dae:	9605      	str	r6, [sp, #20]
 8016db0:	d116      	bne.n	8016de0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016db2:	f06f 0201 	mvn.w	r2, #1
 8016db6:	fb02 fc07 	mul.w	ip, r2, r7
 8016dba:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016dbe:	096a      	lsrs	r2, r5, #5
 8016dc0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016dc4:	f026 0607 	bic.w	r6, r6, #7
 8016dc8:	4316      	orrs	r6, r2
 8016dca:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016dce:	432e      	orrs	r6, r5
 8016dd0:	f824 600c 	strh.w	r6, [r4, ip]
 8016dd4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016dd6:	4410      	add	r0, r2
 8016dd8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016dda:	3f01      	subs	r7, #1
 8016ddc:	4411      	add	r1, r2
 8016dde:	e77f      	b.n	8016ce0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016de0:	f06f 0601 	mvn.w	r6, #1
 8016de4:	437e      	muls	r6, r7
 8016de6:	fa1f fa82 	uxth.w	sl, r2
 8016dea:	f834 8006 	ldrh.w	r8, [r4, r6]
 8016dee:	9602      	str	r6, [sp, #8]
 8016df0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016df4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016df8:	43d2      	mvns	r2, r2
 8016dfa:	b2d2      	uxtb	r2, r2
 8016dfc:	fb1c fc0a 	smulbb	ip, ip, sl
 8016e00:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016e04:	fb0e ce02 	mla	lr, lr, r2, ip
 8016e08:	b2ed      	uxtb	r5, r5
 8016e0a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016e0e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016e12:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016e16:	fa5f f888 	uxtb.w	r8, r8
 8016e1a:	fb15 f50a 	smulbb	r5, r5, sl
 8016e1e:	fb08 5502 	mla	r5, r8, r2, r5
 8016e22:	fa1f fe8e 	uxth.w	lr, lr
 8016e26:	fb16 f60a 	smulbb	r6, r6, sl
 8016e2a:	b2ad      	uxth	r5, r5
 8016e2c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016e30:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016e34:	f10e 0201 	add.w	r2, lr, #1
 8016e38:	1c6e      	adds	r6, r5, #1
 8016e3a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016e3e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016e42:	fa1f fc8c 	uxth.w	ip, ip
 8016e46:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016e4a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016e4e:	ea46 0e0e 	orr.w	lr, r6, lr
 8016e52:	f10c 0601 	add.w	r6, ip, #1
 8016e56:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016e5a:	0976      	lsrs	r6, r6, #5
 8016e5c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016e60:	9a02      	ldr	r2, [sp, #8]
 8016e62:	ea4e 0e06 	orr.w	lr, lr, r6
 8016e66:	f824 e002 	strh.w	lr, [r4, r2]
 8016e6a:	e7b3      	b.n	8016dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016e6c:	f04f 0800 	mov.w	r8, #0
 8016e70:	eba3 0208 	sub.w	r2, r3, r8
 8016e74:	2a00      	cmp	r2, #0
 8016e76:	f77f af36 	ble.w	8016ce6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016e7a:	9e00      	ldr	r6, [sp, #0]
 8016e7c:	1402      	asrs	r2, r0, #16
 8016e7e:	140d      	asrs	r5, r1, #16
 8016e80:	fb06 2505 	mla	r5, r6, r5, r2
 8016e84:	086a      	lsrs	r2, r5, #1
 8016e86:	9e01      	ldr	r6, [sp, #4]
 8016e88:	5cb2      	ldrb	r2, [r6, r2]
 8016e8a:	07ed      	lsls	r5, r5, #31
 8016e8c:	bf54      	ite	pl
 8016e8e:	f002 020f 	andpl.w	r2, r2, #15
 8016e92:	1112      	asrmi	r2, r2, #4
 8016e94:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016e98:	b2d2      	uxtb	r2, r2
 8016e9a:	b1c2      	cbz	r2, 8016ece <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016e9c:	9d04      	ldr	r5, [sp, #16]
 8016e9e:	436a      	muls	r2, r5
 8016ea0:	1c55      	adds	r5, r2, #1
 8016ea2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016ea6:	4d2e      	ldr	r5, [pc, #184]	; (8016f60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016ea8:	1212      	asrs	r2, r2, #8
 8016eaa:	682e      	ldr	r6, [r5, #0]
 8016eac:	2aff      	cmp	r2, #255	; 0xff
 8016eae:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016eb2:	d113      	bne.n	8016edc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016eb4:	0972      	lsrs	r2, r6, #5
 8016eb6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016eba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016ebe:	f025 0507 	bic.w	r5, r5, #7
 8016ec2:	4315      	orrs	r5, r2
 8016ec4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016ec8:	4335      	orrs	r5, r6
 8016eca:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016ece:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016ed0:	4410      	add	r0, r2
 8016ed2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016ed4:	f108 0801 	add.w	r8, r8, #1
 8016ed8:	4411      	add	r1, r2
 8016eda:	e7c9      	b.n	8016e70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016edc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016ee0:	fa1f fa82 	uxth.w	sl, r2
 8016ee4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016ee8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016eec:	43d2      	mvns	r2, r2
 8016eee:	b2d2      	uxtb	r2, r2
 8016ef0:	fb17 f70a 	smulbb	r7, r7, sl
 8016ef4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016ef8:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016efc:	b2f6      	uxtb	r6, r6
 8016efe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016f02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016f06:	fa5f fe8e 	uxtb.w	lr, lr
 8016f0a:	fb16 f60a 	smulbb	r6, r6, sl
 8016f0e:	fb0e 6602 	mla	r6, lr, r2, r6
 8016f12:	b2ed      	uxtb	r5, r5
 8016f14:	fa1f fc8c 	uxth.w	ip, ip
 8016f18:	fb15 f50a 	smulbb	r5, r5, sl
 8016f1c:	b2b6      	uxth	r6, r6
 8016f1e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016f22:	fb07 5702 	mla	r7, r7, r2, r5
 8016f26:	f10c 0201 	add.w	r2, ip, #1
 8016f2a:	1c75      	adds	r5, r6, #1
 8016f2c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016f30:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016f34:	b2bf      	uxth	r7, r7
 8016f36:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016f3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016f3e:	ea45 0c0c 	orr.w	ip, r5, ip
 8016f42:	1c7d      	adds	r5, r7, #1
 8016f44:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016f48:	096d      	lsrs	r5, r5, #5
 8016f4a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016f4e:	ea4c 0c05 	orr.w	ip, ip, r5
 8016f52:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016f56:	e7ba      	b.n	8016ece <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016f58:	b007      	add	sp, #28
 8016f5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f5e:	bf00      	nop
 8016f60:	20015810 	.word	0x20015810

08016f64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f68:	b087      	sub	sp, #28
 8016f6a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8017278 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016f6e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016f70:	9205      	str	r2, [sp, #20]
 8016f72:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016f76:	9101      	str	r1, [sp, #4]
 8016f78:	6841      	ldr	r1, [r0, #4]
 8016f7a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8016f7e:	fb01 2404 	mla	r4, r1, r4, r2
 8016f82:	6802      	ldr	r2, [r0, #0]
 8016f84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016f88:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016f8c:	3201      	adds	r2, #1
 8016f8e:	f022 0201 	bic.w	r2, r2, #1
 8016f92:	9202      	str	r2, [sp, #8]
 8016f94:	f8db 2000 	ldr.w	r2, [fp]
 8016f98:	9203      	str	r2, [sp, #12]
 8016f9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016f9e:	9a01      	ldr	r2, [sp, #4]
 8016fa0:	2a00      	cmp	r2, #0
 8016fa2:	dc03      	bgt.n	8016fac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016fa4:	9a05      	ldr	r2, [sp, #20]
 8016fa6:	2a00      	cmp	r2, #0
 8016fa8:	f340 8162 	ble.w	8017270 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016fac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016fae:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016fb2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016fb6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016fba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016fbc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016fc0:	2b00      	cmp	r3, #0
 8016fc2:	dd0e      	ble.n	8016fe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016fc4:	1402      	asrs	r2, r0, #16
 8016fc6:	d405      	bmi.n	8016fd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016fc8:	42ba      	cmp	r2, r7
 8016fca:	da03      	bge.n	8016fd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016fcc:	140a      	asrs	r2, r1, #16
 8016fce:	d401      	bmi.n	8016fd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016fd0:	42b2      	cmp	r2, r6
 8016fd2:	db07      	blt.n	8016fe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016fd4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016fd6:	4410      	add	r0, r2
 8016fd8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016fda:	3b01      	subs	r3, #1
 8016fdc:	4411      	add	r1, r2
 8016fde:	3402      	adds	r4, #2
 8016fe0:	e7ee      	b.n	8016fc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016fe2:	d017      	beq.n	8017014 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016fe4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016fe6:	1e5a      	subs	r2, r3, #1
 8016fe8:	fb05 0502 	mla	r5, r5, r2, r0
 8016fec:	142d      	asrs	r5, r5, #16
 8016fee:	d409      	bmi.n	8017004 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016ff0:	42bd      	cmp	r5, r7
 8016ff2:	da07      	bge.n	8017004 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016ff4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016ff6:	fb05 1202 	mla	r2, r5, r2, r1
 8016ffa:	1412      	asrs	r2, r2, #16
 8016ffc:	d402      	bmi.n	8017004 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016ffe:	42b2      	cmp	r2, r6
 8017000:	f2c0 80c3 	blt.w	801718a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8017004:	2500      	movs	r5, #0
 8017006:	195a      	adds	r2, r3, r5
 8017008:	2a00      	cmp	r2, #0
 801700a:	dc3f      	bgt.n	801708c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801700c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017010:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017014:	9b01      	ldr	r3, [sp, #4]
 8017016:	2b00      	cmp	r3, #0
 8017018:	f340 812a 	ble.w	8017270 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801701c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017020:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017024:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017028:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801702a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801702e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017032:	eeb0 6a62 	vmov.f32	s12, s5
 8017036:	ee61 7a27 	vmul.f32	s15, s2, s15
 801703a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801703e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017042:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017046:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801704a:	eeb0 6a43 	vmov.f32	s12, s6
 801704e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017052:	ee12 2a90 	vmov	r2, s5
 8017056:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801705a:	fb92 f3f3 	sdiv	r3, r2, r3
 801705e:	ee13 2a10 	vmov	r2, s6
 8017062:	9313      	str	r3, [sp, #76]	; 0x4c
 8017064:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017066:	fb92 f3f3 	sdiv	r3, r2, r3
 801706a:	9314      	str	r3, [sp, #80]	; 0x50
 801706c:	9b01      	ldr	r3, [sp, #4]
 801706e:	9a05      	ldr	r2, [sp, #20]
 8017070:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017074:	3b01      	subs	r3, #1
 8017076:	9301      	str	r3, [sp, #4]
 8017078:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801707c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801707e:	eeb0 3a67 	vmov.f32	s6, s15
 8017082:	bf08      	it	eq
 8017084:	4613      	moveq	r3, r2
 8017086:	eef0 2a47 	vmov.f32	s5, s14
 801708a:	e788      	b.n	8016f9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801708c:	1406      	asrs	r6, r0, #16
 801708e:	d42c      	bmi.n	80170ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017090:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017094:	42b2      	cmp	r2, r6
 8017096:	dd28      	ble.n	80170ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017098:	140f      	asrs	r7, r1, #16
 801709a:	d426      	bmi.n	80170ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801709c:	f8db 200c 	ldr.w	r2, [fp, #12]
 80170a0:	42ba      	cmp	r2, r7
 80170a2:	dd22      	ble.n	80170ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80170a4:	9a02      	ldr	r2, [sp, #8]
 80170a6:	fb07 6602 	mla	r6, r7, r2, r6
 80170aa:	0872      	lsrs	r2, r6, #1
 80170ac:	9f03      	ldr	r7, [sp, #12]
 80170ae:	5cba      	ldrb	r2, [r7, r2]
 80170b0:	07f6      	lsls	r6, r6, #31
 80170b2:	bf54      	ite	pl
 80170b4:	f002 020f 	andpl.w	r2, r2, #15
 80170b8:	1112      	asrmi	r2, r2, #4
 80170ba:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80170be:	b2d2      	uxtb	r2, r2
 80170c0:	2aff      	cmp	r2, #255	; 0xff
 80170c2:	d118      	bne.n	80170f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80170c4:	f8d8 2000 	ldr.w	r2, [r8]
 80170c8:	f06f 0601 	mvn.w	r6, #1
 80170cc:	fb06 f705 	mul.w	r7, r6, r5
 80170d0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80170d4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80170d8:	0956      	lsrs	r6, r2, #5
 80170da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80170de:	ea4c 0606 	orr.w	r6, ip, r6
 80170e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80170e6:	4316      	orrs	r6, r2
 80170e8:	53e6      	strh	r6, [r4, r7]
 80170ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80170ec:	4410      	add	r0, r2
 80170ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80170f0:	3d01      	subs	r5, #1
 80170f2:	4411      	add	r1, r2
 80170f4:	e787      	b.n	8017006 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80170f6:	2a00      	cmp	r2, #0
 80170f8:	d0f7      	beq.n	80170ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80170fa:	f06f 0601 	mvn.w	r6, #1
 80170fe:	436e      	muls	r6, r5
 8017100:	f8d8 c000 	ldr.w	ip, [r8]
 8017104:	f834 e006 	ldrh.w	lr, [r4, r6]
 8017108:	9604      	str	r6, [sp, #16]
 801710a:	fa1f f982 	uxth.w	r9, r2
 801710e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017112:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8017116:	43d2      	mvns	r2, r2
 8017118:	b2d2      	uxtb	r2, r2
 801711a:	fb16 f609 	smulbb	r6, r6, r9
 801711e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017122:	fb07 6702 	mla	r7, r7, r2, r6
 8017126:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801712a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801712e:	fa5f fc8c 	uxtb.w	ip, ip
 8017132:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017136:	fa5f fe8e 	uxtb.w	lr, lr
 801713a:	fb1c fc09 	smulbb	ip, ip, r9
 801713e:	fb0e cc02 	mla	ip, lr, r2, ip
 8017142:	b2bf      	uxth	r7, r7
 8017144:	fb1a fa09 	smulbb	sl, sl, r9
 8017148:	fa1f fc8c 	uxth.w	ip, ip
 801714c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017150:	fb06 a602 	mla	r6, r6, r2, sl
 8017154:	1c7a      	adds	r2, r7, #1
 8017156:	f10c 0a01 	add.w	sl, ip, #1
 801715a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801715e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8017162:	b2b6      	uxth	r6, r6
 8017164:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017168:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801716c:	ea4a 0707 	orr.w	r7, sl, r7
 8017170:	f106 0a01 	add.w	sl, r6, #1
 8017174:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017178:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801717c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017180:	9a04      	ldr	r2, [sp, #16]
 8017182:	ea47 070a 	orr.w	r7, r7, sl
 8017186:	52a7      	strh	r7, [r4, r2]
 8017188:	e7af      	b.n	80170ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801718a:	f04f 0e00 	mov.w	lr, #0
 801718e:	eba3 020e 	sub.w	r2, r3, lr
 8017192:	2a00      	cmp	r2, #0
 8017194:	f77f af3a 	ble.w	801700c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017198:	9e02      	ldr	r6, [sp, #8]
 801719a:	1402      	asrs	r2, r0, #16
 801719c:	140d      	asrs	r5, r1, #16
 801719e:	fb06 2505 	mla	r5, r6, r5, r2
 80171a2:	086a      	lsrs	r2, r5, #1
 80171a4:	9e03      	ldr	r6, [sp, #12]
 80171a6:	5cb2      	ldrb	r2, [r6, r2]
 80171a8:	07ed      	lsls	r5, r5, #31
 80171aa:	bf54      	ite	pl
 80171ac:	f002 020f 	andpl.w	r2, r2, #15
 80171b0:	1112      	asrmi	r2, r2, #4
 80171b2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80171b6:	b2d2      	uxtb	r2, r2
 80171b8:	2aff      	cmp	r2, #255	; 0xff
 80171ba:	d115      	bne.n	80171e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80171bc:	f8d8 5000 	ldr.w	r5, [r8]
 80171c0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80171c4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80171c8:	096a      	lsrs	r2, r5, #5
 80171ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80171ce:	4332      	orrs	r2, r6
 80171d0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80171d4:	432a      	orrs	r2, r5
 80171d6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80171da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80171dc:	4410      	add	r0, r2
 80171de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80171e0:	f10e 0e01 	add.w	lr, lr, #1
 80171e4:	4411      	add	r1, r2
 80171e6:	e7d2      	b.n	801718e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80171e8:	2a00      	cmp	r2, #0
 80171ea:	d0f6      	beq.n	80171da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80171ec:	f8d8 7000 	ldr.w	r7, [r8]
 80171f0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80171f4:	fa1f f982 	uxth.w	r9, r2
 80171f8:	ea4f 262c 	mov.w	r6, ip, asr #8
 80171fc:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8017200:	43d2      	mvns	r2, r2
 8017202:	b2d2      	uxtb	r2, r2
 8017204:	fb15 f509 	smulbb	r5, r5, r9
 8017208:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801720c:	fb06 5602 	mla	r6, r6, r2, r5
 8017210:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8017214:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017218:	b2ff      	uxtb	r7, r7
 801721a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801721e:	fa5f fc8c 	uxtb.w	ip, ip
 8017222:	fb17 f709 	smulbb	r7, r7, r9
 8017226:	fb0c 7702 	mla	r7, ip, r2, r7
 801722a:	b2b6      	uxth	r6, r6
 801722c:	fb1a fa09 	smulbb	sl, sl, r9
 8017230:	b2bf      	uxth	r7, r7
 8017232:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017236:	fb05 a502 	mla	r5, r5, r2, sl
 801723a:	1c72      	adds	r2, r6, #1
 801723c:	f107 0a01 	add.w	sl, r7, #1
 8017240:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8017244:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017248:	b2ad      	uxth	r5, r5
 801724a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801724e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8017252:	ea4a 0606 	orr.w	r6, sl, r6
 8017256:	f105 0a01 	add.w	sl, r5, #1
 801725a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801725e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017262:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017266:	ea46 060a 	orr.w	r6, r6, sl
 801726a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801726e:	e7b4      	b.n	80171da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017270:	b007      	add	sp, #28
 8017272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017276:	bf00      	nop
 8017278:	20015810 	.word	0x20015810

0801727c <_ZN8touchgfx8LCD16bppD1Ev>:
 801727c:	4770      	bx	lr

0801727e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801727e:	4770      	bx	lr

08017280 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8017280:	4770      	bx	lr

08017282 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8017282:	4770      	bx	lr

08017284 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8017284:	4770      	bx	lr

08017286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017286:	4770      	bx	lr

08017288 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017288:	4770      	bx	lr

0801728a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801728a:	4770      	bx	lr

0801728c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801728c:	4770      	bx	lr

0801728e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801728e:	4770      	bx	lr

08017290 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017290:	4770      	bx	lr

08017292 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017292:	4770      	bx	lr

08017294 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017294:	4770      	bx	lr

08017296 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017296:	4770      	bx	lr

08017298 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8017298:	4770      	bx	lr

0801729a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801729a:	4770      	bx	lr

0801729c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801729c:	4770      	bx	lr

0801729e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801729e:	4770      	bx	lr

080172a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80172a0:	4770      	bx	lr

080172a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80172a2:	4770      	bx	lr

080172a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80172a4:	4770      	bx	lr

080172a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80172a6:	4770      	bx	lr

080172a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80172a8:	4770      	bx	lr

080172aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80172aa:	4770      	bx	lr

080172ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80172ac:	4770      	bx	lr

080172ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80172ae:	4770      	bx	lr

080172b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80172b0:	4770      	bx	lr

080172b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80172b2:	4770      	bx	lr

080172b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80172b4:	4770      	bx	lr

080172b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80172b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80172ba:	b088      	sub	sp, #32
 80172bc:	ac08      	add	r4, sp, #32
 80172be:	4606      	mov	r6, r0
 80172c0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80172c4:	4620      	mov	r0, r4
 80172c6:	4688      	mov	r8, r1
 80172c8:	4691      	mov	r9, r2
 80172ca:	f7fd fc65 	bl	8014b98 <_ZNK8touchgfx6Bitmap7getDataEv>
 80172ce:	6833      	ldr	r3, [r6, #0]
 80172d0:	4605      	mov	r5, r0
 80172d2:	4620      	mov	r0, r4
 80172d4:	699f      	ldr	r7, [r3, #24]
 80172d6:	f7fd fb73 	bl	80149c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80172da:	4682      	mov	sl, r0
 80172dc:	4620      	mov	r0, r4
 80172de:	f7fd fba3 	bl	8014a28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80172e2:	9500      	str	r5, [sp, #0]
 80172e4:	e9cd a001 	strd	sl, r0, [sp, #4]
 80172e8:	464b      	mov	r3, r9
 80172ea:	a806      	add	r0, sp, #24
 80172ec:	4642      	mov	r2, r8
 80172ee:	4631      	mov	r1, r6
 80172f0:	47b8      	blx	r7
 80172f2:	4628      	mov	r0, r5
 80172f4:	b008      	add	sp, #32
 80172f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080172fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80172fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8017300:	2300      	movs	r3, #0
 8017302:	9300      	str	r3, [sp, #0]
 8017304:	4b3d      	ldr	r3, [pc, #244]	; (80173fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8017306:	781b      	ldrb	r3, [r3, #0]
 8017308:	2b00      	cmp	r3, #0
 801730a:	d137      	bne.n	801737c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801730c:	4a3c      	ldr	r2, [pc, #240]	; (8017400 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801730e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017312:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017316:	2b00      	cmp	r3, #0
 8017318:	d132      	bne.n	8017380 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801731a:	4b3a      	ldr	r3, [pc, #232]	; (8017404 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801731c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017320:	6808      	ldr	r0, [r1, #0]
 8017322:	6849      	ldr	r1, [r1, #4]
 8017324:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017328:	ac02      	add	r4, sp, #8
 801732a:	ab02      	add	r3, sp, #8
 801732c:	c303      	stmia	r3!, {r0, r1}
 801732e:	4669      	mov	r1, sp
 8017330:	4620      	mov	r0, r4
 8017332:	f7f9 ff7f 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017336:	4668      	mov	r0, sp
 8017338:	f7f9 ff54 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801733c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017340:	f8bd 2000 	ldrh.w	r2, [sp]
 8017344:	4d30      	ldr	r5, [pc, #192]	; (8017408 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8017346:	4413      	add	r3, r2
 8017348:	f8ad 3008 	strh.w	r3, [sp, #8]
 801734c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017350:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017354:	6828      	ldr	r0, [r5, #0]
 8017356:	4413      	add	r3, r2
 8017358:	f8ad 300a 	strh.w	r3, [sp, #10]
 801735c:	6803      	ldr	r3, [r0, #0]
 801735e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017360:	4798      	blx	r3
 8017362:	f010 0f01 	tst.w	r0, #1
 8017366:	462f      	mov	r7, r5
 8017368:	d00c      	beq.n	8017384 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801736a:	6828      	ldr	r0, [r5, #0]
 801736c:	6803      	ldr	r3, [r0, #0]
 801736e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8017372:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8017374:	4798      	blx	r3
 8017376:	b004      	add	sp, #16
 8017378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801737c:	4a21      	ldr	r2, [pc, #132]	; (8017404 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801737e:	e7c6      	b.n	801730e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8017380:	4b1f      	ldr	r3, [pc, #124]	; (8017400 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017382:	e7cb      	b.n	801731c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8017384:	6838      	ldr	r0, [r7, #0]
 8017386:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801738a:	6803      	ldr	r3, [r0, #0]
 801738c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8017390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017392:	4798      	blx	r3
 8017394:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8017398:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801739c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80173a0:	fb16 3602 	smlabb	r6, r6, r2, r3
 80173a4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80173a8:	6838      	ldr	r0, [r7, #0]
 80173aa:	6803      	ldr	r3, [r0, #0]
 80173ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80173ae:	4798      	blx	r3
 80173b0:	4a13      	ldr	r2, [pc, #76]	; (8017400 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80173b2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80173b6:	8813      	ldrh	r3, [r2, #0]
 80173b8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80173bc:	fb03 1404 	mla	r4, r3, r4, r1
 80173c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80173c4:	435d      	muls	r5, r3
 80173c6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80173ca:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80173ce:	4691      	mov	r9, r2
 80173d0:	6838      	ldr	r0, [r7, #0]
 80173d2:	42ac      	cmp	r4, r5
 80173d4:	6803      	ldr	r3, [r0, #0]
 80173d6:	d20e      	bcs.n	80173f6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80173d8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80173dc:	4632      	mov	r2, r6
 80173de:	4643      	mov	r3, r8
 80173e0:	4621      	mov	r1, r4
 80173e2:	47d0      	blx	sl
 80173e4:	f8b9 3000 	ldrh.w	r3, [r9]
 80173e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80173ec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80173f0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80173f4:	e7ec      	b.n	80173d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80173f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80173f8:	4798      	blx	r3
 80173fa:	e7bc      	b.n	8017376 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80173fc:	200157f8 	.word	0x200157f8
 8017400:	200157fa 	.word	0x200157fa
 8017404:	200157fc 	.word	0x200157fc
 8017408:	20015800 	.word	0x20015800

0801740c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801740c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017410:	b08b      	sub	sp, #44	; 0x2c
 8017412:	460f      	mov	r7, r1
 8017414:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8017418:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801741c:	4616      	mov	r6, r2
 801741e:	f1bb 0f00 	cmp.w	fp, #0
 8017422:	d049      	beq.n	80174b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017424:	6810      	ldr	r0, [r2, #0]
 8017426:	6851      	ldr	r1, [r2, #4]
 8017428:	ad06      	add	r5, sp, #24
 801742a:	c503      	stmia	r5!, {r0, r1}
 801742c:	6818      	ldr	r0, [r3, #0]
 801742e:	6859      	ldr	r1, [r3, #4]
 8017430:	ad08      	add	r5, sp, #32
 8017432:	c503      	stmia	r5!, {r0, r1}
 8017434:	a806      	add	r0, sp, #24
 8017436:	f7f9 fed5 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801743a:	4631      	mov	r1, r6
 801743c:	a808      	add	r0, sp, #32
 801743e:	f7f9 fef9 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017442:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017446:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801744a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801744e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8017452:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017456:	fb16 2103 	smlabb	r1, r6, r3, r2
 801745a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801745e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017462:	4f5f      	ldr	r7, [pc, #380]	; (80175e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017464:	440a      	add	r2, r1
 8017466:	f8ad 2020 	strh.w	r2, [sp, #32]
 801746a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801746e:	6838      	ldr	r0, [r7, #0]
 8017470:	4413      	add	r3, r2
 8017472:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017476:	6803      	ldr	r3, [r0, #0]
 8017478:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801747a:	4798      	blx	r3
 801747c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017480:	46b9      	mov	r9, r7
 8017482:	d01c      	beq.n	80174be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8017484:	f010 0f04 	tst.w	r0, #4
 8017488:	d01d      	beq.n	80174c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801748a:	f8d9 0000 	ldr.w	r0, [r9]
 801748e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8017492:	6801      	ldr	r1, [r0, #0]
 8017494:	f8cd b00c 	str.w	fp, [sp, #12]
 8017498:	2700      	movs	r7, #0
 801749a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801749e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80174a2:	9402      	str	r4, [sp, #8]
 80174a4:	b2ad      	uxth	r5, r5
 80174a6:	fa1f f488 	uxth.w	r4, r8
 80174aa:	9501      	str	r5, [sp, #4]
 80174ac:	9400      	str	r4, [sp, #0]
 80174ae:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80174b0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80174b4:	4631      	mov	r1, r6
 80174b6:	47a0      	blx	r4
 80174b8:	b00b      	add	sp, #44	; 0x2c
 80174ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174be:	b914      	cbnz	r4, 80174c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80174c0:	f010 0f01 	tst.w	r0, #1
 80174c4:	e7e0      	b.n	8017488 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80174c6:	f8d9 0000 	ldr.w	r0, [r9]
 80174ca:	6803      	ldr	r3, [r0, #0]
 80174cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80174ce:	4798      	blx	r3
 80174d0:	4b44      	ldr	r3, [pc, #272]	; (80175e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80174d2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80174d6:	881a      	ldrh	r2, [r3, #0]
 80174d8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80174dc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80174e0:	fb02 1404 	mla	r4, r2, r4, r1
 80174e4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80174e8:	469a      	mov	sl, r3
 80174ea:	fb05 f502 	mul.w	r5, r5, r2
 80174ee:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80174f2:	d059      	beq.n	80175a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80174f4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80174f8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80174fc:	fa1f f28b 	uxth.w	r2, fp
 8017500:	fa1f f989 	uxth.w	r9, r9
 8017504:	469e      	mov	lr, r3
 8017506:	42ac      	cmp	r4, r5
 8017508:	d264      	bcs.n	80175d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801750a:	eb04 0a07 	add.w	sl, r4, r7
 801750e:	4554      	cmp	r4, sl
 8017510:	d23d      	bcs.n	801758e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017512:	8821      	ldrh	r1, [r4, #0]
 8017514:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017518:	1208      	asrs	r0, r1, #8
 801751a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801751e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017522:	fb10 f009 	smulbb	r0, r0, r9
 8017526:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801752a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801752e:	00c9      	lsls	r1, r1, #3
 8017530:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017534:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017538:	10d8      	asrs	r0, r3, #3
 801753a:	b2c9      	uxtb	r1, r1
 801753c:	00db      	lsls	r3, r3, #3
 801753e:	fa1f fc8c 	uxth.w	ip, ip
 8017542:	fb1b fb09 	smulbb	fp, fp, r9
 8017546:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801754a:	b2db      	uxtb	r3, r3
 801754c:	fb11 f109 	smulbb	r1, r1, r9
 8017550:	fb00 b002 	mla	r0, r0, r2, fp
 8017554:	fb03 1302 	mla	r3, r3, r2, r1
 8017558:	f10c 0b01 	add.w	fp, ip, #1
 801755c:	b29b      	uxth	r3, r3
 801755e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017562:	b280      	uxth	r0, r0
 8017564:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017568:	f103 0c01 	add.w	ip, r3, #1
 801756c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017570:	1c43      	adds	r3, r0, #1
 8017572:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017576:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801757a:	0940      	lsrs	r0, r0, #5
 801757c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017580:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017584:	ea4c 0c00 	orr.w	ip, ip, r0
 8017588:	f824 cb02 	strh.w	ip, [r4], #2
 801758c:	e7bf      	b.n	801750e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801758e:	f8be 3000 	ldrh.w	r3, [lr]
 8017592:	eba3 0308 	sub.w	r3, r3, r8
 8017596:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801759a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801759e:	eba3 0308 	sub.w	r3, r3, r8
 80175a2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80175a6:	e7ae      	b.n	8017506 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80175a8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80175ac:	f8d9 0000 	ldr.w	r0, [r9]
 80175b0:	42ac      	cmp	r4, r5
 80175b2:	6803      	ldr	r3, [r0, #0]
 80175b4:	d20e      	bcs.n	80175d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80175b6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80175ba:	4632      	mov	r2, r6
 80175bc:	463b      	mov	r3, r7
 80175be:	4621      	mov	r1, r4
 80175c0:	47c0      	blx	r8
 80175c2:	f8ba 3000 	ldrh.w	r3, [sl]
 80175c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80175ca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80175ce:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80175d2:	e7eb      	b.n	80175ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80175d4:	4b02      	ldr	r3, [pc, #8]	; (80175e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80175d6:	6818      	ldr	r0, [r3, #0]
 80175d8:	6803      	ldr	r3, [r0, #0]
 80175da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80175dc:	4798      	blx	r3
 80175de:	e76b      	b.n	80174b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80175e0:	20015800 	.word	0x20015800
 80175e4:	200157fa 	.word	0x200157fa

080175e8 <_ZN8touchgfx8LCD16bppD0Ev>:
 80175e8:	b510      	push	{r4, lr}
 80175ea:	2178      	movs	r1, #120	; 0x78
 80175ec:	4604      	mov	r4, r0
 80175ee:	f009 fad3 	bl	8020b98 <_ZdlPvj>
 80175f2:	4620      	mov	r0, r4
 80175f4:	bd10      	pop	{r4, pc}

080175f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80175f6:	b510      	push	{r4, lr}
 80175f8:	2104      	movs	r1, #4
 80175fa:	4604      	mov	r4, r0
 80175fc:	f009 facc 	bl	8020b98 <_ZdlPvj>
 8017600:	4620      	mov	r0, r4
 8017602:	bd10      	pop	{r4, pc}

08017604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017604:	b510      	push	{r4, lr}
 8017606:	2104      	movs	r1, #4
 8017608:	4604      	mov	r4, r0
 801760a:	f009 fac5 	bl	8020b98 <_ZdlPvj>
 801760e:	4620      	mov	r0, r4
 8017610:	bd10      	pop	{r4, pc}

08017612 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017612:	b510      	push	{r4, lr}
 8017614:	2104      	movs	r1, #4
 8017616:	4604      	mov	r4, r0
 8017618:	f009 fabe 	bl	8020b98 <_ZdlPvj>
 801761c:	4620      	mov	r0, r4
 801761e:	bd10      	pop	{r4, pc}

08017620 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017620:	b510      	push	{r4, lr}
 8017622:	2104      	movs	r1, #4
 8017624:	4604      	mov	r4, r0
 8017626:	f009 fab7 	bl	8020b98 <_ZdlPvj>
 801762a:	4620      	mov	r0, r4
 801762c:	bd10      	pop	{r4, pc}

0801762e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801762e:	b510      	push	{r4, lr}
 8017630:	2104      	movs	r1, #4
 8017632:	4604      	mov	r4, r0
 8017634:	f009 fab0 	bl	8020b98 <_ZdlPvj>
 8017638:	4620      	mov	r0, r4
 801763a:	bd10      	pop	{r4, pc}

0801763c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801763c:	b510      	push	{r4, lr}
 801763e:	2104      	movs	r1, #4
 8017640:	4604      	mov	r4, r0
 8017642:	f009 faa9 	bl	8020b98 <_ZdlPvj>
 8017646:	4620      	mov	r0, r4
 8017648:	bd10      	pop	{r4, pc}

0801764a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801764a:	b510      	push	{r4, lr}
 801764c:	2104      	movs	r1, #4
 801764e:	4604      	mov	r4, r0
 8017650:	f009 faa2 	bl	8020b98 <_ZdlPvj>
 8017654:	4620      	mov	r0, r4
 8017656:	bd10      	pop	{r4, pc}

08017658 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017658:	b510      	push	{r4, lr}
 801765a:	2104      	movs	r1, #4
 801765c:	4604      	mov	r4, r0
 801765e:	f009 fa9b 	bl	8020b98 <_ZdlPvj>
 8017662:	4620      	mov	r0, r4
 8017664:	bd10      	pop	{r4, pc}

08017666 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017666:	b510      	push	{r4, lr}
 8017668:	2104      	movs	r1, #4
 801766a:	4604      	mov	r4, r0
 801766c:	f009 fa94 	bl	8020b98 <_ZdlPvj>
 8017670:	4620      	mov	r0, r4
 8017672:	bd10      	pop	{r4, pc}

08017674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017674:	b510      	push	{r4, lr}
 8017676:	2104      	movs	r1, #4
 8017678:	4604      	mov	r4, r0
 801767a:	f009 fa8d 	bl	8020b98 <_ZdlPvj>
 801767e:	4620      	mov	r0, r4
 8017680:	bd10      	pop	{r4, pc}

08017682 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017682:	b510      	push	{r4, lr}
 8017684:	2104      	movs	r1, #4
 8017686:	4604      	mov	r4, r0
 8017688:	f009 fa86 	bl	8020b98 <_ZdlPvj>
 801768c:	4620      	mov	r0, r4
 801768e:	bd10      	pop	{r4, pc}

08017690 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017690:	b510      	push	{r4, lr}
 8017692:	2104      	movs	r1, #4
 8017694:	4604      	mov	r4, r0
 8017696:	f009 fa7f 	bl	8020b98 <_ZdlPvj>
 801769a:	4620      	mov	r0, r4
 801769c:	bd10      	pop	{r4, pc}

0801769e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801769e:	b510      	push	{r4, lr}
 80176a0:	2104      	movs	r1, #4
 80176a2:	4604      	mov	r4, r0
 80176a4:	f009 fa78 	bl	8020b98 <_ZdlPvj>
 80176a8:	4620      	mov	r0, r4
 80176aa:	bd10      	pop	{r4, pc}

080176ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80176ac:	b510      	push	{r4, lr}
 80176ae:	2104      	movs	r1, #4
 80176b0:	4604      	mov	r4, r0
 80176b2:	f009 fa71 	bl	8020b98 <_ZdlPvj>
 80176b6:	4620      	mov	r0, r4
 80176b8:	bd10      	pop	{r4, pc}

080176ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80176ba:	b510      	push	{r4, lr}
 80176bc:	2104      	movs	r1, #4
 80176be:	4604      	mov	r4, r0
 80176c0:	f009 fa6a 	bl	8020b98 <_ZdlPvj>
 80176c4:	4620      	mov	r0, r4
 80176c6:	bd10      	pop	{r4, pc}

080176c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80176c8:	b510      	push	{r4, lr}
 80176ca:	2104      	movs	r1, #4
 80176cc:	4604      	mov	r4, r0
 80176ce:	f009 fa63 	bl	8020b98 <_ZdlPvj>
 80176d2:	4620      	mov	r0, r4
 80176d4:	bd10      	pop	{r4, pc}

080176d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80176d6:	b510      	push	{r4, lr}
 80176d8:	2104      	movs	r1, #4
 80176da:	4604      	mov	r4, r0
 80176dc:	f009 fa5c 	bl	8020b98 <_ZdlPvj>
 80176e0:	4620      	mov	r0, r4
 80176e2:	bd10      	pop	{r4, pc}

080176e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80176e4:	b510      	push	{r4, lr}
 80176e6:	2104      	movs	r1, #4
 80176e8:	4604      	mov	r4, r0
 80176ea:	f009 fa55 	bl	8020b98 <_ZdlPvj>
 80176ee:	4620      	mov	r0, r4
 80176f0:	bd10      	pop	{r4, pc}

080176f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80176f2:	b510      	push	{r4, lr}
 80176f4:	2104      	movs	r1, #4
 80176f6:	4604      	mov	r4, r0
 80176f8:	f009 fa4e 	bl	8020b98 <_ZdlPvj>
 80176fc:	4620      	mov	r0, r4
 80176fe:	bd10      	pop	{r4, pc}

08017700 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017700:	b510      	push	{r4, lr}
 8017702:	2104      	movs	r1, #4
 8017704:	4604      	mov	r4, r0
 8017706:	f009 fa47 	bl	8020b98 <_ZdlPvj>
 801770a:	4620      	mov	r0, r4
 801770c:	bd10      	pop	{r4, pc}

0801770e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801770e:	b510      	push	{r4, lr}
 8017710:	2104      	movs	r1, #4
 8017712:	4604      	mov	r4, r0
 8017714:	f009 fa40 	bl	8020b98 <_ZdlPvj>
 8017718:	4620      	mov	r0, r4
 801771a:	bd10      	pop	{r4, pc}

0801771c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801771c:	b510      	push	{r4, lr}
 801771e:	2104      	movs	r1, #4
 8017720:	4604      	mov	r4, r0
 8017722:	f009 fa39 	bl	8020b98 <_ZdlPvj>
 8017726:	4620      	mov	r0, r4
 8017728:	bd10      	pop	{r4, pc}

0801772a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801772a:	b510      	push	{r4, lr}
 801772c:	2104      	movs	r1, #4
 801772e:	4604      	mov	r4, r0
 8017730:	f009 fa32 	bl	8020b98 <_ZdlPvj>
 8017734:	4620      	mov	r0, r4
 8017736:	bd10      	pop	{r4, pc}

08017738 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017738:	b510      	push	{r4, lr}
 801773a:	2104      	movs	r1, #4
 801773c:	4604      	mov	r4, r0
 801773e:	f009 fa2b 	bl	8020b98 <_ZdlPvj>
 8017742:	4620      	mov	r0, r4
 8017744:	bd10      	pop	{r4, pc}

08017746 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017746:	b510      	push	{r4, lr}
 8017748:	2104      	movs	r1, #4
 801774a:	4604      	mov	r4, r0
 801774c:	f009 fa24 	bl	8020b98 <_ZdlPvj>
 8017750:	4620      	mov	r0, r4
 8017752:	bd10      	pop	{r4, pc}

08017754 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017754:	b510      	push	{r4, lr}
 8017756:	2104      	movs	r1, #4
 8017758:	4604      	mov	r4, r0
 801775a:	f009 fa1d 	bl	8020b98 <_ZdlPvj>
 801775e:	4620      	mov	r0, r4
 8017760:	bd10      	pop	{r4, pc}

08017762 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017762:	b510      	push	{r4, lr}
 8017764:	2104      	movs	r1, #4
 8017766:	4604      	mov	r4, r0
 8017768:	f009 fa16 	bl	8020b98 <_ZdlPvj>
 801776c:	4620      	mov	r0, r4
 801776e:	bd10      	pop	{r4, pc}

08017770 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8017770:	b510      	push	{r4, lr}
 8017772:	2104      	movs	r1, #4
 8017774:	4604      	mov	r4, r0
 8017776:	f009 fa0f 	bl	8020b98 <_ZdlPvj>
 801777a:	4620      	mov	r0, r4
 801777c:	bd10      	pop	{r4, pc}
	...

08017780 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017784:	b091      	sub	sp, #68	; 0x44
 8017786:	469b      	mov	fp, r3
 8017788:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801778c:	4616      	mov	r6, r2
 801778e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8017792:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017796:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801779a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801779e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80177a2:	4604      	mov	r4, r0
 80177a4:	460d      	mov	r5, r1
 80177a6:	4640      	mov	r0, r8
 80177a8:	4659      	mov	r1, fp
 80177aa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80177ae:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80177b2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80177b6:	f7f3 fd41 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 80177ba:	4631      	mov	r1, r6
 80177bc:	4640      	mov	r0, r8
 80177be:	f7f3 fd3d 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 80177c2:	4b74      	ldr	r3, [pc, #464]	; (8017994 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80177c4:	8818      	ldrh	r0, [r3, #0]
 80177c6:	4b74      	ldr	r3, [pc, #464]	; (8017998 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80177c8:	8819      	ldrh	r1, [r3, #0]
 80177ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80177ce:	2b00      	cmp	r3, #0
 80177d0:	b202      	sxth	r2, r0
 80177d2:	b20e      	sxth	r6, r1
 80177d4:	da07      	bge.n	80177e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80177d6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80177da:	4463      	add	r3, ip
 80177dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80177e0:	2300      	movs	r3, #0
 80177e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80177e6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80177ea:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80177ee:	1ad2      	subs	r2, r2, r3
 80177f0:	4594      	cmp	ip, r2
 80177f2:	bfc4      	itt	gt
 80177f4:	1ac2      	subgt	r2, r0, r3
 80177f6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80177fa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80177fe:	2a00      	cmp	r2, #0
 8017800:	da07      	bge.n	8017812 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017802:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017806:	4462      	add	r2, ip
 8017808:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801780c:	2200      	movs	r2, #0
 801780e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017812:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017816:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801781a:	eba6 060a 	sub.w	r6, r6, sl
 801781e:	42b2      	cmp	r2, r6
 8017820:	bfc4      	itt	gt
 8017822:	eba1 020a 	subgt.w	r2, r1, sl
 8017826:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801782a:	4a5c      	ldr	r2, [pc, #368]	; (801799c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801782c:	7812      	ldrb	r2, [r2, #0]
 801782e:	b9a2      	cbnz	r2, 801785a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017830:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017834:	4286      	cmp	r6, r0
 8017836:	4640      	mov	r0, r8
 8017838:	9303      	str	r3, [sp, #12]
 801783a:	bf14      	ite	ne
 801783c:	2600      	movne	r6, #0
 801783e:	2601      	moveq	r6, #1
 8017840:	f7f3 fd3f 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017844:	9b03      	ldr	r3, [sp, #12]
 8017846:	b160      	cbz	r0, 8017862 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017848:	2300      	movs	r3, #0
 801784a:	8023      	strh	r3, [r4, #0]
 801784c:	8063      	strh	r3, [r4, #2]
 801784e:	80a3      	strh	r3, [r4, #4]
 8017850:	4620      	mov	r0, r4
 8017852:	80e3      	strh	r3, [r4, #6]
 8017854:	b011      	add	sp, #68	; 0x44
 8017856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801785a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801785e:	428e      	cmp	r6, r1
 8017860:	e7e9      	b.n	8017836 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017862:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017866:	9205      	str	r2, [sp, #20]
 8017868:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801786c:	9206      	str	r2, [sp, #24]
 801786e:	f8bb 2000 	ldrh.w	r2, [fp]
 8017872:	900e      	str	r0, [sp, #56]	; 0x38
 8017874:	1a9b      	subs	r3, r3, r2
 8017876:	b21b      	sxth	r3, r3
 8017878:	9303      	str	r3, [sp, #12]
 801787a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801787e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8017882:	ebaa 0a03 	sub.w	sl, sl, r3
 8017886:	fa0f f38a 	sxth.w	r3, sl
 801788a:	9304      	str	r3, [sp, #16]
 801788c:	9b03      	ldr	r3, [sp, #12]
 801788e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8017892:	9b04      	ldr	r3, [sp, #16]
 8017894:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017898:	9b05      	ldr	r3, [sp, #20]
 801789a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801789e:	a90e      	add	r1, sp, #56	; 0x38
 80178a0:	9b06      	ldr	r3, [sp, #24]
 80178a2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80178a6:	a80c      	add	r0, sp, #48	; 0x30
 80178a8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80178ac:	f7f9 fcc2 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80178b0:	4640      	mov	r0, r8
 80178b2:	f7f9 fc97 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80178b6:	a80e      	add	r0, sp, #56	; 0x38
 80178b8:	f7f9 fc94 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80178bc:	4b38      	ldr	r3, [pc, #224]	; (80179a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80178be:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80178c2:	881b      	ldrh	r3, [r3, #0]
 80178c4:	9307      	str	r3, [sp, #28]
 80178c6:	682b      	ldr	r3, [r5, #0]
 80178c8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80179a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80178cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80178ce:	4628      	mov	r0, r5
 80178d0:	4798      	blx	r3
 80178d2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80178d6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80178da:	4681      	mov	r9, r0
 80178dc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80178e0:	f8db 0000 	ldr.w	r0, [fp]
 80178e4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80178e6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80178ea:	6803      	ldr	r3, [r0, #0]
 80178ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80178ee:	4798      	blx	r3
 80178f0:	4607      	mov	r7, r0
 80178f2:	f8db 0000 	ldr.w	r0, [fp]
 80178f6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80178fa:	6803      	ldr	r3, [r0, #0]
 80178fc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017900:	9109      	str	r1, [sp, #36]	; 0x24
 8017902:	9208      	str	r2, [sp, #32]
 8017904:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017906:	4798      	blx	r3
 8017908:	f010 0f01 	tst.w	r0, #1
 801790c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017910:	d012      	beq.n	8017938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017912:	f8db 0000 	ldr.w	r0, [fp]
 8017916:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801791a:	6803      	ldr	r3, [r0, #0]
 801791c:	9200      	str	r2, [sp, #0]
 801791e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017920:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017924:	462b      	mov	r3, r5
 8017926:	47b0      	blx	r6
 8017928:	9b03      	ldr	r3, [sp, #12]
 801792a:	8023      	strh	r3, [r4, #0]
 801792c:	9b04      	ldr	r3, [sp, #16]
 801792e:	8063      	strh	r3, [r4, #2]
 8017930:	9b05      	ldr	r3, [sp, #20]
 8017932:	80a3      	strh	r3, [r4, #4]
 8017934:	9b06      	ldr	r3, [sp, #24]
 8017936:	e78b      	b.n	8017850 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017938:	fb09 f202 	mul.w	r2, r9, r2
 801793c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017940:	440f      	add	r7, r1
 8017942:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017946:	b166      	cbz	r6, 8017962 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017948:	9a07      	ldr	r2, [sp, #28]
 801794a:	4592      	cmp	sl, r2
 801794c:	d109      	bne.n	8017962 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801794e:	f8db 0000 	ldr.w	r0, [fp]
 8017952:	6802      	ldr	r2, [r0, #0]
 8017954:	fb09 f303 	mul.w	r3, r9, r3
 8017958:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801795a:	4629      	mov	r1, r5
 801795c:	463a      	mov	r2, r7
 801795e:	47b0      	blx	r6
 8017960:	e7e2      	b.n	8017928 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017962:	fb0a f303 	mul.w	r3, sl, r3
 8017966:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80179a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801796a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801796e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017972:	4545      	cmp	r5, r8
 8017974:	d2d8      	bcs.n	8017928 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017976:	f8db 0000 	ldr.w	r0, [fp]
 801797a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801797e:	6802      	ldr	r2, [r0, #0]
 8017980:	4629      	mov	r1, r5
 8017982:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017986:	005b      	lsls	r3, r3, #1
 8017988:	463a      	mov	r2, r7
 801798a:	47d0      	blx	sl
 801798c:	444f      	add	r7, r9
 801798e:	4435      	add	r5, r6
 8017990:	e7ef      	b.n	8017972 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017992:	bf00      	nop
 8017994:	200157f4 	.word	0x200157f4
 8017998:	200157f6 	.word	0x200157f6
 801799c:	200157f8 	.word	0x200157f8
 80179a0:	200157fa 	.word	0x200157fa
 80179a4:	20015800 	.word	0x20015800

080179a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80179a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80179aa:	4606      	mov	r6, r0
 80179ac:	b087      	sub	sp, #28
 80179ae:	460c      	mov	r4, r1
 80179b0:	4617      	mov	r7, r2
 80179b2:	461d      	mov	r5, r3
 80179b4:	b333      	cbz	r3, 8017a04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80179b6:	4608      	mov	r0, r1
 80179b8:	f7f3 fc83 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80179bc:	bb10      	cbnz	r0, 8017a04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80179be:	6820      	ldr	r0, [r4, #0]
 80179c0:	6861      	ldr	r1, [r4, #4]
 80179c2:	4c1c      	ldr	r4, [pc, #112]	; (8017a34 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80179c4:	ab04      	add	r3, sp, #16
 80179c6:	c303      	stmia	r3!, {r0, r1}
 80179c8:	a804      	add	r0, sp, #16
 80179ca:	f7f9 fc0b 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179ce:	6820      	ldr	r0, [r4, #0]
 80179d0:	6803      	ldr	r3, [r0, #0]
 80179d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80179d4:	4798      	blx	r3
 80179d6:	2dff      	cmp	r5, #255	; 0xff
 80179d8:	d016      	beq.n	8017a08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80179da:	f010 0f08 	tst.w	r0, #8
 80179de:	6820      	ldr	r0, [r4, #0]
 80179e0:	d015      	beq.n	8017a0e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80179e2:	2400      	movs	r4, #0
 80179e4:	6801      	ldr	r1, [r0, #0]
 80179e6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80179ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80179ee:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80179f2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80179f6:	9401      	str	r4, [sp, #4]
 80179f8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80179fc:	9400      	str	r4, [sp, #0]
 80179fe:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017a00:	4639      	mov	r1, r7
 8017a02:	47a0      	blx	r4
 8017a04:	b007      	add	sp, #28
 8017a06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017a08:	f010 0f02 	tst.w	r0, #2
 8017a0c:	e7e7      	b.n	80179de <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017a0e:	6803      	ldr	r3, [r0, #0]
 8017a10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a12:	4798      	blx	r3
 8017a14:	4b08      	ldr	r3, [pc, #32]	; (8017a38 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017a16:	881a      	ldrh	r2, [r3, #0]
 8017a18:	6833      	ldr	r3, [r6, #0]
 8017a1a:	e9cd 7500 	strd	r7, r5, [sp]
 8017a1e:	4601      	mov	r1, r0
 8017a20:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8017a22:	4630      	mov	r0, r6
 8017a24:	ab04      	add	r3, sp, #16
 8017a26:	47a8      	blx	r5
 8017a28:	6820      	ldr	r0, [r4, #0]
 8017a2a:	6803      	ldr	r3, [r0, #0]
 8017a2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017a2e:	4798      	blx	r3
 8017a30:	e7e8      	b.n	8017a04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017a32:	bf00      	nop
 8017a34:	20015800 	.word	0x20015800
 8017a38:	200157fa 	.word	0x200157fa

08017a3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017a3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017a40:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017a44:	9e08      	ldr	r6, [sp, #32]
 8017a46:	4688      	mov	r8, r1
 8017a48:	4614      	mov	r4, r2
 8017a4a:	461d      	mov	r5, r3
 8017a4c:	2f00      	cmp	r7, #0
 8017a4e:	f000 80a9 	beq.w	8017ba4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017a52:	4618      	mov	r0, r3
 8017a54:	f7f3 fc35 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017a58:	2800      	cmp	r0, #0
 8017a5a:	f040 80a3 	bne.w	8017ba4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017a5e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017a62:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017a66:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017a6a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017a6e:	fb04 1303 	mla	r3, r4, r3, r1
 8017a72:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017a76:	4365      	muls	r5, r4
 8017a78:	2fff      	cmp	r7, #255	; 0xff
 8017a7a:	eba4 0200 	sub.w	r2, r4, r0
 8017a7e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017a82:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017a86:	d04a      	beq.n	8017b1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017a88:	b2bc      	uxth	r4, r7
 8017a8a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8017a8e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017a92:	fa5f f788 	uxtb.w	r7, r8
 8017a96:	b2f3      	uxtb	r3, r6
 8017a98:	0040      	lsls	r0, r0, #1
 8017a9a:	fb0e fe04 	mul.w	lr, lr, r4
 8017a9e:	4367      	muls	r7, r4
 8017aa0:	4363      	muls	r3, r4
 8017aa2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017aa6:	fa1f fc8c 	uxth.w	ip, ip
 8017aaa:	42a9      	cmp	r1, r5
 8017aac:	d27a      	bcs.n	8017ba4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017aae:	eb01 0900 	add.w	r9, r1, r0
 8017ab2:	4549      	cmp	r1, r9
 8017ab4:	d231      	bcs.n	8017b1a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017ab6:	880a      	ldrh	r2, [r1, #0]
 8017ab8:	1214      	asrs	r4, r2, #8
 8017aba:	10d6      	asrs	r6, r2, #3
 8017abc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017ac0:	00d2      	lsls	r2, r2, #3
 8017ac2:	b2d2      	uxtb	r2, r2
 8017ac4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017ac8:	fb14 f40c 	smulbb	r4, r4, ip
 8017acc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017ad0:	4474      	add	r4, lr
 8017ad2:	fb12 f20c 	smulbb	r2, r2, ip
 8017ad6:	b2a4      	uxth	r4, r4
 8017ad8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017adc:	441a      	add	r2, r3
 8017ade:	b292      	uxth	r2, r2
 8017ae0:	f104 0a01 	add.w	sl, r4, #1
 8017ae4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017ae8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017aec:	fb16 f60c 	smulbb	r6, r6, ip
 8017af0:	f102 0a01 	add.w	sl, r2, #1
 8017af4:	443e      	add	r6, r7
 8017af6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017afa:	b2b6      	uxth	r6, r6
 8017afc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017b00:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b04:	4322      	orrs	r2, r4
 8017b06:	1c74      	adds	r4, r6, #1
 8017b08:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017b0c:	0976      	lsrs	r6, r6, #5
 8017b0e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017b12:	4332      	orrs	r2, r6
 8017b14:	f821 2b02 	strh.w	r2, [r1], #2
 8017b18:	e7cb      	b.n	8017ab2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017b1a:	4441      	add	r1, r8
 8017b1c:	e7c5      	b.n	8017aaa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8017b1e:	4f22      	ldr	r7, [pc, #136]	; (8017ba8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017b20:	0973      	lsrs	r3, r6, #5
 8017b22:	ea08 0707 	and.w	r7, r8, r7
 8017b26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b2a:	433b      	orrs	r3, r7
 8017b2c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017b30:	4333      	orrs	r3, r6
 8017b32:	07e7      	lsls	r7, r4, #31
 8017b34:	b29b      	uxth	r3, r3
 8017b36:	d50b      	bpl.n	8017b50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017b38:	0040      	lsls	r0, r0, #1
 8017b3a:	0052      	lsls	r2, r2, #1
 8017b3c:	42a9      	cmp	r1, r5
 8017b3e:	d231      	bcs.n	8017ba4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b40:	180c      	adds	r4, r1, r0
 8017b42:	42a1      	cmp	r1, r4
 8017b44:	d202      	bcs.n	8017b4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017b46:	f821 3b02 	strh.w	r3, [r1], #2
 8017b4a:	e7fa      	b.n	8017b42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017b4c:	4411      	add	r1, r2
 8017b4e:	e7f5      	b.n	8017b3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017b50:	078e      	lsls	r6, r1, #30
 8017b52:	d008      	beq.n	8017b66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017b54:	0066      	lsls	r6, r4, #1
 8017b56:	460a      	mov	r2, r1
 8017b58:	42aa      	cmp	r2, r5
 8017b5a:	d202      	bcs.n	8017b62 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017b5c:	8013      	strh	r3, [r2, #0]
 8017b5e:	4432      	add	r2, r6
 8017b60:	e7fa      	b.n	8017b58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017b62:	3102      	adds	r1, #2
 8017b64:	3801      	subs	r0, #1
 8017b66:	07c2      	lsls	r2, r0, #31
 8017b68:	d50b      	bpl.n	8017b82 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017b6a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8017b6e:	3a01      	subs	r2, #1
 8017b70:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017b74:	0066      	lsls	r6, r4, #1
 8017b76:	42aa      	cmp	r2, r5
 8017b78:	d202      	bcs.n	8017b80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017b7a:	8013      	strh	r3, [r2, #0]
 8017b7c:	4432      	add	r2, r6
 8017b7e:	e7fa      	b.n	8017b76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017b80:	3801      	subs	r0, #1
 8017b82:	b178      	cbz	r0, 8017ba4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b84:	1040      	asrs	r0, r0, #1
 8017b86:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017b8a:	0080      	lsls	r0, r0, #2
 8017b8c:	0064      	lsls	r4, r4, #1
 8017b8e:	42a9      	cmp	r1, r5
 8017b90:	d208      	bcs.n	8017ba4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b92:	180e      	adds	r6, r1, r0
 8017b94:	460a      	mov	r2, r1
 8017b96:	42b2      	cmp	r2, r6
 8017b98:	d202      	bcs.n	8017ba0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017b9a:	f842 3b04 	str.w	r3, [r2], #4
 8017b9e:	e7fa      	b.n	8017b96 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017ba0:	4421      	add	r1, r4
 8017ba2:	e7f4      	b.n	8017b8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017ba4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ba8:	00fff800 	.word	0x00fff800

08017bac <_ZN8touchgfx8LCD16bppC1Ev>:
 8017bac:	2200      	movs	r2, #0
 8017bae:	4910      	ldr	r1, [pc, #64]	; (8017bf0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8017bb0:	6042      	str	r2, [r0, #4]
 8017bb2:	6001      	str	r1, [r0, #0]
 8017bb4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8017bb8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8017bbc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8017bc0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017bc4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017bc8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8017bcc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8017bd0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017bd4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017bd8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8017bdc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8017be0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017be4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017be8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8017bec:	4770      	bx	lr
 8017bee:	bf00      	nop
 8017bf0:	08024b54 	.word	0x08024b54

08017bf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bf8:	460d      	mov	r5, r1
 8017bfa:	b08d      	sub	sp, #52	; 0x34
 8017bfc:	4604      	mov	r4, r0
 8017bfe:	6808      	ldr	r0, [r1, #0]
 8017c00:	6849      	ldr	r1, [r1, #4]
 8017c02:	4699      	mov	r9, r3
 8017c04:	ab08      	add	r3, sp, #32
 8017c06:	c303      	stmia	r3!, {r0, r1}
 8017c08:	6810      	ldr	r0, [r2, #0]
 8017c0a:	6851      	ldr	r1, [r2, #4]
 8017c0c:	ab0a      	add	r3, sp, #40	; 0x28
 8017c0e:	c303      	stmia	r3!, {r0, r1}
 8017c10:	a808      	add	r0, sp, #32
 8017c12:	f7f9 fae7 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c16:	4629      	mov	r1, r5
 8017c18:	a80a      	add	r0, sp, #40	; 0x28
 8017c1a:	f7f9 fb0b 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c1e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017c22:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017c26:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8017c2a:	4d63      	ldr	r5, [pc, #396]	; (8017db8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017c2c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017c30:	6828      	ldr	r0, [r5, #0]
 8017c32:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017c36:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017c3a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017c3e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017c42:	440a      	add	r2, r1
 8017c44:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017c48:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017c4c:	4413      	add	r3, r2
 8017c4e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017c52:	6803      	ldr	r3, [r0, #0]
 8017c54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017c56:	4798      	blx	r3
 8017c58:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017c5c:	d119      	bne.n	8017c92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017c5e:	f010 0f20 	tst.w	r0, #32
 8017c62:	6828      	ldr	r0, [r5, #0]
 8017c64:	d018      	beq.n	8017c98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017c66:	2500      	movs	r5, #0
 8017c68:	6801      	ldr	r1, [r0, #0]
 8017c6a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8017c6e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8017c72:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017c76:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017c7a:	9502      	str	r5, [sp, #8]
 8017c7c:	b2b6      	uxth	r6, r6
 8017c7e:	fa1f f588 	uxth.w	r5, r8
 8017c82:	9601      	str	r6, [sp, #4]
 8017c84:	9500      	str	r5, [sp, #0]
 8017c86:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8017c88:	4621      	mov	r1, r4
 8017c8a:	47a8      	blx	r5
 8017c8c:	b00d      	add	sp, #52	; 0x34
 8017c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c92:	f010 0f40 	tst.w	r0, #64	; 0x40
 8017c96:	e7e4      	b.n	8017c62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017c98:	6803      	ldr	r3, [r0, #0]
 8017c9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017c9c:	4798      	blx	r3
 8017c9e:	4947      	ldr	r1, [pc, #284]	; (8017dbc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017ca0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017ca4:	880b      	ldrh	r3, [r1, #0]
 8017ca6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8017caa:	fb03 5202 	mla	r2, r3, r2, r5
 8017cae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017cb2:	4373      	muls	r3, r6
 8017cb4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017cb8:	9307      	str	r3, [sp, #28]
 8017cba:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017cbe:	9306      	str	r3, [sp, #24]
 8017cc0:	468a      	mov	sl, r1
 8017cc2:	9b07      	ldr	r3, [sp, #28]
 8017cc4:	4298      	cmp	r0, r3
 8017cc6:	d270      	bcs.n	8017daa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017cc8:	9b06      	ldr	r3, [sp, #24]
 8017cca:	4621      	mov	r1, r4
 8017ccc:	eb00 0b03 	add.w	fp, r0, r3
 8017cd0:	4558      	cmp	r0, fp
 8017cd2:	d25d      	bcs.n	8017d90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017cd4:	f851 4b04 	ldr.w	r4, [r1], #4
 8017cd8:	0e23      	lsrs	r3, r4, #24
 8017cda:	d014      	beq.n	8017d06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017cdc:	2bff      	cmp	r3, #255	; 0xff
 8017cde:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017ce2:	d112      	bne.n	8017d0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017ce4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017ce8:	d10f      	bne.n	8017d0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017cea:	0963      	lsrs	r3, r4, #5
 8017cec:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017cf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017cf4:	f02c 0c07 	bic.w	ip, ip, #7
 8017cf8:	ea43 0c0c 	orr.w	ip, r3, ip
 8017cfc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017d00:	ea4c 0404 	orr.w	r4, ip, r4
 8017d04:	8004      	strh	r4, [r0, #0]
 8017d06:	3002      	adds	r0, #2
 8017d08:	e7e2      	b.n	8017cd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017d0a:	fb09 f303 	mul.w	r3, r9, r3
 8017d0e:	8807      	ldrh	r7, [r0, #0]
 8017d10:	1c5a      	adds	r2, r3, #1
 8017d12:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017d16:	1212      	asrs	r2, r2, #8
 8017d18:	123e      	asrs	r6, r7, #8
 8017d1a:	b293      	uxth	r3, r2
 8017d1c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017d20:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017d24:	43d2      	mvns	r2, r2
 8017d26:	b2d2      	uxtb	r2, r2
 8017d28:	10fd      	asrs	r5, r7, #3
 8017d2a:	fb1e fe03 	smulbb	lr, lr, r3
 8017d2e:	00ff      	lsls	r7, r7, #3
 8017d30:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017d34:	fb06 e602 	mla	r6, r6, r2, lr
 8017d38:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017d3c:	b2ff      	uxtb	r7, r7
 8017d3e:	fa5f fc8c 	uxtb.w	ip, ip
 8017d42:	b2e4      	uxtb	r4, r4
 8017d44:	b2b6      	uxth	r6, r6
 8017d46:	fb1c fc03 	smulbb	ip, ip, r3
 8017d4a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017d4e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017d52:	fb14 f403 	smulbb	r4, r4, r3
 8017d56:	fb05 c502 	mla	r5, r5, r2, ip
 8017d5a:	f106 0e01 	add.w	lr, r6, #1
 8017d5e:	fb07 4702 	mla	r7, r7, r2, r4
 8017d62:	b2ad      	uxth	r5, r5
 8017d64:	b2bf      	uxth	r7, r7
 8017d66:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017d6a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8017d6e:	f105 0c01 	add.w	ip, r5, #1
 8017d72:	1c7e      	adds	r6, r7, #1
 8017d74:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017d78:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017d7c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017d80:	096d      	lsrs	r5, r5, #5
 8017d82:	ea46 060e 	orr.w	r6, r6, lr
 8017d86:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017d8a:	432e      	orrs	r6, r5
 8017d8c:	8006      	strh	r6, [r0, #0]
 8017d8e:	e7ba      	b.n	8017d06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017d90:	f8ba 3000 	ldrh.w	r3, [sl]
 8017d94:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8017d98:	eba3 0308 	sub.w	r3, r3, r8
 8017d9c:	eba4 0408 	sub.w	r4, r4, r8
 8017da0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017da4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017da8:	e78b      	b.n	8017cc2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017daa:	4b03      	ldr	r3, [pc, #12]	; (8017db8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017dac:	6818      	ldr	r0, [r3, #0]
 8017dae:	6803      	ldr	r3, [r0, #0]
 8017db0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017db2:	4798      	blx	r3
 8017db4:	e76a      	b.n	8017c8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017db6:	bf00      	nop
 8017db8:	20015800 	.word	0x20015800
 8017dbc:	200157fa 	.word	0x200157fa

08017dc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017dc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017dc4:	460c      	mov	r4, r1
 8017dc6:	b085      	sub	sp, #20
 8017dc8:	6810      	ldr	r0, [r2, #0]
 8017dca:	6851      	ldr	r1, [r2, #4]
 8017dcc:	466d      	mov	r5, sp
 8017dce:	c503      	stmia	r5!, {r0, r1}
 8017dd0:	6818      	ldr	r0, [r3, #0]
 8017dd2:	6859      	ldr	r1, [r3, #4]
 8017dd4:	4616      	mov	r6, r2
 8017dd6:	c503      	stmia	r5!, {r0, r1}
 8017dd8:	4668      	mov	r0, sp
 8017dda:	f7f9 fa03 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017dde:	4631      	mov	r1, r6
 8017de0:	a802      	add	r0, sp, #8
 8017de2:	f7f9 fa27 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017de6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017dea:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017dee:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017df2:	4d28      	ldr	r5, [pc, #160]	; (8017e94 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017df4:	4e28      	ldr	r6, [pc, #160]	; (8017e98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017df6:	6828      	ldr	r0, [r5, #0]
 8017df8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017dfc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017e00:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017e04:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017e08:	f8bd 1000 	ldrh.w	r1, [sp]
 8017e0c:	440a      	add	r2, r1
 8017e0e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017e12:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017e16:	4413      	add	r3, r2
 8017e18:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017e1c:	6803      	ldr	r3, [r0, #0]
 8017e1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e20:	4798      	blx	r3
 8017e22:	8833      	ldrh	r3, [r6, #0]
 8017e24:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017e28:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017e2c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8017e9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017e30:	fb03 1202 	mla	r2, r3, r2, r1
 8017e34:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017e38:	fb08 f303 	mul.w	r3, r8, r3
 8017e3c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017e40:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017e44:	4298      	cmp	r0, r3
 8017e46:	d21d      	bcs.n	8017e84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017e48:	eb00 080c 	add.w	r8, r0, ip
 8017e4c:	4540      	cmp	r0, r8
 8017e4e:	d20f      	bcs.n	8017e70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017e50:	f854 1b04 	ldr.w	r1, [r4], #4
 8017e54:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017e58:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017e5c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017e60:	ea42 0209 	orr.w	r2, r2, r9
 8017e64:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017e68:	430a      	orrs	r2, r1
 8017e6a:	f820 2b02 	strh.w	r2, [r0], #2
 8017e6e:	e7ed      	b.n	8017e4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017e70:	8832      	ldrh	r2, [r6, #0]
 8017e72:	1bd2      	subs	r2, r2, r7
 8017e74:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017e78:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017e7c:	1bd2      	subs	r2, r2, r7
 8017e7e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017e82:	e7df      	b.n	8017e44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017e84:	6828      	ldr	r0, [r5, #0]
 8017e86:	6803      	ldr	r3, [r0, #0]
 8017e88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017e8a:	4798      	blx	r3
 8017e8c:	b005      	add	sp, #20
 8017e8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017e92:	bf00      	nop
 8017e94:	20015800 	.word	0x20015800
 8017e98:	200157fa 	.word	0x200157fa
 8017e9c:	fffff800 	.word	0xfffff800

08017ea0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017ea0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017ea4:	460e      	mov	r6, r1
 8017ea6:	b08e      	sub	sp, #56	; 0x38
 8017ea8:	4604      	mov	r4, r0
 8017eaa:	6808      	ldr	r0, [r1, #0]
 8017eac:	6849      	ldr	r1, [r1, #4]
 8017eae:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8018088 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017eb2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801808c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017eb6:	461d      	mov	r5, r3
 8017eb8:	ab0a      	add	r3, sp, #40	; 0x28
 8017eba:	c303      	stmia	r3!, {r0, r1}
 8017ebc:	6810      	ldr	r0, [r2, #0]
 8017ebe:	6851      	ldr	r1, [r2, #4]
 8017ec0:	ab0c      	add	r3, sp, #48	; 0x30
 8017ec2:	c303      	stmia	r3!, {r0, r1}
 8017ec4:	a80a      	add	r0, sp, #40	; 0x28
 8017ec6:	f7f9 f98d 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017eca:	4631      	mov	r1, r6
 8017ecc:	a80c      	add	r0, sp, #48	; 0x30
 8017ece:	f7f9 f9b1 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017ed2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8017ed6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017eda:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017ede:	f8d8 0000 	ldr.w	r0, [r8]
 8017ee2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017ee6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017eea:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017eee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017ef2:	440c      	add	r4, r1
 8017ef4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017ef8:	440a      	add	r2, r1
 8017efa:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017efe:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017f02:	4413      	add	r3, r2
 8017f04:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017f08:	6803      	ldr	r3, [r0, #0]
 8017f0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017f0c:	4798      	blx	r3
 8017f0e:	2dff      	cmp	r5, #255	; 0xff
 8017f10:	d124      	bne.n	8017f5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017f12:	f010 0f01 	tst.w	r0, #1
 8017f16:	f8d8 0000 	ldr.w	r0, [r8]
 8017f1a:	d022      	beq.n	8017f62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017f1c:	2100      	movs	r1, #0
 8017f1e:	f8d0 c000 	ldr.w	ip, [r0]
 8017f22:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017f26:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017f2a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017f2e:	f04f 0e01 	mov.w	lr, #1
 8017f32:	f8cd e018 	str.w	lr, [sp, #24]
 8017f36:	f8b9 e000 	ldrh.w	lr, [r9]
 8017f3a:	9503      	str	r5, [sp, #12]
 8017f3c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017f40:	b2b6      	uxth	r6, r6
 8017f42:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017f46:	9102      	str	r1, [sp, #8]
 8017f48:	b2bf      	uxth	r7, r7
 8017f4a:	9601      	str	r6, [sp, #4]
 8017f4c:	9700      	str	r7, [sp, #0]
 8017f4e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017f52:	4621      	mov	r1, r4
 8017f54:	47a8      	blx	r5
 8017f56:	b00e      	add	sp, #56	; 0x38
 8017f58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017f5c:	f010 0f04 	tst.w	r0, #4
 8017f60:	e7d9      	b.n	8017f16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017f62:	6803      	ldr	r3, [r0, #0]
 8017f64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017f66:	4798      	blx	r3
 8017f68:	f8b9 3000 	ldrh.w	r3, [r9]
 8017f6c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017f70:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017f74:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017f78:	fb03 1202 	mla	r2, r3, r2, r1
 8017f7c:	ebac 0c07 	sub.w	ip, ip, r7
 8017f80:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017f84:	435e      	muls	r6, r3
 8017f86:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017f8a:	2dff      	cmp	r5, #255	; 0xff
 8017f8c:	eba3 0707 	sub.w	r7, r3, r7
 8017f90:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017f94:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017f98:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017f9c:	d049      	beq.n	8018032 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017f9e:	43eb      	mvns	r3, r5
 8017fa0:	fa1f f985 	uxth.w	r9, r5
 8017fa4:	b2db      	uxtb	r3, r3
 8017fa6:	42b0      	cmp	r0, r6
 8017fa8:	d266      	bcs.n	8018078 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017faa:	eb00 0a0e 	add.w	sl, r0, lr
 8017fae:	4550      	cmp	r0, sl
 8017fb0:	4621      	mov	r1, r4
 8017fb2:	f104 0403 	add.w	r4, r4, #3
 8017fb6:	d25b      	bcs.n	8018070 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017fb8:	8802      	ldrh	r2, [r0, #0]
 8017fba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017fbe:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017fc2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017fc6:	fb11 f109 	smulbb	r1, r1, r9
 8017fca:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017fce:	10d5      	asrs	r5, r2, #3
 8017fd0:	fb08 1803 	mla	r8, r8, r3, r1
 8017fd4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017fd8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017fdc:	fb11 f109 	smulbb	r1, r1, r9
 8017fe0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017fe4:	fb05 1503 	mla	r5, r5, r3, r1
 8017fe8:	00d2      	lsls	r2, r2, #3
 8017fea:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017fee:	b2d2      	uxtb	r2, r2
 8017ff0:	fb11 f109 	smulbb	r1, r1, r9
 8017ff4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017ff8:	fa1f f888 	uxth.w	r8, r8
 8017ffc:	fb02 1203 	mla	r2, r2, r3, r1
 8018000:	b292      	uxth	r2, r2
 8018002:	f108 0101 	add.w	r1, r8, #1
 8018006:	b2ad      	uxth	r5, r5
 8018008:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801800c:	1c51      	adds	r1, r2, #1
 801800e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018012:	1c69      	adds	r1, r5, #1
 8018014:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018018:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801801c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018020:	096d      	lsrs	r5, r5, #5
 8018022:	ea42 0208 	orr.w	r2, r2, r8
 8018026:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801802a:	432a      	orrs	r2, r5
 801802c:	f820 2b02 	strh.w	r2, [r0], #2
 8018030:	e7bd      	b.n	8017fae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8018032:	4a14      	ldr	r2, [pc, #80]	; (8018084 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8018034:	42b0      	cmp	r0, r6
 8018036:	d21f      	bcs.n	8018078 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018038:	eb00 050e 	add.w	r5, r0, lr
 801803c:	42a8      	cmp	r0, r5
 801803e:	4621      	mov	r1, r4
 8018040:	f104 0403 	add.w	r4, r4, #3
 8018044:	d210      	bcs.n	8018068 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8018046:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801804a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801804e:	00db      	lsls	r3, r3, #3
 8018050:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018054:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018058:	430b      	orrs	r3, r1
 801805a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801805e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8018062:	f820 3b02 	strh.w	r3, [r0], #2
 8018066:	e7e9      	b.n	801803c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8018068:	4438      	add	r0, r7
 801806a:	eb01 040c 	add.w	r4, r1, ip
 801806e:	e7e1      	b.n	8018034 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018070:	4438      	add	r0, r7
 8018072:	eb01 040c 	add.w	r4, r1, ip
 8018076:	e796      	b.n	8017fa6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8018078:	4b03      	ldr	r3, [pc, #12]	; (8018088 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801807a:	6818      	ldr	r0, [r3, #0]
 801807c:	6803      	ldr	r3, [r0, #0]
 801807e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018080:	4798      	blx	r3
 8018082:	e768      	b.n	8017f56 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8018084:	fffff800 	.word	0xfffff800
 8018088:	20015800 	.word	0x20015800
 801808c:	200157fa 	.word	0x200157fa

08018090 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018090:	b4f0      	push	{r4, r5, r6, r7}
 8018092:	4616      	mov	r6, r2
 8018094:	2e01      	cmp	r6, #1
 8018096:	461c      	mov	r4, r3
 8018098:	460d      	mov	r5, r1
 801809a:	9a04      	ldr	r2, [sp, #16]
 801809c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80180a0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80180a4:	d012      	beq.n	80180cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80180a6:	d303      	bcc.n	80180b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80180a8:	2e02      	cmp	r6, #2
 80180aa:	d00a      	beq.n	80180c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80180ac:	bcf0      	pop	{r4, r5, r6, r7}
 80180ae:	4770      	bx	lr
 80180b0:	6805      	ldr	r5, [r0, #0]
 80180b2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80180b6:	68ed      	ldr	r5, [r5, #12]
 80180b8:	4613      	mov	r3, r2
 80180ba:	46ac      	mov	ip, r5
 80180bc:	4622      	mov	r2, r4
 80180be:	bcf0      	pop	{r4, r5, r6, r7}
 80180c0:	4760      	bx	ip
 80180c2:	4621      	mov	r1, r4
 80180c4:	4628      	mov	r0, r5
 80180c6:	bcf0      	pop	{r4, r5, r6, r7}
 80180c8:	f7ff bd94 	b.w	8017bf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80180cc:	4621      	mov	r1, r4
 80180ce:	4628      	mov	r0, r5
 80180d0:	bcf0      	pop	{r4, r5, r6, r7}
 80180d2:	f7ff bee5 	b.w	8017ea0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080180d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80180d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180dc:	4681      	mov	r9, r0
 80180de:	b093      	sub	sp, #76	; 0x4c
 80180e0:	6810      	ldr	r0, [r2, #0]
 80180e2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80180e6:	4f6d      	ldr	r7, [pc, #436]	; (801829c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80180e8:	4688      	mov	r8, r1
 80180ea:	6851      	ldr	r1, [r2, #4]
 80180ec:	ac0e      	add	r4, sp, #56	; 0x38
 80180ee:	c403      	stmia	r4!, {r0, r1}
 80180f0:	6818      	ldr	r0, [r3, #0]
 80180f2:	6859      	ldr	r1, [r3, #4]
 80180f4:	ac10      	add	r4, sp, #64	; 0x40
 80180f6:	4616      	mov	r6, r2
 80180f8:	c403      	stmia	r4!, {r0, r1}
 80180fa:	a80e      	add	r0, sp, #56	; 0x38
 80180fc:	f7f9 f872 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018100:	4631      	mov	r1, r6
 8018102:	a810      	add	r0, sp, #64	; 0x40
 8018104:	f7f9 f896 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018108:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801810c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8018110:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8018114:	4e62      	ldr	r6, [pc, #392]	; (80182a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018116:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801811a:	6830      	ldr	r0, [r6, #0]
 801811c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8018120:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018124:	4489      	add	r9, r1
 8018126:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801812a:	440a      	add	r2, r1
 801812c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8018130:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018134:	4413      	add	r3, r2
 8018136:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801813a:	6803      	ldr	r3, [r0, #0]
 801813c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801813e:	4798      	blx	r3
 8018140:	f010 0f80 	tst.w	r0, #128	; 0x80
 8018144:	6830      	ldr	r0, [r6, #0]
 8018146:	d01d      	beq.n	8018184 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018148:	2200      	movs	r2, #0
 801814a:	6801      	ldr	r1, [r0, #0]
 801814c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8018150:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018154:	220b      	movs	r2, #11
 8018156:	9207      	str	r2, [sp, #28]
 8018158:	883a      	ldrh	r2, [r7, #0]
 801815a:	9206      	str	r2, [sp, #24]
 801815c:	2201      	movs	r2, #1
 801815e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018162:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8018166:	9203      	str	r2, [sp, #12]
 8018168:	b2a4      	uxth	r4, r4
 801816a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801816e:	9200      	str	r2, [sp, #0]
 8018170:	b2ad      	uxth	r5, r5
 8018172:	9502      	str	r5, [sp, #8]
 8018174:	9401      	str	r4, [sp, #4]
 8018176:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8018178:	4642      	mov	r2, r8
 801817a:	4649      	mov	r1, r9
 801817c:	47a0      	blx	r4
 801817e:	b013      	add	sp, #76	; 0x4c
 8018180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018184:	6803      	ldr	r3, [r0, #0]
 8018186:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018188:	4798      	blx	r3
 801818a:	883b      	ldrh	r3, [r7, #0]
 801818c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8018190:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8018194:	fb03 1202 	mla	r2, r3, r2, r1
 8018198:	435d      	muls	r5, r3
 801819a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801819e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80181a2:	920c      	str	r2, [sp, #48]	; 0x30
 80181a4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 80181a8:	1b12      	subs	r2, r2, r4
 80181aa:	920d      	str	r2, [sp, #52]	; 0x34
 80181ac:	0062      	lsls	r2, r4, #1
 80181ae:	1b1c      	subs	r4, r3, r4
 80181b0:	0063      	lsls	r3, r4, #1
 80181b2:	920a      	str	r2, [sp, #40]	; 0x28
 80181b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80181b6:	f04f 0e04 	mov.w	lr, #4
 80181ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80181bc:	4298      	cmp	r0, r3
 80181be:	d266      	bcs.n	801828e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80181c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80181c2:	eb00 0b03 	add.w	fp, r0, r3
 80181c6:	4558      	cmp	r0, fp
 80181c8:	d25c      	bcs.n	8018284 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80181ca:	f819 3b01 	ldrb.w	r3, [r9], #1
 80181ce:	fb1e e303 	smlabb	r3, lr, r3, lr
 80181d2:	f858 2003 	ldr.w	r2, [r8, r3]
 80181d6:	0e11      	lsrs	r1, r2, #24
 80181d8:	d012      	beq.n	8018200 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80181da:	29ff      	cmp	r1, #255	; 0xff
 80181dc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80181e0:	d110      	bne.n	8018204 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80181e2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80181e6:	d10d      	bne.n	8018204 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80181e8:	0953      	lsrs	r3, r2, #5
 80181ea:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80181ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80181f2:	f027 0707 	bic.w	r7, r7, #7
 80181f6:	431f      	orrs	r7, r3
 80181f8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80181fc:	433a      	orrs	r2, r7
 80181fe:	8002      	strh	r2, [r0, #0]
 8018200:	3002      	adds	r0, #2
 8018202:	e7e0      	b.n	80181c6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018204:	fb0a f101 	mul.w	r1, sl, r1
 8018208:	8806      	ldrh	r6, [r0, #0]
 801820a:	1c4b      	adds	r3, r1, #1
 801820c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018210:	1235      	asrs	r5, r6, #8
 8018212:	10f4      	asrs	r4, r6, #3
 8018214:	121b      	asrs	r3, r3, #8
 8018216:	00f6      	lsls	r6, r6, #3
 8018218:	b299      	uxth	r1, r3
 801821a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801821e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018222:	b2f6      	uxtb	r6, r6
 8018224:	43db      	mvns	r3, r3
 8018226:	b2d2      	uxtb	r2, r2
 8018228:	b2db      	uxtb	r3, r3
 801822a:	fb1c fc01 	smulbb	ip, ip, r1
 801822e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018232:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018236:	fb12 f201 	smulbb	r2, r2, r1
 801823a:	fb05 c503 	mla	r5, r5, r3, ip
 801823e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8018242:	b2ff      	uxtb	r7, r7
 8018244:	fb06 2203 	mla	r2, r6, r3, r2
 8018248:	b2ad      	uxth	r5, r5
 801824a:	fb17 f701 	smulbb	r7, r7, r1
 801824e:	b292      	uxth	r2, r2
 8018250:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018254:	fb04 7403 	mla	r4, r4, r3, r7
 8018258:	f105 0c01 	add.w	ip, r5, #1
 801825c:	1c57      	adds	r7, r2, #1
 801825e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018262:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018266:	b2a4      	uxth	r4, r4
 8018268:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801826c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018270:	433d      	orrs	r5, r7
 8018272:	1c67      	adds	r7, r4, #1
 8018274:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8018278:	0964      	lsrs	r4, r4, #5
 801827a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801827e:	4325      	orrs	r5, r4
 8018280:	8005      	strh	r5, [r0, #0]
 8018282:	e7bd      	b.n	8018200 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018284:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018286:	4418      	add	r0, r3
 8018288:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801828a:	4499      	add	r9, r3
 801828c:	e795      	b.n	80181ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801828e:	4b04      	ldr	r3, [pc, #16]	; (80182a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018290:	6818      	ldr	r0, [r3, #0]
 8018292:	6803      	ldr	r3, [r0, #0]
 8018294:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018296:	4798      	blx	r3
 8018298:	e771      	b.n	801817e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801829a:	bf00      	nop
 801829c:	200157fa 	.word	0x200157fa
 80182a0:	20015800 	.word	0x20015800

080182a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80182a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182a8:	b087      	sub	sp, #28
 80182aa:	4680      	mov	r8, r0
 80182ac:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 80182b0:	460d      	mov	r5, r1
 80182b2:	4614      	mov	r4, r2
 80182b4:	2e00      	cmp	r6, #0
 80182b6:	f000 80b9 	beq.w	801842c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80182ba:	6810      	ldr	r0, [r2, #0]
 80182bc:	6851      	ldr	r1, [r2, #4]
 80182be:	af02      	add	r7, sp, #8
 80182c0:	c703      	stmia	r7!, {r0, r1}
 80182c2:	6818      	ldr	r0, [r3, #0]
 80182c4:	6859      	ldr	r1, [r3, #4]
 80182c6:	af04      	add	r7, sp, #16
 80182c8:	c703      	stmia	r7!, {r0, r1}
 80182ca:	a802      	add	r0, sp, #8
 80182cc:	f7f8 ff8a 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80182d0:	4621      	mov	r1, r4
 80182d2:	a804      	add	r0, sp, #16
 80182d4:	f7f8 ffae 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80182d8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80182dc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80182e0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80182e4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80182e8:	fb14 2103 	smlabb	r1, r4, r3, r2
 80182ec:	eb08 0401 	add.w	r4, r8, r1
 80182f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80182f4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80182f8:	440a      	add	r2, r1
 80182fa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80182fe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018302:	4413      	add	r3, r2
 8018304:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018308:	4b4a      	ldr	r3, [pc, #296]	; (8018434 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801830a:	6818      	ldr	r0, [r3, #0]
 801830c:	6803      	ldr	r3, [r0, #0]
 801830e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018310:	4798      	blx	r3
 8018312:	4b49      	ldr	r3, [pc, #292]	; (8018438 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018314:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018318:	881a      	ldrh	r2, [r3, #0]
 801831a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801831e:	2eff      	cmp	r6, #255	; 0xff
 8018320:	fb02 c101 	mla	r1, r2, r1, ip
 8018324:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018328:	fb02 f207 	mul.w	r2, r2, r7
 801832c:	f105 0104 	add.w	r1, r5, #4
 8018330:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018334:	461d      	mov	r5, r3
 8018336:	d05a      	beq.n	80183ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018338:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801833c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018340:	b2b6      	uxth	r6, r6
 8018342:	fa1f fe8e 	uxth.w	lr, lr
 8018346:	9301      	str	r3, [sp, #4]
 8018348:	4282      	cmp	r2, r0
 801834a:	d96a      	bls.n	8018422 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801834c:	eb00 0b0a 	add.w	fp, r0, sl
 8018350:	4583      	cmp	fp, r0
 8018352:	d940      	bls.n	80183d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018354:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018358:	8805      	ldrh	r5, [r0, #0]
 801835a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801835e:	122f      	asrs	r7, r5, #8
 8018360:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018364:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018368:	fb17 f70e 	smulbb	r7, r7, lr
 801836c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018370:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018374:	00ed      	lsls	r5, r5, #3
 8018376:	fb0c 7c06 	mla	ip, ip, r6, r7
 801837a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801837e:	10df      	asrs	r7, r3, #3
 8018380:	b2ed      	uxtb	r5, r5
 8018382:	00db      	lsls	r3, r3, #3
 8018384:	fa1f fc8c 	uxth.w	ip, ip
 8018388:	fb19 f90e 	smulbb	r9, r9, lr
 801838c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018390:	b2db      	uxtb	r3, r3
 8018392:	fb15 f50e 	smulbb	r5, r5, lr
 8018396:	fb07 9706 	mla	r7, r7, r6, r9
 801839a:	fb03 5306 	mla	r3, r3, r6, r5
 801839e:	f10c 0901 	add.w	r9, ip, #1
 80183a2:	b29b      	uxth	r3, r3
 80183a4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80183a8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80183ac:	f103 0c01 	add.w	ip, r3, #1
 80183b0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80183b4:	b2bf      	uxth	r7, r7
 80183b6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80183ba:	ea4c 0c09 	orr.w	ip, ip, r9
 80183be:	f107 0901 	add.w	r9, r7, #1
 80183c2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80183c6:	097f      	lsrs	r7, r7, #5
 80183c8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80183cc:	ea4c 0c07 	orr.w	ip, ip, r7
 80183d0:	f820 cb02 	strh.w	ip, [r0], #2
 80183d4:	e7bc      	b.n	8018350 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80183d6:	9b01      	ldr	r3, [sp, #4]
 80183d8:	881b      	ldrh	r3, [r3, #0]
 80183da:	eba3 0308 	sub.w	r3, r3, r8
 80183de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80183e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80183e6:	eba3 0308 	sub.w	r3, r3, r8
 80183ea:	441c      	add	r4, r3
 80183ec:	e7ac      	b.n	8018348 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80183ee:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80183f2:	4282      	cmp	r2, r0
 80183f4:	d915      	bls.n	8018422 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80183f6:	eb00 060a 	add.w	r6, r0, sl
 80183fa:	4286      	cmp	r6, r0
 80183fc:	d906      	bls.n	801840c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80183fe:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018402:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018406:	f820 3b02 	strh.w	r3, [r0], #2
 801840a:	e7f6      	b.n	80183fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801840c:	882b      	ldrh	r3, [r5, #0]
 801840e:	eba3 0308 	sub.w	r3, r3, r8
 8018412:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018416:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801841a:	eba3 0308 	sub.w	r3, r3, r8
 801841e:	441c      	add	r4, r3
 8018420:	e7e7      	b.n	80183f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018422:	4b04      	ldr	r3, [pc, #16]	; (8018434 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018424:	6818      	ldr	r0, [r3, #0]
 8018426:	6803      	ldr	r3, [r0, #0]
 8018428:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801842a:	4798      	blx	r3
 801842c:	b007      	add	sp, #28
 801842e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018432:	bf00      	nop
 8018434:	20015800 	.word	0x20015800
 8018438:	200157fa 	.word	0x200157fa

0801843c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801843c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018440:	b091      	sub	sp, #68	; 0x44
 8018442:	4680      	mov	r8, r0
 8018444:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8018448:	460f      	mov	r7, r1
 801844a:	4614      	mov	r4, r2
 801844c:	2d00      	cmp	r5, #0
 801844e:	d051      	beq.n	80184f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018450:	6810      	ldr	r0, [r2, #0]
 8018452:	6851      	ldr	r1, [r2, #4]
 8018454:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018458:	ae0c      	add	r6, sp, #48	; 0x30
 801845a:	c603      	stmia	r6!, {r0, r1}
 801845c:	6818      	ldr	r0, [r3, #0]
 801845e:	6859      	ldr	r1, [r3, #4]
 8018460:	ae0e      	add	r6, sp, #56	; 0x38
 8018462:	c603      	stmia	r6!, {r0, r1}
 8018464:	a80c      	add	r0, sp, #48	; 0x30
 8018466:	f7f8 febd 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801846a:	4621      	mov	r1, r4
 801846c:	a80e      	add	r0, sp, #56	; 0x38
 801846e:	f7f8 fee1 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018472:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8018476:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801847a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801847e:	f8d9 0000 	ldr.w	r0, [r9]
 8018482:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8018486:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801848a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801848e:	eb08 0401 	add.w	r4, r8, r1
 8018492:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8018496:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801865c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801849a:	440a      	add	r2, r1
 801849c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80184a0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80184a4:	4413      	add	r3, r2
 80184a6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80184aa:	6803      	ldr	r3, [r0, #0]
 80184ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80184ae:	4798      	blx	r3
 80184b0:	f010 0f80 	tst.w	r0, #128	; 0x80
 80184b4:	f8d9 0000 	ldr.w	r0, [r9]
 80184b8:	d01f      	beq.n	80184fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80184ba:	2200      	movs	r2, #0
 80184bc:	6801      	ldr	r1, [r0, #0]
 80184be:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80184c2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80184c6:	220b      	movs	r2, #11
 80184c8:	9207      	str	r2, [sp, #28]
 80184ca:	f8b8 2000 	ldrh.w	r2, [r8]
 80184ce:	9206      	str	r2, [sp, #24]
 80184d0:	2201      	movs	r2, #1
 80184d2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80184d6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80184da:	9203      	str	r2, [sp, #12]
 80184dc:	fa1f f28a 	uxth.w	r2, sl
 80184e0:	9202      	str	r2, [sp, #8]
 80184e2:	b2b6      	uxth	r6, r6
 80184e4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80184e8:	9200      	str	r2, [sp, #0]
 80184ea:	9601      	str	r6, [sp, #4]
 80184ec:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80184ee:	463a      	mov	r2, r7
 80184f0:	4621      	mov	r1, r4
 80184f2:	47a8      	blx	r5
 80184f4:	b011      	add	sp, #68	; 0x44
 80184f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184fa:	6803      	ldr	r3, [r0, #0]
 80184fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80184fe:	4798      	blx	r3
 8018500:	f8b8 2000 	ldrh.w	r2, [r8]
 8018504:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018508:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801850c:	2dff      	cmp	r5, #255	; 0xff
 801850e:	fb02 1303 	mla	r3, r2, r3, r1
 8018512:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018516:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801851a:	fb0a fa02 	mul.w	sl, sl, r2
 801851e:	d062      	beq.n	80185e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018520:	ea6f 0c05 	mvn.w	ip, r5
 8018524:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018528:	930a      	str	r3, [sp, #40]	; 0x28
 801852a:	b2ad      	uxth	r5, r5
 801852c:	fa5f fc8c 	uxtb.w	ip, ip
 8018530:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018534:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018536:	4298      	cmp	r0, r3
 8018538:	f080 8085 	bcs.w	8018646 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801853c:	eb00 0b09 	add.w	fp, r0, r9
 8018540:	4558      	cmp	r0, fp
 8018542:	d246      	bcs.n	80185d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018544:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018548:	2303      	movs	r3, #3
 801854a:	2204      	movs	r2, #4
 801854c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018550:	eb07 0a0e 	add.w	sl, r7, lr
 8018554:	8803      	ldrh	r3, [r0, #0]
 8018556:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801855a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801855e:	1219      	asrs	r1, r3, #8
 8018560:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018564:	fb18 f805 	smulbb	r8, r8, r5
 8018568:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801856c:	10da      	asrs	r2, r3, #3
 801856e:	fb01 810c 	mla	r1, r1, ip, r8
 8018572:	00db      	lsls	r3, r3, #3
 8018574:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018578:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801857c:	b2db      	uxtb	r3, r3
 801857e:	fb18 f805 	smulbb	r8, r8, r5
 8018582:	fb1e fe05 	smulbb	lr, lr, r5
 8018586:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801858a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801858e:	b289      	uxth	r1, r1
 8018590:	fb02 820c 	mla	r2, r2, ip, r8
 8018594:	fb03 e30c 	mla	r3, r3, ip, lr
 8018598:	b292      	uxth	r2, r2
 801859a:	b29b      	uxth	r3, r3
 801859c:	f101 0801 	add.w	r8, r1, #1
 80185a0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80185a4:	f103 0e01 	add.w	lr, r3, #1
 80185a8:	f102 0801 	add.w	r8, r2, #1
 80185ac:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80185b0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80185b4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80185b8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80185bc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80185c0:	ea4e 0101 	orr.w	r1, lr, r1
 80185c4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80185c8:	ea41 0108 	orr.w	r1, r1, r8
 80185cc:	f820 1b02 	strh.w	r1, [r0], #2
 80185d0:	e7b6      	b.n	8018540 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80185d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80185d4:	881b      	ldrh	r3, [r3, #0]
 80185d6:	1b9b      	subs	r3, r3, r6
 80185d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80185dc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80185e0:	1b9b      	subs	r3, r3, r6
 80185e2:	441c      	add	r4, r3
 80185e4:	e7a6      	b.n	8018534 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80185e6:	491b      	ldr	r1, [pc, #108]	; (8018654 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80185e8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80185ec:	2203      	movs	r2, #3
 80185ee:	2504      	movs	r5, #4
 80185f0:	4550      	cmp	r0, sl
 80185f2:	d228      	bcs.n	8018646 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80185f4:	eb00 0c09 	add.w	ip, r0, r9
 80185f8:	4560      	cmp	r0, ip
 80185fa:	4623      	mov	r3, r4
 80185fc:	d219      	bcs.n	8018632 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80185fe:	f893 e000 	ldrb.w	lr, [r3]
 8018602:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018606:	eb07 0b0e 	add.w	fp, r7, lr
 801860a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801860e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018612:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018616:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801861a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801861e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018622:	ea43 030b 	orr.w	r3, r3, fp
 8018626:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801862a:	3401      	adds	r4, #1
 801862c:	f820 3b02 	strh.w	r3, [r0], #2
 8018630:	e7e2      	b.n	80185f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018632:	f8b8 3000 	ldrh.w	r3, [r8]
 8018636:	1b9b      	subs	r3, r3, r6
 8018638:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801863c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018640:	1b9b      	subs	r3, r3, r6
 8018642:	441c      	add	r4, r3
 8018644:	e7d4      	b.n	80185f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018646:	4b04      	ldr	r3, [pc, #16]	; (8018658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018648:	6818      	ldr	r0, [r3, #0]
 801864a:	6803      	ldr	r3, [r0, #0]
 801864c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801864e:	4798      	blx	r3
 8018650:	e750      	b.n	80184f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018652:	bf00      	nop
 8018654:	fffff800 	.word	0xfffff800
 8018658:	20015800 	.word	0x20015800
 801865c:	200157fa 	.word	0x200157fa

08018660 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018660:	b430      	push	{r4, r5}
 8018662:	780d      	ldrb	r5, [r1, #0]
 8018664:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8018668:	2d01      	cmp	r5, #1
 801866a:	d00a      	beq.n	8018682 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801866c:	d305      	bcc.n	801867a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801866e:	2d02      	cmp	r5, #2
 8018670:	d10b      	bne.n	801868a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8018672:	9402      	str	r4, [sp, #8]
 8018674:	bc30      	pop	{r4, r5}
 8018676:	f7ff be15 	b.w	80182a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801867a:	9402      	str	r4, [sp, #8]
 801867c:	bc30      	pop	{r4, r5}
 801867e:	f7ff bd2b 	b.w	80180d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018682:	9402      	str	r4, [sp, #8]
 8018684:	bc30      	pop	{r4, r5}
 8018686:	f7ff bed9 	b.w	801843c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801868a:	bc30      	pop	{r4, r5}
 801868c:	4770      	bx	lr
	...

08018690 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018694:	4604      	mov	r4, r0
 8018696:	b087      	sub	sp, #28
 8018698:	6810      	ldr	r0, [r2, #0]
 801869a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801869e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80188d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80186a2:	460e      	mov	r6, r1
 80186a4:	6851      	ldr	r1, [r2, #4]
 80186a6:	ad02      	add	r5, sp, #8
 80186a8:	c503      	stmia	r5!, {r0, r1}
 80186aa:	6818      	ldr	r0, [r3, #0]
 80186ac:	6859      	ldr	r1, [r3, #4]
 80186ae:	ad04      	add	r5, sp, #16
 80186b0:	4617      	mov	r7, r2
 80186b2:	c503      	stmia	r5!, {r0, r1}
 80186b4:	a802      	add	r0, sp, #8
 80186b6:	f7f8 fd95 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80186ba:	4639      	mov	r1, r7
 80186bc:	a804      	add	r0, sp, #16
 80186be:	f7f8 fdb9 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80186c2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80186c6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80186ca:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80186ce:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80186d2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80186d6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80186da:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80186de:	440e      	add	r6, r1
 80186e0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80186e4:	440a      	add	r2, r1
 80186e6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80186ea:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80186ee:	4413      	add	r3, r2
 80186f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80186f4:	4b77      	ldr	r3, [pc, #476]	; (80188d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80186f6:	6818      	ldr	r0, [r3, #0]
 80186f8:	6803      	ldr	r3, [r0, #0]
 80186fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80186fc:	4798      	blx	r3
 80186fe:	f8b9 b000 	ldrh.w	fp, [r9]
 8018702:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018706:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801870a:	fb0b 2303 	mla	r3, fp, r3, r2
 801870e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018712:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018716:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801871a:	fb05 f50b 	mul.w	r5, r5, fp
 801871e:	9300      	str	r3, [sp, #0]
 8018720:	d069      	beq.n	80187f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018722:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018726:	4558      	cmp	r0, fp
 8018728:	f080 80cc 	bcs.w	80188c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801872c:	9b00      	ldr	r3, [sp, #0]
 801872e:	18c3      	adds	r3, r0, r3
 8018730:	9301      	str	r3, [sp, #4]
 8018732:	4631      	mov	r1, r6
 8018734:	9b01      	ldr	r3, [sp, #4]
 8018736:	4298      	cmp	r0, r3
 8018738:	d24f      	bcs.n	80187da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801873a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801873e:	2a00      	cmp	r2, #0
 8018740:	d048      	beq.n	80187d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018742:	fb0a f202 	mul.w	r2, sl, r2
 8018746:	1c53      	adds	r3, r2, #1
 8018748:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801874c:	121b      	asrs	r3, r3, #8
 801874e:	d041      	beq.n	80187d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018750:	8802      	ldrh	r2, [r0, #0]
 8018752:	f8b4 c000 	ldrh.w	ip, [r4]
 8018756:	b29e      	uxth	r6, r3
 8018758:	1215      	asrs	r5, r2, #8
 801875a:	43db      	mvns	r3, r3
 801875c:	b2db      	uxtb	r3, r3
 801875e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018762:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018766:	fb15 f503 	smulbb	r5, r5, r3
 801876a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801876e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018772:	00d2      	lsls	r2, r2, #3
 8018774:	fb07 5706 	mla	r7, r7, r6, r5
 8018778:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801877c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018780:	b2d2      	uxtb	r2, r2
 8018782:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018786:	b2bf      	uxth	r7, r7
 8018788:	fb1e fe03 	smulbb	lr, lr, r3
 801878c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018790:	fa5f fc8c 	uxtb.w	ip, ip
 8018794:	fb12 f203 	smulbb	r2, r2, r3
 8018798:	fb05 e506 	mla	r5, r5, r6, lr
 801879c:	fb0c 2c06 	mla	ip, ip, r6, r2
 80187a0:	f107 0e01 	add.w	lr, r7, #1
 80187a4:	fa1f fc8c 	uxth.w	ip, ip
 80187a8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80187ac:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80187b0:	f10c 0701 	add.w	r7, ip, #1
 80187b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80187b8:	b2ad      	uxth	r5, r5
 80187ba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80187be:	ea47 070e 	orr.w	r7, r7, lr
 80187c2:	f105 0e01 	add.w	lr, r5, #1
 80187c6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80187ca:	096d      	lsrs	r5, r5, #5
 80187cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80187d0:	432f      	orrs	r7, r5
 80187d2:	8007      	strh	r7, [r0, #0]
 80187d4:	3002      	adds	r0, #2
 80187d6:	3402      	adds	r4, #2
 80187d8:	e7ac      	b.n	8018734 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80187da:	f8b9 3000 	ldrh.w	r3, [r9]
 80187de:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80187e2:	eba3 0308 	sub.w	r3, r3, r8
 80187e6:	eba6 0608 	sub.w	r6, r6, r8
 80187ea:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80187ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80187f2:	440e      	add	r6, r1
 80187f4:	e797      	b.n	8018726 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80187f6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80187fa:	42a8      	cmp	r0, r5
 80187fc:	d262      	bcs.n	80188c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80187fe:	9b00      	ldr	r3, [sp, #0]
 8018800:	4631      	mov	r1, r6
 8018802:	eb00 0b03 	add.w	fp, r0, r3
 8018806:	4558      	cmp	r0, fp
 8018808:	d24e      	bcs.n	80188a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801880a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801880e:	b12b      	cbz	r3, 801881c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018810:	2bff      	cmp	r3, #255	; 0xff
 8018812:	f8b4 e000 	ldrh.w	lr, [r4]
 8018816:	d104      	bne.n	8018822 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018818:	f8a0 e000 	strh.w	lr, [r0]
 801881c:	3002      	adds	r0, #2
 801881e:	3402      	adds	r4, #2
 8018820:	e7f1      	b.n	8018806 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018822:	8802      	ldrh	r2, [r0, #0]
 8018824:	b29f      	uxth	r7, r3
 8018826:	1216      	asrs	r6, r2, #8
 8018828:	43db      	mvns	r3, r3
 801882a:	b2db      	uxtb	r3, r3
 801882c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018830:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018834:	fb16 f603 	smulbb	r6, r6, r3
 8018838:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801883c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018840:	00d2      	lsls	r2, r2, #3
 8018842:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018846:	b2d2      	uxtb	r2, r2
 8018848:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801884c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018850:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018854:	fb1a fa03 	smulbb	sl, sl, r3
 8018858:	fa1f fc8c 	uxth.w	ip, ip
 801885c:	fb12 f303 	smulbb	r3, r2, r3
 8018860:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018864:	fa5f fe8e 	uxtb.w	lr, lr
 8018868:	fb06 a607 	mla	r6, r6, r7, sl
 801886c:	f10c 0201 	add.w	r2, ip, #1
 8018870:	fb0e 3307 	mla	r3, lr, r7, r3
 8018874:	b2b6      	uxth	r6, r6
 8018876:	b29b      	uxth	r3, r3
 8018878:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801887c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8018880:	f106 0a01 	add.w	sl, r6, #1
 8018884:	f103 0c01 	add.w	ip, r3, #1
 8018888:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801888c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018890:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018894:	0976      	lsrs	r6, r6, #5
 8018896:	ea4c 0c02 	orr.w	ip, ip, r2
 801889a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801889e:	ea4c 0c06 	orr.w	ip, ip, r6
 80188a2:	f8a0 c000 	strh.w	ip, [r0]
 80188a6:	e7b9      	b.n	801881c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80188a8:	f8b9 3000 	ldrh.w	r3, [r9]
 80188ac:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80188b0:	eba3 0308 	sub.w	r3, r3, r8
 80188b4:	eba6 0608 	sub.w	r6, r6, r8
 80188b8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80188bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80188c0:	440e      	add	r6, r1
 80188c2:	e79a      	b.n	80187fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80188c4:	4b03      	ldr	r3, [pc, #12]	; (80188d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80188c6:	6818      	ldr	r0, [r3, #0]
 80188c8:	6803      	ldr	r3, [r0, #0]
 80188ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80188cc:	4798      	blx	r3
 80188ce:	b007      	add	sp, #28
 80188d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80188d4:	20015800 	.word	0x20015800
 80188d8:	200157fa 	.word	0x200157fa

080188dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80188dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188e0:	b089      	sub	sp, #36	; 0x24
 80188e2:	4682      	mov	sl, r0
 80188e4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80188e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80188ea:	460f      	mov	r7, r1
 80188ec:	4691      	mov	r9, r2
 80188ee:	4698      	mov	r8, r3
 80188f0:	2e00      	cmp	r6, #0
 80188f2:	d036      	beq.n	8018962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80188f4:	4608      	mov	r0, r1
 80188f6:	f7fc f863 	bl	80149c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80188fa:	4605      	mov	r5, r0
 80188fc:	4638      	mov	r0, r7
 80188fe:	f7fc f893 	bl	8014a28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018902:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018906:	4638      	mov	r0, r7
 8018908:	f8ad 9008 	strh.w	r9, [sp, #8]
 801890c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018910:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018914:	f7fc f940 	bl	8014b98 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018918:	4605      	mov	r5, r0
 801891a:	4638      	mov	r0, r7
 801891c:	f7fc f96c 	bl	8014bf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018920:	4681      	mov	r9, r0
 8018922:	4638      	mov	r0, r7
 8018924:	f7fc f9bc 	bl	8014ca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018928:	280b      	cmp	r0, #11
 801892a:	d81a      	bhi.n	8018962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801892c:	e8df f000 	tbb	[pc, r0]
 8018930:	1906aebd 	.word	0x1906aebd
 8018934:	19191919 	.word	0x19191919
 8018938:	b5191919 	.word	0xb5191919
 801893c:	4bb0      	ldr	r3, [pc, #704]	; (8018c00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801893e:	6818      	ldr	r0, [r3, #0]
 8018940:	6803      	ldr	r3, [r0, #0]
 8018942:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018944:	4798      	blx	r3
 8018946:	2eff      	cmp	r6, #255	; 0xff
 8018948:	d121      	bne.n	801898e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801894a:	0683      	lsls	r3, r0, #26
 801894c:	d41f      	bmi.n	801898e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801894e:	4638      	mov	r0, r7
 8018950:	f7fc f8ea 	bl	8014b28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018954:	b940      	cbnz	r0, 8018968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018956:	4623      	mov	r3, r4
 8018958:	aa02      	add	r2, sp, #8
 801895a:	4629      	mov	r1, r5
 801895c:	4650      	mov	r0, sl
 801895e:	f7ff fa2f 	bl	8017dc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018962:	b009      	add	sp, #36	; 0x24
 8018964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018968:	f10d 0818 	add.w	r8, sp, #24
 801896c:	4639      	mov	r1, r7
 801896e:	4640      	mov	r0, r8
 8018970:	f7fc f88e 	bl	8014a90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018974:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018978:	af04      	add	r7, sp, #16
 801897a:	e887 0003 	stmia.w	r7, {r0, r1}
 801897e:	4638      	mov	r0, r7
 8018980:	4621      	mov	r1, r4
 8018982:	f7f2 fc5b 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 8018986:	4638      	mov	r0, r7
 8018988:	f7f2 fc9b 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801898c:	b130      	cbz	r0, 801899c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801898e:	4633      	mov	r3, r6
 8018990:	4622      	mov	r2, r4
 8018992:	a902      	add	r1, sp, #8
 8018994:	4628      	mov	r0, r5
 8018996:	f7ff f92d 	bl	8017bf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801899a:	e7e2      	b.n	8018962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801899c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80189a0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80189a4:	4293      	cmp	r3, r2
 80189a6:	dd12      	ble.n	80189ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 80189a8:	1a9b      	subs	r3, r3, r2
 80189aa:	f9b4 0000 	ldrsh.w	r0, [r4]
 80189ae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80189b2:	f8ad 0018 	strh.w	r0, [sp, #24]
 80189b6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80189ba:	f8ad 101c 	strh.w	r1, [sp, #28]
 80189be:	f8ad 301e 	strh.w	r3, [sp, #30]
 80189c2:	4642      	mov	r2, r8
 80189c4:	4633      	mov	r3, r6
 80189c6:	a902      	add	r1, sp, #8
 80189c8:	4628      	mov	r0, r5
 80189ca:	f7ff f913 	bl	8017bf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80189ce:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80189d2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80189d6:	4293      	cmp	r3, r2
 80189d8:	dd12      	ble.n	8018a00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 80189da:	1a9b      	subs	r3, r3, r2
 80189dc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80189e0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80189e4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80189e8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80189ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80189f0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80189f4:	23ff      	movs	r3, #255	; 0xff
 80189f6:	4642      	mov	r2, r8
 80189f8:	a902      	add	r1, sp, #8
 80189fa:	4628      	mov	r0, r5
 80189fc:	f7ff f8fa 	bl	8017bf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a00:	463b      	mov	r3, r7
 8018a02:	aa02      	add	r2, sp, #8
 8018a04:	4629      	mov	r1, r5
 8018a06:	4650      	mov	r0, sl
 8018a08:	f7ff f9da 	bl	8017dc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018a0c:	88a2      	ldrh	r2, [r4, #4]
 8018a0e:	8823      	ldrh	r3, [r4, #0]
 8018a10:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018a14:	4413      	add	r3, r2
 8018a16:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018a1a:	440a      	add	r2, r1
 8018a1c:	b29b      	uxth	r3, r3
 8018a1e:	b292      	uxth	r2, r2
 8018a20:	b211      	sxth	r1, r2
 8018a22:	b218      	sxth	r0, r3
 8018a24:	4288      	cmp	r0, r1
 8018a26:	dd12      	ble.n	8018a4e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018a28:	1a9b      	subs	r3, r3, r2
 8018a2a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018a2e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018a32:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018a36:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018a3a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018a3e:	23ff      	movs	r3, #255	; 0xff
 8018a40:	4642      	mov	r2, r8
 8018a42:	a902      	add	r1, sp, #8
 8018a44:	4628      	mov	r0, r5
 8018a46:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018a4a:	f7ff f8d3 	bl	8017bf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a4e:	88e2      	ldrh	r2, [r4, #6]
 8018a50:	8863      	ldrh	r3, [r4, #2]
 8018a52:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018a56:	4413      	add	r3, r2
 8018a58:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018a5c:	440a      	add	r2, r1
 8018a5e:	b29b      	uxth	r3, r3
 8018a60:	b292      	uxth	r2, r2
 8018a62:	b211      	sxth	r1, r2
 8018a64:	b218      	sxth	r0, r3
 8018a66:	4288      	cmp	r0, r1
 8018a68:	f77f af7b 	ble.w	8018962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018a6c:	1a9b      	subs	r3, r3, r2
 8018a6e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018a72:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018a76:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018a7a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8018a7e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018a82:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018a86:	23ff      	movs	r3, #255	; 0xff
 8018a88:	4642      	mov	r2, r8
 8018a8a:	e782      	b.n	8018992 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8018a8c:	4633      	mov	r3, r6
 8018a8e:	4622      	mov	r2, r4
 8018a90:	a902      	add	r1, sp, #8
 8018a92:	4628      	mov	r0, r5
 8018a94:	f7ff fa04 	bl	8017ea0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018a98:	e763      	b.n	8018962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018a9a:	9600      	str	r6, [sp, #0]
 8018a9c:	4623      	mov	r3, r4
 8018a9e:	aa02      	add	r2, sp, #8
 8018aa0:	4649      	mov	r1, r9
 8018aa2:	4628      	mov	r0, r5
 8018aa4:	f7ff fddc 	bl	8018660 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018aa8:	e75b      	b.n	8018962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018aaa:	4638      	mov	r0, r7
 8018aac:	f7fc f83c 	bl	8014b28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018ab0:	b950      	cbnz	r0, 8018ac8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8018ab2:	e9cd 6000 	strd	r6, r0, [sp]
 8018ab6:	f8da 3000 	ldr.w	r3, [sl]
 8018aba:	aa02      	add	r2, sp, #8
 8018abc:	68de      	ldr	r6, [r3, #12]
 8018abe:	4629      	mov	r1, r5
 8018ac0:	4623      	mov	r3, r4
 8018ac2:	4650      	mov	r0, sl
 8018ac4:	47b0      	blx	r6
 8018ac6:	e74c      	b.n	8018962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018ac8:	f10d 0818 	add.w	r8, sp, #24
 8018acc:	4639      	mov	r1, r7
 8018ace:	4640      	mov	r0, r8
 8018ad0:	f7fb ffde 	bl	8014a90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018ad4:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018ad8:	af04      	add	r7, sp, #16
 8018ada:	e887 0003 	stmia.w	r7, {r0, r1}
 8018ade:	4638      	mov	r0, r7
 8018ae0:	4621      	mov	r1, r4
 8018ae2:	f7f2 fbab 	bl	800b23c <_ZN8touchgfx4RectaNERKS0_>
 8018ae6:	4638      	mov	r0, r7
 8018ae8:	f7f2 fbeb 	bl	800b2c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018aec:	b138      	cbz	r0, 8018afe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 8018aee:	9600      	str	r6, [sp, #0]
 8018af0:	4623      	mov	r3, r4
 8018af2:	aa02      	add	r2, sp, #8
 8018af4:	4649      	mov	r1, r9
 8018af6:	4628      	mov	r0, r5
 8018af8:	f7ff fdca 	bl	8018690 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018afc:	e731      	b.n	8018962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018afe:	e9cd 6000 	strd	r6, r0, [sp]
 8018b02:	f8da 3000 	ldr.w	r3, [sl]
 8018b06:	aa02      	add	r2, sp, #8
 8018b08:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018b0c:	4629      	mov	r1, r5
 8018b0e:	463b      	mov	r3, r7
 8018b10:	4650      	mov	r0, sl
 8018b12:	47d8      	blx	fp
 8018b14:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018b18:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018b1c:	4293      	cmp	r3, r2
 8018b1e:	dd13      	ble.n	8018b48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018b20:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018b24:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018b28:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018b2c:	1a9b      	subs	r3, r3, r2
 8018b2e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018b32:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018b36:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018b3a:	9600      	str	r6, [sp, #0]
 8018b3c:	4643      	mov	r3, r8
 8018b3e:	aa02      	add	r2, sp, #8
 8018b40:	4649      	mov	r1, r9
 8018b42:	4628      	mov	r0, r5
 8018b44:	f7ff fda4 	bl	8018690 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018b48:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018b4c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018b50:	4293      	cmp	r3, r2
 8018b52:	dd13      	ble.n	8018b7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018b54:	1a9b      	subs	r3, r3, r2
 8018b56:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018b5a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018b5e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018b62:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018b66:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018b6a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018b6e:	9600      	str	r6, [sp, #0]
 8018b70:	4643      	mov	r3, r8
 8018b72:	aa02      	add	r2, sp, #8
 8018b74:	4649      	mov	r1, r9
 8018b76:	4628      	mov	r0, r5
 8018b78:	f7ff fd8a 	bl	8018690 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018b7c:	88a2      	ldrh	r2, [r4, #4]
 8018b7e:	8823      	ldrh	r3, [r4, #0]
 8018b80:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018b84:	4413      	add	r3, r2
 8018b86:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018b8a:	440a      	add	r2, r1
 8018b8c:	b29b      	uxth	r3, r3
 8018b8e:	b292      	uxth	r2, r2
 8018b90:	b211      	sxth	r1, r2
 8018b92:	b218      	sxth	r0, r3
 8018b94:	4288      	cmp	r0, r1
 8018b96:	dd13      	ble.n	8018bc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8018b98:	1a9b      	subs	r3, r3, r2
 8018b9a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018b9e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018ba2:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018ba6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018baa:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018bae:	9600      	str	r6, [sp, #0]
 8018bb0:	4643      	mov	r3, r8
 8018bb2:	aa02      	add	r2, sp, #8
 8018bb4:	4649      	mov	r1, r9
 8018bb6:	4628      	mov	r0, r5
 8018bb8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018bbc:	f7ff fd68 	bl	8018690 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018bc0:	88e2      	ldrh	r2, [r4, #6]
 8018bc2:	8863      	ldrh	r3, [r4, #2]
 8018bc4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018bc8:	4413      	add	r3, r2
 8018bca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018bce:	440a      	add	r2, r1
 8018bd0:	b29b      	uxth	r3, r3
 8018bd2:	b292      	uxth	r2, r2
 8018bd4:	b211      	sxth	r1, r2
 8018bd6:	b218      	sxth	r0, r3
 8018bd8:	4288      	cmp	r0, r1
 8018bda:	f77f aec2 	ble.w	8018962 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018bde:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018be2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018be6:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018bea:	1a9b      	subs	r3, r3, r2
 8018bec:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018bf0:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018bf4:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018bf8:	9600      	str	r6, [sp, #0]
 8018bfa:	4643      	mov	r3, r8
 8018bfc:	e779      	b.n	8018af2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 8018bfe:	bf00      	nop
 8018c00:	20015800 	.word	0x20015800

08018c04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018c04:	b180      	cbz	r0, 8018c28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018c06:	2903      	cmp	r1, #3
 8018c08:	d81c      	bhi.n	8018c44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018c0a:	e8df f001 	tbb	[pc, r1]
 8018c0e:	1d02      	.short	0x1d02
 8018c10:	1f08      	.short	0x1f08
 8018c12:	4b10      	ldr	r3, [pc, #64]	; (8018c54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018c14:	8818      	ldrh	r0, [r3, #0]
 8018c16:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018c1a:	4240      	negs	r0, r0
 8018c1c:	4770      	bx	lr
 8018c1e:	4b0d      	ldr	r3, [pc, #52]	; (8018c54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018c20:	8818      	ldrh	r0, [r3, #0]
 8018c22:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018c26:	4770      	bx	lr
 8018c28:	2903      	cmp	r1, #3
 8018c2a:	d80b      	bhi.n	8018c44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018c2c:	a301      	add	r3, pc, #4	; (adr r3, 8018c34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018c2e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018c32:	bf00      	nop
 8018c34:	08018c49 	.word	0x08018c49
 8018c38:	08018c1f 	.word	0x08018c1f
 8018c3c:	08018c4d 	.word	0x08018c4d
 8018c40:	08018c13 	.word	0x08018c13
 8018c44:	2000      	movs	r0, #0
 8018c46:	4770      	bx	lr
 8018c48:	2001      	movs	r0, #1
 8018c4a:	4770      	bx	lr
 8018c4c:	f04f 30ff 	mov.w	r0, #4294967295
 8018c50:	4770      	bx	lr
 8018c52:	bf00      	nop
 8018c54:	200157fa 	.word	0x200157fa

08018c58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018c58:	b180      	cbz	r0, 8018c7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018c5a:	2903      	cmp	r1, #3
 8018c5c:	d81c      	bhi.n	8018c98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018c5e:	e8df f001 	tbb	[pc, r1]
 8018c62:	021d      	.short	0x021d
 8018c64:	071f      	.short	0x071f
 8018c66:	4b10      	ldr	r3, [pc, #64]	; (8018ca8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018c68:	8818      	ldrh	r0, [r3, #0]
 8018c6a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018c6e:	4770      	bx	lr
 8018c70:	4b0d      	ldr	r3, [pc, #52]	; (8018ca8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018c72:	8818      	ldrh	r0, [r3, #0]
 8018c74:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018c78:	4240      	negs	r0, r0
 8018c7a:	4770      	bx	lr
 8018c7c:	2903      	cmp	r1, #3
 8018c7e:	d80b      	bhi.n	8018c98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018c80:	a301      	add	r3, pc, #4	; (adr r3, 8018c88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018c82:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018c86:	bf00      	nop
 8018c88:	08018c67 	.word	0x08018c67
 8018c8c:	08018ca1 	.word	0x08018ca1
 8018c90:	08018c71 	.word	0x08018c71
 8018c94:	08018c9d 	.word	0x08018c9d
 8018c98:	2000      	movs	r0, #0
 8018c9a:	4770      	bx	lr
 8018c9c:	2001      	movs	r0, #1
 8018c9e:	4770      	bx	lr
 8018ca0:	f04f 30ff 	mov.w	r0, #4294967295
 8018ca4:	4770      	bx	lr
 8018ca6:	bf00      	nop
 8018ca8:	200157fa 	.word	0x200157fa

08018cac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cb0:	b099      	sub	sp, #100	; 0x64
 8018cb2:	910b      	str	r1, [sp, #44]	; 0x2c
 8018cb4:	a914      	add	r1, sp, #80	; 0x50
 8018cb6:	e881 000c 	stmia.w	r1, {r2, r3}
 8018cba:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8018cbe:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8018cc2:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018cc6:	9309      	str	r3, [sp, #36]	; 0x24
 8018cc8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8018ccc:	9310      	str	r3, [sp, #64]	; 0x40
 8018cce:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018cd2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8018cd6:	930c      	str	r3, [sp, #48]	; 0x30
 8018cd8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8018cdc:	798f      	ldrb	r7, [r1, #6]
 8018cde:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8018ce2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8018ce6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8018cea:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8018cee:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8018cf2:	431f      	orrs	r7, r3
 8018cf4:	f000 8195 	beq.w	8019022 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018cf8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8018cfc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018d00:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018d04:	ea59 0903 	orrs.w	r9, r9, r3
 8018d08:	f000 818b 	beq.w	8019022 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018d0c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018d10:	b29b      	uxth	r3, r3
 8018d12:	2d00      	cmp	r5, #0
 8018d14:	f000 812e 	beq.w	8018f74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018d18:	1aed      	subs	r5, r5, r3
 8018d1a:	b2ad      	uxth	r5, r5
 8018d1c:	042b      	lsls	r3, r5, #16
 8018d1e:	d502      	bpl.n	8018d26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018d20:	1b64      	subs	r4, r4, r5
 8018d22:	b224      	sxth	r4, r4
 8018d24:	2500      	movs	r5, #0
 8018d26:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018d2a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8018d2e:	428c      	cmp	r4, r1
 8018d30:	b28b      	uxth	r3, r1
 8018d32:	bfbf      	itttt	lt
 8018d34:	18ed      	addlt	r5, r5, r3
 8018d36:	1b2c      	sublt	r4, r5, r4
 8018d38:	b2a5      	uxthlt	r5, r4
 8018d3a:	460c      	movlt	r4, r1
 8018d3c:	8891      	ldrh	r1, [r2, #4]
 8018d3e:	440b      	add	r3, r1
 8018d40:	b21b      	sxth	r3, r3
 8018d42:	930f      	str	r3, [sp, #60]	; 0x3c
 8018d44:	88d3      	ldrh	r3, [r2, #6]
 8018d46:	8852      	ldrh	r2, [r2, #2]
 8018d48:	4413      	add	r3, r2
 8018d4a:	b21b      	sxth	r3, r3
 8018d4c:	930d      	str	r3, [sp, #52]	; 0x34
 8018d4e:	4bbe      	ldr	r3, [pc, #760]	; (8019048 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018d50:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018d52:	f893 b000 	ldrb.w	fp, [r3]
 8018d56:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018d5a:	f1dc 0300 	rsbs	r3, ip, #0
 8018d5e:	eb43 030c 	adc.w	r3, r3, ip
 8018d62:	930e      	str	r3, [sp, #56]	; 0x38
 8018d64:	4621      	mov	r1, r4
 8018d66:	4653      	mov	r3, sl
 8018d68:	a814      	add	r0, sp, #80	; 0x50
 8018d6a:	f7f8 f8b5 	bl	8010ed8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018d6e:	4621      	mov	r1, r4
 8018d70:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018d74:	4653      	mov	r3, sl
 8018d76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018d78:	a814      	add	r0, sp, #80	; 0x50
 8018d7a:	f7f8 f8ca 	bl	8010f12 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018d7e:	a918      	add	r1, sp, #96	; 0x60
 8018d80:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018d84:	a817      	add	r0, sp, #92	; 0x5c
 8018d86:	f7f8 f9eb 	bl	8011160 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018d8a:	f1ba 0f00 	cmp.w	sl, #0
 8018d8e:	f040 80f4 	bne.w	8018f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8018d92:	f1bb 0f01 	cmp.w	fp, #1
 8018d96:	f040 80f8 	bne.w	8018f8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018d9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d9c:	2b00      	cmp	r3, #0
 8018d9e:	f040 8145 	bne.w	801902c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8018da2:	b2ba      	uxth	r2, r7
 8018da4:	b905      	cbnz	r5, 8018da8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018da6:	b16e      	cbz	r6, 8018dc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018da8:	fb06 5302 	mla	r3, r6, r2, r5
 8018dac:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8018dae:	fb08 f303 	mul.w	r3, r8, r3
 8018db2:	4631      	mov	r1, r6
 8018db4:	f003 0607 	and.w	r6, r3, #7
 8018db8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018dbc:	9328      	str	r3, [sp, #160]	; 0xa0
 8018dbe:	eba9 0301 	sub.w	r3, r9, r1
 8018dc2:	930a      	str	r3, [sp, #40]	; 0x28
 8018dc4:	4651      	mov	r1, sl
 8018dc6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018dc8:	f7ff ff1c 	bl	8018c04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018dcc:	4681      	mov	r9, r0
 8018dce:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018dd0:	f7ff ff42 	bl	8018c58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018dd4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018dd6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018dd8:	eba3 0a01 	sub.w	sl, r3, r1
 8018ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018dde:	459a      	cmp	sl, r3
 8018de0:	bfa8      	it	ge
 8018de2:	469a      	movge	sl, r3
 8018de4:	f1ba 0f00 	cmp.w	sl, #0
 8018de8:	4683      	mov	fp, r0
 8018dea:	f340 811a 	ble.w	8019022 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018dee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018df0:	1b64      	subs	r4, r4, r5
 8018df2:	1b1c      	subs	r4, r3, r4
 8018df4:	42bc      	cmp	r4, r7
 8018df6:	bfd4      	ite	le
 8018df8:	ebc5 0504 	rsble	r5, r5, r4
 8018dfc:	ebc5 0507 	rsbgt	r5, r5, r7
 8018e00:	2d00      	cmp	r5, #0
 8018e02:	f340 810e 	ble.w	8019022 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018e06:	1b52      	subs	r2, r2, r5
 8018e08:	fb08 f302 	mul.w	r3, r8, r2
 8018e0c:	930f      	str	r3, [sp, #60]	; 0x3c
 8018e0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018e10:	2b00      	cmp	r3, #0
 8018e12:	f040 8116 	bne.w	8019042 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018e16:	4b8d      	ldr	r3, [pc, #564]	; (801904c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018e18:	6818      	ldr	r0, [r3, #0]
 8018e1a:	6803      	ldr	r3, [r0, #0]
 8018e1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018e1e:	4798      	blx	r3
 8018e20:	2301      	movs	r3, #1
 8018e22:	fa03 f308 	lsl.w	r3, r3, r8
 8018e26:	4a8a      	ldr	r2, [pc, #552]	; (8019050 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018e28:	3b01      	subs	r3, #1
 8018e2a:	b2db      	uxtb	r3, r3
 8018e2c:	8811      	ldrh	r1, [r2, #0]
 8018e2e:	930e      	str	r3, [sp, #56]	; 0x38
 8018e30:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018e34:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018e38:	fb01 2303 	mla	r3, r1, r3, r2
 8018e3c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018e40:	930a      	str	r3, [sp, #40]	; 0x28
 8018e42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018e44:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018e48:	9313      	str	r3, [sp, #76]	; 0x4c
 8018e4a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018e4c:	0a19      	lsrs	r1, r3, #8
 8018e4e:	b2cb      	uxtb	r3, r1
 8018e50:	9312      	str	r3, [sp, #72]	; 0x48
 8018e52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018e54:	b2db      	uxtb	r3, r3
 8018e56:	9311      	str	r3, [sp, #68]	; 0x44
 8018e58:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018e5a:	095a      	lsrs	r2, r3, #5
 8018e5c:	4b7d      	ldr	r3, [pc, #500]	; (8019054 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8018e5e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e62:	400b      	ands	r3, r1
 8018e64:	4313      	orrs	r3, r2
 8018e66:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018e68:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018e6c:	4313      	orrs	r3, r2
 8018e6e:	b29b      	uxth	r3, r3
 8018e70:	9310      	str	r3, [sp, #64]	; 0x40
 8018e72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018e74:	781a      	ldrb	r2, [r3, #0]
 8018e76:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018e7a:	4132      	asrs	r2, r6
 8018e7c:	fb05 b919 	mls	r9, r5, r9, fp
 8018e80:	fb03 fb05 	mul.w	fp, r3, r5
 8018e84:	b2d2      	uxtb	r2, r2
 8018e86:	930d      	str	r3, [sp, #52]	; 0x34
 8018e88:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018e8c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018e90:	f0c0 80f5 	bcc.w	801907e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018e94:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018e98:	46ae      	mov	lr, r5
 8018e9a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8018e9e:	f0c0 80dd 	bcc.w	801905c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8018ea2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ea4:	4013      	ands	r3, r2
 8018ea6:	d055      	beq.n	8018f54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018ea8:	20ff      	movs	r0, #255	; 0xff
 8018eaa:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018eac:	fb90 f1f1 	sdiv	r1, r0, r1
 8018eb0:	434b      	muls	r3, r1
 8018eb2:	2bfe      	cmp	r3, #254	; 0xfe
 8018eb4:	dd03      	ble.n	8018ebe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018eb6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018eb8:	4281      	cmp	r1, r0
 8018eba:	f000 80cd 	beq.w	8019058 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8018ebe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018ec0:	f8bc 4000 	ldrh.w	r4, [ip]
 8018ec4:	fb11 f303 	smulbb	r3, r1, r3
 8018ec8:	b29b      	uxth	r3, r3
 8018eca:	1c59      	adds	r1, r3, #1
 8018ecc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018ed0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018ed4:	b29f      	uxth	r7, r3
 8018ed6:	43db      	mvns	r3, r3
 8018ed8:	b2db      	uxtb	r3, r3
 8018eda:	9309      	str	r3, [sp, #36]	; 0x24
 8018edc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018ede:	1220      	asrs	r0, r4, #8
 8018ee0:	fb13 f907 	smulbb	r9, r3, r7
 8018ee4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018ee8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018eea:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018eee:	fb00 9003 	mla	r0, r0, r3, r9
 8018ef2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018ef4:	10e1      	asrs	r1, r4, #3
 8018ef6:	fb13 f907 	smulbb	r9, r3, r7
 8018efa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018efe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f00:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018f04:	fb01 9103 	mla	r1, r1, r3, r9
 8018f08:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f0a:	00e4      	lsls	r4, r4, #3
 8018f0c:	fb13 f707 	smulbb	r7, r3, r7
 8018f10:	b2e4      	uxtb	r4, r4
 8018f12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f14:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018f18:	fb04 7403 	mla	r4, r4, r3, r7
 8018f1c:	b280      	uxth	r0, r0
 8018f1e:	b2a4      	uxth	r4, r4
 8018f20:	1c43      	adds	r3, r0, #1
 8018f22:	f104 0901 	add.w	r9, r4, #1
 8018f26:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018f2a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018f2e:	b289      	uxth	r1, r1
 8018f30:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018f34:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018f38:	ea49 0000 	orr.w	r0, r9, r0
 8018f3c:	f101 0901 	add.w	r9, r1, #1
 8018f40:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018f44:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018f48:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018f4c:	ea40 0009 	orr.w	r0, r0, r9
 8018f50:	f8ac 0000 	strh.w	r0, [ip]
 8018f54:	4446      	add	r6, r8
 8018f56:	b2b6      	uxth	r6, r6
 8018f58:	2e07      	cmp	r6, #7
 8018f5a:	bf81      	itttt	hi
 8018f5c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8018f5e:	785a      	ldrbhi	r2, [r3, #1]
 8018f60:	3301      	addhi	r3, #1
 8018f62:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018f64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018f66:	bf9a      	itte	ls
 8018f68:	fa42 f208 	asrls.w	r2, r2, r8
 8018f6c:	b2d2      	uxtbls	r2, r2
 8018f6e:	2600      	movhi	r6, #0
 8018f70:	449c      	add	ip, r3
 8018f72:	e792      	b.n	8018e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018f74:	441c      	add	r4, r3
 8018f76:	b224      	sxth	r4, r4
 8018f78:	e6d5      	b.n	8018d26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018f7a:	f1ba 0f01 	cmp.w	sl, #1
 8018f7e:	f47f af0c 	bne.w	8018d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018f82:	f1bb 0f01 	cmp.w	fp, #1
 8018f86:	f47f af08 	bne.w	8018d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018f8a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801904c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018f8e:	f8db 0000 	ldr.w	r0, [fp]
 8018f92:	6803      	ldr	r3, [r0, #0]
 8018f94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018f96:	4798      	blx	r3
 8018f98:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018f9c:	465a      	mov	r2, fp
 8018f9e:	d006      	beq.n	8018fae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018fa0:	f1b8 0f04 	cmp.w	r8, #4
 8018fa4:	d140      	bne.n	8019028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018fa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018fa8:	3300      	adds	r3, #0
 8018faa:	bf18      	it	ne
 8018fac:	2301      	movne	r3, #1
 8018fae:	0580      	lsls	r0, r0, #22
 8018fb0:	d56e      	bpl.n	8019090 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018fb2:	f1b8 0f08 	cmp.w	r8, #8
 8018fb6:	d16b      	bne.n	8019090 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018fb8:	2b00      	cmp	r3, #0
 8018fba:	bf0c      	ite	eq
 8018fbc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8018fc0:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018fc4:	2d00      	cmp	r5, #0
 8018fc6:	f47f aee8 	bne.w	8018d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018fca:	2e00      	cmp	r6, #0
 8018fcc:	f47f aee5 	bne.w	8018d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018fd0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018fd2:	19e3      	adds	r3, r4, r7
 8018fd4:	4283      	cmp	r3, r0
 8018fd6:	f73f aee0 	bgt.w	8018d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018fda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fdc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018fde:	444b      	add	r3, r9
 8018fe0:	4283      	cmp	r3, r0
 8018fe2:	f73f aeda 	bgt.w	8018d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018fe6:	6810      	ldr	r0, [r2, #0]
 8018fe8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018fec:	6804      	ldr	r4, [r0, #0]
 8018fee:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018ff2:	b2bf      	uxth	r7, r7
 8018ff4:	f1b8 0f08 	cmp.w	r8, #8
 8018ff8:	f04f 0500 	mov.w	r5, #0
 8018ffc:	bf18      	it	ne
 8018ffe:	3701      	addne	r7, #1
 8019000:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8019004:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019006:	9104      	str	r1, [sp, #16]
 8019008:	bf18      	it	ne
 801900a:	f027 0701 	bicne.w	r7, r7, #1
 801900e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8019010:	bf18      	it	ne
 8019012:	b2bf      	uxthne	r7, r7
 8019014:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8019018:	e9cd 7900 	strd	r7, r9, [sp]
 801901c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801901e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8019020:	47a0      	blx	r4
 8019022:	b019      	add	sp, #100	; 0x64
 8019024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019028:	2300      	movs	r3, #0
 801902a:	e7c0      	b.n	8018fae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801902c:	2208      	movs	r2, #8
 801902e:	fb92 f3f8 	sdiv	r3, r2, r8
 8019032:	1e5a      	subs	r2, r3, #1
 8019034:	443a      	add	r2, r7
 8019036:	fb92 f2f3 	sdiv	r2, r2, r3
 801903a:	fb12 f203 	smulbb	r2, r2, r3
 801903e:	b292      	uxth	r2, r2
 8019040:	e6b0      	b.n	8018da4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8019042:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019044:	e6ec      	b.n	8018e20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8019046:	bf00      	nop
 8019048:	200157f8 	.word	0x200157f8
 801904c:	20015800 	.word	0x20015800
 8019050:	200157fa 	.word	0x200157fa
 8019054:	00fff800 	.word	0x00fff800
 8019058:	9810      	ldr	r0, [sp, #64]	; 0x40
 801905a:	e779      	b.n	8018f50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801905c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801905e:	b153      	cbz	r3, 8019076 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8019060:	441e      	add	r6, r3
 8019062:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019064:	b2b6      	uxth	r6, r6
 8019066:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801906a:	f006 0607 	and.w	r6, r6, #7
 801906e:	781a      	ldrb	r2, [r3, #0]
 8019070:	9328      	str	r3, [sp, #160]	; 0xa0
 8019072:	4132      	asrs	r2, r6
 8019074:	b2d2      	uxtb	r2, r2
 8019076:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019078:	445b      	add	r3, fp
 801907a:	930a      	str	r3, [sp, #40]	; 0x28
 801907c:	e706      	b.n	8018e8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801907e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019080:	2b00      	cmp	r3, #0
 8019082:	d1ce      	bne.n	8019022 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019084:	4b05      	ldr	r3, [pc, #20]	; (801909c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8019086:	6818      	ldr	r0, [r3, #0]
 8019088:	6803      	ldr	r3, [r0, #0]
 801908a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801908c:	4798      	blx	r3
 801908e:	e7c8      	b.n	8019022 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019090:	2b00      	cmp	r3, #0
 8019092:	f43f ae82 	beq.w	8018d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019096:	f44f 7180 	mov.w	r1, #256	; 0x100
 801909a:	e793      	b.n	8018fc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801909c:	20015800 	.word	0x20015800

080190a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80190a0:	b538      	push	{r3, r4, r5, lr}
 80190a2:	4c15      	ldr	r4, [pc, #84]	; (80190f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80190a4:	7823      	ldrb	r3, [r4, #0]
 80190a6:	f3bf 8f5b 	dmb	ish
 80190aa:	07da      	lsls	r2, r3, #31
 80190ac:	4605      	mov	r5, r0
 80190ae:	d40b      	bmi.n	80190c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80190b0:	4620      	mov	r0, r4
 80190b2:	f007 fd73 	bl	8020b9c <__cxa_guard_acquire>
 80190b6:	b138      	cbz	r0, 80190c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80190b8:	4620      	mov	r0, r4
 80190ba:	f007 fd7b 	bl	8020bb4 <__cxa_guard_release>
 80190be:	4a0f      	ldr	r2, [pc, #60]	; (80190fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80190c0:	490f      	ldr	r1, [pc, #60]	; (8019100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80190c2:	4810      	ldr	r0, [pc, #64]	; (8019104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80190c4:	f007 fd63 	bl	8020b8e <__aeabi_atexit>
 80190c8:	4c0f      	ldr	r4, [pc, #60]	; (8019108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80190ca:	7823      	ldrb	r3, [r4, #0]
 80190cc:	f3bf 8f5b 	dmb	ish
 80190d0:	07db      	lsls	r3, r3, #31
 80190d2:	d40b      	bmi.n	80190ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80190d4:	4620      	mov	r0, r4
 80190d6:	f007 fd61 	bl	8020b9c <__cxa_guard_acquire>
 80190da:	b138      	cbz	r0, 80190ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80190dc:	4620      	mov	r0, r4
 80190de:	f007 fd69 	bl	8020bb4 <__cxa_guard_release>
 80190e2:	4a06      	ldr	r2, [pc, #24]	; (80190fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80190e4:	4909      	ldr	r1, [pc, #36]	; (801910c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80190e6:	480a      	ldr	r0, [pc, #40]	; (8019110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80190e8:	f007 fd51 	bl	8020b8e <__aeabi_atexit>
 80190ec:	4b05      	ldr	r3, [pc, #20]	; (8019104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80190ee:	612b      	str	r3, [r5, #16]
 80190f0:	4b07      	ldr	r3, [pc, #28]	; (8019110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80190f2:	616b      	str	r3, [r5, #20]
 80190f4:	bd38      	pop	{r3, r4, r5, pc}
 80190f6:	bf00      	nop
 80190f8:	200158d4 	.word	0x200158d4
 80190fc:	20000000 	.word	0x20000000
 8019100:	080172b1 	.word	0x080172b1
 8019104:	200000d0 	.word	0x200000d0
 8019108:	200158d8 	.word	0x200158d8
 801910c:	080172af 	.word	0x080172af
 8019110:	200000d4 	.word	0x200000d4

08019114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019114:	b538      	push	{r3, r4, r5, lr}
 8019116:	4c15      	ldr	r4, [pc, #84]	; (801916c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019118:	7823      	ldrb	r3, [r4, #0]
 801911a:	f3bf 8f5b 	dmb	ish
 801911e:	07da      	lsls	r2, r3, #31
 8019120:	4605      	mov	r5, r0
 8019122:	d40b      	bmi.n	801913c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019124:	4620      	mov	r0, r4
 8019126:	f007 fd39 	bl	8020b9c <__cxa_guard_acquire>
 801912a:	b138      	cbz	r0, 801913c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801912c:	4620      	mov	r0, r4
 801912e:	f007 fd41 	bl	8020bb4 <__cxa_guard_release>
 8019132:	4a0f      	ldr	r2, [pc, #60]	; (8019170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019134:	490f      	ldr	r1, [pc, #60]	; (8019174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019136:	4810      	ldr	r0, [pc, #64]	; (8019178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019138:	f007 fd29 	bl	8020b8e <__aeabi_atexit>
 801913c:	4c0f      	ldr	r4, [pc, #60]	; (801917c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801913e:	7823      	ldrb	r3, [r4, #0]
 8019140:	f3bf 8f5b 	dmb	ish
 8019144:	07db      	lsls	r3, r3, #31
 8019146:	d40b      	bmi.n	8019160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019148:	4620      	mov	r0, r4
 801914a:	f007 fd27 	bl	8020b9c <__cxa_guard_acquire>
 801914e:	b138      	cbz	r0, 8019160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019150:	4620      	mov	r0, r4
 8019152:	f007 fd2f 	bl	8020bb4 <__cxa_guard_release>
 8019156:	4a06      	ldr	r2, [pc, #24]	; (8019170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019158:	4909      	ldr	r1, [pc, #36]	; (8019180 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801915a:	480a      	ldr	r0, [pc, #40]	; (8019184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801915c:	f007 fd17 	bl	8020b8e <__aeabi_atexit>
 8019160:	4b05      	ldr	r3, [pc, #20]	; (8019178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019162:	60ab      	str	r3, [r5, #8]
 8019164:	4b07      	ldr	r3, [pc, #28]	; (8019184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019166:	60eb      	str	r3, [r5, #12]
 8019168:	bd38      	pop	{r3, r4, r5, pc}
 801916a:	bf00      	nop
 801916c:	200158ac 	.word	0x200158ac
 8019170:	20000000 	.word	0x20000000
 8019174:	080172b5 	.word	0x080172b5
 8019178:	200000a8 	.word	0x200000a8
 801917c:	200158b0 	.word	0x200158b0
 8019180:	080172b3 	.word	0x080172b3
 8019184:	200000ac 	.word	0x200000ac

08019188 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019188:	b510      	push	{r4, lr}
 801918a:	4604      	mov	r4, r0
 801918c:	f7ff ff88 	bl	80190a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019190:	4620      	mov	r0, r4
 8019192:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019196:	f7ff bfbd 	b.w	8019114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801919c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801919c:	b538      	push	{r3, r4, r5, lr}
 801919e:	4c15      	ldr	r4, [pc, #84]	; (80191f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80191a0:	7823      	ldrb	r3, [r4, #0]
 80191a2:	f3bf 8f5b 	dmb	ish
 80191a6:	07da      	lsls	r2, r3, #31
 80191a8:	4605      	mov	r5, r0
 80191aa:	d40b      	bmi.n	80191c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80191ac:	4620      	mov	r0, r4
 80191ae:	f007 fcf5 	bl	8020b9c <__cxa_guard_acquire>
 80191b2:	b138      	cbz	r0, 80191c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80191b4:	4620      	mov	r0, r4
 80191b6:	f007 fcfd 	bl	8020bb4 <__cxa_guard_release>
 80191ba:	4a0f      	ldr	r2, [pc, #60]	; (80191f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80191bc:	490f      	ldr	r1, [pc, #60]	; (80191fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80191be:	4810      	ldr	r0, [pc, #64]	; (8019200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80191c0:	f007 fce5 	bl	8020b8e <__aeabi_atexit>
 80191c4:	4c0f      	ldr	r4, [pc, #60]	; (8019204 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80191c6:	7823      	ldrb	r3, [r4, #0]
 80191c8:	f3bf 8f5b 	dmb	ish
 80191cc:	07db      	lsls	r3, r3, #31
 80191ce:	d40b      	bmi.n	80191e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80191d0:	4620      	mov	r0, r4
 80191d2:	f007 fce3 	bl	8020b9c <__cxa_guard_acquire>
 80191d6:	b138      	cbz	r0, 80191e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80191d8:	4620      	mov	r0, r4
 80191da:	f007 fceb 	bl	8020bb4 <__cxa_guard_release>
 80191de:	4a06      	ldr	r2, [pc, #24]	; (80191f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80191e0:	4909      	ldr	r1, [pc, #36]	; (8019208 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80191e2:	480a      	ldr	r0, [pc, #40]	; (801920c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80191e4:	f007 fcd3 	bl	8020b8e <__aeabi_atexit>
 80191e8:	4b05      	ldr	r3, [pc, #20]	; (8019200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80191ea:	622b      	str	r3, [r5, #32]
 80191ec:	4b07      	ldr	r3, [pc, #28]	; (801920c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80191ee:	626b      	str	r3, [r5, #36]	; 0x24
 80191f0:	bd38      	pop	{r3, r4, r5, pc}
 80191f2:	bf00      	nop
 80191f4:	200158dc 	.word	0x200158dc
 80191f8:	20000000 	.word	0x20000000
 80191fc:	080172a9 	.word	0x080172a9
 8019200:	200000d8 	.word	0x200000d8
 8019204:	200158e0 	.word	0x200158e0
 8019208:	080172a7 	.word	0x080172a7
 801920c:	200000dc 	.word	0x200000dc

08019210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019210:	b538      	push	{r3, r4, r5, lr}
 8019212:	4c15      	ldr	r4, [pc, #84]	; (8019268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019214:	7823      	ldrb	r3, [r4, #0]
 8019216:	f3bf 8f5b 	dmb	ish
 801921a:	07da      	lsls	r2, r3, #31
 801921c:	4605      	mov	r5, r0
 801921e:	d40b      	bmi.n	8019238 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019220:	4620      	mov	r0, r4
 8019222:	f007 fcbb 	bl	8020b9c <__cxa_guard_acquire>
 8019226:	b138      	cbz	r0, 8019238 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019228:	4620      	mov	r0, r4
 801922a:	f007 fcc3 	bl	8020bb4 <__cxa_guard_release>
 801922e:	4a0f      	ldr	r2, [pc, #60]	; (801926c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019230:	490f      	ldr	r1, [pc, #60]	; (8019270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019232:	4810      	ldr	r0, [pc, #64]	; (8019274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019234:	f007 fcab 	bl	8020b8e <__aeabi_atexit>
 8019238:	4c0f      	ldr	r4, [pc, #60]	; (8019278 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801923a:	7823      	ldrb	r3, [r4, #0]
 801923c:	f3bf 8f5b 	dmb	ish
 8019240:	07db      	lsls	r3, r3, #31
 8019242:	d40b      	bmi.n	801925c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019244:	4620      	mov	r0, r4
 8019246:	f007 fca9 	bl	8020b9c <__cxa_guard_acquire>
 801924a:	b138      	cbz	r0, 801925c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801924c:	4620      	mov	r0, r4
 801924e:	f007 fcb1 	bl	8020bb4 <__cxa_guard_release>
 8019252:	4a06      	ldr	r2, [pc, #24]	; (801926c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019254:	4909      	ldr	r1, [pc, #36]	; (801927c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019256:	480a      	ldr	r0, [pc, #40]	; (8019280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019258:	f007 fc99 	bl	8020b8e <__aeabi_atexit>
 801925c:	4b05      	ldr	r3, [pc, #20]	; (8019274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801925e:	61ab      	str	r3, [r5, #24]
 8019260:	4b07      	ldr	r3, [pc, #28]	; (8019280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019262:	61eb      	str	r3, [r5, #28]
 8019264:	bd38      	pop	{r3, r4, r5, pc}
 8019266:	bf00      	nop
 8019268:	200158b4 	.word	0x200158b4
 801926c:	20000000 	.word	0x20000000
 8019270:	080172ad 	.word	0x080172ad
 8019274:	200000b0 	.word	0x200000b0
 8019278:	200158b8 	.word	0x200158b8
 801927c:	080172ab 	.word	0x080172ab
 8019280:	200000b4 	.word	0x200000b4

08019284 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019284:	b510      	push	{r4, lr}
 8019286:	4604      	mov	r4, r0
 8019288:	f7ff ff88 	bl	801919c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801928c:	4620      	mov	r0, r4
 801928e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019292:	f7ff bfbd 	b.w	8019210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019298:	b538      	push	{r3, r4, r5, lr}
 801929a:	4c15      	ldr	r4, [pc, #84]	; (80192f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801929c:	7823      	ldrb	r3, [r4, #0]
 801929e:	f3bf 8f5b 	dmb	ish
 80192a2:	07da      	lsls	r2, r3, #31
 80192a4:	4605      	mov	r5, r0
 80192a6:	d40b      	bmi.n	80192c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80192a8:	4620      	mov	r0, r4
 80192aa:	f007 fc77 	bl	8020b9c <__cxa_guard_acquire>
 80192ae:	b138      	cbz	r0, 80192c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80192b0:	4620      	mov	r0, r4
 80192b2:	f007 fc7f 	bl	8020bb4 <__cxa_guard_release>
 80192b6:	4a0f      	ldr	r2, [pc, #60]	; (80192f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80192b8:	490f      	ldr	r1, [pc, #60]	; (80192f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80192ba:	4810      	ldr	r0, [pc, #64]	; (80192fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80192bc:	f007 fc67 	bl	8020b8e <__aeabi_atexit>
 80192c0:	4c0f      	ldr	r4, [pc, #60]	; (8019300 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80192c2:	7823      	ldrb	r3, [r4, #0]
 80192c4:	f3bf 8f5b 	dmb	ish
 80192c8:	07db      	lsls	r3, r3, #31
 80192ca:	d40b      	bmi.n	80192e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80192cc:	4620      	mov	r0, r4
 80192ce:	f007 fc65 	bl	8020b9c <__cxa_guard_acquire>
 80192d2:	b138      	cbz	r0, 80192e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80192d4:	4620      	mov	r0, r4
 80192d6:	f007 fc6d 	bl	8020bb4 <__cxa_guard_release>
 80192da:	4a06      	ldr	r2, [pc, #24]	; (80192f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80192dc:	4909      	ldr	r1, [pc, #36]	; (8019304 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80192de:	480a      	ldr	r0, [pc, #40]	; (8019308 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80192e0:	f007 fc55 	bl	8020b8e <__aeabi_atexit>
 80192e4:	4b05      	ldr	r3, [pc, #20]	; (80192fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80192e6:	632b      	str	r3, [r5, #48]	; 0x30
 80192e8:	4b07      	ldr	r3, [pc, #28]	; (8019308 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80192ea:	636b      	str	r3, [r5, #52]	; 0x34
 80192ec:	bd38      	pop	{r3, r4, r5, pc}
 80192ee:	bf00      	nop
 80192f0:	200158ec 	.word	0x200158ec
 80192f4:	20000000 	.word	0x20000000
 80192f8:	080172a1 	.word	0x080172a1
 80192fc:	200000e8 	.word	0x200000e8
 8019300:	200158f0 	.word	0x200158f0
 8019304:	0801729f 	.word	0x0801729f
 8019308:	200000ec 	.word	0x200000ec

0801930c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801930c:	b538      	push	{r3, r4, r5, lr}
 801930e:	4c15      	ldr	r4, [pc, #84]	; (8019364 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019310:	7823      	ldrb	r3, [r4, #0]
 8019312:	f3bf 8f5b 	dmb	ish
 8019316:	07da      	lsls	r2, r3, #31
 8019318:	4605      	mov	r5, r0
 801931a:	d40b      	bmi.n	8019334 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801931c:	4620      	mov	r0, r4
 801931e:	f007 fc3d 	bl	8020b9c <__cxa_guard_acquire>
 8019322:	b138      	cbz	r0, 8019334 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019324:	4620      	mov	r0, r4
 8019326:	f007 fc45 	bl	8020bb4 <__cxa_guard_release>
 801932a:	4a0f      	ldr	r2, [pc, #60]	; (8019368 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801932c:	490f      	ldr	r1, [pc, #60]	; (801936c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801932e:	4810      	ldr	r0, [pc, #64]	; (8019370 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019330:	f007 fc2d 	bl	8020b8e <__aeabi_atexit>
 8019334:	4c0f      	ldr	r4, [pc, #60]	; (8019374 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019336:	7823      	ldrb	r3, [r4, #0]
 8019338:	f3bf 8f5b 	dmb	ish
 801933c:	07db      	lsls	r3, r3, #31
 801933e:	d40b      	bmi.n	8019358 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019340:	4620      	mov	r0, r4
 8019342:	f007 fc2b 	bl	8020b9c <__cxa_guard_acquire>
 8019346:	b138      	cbz	r0, 8019358 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019348:	4620      	mov	r0, r4
 801934a:	f007 fc33 	bl	8020bb4 <__cxa_guard_release>
 801934e:	4a06      	ldr	r2, [pc, #24]	; (8019368 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019350:	4909      	ldr	r1, [pc, #36]	; (8019378 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019352:	480a      	ldr	r0, [pc, #40]	; (801937c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019354:	f007 fc1b 	bl	8020b8e <__aeabi_atexit>
 8019358:	4b05      	ldr	r3, [pc, #20]	; (8019370 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801935a:	62ab      	str	r3, [r5, #40]	; 0x28
 801935c:	4b07      	ldr	r3, [pc, #28]	; (801937c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801935e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8019360:	bd38      	pop	{r3, r4, r5, pc}
 8019362:	bf00      	nop
 8019364:	200158bc 	.word	0x200158bc
 8019368:	20000000 	.word	0x20000000
 801936c:	080172a5 	.word	0x080172a5
 8019370:	200000b8 	.word	0x200000b8
 8019374:	200158c0 	.word	0x200158c0
 8019378:	080172a3 	.word	0x080172a3
 801937c:	200000bc 	.word	0x200000bc

08019380 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019380:	b510      	push	{r4, lr}
 8019382:	4604      	mov	r4, r0
 8019384:	f7ff ff88 	bl	8019298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019388:	4620      	mov	r0, r4
 801938a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801938e:	f7ff bfbd 	b.w	801930c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019394:	b538      	push	{r3, r4, r5, lr}
 8019396:	4c15      	ldr	r4, [pc, #84]	; (80193ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019398:	7823      	ldrb	r3, [r4, #0]
 801939a:	f3bf 8f5b 	dmb	ish
 801939e:	07da      	lsls	r2, r3, #31
 80193a0:	4605      	mov	r5, r0
 80193a2:	d40b      	bmi.n	80193bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80193a4:	4620      	mov	r0, r4
 80193a6:	f007 fbf9 	bl	8020b9c <__cxa_guard_acquire>
 80193aa:	b138      	cbz	r0, 80193bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80193ac:	4620      	mov	r0, r4
 80193ae:	f007 fc01 	bl	8020bb4 <__cxa_guard_release>
 80193b2:	4a0f      	ldr	r2, [pc, #60]	; (80193f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80193b4:	490f      	ldr	r1, [pc, #60]	; (80193f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80193b6:	4810      	ldr	r0, [pc, #64]	; (80193f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80193b8:	f007 fbe9 	bl	8020b8e <__aeabi_atexit>
 80193bc:	4c0f      	ldr	r4, [pc, #60]	; (80193fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80193be:	7823      	ldrb	r3, [r4, #0]
 80193c0:	f3bf 8f5b 	dmb	ish
 80193c4:	07db      	lsls	r3, r3, #31
 80193c6:	d40b      	bmi.n	80193e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80193c8:	4620      	mov	r0, r4
 80193ca:	f007 fbe7 	bl	8020b9c <__cxa_guard_acquire>
 80193ce:	b138      	cbz	r0, 80193e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80193d0:	4620      	mov	r0, r4
 80193d2:	f007 fbef 	bl	8020bb4 <__cxa_guard_release>
 80193d6:	4a06      	ldr	r2, [pc, #24]	; (80193f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80193d8:	4909      	ldr	r1, [pc, #36]	; (8019400 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80193da:	480a      	ldr	r0, [pc, #40]	; (8019404 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80193dc:	f007 fbd7 	bl	8020b8e <__aeabi_atexit>
 80193e0:	4b05      	ldr	r3, [pc, #20]	; (80193f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80193e2:	652b      	str	r3, [r5, #80]	; 0x50
 80193e4:	4b07      	ldr	r3, [pc, #28]	; (8019404 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80193e6:	656b      	str	r3, [r5, #84]	; 0x54
 80193e8:	bd38      	pop	{r3, r4, r5, pc}
 80193ea:	bf00      	nop
 80193ec:	200158f4 	.word	0x200158f4
 80193f0:	20000000 	.word	0x20000000
 80193f4:	08017291 	.word	0x08017291
 80193f8:	200000f0 	.word	0x200000f0
 80193fc:	200158f8 	.word	0x200158f8
 8019400:	0801728f 	.word	0x0801728f
 8019404:	200000f4 	.word	0x200000f4

08019408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019408:	b538      	push	{r3, r4, r5, lr}
 801940a:	4c15      	ldr	r4, [pc, #84]	; (8019460 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801940c:	7823      	ldrb	r3, [r4, #0]
 801940e:	f3bf 8f5b 	dmb	ish
 8019412:	07da      	lsls	r2, r3, #31
 8019414:	4605      	mov	r5, r0
 8019416:	d40b      	bmi.n	8019430 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019418:	4620      	mov	r0, r4
 801941a:	f007 fbbf 	bl	8020b9c <__cxa_guard_acquire>
 801941e:	b138      	cbz	r0, 8019430 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019420:	4620      	mov	r0, r4
 8019422:	f007 fbc7 	bl	8020bb4 <__cxa_guard_release>
 8019426:	4a0f      	ldr	r2, [pc, #60]	; (8019464 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019428:	490f      	ldr	r1, [pc, #60]	; (8019468 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801942a:	4810      	ldr	r0, [pc, #64]	; (801946c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801942c:	f007 fbaf 	bl	8020b8e <__aeabi_atexit>
 8019430:	4c0f      	ldr	r4, [pc, #60]	; (8019470 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019432:	7823      	ldrb	r3, [r4, #0]
 8019434:	f3bf 8f5b 	dmb	ish
 8019438:	07db      	lsls	r3, r3, #31
 801943a:	d40b      	bmi.n	8019454 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801943c:	4620      	mov	r0, r4
 801943e:	f007 fbad 	bl	8020b9c <__cxa_guard_acquire>
 8019442:	b138      	cbz	r0, 8019454 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019444:	4620      	mov	r0, r4
 8019446:	f007 fbb5 	bl	8020bb4 <__cxa_guard_release>
 801944a:	4a06      	ldr	r2, [pc, #24]	; (8019464 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801944c:	4909      	ldr	r1, [pc, #36]	; (8019474 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801944e:	480a      	ldr	r0, [pc, #40]	; (8019478 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019450:	f007 fb9d 	bl	8020b8e <__aeabi_atexit>
 8019454:	4b05      	ldr	r3, [pc, #20]	; (801946c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019456:	64ab      	str	r3, [r5, #72]	; 0x48
 8019458:	4b07      	ldr	r3, [pc, #28]	; (8019478 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801945a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801945c:	bd38      	pop	{r3, r4, r5, pc}
 801945e:	bf00      	nop
 8019460:	200158fc 	.word	0x200158fc
 8019464:	20000000 	.word	0x20000000
 8019468:	08017295 	.word	0x08017295
 801946c:	200000f8 	.word	0x200000f8
 8019470:	20015900 	.word	0x20015900
 8019474:	08017293 	.word	0x08017293
 8019478:	200000fc 	.word	0x200000fc

0801947c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801947c:	b538      	push	{r3, r4, r5, lr}
 801947e:	4c15      	ldr	r4, [pc, #84]	; (80194d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019480:	7823      	ldrb	r3, [r4, #0]
 8019482:	f3bf 8f5b 	dmb	ish
 8019486:	07da      	lsls	r2, r3, #31
 8019488:	4605      	mov	r5, r0
 801948a:	d40b      	bmi.n	80194a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801948c:	4620      	mov	r0, r4
 801948e:	f007 fb85 	bl	8020b9c <__cxa_guard_acquire>
 8019492:	b138      	cbz	r0, 80194a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019494:	4620      	mov	r0, r4
 8019496:	f007 fb8d 	bl	8020bb4 <__cxa_guard_release>
 801949a:	4a0f      	ldr	r2, [pc, #60]	; (80194d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801949c:	490f      	ldr	r1, [pc, #60]	; (80194dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801949e:	4810      	ldr	r0, [pc, #64]	; (80194e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80194a0:	f007 fb75 	bl	8020b8e <__aeabi_atexit>
 80194a4:	4c0f      	ldr	r4, [pc, #60]	; (80194e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80194a6:	7823      	ldrb	r3, [r4, #0]
 80194a8:	f3bf 8f5b 	dmb	ish
 80194ac:	07db      	lsls	r3, r3, #31
 80194ae:	d40b      	bmi.n	80194c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80194b0:	4620      	mov	r0, r4
 80194b2:	f007 fb73 	bl	8020b9c <__cxa_guard_acquire>
 80194b6:	b138      	cbz	r0, 80194c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80194b8:	4620      	mov	r0, r4
 80194ba:	f007 fb7b 	bl	8020bb4 <__cxa_guard_release>
 80194be:	4a06      	ldr	r2, [pc, #24]	; (80194d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80194c0:	4909      	ldr	r1, [pc, #36]	; (80194e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80194c2:	480a      	ldr	r0, [pc, #40]	; (80194ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80194c4:	f007 fb63 	bl	8020b8e <__aeabi_atexit>
 80194c8:	4b05      	ldr	r3, [pc, #20]	; (80194e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80194ca:	642b      	str	r3, [r5, #64]	; 0x40
 80194cc:	4b07      	ldr	r3, [pc, #28]	; (80194ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80194ce:	646b      	str	r3, [r5, #68]	; 0x44
 80194d0:	bd38      	pop	{r3, r4, r5, pc}
 80194d2:	bf00      	nop
 80194d4:	200158c4 	.word	0x200158c4
 80194d8:	20000000 	.word	0x20000000
 80194dc:	08017299 	.word	0x08017299
 80194e0:	200000c0 	.word	0x200000c0
 80194e4:	200158c8 	.word	0x200158c8
 80194e8:	08017297 	.word	0x08017297
 80194ec:	200000c4 	.word	0x200000c4

080194f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80194f0:	b538      	push	{r3, r4, r5, lr}
 80194f2:	4c15      	ldr	r4, [pc, #84]	; (8019548 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80194f4:	7823      	ldrb	r3, [r4, #0]
 80194f6:	f3bf 8f5b 	dmb	ish
 80194fa:	07da      	lsls	r2, r3, #31
 80194fc:	4605      	mov	r5, r0
 80194fe:	d40b      	bmi.n	8019518 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019500:	4620      	mov	r0, r4
 8019502:	f007 fb4b 	bl	8020b9c <__cxa_guard_acquire>
 8019506:	b138      	cbz	r0, 8019518 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019508:	4620      	mov	r0, r4
 801950a:	f007 fb53 	bl	8020bb4 <__cxa_guard_release>
 801950e:	4a0f      	ldr	r2, [pc, #60]	; (801954c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019510:	490f      	ldr	r1, [pc, #60]	; (8019550 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019512:	4810      	ldr	r0, [pc, #64]	; (8019554 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019514:	f007 fb3b 	bl	8020b8e <__aeabi_atexit>
 8019518:	4c0f      	ldr	r4, [pc, #60]	; (8019558 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801951a:	7823      	ldrb	r3, [r4, #0]
 801951c:	f3bf 8f5b 	dmb	ish
 8019520:	07db      	lsls	r3, r3, #31
 8019522:	d40b      	bmi.n	801953c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019524:	4620      	mov	r0, r4
 8019526:	f007 fb39 	bl	8020b9c <__cxa_guard_acquire>
 801952a:	b138      	cbz	r0, 801953c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801952c:	4620      	mov	r0, r4
 801952e:	f007 fb41 	bl	8020bb4 <__cxa_guard_release>
 8019532:	4a06      	ldr	r2, [pc, #24]	; (801954c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019534:	4909      	ldr	r1, [pc, #36]	; (801955c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019536:	480a      	ldr	r0, [pc, #40]	; (8019560 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019538:	f007 fb29 	bl	8020b8e <__aeabi_atexit>
 801953c:	4b05      	ldr	r3, [pc, #20]	; (8019554 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801953e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019540:	4b07      	ldr	r3, [pc, #28]	; (8019560 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019542:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019544:	bd38      	pop	{r3, r4, r5, pc}
 8019546:	bf00      	nop
 8019548:	200158e4 	.word	0x200158e4
 801954c:	20000000 	.word	0x20000000
 8019550:	0801729d 	.word	0x0801729d
 8019554:	200000e0 	.word	0x200000e0
 8019558:	200158e8 	.word	0x200158e8
 801955c:	0801729b 	.word	0x0801729b
 8019560:	200000e4 	.word	0x200000e4

08019564 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019564:	b510      	push	{r4, lr}
 8019566:	4604      	mov	r4, r0
 8019568:	f7ff ff14 	bl	8019394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801956c:	4620      	mov	r0, r4
 801956e:	f7ff ff85 	bl	801947c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019572:	4620      	mov	r0, r4
 8019574:	f7ff ff48 	bl	8019408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019578:	4620      	mov	r0, r4
 801957a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801957e:	f7ff bfb7 	b.w	80194f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019584:	b538      	push	{r3, r4, r5, lr}
 8019586:	4c15      	ldr	r4, [pc, #84]	; (80195dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019588:	7823      	ldrb	r3, [r4, #0]
 801958a:	f3bf 8f5b 	dmb	ish
 801958e:	07da      	lsls	r2, r3, #31
 8019590:	4605      	mov	r5, r0
 8019592:	d40b      	bmi.n	80195ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019594:	4620      	mov	r0, r4
 8019596:	f007 fb01 	bl	8020b9c <__cxa_guard_acquire>
 801959a:	b138      	cbz	r0, 80195ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801959c:	4620      	mov	r0, r4
 801959e:	f007 fb09 	bl	8020bb4 <__cxa_guard_release>
 80195a2:	4a0f      	ldr	r2, [pc, #60]	; (80195e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80195a4:	490f      	ldr	r1, [pc, #60]	; (80195e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80195a6:	4810      	ldr	r0, [pc, #64]	; (80195e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80195a8:	f007 faf1 	bl	8020b8e <__aeabi_atexit>
 80195ac:	4c0f      	ldr	r4, [pc, #60]	; (80195ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80195ae:	7823      	ldrb	r3, [r4, #0]
 80195b0:	f3bf 8f5b 	dmb	ish
 80195b4:	07db      	lsls	r3, r3, #31
 80195b6:	d40b      	bmi.n	80195d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80195b8:	4620      	mov	r0, r4
 80195ba:	f007 faef 	bl	8020b9c <__cxa_guard_acquire>
 80195be:	b138      	cbz	r0, 80195d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80195c0:	4620      	mov	r0, r4
 80195c2:	f007 faf7 	bl	8020bb4 <__cxa_guard_release>
 80195c6:	4a06      	ldr	r2, [pc, #24]	; (80195e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80195c8:	4909      	ldr	r1, [pc, #36]	; (80195f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80195ca:	480a      	ldr	r0, [pc, #40]	; (80195f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80195cc:	f007 fadf 	bl	8020b8e <__aeabi_atexit>
 80195d0:	4b05      	ldr	r3, [pc, #20]	; (80195e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80195d2:	662b      	str	r3, [r5, #96]	; 0x60
 80195d4:	4b07      	ldr	r3, [pc, #28]	; (80195f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80195d6:	666b      	str	r3, [r5, #100]	; 0x64
 80195d8:	bd38      	pop	{r3, r4, r5, pc}
 80195da:	bf00      	nop
 80195dc:	200158cc 	.word	0x200158cc
 80195e0:	20000000 	.word	0x20000000
 80195e4:	08017289 	.word	0x08017289
 80195e8:	200000c8 	.word	0x200000c8
 80195ec:	200158d0 	.word	0x200158d0
 80195f0:	08017287 	.word	0x08017287
 80195f4:	200000cc 	.word	0x200000cc

080195f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80195f8:	b538      	push	{r3, r4, r5, lr}
 80195fa:	4c15      	ldr	r4, [pc, #84]	; (8019650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80195fc:	7823      	ldrb	r3, [r4, #0]
 80195fe:	f3bf 8f5b 	dmb	ish
 8019602:	07da      	lsls	r2, r3, #31
 8019604:	4605      	mov	r5, r0
 8019606:	d40b      	bmi.n	8019620 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019608:	4620      	mov	r0, r4
 801960a:	f007 fac7 	bl	8020b9c <__cxa_guard_acquire>
 801960e:	b138      	cbz	r0, 8019620 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019610:	4620      	mov	r0, r4
 8019612:	f007 facf 	bl	8020bb4 <__cxa_guard_release>
 8019616:	4a0f      	ldr	r2, [pc, #60]	; (8019654 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019618:	490f      	ldr	r1, [pc, #60]	; (8019658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801961a:	4810      	ldr	r0, [pc, #64]	; (801965c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801961c:	f007 fab7 	bl	8020b8e <__aeabi_atexit>
 8019620:	4c0f      	ldr	r4, [pc, #60]	; (8019660 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019622:	7823      	ldrb	r3, [r4, #0]
 8019624:	f3bf 8f5b 	dmb	ish
 8019628:	07db      	lsls	r3, r3, #31
 801962a:	d40b      	bmi.n	8019644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801962c:	4620      	mov	r0, r4
 801962e:	f007 fab5 	bl	8020b9c <__cxa_guard_acquire>
 8019632:	b138      	cbz	r0, 8019644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019634:	4620      	mov	r0, r4
 8019636:	f007 fabd 	bl	8020bb4 <__cxa_guard_release>
 801963a:	4a06      	ldr	r2, [pc, #24]	; (8019654 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801963c:	4909      	ldr	r1, [pc, #36]	; (8019664 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801963e:	480a      	ldr	r0, [pc, #40]	; (8019668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019640:	f007 faa5 	bl	8020b8e <__aeabi_atexit>
 8019644:	4b05      	ldr	r3, [pc, #20]	; (801965c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019646:	65ab      	str	r3, [r5, #88]	; 0x58
 8019648:	4b07      	ldr	r3, [pc, #28]	; (8019668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801964a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801964c:	bd38      	pop	{r3, r4, r5, pc}
 801964e:	bf00      	nop
 8019650:	200158a4 	.word	0x200158a4
 8019654:	20000000 	.word	0x20000000
 8019658:	0801728d 	.word	0x0801728d
 801965c:	200000a0 	.word	0x200000a0
 8019660:	200158a8 	.word	0x200158a8
 8019664:	0801728b 	.word	0x0801728b
 8019668:	200000a4 	.word	0x200000a4

0801966c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801966c:	b510      	push	{r4, lr}
 801966e:	4604      	mov	r4, r0
 8019670:	f7ff ff88 	bl	8019584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019674:	4620      	mov	r0, r4
 8019676:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801967a:	f7ff bfbd 	b.w	80195f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019680:	b538      	push	{r3, r4, r5, lr}
 8019682:	4c15      	ldr	r4, [pc, #84]	; (80196d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019684:	7823      	ldrb	r3, [r4, #0]
 8019686:	f3bf 8f5b 	dmb	ish
 801968a:	07da      	lsls	r2, r3, #31
 801968c:	4605      	mov	r5, r0
 801968e:	d40b      	bmi.n	80196a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019690:	4620      	mov	r0, r4
 8019692:	f007 fa83 	bl	8020b9c <__cxa_guard_acquire>
 8019696:	b138      	cbz	r0, 80196a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019698:	4620      	mov	r0, r4
 801969a:	f007 fa8b 	bl	8020bb4 <__cxa_guard_release>
 801969e:	4a0f      	ldr	r2, [pc, #60]	; (80196dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80196a0:	490f      	ldr	r1, [pc, #60]	; (80196e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80196a2:	4810      	ldr	r0, [pc, #64]	; (80196e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80196a4:	f007 fa73 	bl	8020b8e <__aeabi_atexit>
 80196a8:	4c0f      	ldr	r4, [pc, #60]	; (80196e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80196aa:	7823      	ldrb	r3, [r4, #0]
 80196ac:	f3bf 8f5b 	dmb	ish
 80196b0:	07db      	lsls	r3, r3, #31
 80196b2:	d40b      	bmi.n	80196cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80196b4:	4620      	mov	r0, r4
 80196b6:	f007 fa71 	bl	8020b9c <__cxa_guard_acquire>
 80196ba:	b138      	cbz	r0, 80196cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80196bc:	4620      	mov	r0, r4
 80196be:	f007 fa79 	bl	8020bb4 <__cxa_guard_release>
 80196c2:	4a06      	ldr	r2, [pc, #24]	; (80196dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80196c4:	4909      	ldr	r1, [pc, #36]	; (80196ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80196c6:	480a      	ldr	r0, [pc, #40]	; (80196f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80196c8:	f007 fa61 	bl	8020b8e <__aeabi_atexit>
 80196cc:	4b05      	ldr	r3, [pc, #20]	; (80196e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80196ce:	672b      	str	r3, [r5, #112]	; 0x70
 80196d0:	4b07      	ldr	r3, [pc, #28]	; (80196f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80196d2:	676b      	str	r3, [r5, #116]	; 0x74
 80196d4:	bd38      	pop	{r3, r4, r5, pc}
 80196d6:	bf00      	nop
 80196d8:	2001589c 	.word	0x2001589c
 80196dc:	20000000 	.word	0x20000000
 80196e0:	08017281 	.word	0x08017281
 80196e4:	20000098 	.word	0x20000098
 80196e8:	200158a0 	.word	0x200158a0
 80196ec:	0801727f 	.word	0x0801727f
 80196f0:	2000009c 	.word	0x2000009c

080196f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80196f4:	b538      	push	{r3, r4, r5, lr}
 80196f6:	4c15      	ldr	r4, [pc, #84]	; (801974c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80196f8:	7823      	ldrb	r3, [r4, #0]
 80196fa:	f3bf 8f5b 	dmb	ish
 80196fe:	07da      	lsls	r2, r3, #31
 8019700:	4605      	mov	r5, r0
 8019702:	d40b      	bmi.n	801971c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019704:	4620      	mov	r0, r4
 8019706:	f007 fa49 	bl	8020b9c <__cxa_guard_acquire>
 801970a:	b138      	cbz	r0, 801971c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801970c:	4620      	mov	r0, r4
 801970e:	f007 fa51 	bl	8020bb4 <__cxa_guard_release>
 8019712:	4a0f      	ldr	r2, [pc, #60]	; (8019750 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019714:	490f      	ldr	r1, [pc, #60]	; (8019754 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019716:	4810      	ldr	r0, [pc, #64]	; (8019758 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019718:	f007 fa39 	bl	8020b8e <__aeabi_atexit>
 801971c:	4c0f      	ldr	r4, [pc, #60]	; (801975c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801971e:	7823      	ldrb	r3, [r4, #0]
 8019720:	f3bf 8f5b 	dmb	ish
 8019724:	07db      	lsls	r3, r3, #31
 8019726:	d40b      	bmi.n	8019740 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019728:	4620      	mov	r0, r4
 801972a:	f007 fa37 	bl	8020b9c <__cxa_guard_acquire>
 801972e:	b138      	cbz	r0, 8019740 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019730:	4620      	mov	r0, r4
 8019732:	f007 fa3f 	bl	8020bb4 <__cxa_guard_release>
 8019736:	4a06      	ldr	r2, [pc, #24]	; (8019750 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019738:	4909      	ldr	r1, [pc, #36]	; (8019760 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801973a:	480a      	ldr	r0, [pc, #40]	; (8019764 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801973c:	f007 fa27 	bl	8020b8e <__aeabi_atexit>
 8019740:	4b05      	ldr	r3, [pc, #20]	; (8019758 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019742:	66ab      	str	r3, [r5, #104]	; 0x68
 8019744:	4b07      	ldr	r3, [pc, #28]	; (8019764 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019746:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019748:	bd38      	pop	{r3, r4, r5, pc}
 801974a:	bf00      	nop
 801974c:	20015894 	.word	0x20015894
 8019750:	20000000 	.word	0x20000000
 8019754:	08017285 	.word	0x08017285
 8019758:	20000090 	.word	0x20000090
 801975c:	20015898 	.word	0x20015898
 8019760:	08017283 	.word	0x08017283
 8019764:	20000094 	.word	0x20000094

08019768 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019768:	b510      	push	{r4, lr}
 801976a:	4604      	mov	r4, r0
 801976c:	f7ff ff88 	bl	8019680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019770:	4620      	mov	r0, r4
 8019772:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019776:	f7ff bfbd 	b.w	80196f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801977a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801977a:	b510      	push	{r4, lr}
 801977c:	4604      	mov	r4, r0
 801977e:	f7ff fff3 	bl	8019768 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019782:	4620      	mov	r0, r4
 8019784:	f7ff ff72 	bl	801966c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019788:	4620      	mov	r0, r4
 801978a:	f7ff fdf9 	bl	8019380 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801978e:	4620      	mov	r0, r4
 8019790:	f7ff fcfa 	bl	8019188 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019794:	4620      	mov	r0, r4
 8019796:	f7ff fd75 	bl	8019284 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801979a:	4620      	mov	r0, r4
 801979c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80197a0:	f7ff bee0 	b.w	8019564 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080197a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80197a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197a8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80197ac:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80197b0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80197b4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80197b8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80197bc:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80197c0:	8808      	ldrh	r0, [r1, #0]
 80197c2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80197c6:	2d00      	cmp	r5, #0
 80197c8:	eb02 0a0c 	add.w	sl, r2, ip
 80197cc:	f2c0 80b0 	blt.w	8019930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80197d0:	45ab      	cmp	fp, r5
 80197d2:	f340 80ad 	ble.w	8019930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80197d6:	2c00      	cmp	r4, #0
 80197d8:	f2c0 80a8 	blt.w	801992c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80197dc:	45a6      	cmp	lr, r4
 80197de:	f340 80a5 	ble.w	801992c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80197e2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80197e6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80197ea:	1c62      	adds	r2, r4, #1
 80197ec:	f100 80a3 	bmi.w	8019936 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80197f0:	4596      	cmp	lr, r2
 80197f2:	f340 80a0 	ble.w	8019936 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80197f6:	f1b9 0f00 	cmp.w	r9, #0
 80197fa:	f000 809c 	beq.w	8019936 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80197fe:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019802:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019806:	3501      	adds	r5, #1
 8019808:	f100 8099 	bmi.w	801993e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801980c:	45ab      	cmp	fp, r5
 801980e:	f340 8096 	ble.w	801993e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019812:	2f00      	cmp	r7, #0
 8019814:	f000 8093 	beq.w	801993e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019818:	2c00      	cmp	r4, #0
 801981a:	f2c0 808e 	blt.w	801993a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801981e:	45a6      	cmp	lr, r4
 8019820:	f340 808b 	ble.w	801993a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019824:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019828:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801982c:	3401      	adds	r4, #1
 801982e:	f100 8089 	bmi.w	8019944 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019832:	45a6      	cmp	lr, r4
 8019834:	f340 8086 	ble.w	8019944 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019838:	f1b9 0f00 	cmp.w	r9, #0
 801983c:	f000 8082 	beq.w	8019944 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019840:	44d6      	add	lr, sl
 8019842:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019846:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801984a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801984e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019852:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019856:	fb19 fe07 	smulbb	lr, r9, r7
 801985a:	ea44 0808 	orr.w	r8, r4, r8
 801985e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019862:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019866:	f1c7 0210 	rsb	r2, r7, #16
 801986a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801986e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019872:	ea44 0c0c 	orr.w	ip, r4, ip
 8019876:	eba2 0209 	sub.w	r2, r2, r9
 801987a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801987e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019882:	fb04 f40c 	mul.w	r4, r4, ip
 8019886:	fb02 4808 	mla	r8, r2, r8, r4
 801988a:	041a      	lsls	r2, r3, #16
 801988c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019890:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019894:	4313      	orrs	r3, r2
 8019896:	042a      	lsls	r2, r5, #16
 8019898:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801989c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80198a0:	fb0e 8303 	mla	r3, lr, r3, r8
 80198a4:	432a      	orrs	r2, r5
 80198a6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80198aa:	fb07 3202 	mla	r2, r7, r2, r3
 80198ae:	0d53      	lsrs	r3, r2, #21
 80198b0:	0952      	lsrs	r2, r2, #5
 80198b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80198b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80198ba:	431a      	orrs	r2, r3
 80198bc:	b293      	uxth	r3, r2
 80198be:	b2b4      	uxth	r4, r6
 80198c0:	1202      	asrs	r2, r0, #8
 80198c2:	43f6      	mvns	r6, r6
 80198c4:	b2f6      	uxtb	r6, r6
 80198c6:	121d      	asrs	r5, r3, #8
 80198c8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80198cc:	fb12 f206 	smulbb	r2, r2, r6
 80198d0:	10c7      	asrs	r7, r0, #3
 80198d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80198d6:	00c0      	lsls	r0, r0, #3
 80198d8:	fb05 2504 	mla	r5, r5, r4, r2
 80198dc:	b2c0      	uxtb	r0, r0
 80198de:	10da      	asrs	r2, r3, #3
 80198e0:	00db      	lsls	r3, r3, #3
 80198e2:	b2db      	uxtb	r3, r3
 80198e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80198e8:	fb10 f006 	smulbb	r0, r0, r6
 80198ec:	b2ad      	uxth	r5, r5
 80198ee:	fb03 0004 	mla	r0, r3, r4, r0
 80198f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80198f6:	fb17 f706 	smulbb	r7, r7, r6
 80198fa:	b280      	uxth	r0, r0
 80198fc:	1c6b      	adds	r3, r5, #1
 80198fe:	fb02 7204 	mla	r2, r2, r4, r7
 8019902:	b292      	uxth	r2, r2
 8019904:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019908:	1c43      	adds	r3, r0, #1
 801990a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801990e:	1c50      	adds	r0, r2, #1
 8019910:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019914:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019918:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801991c:	0952      	lsrs	r2, r2, #5
 801991e:	432b      	orrs	r3, r5
 8019920:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019924:	4313      	orrs	r3, r2
 8019926:	800b      	strh	r3, [r1, #0]
 8019928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801992c:	4680      	mov	r8, r0
 801992e:	e75c      	b.n	80197ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019930:	4684      	mov	ip, r0
 8019932:	4680      	mov	r8, r0
 8019934:	e767      	b.n	8019806 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019936:	4684      	mov	ip, r0
 8019938:	e765      	b.n	8019806 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801993a:	4605      	mov	r5, r0
 801993c:	e776      	b.n	801982c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801993e:	4603      	mov	r3, r0
 8019940:	4605      	mov	r5, r0
 8019942:	e782      	b.n	801984a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019944:	4603      	mov	r3, r0
 8019946:	e780      	b.n	801984a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801994c:	b099      	sub	sp, #100	; 0x64
 801994e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019952:	9215      	str	r2, [sp, #84]	; 0x54
 8019954:	9309      	str	r3, [sp, #36]	; 0x24
 8019956:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019958:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801995c:	930d      	str	r3, [sp, #52]	; 0x34
 801995e:	910c      	str	r1, [sp, #48]	; 0x30
 8019960:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019964:	9016      	str	r0, [sp, #88]	; 0x58
 8019966:	6850      	ldr	r0, [r2, #4]
 8019968:	6812      	ldr	r2, [r2, #0]
 801996a:	fb00 1303 	mla	r3, r0, r3, r1
 801996e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019972:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019974:	681b      	ldr	r3, [r3, #0]
 8019976:	930b      	str	r3, [sp, #44]	; 0x2c
 8019978:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801997a:	685e      	ldr	r6, [r3, #4]
 801997c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801997e:	43db      	mvns	r3, r3
 8019980:	b2db      	uxtb	r3, r3
 8019982:	3604      	adds	r6, #4
 8019984:	930a      	str	r3, [sp, #40]	; 0x28
 8019986:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019988:	2b00      	cmp	r3, #0
 801998a:	dc03      	bgt.n	8019994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801998c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801998e:	2b00      	cmp	r3, #0
 8019990:	f340 8225 	ble.w	8019dde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019994:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019996:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801999a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801999e:	1e48      	subs	r0, r1, #1
 80199a0:	1e57      	subs	r7, r2, #1
 80199a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80199a4:	2b00      	cmp	r3, #0
 80199a6:	f340 80e3 	ble.w	8019b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80199aa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80199ae:	ea4f 4325 	mov.w	r3, r5, asr #16
 80199b2:	d406      	bmi.n	80199c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80199b4:	4584      	cmp	ip, r0
 80199b6:	da04      	bge.n	80199c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80199b8:	2b00      	cmp	r3, #0
 80199ba:	db02      	blt.n	80199c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80199bc:	42bb      	cmp	r3, r7
 80199be:	f2c0 80d8 	blt.w	8019b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80199c2:	f11c 0c01 	adds.w	ip, ip, #1
 80199c6:	f100 80c9 	bmi.w	8019b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80199ca:	4561      	cmp	r1, ip
 80199cc:	f2c0 80c6 	blt.w	8019b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80199d0:	3301      	adds	r3, #1
 80199d2:	f100 80c3 	bmi.w	8019b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80199d6:	429a      	cmp	r2, r3
 80199d8:	f2c0 80c0 	blt.w	8019b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80199dc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80199e0:	4647      	mov	r7, r8
 80199e2:	f1bb 0f00 	cmp.w	fp, #0
 80199e6:	f340 80e3 	ble.w	8019bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80199ea:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80199ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80199ee:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80199f2:	689b      	ldr	r3, [r3, #8]
 80199f4:	ea5f 422a 	movs.w	r2, sl, asr #16
 80199f8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80199fc:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019a00:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019a04:	f100 8121 	bmi.w	8019c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019a08:	f103 39ff 	add.w	r9, r3, #4294967295
 8019a0c:	454a      	cmp	r2, r9
 8019a0e:	f280 811c 	bge.w	8019c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019a12:	f1bc 0f00 	cmp.w	ip, #0
 8019a16:	f2c0 8118 	blt.w	8019c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019a1a:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019a1e:	45cc      	cmp	ip, r9
 8019a20:	f280 8113 	bge.w	8019c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019a24:	b21b      	sxth	r3, r3
 8019a26:	fb0c 2203 	mla	r2, ip, r3, r2
 8019a2a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019a2c:	eb04 0902 	add.w	r9, r4, r2
 8019a30:	5ca2      	ldrb	r2, [r4, r2]
 8019a32:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019a36:	2800      	cmp	r0, #0
 8019a38:	f000 80fe 	beq.w	8019c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019a3c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019a40:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019a44:	9211      	str	r2, [sp, #68]	; 0x44
 8019a46:	b151      	cbz	r1, 8019a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019a48:	eb09 0203 	add.w	r2, r9, r3
 8019a4c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019a50:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019a54:	930f      	str	r3, [sp, #60]	; 0x3c
 8019a56:	7853      	ldrb	r3, [r2, #1]
 8019a58:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019a5c:	9312      	str	r3, [sp, #72]	; 0x48
 8019a5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019a60:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019a62:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019a66:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019a6a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019a6e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019a72:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019a74:	041b      	lsls	r3, r3, #16
 8019a76:	fb10 f201 	smulbb	r2, r0, r1
 8019a7a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8019a7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019a82:	10d2      	asrs	r2, r2, #3
 8019a84:	4323      	orrs	r3, r4
 8019a86:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019a8a:	4353      	muls	r3, r2
 8019a8c:	fb09 330c 	mla	r3, r9, ip, r3
 8019a90:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019a94:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019a98:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019a9c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019aa0:	f1c1 0c10 	rsb	ip, r1, #16
 8019aa4:	ebac 0c00 	sub.w	ip, ip, r0
 8019aa8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019aac:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019ab0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019ab2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019ab4:	0418      	lsls	r0, r3, #16
 8019ab6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019aba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019abe:	4318      	orrs	r0, r3
 8019ac0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019ac4:	fb02 c200 	mla	r2, r2, r0, ip
 8019ac8:	0d53      	lsrs	r3, r2, #21
 8019aca:	0952      	lsrs	r2, r2, #5
 8019acc:	8838      	ldrh	r0, [r7, #0]
 8019ace:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019ad2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019ad6:	431a      	orrs	r2, r3
 8019ad8:	b292      	uxth	r2, r2
 8019ada:	1201      	asrs	r1, r0, #8
 8019adc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8019ae0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019ae4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019ae8:	fb11 f104 	smulbb	r1, r1, r4
 8019aec:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019af0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019af4:	00c0      	lsls	r0, r0, #3
 8019af6:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019afa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019afe:	10d1      	asrs	r1, r2, #3
 8019b00:	b2c0      	uxtb	r0, r0
 8019b02:	00d2      	lsls	r2, r2, #3
 8019b04:	b2d2      	uxtb	r2, r2
 8019b06:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019b0a:	fb1e fe04 	smulbb	lr, lr, r4
 8019b0e:	fb10 f004 	smulbb	r0, r0, r4
 8019b12:	fa1f fc8c 	uxth.w	ip, ip
 8019b16:	fb01 e103 	mla	r1, r1, r3, lr
 8019b1a:	fb02 0303 	mla	r3, r2, r3, r0
 8019b1e:	b29a      	uxth	r2, r3
 8019b20:	f10c 0301 	add.w	r3, ip, #1
 8019b24:	b289      	uxth	r1, r1
 8019b26:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019b2a:	1c53      	adds	r3, r2, #1
 8019b2c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019b30:	1c4a      	adds	r2, r1, #1
 8019b32:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019b36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b3a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019b3e:	0949      	lsrs	r1, r1, #5
 8019b40:	ea43 030c 	orr.w	r3, r3, ip
 8019b44:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019b48:	430b      	orrs	r3, r1
 8019b4a:	803b      	strh	r3, [r7, #0]
 8019b4c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019b4e:	449a      	add	sl, r3
 8019b50:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b52:	3702      	adds	r7, #2
 8019b54:	441d      	add	r5, r3
 8019b56:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019b5a:	e742      	b.n	80199e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019b5c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019b5e:	449a      	add	sl, r3
 8019b60:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b62:	441d      	add	r5, r3
 8019b64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b66:	3b01      	subs	r3, #1
 8019b68:	9309      	str	r3, [sp, #36]	; 0x24
 8019b6a:	f108 0802 	add.w	r8, r8, #2
 8019b6e:	e718      	b.n	80199a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019b70:	d023      	beq.n	8019bba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019b72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b74:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019b76:	3b01      	subs	r3, #1
 8019b78:	fb00 a003 	mla	r0, r0, r3, sl
 8019b7c:	1400      	asrs	r0, r0, #16
 8019b7e:	f53f af2d 	bmi.w	80199dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019b82:	3901      	subs	r1, #1
 8019b84:	4288      	cmp	r0, r1
 8019b86:	f6bf af29 	bge.w	80199dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019b8a:	9926      	ldr	r1, [sp, #152]	; 0x98
 8019b8c:	fb01 5303 	mla	r3, r1, r3, r5
 8019b90:	141b      	asrs	r3, r3, #16
 8019b92:	f53f af23 	bmi.w	80199dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019b96:	3a01      	subs	r2, #1
 8019b98:	4293      	cmp	r3, r2
 8019b9a:	f6bf af1f 	bge.w	80199dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019b9e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8019ba2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8019ba6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8019baa:	f1be 0f00 	cmp.w	lr, #0
 8019bae:	dc6c      	bgt.n	8019c8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019bb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019bb2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019bb6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019bba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019bbc:	2b00      	cmp	r3, #0
 8019bbe:	f340 810e 	ble.w	8019dde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019bc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019bc6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019bca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019bce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019bd0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019bd4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019bd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019bdc:	eef0 6a62 	vmov.f32	s13, s5
 8019be0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019be4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019be8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019bec:	ee16 aa90 	vmov	sl, s13
 8019bf0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019bf4:	eef0 6a43 	vmov.f32	s13, s6
 8019bf8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019bfc:	ee12 2a90 	vmov	r2, s5
 8019c00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c04:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c08:	ee13 2a10 	vmov	r2, s6
 8019c0c:	9325      	str	r3, [sp, #148]	; 0x94
 8019c0e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019c10:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c14:	9326      	str	r3, [sp, #152]	; 0x98
 8019c16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019c18:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8019c1a:	3b01      	subs	r3, #1
 8019c1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c20:	930c      	str	r3, [sp, #48]	; 0x30
 8019c22:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019c24:	bf08      	it	eq
 8019c26:	4613      	moveq	r3, r2
 8019c28:	ee16 5a90 	vmov	r5, s13
 8019c2c:	9309      	str	r3, [sp, #36]	; 0x24
 8019c2e:	eeb0 3a67 	vmov.f32	s6, s15
 8019c32:	eef0 2a47 	vmov.f32	s5, s14
 8019c36:	e6a6      	b.n	8019986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019c38:	2900      	cmp	r1, #0
 8019c3a:	f43f af10 	beq.w	8019a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019c3e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019c42:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019c46:	930f      	str	r3, [sp, #60]	; 0x3c
 8019c48:	e709      	b.n	8019a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019c4a:	f112 0901 	adds.w	r9, r2, #1
 8019c4e:	f53f af7d 	bmi.w	8019b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019c52:	454b      	cmp	r3, r9
 8019c54:	f6ff af7a 	blt.w	8019b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019c58:	f11c 0901 	adds.w	r9, ip, #1
 8019c5c:	f53f af76 	bmi.w	8019b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019c60:	45ce      	cmp	lr, r9
 8019c62:	f6ff af73 	blt.w	8019b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019c66:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019c68:	9202      	str	r2, [sp, #8]
 8019c6a:	b21b      	sxth	r3, r3
 8019c6c:	fa0f f28e 	sxth.w	r2, lr
 8019c70:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019c74:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019c78:	9201      	str	r2, [sp, #4]
 8019c7a:	9300      	str	r3, [sp, #0]
 8019c7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019c7e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8019c80:	4633      	mov	r3, r6
 8019c82:	4639      	mov	r1, r7
 8019c84:	f7ff fd8e 	bl	80197a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019c88:	e760      	b.n	8019b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019c8a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019c8c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019c8e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019c92:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019c96:	1429      	asrs	r1, r5, #16
 8019c98:	fb03 2101 	mla	r1, r3, r1, r2
 8019c9c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019c9e:	440a      	add	r2, r1
 8019ca0:	5c61      	ldrb	r1, [r4, r1]
 8019ca2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019ca6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019caa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8019cae:	f1bc 0f00 	cmp.w	ip, #0
 8019cb2:	f000 808c 	beq.w	8019dce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019cb6:	7857      	ldrb	r7, [r2, #1]
 8019cb8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019cbc:	9413      	str	r4, [sp, #76]	; 0x4c
 8019cbe:	b140      	cbz	r0, 8019cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019cc0:	18d7      	adds	r7, r2, r3
 8019cc2:	5cd3      	ldrb	r3, [r2, r3]
 8019cc4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019cc8:	9310      	str	r3, [sp, #64]	; 0x40
 8019cca:	787b      	ldrb	r3, [r7, #1]
 8019ccc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019cd0:	9314      	str	r3, [sp, #80]	; 0x50
 8019cd2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019cd4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019cd6:	fb1c f200 	smulbb	r2, ip, r0
 8019cda:	041f      	lsls	r7, r3, #16
 8019cdc:	10d2      	asrs	r2, r2, #3
 8019cde:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019ce2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019ce6:	431f      	orrs	r7, r3
 8019ce8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019cec:	9317      	str	r3, [sp, #92]	; 0x5c
 8019cee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019cf0:	041b      	lsls	r3, r3, #16
 8019cf2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8019cf6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019cfa:	ea43 030b 	orr.w	r3, r3, fp
 8019cfe:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019d00:	4353      	muls	r3, r2
 8019d02:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019d06:	fb04 3707 	mla	r7, r4, r7, r3
 8019d0a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019d0e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019d12:	ea43 0b01 	orr.w	fp, r3, r1
 8019d16:	f1c0 0110 	rsb	r1, r0, #16
 8019d1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d1c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019d1e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019d22:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019d26:	fb0c 770b 	mla	r7, ip, fp, r7
 8019d2a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019d2e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019d32:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019d36:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019d3a:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019d3e:	fb02 770c 	mla	r7, r2, ip, r7
 8019d42:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019d44:	0d79      	lsrs	r1, r7, #21
 8019d46:	097f      	lsrs	r7, r7, #5
 8019d48:	8812      	ldrh	r2, [r2, #0]
 8019d4a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019d4e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019d52:	430f      	orrs	r7, r1
 8019d54:	b2bb      	uxth	r3, r7
 8019d56:	1211      	asrs	r1, r2, #8
 8019d58:	1218      	asrs	r0, r3, #8
 8019d5a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019d5e:	fb11 f104 	smulbb	r1, r1, r4
 8019d62:	10d7      	asrs	r7, r2, #3
 8019d64:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019d68:	00d2      	lsls	r2, r2, #3
 8019d6a:	fb00 1009 	mla	r0, r0, r9, r1
 8019d6e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019d72:	10d9      	asrs	r1, r3, #3
 8019d74:	b2d2      	uxtb	r2, r2
 8019d76:	00db      	lsls	r3, r3, #3
 8019d78:	fb17 f704 	smulbb	r7, r7, r4
 8019d7c:	fb12 f204 	smulbb	r2, r2, r4
 8019d80:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019d84:	b2db      	uxtb	r3, r3
 8019d86:	b280      	uxth	r0, r0
 8019d88:	fb01 7109 	mla	r1, r1, r9, r7
 8019d8c:	fb03 2309 	mla	r3, r3, r9, r2
 8019d90:	b29b      	uxth	r3, r3
 8019d92:	b289      	uxth	r1, r1
 8019d94:	1c42      	adds	r2, r0, #1
 8019d96:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019d9a:	1c4f      	adds	r7, r1, #1
 8019d9c:	1c5a      	adds	r2, r3, #1
 8019d9e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019da2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019da6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019daa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019dae:	0949      	lsrs	r1, r1, #5
 8019db0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019db2:	4310      	orrs	r0, r2
 8019db4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019db8:	4308      	orrs	r0, r1
 8019dba:	f823 0b02 	strh.w	r0, [r3], #2
 8019dbe:	930e      	str	r3, [sp, #56]	; 0x38
 8019dc0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019dc2:	449a      	add	sl, r3
 8019dc4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019dc6:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019dca:	441d      	add	r5, r3
 8019dcc:	e6ed      	b.n	8019baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8019dce:	2800      	cmp	r0, #0
 8019dd0:	f43f af7f 	beq.w	8019cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019dd4:	5cd3      	ldrb	r3, [r2, r3]
 8019dd6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019dda:	9310      	str	r3, [sp, #64]	; 0x40
 8019ddc:	e779      	b.n	8019cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019dde:	b019      	add	sp, #100	; 0x64
 8019de0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019de4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019de4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019de8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8019dec:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019df0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019df4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019df8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019dfc:	8808      	ldrh	r0, [r1, #0]
 8019dfe:	fb08 470e 	mla	r7, r8, lr, r4
 8019e02:	f1b8 0f00 	cmp.w	r8, #0
 8019e06:	eb02 0907 	add.w	r9, r2, r7
 8019e0a:	db67      	blt.n	8019edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019e0c:	45c2      	cmp	sl, r8
 8019e0e:	dd65      	ble.n	8019edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019e10:	2c00      	cmp	r4, #0
 8019e12:	db61      	blt.n	8019ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019e14:	45a6      	cmp	lr, r4
 8019e16:	dd5f      	ble.n	8019ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019e18:	5dd2      	ldrb	r2, [r2, r7]
 8019e1a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019e1e:	1c62      	adds	r2, r4, #1
 8019e20:	d45f      	bmi.n	8019ee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019e22:	4596      	cmp	lr, r2
 8019e24:	dd5d      	ble.n	8019ee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019e26:	2d00      	cmp	r5, #0
 8019e28:	d05b      	beq.n	8019ee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019e2a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019e2e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019e32:	f118 0801 	adds.w	r8, r8, #1
 8019e36:	d458      	bmi.n	8019eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019e38:	45c2      	cmp	sl, r8
 8019e3a:	dd56      	ble.n	8019eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019e3c:	2e00      	cmp	r6, #0
 8019e3e:	d054      	beq.n	8019eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019e40:	2c00      	cmp	r4, #0
 8019e42:	db50      	blt.n	8019ee6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019e44:	45a6      	cmp	lr, r4
 8019e46:	dd4e      	ble.n	8019ee6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019e48:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019e4c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019e50:	3401      	adds	r4, #1
 8019e52:	d407      	bmi.n	8019e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019e54:	45a6      	cmp	lr, r4
 8019e56:	dd05      	ble.n	8019e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019e58:	b125      	cbz	r5, 8019e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019e5a:	44ce      	add	lr, r9
 8019e5c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019e60:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019e64:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019e68:	fb15 f406 	smulbb	r4, r5, r6
 8019e6c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019e70:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019e74:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019e78:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019e7c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019e80:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019e84:	f1c6 0310 	rsb	r3, r6, #16
 8019e88:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019e8c:	1b5b      	subs	r3, r3, r5
 8019e8e:	ea4e 0707 	orr.w	r7, lr, r7
 8019e92:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019e96:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019e9a:	437d      	muls	r5, r7
 8019e9c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019ea0:	0403      	lsls	r3, r0, #16
 8019ea2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019ea6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019eaa:	4318      	orrs	r0, r3
 8019eac:	0413      	lsls	r3, r2, #16
 8019eae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019eb2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019eb6:	4313      	orrs	r3, r2
 8019eb8:	fb04 c000 	mla	r0, r4, r0, ip
 8019ebc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019ec0:	fb06 0003 	mla	r0, r6, r3, r0
 8019ec4:	0d43      	lsrs	r3, r0, #21
 8019ec6:	0940      	lsrs	r0, r0, #5
 8019ec8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019ecc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019ed0:	4318      	orrs	r0, r3
 8019ed2:	8008      	strh	r0, [r1, #0]
 8019ed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019ed8:	4684      	mov	ip, r0
 8019eda:	e7a0      	b.n	8019e1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019edc:	4607      	mov	r7, r0
 8019ede:	4684      	mov	ip, r0
 8019ee0:	e7a7      	b.n	8019e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019ee2:	4607      	mov	r7, r0
 8019ee4:	e7a5      	b.n	8019e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019ee6:	4602      	mov	r2, r0
 8019ee8:	e7b2      	b.n	8019e50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019eea:	4602      	mov	r2, r0
 8019eec:	e7ba      	b.n	8019e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019eee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019eee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ef2:	b093      	sub	sp, #76	; 0x4c
 8019ef4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019ef8:	920f      	str	r2, [sp, #60]	; 0x3c
 8019efa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019efc:	9108      	str	r1, [sp, #32]
 8019efe:	9306      	str	r3, [sp, #24]
 8019f00:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019f04:	9010      	str	r0, [sp, #64]	; 0x40
 8019f06:	6850      	ldr	r0, [r2, #4]
 8019f08:	6812      	ldr	r2, [r2, #0]
 8019f0a:	fb00 1303 	mla	r3, r0, r3, r1
 8019f0e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019f12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019f14:	681b      	ldr	r3, [r3, #0]
 8019f16:	9307      	str	r3, [sp, #28]
 8019f18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019f1a:	685f      	ldr	r7, [r3, #4]
 8019f1c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f20:	3704      	adds	r7, #4
 8019f22:	9b08      	ldr	r3, [sp, #32]
 8019f24:	2b00      	cmp	r3, #0
 8019f26:	dc03      	bgt.n	8019f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019f28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019f2a:	2b00      	cmp	r3, #0
 8019f2c:	f340 81b2 	ble.w	801a294 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019f30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019f32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019f36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019f3a:	1e48      	subs	r0, r1, #1
 8019f3c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019f40:	9b06      	ldr	r3, [sp, #24]
 8019f42:	2b00      	cmp	r3, #0
 8019f44:	f340 80a9 	ble.w	801a09a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019f48:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019f4c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019f50:	d406      	bmi.n	8019f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f52:	4586      	cmp	lr, r0
 8019f54:	da04      	bge.n	8019f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f56:	2b00      	cmp	r3, #0
 8019f58:	db02      	blt.n	8019f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f5a:	4563      	cmp	r3, ip
 8019f5c:	f2c0 809e 	blt.w	801a09c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019f60:	f11e 0e01 	adds.w	lr, lr, #1
 8019f64:	f100 808f 	bmi.w	801a086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019f68:	4571      	cmp	r1, lr
 8019f6a:	f2c0 808c 	blt.w	801a086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019f6e:	3301      	adds	r3, #1
 8019f70:	f100 8089 	bmi.w	801a086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019f74:	429a      	cmp	r2, r3
 8019f76:	f2c0 8086 	blt.w	801a086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019f7a:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019f7e:	46c8      	mov	r8, r9
 8019f80:	f1bb 0f00 	cmp.w	fp, #0
 8019f84:	f340 80a6 	ble.w	801a0d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019f88:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019f8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019f8c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019f90:	689b      	ldr	r3, [r3, #8]
 8019f92:	1422      	asrs	r2, r4, #16
 8019f94:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019f98:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019f9c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019fa0:	f100 80e3 	bmi.w	801a16a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019fa4:	f103 3aff 	add.w	sl, r3, #4294967295
 8019fa8:	4552      	cmp	r2, sl
 8019faa:	f280 80de 	bge.w	801a16a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019fae:	f1bc 0f00 	cmp.w	ip, #0
 8019fb2:	f2c0 80da 	blt.w	801a16a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019fb6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019fba:	45d4      	cmp	ip, sl
 8019fbc:	f280 80d5 	bge.w	801a16a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019fc0:	b21b      	sxth	r3, r3
 8019fc2:	fb0c 2203 	mla	r2, ip, r3, r2
 8019fc6:	9d07      	ldr	r5, [sp, #28]
 8019fc8:	eb05 0a02 	add.w	sl, r5, r2
 8019fcc:	5caa      	ldrb	r2, [r5, r2]
 8019fce:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019fd2:	2800      	cmp	r0, #0
 8019fd4:	f000 80c0 	beq.w	801a158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019fd8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019fdc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019fe0:	920b      	str	r2, [sp, #44]	; 0x2c
 8019fe2:	b151      	cbz	r1, 8019ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019fe4:	eb0a 0203 	add.w	r2, sl, r3
 8019fe8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019fec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ff0:	9309      	str	r3, [sp, #36]	; 0x24
 8019ff2:	7853      	ldrb	r3, [r2, #1]
 8019ff4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ff8:	930c      	str	r3, [sp, #48]	; 0x30
 8019ffa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019ffc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019ffe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a002:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a006:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a00a:	ea4c 0c03 	orr.w	ip, ip, r3
 801a00e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a010:	041b      	lsls	r3, r3, #16
 801a012:	fb10 f201 	smulbb	r2, r0, r1
 801a016:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a01a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a01e:	10d2      	asrs	r2, r2, #3
 801a020:	432b      	orrs	r3, r5
 801a022:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a026:	4353      	muls	r3, r2
 801a028:	fb0a 330c 	mla	r3, sl, ip, r3
 801a02c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a030:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a034:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a038:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a03c:	f1c1 0c10 	rsb	ip, r1, #16
 801a040:	ebac 0c00 	sub.w	ip, ip, r0
 801a044:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a048:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a04c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a04e:	0418      	lsls	r0, r3, #16
 801a050:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a054:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a058:	4318      	orrs	r0, r3
 801a05a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a05e:	fb02 c200 	mla	r2, r2, r0, ip
 801a062:	0d53      	lsrs	r3, r2, #21
 801a064:	0952      	lsrs	r2, r2, #5
 801a066:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a06a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a06e:	431a      	orrs	r2, r3
 801a070:	f8a8 2000 	strh.w	r2, [r8]
 801a074:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a076:	441c      	add	r4, r3
 801a078:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a07a:	f108 0802 	add.w	r8, r8, #2
 801a07e:	441e      	add	r6, r3
 801a080:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a084:	e77c      	b.n	8019f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a086:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a088:	441c      	add	r4, r3
 801a08a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a08c:	441e      	add	r6, r3
 801a08e:	9b06      	ldr	r3, [sp, #24]
 801a090:	3b01      	subs	r3, #1
 801a092:	9306      	str	r3, [sp, #24]
 801a094:	f109 0902 	add.w	r9, r9, #2
 801a098:	e752      	b.n	8019f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a09a:	d020      	beq.n	801a0de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a09c:	9b06      	ldr	r3, [sp, #24]
 801a09e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a0a0:	3b01      	subs	r3, #1
 801a0a2:	fb00 4003 	mla	r0, r0, r3, r4
 801a0a6:	1400      	asrs	r0, r0, #16
 801a0a8:	f53f af67 	bmi.w	8019f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a0ac:	3901      	subs	r1, #1
 801a0ae:	4288      	cmp	r0, r1
 801a0b0:	f6bf af63 	bge.w	8019f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a0b4:	9920      	ldr	r1, [sp, #128]	; 0x80
 801a0b6:	fb01 6303 	mla	r3, r1, r3, r6
 801a0ba:	141b      	asrs	r3, r3, #16
 801a0bc:	f53f af5d 	bmi.w	8019f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a0c0:	3a01      	subs	r2, #1
 801a0c2:	4293      	cmp	r3, r2
 801a0c4:	f6bf af59 	bge.w	8019f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a0c8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a0cc:	46ca      	mov	sl, r9
 801a0ce:	f1b8 0f00 	cmp.w	r8, #0
 801a0d2:	dc67      	bgt.n	801a1a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a0d4:	9b06      	ldr	r3, [sp, #24]
 801a0d6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a0da:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a0de:	9b08      	ldr	r3, [sp, #32]
 801a0e0:	2b00      	cmp	r3, #0
 801a0e2:	f340 80d7 	ble.w	801a294 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a0e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a0ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a0ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a0f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a0f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a0fc:	eeb0 6a62 	vmov.f32	s12, s5
 801a100:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a104:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a108:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a10c:	ee16 4a10 	vmov	r4, s12
 801a110:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a114:	eeb0 6a43 	vmov.f32	s12, s6
 801a118:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a11c:	ee12 2a90 	vmov	r2, s5
 801a120:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a124:	fb92 f3f3 	sdiv	r3, r2, r3
 801a128:	ee13 2a10 	vmov	r2, s6
 801a12c:	931f      	str	r3, [sp, #124]	; 0x7c
 801a12e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a130:	fb92 f3f3 	sdiv	r3, r2, r3
 801a134:	9320      	str	r3, [sp, #128]	; 0x80
 801a136:	9b08      	ldr	r3, [sp, #32]
 801a138:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a13a:	3b01      	subs	r3, #1
 801a13c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a140:	9308      	str	r3, [sp, #32]
 801a142:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a144:	bf08      	it	eq
 801a146:	4613      	moveq	r3, r2
 801a148:	ee16 6a10 	vmov	r6, s12
 801a14c:	9306      	str	r3, [sp, #24]
 801a14e:	eeb0 3a67 	vmov.f32	s6, s15
 801a152:	eef0 2a47 	vmov.f32	s5, s14
 801a156:	e6e4      	b.n	8019f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a158:	2900      	cmp	r1, #0
 801a15a:	f43f af4e 	beq.w	8019ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a15e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a162:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a166:	9309      	str	r3, [sp, #36]	; 0x24
 801a168:	e747      	b.n	8019ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a16a:	f112 0a01 	adds.w	sl, r2, #1
 801a16e:	d481      	bmi.n	801a074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a170:	4553      	cmp	r3, sl
 801a172:	f6ff af7f 	blt.w	801a074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a176:	f11c 0a01 	adds.w	sl, ip, #1
 801a17a:	f53f af7b 	bmi.w	801a074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a17e:	45d6      	cmp	lr, sl
 801a180:	f6ff af78 	blt.w	801a074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a184:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a188:	b21b      	sxth	r3, r3
 801a18a:	fa0f f28e 	sxth.w	r2, lr
 801a18e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a192:	9201      	str	r2, [sp, #4]
 801a194:	9300      	str	r3, [sp, #0]
 801a196:	9a07      	ldr	r2, [sp, #28]
 801a198:	9810      	ldr	r0, [sp, #64]	; 0x40
 801a19a:	463b      	mov	r3, r7
 801a19c:	4641      	mov	r1, r8
 801a19e:	f7ff fe21 	bl	8019de4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a1a2:	e767      	b.n	801a074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a1a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a1a6:	9d07      	ldr	r5, [sp, #28]
 801a1a8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a1ac:	1422      	asrs	r2, r4, #16
 801a1ae:	1431      	asrs	r1, r6, #16
 801a1b0:	fb03 2101 	mla	r1, r3, r1, r2
 801a1b4:	9a07      	ldr	r2, [sp, #28]
 801a1b6:	440a      	add	r2, r1
 801a1b8:	5c69      	ldrb	r1, [r5, r1]
 801a1ba:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a1be:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a1c2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a1c6:	f1be 0f00 	cmp.w	lr, #0
 801a1ca:	d05c      	beq.n	801a286 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a1cc:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a1d0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a1d4:	950d      	str	r5, [sp, #52]	; 0x34
 801a1d6:	b150      	cbz	r0, 801a1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a1d8:	eb02 0c03 	add.w	ip, r2, r3
 801a1dc:	5cd3      	ldrb	r3, [r2, r3]
 801a1de:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a1e2:	930a      	str	r3, [sp, #40]	; 0x28
 801a1e4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a1e8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a1ec:	930e      	str	r3, [sp, #56]	; 0x38
 801a1ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a1f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a1f2:	fb1e f200 	smulbb	r2, lr, r0
 801a1f6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a1fa:	10d2      	asrs	r2, r2, #3
 801a1fc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a200:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a204:	ea4c 0c03 	orr.w	ip, ip, r3
 801a208:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a20c:	9311      	str	r3, [sp, #68]	; 0x44
 801a20e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a210:	041b      	lsls	r3, r3, #16
 801a212:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801a216:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a21a:	ea43 030b 	orr.w	r3, r3, fp
 801a21e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a220:	4353      	muls	r3, r2
 801a222:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a226:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a22a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a22e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801a232:	ea43 0b01 	orr.w	fp, r3, r1
 801a236:	f1c0 0110 	rsb	r1, r0, #16
 801a23a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a23c:	eba1 0e0e 	sub.w	lr, r1, lr
 801a240:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a244:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a248:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a24c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801a250:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a254:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a258:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a25c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a260:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a264:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a268:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a26c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a270:	ea43 0c0c 	orr.w	ip, r3, ip
 801a274:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a276:	f82a cb02 	strh.w	ip, [sl], #2
 801a27a:	441c      	add	r4, r3
 801a27c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a27e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a282:	441e      	add	r6, r3
 801a284:	e723      	b.n	801a0ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a286:	2800      	cmp	r0, #0
 801a288:	d0b1      	beq.n	801a1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a28a:	5cd3      	ldrb	r3, [r2, r3]
 801a28c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a290:	930a      	str	r3, [sp, #40]	; 0x28
 801a292:	e7ac      	b.n	801a1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a294:	b013      	add	sp, #76	; 0x4c
 801a296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a29a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a29a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a29e:	880d      	ldrh	r5, [r1, #0]
 801a2a0:	b087      	sub	sp, #28
 801a2a2:	10ef      	asrs	r7, r5, #3
 801a2a4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a2a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a2ac:	00ed      	lsls	r5, r5, #3
 801a2ae:	9701      	str	r7, [sp, #4]
 801a2b0:	b2ed      	uxtb	r5, r5
 801a2b2:	9502      	str	r5, [sp, #8]
 801a2b4:	9d01      	ldr	r5, [sp, #4]
 801a2b6:	9103      	str	r1, [sp, #12]
 801a2b8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801a2bc:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801a2c0:	9902      	ldr	r1, [sp, #8]
 801a2c2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801a2c6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801a2ca:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801a2ce:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801a2d2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801a2d6:	022d      	lsls	r5, r5, #8
 801a2d8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a2dc:	fb06 0709 	mla	r7, r6, r9, r0
 801a2e0:	430d      	orrs	r5, r1
 801a2e2:	2e00      	cmp	r6, #0
 801a2e4:	eb02 0c07 	add.w	ip, r2, r7
 801a2e8:	9505      	str	r5, [sp, #20]
 801a2ea:	f2c0 80b6 	blt.w	801a45a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a2ee:	45b3      	cmp	fp, r6
 801a2f0:	f340 80b3 	ble.w	801a45a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a2f4:	2800      	cmp	r0, #0
 801a2f6:	f2c0 80ae 	blt.w	801a456 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a2fa:	4581      	cmp	r9, r0
 801a2fc:	f340 80ab 	ble.w	801a456 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a300:	5dd7      	ldrb	r7, [r2, r7]
 801a302:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a306:	441f      	add	r7, r3
 801a308:	1c42      	adds	r2, r0, #1
 801a30a:	f100 80a9 	bmi.w	801a460 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a30e:	4591      	cmp	r9, r2
 801a310:	f340 80a6 	ble.w	801a460 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a314:	2c00      	cmp	r4, #0
 801a316:	f000 80a3 	beq.w	801a460 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a31a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a31e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a322:	441d      	add	r5, r3
 801a324:	3601      	adds	r6, #1
 801a326:	f100 809f 	bmi.w	801a468 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a32a:	45b3      	cmp	fp, r6
 801a32c:	f340 809c 	ble.w	801a468 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a330:	f1be 0f00 	cmp.w	lr, #0
 801a334:	f000 8098 	beq.w	801a468 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a338:	2800      	cmp	r0, #0
 801a33a:	f2c0 8093 	blt.w	801a464 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a33e:	4581      	cmp	r9, r0
 801a340:	f340 8090 	ble.w	801a464 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a344:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a348:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a34c:	441e      	add	r6, r3
 801a34e:	3001      	adds	r0, #1
 801a350:	f100 808d 	bmi.w	801a46e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a354:	4581      	cmp	r9, r0
 801a356:	f340 808a 	ble.w	801a46e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a35a:	2c00      	cmp	r4, #0
 801a35c:	f000 8087 	beq.w	801a46e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a360:	44e1      	add	r9, ip
 801a362:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a366:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a36a:	4413      	add	r3, r2
 801a36c:	b2a4      	uxth	r4, r4
 801a36e:	fa1f fe8e 	uxth.w	lr, lr
 801a372:	fb04 fb0e 	mul.w	fp, r4, lr
 801a376:	0124      	lsls	r4, r4, #4
 801a378:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a37c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801a380:	eba4 040b 	sub.w	r4, r4, fp
 801a384:	fa1f f08e 	uxth.w	r0, lr
 801a388:	b2a2      	uxth	r2, r4
 801a38a:	78ac      	ldrb	r4, [r5, #2]
 801a38c:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a390:	9901      	ldr	r1, [sp, #4]
 801a392:	eba9 0900 	sub.w	r9, r9, r0
 801a396:	fa1f f989 	uxth.w	r9, r9
 801a39a:	4354      	muls	r4, r2
 801a39c:	fb09 440c 	mla	r4, r9, ip, r4
 801a3a0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a3a4:	fb00 440c 	mla	r4, r0, ip, r4
 801a3a8:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a3ac:	fa1f fe88 	uxth.w	lr, r8
 801a3b0:	ea6f 0808 	mvn.w	r8, r8
 801a3b4:	fa5f f888 	uxtb.w	r8, r8
 801a3b8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a3bc:	fb1a fa08 	smulbb	sl, sl, r8
 801a3c0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a3c4:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a3c8:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a3cc:	787c      	ldrb	r4, [r7, #1]
 801a3ce:	782d      	ldrb	r5, [r5, #0]
 801a3d0:	783f      	ldrb	r7, [r7, #0]
 801a3d2:	fb02 fa0a 	mul.w	sl, r2, sl
 801a3d6:	fb09 aa04 	mla	sl, r9, r4, sl
 801a3da:	7874      	ldrb	r4, [r6, #1]
 801a3dc:	436a      	muls	r2, r5
 801a3de:	7835      	ldrb	r5, [r6, #0]
 801a3e0:	fb00 aa04 	mla	sl, r0, r4, sl
 801a3e4:	fb09 2207 	mla	r2, r9, r7, r2
 801a3e8:	785c      	ldrb	r4, [r3, #1]
 801a3ea:	781b      	ldrb	r3, [r3, #0]
 801a3ec:	fb00 2005 	mla	r0, r0, r5, r2
 801a3f0:	fb0b a404 	mla	r4, fp, r4, sl
 801a3f4:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a3f8:	9b02      	ldr	r3, [sp, #8]
 801a3fa:	fb11 fa08 	smulbb	sl, r1, r8
 801a3fe:	fa1f fc8c 	uxth.w	ip, ip
 801a402:	fb13 f808 	smulbb	r8, r3, r8
 801a406:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a40a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a40e:	fb04 a40e 	mla	r4, r4, lr, sl
 801a412:	f10c 0301 	add.w	r3, ip, #1
 801a416:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a41a:	fa1f fe8e 	uxth.w	lr, lr
 801a41e:	b2a4      	uxth	r4, r4
 801a420:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a424:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801a428:	f104 0a01 	add.w	sl, r4, #1
 801a42c:	f10e 0c01 	add.w	ip, lr, #1
 801a430:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a434:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a438:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a43c:	0964      	lsrs	r4, r4, #5
 801a43e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a442:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801a446:	9b03      	ldr	r3, [sp, #12]
 801a448:	ea4c 0c04 	orr.w	ip, ip, r4
 801a44c:	f8a3 c000 	strh.w	ip, [r3]
 801a450:	b007      	add	sp, #28
 801a452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a456:	af05      	add	r7, sp, #20
 801a458:	e756      	b.n	801a308 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a45a:	ad05      	add	r5, sp, #20
 801a45c:	462f      	mov	r7, r5
 801a45e:	e761      	b.n	801a324 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a460:	ad05      	add	r5, sp, #20
 801a462:	e75f      	b.n	801a324 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a464:	ae05      	add	r6, sp, #20
 801a466:	e772      	b.n	801a34e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a468:	ab05      	add	r3, sp, #20
 801a46a:	461e      	mov	r6, r3
 801a46c:	e77e      	b.n	801a36c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a46e:	ab05      	add	r3, sp, #20
 801a470:	e77c      	b.n	801a36c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a472:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a476:	b095      	sub	sp, #84	; 0x54
 801a478:	9212      	str	r2, [sp, #72]	; 0x48
 801a47a:	9309      	str	r3, [sp, #36]	; 0x24
 801a47c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801a47e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801a482:	930f      	str	r3, [sp, #60]	; 0x3c
 801a484:	910e      	str	r1, [sp, #56]	; 0x38
 801a486:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801a48a:	9013      	str	r0, [sp, #76]	; 0x4c
 801a48c:	6850      	ldr	r0, [r2, #4]
 801a48e:	6812      	ldr	r2, [r2, #0]
 801a490:	fb00 1303 	mla	r3, r0, r3, r1
 801a494:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a498:	930a      	str	r3, [sp, #40]	; 0x28
 801a49a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a49c:	681b      	ldr	r3, [r3, #0]
 801a49e:	930d      	str	r3, [sp, #52]	; 0x34
 801a4a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a4a2:	685c      	ldr	r4, [r3, #4]
 801a4a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a4a6:	43db      	mvns	r3, r3
 801a4a8:	b2db      	uxtb	r3, r3
 801a4aa:	3404      	adds	r4, #4
 801a4ac:	930b      	str	r3, [sp, #44]	; 0x2c
 801a4ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4b0:	2b00      	cmp	r3, #0
 801a4b2:	dc03      	bgt.n	801a4bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a4b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a4b6:	2b00      	cmp	r3, #0
 801a4b8:	f340 8255 	ble.w	801a966 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a4bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a4be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a4c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a4c6:	1e48      	subs	r0, r1, #1
 801a4c8:	1e55      	subs	r5, r2, #1
 801a4ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a4cc:	2b00      	cmp	r3, #0
 801a4ce:	f340 80f9 	ble.w	801a6c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a4d2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801a4d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a4d6:	1436      	asrs	r6, r6, #16
 801a4d8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a4dc:	d406      	bmi.n	801a4ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a4de:	4286      	cmp	r6, r0
 801a4e0:	da04      	bge.n	801a4ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a4e2:	2b00      	cmp	r3, #0
 801a4e4:	db02      	blt.n	801a4ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a4e6:	42ab      	cmp	r3, r5
 801a4e8:	f2c0 80ed 	blt.w	801a6c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a4ec:	3601      	adds	r6, #1
 801a4ee:	f100 80da 	bmi.w	801a6a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a4f2:	42b1      	cmp	r1, r6
 801a4f4:	f2c0 80d7 	blt.w	801a6a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a4f8:	3301      	adds	r3, #1
 801a4fa:	f100 80d4 	bmi.w	801a6a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a4fe:	429a      	cmp	r2, r3
 801a500:	f2c0 80d1 	blt.w	801a6a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a504:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a506:	9311      	str	r3, [sp, #68]	; 0x44
 801a508:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a50a:	930c      	str	r3, [sp, #48]	; 0x30
 801a50c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a50e:	2b00      	cmp	r3, #0
 801a510:	f340 80fa 	ble.w	801a708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a514:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a516:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a518:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a51a:	68c6      	ldr	r6, [r0, #12]
 801a51c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a51e:	141d      	asrs	r5, r3, #16
 801a520:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a524:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a526:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a528:	1400      	asrs	r0, r0, #16
 801a52a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a52e:	6892      	ldr	r2, [r2, #8]
 801a530:	f100 813e 	bmi.w	801a7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a534:	1e57      	subs	r7, r2, #1
 801a536:	42b8      	cmp	r0, r7
 801a538:	f280 813a 	bge.w	801a7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a53c:	2d00      	cmp	r5, #0
 801a53e:	f2c0 8137 	blt.w	801a7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a542:	1e77      	subs	r7, r6, #1
 801a544:	42bd      	cmp	r5, r7
 801a546:	f280 8133 	bge.w	801a7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a54a:	b212      	sxth	r2, r2
 801a54c:	fb05 0002 	mla	r0, r5, r2, r0
 801a550:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a552:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a556:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a55a:	182e      	adds	r6, r5, r0
 801a55c:	eb04 050a 	add.w	r5, r4, sl
 801a560:	2b00      	cmp	r3, #0
 801a562:	f000 8117 	beq.w	801a794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a566:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a56a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a56e:	44a4      	add	ip, r4
 801a570:	2900      	cmp	r1, #0
 801a572:	f000 8117 	beq.w	801a7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a576:	18b0      	adds	r0, r6, r2
 801a578:	5cb2      	ldrb	r2, [r6, r2]
 801a57a:	7840      	ldrb	r0, [r0, #1]
 801a57c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a580:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a584:	4422      	add	r2, r4
 801a586:	4420      	add	r0, r4
 801a588:	b29b      	uxth	r3, r3
 801a58a:	b289      	uxth	r1, r1
 801a58c:	fb03 f901 	mul.w	r9, r3, r1
 801a590:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a594:	011b      	lsls	r3, r3, #4
 801a596:	b289      	uxth	r1, r1
 801a598:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a59c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a5a0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a5a2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a5a6:	f8b6 e000 	ldrh.w	lr, [r6]
 801a5aa:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a5ae:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a5b2:	eba3 0309 	sub.w	r3, r3, r9
 801a5b6:	b29b      	uxth	r3, r3
 801a5b8:	eba8 0801 	sub.w	r8, r8, r1
 801a5bc:	fa1f f888 	uxth.w	r8, r8
 801a5c0:	435f      	muls	r7, r3
 801a5c2:	fb08 770b 	mla	r7, r8, fp, r7
 801a5c6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a5ca:	9310      	str	r3, [sp, #64]	; 0x40
 801a5cc:	fb01 770b 	mla	r7, r1, fp, r7
 801a5d0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a5d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a5d6:	fb09 770b 	mla	r7, r9, fp, r7
 801a5da:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a5de:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a5e2:	fb1b fb03 	smulbb	fp, fp, r3
 801a5e6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a5ea:	fb07 b706 	mla	r7, r7, r6, fp
 801a5ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a5f0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a5f4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a5f8:	f89c c000 	ldrb.w	ip, [ip]
 801a5fc:	435d      	muls	r5, r3
 801a5fe:	fb08 550b 	mla	r5, r8, fp, r5
 801a602:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a606:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a608:	fb01 550b 	mla	r5, r1, fp, r5
 801a60c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a610:	fb09 550b 	mla	r5, r9, fp, r5
 801a614:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a618:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a61c:	fb1b fb03 	smulbb	fp, fp, r3
 801a620:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a622:	fb03 f30c 	mul.w	r3, r3, ip
 801a626:	f892 c000 	ldrb.w	ip, [r2]
 801a62a:	fb08 330a 	mla	r3, r8, sl, r3
 801a62e:	fb01 330c 	mla	r3, r1, ip, r3
 801a632:	f890 c000 	ldrb.w	ip, [r0]
 801a636:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a63a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a63e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a640:	fa5f fe8e 	uxtb.w	lr, lr
 801a644:	b2bf      	uxth	r7, r7
 801a646:	fb1e fe03 	smulbb	lr, lr, r3
 801a64a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a64e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a652:	fb05 b506 	mla	r5, r5, r6, fp
 801a656:	1c7b      	adds	r3, r7, #1
 801a658:	fb0c e606 	mla	r6, ip, r6, lr
 801a65c:	b2ad      	uxth	r5, r5
 801a65e:	b2b6      	uxth	r6, r6
 801a660:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a664:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a668:	f105 0b01 	add.w	fp, r5, #1
 801a66c:	1c77      	adds	r7, r6, #1
 801a66e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a672:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a676:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a67a:	096d      	lsrs	r5, r5, #5
 801a67c:	431f      	orrs	r7, r3
 801a67e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a682:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a684:	433d      	orrs	r5, r7
 801a686:	801d      	strh	r5, [r3, #0]
 801a688:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a68a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a68c:	3302      	adds	r3, #2
 801a68e:	930c      	str	r3, [sp, #48]	; 0x30
 801a690:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a692:	4413      	add	r3, r2
 801a694:	931f      	str	r3, [sp, #124]	; 0x7c
 801a696:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a698:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a69a:	4413      	add	r3, r2
 801a69c:	9320      	str	r3, [sp, #128]	; 0x80
 801a69e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a6a0:	3b01      	subs	r3, #1
 801a6a2:	9311      	str	r3, [sp, #68]	; 0x44
 801a6a4:	e732      	b.n	801a50c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a6a6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a6a8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a6aa:	4433      	add	r3, r6
 801a6ac:	931f      	str	r3, [sp, #124]	; 0x7c
 801a6ae:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a6b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a6b2:	4433      	add	r3, r6
 801a6b4:	9320      	str	r3, [sp, #128]	; 0x80
 801a6b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a6b8:	3b01      	subs	r3, #1
 801a6ba:	9309      	str	r3, [sp, #36]	; 0x24
 801a6bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a6be:	3302      	adds	r3, #2
 801a6c0:	930a      	str	r3, [sp, #40]	; 0x28
 801a6c2:	e702      	b.n	801a4ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a6c4:	d027      	beq.n	801a716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a6c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a6c8:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a6ca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a6cc:	3b01      	subs	r3, #1
 801a6ce:	fb00 5003 	mla	r0, r0, r3, r5
 801a6d2:	1400      	asrs	r0, r0, #16
 801a6d4:	f53f af16 	bmi.w	801a504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a6d8:	3901      	subs	r1, #1
 801a6da:	4288      	cmp	r0, r1
 801a6dc:	f6bf af12 	bge.w	801a504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a6e0:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a6e2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a6e4:	fb01 0303 	mla	r3, r1, r3, r0
 801a6e8:	141b      	asrs	r3, r3, #16
 801a6ea:	f53f af0b 	bmi.w	801a504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a6ee:	3a01      	subs	r2, #1
 801a6f0:	4293      	cmp	r3, r2
 801a6f2:	f6bf af07 	bge.w	801a504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a6f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a6f8:	9311      	str	r3, [sp, #68]	; 0x44
 801a6fa:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a6fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a700:	930c      	str	r3, [sp, #48]	; 0x30
 801a702:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a704:	2b00      	cmp	r3, #0
 801a706:	dc70      	bgt.n	801a7ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a708:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a70a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a70c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a710:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a714:	930a      	str	r3, [sp, #40]	; 0x28
 801a716:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a718:	2b00      	cmp	r3, #0
 801a71a:	f340 8124 	ble.w	801a966 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a71e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a722:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a726:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a72a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a72c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a730:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a734:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a738:	eef0 6a62 	vmov.f32	s13, s5
 801a73c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a740:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a744:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a748:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a74c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a750:	eef0 6a43 	vmov.f32	s13, s6
 801a754:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a758:	ee12 2a90 	vmov	r2, s5
 801a75c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a760:	fb92 f3f3 	sdiv	r3, r2, r3
 801a764:	ee13 2a10 	vmov	r2, s6
 801a768:	9321      	str	r3, [sp, #132]	; 0x84
 801a76a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a76c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a770:	9322      	str	r3, [sp, #136]	; 0x88
 801a772:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a774:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a776:	3b01      	subs	r3, #1
 801a778:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a77c:	930e      	str	r3, [sp, #56]	; 0x38
 801a77e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a780:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a784:	bf08      	it	eq
 801a786:	4613      	moveq	r3, r2
 801a788:	9309      	str	r3, [sp, #36]	; 0x24
 801a78a:	eeb0 3a67 	vmov.f32	s6, s15
 801a78e:	eef0 2a47 	vmov.f32	s5, s14
 801a792:	e68c      	b.n	801a4ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a794:	b149      	cbz	r1, 801a7aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a796:	5cb2      	ldrb	r2, [r6, r2]
 801a798:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a79c:	4422      	add	r2, r4
 801a79e:	4628      	mov	r0, r5
 801a7a0:	46ac      	mov	ip, r5
 801a7a2:	e6f1      	b.n	801a588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a7a4:	4628      	mov	r0, r5
 801a7a6:	462a      	mov	r2, r5
 801a7a8:	e6ee      	b.n	801a588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a7aa:	4628      	mov	r0, r5
 801a7ac:	462a      	mov	r2, r5
 801a7ae:	e7f7      	b.n	801a7a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a7b0:	1c47      	adds	r7, r0, #1
 801a7b2:	f53f af69 	bmi.w	801a688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a7b6:	42ba      	cmp	r2, r7
 801a7b8:	f6ff af66 	blt.w	801a688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a7bc:	1c6f      	adds	r7, r5, #1
 801a7be:	f53f af63 	bmi.w	801a688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a7c2:	42be      	cmp	r6, r7
 801a7c4:	f6ff af60 	blt.w	801a688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a7c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a7ca:	9002      	str	r0, [sp, #8]
 801a7cc:	b236      	sxth	r6, r6
 801a7ce:	b212      	sxth	r2, r2
 801a7d0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a7d4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a7d8:	9200      	str	r2, [sp, #0]
 801a7da:	9601      	str	r6, [sp, #4]
 801a7dc:	4623      	mov	r3, r4
 801a7de:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a7e2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a7e4:	f7ff fd59 	bl	801a29a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a7e8:	e74e      	b.n	801a688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a7ea:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a7ec:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a7ee:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a7f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a7f2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a7f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a7f8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a7fc:	142d      	asrs	r5, r5, #16
 801a7fe:	1400      	asrs	r0, r0, #16
 801a800:	fb02 5000 	mla	r0, r2, r0, r5
 801a804:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a806:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a80a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a80e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a812:	182e      	adds	r6, r5, r0
 801a814:	eb04 0509 	add.w	r5, r4, r9
 801a818:	2b00      	cmp	r3, #0
 801a81a:	f000 8096 	beq.w	801a94a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a81e:	7877      	ldrb	r7, [r6, #1]
 801a820:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a824:	4427      	add	r7, r4
 801a826:	2900      	cmp	r1, #0
 801a828:	f000 8097 	beq.w	801a95a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a82c:	18b0      	adds	r0, r6, r2
 801a82e:	5cb2      	ldrb	r2, [r6, r2]
 801a830:	7840      	ldrb	r0, [r0, #1]
 801a832:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a836:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a83a:	4422      	add	r2, r4
 801a83c:	4420      	add	r0, r4
 801a83e:	b29b      	uxth	r3, r3
 801a840:	b289      	uxth	r1, r1
 801a842:	fb03 f801 	mul.w	r8, r3, r1
 801a846:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a848:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a84c:	f8b6 c000 	ldrh.w	ip, [r6]
 801a850:	78be      	ldrb	r6, [r7, #2]
 801a852:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a856:	011b      	lsls	r3, r3, #4
 801a858:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a85c:	b289      	uxth	r1, r1
 801a85e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a862:	eba3 0308 	sub.w	r3, r3, r8
 801a866:	b29b      	uxth	r3, r3
 801a868:	ebae 0e01 	sub.w	lr, lr, r1
 801a86c:	fa1f fe8e 	uxth.w	lr, lr
 801a870:	435e      	muls	r6, r3
 801a872:	fb0e 660b 	mla	r6, lr, fp, r6
 801a876:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a87a:	9310      	str	r3, [sp, #64]	; 0x40
 801a87c:	fb01 660b 	mla	r6, r1, fp, r6
 801a880:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a884:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a886:	fb08 660b 	mla	r6, r8, fp, r6
 801a88a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a88e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a892:	fb1b fb03 	smulbb	fp, fp, r3
 801a896:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a89a:	fb06 b60a 	mla	r6, r6, sl, fp
 801a89e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8a0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a8a4:	787d      	ldrb	r5, [r7, #1]
 801a8a6:	783f      	ldrb	r7, [r7, #0]
 801a8a8:	435d      	muls	r5, r3
 801a8aa:	fb0e 550b 	mla	r5, lr, fp, r5
 801a8ae:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a8b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a8b4:	fb01 550b 	mla	r5, r1, fp, r5
 801a8b8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a8bc:	fb08 550b 	mla	r5, r8, fp, r5
 801a8c0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a8c4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a8c8:	fb1b fb03 	smulbb	fp, fp, r3
 801a8cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8ce:	437b      	muls	r3, r7
 801a8d0:	7817      	ldrb	r7, [r2, #0]
 801a8d2:	fb0e 3309 	mla	r3, lr, r9, r3
 801a8d6:	fb01 3307 	mla	r3, r1, r7, r3
 801a8da:	7807      	ldrb	r7, [r0, #0]
 801a8dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a8e0:	fb08 3707 	mla	r7, r8, r7, r3
 801a8e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a8e6:	fa5f fc8c 	uxtb.w	ip, ip
 801a8ea:	fb1c fc03 	smulbb	ip, ip, r3
 801a8ee:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a8f2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a8f6:	fb05 b50a 	mla	r5, r5, sl, fp
 801a8fa:	fb07 c70a 	mla	r7, r7, sl, ip
 801a8fe:	b2b6      	uxth	r6, r6
 801a900:	b2ad      	uxth	r5, r5
 801a902:	b2bf      	uxth	r7, r7
 801a904:	1c73      	adds	r3, r6, #1
 801a906:	1c7a      	adds	r2, r7, #1
 801a908:	f105 0b01 	add.w	fp, r5, #1
 801a90c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a910:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a914:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a918:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a91c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a920:	096d      	lsrs	r5, r5, #5
 801a922:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a924:	4316      	orrs	r6, r2
 801a926:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a92a:	432e      	orrs	r6, r5
 801a92c:	f823 6b02 	strh.w	r6, [r3], #2
 801a930:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a932:	930c      	str	r3, [sp, #48]	; 0x30
 801a934:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a936:	4413      	add	r3, r2
 801a938:	931f      	str	r3, [sp, #124]	; 0x7c
 801a93a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a93c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a93e:	4413      	add	r3, r2
 801a940:	9320      	str	r3, [sp, #128]	; 0x80
 801a942:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a944:	3b01      	subs	r3, #1
 801a946:	9311      	str	r3, [sp, #68]	; 0x44
 801a948:	e6db      	b.n	801a702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a94a:	b149      	cbz	r1, 801a960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a94c:	5cb2      	ldrb	r2, [r6, r2]
 801a94e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a952:	4422      	add	r2, r4
 801a954:	4628      	mov	r0, r5
 801a956:	462f      	mov	r7, r5
 801a958:	e771      	b.n	801a83e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a95a:	4628      	mov	r0, r5
 801a95c:	462a      	mov	r2, r5
 801a95e:	e76e      	b.n	801a83e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a960:	4628      	mov	r0, r5
 801a962:	462a      	mov	r2, r5
 801a964:	e7f7      	b.n	801a956 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a966:	b015      	add	sp, #84	; 0x54
 801a968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a96c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a96c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a970:	880f      	ldrh	r7, [r1, #0]
 801a972:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a976:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a97a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a97e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a982:	023c      	lsls	r4, r7, #8
 801a984:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a988:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a98c:	017c      	lsls	r4, r7, #5
 801a98e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a992:	00ff      	lsls	r7, r7, #3
 801a994:	ea4b 0404 	orr.w	r4, fp, r4
 801a998:	b2ff      	uxtb	r7, r7
 801a99a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a99e:	4327      	orrs	r7, r4
 801a9a0:	2d00      	cmp	r5, #0
 801a9a2:	eb02 080a 	add.w	r8, r2, sl
 801a9a6:	9701      	str	r7, [sp, #4]
 801a9a8:	db7e      	blt.n	801aaa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a9aa:	45a9      	cmp	r9, r5
 801a9ac:	dd7c      	ble.n	801aaa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a9ae:	f1bc 0f00 	cmp.w	ip, #0
 801a9b2:	db77      	blt.n	801aaa4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a9b4:	45e6      	cmp	lr, ip
 801a9b6:	dd75      	ble.n	801aaa4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a9b8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a9bc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a9c0:	441f      	add	r7, r3
 801a9c2:	f11c 0201 	adds.w	r2, ip, #1
 801a9c6:	d472      	bmi.n	801aaae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a9c8:	4596      	cmp	lr, r2
 801a9ca:	dd70      	ble.n	801aaae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a9cc:	2800      	cmp	r0, #0
 801a9ce:	d06e      	beq.n	801aaae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a9d0:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a9d4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a9d8:	441c      	add	r4, r3
 801a9da:	3501      	adds	r5, #1
 801a9dc:	d46b      	bmi.n	801aab6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a9de:	45a9      	cmp	r9, r5
 801a9e0:	dd69      	ble.n	801aab6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a9e2:	2e00      	cmp	r6, #0
 801a9e4:	d067      	beq.n	801aab6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a9e6:	f1bc 0f00 	cmp.w	ip, #0
 801a9ea:	db62      	blt.n	801aab2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a9ec:	45e6      	cmp	lr, ip
 801a9ee:	dd60      	ble.n	801aab2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a9f0:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a9f4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a9f8:	441d      	add	r5, r3
 801a9fa:	f11c 0201 	adds.w	r2, ip, #1
 801a9fe:	d45d      	bmi.n	801aabc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801aa00:	4596      	cmp	lr, r2
 801aa02:	dd5b      	ble.n	801aabc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801aa04:	2800      	cmp	r0, #0
 801aa06:	d059      	beq.n	801aabc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801aa08:	44c6      	add	lr, r8
 801aa0a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801aa0e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa12:	4413      	add	r3, r2
 801aa14:	b280      	uxth	r0, r0
 801aa16:	b2b2      	uxth	r2, r6
 801aa18:	fb00 f602 	mul.w	r6, r0, r2
 801aa1c:	0100      	lsls	r0, r0, #4
 801aa1e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801aa22:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801aa26:	1b80      	subs	r0, r0, r6
 801aa28:	fa1f fc82 	uxth.w	ip, r2
 801aa2c:	b282      	uxth	r2, r0
 801aa2e:	78a0      	ldrb	r0, [r4, #2]
 801aa30:	f897 e002 	ldrb.w	lr, [r7, #2]
 801aa34:	f897 9000 	ldrb.w	r9, [r7]
 801aa38:	787f      	ldrb	r7, [r7, #1]
 801aa3a:	eba8 080c 	sub.w	r8, r8, ip
 801aa3e:	fa1f f888 	uxth.w	r8, r8
 801aa42:	4350      	muls	r0, r2
 801aa44:	fb08 0e0e 	mla	lr, r8, lr, r0
 801aa48:	78a8      	ldrb	r0, [r5, #2]
 801aa4a:	fb0c e000 	mla	r0, ip, r0, lr
 801aa4e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801aa52:	fb06 0e0e 	mla	lr, r6, lr, r0
 801aa56:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801aa5a:	f894 e000 	ldrb.w	lr, [r4]
 801aa5e:	fb02 fe0e 	mul.w	lr, r2, lr
 801aa62:	fb08 e909 	mla	r9, r8, r9, lr
 801aa66:	f895 e000 	ldrb.w	lr, [r5]
 801aa6a:	fb0c 990e 	mla	r9, ip, lr, r9
 801aa6e:	f893 e000 	ldrb.w	lr, [r3]
 801aa72:	785b      	ldrb	r3, [r3, #1]
 801aa74:	fb06 9e0e 	mla	lr, r6, lr, r9
 801aa78:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801aa7c:	ea4e 0e00 	orr.w	lr, lr, r0
 801aa80:	7860      	ldrb	r0, [r4, #1]
 801aa82:	4350      	muls	r0, r2
 801aa84:	786a      	ldrb	r2, [r5, #1]
 801aa86:	fb08 0007 	mla	r0, r8, r7, r0
 801aa8a:	fb0c 0202 	mla	r2, ip, r2, r0
 801aa8e:	fb06 2303 	mla	r3, r6, r3, r2
 801aa92:	095b      	lsrs	r3, r3, #5
 801aa94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aa98:	ea4e 0303 	orr.w	r3, lr, r3
 801aa9c:	800b      	strh	r3, [r1, #0]
 801aa9e:	b003      	add	sp, #12
 801aaa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aaa4:	af01      	add	r7, sp, #4
 801aaa6:	e78c      	b.n	801a9c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801aaa8:	ac01      	add	r4, sp, #4
 801aaaa:	4627      	mov	r7, r4
 801aaac:	e795      	b.n	801a9da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801aaae:	ac01      	add	r4, sp, #4
 801aab0:	e793      	b.n	801a9da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801aab2:	ad01      	add	r5, sp, #4
 801aab4:	e7a1      	b.n	801a9fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801aab6:	ab01      	add	r3, sp, #4
 801aab8:	461d      	mov	r5, r3
 801aaba:	e7ab      	b.n	801aa14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801aabc:	ab01      	add	r3, sp, #4
 801aabe:	e7a9      	b.n	801aa14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801aac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aac4:	b08f      	sub	sp, #60	; 0x3c
 801aac6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801aaca:	920c      	str	r2, [sp, #48]	; 0x30
 801aacc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801aace:	910a      	str	r1, [sp, #40]	; 0x28
 801aad0:	9306      	str	r3, [sp, #24]
 801aad2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801aad6:	900d      	str	r0, [sp, #52]	; 0x34
 801aad8:	6850      	ldr	r0, [r2, #4]
 801aada:	6812      	ldr	r2, [r2, #0]
 801aadc:	fb00 1303 	mla	r3, r0, r3, r1
 801aae0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aae4:	9307      	str	r3, [sp, #28]
 801aae6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aae8:	681b      	ldr	r3, [r3, #0]
 801aaea:	9308      	str	r3, [sp, #32]
 801aaec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aaee:	685c      	ldr	r4, [r3, #4]
 801aaf0:	3404      	adds	r4, #4
 801aaf2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aaf4:	2b00      	cmp	r3, #0
 801aaf6:	dc03      	bgt.n	801ab00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801aaf8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801aafa:	2b00      	cmp	r3, #0
 801aafc:	f340 81d6 	ble.w	801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ab00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ab02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ab06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ab0a:	1e48      	subs	r0, r1, #1
 801ab0c:	1e56      	subs	r6, r2, #1
 801ab0e:	9b06      	ldr	r3, [sp, #24]
 801ab10:	2b00      	cmp	r3, #0
 801ab12:	f340 80b7 	ble.w	801ac84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801ab16:	ea5f 472b 	movs.w	r7, fp, asr #16
 801ab1a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ab1e:	d406      	bmi.n	801ab2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ab20:	4287      	cmp	r7, r0
 801ab22:	da04      	bge.n	801ab2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ab24:	2b00      	cmp	r3, #0
 801ab26:	db02      	blt.n	801ab2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ab28:	42b3      	cmp	r3, r6
 801ab2a:	f2c0 80ac 	blt.w	801ac86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ab2e:	3701      	adds	r7, #1
 801ab30:	f100 809d 	bmi.w	801ac6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ab34:	42b9      	cmp	r1, r7
 801ab36:	f2c0 809a 	blt.w	801ac6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ab3a:	3301      	adds	r3, #1
 801ab3c:	f100 8097 	bmi.w	801ac6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ab40:	429a      	cmp	r2, r3
 801ab42:	f2c0 8094 	blt.w	801ac6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ab46:	9b06      	ldr	r3, [sp, #24]
 801ab48:	930b      	str	r3, [sp, #44]	; 0x2c
 801ab4a:	9b07      	ldr	r3, [sp, #28]
 801ab4c:	9309      	str	r3, [sp, #36]	; 0x24
 801ab4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ab50:	2b00      	cmp	r3, #0
 801ab52:	f340 80b5 	ble.w	801acc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ab56:	9820      	ldr	r0, [sp, #128]	; 0x80
 801ab58:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ab5a:	68c7      	ldr	r7, [r0, #12]
 801ab5c:	6892      	ldr	r2, [r2, #8]
 801ab5e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801ab62:	ea4f 4625 	mov.w	r6, r5, asr #16
 801ab66:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ab6a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ab6e:	f100 80fb 	bmi.w	801ad68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab72:	f102 3cff 	add.w	ip, r2, #4294967295
 801ab76:	4560      	cmp	r0, ip
 801ab78:	f280 80f6 	bge.w	801ad68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab7c:	2e00      	cmp	r6, #0
 801ab7e:	f2c0 80f3 	blt.w	801ad68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab82:	f107 3cff 	add.w	ip, r7, #4294967295
 801ab86:	4566      	cmp	r6, ip
 801ab88:	f280 80ee 	bge.w	801ad68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab8c:	b212      	sxth	r2, r2
 801ab8e:	fb06 0002 	mla	r0, r6, r2, r0
 801ab92:	9e08      	ldr	r6, [sp, #32]
 801ab94:	1837      	adds	r7, r6, r0
 801ab96:	5c30      	ldrb	r0, [r6, r0]
 801ab98:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801ab9c:	eb04 0c08 	add.w	ip, r4, r8
 801aba0:	2b00      	cmp	r3, #0
 801aba2:	f000 80d3 	beq.w	801ad4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801aba6:	787e      	ldrb	r6, [r7, #1]
 801aba8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801abac:	4426      	add	r6, r4
 801abae:	2900      	cmp	r1, #0
 801abb0:	f000 80d4 	beq.w	801ad5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801abb4:	18b8      	adds	r0, r7, r2
 801abb6:	5cba      	ldrb	r2, [r7, r2]
 801abb8:	7840      	ldrb	r0, [r0, #1]
 801abba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801abbe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801abc2:	4422      	add	r2, r4
 801abc4:	4420      	add	r0, r4
 801abc6:	b29b      	uxth	r3, r3
 801abc8:	b289      	uxth	r1, r1
 801abca:	fb03 f901 	mul.w	r9, r3, r1
 801abce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801abd2:	011b      	lsls	r3, r3, #4
 801abd4:	b289      	uxth	r1, r1
 801abd6:	78b7      	ldrb	r7, [r6, #2]
 801abd8:	f89c a002 	ldrb.w	sl, [ip, #2]
 801abdc:	f89c c001 	ldrb.w	ip, [ip, #1]
 801abe0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801abe4:	eba3 0309 	sub.w	r3, r3, r9
 801abe8:	b29b      	uxth	r3, r3
 801abea:	ebae 0e01 	sub.w	lr, lr, r1
 801abee:	fa1f fe8e 	uxth.w	lr, lr
 801abf2:	435f      	muls	r7, r3
 801abf4:	fb0e 770a 	mla	r7, lr, sl, r7
 801abf8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801abfc:	fb01 770a 	mla	r7, r1, sl, r7
 801ac00:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ac04:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ac08:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ac0c:	f896 8000 	ldrb.w	r8, [r6]
 801ac10:	7876      	ldrb	r6, [r6, #1]
 801ac12:	fb03 f808 	mul.w	r8, r3, r8
 801ac16:	fb0e 8807 	mla	r8, lr, r7, r8
 801ac1a:	7817      	ldrb	r7, [r2, #0]
 801ac1c:	fb01 8807 	mla	r8, r1, r7, r8
 801ac20:	7807      	ldrb	r7, [r0, #0]
 801ac22:	fb09 8707 	mla	r7, r9, r7, r8
 801ac26:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801ac2a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ac2e:	ea47 070a 	orr.w	r7, r7, sl
 801ac32:	4373      	muls	r3, r6
 801ac34:	f892 a001 	ldrb.w	sl, [r2, #1]
 801ac38:	fb0e 330c 	mla	r3, lr, ip, r3
 801ac3c:	fb01 310a 	mla	r1, r1, sl, r3
 801ac40:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ac44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac46:	fb09 1a0a 	mla	sl, r9, sl, r1
 801ac4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac4e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac52:	ea47 070a 	orr.w	r7, r7, sl
 801ac56:	801f      	strh	r7, [r3, #0]
 801ac58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac5a:	3302      	adds	r3, #2
 801ac5c:	9309      	str	r3, [sp, #36]	; 0x24
 801ac5e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ac60:	449b      	add	fp, r3
 801ac62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ac64:	441d      	add	r5, r3
 801ac66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ac68:	3b01      	subs	r3, #1
 801ac6a:	930b      	str	r3, [sp, #44]	; 0x2c
 801ac6c:	e76f      	b.n	801ab4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ac6e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ac70:	449b      	add	fp, r3
 801ac72:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ac74:	441d      	add	r5, r3
 801ac76:	9b06      	ldr	r3, [sp, #24]
 801ac78:	3b01      	subs	r3, #1
 801ac7a:	9306      	str	r3, [sp, #24]
 801ac7c:	9b07      	ldr	r3, [sp, #28]
 801ac7e:	3302      	adds	r3, #2
 801ac80:	9307      	str	r3, [sp, #28]
 801ac82:	e744      	b.n	801ab0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801ac84:	d023      	beq.n	801acce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ac86:	9b06      	ldr	r3, [sp, #24]
 801ac88:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801ac8a:	3b01      	subs	r3, #1
 801ac8c:	fb00 b003 	mla	r0, r0, r3, fp
 801ac90:	1400      	asrs	r0, r0, #16
 801ac92:	f53f af58 	bmi.w	801ab46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ac96:	3901      	subs	r1, #1
 801ac98:	4288      	cmp	r0, r1
 801ac9a:	f6bf af54 	bge.w	801ab46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ac9e:	991c      	ldr	r1, [sp, #112]	; 0x70
 801aca0:	fb01 5303 	mla	r3, r1, r3, r5
 801aca4:	141b      	asrs	r3, r3, #16
 801aca6:	f53f af4e 	bmi.w	801ab46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801acaa:	3a01      	subs	r2, #1
 801acac:	4293      	cmp	r3, r2
 801acae:	f6bf af4a 	bge.w	801ab46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801acb2:	9b06      	ldr	r3, [sp, #24]
 801acb4:	9309      	str	r3, [sp, #36]	; 0x24
 801acb6:	9b07      	ldr	r3, [sp, #28]
 801acb8:	930b      	str	r3, [sp, #44]	; 0x2c
 801acba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801acbc:	2b00      	cmp	r3, #0
 801acbe:	dc70      	bgt.n	801ada2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801acc0:	9b06      	ldr	r3, [sp, #24]
 801acc2:	9a07      	ldr	r2, [sp, #28]
 801acc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801acc8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801accc:	9307      	str	r3, [sp, #28]
 801acce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801acd0:	2b00      	cmp	r3, #0
 801acd2:	f340 80eb 	ble.w	801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801acd6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801acda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801acde:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ace2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ace4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ace8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801acec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801acf0:	eef0 6a62 	vmov.f32	s13, s5
 801acf4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801acf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801acfc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad00:	ee16 ba90 	vmov	fp, s13
 801ad04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad08:	eef0 6a43 	vmov.f32	s13, s6
 801ad0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad10:	ee12 2a90 	vmov	r2, s5
 801ad14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad18:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad1c:	ee13 2a10 	vmov	r2, s6
 801ad20:	931b      	str	r3, [sp, #108]	; 0x6c
 801ad22:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ad24:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad28:	931c      	str	r3, [sp, #112]	; 0x70
 801ad2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ad2c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ad2e:	3b01      	subs	r3, #1
 801ad30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad34:	930a      	str	r3, [sp, #40]	; 0x28
 801ad36:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ad38:	bf08      	it	eq
 801ad3a:	4613      	moveq	r3, r2
 801ad3c:	ee16 5a90 	vmov	r5, s13
 801ad40:	9306      	str	r3, [sp, #24]
 801ad42:	eeb0 3a67 	vmov.f32	s6, s15
 801ad46:	eef0 2a47 	vmov.f32	s5, s14
 801ad4a:	e6d2      	b.n	801aaf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ad4c:	b149      	cbz	r1, 801ad62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ad4e:	5cba      	ldrb	r2, [r7, r2]
 801ad50:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ad54:	4422      	add	r2, r4
 801ad56:	4660      	mov	r0, ip
 801ad58:	4666      	mov	r6, ip
 801ad5a:	e734      	b.n	801abc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ad5c:	4660      	mov	r0, ip
 801ad5e:	4662      	mov	r2, ip
 801ad60:	e731      	b.n	801abc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ad62:	4660      	mov	r0, ip
 801ad64:	4662      	mov	r2, ip
 801ad66:	e7f7      	b.n	801ad58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801ad68:	f110 0c01 	adds.w	ip, r0, #1
 801ad6c:	f53f af74 	bmi.w	801ac58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad70:	4562      	cmp	r2, ip
 801ad72:	f6ff af71 	blt.w	801ac58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad76:	f116 0c01 	adds.w	ip, r6, #1
 801ad7a:	f53f af6d 	bmi.w	801ac58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad7e:	4567      	cmp	r7, ip
 801ad80:	f6ff af6a 	blt.w	801ac58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad84:	b23f      	sxth	r7, r7
 801ad86:	b212      	sxth	r2, r2
 801ad88:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ad8c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ad90:	9200      	str	r2, [sp, #0]
 801ad92:	9701      	str	r7, [sp, #4]
 801ad94:	4623      	mov	r3, r4
 801ad96:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ad9a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ad9c:	f7ff fde6 	bl	801a96c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801ada0:	e75a      	b.n	801ac58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ada2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ada4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ada8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801adac:	1428      	asrs	r0, r5, #16
 801adae:	fb02 6000 	mla	r0, r2, r0, r6
 801adb2:	9e08      	ldr	r6, [sp, #32]
 801adb4:	f816 8000 	ldrb.w	r8, [r6, r0]
 801adb8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801adbc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801adc0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801adc4:	1837      	adds	r7, r6, r0
 801adc6:	eb04 0c08 	add.w	ip, r4, r8
 801adca:	2b00      	cmp	r3, #0
 801adcc:	d060      	beq.n	801ae90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801adce:	787e      	ldrb	r6, [r7, #1]
 801add0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801add4:	4426      	add	r6, r4
 801add6:	2900      	cmp	r1, #0
 801add8:	d062      	beq.n	801aea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801adda:	18b8      	adds	r0, r7, r2
 801addc:	5cba      	ldrb	r2, [r7, r2]
 801adde:	7840      	ldrb	r0, [r0, #1]
 801ade0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ade4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ade8:	4422      	add	r2, r4
 801adea:	4420      	add	r0, r4
 801adec:	b29b      	uxth	r3, r3
 801adee:	b289      	uxth	r1, r1
 801adf0:	fb03 f901 	mul.w	r9, r3, r1
 801adf4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801adf8:	011b      	lsls	r3, r3, #4
 801adfa:	b289      	uxth	r1, r1
 801adfc:	78b7      	ldrb	r7, [r6, #2]
 801adfe:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ae02:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ae06:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ae0a:	eba3 0309 	sub.w	r3, r3, r9
 801ae0e:	b29b      	uxth	r3, r3
 801ae10:	ebae 0e01 	sub.w	lr, lr, r1
 801ae14:	fa1f fe8e 	uxth.w	lr, lr
 801ae18:	435f      	muls	r7, r3
 801ae1a:	fb0e 770a 	mla	r7, lr, sl, r7
 801ae1e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ae22:	fb01 770a 	mla	r7, r1, sl, r7
 801ae26:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ae2a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ae2e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ae32:	f896 8000 	ldrb.w	r8, [r6]
 801ae36:	7876      	ldrb	r6, [r6, #1]
 801ae38:	fb03 f808 	mul.w	r8, r3, r8
 801ae3c:	fb0e 8807 	mla	r8, lr, r7, r8
 801ae40:	7817      	ldrb	r7, [r2, #0]
 801ae42:	fb01 8807 	mla	r8, r1, r7, r8
 801ae46:	7807      	ldrb	r7, [r0, #0]
 801ae48:	fb09 8707 	mla	r7, r9, r7, r8
 801ae4c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801ae50:	4373      	muls	r3, r6
 801ae52:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ae56:	7856      	ldrb	r6, [r2, #1]
 801ae58:	ea47 070a 	orr.w	r7, r7, sl
 801ae5c:	fb0e 330c 	mla	r3, lr, ip, r3
 801ae60:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ae64:	fb01 3306 	mla	r3, r1, r6, r3
 801ae68:	fb09 3a0a 	mla	sl, r9, sl, r3
 801ae6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ae72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae76:	ea47 070a 	orr.w	r7, r7, sl
 801ae7a:	f823 7b02 	strh.w	r7, [r3], #2
 801ae7e:	930b      	str	r3, [sp, #44]	; 0x2c
 801ae80:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ae82:	449b      	add	fp, r3
 801ae84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ae86:	441d      	add	r5, r3
 801ae88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae8a:	3b01      	subs	r3, #1
 801ae8c:	9309      	str	r3, [sp, #36]	; 0x24
 801ae8e:	e714      	b.n	801acba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801ae90:	b149      	cbz	r1, 801aea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801ae92:	5cba      	ldrb	r2, [r7, r2]
 801ae94:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ae98:	4422      	add	r2, r4
 801ae9a:	4660      	mov	r0, ip
 801ae9c:	4666      	mov	r6, ip
 801ae9e:	e7a5      	b.n	801adec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801aea0:	4660      	mov	r0, ip
 801aea2:	4662      	mov	r2, ip
 801aea4:	e7a2      	b.n	801adec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801aea6:	4660      	mov	r0, ip
 801aea8:	4662      	mov	r2, ip
 801aeaa:	e7f7      	b.n	801ae9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801aeac:	b00f      	add	sp, #60	; 0x3c
 801aeae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aeb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801aeb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aeb6:	b085      	sub	sp, #20
 801aeb8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801aebc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801aec0:	9102      	str	r1, [sp, #8]
 801aec2:	2c00      	cmp	r4, #0
 801aec4:	fb04 710c 	mla	r1, r4, ip, r7
 801aec8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801aecc:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801aed0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801aed4:	eb02 0e01 	add.w	lr, r2, r1
 801aed8:	f2c0 8122 	blt.w	801b120 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aedc:	45a0      	cmp	r8, r4
 801aede:	f340 811f 	ble.w	801b120 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aee2:	2f00      	cmp	r7, #0
 801aee4:	f2c0 811a 	blt.w	801b11c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aee8:	45bc      	cmp	ip, r7
 801aeea:	f340 8117 	ble.w	801b11c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aeee:	5c52      	ldrb	r2, [r2, r1]
 801aef0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801aef4:	1c7a      	adds	r2, r7, #1
 801aef6:	f100 8116 	bmi.w	801b126 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801aefa:	4594      	cmp	ip, r2
 801aefc:	f340 8113 	ble.w	801b126 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801af00:	2e00      	cmp	r6, #0
 801af02:	f000 8112 	beq.w	801b12a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801af06:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801af0a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801af0e:	3401      	adds	r4, #1
 801af10:	f100 810f 	bmi.w	801b132 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801af14:	45a0      	cmp	r8, r4
 801af16:	f340 810c 	ble.w	801b132 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801af1a:	2800      	cmp	r0, #0
 801af1c:	f000 810c 	beq.w	801b138 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801af20:	2f00      	cmp	r7, #0
 801af22:	f2c0 8104 	blt.w	801b12e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801af26:	45bc      	cmp	ip, r7
 801af28:	f340 8101 	ble.w	801b12e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801af2c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801af30:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801af34:	3701      	adds	r7, #1
 801af36:	f100 8102 	bmi.w	801b13e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801af3a:	45bc      	cmp	ip, r7
 801af3c:	f340 80ff 	ble.w	801b13e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801af40:	2e00      	cmp	r6, #0
 801af42:	f000 80fe 	beq.w	801b142 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801af46:	44f4      	add	ip, lr
 801af48:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801af4c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801af50:	b2b6      	uxth	r6, r6
 801af52:	b280      	uxth	r0, r0
 801af54:	fb00 fe06 	mul.w	lr, r0, r6
 801af58:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801af5c:	0136      	lsls	r6, r6, #4
 801af5e:	eba6 070e 	sub.w	r7, r6, lr
 801af62:	b280      	uxth	r0, r0
 801af64:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801af68:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801af6c:	b2bf      	uxth	r7, r7
 801af6e:	1a1b      	subs	r3, r3, r0
 801af70:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801af74:	b29b      	uxth	r3, r3
 801af76:	fb0a f607 	mul.w	r6, sl, r7
 801af7a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801af7e:	fb0b 6603 	mla	r6, fp, r3, r6
 801af82:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801af86:	fb00 6609 	mla	r6, r0, r9, r6
 801af8a:	fb0e 6608 	mla	r6, lr, r8, r6
 801af8e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801af92:	9600      	str	r6, [sp, #0]
 801af94:	2e00      	cmp	r6, #0
 801af96:	f000 80be 	beq.w	801b116 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801af9a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801af9e:	fb0b fc0c 	mul.w	ip, fp, ip
 801afa2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801afa6:	fb0b f505 	mul.w	r5, fp, r5
 801afaa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801afae:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801afb2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801afb6:	44dc      	add	ip, fp
 801afb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801afbc:	9501      	str	r5, [sp, #4]
 801afbe:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801afc2:	9503      	str	r5, [sp, #12]
 801afc4:	9d01      	ldr	r5, [sp, #4]
 801afc6:	9e02      	ldr	r6, [sp, #8]
 801afc8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801afcc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801afd0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801afd4:	fb0a fc0c 	mul.w	ip, sl, ip
 801afd8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801afdc:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801afe0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801afe4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801afe8:	4465      	add	r5, ip
 801afea:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801afee:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801aff2:	fb09 fc0c 	mul.w	ip, r9, ip
 801aff6:	fb09 f904 	mul.w	r9, r9, r4
 801affa:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801affe:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b002:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801b006:	fb08 f404 	mul.w	r4, r8, r4
 801b00a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b00e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b012:	fb08 f802 	mul.w	r8, r8, r2
 801b016:	fb0a fa01 	mul.w	sl, sl, r1
 801b01a:	0a22      	lsrs	r2, r4, #8
 801b01c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801b020:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b024:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801b028:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b02c:	4414      	add	r4, r2
 801b02e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b032:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801b036:	0a2d      	lsrs	r5, r5, #8
 801b038:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b03c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b040:	9a03      	ldr	r2, [sp, #12]
 801b042:	8836      	ldrh	r6, [r6, #0]
 801b044:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b048:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b04c:	437d      	muls	r5, r7
 801b04e:	4461      	add	r1, ip
 801b050:	0a24      	lsrs	r4, r4, #8
 801b052:	fb02 5503 	mla	r5, r2, r3, r5
 801b056:	0a09      	lsrs	r1, r1, #8
 801b058:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b05c:	fb04 540e 	mla	r4, r4, lr, r5
 801b060:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b064:	fb01 4100 	mla	r1, r1, r0, r4
 801b068:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b06c:	0a09      	lsrs	r1, r1, #8
 801b06e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b072:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801b076:	fb07 f70a 	mul.w	r7, r7, sl
 801b07a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b07e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801b082:	fb03 7101 	mla	r1, r3, r1, r7
 801b086:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b08a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b08e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b092:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801b096:	fb00 e101 	mla	r1, r0, r1, lr
 801b09a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801b09e:	9a00      	ldr	r2, [sp, #0]
 801b0a0:	b287      	uxth	r7, r0
 801b0a2:	437a      	muls	r2, r7
 801b0a4:	0a09      	lsrs	r1, r1, #8
 801b0a6:	1c53      	adds	r3, r2, #1
 801b0a8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b0ac:	4321      	orrs	r1, r4
 801b0ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b0b2:	1235      	asrs	r5, r6, #8
 801b0b4:	0c0a      	lsrs	r2, r1, #16
 801b0b6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b0ba:	b2db      	uxtb	r3, r3
 801b0bc:	fb12 f207 	smulbb	r2, r2, r7
 801b0c0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b0c4:	fb05 2503 	mla	r5, r5, r3, r2
 801b0c8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b0cc:	10f2      	asrs	r2, r6, #3
 801b0ce:	b2c8      	uxtb	r0, r1
 801b0d0:	00f6      	lsls	r6, r6, #3
 801b0d2:	fb14 f407 	smulbb	r4, r4, r7
 801b0d6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b0da:	b2f6      	uxtb	r6, r6
 801b0dc:	fb10 f007 	smulbb	r0, r0, r7
 801b0e0:	fb02 4203 	mla	r2, r2, r3, r4
 801b0e4:	b2ad      	uxth	r5, r5
 801b0e6:	fb06 0303 	mla	r3, r6, r3, r0
 801b0ea:	b299      	uxth	r1, r3
 801b0ec:	b294      	uxth	r4, r2
 801b0ee:	1c6b      	adds	r3, r5, #1
 801b0f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b0f4:	1c62      	adds	r2, r4, #1
 801b0f6:	1c4b      	adds	r3, r1, #1
 801b0f8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b0fc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b100:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b104:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b108:	0952      	lsrs	r2, r2, #5
 801b10a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b10e:	432b      	orrs	r3, r5
 801b110:	4313      	orrs	r3, r2
 801b112:	9a02      	ldr	r2, [sp, #8]
 801b114:	8013      	strh	r3, [r2, #0]
 801b116:	b005      	add	sp, #20
 801b118:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b11c:	2500      	movs	r5, #0
 801b11e:	e6e9      	b.n	801aef4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b120:	2100      	movs	r1, #0
 801b122:	460d      	mov	r5, r1
 801b124:	e6f3      	b.n	801af0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b126:	2100      	movs	r1, #0
 801b128:	e6f1      	b.n	801af0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b12a:	4631      	mov	r1, r6
 801b12c:	e6ef      	b.n	801af0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b12e:	2400      	movs	r4, #0
 801b130:	e700      	b.n	801af34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b132:	2200      	movs	r2, #0
 801b134:	4614      	mov	r4, r2
 801b136:	e70b      	b.n	801af50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b138:	4602      	mov	r2, r0
 801b13a:	4604      	mov	r4, r0
 801b13c:	e708      	b.n	801af50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b13e:	2200      	movs	r2, #0
 801b140:	e706      	b.n	801af50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b142:	4632      	mov	r2, r6
 801b144:	e704      	b.n	801af50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b146:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b14a:	b09f      	sub	sp, #124	; 0x7c
 801b14c:	921b      	str	r2, [sp, #108]	; 0x6c
 801b14e:	9309      	str	r3, [sp, #36]	; 0x24
 801b150:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801b152:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801b156:	931c      	str	r3, [sp, #112]	; 0x70
 801b158:	9119      	str	r1, [sp, #100]	; 0x64
 801b15a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801b15e:	901d      	str	r0, [sp, #116]	; 0x74
 801b160:	6850      	ldr	r0, [r2, #4]
 801b162:	6812      	ldr	r2, [r2, #0]
 801b164:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801b166:	fb00 1303 	mla	r3, r0, r3, r1
 801b16a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b16e:	930c      	str	r3, [sp, #48]	; 0x30
 801b170:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b172:	681b      	ldr	r3, [r3, #0]
 801b174:	9312      	str	r3, [sp, #72]	; 0x48
 801b176:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b178:	685e      	ldr	r6, [r3, #4]
 801b17a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801b17e:	930d      	str	r3, [sp, #52]	; 0x34
 801b180:	3604      	adds	r6, #4
 801b182:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b184:	2b00      	cmp	r3, #0
 801b186:	dc03      	bgt.n	801b190 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b188:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b18a:	2b00      	cmp	r3, #0
 801b18c:	f340 8388 	ble.w	801b8a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b190:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b192:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b196:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b19a:	1e48      	subs	r0, r1, #1
 801b19c:	1e57      	subs	r7, r2, #1
 801b19e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b1a0:	2b00      	cmp	r3, #0
 801b1a2:	f340 8195 	ble.w	801b4d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b1a6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b1a8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b1ac:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b1b0:	d406      	bmi.n	801b1c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b1b2:	4584      	cmp	ip, r0
 801b1b4:	da04      	bge.n	801b1c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b1b6:	2b00      	cmp	r3, #0
 801b1b8:	db02      	blt.n	801b1c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b1ba:	42bb      	cmp	r3, r7
 801b1bc:	f2c0 8189 	blt.w	801b4d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b1c0:	f11c 0c01 	adds.w	ip, ip, #1
 801b1c4:	f100 8177 	bmi.w	801b4b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b1c8:	4561      	cmp	r1, ip
 801b1ca:	f2c0 8174 	blt.w	801b4b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b1ce:	3301      	adds	r3, #1
 801b1d0:	f100 8171 	bmi.w	801b4b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b1d4:	429a      	cmp	r2, r3
 801b1d6:	f2c0 816e 	blt.w	801b4b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b1da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b1dc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b1de:	931a      	str	r3, [sp, #104]	; 0x68
 801b1e0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b1e2:	2b00      	cmp	r3, #0
 801b1e4:	f340 8193 	ble.w	801b50e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b1e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b1ea:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b1ee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b1f0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b1f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b1f6:	141b      	asrs	r3, r3, #16
 801b1f8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b1fc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b200:	f100 81d6 	bmi.w	801b5b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b204:	f100 38ff 	add.w	r8, r0, #4294967295
 801b208:	4543      	cmp	r3, r8
 801b20a:	f280 81d1 	bge.w	801b5b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b20e:	f1bc 0f00 	cmp.w	ip, #0
 801b212:	f2c0 81cd 	blt.w	801b5b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b216:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b21a:	45c4      	cmp	ip, r8
 801b21c:	f280 81c8 	bge.w	801b5b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b220:	b200      	sxth	r0, r0
 801b222:	fb0c 3300 	mla	r3, ip, r0, r3
 801b226:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b228:	eb04 0803 	add.w	r8, r4, r3
 801b22c:	5ce3      	ldrb	r3, [r4, r3]
 801b22e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b232:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b236:	2a00      	cmp	r2, #0
 801b238:	f000 81af 	beq.w	801b59a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b23c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b240:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b244:	940e      	str	r4, [sp, #56]	; 0x38
 801b246:	0e24      	lsrs	r4, r4, #24
 801b248:	9415      	str	r4, [sp, #84]	; 0x54
 801b24a:	b179      	cbz	r1, 801b26c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b24c:	eb08 0c00 	add.w	ip, r8, r0
 801b250:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b254:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b258:	900a      	str	r0, [sp, #40]	; 0x28
 801b25a:	0e00      	lsrs	r0, r0, #24
 801b25c:	9013      	str	r0, [sp, #76]	; 0x4c
 801b25e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b262:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b266:	900f      	str	r0, [sp, #60]	; 0x3c
 801b268:	0e00      	lsrs	r0, r0, #24
 801b26a:	9016      	str	r0, [sp, #88]	; 0x58
 801b26c:	b292      	uxth	r2, r2
 801b26e:	b289      	uxth	r1, r1
 801b270:	fb02 f901 	mul.w	r9, r2, r1
 801b274:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b278:	0112      	lsls	r2, r2, #4
 801b27a:	eba2 0809 	sub.w	r8, r2, r9
 801b27e:	b289      	uxth	r1, r1
 801b280:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b284:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b286:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b288:	fa1f f888 	uxth.w	r8, r8
 801b28c:	1a52      	subs	r2, r2, r1
 801b28e:	b292      	uxth	r2, r2
 801b290:	fb08 f000 	mul.w	r0, r8, r0
 801b294:	fb02 000e 	mla	r0, r2, lr, r0
 801b298:	fb01 0004 	mla	r0, r1, r4, r0
 801b29c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b29e:	fb09 0004 	mla	r0, r9, r4, r0
 801b2a2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b2a6:	2800      	cmp	r0, #0
 801b2a8:	f000 80fa 	beq.w	801b4a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b2ac:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b2b0:	d01b      	beq.n	801b2ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b2b2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b2b6:	fb0e fa0a 	mul.w	sl, lr, sl
 801b2ba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b2be:	fb0e fe03 	mul.w	lr, lr, r3
 801b2c2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b2c6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b2ca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b2ce:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b2d2:	4453      	add	r3, sl
 801b2d4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b2d8:	0a1b      	lsrs	r3, r3, #8
 801b2da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b2de:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b2e2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b2e6:	ea43 030c 	orr.w	r3, r3, ip
 801b2ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b2ec:	2cff      	cmp	r4, #255	; 0xff
 801b2ee:	d021      	beq.n	801b334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b2f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b2f2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b2f6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b2f8:	fb04 fb0b 	mul.w	fp, r4, fp
 801b2fc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b2fe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b302:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b304:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b308:	fb04 fa0a 	mul.w	sl, r4, sl
 801b30c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b310:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b314:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b318:	44de      	add	lr, fp
 801b31a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b31e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b322:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b326:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b32a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b32e:	ea4e 040a 	orr.w	r4, lr, sl
 801b332:	940e      	str	r4, [sp, #56]	; 0x38
 801b334:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b336:	2cff      	cmp	r4, #255	; 0xff
 801b338:	d021      	beq.n	801b37e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b33a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b33c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b340:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b342:	fb04 fb0b 	mul.w	fp, r4, fp
 801b346:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b348:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b34c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b34e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b352:	fb04 fa0a 	mul.w	sl, r4, sl
 801b356:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b35a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b35e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b362:	44de      	add	lr, fp
 801b364:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b368:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b36c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b370:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b374:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b378:	ea4e 040a 	orr.w	r4, lr, sl
 801b37c:	940a      	str	r4, [sp, #40]	; 0x28
 801b37e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b380:	2cff      	cmp	r4, #255	; 0xff
 801b382:	d021      	beq.n	801b3c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b384:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b386:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b38a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b38c:	fb04 fb0b 	mul.w	fp, r4, fp
 801b390:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b392:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b396:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b398:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b39c:	fb04 fa0a 	mul.w	sl, r4, sl
 801b3a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b3a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b3a8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b3ac:	44de      	add	lr, fp
 801b3ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b3b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b3b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b3ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b3be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b3c2:	ea4e 040a 	orr.w	r4, lr, sl
 801b3c6:	940f      	str	r4, [sp, #60]	; 0x3c
 801b3c8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b3ca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b3ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b3d0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b3d4:	fb08 fc0c 	mul.w	ip, r8, ip
 801b3d8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b3dc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b3e0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b3e2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b3e6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b3ea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b3ec:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b3f0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b3f4:	fb08 f80e 	mul.w	r8, r8, lr
 801b3f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b3fc:	fb02 8303 	mla	r3, r2, r3, r8
 801b400:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b402:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b404:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b408:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b40a:	fb01 330a 	mla	r3, r1, sl, r3
 801b40e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801b412:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b414:	fb09 3901 	mla	r9, r9, r1, r3
 801b418:	4342      	muls	r2, r0
 801b41a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b41e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b422:	883b      	ldrh	r3, [r7, #0]
 801b424:	1c50      	adds	r0, r2, #1
 801b426:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b42a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b42e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b432:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b436:	1219      	asrs	r1, r3, #8
 801b438:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b43c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b440:	b2c0      	uxtb	r0, r0
 801b442:	fb12 f204 	smulbb	r2, r2, r4
 801b446:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b44a:	fb01 2100 	mla	r1, r1, r0, r2
 801b44e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b452:	10da      	asrs	r2, r3, #3
 801b454:	fa5f fc8c 	uxtb.w	ip, ip
 801b458:	00db      	lsls	r3, r3, #3
 801b45a:	fb1c fc04 	smulbb	ip, ip, r4
 801b45e:	b2db      	uxtb	r3, r3
 801b460:	b289      	uxth	r1, r1
 801b462:	fb03 c300 	mla	r3, r3, r0, ip
 801b466:	fa1f fc83 	uxth.w	ip, r3
 801b46a:	1c4b      	adds	r3, r1, #1
 801b46c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b470:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b474:	fb1e fe04 	smulbb	lr, lr, r4
 801b478:	f10c 0301 	add.w	r3, ip, #1
 801b47c:	fb02 e200 	mla	r2, r2, r0, lr
 801b480:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b484:	b292      	uxth	r2, r2
 801b486:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b48a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b48e:	430b      	orrs	r3, r1
 801b490:	1c51      	adds	r1, r2, #1
 801b492:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b496:	0952      	lsrs	r2, r2, #5
 801b498:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b49c:	4313      	orrs	r3, r2
 801b49e:	803b      	strh	r3, [r7, #0]
 801b4a0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b4a2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b4a4:	441a      	add	r2, r3
 801b4a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b4a8:	9229      	str	r2, [sp, #164]	; 0xa4
 801b4aa:	441d      	add	r5, r3
 801b4ac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b4ae:	3b01      	subs	r3, #1
 801b4b0:	3702      	adds	r7, #2
 801b4b2:	931a      	str	r3, [sp, #104]	; 0x68
 801b4b4:	e694      	b.n	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b4b6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b4b8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b4ba:	441c      	add	r4, r3
 801b4bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b4be:	9429      	str	r4, [sp, #164]	; 0xa4
 801b4c0:	441d      	add	r5, r3
 801b4c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4c4:	3b01      	subs	r3, #1
 801b4c6:	9309      	str	r3, [sp, #36]	; 0x24
 801b4c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b4ca:	3302      	adds	r3, #2
 801b4cc:	930c      	str	r3, [sp, #48]	; 0x30
 801b4ce:	e666      	b.n	801b19e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b4d0:	d024      	beq.n	801b51c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b4d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4d4:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b4d6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b4d8:	3b01      	subs	r3, #1
 801b4da:	fb00 4003 	mla	r0, r0, r3, r4
 801b4de:	1400      	asrs	r0, r0, #16
 801b4e0:	f53f ae7b 	bmi.w	801b1da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b4e4:	3901      	subs	r1, #1
 801b4e6:	4288      	cmp	r0, r1
 801b4e8:	f6bf ae77 	bge.w	801b1da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b4ec:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b4ee:	fb01 5303 	mla	r3, r1, r3, r5
 801b4f2:	141b      	asrs	r3, r3, #16
 801b4f4:	f53f ae71 	bmi.w	801b1da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b4f8:	3a01      	subs	r2, #1
 801b4fa:	4293      	cmp	r3, r2
 801b4fc:	f6bf ae6d 	bge.w	801b1da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b500:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b504:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b508:	f1bb 0f00 	cmp.w	fp, #0
 801b50c:	dc70      	bgt.n	801b5f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b50e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b510:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b514:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b516:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b51a:	930c      	str	r3, [sp, #48]	; 0x30
 801b51c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b51e:	2b00      	cmp	r3, #0
 801b520:	f340 81be 	ble.w	801b8a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b524:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b528:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b52c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b530:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b532:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b536:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b53a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b53e:	eef0 6a62 	vmov.f32	s13, s5
 801b542:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b546:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b54a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b54e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b552:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b556:	eef0 6a43 	vmov.f32	s13, s6
 801b55a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b55e:	ee12 2a90 	vmov	r2, s5
 801b562:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b566:	fb92 f3f3 	sdiv	r3, r2, r3
 801b56a:	ee13 2a10 	vmov	r2, s6
 801b56e:	932b      	str	r3, [sp, #172]	; 0xac
 801b570:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b572:	fb92 f3f3 	sdiv	r3, r2, r3
 801b576:	932c      	str	r3, [sp, #176]	; 0xb0
 801b578:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b57a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b57c:	3b01      	subs	r3, #1
 801b57e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b582:	9319      	str	r3, [sp, #100]	; 0x64
 801b584:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b586:	bf08      	it	eq
 801b588:	4613      	moveq	r3, r2
 801b58a:	ee16 5a90 	vmov	r5, s13
 801b58e:	9309      	str	r3, [sp, #36]	; 0x24
 801b590:	eeb0 3a67 	vmov.f32	s6, s15
 801b594:	eef0 2a47 	vmov.f32	s5, s14
 801b598:	e5f3      	b.n	801b182 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b59a:	2900      	cmp	r1, #0
 801b59c:	f43f ae66 	beq.w	801b26c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b5a0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b5a4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b5a8:	900a      	str	r0, [sp, #40]	; 0x28
 801b5aa:	0e00      	lsrs	r0, r0, #24
 801b5ac:	9013      	str	r0, [sp, #76]	; 0x4c
 801b5ae:	e65d      	b.n	801b26c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b5b0:	f113 0801 	adds.w	r8, r3, #1
 801b5b4:	f53f af74 	bmi.w	801b4a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b5b8:	4540      	cmp	r0, r8
 801b5ba:	f6ff af71 	blt.w	801b4a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b5be:	f11c 0801 	adds.w	r8, ip, #1
 801b5c2:	f53f af6d 	bmi.w	801b4a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b5c6:	45c6      	cmp	lr, r8
 801b5c8:	f6ff af6a 	blt.w	801b4a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b5cc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b5ce:	9302      	str	r3, [sp, #8]
 801b5d0:	b200      	sxth	r0, r0
 801b5d2:	fa0f f38e 	sxth.w	r3, lr
 801b5d6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b5da:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b5de:	9301      	str	r3, [sp, #4]
 801b5e0:	9000      	str	r0, [sp, #0]
 801b5e2:	4633      	mov	r3, r6
 801b5e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b5e6:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b5e8:	4639      	mov	r1, r7
 801b5ea:	f7ff fc62 	bl	801aeb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b5ee:	e757      	b.n	801b4a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b5f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b5f2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b5f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b5f8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b5fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b5fe:	1427      	asrs	r7, r4, #16
 801b600:	142b      	asrs	r3, r5, #16
 801b602:	fb01 7303 	mla	r3, r1, r3, r7
 801b606:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b608:	18e7      	adds	r7, r4, r3
 801b60a:	5ce3      	ldrb	r3, [r4, r3]
 801b60c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b610:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b614:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b618:	2a00      	cmp	r2, #0
 801b61a:	f000 8137 	beq.w	801b88c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b61e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b622:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b626:	9410      	str	r4, [sp, #64]	; 0x40
 801b628:	0e24      	lsrs	r4, r4, #24
 801b62a:	9417      	str	r4, [sp, #92]	; 0x5c
 801b62c:	b170      	cbz	r0, 801b64c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b62e:	eb07 0e01 	add.w	lr, r7, r1
 801b632:	5c79      	ldrb	r1, [r7, r1]
 801b634:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b638:	910b      	str	r1, [sp, #44]	; 0x2c
 801b63a:	0e09      	lsrs	r1, r1, #24
 801b63c:	9114      	str	r1, [sp, #80]	; 0x50
 801b63e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b642:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b646:	9111      	str	r1, [sp, #68]	; 0x44
 801b648:	0e09      	lsrs	r1, r1, #24
 801b64a:	9118      	str	r1, [sp, #96]	; 0x60
 801b64c:	b292      	uxth	r2, r2
 801b64e:	b280      	uxth	r0, r0
 801b650:	fb02 f800 	mul.w	r8, r2, r0
 801b654:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b658:	0112      	lsls	r2, r2, #4
 801b65a:	eba2 0e08 	sub.w	lr, r2, r8
 801b65e:	b280      	uxth	r0, r0
 801b660:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b664:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b666:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b668:	fa1f fe8e 	uxth.w	lr, lr
 801b66c:	1a12      	subs	r2, r2, r0
 801b66e:	b292      	uxth	r2, r2
 801b670:	fb0e f101 	mul.w	r1, lr, r1
 801b674:	fb02 110c 	mla	r1, r2, ip, r1
 801b678:	fb00 1104 	mla	r1, r0, r4, r1
 801b67c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b67e:	fb08 1104 	mla	r1, r8, r4, r1
 801b682:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b686:	2900      	cmp	r1, #0
 801b688:	f000 80f5 	beq.w	801b876 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b68c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b690:	d019      	beq.n	801b6c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b692:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b696:	fb0c fa0a 	mul.w	sl, ip, sl
 801b69a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b69e:	fb0c fc03 	mul.w	ip, ip, r3
 801b6a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b6a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b6aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b6ae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b6b2:	4453      	add	r3, sl
 801b6b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b6b8:	0a1b      	lsrs	r3, r3, #8
 801b6ba:	0a3f      	lsrs	r7, r7, #8
 801b6bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b6c0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b6c4:	433b      	orrs	r3, r7
 801b6c6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b6c8:	2cff      	cmp	r4, #255	; 0xff
 801b6ca:	d020      	beq.n	801b70e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b6cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b6ce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b6d2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b6d4:	4367      	muls	r7, r4
 801b6d6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b6d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b6dc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b6de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b6e2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b6e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b6ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b6ee:	44bc      	add	ip, r7
 801b6f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b6f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b6f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b6fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b700:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b704:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b708:	ea4c 040a 	orr.w	r4, ip, sl
 801b70c:	9410      	str	r4, [sp, #64]	; 0x40
 801b70e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b710:	2cff      	cmp	r4, #255	; 0xff
 801b712:	d020      	beq.n	801b756 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b714:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b716:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b71a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b71c:	4367      	muls	r7, r4
 801b71e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b720:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b724:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b726:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b72a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b72e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b732:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b736:	44bc      	add	ip, r7
 801b738:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b73c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b740:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b744:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b748:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b74c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b750:	ea4c 040a 	orr.w	r4, ip, sl
 801b754:	940b      	str	r4, [sp, #44]	; 0x2c
 801b756:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b758:	2cff      	cmp	r4, #255	; 0xff
 801b75a:	d020      	beq.n	801b79e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b75c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b75e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b762:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b764:	4367      	muls	r7, r4
 801b766:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b768:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b76c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b76e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b772:	fb04 fa0a 	mul.w	sl, r4, sl
 801b776:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b77a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b77e:	44bc      	add	ip, r7
 801b780:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b784:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b788:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b78c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b790:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b794:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b798:	ea4c 040a 	orr.w	r4, ip, sl
 801b79c:	9411      	str	r4, [sp, #68]	; 0x44
 801b79e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b7a0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b7a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b7a6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b7aa:	fb0e f707 	mul.w	r7, lr, r7
 801b7ae:	fb02 770c 	mla	r7, r2, ip, r7
 801b7b2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b7b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b7b8:	fb00 770c 	mla	r7, r0, ip, r7
 801b7bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b7c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b7c2:	fb08 770c 	mla	r7, r8, ip, r7
 801b7c6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b7ca:	fb0e fe0c 	mul.w	lr, lr, ip
 801b7ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b7d2:	fb02 e303 	mla	r3, r2, r3, lr
 801b7d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b7d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b7da:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b7de:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b7e0:	fb00 330a 	mla	r3, r0, sl, r3
 801b7e4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b7e8:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b7ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b7ee:	f8b9 0000 	ldrh.w	r0, [r9]
 801b7f2:	434b      	muls	r3, r1
 801b7f4:	0a3f      	lsrs	r7, r7, #8
 801b7f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7fa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b7fe:	1c59      	adds	r1, r3, #1
 801b800:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b804:	ea47 070c 	orr.w	r7, r7, ip
 801b808:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b80c:	1202      	asrs	r2, r0, #8
 801b80e:	0c3b      	lsrs	r3, r7, #16
 801b810:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b814:	b2c9      	uxtb	r1, r1
 801b816:	fb13 f304 	smulbb	r3, r3, r4
 801b81a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b81e:	fb02 3201 	mla	r2, r2, r1, r3
 801b822:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b826:	10c3      	asrs	r3, r0, #3
 801b828:	b2ff      	uxtb	r7, r7
 801b82a:	00c0      	lsls	r0, r0, #3
 801b82c:	b292      	uxth	r2, r2
 801b82e:	fb1c fc04 	smulbb	ip, ip, r4
 801b832:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b836:	b2c0      	uxtb	r0, r0
 801b838:	fb17 f704 	smulbb	r7, r7, r4
 801b83c:	fb03 c301 	mla	r3, r3, r1, ip
 801b840:	fb00 7001 	mla	r0, r0, r1, r7
 801b844:	f102 0c01 	add.w	ip, r2, #1
 801b848:	b280      	uxth	r0, r0
 801b84a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b84e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b852:	1c42      	adds	r2, r0, #1
 801b854:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b858:	b29b      	uxth	r3, r3
 801b85a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b85e:	ea42 020c 	orr.w	r2, r2, ip
 801b862:	f103 0c01 	add.w	ip, r3, #1
 801b866:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b86a:	095b      	lsrs	r3, r3, #5
 801b86c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b870:	431a      	orrs	r2, r3
 801b872:	f8a9 2000 	strh.w	r2, [r9]
 801b876:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b878:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b87a:	441a      	add	r2, r3
 801b87c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b87e:	9229      	str	r2, [sp, #164]	; 0xa4
 801b880:	f109 0902 	add.w	r9, r9, #2
 801b884:	441d      	add	r5, r3
 801b886:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b88a:	e63d      	b.n	801b508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b88c:	2800      	cmp	r0, #0
 801b88e:	f43f aedd 	beq.w	801b64c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b892:	5c79      	ldrb	r1, [r7, r1]
 801b894:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b898:	910b      	str	r1, [sp, #44]	; 0x2c
 801b89a:	0e09      	lsrs	r1, r1, #24
 801b89c:	9114      	str	r1, [sp, #80]	; 0x50
 801b89e:	e6d5      	b.n	801b64c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b8a0:	b01f      	add	sp, #124	; 0x7c
 801b8a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b8a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b8a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8aa:	b089      	sub	sp, #36	; 0x24
 801b8ac:	9101      	str	r1, [sp, #4]
 801b8ae:	9801      	ldr	r0, [sp, #4]
 801b8b0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b8b4:	8800      	ldrh	r0, [r0, #0]
 801b8b6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b8ba:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b8be:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b8c2:	1206      	asrs	r6, r0, #8
 801b8c4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b8c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b8cc:	9602      	str	r6, [sp, #8]
 801b8ce:	10c6      	asrs	r6, r0, #3
 801b8d0:	00c0      	lsls	r0, r0, #3
 801b8d2:	b2c0      	uxtb	r0, r0
 801b8d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b8d8:	9004      	str	r0, [sp, #16]
 801b8da:	2f00      	cmp	r7, #0
 801b8dc:	fb07 100c 	mla	r0, r7, ip, r1
 801b8e0:	9603      	str	r6, [sp, #12]
 801b8e2:	eb02 0e00 	add.w	lr, r2, r0
 801b8e6:	f2c0 810a 	blt.w	801bafe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b8ea:	45b8      	cmp	r8, r7
 801b8ec:	f340 8107 	ble.w	801bafe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b8f0:	2900      	cmp	r1, #0
 801b8f2:	f2c0 8102 	blt.w	801bafa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b8f6:	458c      	cmp	ip, r1
 801b8f8:	f340 80ff 	ble.w	801bafa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b8fc:	5c12      	ldrb	r2, [r2, r0]
 801b8fe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b902:	1c4a      	adds	r2, r1, #1
 801b904:	f100 80fe 	bmi.w	801bb04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b908:	4594      	cmp	ip, r2
 801b90a:	f340 80fb 	ble.w	801bb04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b90e:	2d00      	cmp	r5, #0
 801b910:	f000 80fa 	beq.w	801bb08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b914:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b918:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b91c:	3701      	adds	r7, #1
 801b91e:	f100 80f7 	bmi.w	801bb10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b922:	45b8      	cmp	r8, r7
 801b924:	f340 80f4 	ble.w	801bb10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b928:	2c00      	cmp	r4, #0
 801b92a:	f000 80f4 	beq.w	801bb16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b92e:	2900      	cmp	r1, #0
 801b930:	eb0e 020c 	add.w	r2, lr, ip
 801b934:	f2c0 80ea 	blt.w	801bb0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b938:	458c      	cmp	ip, r1
 801b93a:	f340 80e7 	ble.w	801bb0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b93e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b942:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b946:	3101      	adds	r1, #1
 801b948:	f100 80e8 	bmi.w	801bb1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b94c:	458c      	cmp	ip, r1
 801b94e:	f340 80e5 	ble.w	801bb1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b952:	2d00      	cmp	r5, #0
 801b954:	f000 80e4 	beq.w	801bb20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b958:	7852      	ldrb	r2, [r2, #1]
 801b95a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b95e:	0e0b      	lsrs	r3, r1, #24
 801b960:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b964:	9300      	str	r3, [sp, #0]
 801b966:	b2a4      	uxth	r4, r4
 801b968:	b2ab      	uxth	r3, r5
 801b96a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b96e:	fb03 f904 	mul.w	r9, r3, r4
 801b972:	fb0a f505 	mul.w	r5, sl, r5
 801b976:	011b      	lsls	r3, r3, #4
 801b978:	eba3 0e09 	sub.w	lr, r3, r9
 801b97c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b980:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b984:	0a28      	lsrs	r0, r5, #8
 801b986:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b98a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b98e:	4405      	add	r5, r0
 801b990:	0a2d      	lsrs	r5, r5, #8
 801b992:	fb0a f303 	mul.w	r3, sl, r3
 801b996:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b99a:	9005      	str	r0, [sp, #20]
 801b99c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b9a0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b9a4:	0a1b      	lsrs	r3, r3, #8
 801b9a6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b9aa:	9306      	str	r3, [sp, #24]
 801b9ac:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b9b0:	fb0b f303 	mul.w	r3, fp, r3
 801b9b4:	0a1d      	lsrs	r5, r3, #8
 801b9b6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b9ba:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b9be:	fb0b f606 	mul.w	r6, fp, r6
 801b9c2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b9c6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b9ca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b9ce:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b9d2:	fb08 f707 	mul.w	r7, r8, r7
 801b9d6:	441d      	add	r5, r3
 801b9d8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b9dc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b9e0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b9e4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b9e8:	fb08 fc0c 	mul.w	ip, r8, ip
 801b9ec:	0a1b      	lsrs	r3, r3, #8
 801b9ee:	9307      	str	r3, [sp, #28]
 801b9f0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b9f4:	0e0b      	lsrs	r3, r1, #24
 801b9f6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b9fa:	435f      	muls	r7, r3
 801b9fc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ba00:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801ba04:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801ba08:	4460      	add	r0, ip
 801ba0a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ba0e:	b2a4      	uxth	r4, r4
 801ba10:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ba14:	0a2d      	lsrs	r5, r5, #8
 801ba16:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ba1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba1e:	fa1f fe8e 	uxth.w	lr, lr
 801ba22:	4359      	muls	r1, r3
 801ba24:	1b12      	subs	r2, r2, r4
 801ba26:	9b05      	ldr	r3, [sp, #20]
 801ba28:	44bc      	add	ip, r7
 801ba2a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ba2e:	b292      	uxth	r2, r2
 801ba30:	fb05 f50e 	mul.w	r5, r5, lr
 801ba34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba38:	fb03 5502 	mla	r5, r3, r2, r5
 801ba3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba40:	9b06      	ldr	r3, [sp, #24]
 801ba42:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801ba46:	0a36      	lsrs	r6, r6, #8
 801ba48:	0a00      	lsrs	r0, r0, #8
 801ba4a:	fb0c 5509 	mla	r5, ip, r9, r5
 801ba4e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801ba52:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ba56:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801ba5a:	fb00 5504 	mla	r5, r0, r4, r5
 801ba5e:	fb0e f606 	mul.w	r6, lr, r6
 801ba62:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801ba66:	0a09      	lsrs	r1, r1, #8
 801ba68:	9b07      	ldr	r3, [sp, #28]
 801ba6a:	fb02 6000 	mla	r0, r2, r0, r6
 801ba6e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ba72:	fb09 0001 	mla	r0, r9, r1, r0
 801ba76:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ba7a:	fb0e fe0b 	mul.w	lr, lr, fp
 801ba7e:	fb04 0003 	mla	r0, r4, r3, r0
 801ba82:	fb02 e20a 	mla	r2, r2, sl, lr
 801ba86:	9b00      	ldr	r3, [sp, #0]
 801ba88:	fb04 2408 	mla	r4, r4, r8, r2
 801ba8c:	fb09 4903 	mla	r9, r9, r3, r4
 801ba90:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801ba94:	9b02      	ldr	r3, [sp, #8]
 801ba96:	9a04      	ldr	r2, [sp, #16]
 801ba98:	fa5f f989 	uxtb.w	r9, r9
 801ba9c:	fb03 f109 	mul.w	r1, r3, r9
 801baa0:	9b03      	ldr	r3, [sp, #12]
 801baa2:	0a2d      	lsrs	r5, r5, #8
 801baa4:	0a00      	lsrs	r0, r0, #8
 801baa6:	fb03 f309 	mul.w	r3, r3, r9
 801baaa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801baae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801bab2:	4305      	orrs	r5, r0
 801bab4:	fb02 f909 	mul.w	r9, r2, r9
 801bab8:	1c58      	adds	r0, r3, #1
 801baba:	1c4a      	adds	r2, r1, #1
 801babc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bac0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bac4:	0a2b      	lsrs	r3, r5, #8
 801bac6:	0c2a      	lsrs	r2, r5, #16
 801bac8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bacc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801bad0:	00db      	lsls	r3, r3, #3
 801bad2:	0212      	lsls	r2, r2, #8
 801bad4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801bad8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801badc:	4313      	orrs	r3, r2
 801bade:	f109 0201 	add.w	r2, r9, #1
 801bae2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801bae6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801baea:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801baee:	431d      	orrs	r5, r3
 801baf0:	9b01      	ldr	r3, [sp, #4]
 801baf2:	801d      	strh	r5, [r3, #0]
 801baf4:	b009      	add	sp, #36	; 0x24
 801baf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bafa:	2000      	movs	r0, #0
 801bafc:	e701      	b.n	801b902 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801bafe:	2600      	movs	r6, #0
 801bb00:	4630      	mov	r0, r6
 801bb02:	e70b      	b.n	801b91c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bb04:	2600      	movs	r6, #0
 801bb06:	e709      	b.n	801b91c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bb08:	462e      	mov	r6, r5
 801bb0a:	e707      	b.n	801b91c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bb0c:	2700      	movs	r7, #0
 801bb0e:	e71a      	b.n	801b946 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801bb10:	2100      	movs	r1, #0
 801bb12:	460f      	mov	r7, r1
 801bb14:	e723      	b.n	801b95e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bb16:	4621      	mov	r1, r4
 801bb18:	4627      	mov	r7, r4
 801bb1a:	e720      	b.n	801b95e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bb1c:	2100      	movs	r1, #0
 801bb1e:	e71e      	b.n	801b95e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bb20:	4629      	mov	r1, r5
 801bb22:	e71c      	b.n	801b95e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801bb24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb28:	b09b      	sub	sp, #108	; 0x6c
 801bb2a:	9218      	str	r2, [sp, #96]	; 0x60
 801bb2c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801bb2e:	9116      	str	r1, [sp, #88]	; 0x58
 801bb30:	9307      	str	r3, [sp, #28]
 801bb32:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801bb36:	9019      	str	r0, [sp, #100]	; 0x64
 801bb38:	6850      	ldr	r0, [r2, #4]
 801bb3a:	6812      	ldr	r2, [r2, #0]
 801bb3c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801bb3e:	fb00 1303 	mla	r3, r0, r3, r1
 801bb42:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bb46:	930a      	str	r3, [sp, #40]	; 0x28
 801bb48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bb4a:	681b      	ldr	r3, [r3, #0]
 801bb4c:	930f      	str	r3, [sp, #60]	; 0x3c
 801bb4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bb50:	685e      	ldr	r6, [r3, #4]
 801bb52:	3604      	adds	r6, #4
 801bb54:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bb56:	2b00      	cmp	r3, #0
 801bb58:	dc03      	bgt.n	801bb62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bb5a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bb5c:	2b00      	cmp	r3, #0
 801bb5e:	f340 8373 	ble.w	801c248 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bb62:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bb64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bb6c:	1e48      	subs	r0, r1, #1
 801bb6e:	1e57      	subs	r7, r2, #1
 801bb70:	9b07      	ldr	r3, [sp, #28]
 801bb72:	2b00      	cmp	r3, #0
 801bb74:	f340 8190 	ble.w	801be98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bb78:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bb7a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801bb7e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801bb82:	d406      	bmi.n	801bb92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bb84:	4584      	cmp	ip, r0
 801bb86:	da04      	bge.n	801bb92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bb88:	2b00      	cmp	r3, #0
 801bb8a:	db02      	blt.n	801bb92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bb8c:	42bb      	cmp	r3, r7
 801bb8e:	f2c0 8184 	blt.w	801be9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801bb92:	f11c 0c01 	adds.w	ip, ip, #1
 801bb96:	f100 8172 	bmi.w	801be7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bb9a:	4561      	cmp	r1, ip
 801bb9c:	f2c0 816f 	blt.w	801be7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bba0:	3301      	adds	r3, #1
 801bba2:	f100 816c 	bmi.w	801be7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bba6:	429a      	cmp	r2, r3
 801bba8:	f2c0 8169 	blt.w	801be7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bbac:	9b07      	ldr	r3, [sp, #28]
 801bbae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bbb0:	9317      	str	r3, [sp, #92]	; 0x5c
 801bbb2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bbb4:	2b00      	cmp	r3, #0
 801bbb6:	f340 818e 	ble.w	801bed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801bbba:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bbbc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bbc0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bbc2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801bbc6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bbc8:	141b      	asrs	r3, r3, #16
 801bbca:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801bbce:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bbd2:	f100 81d1 	bmi.w	801bf78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bbd6:	f101 38ff 	add.w	r8, r1, #4294967295
 801bbda:	4543      	cmp	r3, r8
 801bbdc:	f280 81cc 	bge.w	801bf78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bbe0:	f1bc 0f00 	cmp.w	ip, #0
 801bbe4:	f2c0 81c8 	blt.w	801bf78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bbe8:	f10e 38ff 	add.w	r8, lr, #4294967295
 801bbec:	45c4      	cmp	ip, r8
 801bbee:	f280 81c3 	bge.w	801bf78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bbf2:	b209      	sxth	r1, r1
 801bbf4:	fb0c 3301 	mla	r3, ip, r1, r3
 801bbf8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bbfa:	eb04 0803 	add.w	r8, r4, r3
 801bbfe:	5ce3      	ldrb	r3, [r4, r3]
 801bc00:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bc04:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801bc08:	2a00      	cmp	r2, #0
 801bc0a:	f000 81aa 	beq.w	801bf62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801bc0e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801bc12:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801bc16:	940b      	str	r4, [sp, #44]	; 0x2c
 801bc18:	0e24      	lsrs	r4, r4, #24
 801bc1a:	9412      	str	r4, [sp, #72]	; 0x48
 801bc1c:	b178      	cbz	r0, 801bc3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bc1e:	eb08 0c01 	add.w	ip, r8, r1
 801bc22:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bc26:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc2a:	9108      	str	r1, [sp, #32]
 801bc2c:	0e09      	lsrs	r1, r1, #24
 801bc2e:	9110      	str	r1, [sp, #64]	; 0x40
 801bc30:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801bc34:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc38:	910c      	str	r1, [sp, #48]	; 0x30
 801bc3a:	0e09      	lsrs	r1, r1, #24
 801bc3c:	9113      	str	r1, [sp, #76]	; 0x4c
 801bc3e:	b292      	uxth	r2, r2
 801bc40:	b280      	uxth	r0, r0
 801bc42:	fb02 f900 	mul.w	r9, r2, r0
 801bc46:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801bc4a:	0112      	lsls	r2, r2, #4
 801bc4c:	eba2 0809 	sub.w	r8, r2, r9
 801bc50:	b280      	uxth	r0, r0
 801bc52:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801bc56:	9912      	ldr	r1, [sp, #72]	; 0x48
 801bc58:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bc5a:	fa1f f888 	uxth.w	r8, r8
 801bc5e:	1a12      	subs	r2, r2, r0
 801bc60:	b292      	uxth	r2, r2
 801bc62:	fb08 f101 	mul.w	r1, r8, r1
 801bc66:	fb02 110e 	mla	r1, r2, lr, r1
 801bc6a:	fb00 1104 	mla	r1, r0, r4, r1
 801bc6e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bc70:	fb09 1104 	mla	r1, r9, r4, r1
 801bc74:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bc78:	2900      	cmp	r1, #0
 801bc7a:	f000 80f5 	beq.w	801be68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bc7e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801bc82:	d01b      	beq.n	801bcbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bc84:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bc88:	fb0e fa0a 	mul.w	sl, lr, sl
 801bc8c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bc90:	fb0e fe03 	mul.w	lr, lr, r3
 801bc94:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bc98:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bc9c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bca0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801bca4:	4453      	add	r3, sl
 801bca6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bcaa:	0a1b      	lsrs	r3, r3, #8
 801bcac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bcb4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bcb8:	ea43 030c 	orr.w	r3, r3, ip
 801bcbc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bcbe:	2cff      	cmp	r4, #255	; 0xff
 801bcc0:	d021      	beq.n	801bd06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801bcc2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bcc4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bcc8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bcca:	fb04 fb0b 	mul.w	fp, r4, fp
 801bcce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bcd0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bcd4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bcd6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bcda:	fb04 fa0a 	mul.w	sl, r4, sl
 801bcde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bce2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bce6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bcea:	44de      	add	lr, fp
 801bcec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bcf0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bcf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bcf8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bcfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd00:	ea4e 040a 	orr.w	r4, lr, sl
 801bd04:	940b      	str	r4, [sp, #44]	; 0x2c
 801bd06:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bd08:	2cff      	cmp	r4, #255	; 0xff
 801bd0a:	d021      	beq.n	801bd50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801bd0c:	9c08      	ldr	r4, [sp, #32]
 801bd0e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bd12:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bd14:	fb04 fb0b 	mul.w	fp, r4, fp
 801bd18:	9c08      	ldr	r4, [sp, #32]
 801bd1a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bd1e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bd20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bd24:	fb04 fa0a 	mul.w	sl, r4, sl
 801bd28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bd2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bd30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bd34:	44de      	add	lr, fp
 801bd36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bd3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bd3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bd46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd4a:	ea4e 040a 	orr.w	r4, lr, sl
 801bd4e:	9408      	str	r4, [sp, #32]
 801bd50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bd52:	2cff      	cmp	r4, #255	; 0xff
 801bd54:	d021      	beq.n	801bd9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bd56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801bd58:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bd5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bd5e:	fb04 fb0b 	mul.w	fp, r4, fp
 801bd62:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801bd64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bd68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bd6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bd6e:	fb04 fa0a 	mul.w	sl, r4, sl
 801bd72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bd76:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bd7a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bd7e:	44de      	add	lr, fp
 801bd80:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bd84:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bd88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bd90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd94:	ea4e 040a 	orr.w	r4, lr, sl
 801bd98:	940c      	str	r4, [sp, #48]	; 0x30
 801bd9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bd9c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bda0:	9c08      	ldr	r4, [sp, #32]
 801bda2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801bda6:	fb08 fc0c 	mul.w	ip, r8, ip
 801bdaa:	fb02 cc0e 	mla	ip, r2, lr, ip
 801bdae:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bdb2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801bdb4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801bdb8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bdbc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bdbe:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bdc2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801bdc6:	fb08 f80e 	mul.w	r8, r8, lr
 801bdca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bdce:	fb02 8303 	mla	r3, r2, r3, r8
 801bdd2:	9a08      	ldr	r2, [sp, #32]
 801bdd4:	f8b7 8000 	ldrh.w	r8, [r7]
 801bdd8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801bddc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bdde:	fb00 330a 	mla	r3, r0, sl, r3
 801bde2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801bde6:	fb09 3900 	mla	r9, r9, r0, r3
 801bdea:	43c9      	mvns	r1, r1
 801bdec:	ea4f 2228 	mov.w	r2, r8, asr #8
 801bdf0:	fa5f fe81 	uxtb.w	lr, r1
 801bdf4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bdf8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bdfc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801be00:	fb02 f20e 	mul.w	r2, r2, lr
 801be04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801be08:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801be0c:	ea4c 0c09 	orr.w	ip, ip, r9
 801be10:	1c53      	adds	r3, r2, #1
 801be12:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801be16:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801be1a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801be1e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801be22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801be26:	4a63      	ldr	r2, [pc, #396]	; (801bfb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801be28:	fb00 f00e 	mul.w	r0, r0, lr
 801be2c:	b2db      	uxtb	r3, r3
 801be2e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801be32:	1c43      	adds	r3, r0, #1
 801be34:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801be38:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801be3c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801be40:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801be44:	b2c9      	uxtb	r1, r1
 801be46:	00db      	lsls	r3, r3, #3
 801be48:	fb01 f10e 	mul.w	r1, r1, lr
 801be4c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801be50:	4313      	orrs	r3, r2
 801be52:	1c4a      	adds	r2, r1, #1
 801be54:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801be58:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801be5c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801be60:	ea4c 0c03 	orr.w	ip, ip, r3
 801be64:	f8a7 c000 	strh.w	ip, [r7]
 801be68:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801be6a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801be6c:	441a      	add	r2, r3
 801be6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be70:	9225      	str	r2, [sp, #148]	; 0x94
 801be72:	441d      	add	r5, r3
 801be74:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801be76:	3b01      	subs	r3, #1
 801be78:	3702      	adds	r7, #2
 801be7a:	9317      	str	r3, [sp, #92]	; 0x5c
 801be7c:	e699      	b.n	801bbb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801be7e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801be80:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801be82:	441c      	add	r4, r3
 801be84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be86:	9425      	str	r4, [sp, #148]	; 0x94
 801be88:	441d      	add	r5, r3
 801be8a:	9b07      	ldr	r3, [sp, #28]
 801be8c:	3b01      	subs	r3, #1
 801be8e:	9307      	str	r3, [sp, #28]
 801be90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be92:	3302      	adds	r3, #2
 801be94:	930a      	str	r3, [sp, #40]	; 0x28
 801be96:	e66b      	b.n	801bb70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801be98:	d024      	beq.n	801bee4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801be9a:	9b07      	ldr	r3, [sp, #28]
 801be9c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801be9e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bea0:	3b01      	subs	r3, #1
 801bea2:	fb00 4003 	mla	r0, r0, r3, r4
 801bea6:	1400      	asrs	r0, r0, #16
 801bea8:	f53f ae80 	bmi.w	801bbac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801beac:	3901      	subs	r1, #1
 801beae:	4288      	cmp	r0, r1
 801beb0:	f6bf ae7c 	bge.w	801bbac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801beb4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801beb6:	fb01 5303 	mla	r3, r1, r3, r5
 801beba:	141b      	asrs	r3, r3, #16
 801bebc:	f53f ae76 	bmi.w	801bbac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bec0:	3a01      	subs	r2, #1
 801bec2:	4293      	cmp	r3, r2
 801bec4:	f6bf ae72 	bge.w	801bbac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bec8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801becc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801bed0:	f1bb 0f00 	cmp.w	fp, #0
 801bed4:	dc70      	bgt.n	801bfb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bed6:	9b07      	ldr	r3, [sp, #28]
 801bed8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bedc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bede:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bee2:	930a      	str	r3, [sp, #40]	; 0x28
 801bee4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bee6:	2b00      	cmp	r3, #0
 801bee8:	f340 81ae 	ble.w	801c248 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801beec:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bef0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bef4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bef8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801befa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801befe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bf02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bf06:	eef0 6a62 	vmov.f32	s13, s5
 801bf0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bf0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf12:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bf16:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801bf1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bf1e:	eef0 6a43 	vmov.f32	s13, s6
 801bf22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bf26:	ee12 2a90 	vmov	r2, s5
 801bf2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bf2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf32:	ee13 2a10 	vmov	r2, s6
 801bf36:	9327      	str	r3, [sp, #156]	; 0x9c
 801bf38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bf3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf3e:	9328      	str	r3, [sp, #160]	; 0xa0
 801bf40:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bf42:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bf44:	3b01      	subs	r3, #1
 801bf46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf4a:	9316      	str	r3, [sp, #88]	; 0x58
 801bf4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bf4e:	bf08      	it	eq
 801bf50:	4613      	moveq	r3, r2
 801bf52:	ee16 5a90 	vmov	r5, s13
 801bf56:	9307      	str	r3, [sp, #28]
 801bf58:	eeb0 3a67 	vmov.f32	s6, s15
 801bf5c:	eef0 2a47 	vmov.f32	s5, s14
 801bf60:	e5f8      	b.n	801bb54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bf62:	2800      	cmp	r0, #0
 801bf64:	f43f ae6b 	beq.w	801bc3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bf68:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bf6c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bf70:	9108      	str	r1, [sp, #32]
 801bf72:	0e09      	lsrs	r1, r1, #24
 801bf74:	9110      	str	r1, [sp, #64]	; 0x40
 801bf76:	e662      	b.n	801bc3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bf78:	f113 0801 	adds.w	r8, r3, #1
 801bf7c:	f53f af74 	bmi.w	801be68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bf80:	4541      	cmp	r1, r8
 801bf82:	f6ff af71 	blt.w	801be68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bf86:	f11c 0801 	adds.w	r8, ip, #1
 801bf8a:	f53f af6d 	bmi.w	801be68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bf8e:	45c6      	cmp	lr, r8
 801bf90:	f6ff af6a 	blt.w	801be68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bf94:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801bf98:	b209      	sxth	r1, r1
 801bf9a:	fa0f f38e 	sxth.w	r3, lr
 801bf9e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801bfa2:	9301      	str	r3, [sp, #4]
 801bfa4:	9100      	str	r1, [sp, #0]
 801bfa6:	4633      	mov	r3, r6
 801bfa8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bfaa:	9819      	ldr	r0, [sp, #100]	; 0x64
 801bfac:	4639      	mov	r1, r7
 801bfae:	f7ff fc7a 	bl	801b8a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801bfb2:	e759      	b.n	801be68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bfb4:	fffff800 	.word	0xfffff800
 801bfb8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bfba:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bfbc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bfc0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bfc2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bfc6:	1427      	asrs	r7, r4, #16
 801bfc8:	142b      	asrs	r3, r5, #16
 801bfca:	fb01 7303 	mla	r3, r1, r3, r7
 801bfce:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bfd0:	18e7      	adds	r7, r4, r3
 801bfd2:	5ce3      	ldrb	r3, [r4, r3]
 801bfd4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bfd8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bfdc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bfe0:	2a00      	cmp	r2, #0
 801bfe2:	f000 8127 	beq.w	801c234 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bfe6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bfea:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bfee:	940d      	str	r4, [sp, #52]	; 0x34
 801bff0:	0e24      	lsrs	r4, r4, #24
 801bff2:	9414      	str	r4, [sp, #80]	; 0x50
 801bff4:	b170      	cbz	r0, 801c014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bff6:	eb07 0e01 	add.w	lr, r7, r1
 801bffa:	5c79      	ldrb	r1, [r7, r1]
 801bffc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c000:	9109      	str	r1, [sp, #36]	; 0x24
 801c002:	0e09      	lsrs	r1, r1, #24
 801c004:	9111      	str	r1, [sp, #68]	; 0x44
 801c006:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c00a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c00e:	910e      	str	r1, [sp, #56]	; 0x38
 801c010:	0e09      	lsrs	r1, r1, #24
 801c012:	9115      	str	r1, [sp, #84]	; 0x54
 801c014:	b292      	uxth	r2, r2
 801c016:	b280      	uxth	r0, r0
 801c018:	fb02 f800 	mul.w	r8, r2, r0
 801c01c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c020:	0112      	lsls	r2, r2, #4
 801c022:	eba2 0e08 	sub.w	lr, r2, r8
 801c026:	b280      	uxth	r0, r0
 801c028:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801c02c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c02e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c030:	fa1f fe8e 	uxth.w	lr, lr
 801c034:	1a09      	subs	r1, r1, r0
 801c036:	b289      	uxth	r1, r1
 801c038:	fb0e f202 	mul.w	r2, lr, r2
 801c03c:	fb01 220c 	mla	r2, r1, ip, r2
 801c040:	fb00 2204 	mla	r2, r0, r4, r2
 801c044:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c046:	fb08 2204 	mla	r2, r8, r4, r2
 801c04a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c04e:	2a00      	cmp	r2, #0
 801c050:	f000 80e5 	beq.w	801c21e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c054:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801c058:	d019      	beq.n	801c08e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c05a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c05e:	fb0c fa0a 	mul.w	sl, ip, sl
 801c062:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c066:	fb0c fc03 	mul.w	ip, ip, r3
 801c06a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c06e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c072:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c076:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801c07a:	4453      	add	r3, sl
 801c07c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c080:	0a1b      	lsrs	r3, r3, #8
 801c082:	0a3f      	lsrs	r7, r7, #8
 801c084:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c088:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c08c:	433b      	orrs	r3, r7
 801c08e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c090:	2cff      	cmp	r4, #255	; 0xff
 801c092:	d020      	beq.n	801c0d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c094:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c096:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c09a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c09c:	4367      	muls	r7, r4
 801c09e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c0a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c0a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c0a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c0aa:	fb04 fa0a 	mul.w	sl, r4, sl
 801c0ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c0b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c0b6:	44bc      	add	ip, r7
 801c0b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c0bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c0c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c0c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c0c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c0cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c0d0:	ea4c 040a 	orr.w	r4, ip, sl
 801c0d4:	940d      	str	r4, [sp, #52]	; 0x34
 801c0d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c0d8:	2cff      	cmp	r4, #255	; 0xff
 801c0da:	d020      	beq.n	801c11e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c0dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c0de:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c0e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c0e4:	4367      	muls	r7, r4
 801c0e6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c0e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c0ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c0ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c0f2:	fb04 fa0a 	mul.w	sl, r4, sl
 801c0f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c0fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c0fe:	44bc      	add	ip, r7
 801c100:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c104:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c108:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c10c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c110:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c114:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c118:	ea4c 040a 	orr.w	r4, ip, sl
 801c11c:	9409      	str	r4, [sp, #36]	; 0x24
 801c11e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c120:	2cff      	cmp	r4, #255	; 0xff
 801c122:	d020      	beq.n	801c166 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c124:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c126:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c12a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c12c:	4367      	muls	r7, r4
 801c12e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c130:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c134:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c136:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c13a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c13e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c142:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c146:	44bc      	add	ip, r7
 801c148:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c14c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c150:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c154:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c158:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c15c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c160:	ea4c 040a 	orr.w	r4, ip, sl
 801c164:	940e      	str	r4, [sp, #56]	; 0x38
 801c166:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c168:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c16c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c16e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801c172:	fb0e f707 	mul.w	r7, lr, r7
 801c176:	fb01 770c 	mla	r7, r1, ip, r7
 801c17a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c17e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c180:	fb00 770c 	mla	r7, r0, ip, r7
 801c184:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c188:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c18a:	fb08 770c 	mla	r7, r8, ip, r7
 801c18e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801c192:	fb0e fe0c 	mul.w	lr, lr, ip
 801c196:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c19a:	fb01 e303 	mla	r3, r1, r3, lr
 801c19e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c1a0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c1a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c1a6:	fb00 330a 	mla	r3, r0, sl, r3
 801c1aa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801c1ae:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c1b2:	f8b9 3000 	ldrh.w	r3, [r9]
 801c1b6:	43d2      	mvns	r2, r2
 801c1b8:	1218      	asrs	r0, r3, #8
 801c1ba:	b2d2      	uxtb	r2, r2
 801c1bc:	10d9      	asrs	r1, r3, #3
 801c1be:	0a3f      	lsrs	r7, r7, #8
 801c1c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c1c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c1c8:	00db      	lsls	r3, r3, #3
 801c1ca:	4350      	muls	r0, r2
 801c1cc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c1d0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c1d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c1d8:	b2db      	uxtb	r3, r3
 801c1da:	ea47 070c 	orr.w	r7, r7, ip
 801c1de:	4351      	muls	r1, r2
 801c1e0:	4353      	muls	r3, r2
 801c1e2:	1c42      	adds	r2, r0, #1
 801c1e4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c1e8:	0c3a      	lsrs	r2, r7, #16
 801c1ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c1ee:	4a18      	ldr	r2, [pc, #96]	; (801c250 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c1f0:	b2c0      	uxtb	r0, r0
 801c1f2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c1f6:	1c4a      	adds	r2, r1, #1
 801c1f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c1fc:	0a3a      	lsrs	r2, r7, #8
 801c1fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c202:	00c9      	lsls	r1, r1, #3
 801c204:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c208:	4301      	orrs	r1, r0
 801c20a:	1c58      	adds	r0, r3, #1
 801c20c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c210:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c214:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c218:	4308      	orrs	r0, r1
 801c21a:	f8a9 0000 	strh.w	r0, [r9]
 801c21e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c220:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c222:	441a      	add	r2, r3
 801c224:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c226:	9225      	str	r2, [sp, #148]	; 0x94
 801c228:	f109 0902 	add.w	r9, r9, #2
 801c22c:	441d      	add	r5, r3
 801c22e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c232:	e64d      	b.n	801bed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801c234:	2800      	cmp	r0, #0
 801c236:	f43f aeed 	beq.w	801c014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c23a:	5c79      	ldrb	r1, [r7, r1]
 801c23c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c240:	9109      	str	r1, [sp, #36]	; 0x24
 801c242:	0e09      	lsrs	r1, r1, #24
 801c244:	9111      	str	r1, [sp, #68]	; 0x44
 801c246:	e6e5      	b.n	801c014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c248:	b01b      	add	sp, #108	; 0x6c
 801c24a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c24e:	bf00      	nop
 801c250:	fffff800 	.word	0xfffff800

0801c254 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c258:	b085      	sub	sp, #20
 801c25a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c25e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c262:	9103      	str	r1, [sp, #12]
 801c264:	fb00 7406 	mla	r4, r0, r6, r7
 801c268:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c26c:	2800      	cmp	r0, #0
 801c26e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c272:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c276:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c27a:	9501      	str	r5, [sp, #4]
 801c27c:	eb03 0904 	add.w	r9, r3, r4
 801c280:	f2c0 8150 	blt.w	801c524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c284:	4583      	cmp	fp, r0
 801c286:	f340 814d 	ble.w	801c524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c28a:	2f00      	cmp	r7, #0
 801c28c:	f2c0 8146 	blt.w	801c51c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c290:	42be      	cmp	r6, r7
 801c292:	f340 8143 	ble.w	801c51c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c296:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c29a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c29e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c2a2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c2a6:	4355      	muls	r5, r2
 801c2a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c2ac:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c2b0:	fb0c f203 	mul.w	r2, ip, r3
 801c2b4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c2b8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c2bc:	441d      	add	r5, r3
 801c2be:	f102 0320 	add.w	r3, r2, #32
 801c2c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c2c6:	0a1b      	lsrs	r3, r3, #8
 801c2c8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c2cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c2d0:	431c      	orrs	r4, r3
 801c2d2:	1c7b      	adds	r3, r7, #1
 801c2d4:	f100 812b 	bmi.w	801c52e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c2d8:	429e      	cmp	r6, r3
 801c2da:	f340 8128 	ble.w	801c52e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c2de:	2900      	cmp	r1, #0
 801c2e0:	f000 8128 	beq.w	801c534 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c2e4:	9a01      	ldr	r2, [sp, #4]
 801c2e6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c2ea:	8855      	ldrh	r5, [r2, #2]
 801c2ec:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c2f0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c2f4:	fb08 f802 	mul.w	r8, r8, r2
 801c2f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c2fc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c300:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c304:	435d      	muls	r5, r3
 801c306:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c30a:	44d0      	add	r8, sl
 801c30c:	f105 0a20 	add.w	sl, r5, #32
 801c310:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c314:	0a2d      	lsrs	r5, r5, #8
 801c316:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c31a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c31e:	432a      	orrs	r2, r5
 801c320:	3001      	adds	r0, #1
 801c322:	f100 810d 	bmi.w	801c540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c326:	4583      	cmp	fp, r0
 801c328:	f340 810a 	ble.w	801c540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c32c:	f1be 0f00 	cmp.w	lr, #0
 801c330:	f000 810b 	beq.w	801c54a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c334:	2f00      	cmp	r7, #0
 801c336:	f2c0 8100 	blt.w	801c53a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c33a:	42be      	cmp	r6, r7
 801c33c:	f340 80fd 	ble.w	801c53a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c340:	9801      	ldr	r0, [sp, #4]
 801c342:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c346:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c34a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c34e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c352:	fb0a fa00 	mul.w	sl, sl, r0
 801c356:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c35a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c35e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c362:	fb05 f808 	mul.w	r8, r5, r8
 801c366:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c36a:	4482      	add	sl, r0
 801c36c:	f108 0020 	add.w	r0, r8, #32
 801c370:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c374:	0a00      	lsrs	r0, r0, #8
 801c376:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c37a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c37e:	ea4b 0b00 	orr.w	fp, fp, r0
 801c382:	3701      	adds	r7, #1
 801c384:	f100 80e6 	bmi.w	801c554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c388:	42be      	cmp	r6, r7
 801c38a:	f340 80e3 	ble.w	801c554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c38e:	2900      	cmp	r1, #0
 801c390:	f000 80e3 	beq.w	801c55a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c394:	3601      	adds	r6, #1
 801c396:	9801      	ldr	r0, [sp, #4]
 801c398:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c39c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c3a0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c3a4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c3a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c3ac:	fb09 f906 	mul.w	r9, r9, r6
 801c3b0:	fb07 f800 	mul.w	r8, r7, r0
 801c3b4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c3b8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c3bc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c3c0:	44d1      	add	r9, sl
 801c3c2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c3c6:	f108 0020 	add.w	r0, r8, #32
 801c3ca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c3ce:	0a00      	lsrs	r0, r0, #8
 801c3d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c3d4:	4330      	orrs	r0, r6
 801c3d6:	b28e      	uxth	r6, r1
 801c3d8:	fa1f f98e 	uxth.w	r9, lr
 801c3dc:	fb06 f809 	mul.w	r8, r6, r9
 801c3e0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c3e4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c3e8:	0136      	lsls	r6, r6, #4
 801c3ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c3ee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c3f2:	9601      	str	r6, [sp, #4]
 801c3f4:	ea4a 0404 	orr.w	r4, sl, r4
 801c3f8:	fa1f f689 	uxth.w	r6, r9
 801c3fc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c400:	fb11 f90e 	smulbb	r9, r1, lr
 801c404:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c408:	9602      	str	r6, [sp, #8]
 801c40a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c40e:	4626      	mov	r6, r4
 801c410:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c414:	f1ce 0410 	rsb	r4, lr, #16
 801c418:	1a64      	subs	r4, r4, r1
 801c41a:	ea4a 0202 	orr.w	r2, sl, r2
 801c41e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c422:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c426:	434a      	muls	r2, r1
 801c428:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c42c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c430:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c434:	fb04 2406 	mla	r4, r4, r6, r2
 801c438:	ea4a 0000 	orr.w	r0, sl, r0
 801c43c:	fb09 4200 	mla	r2, r9, r0, r4
 801c440:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c444:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c448:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c44c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c450:	9c01      	ldr	r4, [sp, #4]
 801c452:	9e02      	ldr	r6, [sp, #8]
 801c454:	9903      	ldr	r1, [sp, #12]
 801c456:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801c45a:	1ba4      	subs	r4, r4, r6
 801c45c:	9e01      	ldr	r6, [sp, #4]
 801c45e:	8808      	ldrh	r0, [r1, #0]
 801c460:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801c464:	eba6 0608 	sub.w	r6, r6, r8
 801c468:	b2b6      	uxth	r6, r6
 801c46a:	b2a4      	uxth	r4, r4
 801c46c:	4373      	muls	r3, r6
 801c46e:	fb0c 3304 	mla	r3, ip, r4, r3
 801c472:	9c02      	ldr	r4, [sp, #8]
 801c474:	fb04 3505 	mla	r5, r4, r5, r3
 801c478:	fb08 5707 	mla	r7, r8, r7, r5
 801c47c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c480:	b289      	uxth	r1, r1
 801c482:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c486:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c48a:	434f      	muls	r7, r1
 801c48c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c490:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c494:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c498:	1c7b      	adds	r3, r7, #1
 801c49a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c49e:	ea42 0e0e 	orr.w	lr, r2, lr
 801c4a2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c4a6:	fa1f f28e 	uxth.w	r2, lr
 801c4aa:	1203      	asrs	r3, r0, #8
 801c4ac:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c4b0:	b2ff      	uxtb	r7, r7
 801c4b2:	1215      	asrs	r5, r2, #8
 801c4b4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c4b8:	fb13 f307 	smulbb	r3, r3, r7
 801c4bc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c4c0:	fb05 3501 	mla	r5, r5, r1, r3
 801c4c4:	10c3      	asrs	r3, r0, #3
 801c4c6:	10d4      	asrs	r4, r2, #3
 801c4c8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c4cc:	fb13 f307 	smulbb	r3, r3, r7
 801c4d0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c4d4:	fb04 3401 	mla	r4, r4, r1, r3
 801c4d8:	00c3      	lsls	r3, r0, #3
 801c4da:	00d2      	lsls	r2, r2, #3
 801c4dc:	b2db      	uxtb	r3, r3
 801c4de:	fb13 f307 	smulbb	r3, r3, r7
 801c4e2:	b2d2      	uxtb	r2, r2
 801c4e4:	fb02 3101 	mla	r1, r2, r1, r3
 801c4e8:	b2ad      	uxth	r5, r5
 801c4ea:	b289      	uxth	r1, r1
 801c4ec:	b2a4      	uxth	r4, r4
 801c4ee:	1c6b      	adds	r3, r5, #1
 801c4f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c4f4:	1c62      	adds	r2, r4, #1
 801c4f6:	1c4b      	adds	r3, r1, #1
 801c4f8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c4fc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c500:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c504:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c508:	0964      	lsrs	r4, r4, #5
 801c50a:	432b      	orrs	r3, r5
 801c50c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c510:	9a03      	ldr	r2, [sp, #12]
 801c512:	4323      	orrs	r3, r4
 801c514:	8013      	strh	r3, [r2, #0]
 801c516:	b005      	add	sp, #20
 801c518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c51c:	f04f 0c00 	mov.w	ip, #0
 801c520:	4664      	mov	r4, ip
 801c522:	e6d6      	b.n	801c2d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c524:	2300      	movs	r3, #0
 801c526:	469c      	mov	ip, r3
 801c528:	461a      	mov	r2, r3
 801c52a:	461c      	mov	r4, r3
 801c52c:	e6f8      	b.n	801c320 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c52e:	2300      	movs	r3, #0
 801c530:	461a      	mov	r2, r3
 801c532:	e6f5      	b.n	801c320 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c534:	460b      	mov	r3, r1
 801c536:	460a      	mov	r2, r1
 801c538:	e6f2      	b.n	801c320 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c53a:	2500      	movs	r5, #0
 801c53c:	46ab      	mov	fp, r5
 801c53e:	e720      	b.n	801c382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c540:	2700      	movs	r7, #0
 801c542:	463d      	mov	r5, r7
 801c544:	4638      	mov	r0, r7
 801c546:	46bb      	mov	fp, r7
 801c548:	e745      	b.n	801c3d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c54a:	4677      	mov	r7, lr
 801c54c:	4675      	mov	r5, lr
 801c54e:	4670      	mov	r0, lr
 801c550:	46f3      	mov	fp, lr
 801c552:	e740      	b.n	801c3d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c554:	2700      	movs	r7, #0
 801c556:	4638      	mov	r0, r7
 801c558:	e73d      	b.n	801c3d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c55a:	460f      	mov	r7, r1
 801c55c:	4608      	mov	r0, r1
 801c55e:	e73a      	b.n	801c3d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c564:	b097      	sub	sp, #92	; 0x5c
 801c566:	9214      	str	r2, [sp, #80]	; 0x50
 801c568:	9308      	str	r3, [sp, #32]
 801c56a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c56c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c570:	9312      	str	r3, [sp, #72]	; 0x48
 801c572:	9111      	str	r1, [sp, #68]	; 0x44
 801c574:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c578:	9015      	str	r0, [sp, #84]	; 0x54
 801c57a:	6850      	ldr	r0, [r2, #4]
 801c57c:	6812      	ldr	r2, [r2, #0]
 801c57e:	fb00 1303 	mla	r3, r0, r3, r1
 801c582:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c586:	9309      	str	r3, [sp, #36]	; 0x24
 801c588:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c58a:	681b      	ldr	r3, [r3, #0]
 801c58c:	930b      	str	r3, [sp, #44]	; 0x2c
 801c58e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c590:	685b      	ldr	r3, [r3, #4]
 801c592:	930c      	str	r3, [sp, #48]	; 0x30
 801c594:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c598:	930a      	str	r3, [sp, #40]	; 0x28
 801c59a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c59c:	2b00      	cmp	r3, #0
 801c59e:	dc03      	bgt.n	801c5a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c5a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c5a2:	2b00      	cmp	r3, #0
 801c5a4:	f340 83cb 	ble.w	801cd3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c5a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c5aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c5b2:	1e48      	subs	r0, r1, #1
 801c5b4:	1e55      	subs	r5, r2, #1
 801c5b6:	9b08      	ldr	r3, [sp, #32]
 801c5b8:	2b00      	cmp	r3, #0
 801c5ba:	f340 81a3 	ble.w	801c904 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c5be:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c5c0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c5c2:	1436      	asrs	r6, r6, #16
 801c5c4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c5c8:	d406      	bmi.n	801c5d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c5ca:	4286      	cmp	r6, r0
 801c5cc:	da04      	bge.n	801c5d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c5ce:	2b00      	cmp	r3, #0
 801c5d0:	db02      	blt.n	801c5d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c5d2:	42ab      	cmp	r3, r5
 801c5d4:	f2c0 8197 	blt.w	801c906 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c5d8:	3601      	adds	r6, #1
 801c5da:	f100 8184 	bmi.w	801c8e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c5de:	42b1      	cmp	r1, r6
 801c5e0:	f2c0 8181 	blt.w	801c8e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c5e4:	3301      	adds	r3, #1
 801c5e6:	f100 817e 	bmi.w	801c8e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c5ea:	429a      	cmp	r2, r3
 801c5ec:	f2c0 817b 	blt.w	801c8e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c5f0:	9b08      	ldr	r3, [sp, #32]
 801c5f2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c5f4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c5f6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c5fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c5fc:	2b00      	cmp	r3, #0
 801c5fe:	f340 81a4 	ble.w	801c94a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c602:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c604:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c606:	1418      	asrs	r0, r3, #16
 801c608:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c60a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c60e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c610:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c614:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c616:	142d      	asrs	r5, r5, #16
 801c618:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c61c:	f100 81f8 	bmi.w	801ca10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c620:	f102 3eff 	add.w	lr, r2, #4294967295
 801c624:	4575      	cmp	r5, lr
 801c626:	f280 81f3 	bge.w	801ca10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c62a:	2800      	cmp	r0, #0
 801c62c:	f2c0 81f0 	blt.w	801ca10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c630:	f103 3eff 	add.w	lr, r3, #4294967295
 801c634:	4570      	cmp	r0, lr
 801c636:	f280 81eb 	bge.w	801ca10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c63a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c63c:	b212      	sxth	r2, r2
 801c63e:	fb00 5002 	mla	r0, r0, r2, r5
 801c642:	fa1f fe81 	uxth.w	lr, r1
 801c646:	eb03 0a00 	add.w	sl, r3, r0
 801c64a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c64e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c652:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c656:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c65a:	b29b      	uxth	r3, r3
 801c65c:	f1bc 0f00 	cmp.w	ip, #0
 801c660:	f000 81b9 	beq.w	801c9d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c664:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c668:	940d      	str	r4, [sp, #52]	; 0x34
 801c66a:	eb0a 0b02 	add.w	fp, sl, r2
 801c66e:	fa1f fa8c 	uxth.w	sl, ip
 801c672:	fb0a fe0e 	mul.w	lr, sl, lr
 801c676:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c67a:	fa1f fa8a 	uxth.w	sl, sl
 801c67e:	eba5 050e 	sub.w	r5, r5, lr
 801c682:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c686:	940e      	str	r4, [sp, #56]	; 0x38
 801c688:	eba3 030a 	sub.w	r3, r3, sl
 801c68c:	b2ad      	uxth	r5, r5
 801c68e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c690:	b29b      	uxth	r3, r3
 801c692:	fb08 f505 	mul.w	r5, r8, r5
 801c696:	fb09 5303 	mla	r3, r9, r3, r5
 801c69a:	fb0a 3304 	mla	r3, sl, r4, r3
 801c69e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c6a0:	fb0e 3304 	mla	r3, lr, r4, r3
 801c6a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c6a8:	2b00      	cmp	r3, #0
 801c6aa:	f000 810f 	beq.w	801c8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c6ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c6b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c6b4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c6b8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c6bc:	f000 8190 	beq.w	801c9e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c6c0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c6c4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c6c8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c6cc:	fb09 f000 	mul.w	r0, r9, r0
 801c6d0:	fb0a fe0e 	mul.w	lr, sl, lr
 801c6d4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c6d8:	f100 0b20 	add.w	fp, r0, #32
 801c6dc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c6e0:	44ce      	add	lr, r9
 801c6e2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c6e6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c6ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c6ee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c6f2:	ea4e 0909 	orr.w	r9, lr, r9
 801c6f6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c6fa:	8868      	ldrh	r0, [r5, #2]
 801c6fc:	d019      	beq.n	801c732 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c6fe:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c702:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c706:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c70a:	fb08 f800 	mul.w	r8, r8, r0
 801c70e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c712:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c716:	f108 0b20 	add.w	fp, r8, #32
 801c71a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c71e:	4486      	add	lr, r0
 801c720:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c724:	0a00      	lsrs	r0, r0, #8
 801c726:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c72a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c72e:	ea4e 0000 	orr.w	r0, lr, r0
 801c732:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c736:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c73a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c73e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c742:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c746:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c74a:	ea4e 0909 	orr.w	r9, lr, r9
 801c74e:	ea4a 0000 	orr.w	r0, sl, r0
 801c752:	f1bc 0f00 	cmp.w	ip, #0
 801c756:	f000 8145 	beq.w	801c9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c75a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c75e:	3a01      	subs	r2, #1
 801c760:	0052      	lsls	r2, r2, #1
 801c762:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c764:	3202      	adds	r2, #2
 801c766:	2cff      	cmp	r4, #255	; 0xff
 801c768:	eb05 0e02 	add.w	lr, r5, r2
 801c76c:	5aaa      	ldrh	r2, [r5, r2]
 801c76e:	d018      	beq.n	801c7a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c770:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c774:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c778:	fb04 fa02 	mul.w	sl, r4, r2
 801c77c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c780:	fb08 f805 	mul.w	r8, r8, r5
 801c784:	f10a 0520 	add.w	r5, sl, #32
 801c788:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c78c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c790:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c794:	4442      	add	r2, r8
 801c796:	0a2d      	lsrs	r5, r5, #8
 801c798:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c79c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c7a0:	432a      	orrs	r2, r5
 801c7a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c7a4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c7a8:	2cff      	cmp	r4, #255	; 0xff
 801c7aa:	d01a      	beq.n	801c7e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c7ac:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c7b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c7b4:	fb04 fa05 	mul.w	sl, r4, r5
 801c7b8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c7bc:	fb08 f80e 	mul.w	r8, r8, lr
 801c7c0:	f10a 0e20 	add.w	lr, sl, #32
 801c7c4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c7c8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c7cc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c7d0:	4445      	add	r5, r8
 801c7d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c7d6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c7da:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c7de:	ea45 050e 	orr.w	r5, r5, lr
 801c7e2:	fb1c fe01 	smulbb	lr, ip, r1
 801c7e6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c7ea:	f1cc 0810 	rsb	r8, ip, #16
 801c7ee:	eba8 0801 	sub.w	r8, r8, r1
 801c7f2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c7f6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c7fa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c7fe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c802:	4341      	muls	r1, r0
 801c804:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c808:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c80c:	ea4a 0202 	orr.w	r2, sl, r2
 801c810:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c814:	fb09 1108 	mla	r1, r9, r8, r1
 801c818:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c81c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c820:	fb0c 1102 	mla	r1, ip, r2, r1
 801c824:	ea4b 0505 	orr.w	r5, fp, r5
 801c828:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c82c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c830:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c834:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c838:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c83c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c840:	fa1f f28e 	uxth.w	r2, lr
 801c844:	2bff      	cmp	r3, #255	; 0xff
 801c846:	d103      	bne.n	801c850 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c848:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c84a:	29ff      	cmp	r1, #255	; 0xff
 801c84c:	f000 80de 	beq.w	801ca0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c850:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c852:	8838      	ldrh	r0, [r7, #0]
 801c854:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c856:	434b      	muls	r3, r1
 801c858:	f103 0c01 	add.w	ip, r3, #1
 801c85c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c860:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c864:	fa5f fc83 	uxtb.w	ip, r3
 801c868:	1203      	asrs	r3, r0, #8
 801c86a:	1215      	asrs	r5, r2, #8
 801c86c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c870:	fb13 f30c 	smulbb	r3, r3, ip
 801c874:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c878:	fb05 3501 	mla	r5, r5, r1, r3
 801c87c:	10c3      	asrs	r3, r0, #3
 801c87e:	10d1      	asrs	r1, r2, #3
 801c880:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c884:	fb13 f30c 	smulbb	r3, r3, ip
 801c888:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c88c:	fb01 3104 	mla	r1, r1, r4, r3
 801c890:	00c3      	lsls	r3, r0, #3
 801c892:	00d2      	lsls	r2, r2, #3
 801c894:	b2db      	uxtb	r3, r3
 801c896:	b2d2      	uxtb	r2, r2
 801c898:	fb13 f30c 	smulbb	r3, r3, ip
 801c89c:	b2ad      	uxth	r5, r5
 801c89e:	fb02 3304 	mla	r3, r2, r4, r3
 801c8a2:	b29a      	uxth	r2, r3
 801c8a4:	1c6b      	adds	r3, r5, #1
 801c8a6:	b289      	uxth	r1, r1
 801c8a8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c8ac:	1c53      	adds	r3, r2, #1
 801c8ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c8b2:	1c4a      	adds	r2, r1, #1
 801c8b4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c8b8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c8bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c8c0:	0949      	lsrs	r1, r1, #5
 801c8c2:	432b      	orrs	r3, r5
 801c8c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c8c8:	430b      	orrs	r3, r1
 801c8ca:	803b      	strh	r3, [r7, #0]
 801c8cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c8ce:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c8d0:	4413      	add	r3, r2
 801c8d2:	9321      	str	r3, [sp, #132]	; 0x84
 801c8d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c8d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c8d8:	441a      	add	r2, r3
 801c8da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c8dc:	9222      	str	r2, [sp, #136]	; 0x88
 801c8de:	3b01      	subs	r3, #1
 801c8e0:	3702      	adds	r7, #2
 801c8e2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c8e4:	e689      	b.n	801c5fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c8e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c8e8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c8ea:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c8ec:	4433      	add	r3, r6
 801c8ee:	9321      	str	r3, [sp, #132]	; 0x84
 801c8f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c8f2:	441c      	add	r4, r3
 801c8f4:	9b08      	ldr	r3, [sp, #32]
 801c8f6:	9422      	str	r4, [sp, #136]	; 0x88
 801c8f8:	3b01      	subs	r3, #1
 801c8fa:	9308      	str	r3, [sp, #32]
 801c8fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c8fe:	3302      	adds	r3, #2
 801c900:	9309      	str	r3, [sp, #36]	; 0x24
 801c902:	e658      	b.n	801c5b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c904:	d028      	beq.n	801c958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c906:	9b08      	ldr	r3, [sp, #32]
 801c908:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c90a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c90c:	3b01      	subs	r3, #1
 801c90e:	fb00 5003 	mla	r0, r0, r3, r5
 801c912:	1400      	asrs	r0, r0, #16
 801c914:	f53f ae6c 	bmi.w	801c5f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c918:	3901      	subs	r1, #1
 801c91a:	4288      	cmp	r0, r1
 801c91c:	f6bf ae68 	bge.w	801c5f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c920:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c922:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c924:	fb01 0303 	mla	r3, r1, r3, r0
 801c928:	141b      	asrs	r3, r3, #16
 801c92a:	f53f ae61 	bmi.w	801c5f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c92e:	3a01      	subs	r2, #1
 801c930:	4293      	cmp	r3, r2
 801c932:	f6bf ae5d 	bge.w	801c5f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c936:	9b08      	ldr	r3, [sp, #32]
 801c938:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c93c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c93e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c942:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c944:	2b00      	cmp	r3, #0
 801c946:	f300 8082 	bgt.w	801ca4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c94a:	9b08      	ldr	r3, [sp, #32]
 801c94c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c950:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c952:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c956:	9309      	str	r3, [sp, #36]	; 0x24
 801c958:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c95a:	2b00      	cmp	r3, #0
 801c95c:	f340 81ef 	ble.w	801cd3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c960:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c964:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c968:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c96c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c96e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c972:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c976:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c97a:	eef0 6a62 	vmov.f32	s13, s5
 801c97e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c982:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c986:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c98a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c98e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c992:	eef0 6a43 	vmov.f32	s13, s6
 801c996:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c99a:	ee12 2a90 	vmov	r2, s5
 801c99e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c9a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9a6:	ee13 2a10 	vmov	r2, s6
 801c9aa:	9323      	str	r3, [sp, #140]	; 0x8c
 801c9ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c9ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9b2:	9324      	str	r3, [sp, #144]	; 0x90
 801c9b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c9b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c9b8:	3b01      	subs	r3, #1
 801c9ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c9be:	9311      	str	r3, [sp, #68]	; 0x44
 801c9c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c9c2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c9c6:	bf08      	it	eq
 801c9c8:	4613      	moveq	r3, r2
 801c9ca:	9308      	str	r3, [sp, #32]
 801c9cc:	eeb0 3a67 	vmov.f32	s6, s15
 801c9d0:	eef0 2a47 	vmov.f32	s5, s14
 801c9d4:	e5e1      	b.n	801c59a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c9d6:	fb08 f505 	mul.w	r5, r8, r5
 801c9da:	fb09 5303 	mla	r3, r9, r3, r5
 801c9de:	e661      	b.n	801c6a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c9e0:	4681      	mov	r9, r0
 801c9e2:	e688      	b.n	801c6f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c9e4:	f1c1 0210 	rsb	r2, r1, #16
 801c9e8:	4341      	muls	r1, r0
 801c9ea:	fb09 1902 	mla	r9, r9, r2, r1
 801c9ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c9f2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c9f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c9fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c9fe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ca02:	ea42 0909 	orr.w	r9, r2, r9
 801ca06:	fa1f f289 	uxth.w	r2, r9
 801ca0a:	e71b      	b.n	801c844 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ca0c:	803a      	strh	r2, [r7, #0]
 801ca0e:	e75d      	b.n	801c8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ca10:	f115 0e01 	adds.w	lr, r5, #1
 801ca14:	f53f af5a 	bmi.w	801c8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ca18:	4572      	cmp	r2, lr
 801ca1a:	f6ff af57 	blt.w	801c8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ca1e:	f110 0e01 	adds.w	lr, r0, #1
 801ca22:	f53f af53 	bmi.w	801c8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ca26:	4573      	cmp	r3, lr
 801ca28:	f6ff af50 	blt.w	801c8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ca2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ca2e:	9502      	str	r5, [sp, #8]
 801ca30:	b21b      	sxth	r3, r3
 801ca32:	b212      	sxth	r2, r2
 801ca34:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801ca38:	9301      	str	r3, [sp, #4]
 801ca3a:	9200      	str	r2, [sp, #0]
 801ca3c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801ca40:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801ca44:	4639      	mov	r1, r7
 801ca46:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ca48:	f7ff fc04 	bl	801c254 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801ca4c:	e73e      	b.n	801c8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ca4e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ca50:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ca54:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ca56:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801ca5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca5c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ca60:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ca62:	141f      	asrs	r7, r3, #16
 801ca64:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ca66:	141b      	asrs	r3, r3, #16
 801ca68:	fb01 3707 	mla	r7, r1, r7, r3
 801ca6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ca6e:	fa1f fc82 	uxth.w	ip, r2
 801ca72:	eb03 0a07 	add.w	sl, r3, r7
 801ca76:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801ca7a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801ca7e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ca82:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801ca86:	b29b      	uxth	r3, r3
 801ca88:	2d00      	cmp	r5, #0
 801ca8a:	f000 813d 	beq.w	801cd08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801ca8e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801ca92:	940f      	str	r4, [sp, #60]	; 0x3c
 801ca94:	eb0a 0b01 	add.w	fp, sl, r1
 801ca98:	fa1f fa85 	uxth.w	sl, r5
 801ca9c:	fb0a fc0c 	mul.w	ip, sl, ip
 801caa0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801caa4:	fa1f fa8a 	uxth.w	sl, sl
 801caa8:	eba0 000c 	sub.w	r0, r0, ip
 801caac:	eba3 030a 	sub.w	r3, r3, sl
 801cab0:	b280      	uxth	r0, r0
 801cab2:	fb08 f000 	mul.w	r0, r8, r0
 801cab6:	b29b      	uxth	r3, r3
 801cab8:	fb09 0303 	mla	r3, r9, r3, r0
 801cabc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801cabe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cac2:	9410      	str	r4, [sp, #64]	; 0x40
 801cac4:	fb0a 3300 	mla	r3, sl, r0, r3
 801cac8:	fb0c 3304 	mla	r3, ip, r4, r3
 801cacc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cad0:	2b00      	cmp	r3, #0
 801cad2:	f000 810b 	beq.w	801ccec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cad6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801cad8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cada:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cade:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cae2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cae6:	f000 8114 	beq.w	801cd12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801caea:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801caee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801caf2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801caf6:	fb09 f707 	mul.w	r7, r9, r7
 801cafa:	fb0a fc0c 	mul.w	ip, sl, ip
 801cafe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cb02:	f107 0b20 	add.w	fp, r7, #32
 801cb06:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cb0a:	44cc      	add	ip, r9
 801cb0c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cb10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cb14:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cb18:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cb1c:	ea4c 0909 	orr.w	r9, ip, r9
 801cb20:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cb24:	8847      	ldrh	r7, [r0, #2]
 801cb26:	d019      	beq.n	801cb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801cb28:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cb2c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cb30:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cb34:	fb08 f807 	mul.w	r8, r8, r7
 801cb38:	fb0a fc0c 	mul.w	ip, sl, ip
 801cb3c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cb40:	f108 0b20 	add.w	fp, r8, #32
 801cb44:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cb48:	44bc      	add	ip, r7
 801cb4a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801cb4e:	0a3f      	lsrs	r7, r7, #8
 801cb50:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cb54:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cb58:	ea4c 0707 	orr.w	r7, ip, r7
 801cb5c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801cb60:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801cb64:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801cb68:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cb6c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cb70:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801cb74:	ea4c 0909 	orr.w	r9, ip, r9
 801cb78:	ea4a 0707 	orr.w	r7, sl, r7
 801cb7c:	2d00      	cmp	r5, #0
 801cb7e:	f000 80ca 	beq.w	801cd16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801cb82:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801cb86:	3901      	subs	r1, #1
 801cb88:	0049      	lsls	r1, r1, #1
 801cb8a:	3102      	adds	r1, #2
 801cb8c:	eb00 0c01 	add.w	ip, r0, r1
 801cb90:	5a41      	ldrh	r1, [r0, r1]
 801cb92:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801cb94:	28ff      	cmp	r0, #255	; 0xff
 801cb96:	d019      	beq.n	801cbcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801cb98:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801cb9a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801cb9e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cba2:	fb04 fa01 	mul.w	sl, r4, r1
 801cba6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cbaa:	fb08 f800 	mul.w	r8, r8, r0
 801cbae:	f10a 0020 	add.w	r0, sl, #32
 801cbb2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801cbb6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801cbba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cbbe:	4441      	add	r1, r8
 801cbc0:	0a00      	lsrs	r0, r0, #8
 801cbc2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801cbc6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cbca:	4301      	orrs	r1, r0
 801cbcc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801cbce:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801cbd2:	2cff      	cmp	r4, #255	; 0xff
 801cbd4:	d01a      	beq.n	801cc0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801cbd6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801cbda:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cbde:	fb04 fa00 	mul.w	sl, r4, r0
 801cbe2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cbe6:	fb08 f80c 	mul.w	r8, r8, ip
 801cbea:	f10a 0c20 	add.w	ip, sl, #32
 801cbee:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801cbf2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801cbf6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cbfa:	4440      	add	r0, r8
 801cbfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cc00:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801cc04:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801cc08:	ea40 000c 	orr.w	r0, r0, ip
 801cc0c:	fb15 fc02 	smulbb	ip, r5, r2
 801cc10:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801cc14:	f1c5 0810 	rsb	r8, r5, #16
 801cc18:	eba8 0802 	sub.w	r8, r8, r2
 801cc1c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cc20:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801cc24:	437a      	muls	r2, r7
 801cc26:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cc2a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801cc2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cc32:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cc36:	fb09 2208 	mla	r2, r9, r8, r2
 801cc3a:	ea4a 0101 	orr.w	r1, sl, r1
 801cc3e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801cc42:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cc46:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cc4a:	fb05 2201 	mla	r2, r5, r1, r2
 801cc4e:	ea4b 0000 	orr.w	r0, fp, r0
 801cc52:	fb0c 2200 	mla	r2, ip, r0, r2
 801cc56:	0d57      	lsrs	r7, r2, #21
 801cc58:	0952      	lsrs	r2, r2, #5
 801cc5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cc5e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cc62:	433a      	orrs	r2, r7
 801cc64:	2bff      	cmp	r3, #255	; 0xff
 801cc66:	b292      	uxth	r2, r2
 801cc68:	d102      	bne.n	801cc70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cc6a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cc6c:	29ff      	cmp	r1, #255	; 0xff
 801cc6e:	d063      	beq.n	801cd38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801cc70:	980a      	ldr	r0, [sp, #40]	; 0x28
 801cc72:	f8be 1000 	ldrh.w	r1, [lr]
 801cc76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cc78:	4343      	muls	r3, r0
 801cc7a:	1c58      	adds	r0, r3, #1
 801cc7c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801cc80:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cc84:	1208      	asrs	r0, r1, #8
 801cc86:	b2db      	uxtb	r3, r3
 801cc88:	1215      	asrs	r5, r2, #8
 801cc8a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cc8e:	fb10 f003 	smulbb	r0, r0, r3
 801cc92:	10cf      	asrs	r7, r1, #3
 801cc94:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cc98:	00c9      	lsls	r1, r1, #3
 801cc9a:	fb05 0504 	mla	r5, r5, r4, r0
 801cc9e:	b2c9      	uxtb	r1, r1
 801cca0:	10d0      	asrs	r0, r2, #3
 801cca2:	00d2      	lsls	r2, r2, #3
 801cca4:	fb11 f103 	smulbb	r1, r1, r3
 801cca8:	b2d2      	uxtb	r2, r2
 801ccaa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ccae:	fb02 1204 	mla	r2, r2, r4, r1
 801ccb2:	fb17 f703 	smulbb	r7, r7, r3
 801ccb6:	b2ad      	uxth	r5, r5
 801ccb8:	b292      	uxth	r2, r2
 801ccba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ccbe:	fb00 7004 	mla	r0, r0, r4, r7
 801ccc2:	1c6b      	adds	r3, r5, #1
 801ccc4:	1c57      	adds	r7, r2, #1
 801ccc6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ccca:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ccce:	b280      	uxth	r0, r0
 801ccd0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ccd4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ccd8:	433d      	orrs	r5, r7
 801ccda:	1c47      	adds	r7, r0, #1
 801ccdc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cce0:	097f      	lsrs	r7, r7, #5
 801cce2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cce6:	433d      	orrs	r5, r7
 801cce8:	f8ae 5000 	strh.w	r5, [lr]
 801ccec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ccee:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801ccf0:	4413      	add	r3, r2
 801ccf2:	9321      	str	r3, [sp, #132]	; 0x84
 801ccf4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801ccf6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ccf8:	441a      	add	r2, r3
 801ccfa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ccfc:	9222      	str	r2, [sp, #136]	; 0x88
 801ccfe:	3b01      	subs	r3, #1
 801cd00:	f10e 0e02 	add.w	lr, lr, #2
 801cd04:	9313      	str	r3, [sp, #76]	; 0x4c
 801cd06:	e61c      	b.n	801c942 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801cd08:	fb08 f000 	mul.w	r0, r8, r0
 801cd0c:	fb09 0303 	mla	r3, r9, r3, r0
 801cd10:	e6dc      	b.n	801cacc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801cd12:	46b9      	mov	r9, r7
 801cd14:	e704      	b.n	801cb20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801cd16:	f1c2 0110 	rsb	r1, r2, #16
 801cd1a:	437a      	muls	r2, r7
 801cd1c:	fb09 2901 	mla	r9, r9, r1, r2
 801cd20:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cd24:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801cd28:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801cd2c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd30:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cd34:	4302      	orrs	r2, r0
 801cd36:	e795      	b.n	801cc64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801cd38:	f8ae 2000 	strh.w	r2, [lr]
 801cd3c:	e7d6      	b.n	801ccec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cd3e:	b017      	add	sp, #92	; 0x5c
 801cd40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cd44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801cd44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd48:	b085      	sub	sp, #20
 801cd4a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801cd4e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801cd52:	9103      	str	r1, [sp, #12]
 801cd54:	fb00 7406 	mla	r4, r0, r6, r7
 801cd58:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801cd5c:	2800      	cmp	r0, #0
 801cd5e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801cd62:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801cd66:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801cd6a:	9501      	str	r5, [sp, #4]
 801cd6c:	eb02 0904 	add.w	r9, r2, r4
 801cd70:	f2c0 8141 	blt.w	801cff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cd74:	4583      	cmp	fp, r0
 801cd76:	f340 813e 	ble.w	801cff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cd7a:	2f00      	cmp	r7, #0
 801cd7c:	f2c0 8137 	blt.w	801cfee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cd80:	42be      	cmp	r6, r7
 801cd82:	f340 8134 	ble.w	801cfee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cd86:	f812 c004 	ldrb.w	ip, [r2, r4]
 801cd8a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801cd8e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cd92:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801cd96:	4355      	muls	r5, r2
 801cd98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cd9c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801cda0:	fb0c f203 	mul.w	r2, ip, r3
 801cda4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cda8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801cdac:	441d      	add	r5, r3
 801cdae:	f102 0320 	add.w	r3, r2, #32
 801cdb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cdb6:	0a1b      	lsrs	r3, r3, #8
 801cdb8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cdbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cdc0:	431c      	orrs	r4, r3
 801cdc2:	1c7b      	adds	r3, r7, #1
 801cdc4:	f100 811c 	bmi.w	801d000 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cdc8:	429e      	cmp	r6, r3
 801cdca:	f340 8119 	ble.w	801d000 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cdce:	2900      	cmp	r1, #0
 801cdd0:	f000 8119 	beq.w	801d006 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801cdd4:	9a01      	ldr	r2, [sp, #4]
 801cdd6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801cdda:	8855      	ldrh	r5, [r2, #2]
 801cddc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cde0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801cde4:	fb08 f802 	mul.w	r8, r8, r2
 801cde8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cdec:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801cdf0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801cdf4:	435d      	muls	r5, r3
 801cdf6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cdfa:	44d0      	add	r8, sl
 801cdfc:	f105 0a20 	add.w	sl, r5, #32
 801ce00:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ce04:	0a2d      	lsrs	r5, r5, #8
 801ce06:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ce0a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce0e:	432a      	orrs	r2, r5
 801ce10:	3001      	adds	r0, #1
 801ce12:	f100 80fe 	bmi.w	801d012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ce16:	4583      	cmp	fp, r0
 801ce18:	f340 80fb 	ble.w	801d012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ce1c:	f1be 0f00 	cmp.w	lr, #0
 801ce20:	f000 80fc 	beq.w	801d01c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801ce24:	2f00      	cmp	r7, #0
 801ce26:	f2c0 80f1 	blt.w	801d00c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ce2a:	42be      	cmp	r6, r7
 801ce2c:	f340 80ee 	ble.w	801d00c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ce30:	9801      	ldr	r0, [sp, #4]
 801ce32:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ce36:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ce3a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ce3e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801ce42:	fb0a fa00 	mul.w	sl, sl, r0
 801ce46:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801ce4a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ce4e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ce52:	fb05 f808 	mul.w	r8, r5, r8
 801ce56:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801ce5a:	4482      	add	sl, r0
 801ce5c:	f108 0020 	add.w	r0, r8, #32
 801ce60:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ce64:	0a00      	lsrs	r0, r0, #8
 801ce66:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ce6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce6e:	ea4b 0b00 	orr.w	fp, fp, r0
 801ce72:	3701      	adds	r7, #1
 801ce74:	f100 80d7 	bmi.w	801d026 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ce78:	42be      	cmp	r6, r7
 801ce7a:	f340 80d4 	ble.w	801d026 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ce7e:	2900      	cmp	r1, #0
 801ce80:	f000 80d4 	beq.w	801d02c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801ce84:	3601      	adds	r6, #1
 801ce86:	9801      	ldr	r0, [sp, #4]
 801ce88:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ce8c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ce90:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ce94:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801ce98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce9c:	fb09 f906 	mul.w	r9, r9, r6
 801cea0:	fb07 f800 	mul.w	r8, r7, r0
 801cea4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801cea8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ceac:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801ceb0:	44d1      	add	r9, sl
 801ceb2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ceb6:	f108 0020 	add.w	r0, r8, #32
 801ceba:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cebe:	0a00      	lsrs	r0, r0, #8
 801cec0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cec4:	4330      	orrs	r0, r6
 801cec6:	b28e      	uxth	r6, r1
 801cec8:	fa1f f98e 	uxth.w	r9, lr
 801cecc:	fb06 f809 	mul.w	r8, r6, r9
 801ced0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ced4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ced8:	0136      	lsls	r6, r6, #4
 801ceda:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cede:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801cee2:	9601      	str	r6, [sp, #4]
 801cee4:	ea4a 0404 	orr.w	r4, sl, r4
 801cee8:	fa1f f689 	uxth.w	r6, r9
 801ceec:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cef0:	fb11 f90e 	smulbb	r9, r1, lr
 801cef4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801cef8:	9602      	str	r6, [sp, #8]
 801cefa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cefe:	4626      	mov	r6, r4
 801cf00:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cf04:	f1ce 0410 	rsb	r4, lr, #16
 801cf08:	1a64      	subs	r4, r4, r1
 801cf0a:	ea4a 0202 	orr.w	r2, sl, r2
 801cf0e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801cf12:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cf16:	434a      	muls	r2, r1
 801cf18:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801cf1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cf20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cf24:	fb04 2406 	mla	r4, r4, r6, r2
 801cf28:	ea4a 0000 	orr.w	r0, sl, r0
 801cf2c:	fb09 4200 	mla	r2, r9, r0, r4
 801cf30:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801cf34:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801cf38:	9801      	ldr	r0, [sp, #4]
 801cf3a:	9903      	ldr	r1, [sp, #12]
 801cf3c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801cf40:	ea44 0b0b 	orr.w	fp, r4, fp
 801cf44:	9c02      	ldr	r4, [sp, #8]
 801cf46:	8809      	ldrh	r1, [r1, #0]
 801cf48:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801cf4c:	1b00      	subs	r0, r0, r4
 801cf4e:	9c01      	ldr	r4, [sp, #4]
 801cf50:	eba4 0608 	sub.w	r6, r4, r8
 801cf54:	b2b6      	uxth	r6, r6
 801cf56:	b280      	uxth	r0, r0
 801cf58:	4373      	muls	r3, r6
 801cf5a:	fb0c 3300 	mla	r3, ip, r0, r3
 801cf5e:	9802      	ldr	r0, [sp, #8]
 801cf60:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801cf64:	fb00 3505 	mla	r5, r0, r5, r3
 801cf68:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801cf6c:	fb08 5707 	mla	r7, r8, r7, r5
 801cf70:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cf74:	120b      	asrs	r3, r1, #8
 801cf76:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cf7a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801cf7e:	b2ff      	uxtb	r7, r7
 801cf80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf84:	10c8      	asrs	r0, r1, #3
 801cf86:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cf8a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801cf8e:	00c9      	lsls	r1, r1, #3
 801cf90:	437b      	muls	r3, r7
 801cf92:	ea42 0e0e 	orr.w	lr, r2, lr
 801cf96:	b2c9      	uxtb	r1, r1
 801cf98:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cf9c:	fa1f f28e 	uxth.w	r2, lr
 801cfa0:	4378      	muls	r0, r7
 801cfa2:	434f      	muls	r7, r1
 801cfa4:	1c59      	adds	r1, r3, #1
 801cfa6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cfaa:	1213      	asrs	r3, r2, #8
 801cfac:	f023 0307 	bic.w	r3, r3, #7
 801cfb0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cfb4:	1c41      	adds	r1, r0, #1
 801cfb6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cfba:	10d1      	asrs	r1, r2, #3
 801cfbc:	f021 0103 	bic.w	r1, r1, #3
 801cfc0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cfc4:	021b      	lsls	r3, r3, #8
 801cfc6:	00c9      	lsls	r1, r1, #3
 801cfc8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cfcc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cfd0:	430b      	orrs	r3, r1
 801cfd2:	1c79      	adds	r1, r7, #1
 801cfd4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cfd8:	00d2      	lsls	r2, r2, #3
 801cfda:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cfde:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cfe2:	431a      	orrs	r2, r3
 801cfe4:	9b03      	ldr	r3, [sp, #12]
 801cfe6:	801a      	strh	r2, [r3, #0]
 801cfe8:	b005      	add	sp, #20
 801cfea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfee:	f04f 0c00 	mov.w	ip, #0
 801cff2:	4664      	mov	r4, ip
 801cff4:	e6e5      	b.n	801cdc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cff6:	2300      	movs	r3, #0
 801cff8:	469c      	mov	ip, r3
 801cffa:	461a      	mov	r2, r3
 801cffc:	461c      	mov	r4, r3
 801cffe:	e707      	b.n	801ce10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d000:	2300      	movs	r3, #0
 801d002:	461a      	mov	r2, r3
 801d004:	e704      	b.n	801ce10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d006:	460b      	mov	r3, r1
 801d008:	460a      	mov	r2, r1
 801d00a:	e701      	b.n	801ce10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d00c:	2500      	movs	r5, #0
 801d00e:	46ab      	mov	fp, r5
 801d010:	e72f      	b.n	801ce72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d012:	2700      	movs	r7, #0
 801d014:	463d      	mov	r5, r7
 801d016:	4638      	mov	r0, r7
 801d018:	46bb      	mov	fp, r7
 801d01a:	e754      	b.n	801cec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d01c:	4677      	mov	r7, lr
 801d01e:	4675      	mov	r5, lr
 801d020:	4670      	mov	r0, lr
 801d022:	46f3      	mov	fp, lr
 801d024:	e74f      	b.n	801cec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d026:	2700      	movs	r7, #0
 801d028:	4638      	mov	r0, r7
 801d02a:	e74c      	b.n	801cec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d02c:	460f      	mov	r7, r1
 801d02e:	4608      	mov	r0, r1
 801d030:	e749      	b.n	801cec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d034 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d038:	b093      	sub	sp, #76	; 0x4c
 801d03a:	9210      	str	r2, [sp, #64]	; 0x40
 801d03c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801d03e:	910e      	str	r1, [sp, #56]	; 0x38
 801d040:	9306      	str	r3, [sp, #24]
 801d042:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801d046:	9011      	str	r0, [sp, #68]	; 0x44
 801d048:	6850      	ldr	r0, [r2, #4]
 801d04a:	6812      	ldr	r2, [r2, #0]
 801d04c:	fb00 1303 	mla	r3, r0, r3, r1
 801d050:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d054:	9307      	str	r3, [sp, #28]
 801d056:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d058:	681b      	ldr	r3, [r3, #0]
 801d05a:	9308      	str	r3, [sp, #32]
 801d05c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d05e:	685b      	ldr	r3, [r3, #4]
 801d060:	9309      	str	r3, [sp, #36]	; 0x24
 801d062:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d064:	2b00      	cmp	r3, #0
 801d066:	dc03      	bgt.n	801d070 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d068:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d06a:	2b00      	cmp	r3, #0
 801d06c:	f340 83b4 	ble.w	801d7d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d070:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d072:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d076:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d07a:	1e48      	subs	r0, r1, #1
 801d07c:	1e55      	subs	r5, r2, #1
 801d07e:	9b06      	ldr	r3, [sp, #24]
 801d080:	2b00      	cmp	r3, #0
 801d082:	f340 8163 	ble.w	801d34c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d086:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801d088:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d08a:	1436      	asrs	r6, r6, #16
 801d08c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d090:	d406      	bmi.n	801d0a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d092:	4286      	cmp	r6, r0
 801d094:	da04      	bge.n	801d0a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d096:	2b00      	cmp	r3, #0
 801d098:	db02      	blt.n	801d0a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d09a:	42ab      	cmp	r3, r5
 801d09c:	f2c0 8157 	blt.w	801d34e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d0a0:	3601      	adds	r6, #1
 801d0a2:	f100 8144 	bmi.w	801d32e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d0a6:	42b1      	cmp	r1, r6
 801d0a8:	f2c0 8141 	blt.w	801d32e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d0ac:	3301      	adds	r3, #1
 801d0ae:	f100 813e 	bmi.w	801d32e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d0b2:	429a      	cmp	r2, r3
 801d0b4:	f2c0 813b 	blt.w	801d32e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d0b8:	9b06      	ldr	r3, [sp, #24]
 801d0ba:	9f07      	ldr	r7, [sp, #28]
 801d0bc:	930f      	str	r3, [sp, #60]	; 0x3c
 801d0be:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d0c2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d0c4:	2b00      	cmp	r3, #0
 801d0c6:	f340 8164 	ble.w	801d392 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d0ca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d0cc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801d0ce:	1418      	asrs	r0, r3, #16
 801d0d0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d0d2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d0d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d0d8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d0dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d0de:	142d      	asrs	r5, r5, #16
 801d0e0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d0e4:	f100 81ee 	bmi.w	801d4c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d0e8:	f102 3eff 	add.w	lr, r2, #4294967295
 801d0ec:	4575      	cmp	r5, lr
 801d0ee:	f280 81e9 	bge.w	801d4c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d0f2:	2800      	cmp	r0, #0
 801d0f4:	f2c0 81e6 	blt.w	801d4c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d0f8:	f103 3eff 	add.w	lr, r3, #4294967295
 801d0fc:	4570      	cmp	r0, lr
 801d0fe:	f280 81e1 	bge.w	801d4c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d102:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d104:	b212      	sxth	r2, r2
 801d106:	fb00 5002 	mla	r0, r0, r2, r5
 801d10a:	fa1f fe81 	uxth.w	lr, r1
 801d10e:	eb03 0a00 	add.w	sl, r3, r0
 801d112:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d116:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d11a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d11e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801d122:	b29b      	uxth	r3, r3
 801d124:	f1bc 0f00 	cmp.w	ip, #0
 801d128:	f000 8179 	beq.w	801d41e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d12c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d130:	940a      	str	r4, [sp, #40]	; 0x28
 801d132:	eb0a 0b02 	add.w	fp, sl, r2
 801d136:	fa1f fa8c 	uxth.w	sl, ip
 801d13a:	fb0a fe0e 	mul.w	lr, sl, lr
 801d13e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d142:	fa1f fa8a 	uxth.w	sl, sl
 801d146:	eba5 050e 	sub.w	r5, r5, lr
 801d14a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d14e:	940b      	str	r4, [sp, #44]	; 0x2c
 801d150:	eba3 030a 	sub.w	r3, r3, sl
 801d154:	b2ad      	uxth	r5, r5
 801d156:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d158:	b29b      	uxth	r3, r3
 801d15a:	fb08 f505 	mul.w	r5, r8, r5
 801d15e:	fb09 5303 	mla	r3, r9, r3, r5
 801d162:	fb0a 3304 	mla	r3, sl, r4, r3
 801d166:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d168:	fb0e 3304 	mla	r3, lr, r4, r3
 801d16c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d170:	2b00      	cmp	r3, #0
 801d172:	f000 80cf 	beq.w	801d314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d176:	9c08      	ldr	r4, [sp, #32]
 801d178:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d17c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d180:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d184:	f000 8150 	beq.w	801d428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d188:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d18c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d190:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d194:	fb09 f000 	mul.w	r0, r9, r0
 801d198:	fb0a fe0e 	mul.w	lr, sl, lr
 801d19c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d1a0:	f100 0b20 	add.w	fp, r0, #32
 801d1a4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d1a8:	44ce      	add	lr, r9
 801d1aa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d1ae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d1b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d1b6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d1ba:	ea4e 0909 	orr.w	r9, lr, r9
 801d1be:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d1c2:	8868      	ldrh	r0, [r5, #2]
 801d1c4:	d019      	beq.n	801d1fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d1c6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d1ca:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d1ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d1d2:	fb08 f800 	mul.w	r8, r8, r0
 801d1d6:	fb0a fe0e 	mul.w	lr, sl, lr
 801d1da:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d1de:	f108 0b20 	add.w	fp, r8, #32
 801d1e2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d1e6:	4486      	add	lr, r0
 801d1e8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d1ec:	0a00      	lsrs	r0, r0, #8
 801d1ee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d1f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d1f6:	ea4e 0000 	orr.w	r0, lr, r0
 801d1fa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d1fe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d202:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d206:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d20a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d20e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d212:	ea4e 0909 	orr.w	r9, lr, r9
 801d216:	ea4a 0000 	orr.w	r0, sl, r0
 801d21a:	f1bc 0f00 	cmp.w	ip, #0
 801d21e:	f000 8105 	beq.w	801d42c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d222:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801d226:	3a01      	subs	r2, #1
 801d228:	0052      	lsls	r2, r2, #1
 801d22a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d22c:	3202      	adds	r2, #2
 801d22e:	2cff      	cmp	r4, #255	; 0xff
 801d230:	eb05 0e02 	add.w	lr, r5, r2
 801d234:	5aaa      	ldrh	r2, [r5, r2]
 801d236:	d018      	beq.n	801d26a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d238:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801d23c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d240:	fb04 fa02 	mul.w	sl, r4, r2
 801d244:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d248:	fb08 f805 	mul.w	r8, r8, r5
 801d24c:	f10a 0520 	add.w	r5, sl, #32
 801d250:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d254:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d258:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d25c:	4442      	add	r2, r8
 801d25e:	0a2d      	lsrs	r5, r5, #8
 801d260:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d264:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d268:	432a      	orrs	r2, r5
 801d26a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d26c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d270:	2cff      	cmp	r4, #255	; 0xff
 801d272:	d01a      	beq.n	801d2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d274:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801d278:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d27c:	fb04 fa05 	mul.w	sl, r4, r5
 801d280:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d284:	fb08 f80e 	mul.w	r8, r8, lr
 801d288:	f10a 0e20 	add.w	lr, sl, #32
 801d28c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d290:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d294:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d298:	4445      	add	r5, r8
 801d29a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d29e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d2a2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801d2a6:	ea45 050e 	orr.w	r5, r5, lr
 801d2aa:	fb1c fe01 	smulbb	lr, ip, r1
 801d2ae:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d2b2:	f1cc 0810 	rsb	r8, ip, #16
 801d2b6:	eba8 0801 	sub.w	r8, r8, r1
 801d2ba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d2be:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d2c2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d2c6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d2ca:	4341      	muls	r1, r0
 801d2cc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d2d0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d2d4:	ea4a 0202 	orr.w	r2, sl, r2
 801d2d8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d2dc:	fb09 1108 	mla	r1, r9, r8, r1
 801d2e0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d2e4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d2e8:	fb0c 1102 	mla	r1, ip, r2, r1
 801d2ec:	ea4b 0505 	orr.w	r5, fp, r5
 801d2f0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d2f4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d2f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d2fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d300:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d304:	ea42 0e0e 	orr.w	lr, r2, lr
 801d308:	fa1f f28e 	uxth.w	r2, lr
 801d30c:	2bff      	cmp	r3, #255	; 0xff
 801d30e:	f040 80a1 	bne.w	801d454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d312:	803a      	strh	r2, [r7, #0]
 801d314:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d316:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d318:	4413      	add	r3, r2
 801d31a:	931d      	str	r3, [sp, #116]	; 0x74
 801d31c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d31e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d320:	441a      	add	r2, r3
 801d322:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d324:	921e      	str	r2, [sp, #120]	; 0x78
 801d326:	3b01      	subs	r3, #1
 801d328:	3702      	adds	r7, #2
 801d32a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d32c:	e6c9      	b.n	801d0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d32e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d330:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801d332:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801d334:	4433      	add	r3, r6
 801d336:	931d      	str	r3, [sp, #116]	; 0x74
 801d338:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d33a:	441c      	add	r4, r3
 801d33c:	9b06      	ldr	r3, [sp, #24]
 801d33e:	941e      	str	r4, [sp, #120]	; 0x78
 801d340:	3b01      	subs	r3, #1
 801d342:	9306      	str	r3, [sp, #24]
 801d344:	9b07      	ldr	r3, [sp, #28]
 801d346:	3302      	adds	r3, #2
 801d348:	9307      	str	r3, [sp, #28]
 801d34a:	e698      	b.n	801d07e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d34c:	d028      	beq.n	801d3a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d34e:	9b06      	ldr	r3, [sp, #24]
 801d350:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d352:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801d354:	3b01      	subs	r3, #1
 801d356:	fb00 5003 	mla	r0, r0, r3, r5
 801d35a:	1400      	asrs	r0, r0, #16
 801d35c:	f53f aeac 	bmi.w	801d0b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d360:	3901      	subs	r1, #1
 801d362:	4288      	cmp	r0, r1
 801d364:	f6bf aea8 	bge.w	801d0b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d368:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d36a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801d36c:	fb01 0303 	mla	r3, r1, r3, r0
 801d370:	141b      	asrs	r3, r3, #16
 801d372:	f53f aea1 	bmi.w	801d0b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d376:	3a01      	subs	r2, #1
 801d378:	4293      	cmp	r3, r2
 801d37a:	f6bf ae9d 	bge.w	801d0b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d37e:	9b06      	ldr	r3, [sp, #24]
 801d380:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d384:	930f      	str	r3, [sp, #60]	; 0x3c
 801d386:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d38a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d38c:	2b00      	cmp	r3, #0
 801d38e:	f300 80b6 	bgt.w	801d4fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d392:	9b06      	ldr	r3, [sp, #24]
 801d394:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d398:	9b07      	ldr	r3, [sp, #28]
 801d39a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d39e:	9307      	str	r3, [sp, #28]
 801d3a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d3a2:	2b00      	cmp	r3, #0
 801d3a4:	f340 8218 	ble.w	801d7d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d3a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d3ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d3b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d3b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d3b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d3ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d3be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d3c2:	eef0 6a62 	vmov.f32	s13, s5
 801d3c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d3ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d3ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d3d2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801d3d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d3da:	eef0 6a43 	vmov.f32	s13, s6
 801d3de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d3e2:	ee12 2a90 	vmov	r2, s5
 801d3e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d3ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3ee:	ee13 2a10 	vmov	r2, s6
 801d3f2:	931f      	str	r3, [sp, #124]	; 0x7c
 801d3f4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d3f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3fa:	9320      	str	r3, [sp, #128]	; 0x80
 801d3fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d3fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d400:	3b01      	subs	r3, #1
 801d402:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d406:	930e      	str	r3, [sp, #56]	; 0x38
 801d408:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d40a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801d40e:	bf08      	it	eq
 801d410:	4613      	moveq	r3, r2
 801d412:	9306      	str	r3, [sp, #24]
 801d414:	eeb0 3a67 	vmov.f32	s6, s15
 801d418:	eef0 2a47 	vmov.f32	s5, s14
 801d41c:	e621      	b.n	801d062 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d41e:	fb08 f505 	mul.w	r5, r8, r5
 801d422:	fb09 5303 	mla	r3, r9, r3, r5
 801d426:	e6a1      	b.n	801d16c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d428:	4681      	mov	r9, r0
 801d42a:	e6c8      	b.n	801d1be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d42c:	f1c1 0210 	rsb	r2, r1, #16
 801d430:	4341      	muls	r1, r0
 801d432:	fb09 1902 	mla	r9, r9, r2, r1
 801d436:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d43a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d43e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d442:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d446:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d44a:	ea42 0909 	orr.w	r9, r2, r9
 801d44e:	fa1f f289 	uxth.w	r2, r9
 801d452:	e75b      	b.n	801d30c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d454:	f8b7 c000 	ldrh.w	ip, [r7]
 801d458:	43db      	mvns	r3, r3
 801d45a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d45e:	fa5f fe83 	uxtb.w	lr, r3
 801d462:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d466:	fb00 f00e 	mul.w	r0, r0, lr
 801d46a:	1c41      	adds	r1, r0, #1
 801d46c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d470:	1211      	asrs	r1, r2, #8
 801d472:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d476:	f021 0107 	bic.w	r1, r1, #7
 801d47a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d47e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d482:	48d7      	ldr	r0, [pc, #860]	; (801d7e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d484:	fb05 f50e 	mul.w	r5, r5, lr
 801d488:	b2c9      	uxtb	r1, r1
 801d48a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d48e:	1c69      	adds	r1, r5, #1
 801d490:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d494:	10d1      	asrs	r1, r2, #3
 801d496:	f021 0103 	bic.w	r1, r1, #3
 801d49a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d49e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d4a2:	b2db      	uxtb	r3, r3
 801d4a4:	00c9      	lsls	r1, r1, #3
 801d4a6:	fb03 f30e 	mul.w	r3, r3, lr
 801d4aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d4ae:	4301      	orrs	r1, r0
 801d4b0:	1c58      	adds	r0, r3, #1
 801d4b2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d4b6:	00d2      	lsls	r2, r2, #3
 801d4b8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d4bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d4c0:	430a      	orrs	r2, r1
 801d4c2:	e726      	b.n	801d312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d4c4:	f115 0e01 	adds.w	lr, r5, #1
 801d4c8:	f53f af24 	bmi.w	801d314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d4cc:	4572      	cmp	r2, lr
 801d4ce:	f6ff af21 	blt.w	801d314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d4d2:	f110 0e01 	adds.w	lr, r0, #1
 801d4d6:	f53f af1d 	bmi.w	801d314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d4da:	4573      	cmp	r3, lr
 801d4dc:	f6ff af1a 	blt.w	801d314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d4e0:	b21b      	sxth	r3, r3
 801d4e2:	b212      	sxth	r2, r2
 801d4e4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d4e8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d4ec:	9301      	str	r3, [sp, #4]
 801d4ee:	9200      	str	r2, [sp, #0]
 801d4f0:	4639      	mov	r1, r7
 801d4f2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d4f6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d4f8:	f7ff fc24 	bl	801cd44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d4fc:	e70a      	b.n	801d314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d4fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d500:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d504:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d506:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d50a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d50c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d510:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d512:	141f      	asrs	r7, r3, #16
 801d514:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d516:	141b      	asrs	r3, r3, #16
 801d518:	fb01 3707 	mla	r7, r1, r7, r3
 801d51c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d51e:	fa1f fc82 	uxth.w	ip, r2
 801d522:	eb03 0a07 	add.w	sl, r3, r7
 801d526:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d52a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d52e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d532:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d536:	b29b      	uxth	r3, r3
 801d538:	2d00      	cmp	r5, #0
 801d53a:	f000 80fe 	beq.w	801d73a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d53e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d542:	940c      	str	r4, [sp, #48]	; 0x30
 801d544:	eb0a 0b01 	add.w	fp, sl, r1
 801d548:	fa1f fa85 	uxth.w	sl, r5
 801d54c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d550:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d554:	fa1f fa8a 	uxth.w	sl, sl
 801d558:	eba0 000c 	sub.w	r0, r0, ip
 801d55c:	eba3 030a 	sub.w	r3, r3, sl
 801d560:	b280      	uxth	r0, r0
 801d562:	fb08 f000 	mul.w	r0, r8, r0
 801d566:	b29b      	uxth	r3, r3
 801d568:	fb09 0303 	mla	r3, r9, r3, r0
 801d56c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d56e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d572:	940d      	str	r4, [sp, #52]	; 0x34
 801d574:	fb0a 3300 	mla	r3, sl, r0, r3
 801d578:	fb0c 3304 	mla	r3, ip, r4, r3
 801d57c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d580:	2b00      	cmp	r3, #0
 801d582:	f000 80cc 	beq.w	801d71e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d586:	9808      	ldr	r0, [sp, #32]
 801d588:	9c08      	ldr	r4, [sp, #32]
 801d58a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d58e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d592:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d596:	f000 80d5 	beq.w	801d744 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d59a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d59e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d5a2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d5a6:	fb09 f707 	mul.w	r7, r9, r7
 801d5aa:	fb0a fc0c 	mul.w	ip, sl, ip
 801d5ae:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d5b2:	f107 0b20 	add.w	fp, r7, #32
 801d5b6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d5ba:	44cc      	add	ip, r9
 801d5bc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d5c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d5c4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d5c8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d5cc:	ea4c 0909 	orr.w	r9, ip, r9
 801d5d0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d5d4:	8847      	ldrh	r7, [r0, #2]
 801d5d6:	d019      	beq.n	801d60c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d5d8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d5dc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d5e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d5e4:	fb08 f807 	mul.w	r8, r8, r7
 801d5e8:	fb0a fc0c 	mul.w	ip, sl, ip
 801d5ec:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d5f0:	f108 0b20 	add.w	fp, r8, #32
 801d5f4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d5f8:	44bc      	add	ip, r7
 801d5fa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d5fe:	0a3f      	lsrs	r7, r7, #8
 801d600:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d604:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d608:	ea4c 0707 	orr.w	r7, ip, r7
 801d60c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d610:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d614:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d618:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d61c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d620:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d624:	ea4c 0909 	orr.w	r9, ip, r9
 801d628:	ea4a 0707 	orr.w	r7, sl, r7
 801d62c:	2d00      	cmp	r5, #0
 801d62e:	f000 808b 	beq.w	801d748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d632:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d636:	3901      	subs	r1, #1
 801d638:	0049      	lsls	r1, r1, #1
 801d63a:	3102      	adds	r1, #2
 801d63c:	eb00 0c01 	add.w	ip, r0, r1
 801d640:	5a41      	ldrh	r1, [r0, r1]
 801d642:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d644:	28ff      	cmp	r0, #255	; 0xff
 801d646:	d019      	beq.n	801d67c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d648:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d64a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d64e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d652:	fb04 fa01 	mul.w	sl, r4, r1
 801d656:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d65a:	fb08 f800 	mul.w	r8, r8, r0
 801d65e:	f10a 0020 	add.w	r0, sl, #32
 801d662:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d666:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d66a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d66e:	4441      	add	r1, r8
 801d670:	0a00      	lsrs	r0, r0, #8
 801d672:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d676:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d67a:	4301      	orrs	r1, r0
 801d67c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d67e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d682:	2cff      	cmp	r4, #255	; 0xff
 801d684:	d01a      	beq.n	801d6bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d686:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d68a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d68e:	fb04 fa00 	mul.w	sl, r4, r0
 801d692:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d696:	fb08 f80c 	mul.w	r8, r8, ip
 801d69a:	f10a 0c20 	add.w	ip, sl, #32
 801d69e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d6a2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d6a6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d6aa:	4440      	add	r0, r8
 801d6ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d6b0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d6b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d6b8:	ea40 000c 	orr.w	r0, r0, ip
 801d6bc:	fb15 fc02 	smulbb	ip, r5, r2
 801d6c0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d6c4:	f1c5 0810 	rsb	r8, r5, #16
 801d6c8:	eba8 0802 	sub.w	r8, r8, r2
 801d6cc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d6d0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d6d4:	437a      	muls	r2, r7
 801d6d6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d6da:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d6de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d6e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d6e6:	fb09 2208 	mla	r2, r9, r8, r2
 801d6ea:	ea4a 0101 	orr.w	r1, sl, r1
 801d6ee:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d6f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d6f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d6fa:	fb05 2201 	mla	r2, r5, r1, r2
 801d6fe:	ea4b 0000 	orr.w	r0, fp, r0
 801d702:	fb0c 2200 	mla	r2, ip, r0, r2
 801d706:	0d57      	lsrs	r7, r2, #21
 801d708:	0952      	lsrs	r2, r2, #5
 801d70a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d70e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d712:	433a      	orrs	r2, r7
 801d714:	2bff      	cmp	r3, #255	; 0xff
 801d716:	b292      	uxth	r2, r2
 801d718:	d127      	bne.n	801d76a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d71a:	f8ae 2000 	strh.w	r2, [lr]
 801d71e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d720:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d722:	4413      	add	r3, r2
 801d724:	931d      	str	r3, [sp, #116]	; 0x74
 801d726:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d728:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d72a:	441a      	add	r2, r3
 801d72c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d72e:	921e      	str	r2, [sp, #120]	; 0x78
 801d730:	3b01      	subs	r3, #1
 801d732:	f10e 0e02 	add.w	lr, lr, #2
 801d736:	930f      	str	r3, [sp, #60]	; 0x3c
 801d738:	e627      	b.n	801d38a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d73a:	fb08 f000 	mul.w	r0, r8, r0
 801d73e:	fb09 0303 	mla	r3, r9, r3, r0
 801d742:	e71b      	b.n	801d57c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d744:	46b9      	mov	r9, r7
 801d746:	e743      	b.n	801d5d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d748:	f1c2 0110 	rsb	r1, r2, #16
 801d74c:	437a      	muls	r2, r7
 801d74e:	fb09 2901 	mla	r9, r9, r1, r2
 801d752:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d756:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d75a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d75e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d762:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d766:	4302      	orrs	r2, r0
 801d768:	e7d4      	b.n	801d714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d76a:	f8be 7000 	ldrh.w	r7, [lr]
 801d76e:	4c1c      	ldr	r4, [pc, #112]	; (801d7e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d770:	43db      	mvns	r3, r3
 801d772:	1238      	asrs	r0, r7, #8
 801d774:	fa5f fc83 	uxtb.w	ip, r3
 801d778:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d77c:	10fd      	asrs	r5, r7, #3
 801d77e:	fb00 f00c 	mul.w	r0, r0, ip
 801d782:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d786:	fb05 f10c 	mul.w	r1, r5, ip
 801d78a:	1c45      	adds	r5, r0, #1
 801d78c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d790:	1215      	asrs	r5, r2, #8
 801d792:	f025 0507 	bic.w	r5, r5, #7
 801d796:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d79a:	1c4d      	adds	r5, r1, #1
 801d79c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d7a0:	10d1      	asrs	r1, r2, #3
 801d7a2:	f021 0103 	bic.w	r1, r1, #3
 801d7a6:	00fb      	lsls	r3, r7, #3
 801d7a8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d7ac:	b2db      	uxtb	r3, r3
 801d7ae:	b2c0      	uxtb	r0, r0
 801d7b0:	00c9      	lsls	r1, r1, #3
 801d7b2:	fb03 f30c 	mul.w	r3, r3, ip
 801d7b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d7ba:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d7be:	4308      	orrs	r0, r1
 801d7c0:	1c59      	adds	r1, r3, #1
 801d7c2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d7c6:	00d2      	lsls	r2, r2, #3
 801d7c8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d7cc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d7d0:	4318      	orrs	r0, r3
 801d7d2:	f8ae 0000 	strh.w	r0, [lr]
 801d7d6:	e7a2      	b.n	801d71e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d7d8:	b013      	add	sp, #76	; 0x4c
 801d7da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7de:	bf00      	nop
 801d7e0:	fffff800 	.word	0xfffff800

0801d7e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d7e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d7e8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d7ec:	fb05 4c03 	mla	ip, r5, r3, r4
 801d7f0:	2d00      	cmp	r5, #0
 801d7f2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d7f6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d7fa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d7fe:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d802:	8808      	ldrh	r0, [r1, #0]
 801d804:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d808:	f2c0 80a7 	blt.w	801d95a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d80c:	45aa      	cmp	sl, r5
 801d80e:	f340 80a4 	ble.w	801d95a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d812:	2c00      	cmp	r4, #0
 801d814:	f2c0 809f 	blt.w	801d956 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d818:	42a3      	cmp	r3, r4
 801d81a:	f340 809c 	ble.w	801d956 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d81e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d822:	1c62      	adds	r2, r4, #1
 801d824:	f100 809c 	bmi.w	801d960 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d828:	4293      	cmp	r3, r2
 801d82a:	f340 8099 	ble.w	801d960 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d82e:	f1b9 0f00 	cmp.w	r9, #0
 801d832:	f000 8095 	beq.w	801d960 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d836:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d83a:	3501      	adds	r5, #1
 801d83c:	f100 8094 	bmi.w	801d968 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d840:	45aa      	cmp	sl, r5
 801d842:	f340 8091 	ble.w	801d968 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d846:	2f00      	cmp	r7, #0
 801d848:	f000 808e 	beq.w	801d968 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d84c:	2c00      	cmp	r4, #0
 801d84e:	f2c0 8089 	blt.w	801d964 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d852:	42a3      	cmp	r3, r4
 801d854:	f340 8086 	ble.w	801d964 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d858:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d85c:	3401      	adds	r4, #1
 801d85e:	f100 8086 	bmi.w	801d96e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d862:	42a3      	cmp	r3, r4
 801d864:	f340 8083 	ble.w	801d96e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d868:	f1b9 0f00 	cmp.w	r9, #0
 801d86c:	d07f      	beq.n	801d96e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d86e:	3301      	adds	r3, #1
 801d870:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d874:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d878:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d87c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d880:	fb19 fe07 	smulbb	lr, r9, r7
 801d884:	ea44 0808 	orr.w	r8, r4, r8
 801d888:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d88c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d890:	f1c7 0210 	rsb	r2, r7, #16
 801d894:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d898:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d89c:	ea44 0c0c 	orr.w	ip, r4, ip
 801d8a0:	eba2 0209 	sub.w	r2, r2, r9
 801d8a4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d8a8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d8ac:	fb04 f40c 	mul.w	r4, r4, ip
 801d8b0:	fb02 4808 	mla	r8, r2, r8, r4
 801d8b4:	041a      	lsls	r2, r3, #16
 801d8b6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d8ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d8be:	4313      	orrs	r3, r2
 801d8c0:	042a      	lsls	r2, r5, #16
 801d8c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d8c6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d8ca:	fb0e 8303 	mla	r3, lr, r3, r8
 801d8ce:	432a      	orrs	r2, r5
 801d8d0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d8d4:	fb07 3202 	mla	r2, r7, r2, r3
 801d8d8:	0d53      	lsrs	r3, r2, #21
 801d8da:	0952      	lsrs	r2, r2, #5
 801d8dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d8e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d8e4:	431a      	orrs	r2, r3
 801d8e6:	b293      	uxth	r3, r2
 801d8e8:	b2b4      	uxth	r4, r6
 801d8ea:	1202      	asrs	r2, r0, #8
 801d8ec:	43f6      	mvns	r6, r6
 801d8ee:	b2f6      	uxtb	r6, r6
 801d8f0:	121d      	asrs	r5, r3, #8
 801d8f2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d8f6:	fb12 f206 	smulbb	r2, r2, r6
 801d8fa:	10c7      	asrs	r7, r0, #3
 801d8fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d900:	00c0      	lsls	r0, r0, #3
 801d902:	fb05 2504 	mla	r5, r5, r4, r2
 801d906:	b2c0      	uxtb	r0, r0
 801d908:	10da      	asrs	r2, r3, #3
 801d90a:	00db      	lsls	r3, r3, #3
 801d90c:	b2db      	uxtb	r3, r3
 801d90e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d912:	fb10 f006 	smulbb	r0, r0, r6
 801d916:	b2ad      	uxth	r5, r5
 801d918:	fb03 0004 	mla	r0, r3, r4, r0
 801d91c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d920:	fb17 f706 	smulbb	r7, r7, r6
 801d924:	b280      	uxth	r0, r0
 801d926:	1c6b      	adds	r3, r5, #1
 801d928:	fb02 7204 	mla	r2, r2, r4, r7
 801d92c:	b292      	uxth	r2, r2
 801d92e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d932:	1c43      	adds	r3, r0, #1
 801d934:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d938:	1c50      	adds	r0, r2, #1
 801d93a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d93e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d942:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d946:	0952      	lsrs	r2, r2, #5
 801d948:	432b      	orrs	r3, r5
 801d94a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d94e:	4313      	orrs	r3, r2
 801d950:	800b      	strh	r3, [r1, #0]
 801d952:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d956:	4680      	mov	r8, r0
 801d958:	e763      	b.n	801d822 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d95a:	4684      	mov	ip, r0
 801d95c:	4680      	mov	r8, r0
 801d95e:	e76c      	b.n	801d83a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d960:	4684      	mov	ip, r0
 801d962:	e76a      	b.n	801d83a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d964:	4605      	mov	r5, r0
 801d966:	e779      	b.n	801d85c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d968:	4603      	mov	r3, r0
 801d96a:	4605      	mov	r5, r0
 801d96c:	e782      	b.n	801d874 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d96e:	4603      	mov	r3, r0
 801d970:	e780      	b.n	801d874 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d972 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d972:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d976:	b093      	sub	sp, #76	; 0x4c
 801d978:	461d      	mov	r5, r3
 801d97a:	9210      	str	r2, [sp, #64]	; 0x40
 801d97c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d97e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d982:	920b      	str	r2, [sp, #44]	; 0x2c
 801d984:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d988:	910a      	str	r1, [sp, #40]	; 0x28
 801d98a:	6859      	ldr	r1, [r3, #4]
 801d98c:	681b      	ldr	r3, [r3, #0]
 801d98e:	9011      	str	r0, [sp, #68]	; 0x44
 801d990:	fb01 2707 	mla	r7, r1, r7, r2
 801d994:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d998:	9307      	str	r3, [sp, #28]
 801d99a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d99c:	681b      	ldr	r3, [r3, #0]
 801d99e:	9309      	str	r3, [sp, #36]	; 0x24
 801d9a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d9a2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d9a6:	43db      	mvns	r3, r3
 801d9a8:	b2db      	uxtb	r3, r3
 801d9aa:	9308      	str	r3, [sp, #32]
 801d9ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d9ae:	2b00      	cmp	r3, #0
 801d9b0:	dc03      	bgt.n	801d9ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d9b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d9b4:	2b00      	cmp	r3, #0
 801d9b6:	f340 8203 	ble.w	801ddc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d9ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d9bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d9c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d9c4:	1e48      	subs	r0, r1, #1
 801d9c6:	f102 3cff 	add.w	ip, r2, #4294967295
 801d9ca:	2d00      	cmp	r5, #0
 801d9cc:	f340 80da 	ble.w	801db84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d9d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d9d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d9d8:	d406      	bmi.n	801d9e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d9da:	4586      	cmp	lr, r0
 801d9dc:	da04      	bge.n	801d9e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d9de:	2b00      	cmp	r3, #0
 801d9e0:	db02      	blt.n	801d9e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d9e2:	4563      	cmp	r3, ip
 801d9e4:	f2c0 80cf 	blt.w	801db86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d9e8:	f11e 0e01 	adds.w	lr, lr, #1
 801d9ec:	f100 80c1 	bmi.w	801db72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d9f0:	4571      	cmp	r1, lr
 801d9f2:	f2c0 80be 	blt.w	801db72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d9f6:	3301      	adds	r3, #1
 801d9f8:	f100 80bb 	bmi.w	801db72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d9fc:	429a      	cmp	r2, r3
 801d9fe:	f2c0 80b8 	blt.w	801db72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801da02:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801da06:	46a9      	mov	r9, r5
 801da08:	f1b9 0f00 	cmp.w	r9, #0
 801da0c:	f340 80d8 	ble.w	801dbc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801da10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801da12:	1421      	asrs	r1, r4, #16
 801da14:	ea4f 4026 	mov.w	r0, r6, asr #16
 801da18:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801da1c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801da20:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801da24:	f100 8111 	bmi.w	801dc4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801da28:	f10e 3aff 	add.w	sl, lr, #4294967295
 801da2c:	4551      	cmp	r1, sl
 801da2e:	f280 810c 	bge.w	801dc4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801da32:	2800      	cmp	r0, #0
 801da34:	f2c0 8109 	blt.w	801dc4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801da38:	f103 3aff 	add.w	sl, r3, #4294967295
 801da3c:	4550      	cmp	r0, sl
 801da3e:	f280 8104 	bge.w	801dc4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801da42:	fa0f f38e 	sxth.w	r3, lr
 801da46:	fb00 1103 	mla	r1, r0, r3, r1
 801da4a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801da4c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801da50:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801da54:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801da58:	f1bc 0f00 	cmp.w	ip, #0
 801da5c:	d007      	beq.n	801da6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801da5e:	005b      	lsls	r3, r3, #1
 801da60:	eb0a 0003 	add.w	r0, sl, r3
 801da64:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801da68:	930c      	str	r3, [sp, #48]	; 0x30
 801da6a:	8843      	ldrh	r3, [r0, #2]
 801da6c:	930d      	str	r3, [sp, #52]	; 0x34
 801da6e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801da72:	fb12 f30c 	smulbb	r3, r2, ip
 801da76:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801da7a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801da7e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801da82:	10db      	asrs	r3, r3, #3
 801da84:	ea40 000e 	orr.w	r0, r0, lr
 801da88:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801da8c:	f1cc 0e10 	rsb	lr, ip, #16
 801da90:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801da94:	ebae 0e02 	sub.w	lr, lr, r2
 801da98:	ea4a 0101 	orr.w	r1, sl, r1
 801da9c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801daa0:	4351      	muls	r1, r2
 801daa2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801daa4:	9f08      	ldr	r7, [sp, #32]
 801daa6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801daaa:	fb0e 1e00 	mla	lr, lr, r0, r1
 801daae:	0410      	lsls	r0, r2, #16
 801dab0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dab4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dab8:	4310      	orrs	r0, r2
 801daba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dabc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dabe:	0412      	lsls	r2, r2, #16
 801dac0:	fb03 e000 	mla	r0, r3, r0, lr
 801dac4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dac8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801dacc:	ea42 020e 	orr.w	r2, r2, lr
 801dad0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dad4:	fb03 0302 	mla	r3, r3, r2, r0
 801dad8:	0d5a      	lsrs	r2, r3, #21
 801dada:	095b      	lsrs	r3, r3, #5
 801dadc:	f8b8 0000 	ldrh.w	r0, [r8]
 801dae0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dae4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dae8:	4313      	orrs	r3, r2
 801daea:	b29b      	uxth	r3, r3
 801daec:	1201      	asrs	r1, r0, #8
 801daee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801daf2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801daf6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801dafa:	fb11 f107 	smulbb	r1, r1, r7
 801dafe:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801db02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801db06:	00c0      	lsls	r0, r0, #3
 801db08:	fb0c 1c02 	mla	ip, ip, r2, r1
 801db0c:	b2c0      	uxtb	r0, r0
 801db0e:	10d9      	asrs	r1, r3, #3
 801db10:	00db      	lsls	r3, r3, #3
 801db12:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801db16:	b2db      	uxtb	r3, r3
 801db18:	fb10 f007 	smulbb	r0, r0, r7
 801db1c:	fa1f fc8c 	uxth.w	ip, ip
 801db20:	fb03 0302 	mla	r3, r3, r2, r0
 801db24:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801db28:	fb1e fe07 	smulbb	lr, lr, r7
 801db2c:	fb01 e102 	mla	r1, r1, r2, lr
 801db30:	b29a      	uxth	r2, r3
 801db32:	f10c 0301 	add.w	r3, ip, #1
 801db36:	b289      	uxth	r1, r1
 801db38:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801db3c:	1c53      	adds	r3, r2, #1
 801db3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801db42:	1c4a      	adds	r2, r1, #1
 801db44:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801db48:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801db4c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801db50:	0949      	lsrs	r1, r1, #5
 801db52:	ea43 030c 	orr.w	r3, r3, ip
 801db56:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801db5a:	430b      	orrs	r3, r1
 801db5c:	f8a8 3000 	strh.w	r3, [r8]
 801db60:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801db62:	441c      	add	r4, r3
 801db64:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801db66:	f108 0802 	add.w	r8, r8, #2
 801db6a:	441e      	add	r6, r3
 801db6c:	f109 39ff 	add.w	r9, r9, #4294967295
 801db70:	e74a      	b.n	801da08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801db72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801db74:	441c      	add	r4, r3
 801db76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801db78:	441e      	add	r6, r3
 801db7a:	9b07      	ldr	r3, [sp, #28]
 801db7c:	3302      	adds	r3, #2
 801db7e:	3d01      	subs	r5, #1
 801db80:	9307      	str	r3, [sp, #28]
 801db82:	e722      	b.n	801d9ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801db84:	d022      	beq.n	801dbcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801db86:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801db88:	1e6b      	subs	r3, r5, #1
 801db8a:	fb00 4003 	mla	r0, r0, r3, r4
 801db8e:	1400      	asrs	r0, r0, #16
 801db90:	f53f af37 	bmi.w	801da02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801db94:	3901      	subs	r1, #1
 801db96:	4288      	cmp	r0, r1
 801db98:	f6bf af33 	bge.w	801da02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801db9c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801db9e:	fb01 6303 	mla	r3, r1, r3, r6
 801dba2:	141b      	asrs	r3, r3, #16
 801dba4:	f53f af2d 	bmi.w	801da02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dba8:	3a01      	subs	r2, #1
 801dbaa:	4293      	cmp	r3, r2
 801dbac:	f6bf af29 	bge.w	801da02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dbb0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801dbb4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801dbb8:	46a8      	mov	r8, r5
 801dbba:	f1b8 0f00 	cmp.w	r8, #0
 801dbbe:	dc5e      	bgt.n	801dc7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801dbc0:	9b07      	ldr	r3, [sp, #28]
 801dbc2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dbc6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801dbca:	9307      	str	r3, [sp, #28]
 801dbcc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dbce:	2b00      	cmp	r3, #0
 801dbd0:	f340 80f6 	ble.w	801ddc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801dbd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dbd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dbdc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dbe0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dbe2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dbe6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dbea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dbee:	eef0 6a62 	vmov.f32	s13, s5
 801dbf2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dbf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbfa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dbfe:	ee16 4a90 	vmov	r4, s13
 801dc02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dc06:	eef0 6a43 	vmov.f32	s13, s6
 801dc0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dc0e:	ee12 2a90 	vmov	r2, s5
 801dc12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dc16:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc1a:	ee13 2a10 	vmov	r2, s6
 801dc1e:	931f      	str	r3, [sp, #124]	; 0x7c
 801dc20:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc22:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc26:	9320      	str	r3, [sp, #128]	; 0x80
 801dc28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dc2a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dc2c:	3b01      	subs	r3, #1
 801dc2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc32:	930a      	str	r3, [sp, #40]	; 0x28
 801dc34:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc36:	ee16 6a90 	vmov	r6, s13
 801dc3a:	bf14      	ite	ne
 801dc3c:	461d      	movne	r5, r3
 801dc3e:	4615      	moveq	r5, r2
 801dc40:	eeb0 3a67 	vmov.f32	s6, s15
 801dc44:	eef0 2a47 	vmov.f32	s5, s14
 801dc48:	e6b0      	b.n	801d9ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801dc4a:	f111 0a01 	adds.w	sl, r1, #1
 801dc4e:	d487      	bmi.n	801db60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dc50:	45d6      	cmp	lr, sl
 801dc52:	db85      	blt.n	801db60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dc54:	f110 0a01 	adds.w	sl, r0, #1
 801dc58:	d482      	bmi.n	801db60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dc5a:	4553      	cmp	r3, sl
 801dc5c:	db80      	blt.n	801db60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dc5e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801dc60:	9101      	str	r1, [sp, #4]
 801dc62:	b21b      	sxth	r3, r3
 801dc64:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801dc68:	9300      	str	r3, [sp, #0]
 801dc6a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801dc6e:	fa0f f38e 	sxth.w	r3, lr
 801dc72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dc74:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dc76:	4641      	mov	r1, r8
 801dc78:	f7ff fdb4 	bl	801d7e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801dc7c:	e770      	b.n	801db60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dc7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc80:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801dc82:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc86:	1430      	asrs	r0, r6, #16
 801dc88:	1423      	asrs	r3, r4, #16
 801dc8a:	fb01 3000 	mla	r0, r1, r0, r3
 801dc8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc90:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801dc94:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801dc98:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dc9c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dca0:	8858      	ldrh	r0, [r3, #2]
 801dca2:	f1be 0f00 	cmp.w	lr, #0
 801dca6:	d00b      	beq.n	801dcc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801dca8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801dcac:	3901      	subs	r1, #1
 801dcae:	0049      	lsls	r1, r1, #1
 801dcb0:	3102      	adds	r1, #2
 801dcb2:	eb03 0b01 	add.w	fp, r3, r1
 801dcb6:	5a5b      	ldrh	r3, [r3, r1]
 801dcb8:	930e      	str	r3, [sp, #56]	; 0x38
 801dcba:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dcbe:	930f      	str	r3, [sp, #60]	; 0x3c
 801dcc0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801dcc4:	fb12 f30e 	smulbb	r3, r2, lr
 801dcc8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dccc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801dcd0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801dcd4:	10db      	asrs	r3, r3, #3
 801dcd6:	ea41 010c 	orr.w	r1, r1, ip
 801dcda:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dcde:	f1ce 0c10 	rsb	ip, lr, #16
 801dce2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dce6:	ebac 0c02 	sub.w	ip, ip, r2
 801dcea:	ea4b 0000 	orr.w	r0, fp, r0
 801dcee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dcf2:	4350      	muls	r0, r2
 801dcf4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dcf6:	9f08      	ldr	r7, [sp, #32]
 801dcf8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dcfc:	fb0c 0c01 	mla	ip, ip, r1, r0
 801dd00:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dd04:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801dd08:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801dd0a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dd0c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dd10:	0412      	lsls	r2, r2, #16
 801dd12:	ea4b 0101 	orr.w	r1, fp, r1
 801dd16:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dd1a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dd1e:	fb03 c101 	mla	r1, r3, r1, ip
 801dd22:	4302      	orrs	r2, r0
 801dd24:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dd28:	fb03 1202 	mla	r2, r3, r2, r1
 801dd2c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801dd30:	0952      	lsrs	r2, r2, #5
 801dd32:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801dd36:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801dd3a:	f8b9 2000 	ldrh.w	r2, [r9]
 801dd3e:	ea4b 0303 	orr.w	r3, fp, r3
 801dd42:	b29b      	uxth	r3, r3
 801dd44:	1211      	asrs	r1, r2, #8
 801dd46:	1218      	asrs	r0, r3, #8
 801dd48:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801dd4c:	fb11 f107 	smulbb	r1, r1, r7
 801dd50:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801dd54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dd58:	00d2      	lsls	r2, r2, #3
 801dd5a:	fb00 100a 	mla	r0, r0, sl, r1
 801dd5e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801dd62:	10d9      	asrs	r1, r3, #3
 801dd64:	b2d2      	uxtb	r2, r2
 801dd66:	00db      	lsls	r3, r3, #3
 801dd68:	fb1c fc07 	smulbb	ip, ip, r7
 801dd6c:	fb12 f207 	smulbb	r2, r2, r7
 801dd70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dd74:	b2db      	uxtb	r3, r3
 801dd76:	b280      	uxth	r0, r0
 801dd78:	fb01 c10a 	mla	r1, r1, sl, ip
 801dd7c:	fb03 230a 	mla	r3, r3, sl, r2
 801dd80:	b29b      	uxth	r3, r3
 801dd82:	b289      	uxth	r1, r1
 801dd84:	1c42      	adds	r2, r0, #1
 801dd86:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dd8a:	f101 0c01 	add.w	ip, r1, #1
 801dd8e:	1c5a      	adds	r2, r3, #1
 801dd90:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801dd94:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801dd98:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dd9a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801dd9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dda2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dda6:	4310      	orrs	r0, r2
 801dda8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ddac:	441c      	add	r4, r3
 801ddae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ddb0:	ea40 000c 	orr.w	r0, r0, ip
 801ddb4:	f829 0b02 	strh.w	r0, [r9], #2
 801ddb8:	441e      	add	r6, r3
 801ddba:	f108 38ff 	add.w	r8, r8, #4294967295
 801ddbe:	e6fc      	b.n	801dbba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801ddc0:	b013      	add	sp, #76	; 0x4c
 801ddc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ddc6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801ddc6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ddca:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801ddce:	fb0e 4703 	mla	r7, lr, r3, r4
 801ddd2:	f1be 0f00 	cmp.w	lr, #0
 801ddd6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801ddda:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801ddde:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801dde2:	8808      	ldrh	r0, [r1, #0]
 801dde4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801dde8:	db60      	blt.n	801deac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ddea:	45f1      	cmp	r9, lr
 801ddec:	dd5e      	ble.n	801deac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ddee:	2c00      	cmp	r4, #0
 801ddf0:	db5a      	blt.n	801dea8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ddf2:	42a3      	cmp	r3, r4
 801ddf4:	dd58      	ble.n	801dea8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ddf6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801ddfa:	1c62      	adds	r2, r4, #1
 801ddfc:	d459      	bmi.n	801deb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ddfe:	4293      	cmp	r3, r2
 801de00:	dd57      	ble.n	801deb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801de02:	2d00      	cmp	r5, #0
 801de04:	d055      	beq.n	801deb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801de06:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801de0a:	f11e 0e01 	adds.w	lr, lr, #1
 801de0e:	d454      	bmi.n	801deba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801de10:	45f1      	cmp	r9, lr
 801de12:	dd52      	ble.n	801deba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801de14:	2e00      	cmp	r6, #0
 801de16:	d050      	beq.n	801deba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801de18:	2c00      	cmp	r4, #0
 801de1a:	db4c      	blt.n	801deb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801de1c:	42a3      	cmp	r3, r4
 801de1e:	dd4a      	ble.n	801deb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801de20:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801de24:	3401      	adds	r4, #1
 801de26:	d405      	bmi.n	801de34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801de28:	42a3      	cmp	r3, r4
 801de2a:	dd03      	ble.n	801de34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801de2c:	b115      	cbz	r5, 801de34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801de2e:	3301      	adds	r3, #1
 801de30:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801de34:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801de38:	fb15 f406 	smulbb	r4, r5, r6
 801de3c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801de40:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801de44:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801de48:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801de4c:	ea43 0c0c 	orr.w	ip, r3, ip
 801de50:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801de54:	f1c6 0310 	rsb	r3, r6, #16
 801de58:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801de5c:	1b5b      	subs	r3, r3, r5
 801de5e:	ea4e 0707 	orr.w	r7, lr, r7
 801de62:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801de66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801de6a:	437d      	muls	r5, r7
 801de6c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801de70:	0403      	lsls	r3, r0, #16
 801de72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801de76:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801de7a:	4318      	orrs	r0, r3
 801de7c:	0413      	lsls	r3, r2, #16
 801de7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801de82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801de86:	4313      	orrs	r3, r2
 801de88:	fb04 c000 	mla	r0, r4, r0, ip
 801de8c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801de90:	fb06 0003 	mla	r0, r6, r3, r0
 801de94:	0d43      	lsrs	r3, r0, #21
 801de96:	0940      	lsrs	r0, r0, #5
 801de98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801de9c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dea0:	4318      	orrs	r0, r3
 801dea2:	8008      	strh	r0, [r1, #0]
 801dea4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dea8:	4684      	mov	ip, r0
 801deaa:	e7a6      	b.n	801ddfa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801deac:	4607      	mov	r7, r0
 801deae:	4684      	mov	ip, r0
 801deb0:	e7ab      	b.n	801de0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801deb2:	4607      	mov	r7, r0
 801deb4:	e7a9      	b.n	801de0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801deb6:	4602      	mov	r2, r0
 801deb8:	e7b4      	b.n	801de24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801deba:	4602      	mov	r2, r0
 801debc:	e7ba      	b.n	801de34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801debe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801debe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dec2:	b08f      	sub	sp, #60	; 0x3c
 801dec4:	461d      	mov	r5, r3
 801dec6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801dec8:	920c      	str	r2, [sp, #48]	; 0x30
 801deca:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801dece:	9107      	str	r1, [sp, #28]
 801ded0:	6859      	ldr	r1, [r3, #4]
 801ded2:	681b      	ldr	r3, [r3, #0]
 801ded4:	900d      	str	r0, [sp, #52]	; 0x34
 801ded6:	fb01 2707 	mla	r7, r1, r7, r2
 801deda:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801dede:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dee0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801dee4:	f8d3 8000 	ldr.w	r8, [r3]
 801dee8:	9b07      	ldr	r3, [sp, #28]
 801deea:	2b00      	cmp	r3, #0
 801deec:	dc03      	bgt.n	801def6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801deee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801def0:	2b00      	cmp	r3, #0
 801def2:	f340 8181 	ble.w	801e1f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801def6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801def8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801defc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801df00:	1e48      	subs	r0, r1, #1
 801df02:	f102 3cff 	add.w	ip, r2, #4294967295
 801df06:	2d00      	cmp	r5, #0
 801df08:	f340 809b 	ble.w	801e042 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801df0c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801df10:	ea4f 4326 	mov.w	r3, r6, asr #16
 801df14:	d406      	bmi.n	801df24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df16:	4586      	cmp	lr, r0
 801df18:	da04      	bge.n	801df24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df1a:	2b00      	cmp	r3, #0
 801df1c:	db02      	blt.n	801df24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df1e:	4563      	cmp	r3, ip
 801df20:	f2c0 8090 	blt.w	801e044 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801df24:	f11e 0e01 	adds.w	lr, lr, #1
 801df28:	f100 8084 	bmi.w	801e034 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801df2c:	4571      	cmp	r1, lr
 801df2e:	f2c0 8081 	blt.w	801e034 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801df32:	3301      	adds	r3, #1
 801df34:	d47e      	bmi.n	801e034 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801df36:	429a      	cmp	r2, r3
 801df38:	db7c      	blt.n	801e034 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801df3a:	46aa      	mov	sl, r5
 801df3c:	46b9      	mov	r9, r7
 801df3e:	f1ba 0f00 	cmp.w	sl, #0
 801df42:	f340 8099 	ble.w	801e078 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801df46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801df48:	1421      	asrs	r1, r4, #16
 801df4a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801df4e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801df52:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801df56:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801df5a:	f100 80d0 	bmi.w	801e0fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801df5e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801df62:	4559      	cmp	r1, fp
 801df64:	f280 80cb 	bge.w	801e0fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801df68:	2800      	cmp	r0, #0
 801df6a:	f2c0 80c8 	blt.w	801e0fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801df6e:	f103 3bff 	add.w	fp, r3, #4294967295
 801df72:	4558      	cmp	r0, fp
 801df74:	f280 80c3 	bge.w	801e0fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801df78:	fa0f fe8e 	sxth.w	lr, lr
 801df7c:	fb00 110e 	mla	r1, r0, lr, r1
 801df80:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801df84:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801df88:	8841      	ldrh	r1, [r0, #2]
 801df8a:	f1bc 0f00 	cmp.w	ip, #0
 801df8e:	d00b      	beq.n	801dfa8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801df90:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801df94:	3b01      	subs	r3, #1
 801df96:	005b      	lsls	r3, r3, #1
 801df98:	3302      	adds	r3, #2
 801df9a:	eb00 0e03 	add.w	lr, r0, r3
 801df9e:	5ac3      	ldrh	r3, [r0, r3]
 801dfa0:	9308      	str	r3, [sp, #32]
 801dfa2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801dfa6:	9309      	str	r3, [sp, #36]	; 0x24
 801dfa8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801dfac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dfb0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801dfb4:	ea40 000b 	orr.w	r0, r0, fp
 801dfb8:	fb12 f30c 	smulbb	r3, r2, ip
 801dfbc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dfc0:	10db      	asrs	r3, r3, #3
 801dfc2:	f1cc 0e10 	rsb	lr, ip, #16
 801dfc6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dfca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dfce:	ebae 0e02 	sub.w	lr, lr, r2
 801dfd2:	ea4b 0101 	orr.w	r1, fp, r1
 801dfd6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dfda:	4351      	muls	r1, r2
 801dfdc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dfde:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dfe2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dfe6:	0410      	lsls	r0, r2, #16
 801dfe8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dfec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dff0:	4310      	orrs	r0, r2
 801dff2:	9a08      	ldr	r2, [sp, #32]
 801dff4:	9908      	ldr	r1, [sp, #32]
 801dff6:	0412      	lsls	r2, r2, #16
 801dff8:	fb03 e000 	mla	r0, r3, r0, lr
 801dffc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e000:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801e004:	ea42 020e 	orr.w	r2, r2, lr
 801e008:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e00c:	fb03 0302 	mla	r3, r3, r2, r0
 801e010:	0d5a      	lsrs	r2, r3, #21
 801e012:	095b      	lsrs	r3, r3, #5
 801e014:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e018:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e01c:	4313      	orrs	r3, r2
 801e01e:	f8a9 3000 	strh.w	r3, [r9]
 801e022:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e024:	441c      	add	r4, r3
 801e026:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e028:	f109 0902 	add.w	r9, r9, #2
 801e02c:	441e      	add	r6, r3
 801e02e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e032:	e784      	b.n	801df3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e034:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e036:	441c      	add	r4, r3
 801e038:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e03a:	3d01      	subs	r5, #1
 801e03c:	441e      	add	r6, r3
 801e03e:	3702      	adds	r7, #2
 801e040:	e761      	b.n	801df06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e042:	d01d      	beq.n	801e080 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e044:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e046:	1e6b      	subs	r3, r5, #1
 801e048:	fb00 4003 	mla	r0, r0, r3, r4
 801e04c:	1400      	asrs	r0, r0, #16
 801e04e:	f53f af74 	bmi.w	801df3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e052:	3901      	subs	r1, #1
 801e054:	4288      	cmp	r0, r1
 801e056:	f6bf af70 	bge.w	801df3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e05a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801e05c:	fb01 6303 	mla	r3, r1, r3, r6
 801e060:	141b      	asrs	r3, r3, #16
 801e062:	f53f af6a 	bmi.w	801df3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e066:	3a01      	subs	r2, #1
 801e068:	4293      	cmp	r3, r2
 801e06a:	f6bf af66 	bge.w	801df3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e06e:	46a9      	mov	r9, r5
 801e070:	46ba      	mov	sl, r7
 801e072:	f1b9 0f00 	cmp.w	r9, #0
 801e076:	dc5a      	bgt.n	801e12e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e078:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e07c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e080:	9b07      	ldr	r3, [sp, #28]
 801e082:	2b00      	cmp	r3, #0
 801e084:	f340 80b8 	ble.w	801e1f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e088:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e08c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e090:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e094:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e096:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e09a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e09e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e0a2:	eef0 6a62 	vmov.f32	s13, s5
 801e0a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e0aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e0b2:	ee16 4a90 	vmov	r4, s13
 801e0b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e0ba:	eef0 6a43 	vmov.f32	s13, s6
 801e0be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e0c2:	ee12 2a90 	vmov	r2, s5
 801e0c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e0ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0ce:	ee13 2a10 	vmov	r2, s6
 801e0d2:	931b      	str	r3, [sp, #108]	; 0x6c
 801e0d4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e0d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0da:	931c      	str	r3, [sp, #112]	; 0x70
 801e0dc:	9b07      	ldr	r3, [sp, #28]
 801e0de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e0e0:	3b01      	subs	r3, #1
 801e0e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0e6:	9307      	str	r3, [sp, #28]
 801e0e8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e0ea:	ee16 6a90 	vmov	r6, s13
 801e0ee:	bf14      	ite	ne
 801e0f0:	461d      	movne	r5, r3
 801e0f2:	4615      	moveq	r5, r2
 801e0f4:	eeb0 3a67 	vmov.f32	s6, s15
 801e0f8:	eef0 2a47 	vmov.f32	s5, s14
 801e0fc:	e6f4      	b.n	801dee8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e0fe:	f111 0b01 	adds.w	fp, r1, #1
 801e102:	d48e      	bmi.n	801e022 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e104:	45de      	cmp	lr, fp
 801e106:	db8c      	blt.n	801e022 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e108:	f110 0b01 	adds.w	fp, r0, #1
 801e10c:	d489      	bmi.n	801e022 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e10e:	455b      	cmp	r3, fp
 801e110:	db87      	blt.n	801e022 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e112:	b21b      	sxth	r3, r3
 801e114:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e118:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e11c:	9300      	str	r3, [sp, #0]
 801e11e:	4642      	mov	r2, r8
 801e120:	fa0f f38e 	sxth.w	r3, lr
 801e124:	4649      	mov	r1, r9
 801e126:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e128:	f7ff fe4d 	bl	801ddc6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e12c:	e779      	b.n	801e022 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e12e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e130:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e134:	1420      	asrs	r0, r4, #16
 801e136:	1431      	asrs	r1, r6, #16
 801e138:	fb03 0101 	mla	r1, r3, r1, r0
 801e13c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e140:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e144:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e148:	8841      	ldrh	r1, [r0, #2]
 801e14a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e14e:	f1be 0f00 	cmp.w	lr, #0
 801e152:	d00b      	beq.n	801e16c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e154:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801e158:	3b01      	subs	r3, #1
 801e15a:	005b      	lsls	r3, r3, #1
 801e15c:	3302      	adds	r3, #2
 801e15e:	eb00 0b03 	add.w	fp, r0, r3
 801e162:	5ac3      	ldrh	r3, [r0, r3]
 801e164:	930a      	str	r3, [sp, #40]	; 0x28
 801e166:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e16a:	930b      	str	r3, [sp, #44]	; 0x2c
 801e16c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e170:	fb12 f30e 	smulbb	r3, r2, lr
 801e174:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e178:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e17c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e180:	10db      	asrs	r3, r3, #3
 801e182:	ea40 000c 	orr.w	r0, r0, ip
 801e186:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e18a:	f1ce 0c10 	rsb	ip, lr, #16
 801e18e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e192:	ebac 0c02 	sub.w	ip, ip, r2
 801e196:	ea4b 0101 	orr.w	r1, fp, r1
 801e19a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e19e:	4351      	muls	r1, r2
 801e1a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e1a2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e1a6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e1aa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e1ae:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801e1b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e1b4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801e1b6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e1ba:	0412      	lsls	r2, r2, #16
 801e1bc:	ea4b 0000 	orr.w	r0, fp, r0
 801e1c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e1c4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801e1c8:	fb03 c000 	mla	r0, r3, r0, ip
 801e1cc:	ea42 0b0b 	orr.w	fp, r2, fp
 801e1d0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e1d4:	fb03 000b 	mla	r0, r3, fp, r0
 801e1d8:	0d43      	lsrs	r3, r0, #21
 801e1da:	0940      	lsrs	r0, r0, #5
 801e1dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e1e0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e1e4:	4318      	orrs	r0, r3
 801e1e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e1e8:	f82a 0b02 	strh.w	r0, [sl], #2
 801e1ec:	441c      	add	r4, r3
 801e1ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e1f0:	f109 39ff 	add.w	r9, r9, #4294967295
 801e1f4:	441e      	add	r6, r3
 801e1f6:	e73c      	b.n	801e072 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e1f8:	b00f      	add	sp, #60	; 0x3c
 801e1fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e1fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e1fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e202:	b085      	sub	sp, #20
 801e204:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e208:	9102      	str	r1, [sp, #8]
 801e20a:	2c00      	cmp	r4, #0
 801e20c:	fb04 7103 	mla	r1, r4, r3, r7
 801e210:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e214:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e218:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e21c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e220:	f2c0 811b 	blt.w	801e45a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e224:	45a6      	cmp	lr, r4
 801e226:	f340 8118 	ble.w	801e45a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e22a:	2f00      	cmp	r7, #0
 801e22c:	f2c0 8113 	blt.w	801e456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e230:	42bb      	cmp	r3, r7
 801e232:	f340 8110 	ble.w	801e456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e236:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e23a:	1c7a      	adds	r2, r7, #1
 801e23c:	f100 8110 	bmi.w	801e460 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e240:	4293      	cmp	r3, r2
 801e242:	f340 810d 	ble.w	801e460 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e246:	2e00      	cmp	r6, #0
 801e248:	f000 810c 	beq.w	801e464 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e24c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e250:	3401      	adds	r4, #1
 801e252:	f100 810b 	bmi.w	801e46c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e256:	45a6      	cmp	lr, r4
 801e258:	f340 8108 	ble.w	801e46c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e25c:	2800      	cmp	r0, #0
 801e25e:	f000 8108 	beq.w	801e472 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e262:	2f00      	cmp	r7, #0
 801e264:	f2c0 8100 	blt.w	801e468 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e268:	42bb      	cmp	r3, r7
 801e26a:	f340 80fd 	ble.w	801e468 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e26e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e272:	3701      	adds	r7, #1
 801e274:	f100 8100 	bmi.w	801e478 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e278:	42bb      	cmp	r3, r7
 801e27a:	f340 80fd 	ble.w	801e478 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e27e:	2e00      	cmp	r6, #0
 801e280:	f000 80fc 	beq.w	801e47c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e284:	3301      	adds	r3, #1
 801e286:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e28a:	b2b6      	uxth	r6, r6
 801e28c:	b280      	uxth	r0, r0
 801e28e:	fb00 fe06 	mul.w	lr, r0, r6
 801e292:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e296:	0136      	lsls	r6, r6, #4
 801e298:	eba6 070e 	sub.w	r7, r6, lr
 801e29c:	b280      	uxth	r0, r0
 801e29e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e2a2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e2a6:	b2bf      	uxth	r7, r7
 801e2a8:	1a1b      	subs	r3, r3, r0
 801e2aa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e2ae:	b29b      	uxth	r3, r3
 801e2b0:	fb0a f607 	mul.w	r6, sl, r7
 801e2b4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e2b8:	fb0b 6603 	mla	r6, fp, r3, r6
 801e2bc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e2c0:	fb00 6609 	mla	r6, r0, r9, r6
 801e2c4:	fb0e 6608 	mla	r6, lr, r8, r6
 801e2c8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e2cc:	9600      	str	r6, [sp, #0]
 801e2ce:	2e00      	cmp	r6, #0
 801e2d0:	f000 80be 	beq.w	801e450 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e2d4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e2d8:	fb0b fc0c 	mul.w	ip, fp, ip
 801e2dc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e2e0:	fb0b f505 	mul.w	r5, fp, r5
 801e2e4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e2e8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e2ec:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e2f0:	44dc      	add	ip, fp
 801e2f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2f6:	9501      	str	r5, [sp, #4]
 801e2f8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e2fc:	9503      	str	r5, [sp, #12]
 801e2fe:	9d01      	ldr	r5, [sp, #4]
 801e300:	9e02      	ldr	r6, [sp, #8]
 801e302:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e306:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e30a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e30e:	fb0a fc0c 	mul.w	ip, sl, ip
 801e312:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e316:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e31a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e31e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e322:	4465      	add	r5, ip
 801e324:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e328:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e32c:	fb09 fc0c 	mul.w	ip, r9, ip
 801e330:	fb09 f904 	mul.w	r9, r9, r4
 801e334:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e338:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e33c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e340:	fb08 f404 	mul.w	r4, r8, r4
 801e344:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e348:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e34c:	fb08 f802 	mul.w	r8, r8, r2
 801e350:	fb0a fa01 	mul.w	sl, sl, r1
 801e354:	0a22      	lsrs	r2, r4, #8
 801e356:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e35a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e35e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e362:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e366:	4414      	add	r4, r2
 801e368:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e36c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e370:	0a2d      	lsrs	r5, r5, #8
 801e372:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e376:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e37a:	9a03      	ldr	r2, [sp, #12]
 801e37c:	8836      	ldrh	r6, [r6, #0]
 801e37e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e382:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e386:	437d      	muls	r5, r7
 801e388:	4461      	add	r1, ip
 801e38a:	0a24      	lsrs	r4, r4, #8
 801e38c:	fb02 5503 	mla	r5, r2, r3, r5
 801e390:	0a09      	lsrs	r1, r1, #8
 801e392:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e396:	fb04 540e 	mla	r4, r4, lr, r5
 801e39a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e39e:	fb01 4100 	mla	r1, r1, r0, r4
 801e3a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e3a6:	0a09      	lsrs	r1, r1, #8
 801e3a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e3ac:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e3b0:	fb07 f70a 	mul.w	r7, r7, sl
 801e3b4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e3b8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e3bc:	fb03 7101 	mla	r1, r3, r1, r7
 801e3c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e3c4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e3c8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e3cc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e3d0:	fb00 e101 	mla	r1, r0, r1, lr
 801e3d4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801e3d8:	9a00      	ldr	r2, [sp, #0]
 801e3da:	b287      	uxth	r7, r0
 801e3dc:	437a      	muls	r2, r7
 801e3de:	0a09      	lsrs	r1, r1, #8
 801e3e0:	1c53      	adds	r3, r2, #1
 801e3e2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e3e6:	4321      	orrs	r1, r4
 801e3e8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e3ec:	1235      	asrs	r5, r6, #8
 801e3ee:	0c0a      	lsrs	r2, r1, #16
 801e3f0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e3f4:	b2db      	uxtb	r3, r3
 801e3f6:	fb12 f207 	smulbb	r2, r2, r7
 801e3fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e3fe:	fb05 2503 	mla	r5, r5, r3, r2
 801e402:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e406:	10f2      	asrs	r2, r6, #3
 801e408:	b2c8      	uxtb	r0, r1
 801e40a:	00f6      	lsls	r6, r6, #3
 801e40c:	fb14 f407 	smulbb	r4, r4, r7
 801e410:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e414:	b2f6      	uxtb	r6, r6
 801e416:	fb10 f007 	smulbb	r0, r0, r7
 801e41a:	fb02 4203 	mla	r2, r2, r3, r4
 801e41e:	b2ad      	uxth	r5, r5
 801e420:	fb06 0303 	mla	r3, r6, r3, r0
 801e424:	b299      	uxth	r1, r3
 801e426:	b294      	uxth	r4, r2
 801e428:	1c6b      	adds	r3, r5, #1
 801e42a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e42e:	1c62      	adds	r2, r4, #1
 801e430:	1c4b      	adds	r3, r1, #1
 801e432:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e436:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e43a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e43e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e442:	0952      	lsrs	r2, r2, #5
 801e444:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e448:	432b      	orrs	r3, r5
 801e44a:	4313      	orrs	r3, r2
 801e44c:	9a02      	ldr	r2, [sp, #8]
 801e44e:	8013      	strh	r3, [r2, #0]
 801e450:	b005      	add	sp, #20
 801e452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e456:	2500      	movs	r5, #0
 801e458:	e6ef      	b.n	801e23a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e45a:	2100      	movs	r1, #0
 801e45c:	460d      	mov	r5, r1
 801e45e:	e6f7      	b.n	801e250 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e460:	2100      	movs	r1, #0
 801e462:	e6f5      	b.n	801e250 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e464:	4631      	mov	r1, r6
 801e466:	e6f3      	b.n	801e250 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e468:	2400      	movs	r4, #0
 801e46a:	e702      	b.n	801e272 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e46c:	2200      	movs	r2, #0
 801e46e:	4614      	mov	r4, r2
 801e470:	e70b      	b.n	801e28a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e472:	4602      	mov	r2, r0
 801e474:	4604      	mov	r4, r0
 801e476:	e708      	b.n	801e28a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e478:	2200      	movs	r2, #0
 801e47a:	e706      	b.n	801e28a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e47c:	4632      	mov	r2, r6
 801e47e:	e704      	b.n	801e28a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e480 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e484:	b09d      	sub	sp, #116	; 0x74
 801e486:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801e48a:	9219      	str	r2, [sp, #100]	; 0x64
 801e48c:	9307      	str	r3, [sp, #28]
 801e48e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801e490:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801e494:	931a      	str	r3, [sp, #104]	; 0x68
 801e496:	9117      	str	r1, [sp, #92]	; 0x5c
 801e498:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801e49c:	901b      	str	r0, [sp, #108]	; 0x6c
 801e49e:	6850      	ldr	r0, [r2, #4]
 801e4a0:	6812      	ldr	r2, [r2, #0]
 801e4a2:	fb00 1303 	mla	r3, r0, r3, r1
 801e4a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e4aa:	930a      	str	r3, [sp, #40]	; 0x28
 801e4ac:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e4ae:	681b      	ldr	r3, [r3, #0]
 801e4b0:	9310      	str	r3, [sp, #64]	; 0x40
 801e4b2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e4b6:	930b      	str	r3, [sp, #44]	; 0x2c
 801e4b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e4ba:	2b00      	cmp	r3, #0
 801e4bc:	dc03      	bgt.n	801e4c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e4be:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e4c0:	2b00      	cmp	r3, #0
 801e4c2:	f340 8375 	ble.w	801ebb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e4c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e4c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e4cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e4d0:	1e48      	subs	r0, r1, #1
 801e4d2:	1e57      	subs	r7, r2, #1
 801e4d4:	9b07      	ldr	r3, [sp, #28]
 801e4d6:	2b00      	cmp	r3, #0
 801e4d8:	f340 818e 	ble.w	801e7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e4dc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e4e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e4e4:	d406      	bmi.n	801e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e4e6:	4584      	cmp	ip, r0
 801e4e8:	da04      	bge.n	801e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e4ea:	2b00      	cmp	r3, #0
 801e4ec:	db02      	blt.n	801e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e4ee:	42bb      	cmp	r3, r7
 801e4f0:	f2c0 8183 	blt.w	801e7fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e4f4:	f11c 0c01 	adds.w	ip, ip, #1
 801e4f8:	f100 8173 	bmi.w	801e7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e4fc:	4561      	cmp	r1, ip
 801e4fe:	f2c0 8170 	blt.w	801e7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e502:	3301      	adds	r3, #1
 801e504:	f100 816d 	bmi.w	801e7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e508:	429a      	cmp	r2, r3
 801e50a:	f2c0 816a 	blt.w	801e7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e50e:	9b07      	ldr	r3, [sp, #28]
 801e510:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e512:	9318      	str	r3, [sp, #96]	; 0x60
 801e514:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e516:	2b00      	cmp	r3, #0
 801e518:	f340 818c 	ble.w	801e834 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e51c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e51e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e520:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e524:	689b      	ldr	r3, [r3, #8]
 801e526:	1422      	asrs	r2, r4, #16
 801e528:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e52c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e530:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e534:	f100 81cd 	bmi.w	801e8d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e538:	f103 38ff 	add.w	r8, r3, #4294967295
 801e53c:	4542      	cmp	r2, r8
 801e53e:	f280 81c8 	bge.w	801e8d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e542:	f1bc 0f00 	cmp.w	ip, #0
 801e546:	f2c0 81c4 	blt.w	801e8d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e54a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e54e:	45c4      	cmp	ip, r8
 801e550:	f280 81bf 	bge.w	801e8d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e554:	b21b      	sxth	r3, r3
 801e556:	fb0c 2203 	mla	r2, ip, r3, r2
 801e55a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e55c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e560:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e564:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e568:	2800      	cmp	r0, #0
 801e56a:	f000 81a9 	beq.w	801e8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e56e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e572:	950c      	str	r5, [sp, #48]	; 0x30
 801e574:	0e2d      	lsrs	r5, r5, #24
 801e576:	9513      	str	r5, [sp, #76]	; 0x4c
 801e578:	b181      	cbz	r1, 801e59c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e57a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e57e:	3b01      	subs	r3, #1
 801e580:	009b      	lsls	r3, r3, #2
 801e582:	3304      	adds	r3, #4
 801e584:	eb08 0c03 	add.w	ip, r8, r3
 801e588:	f858 3003 	ldr.w	r3, [r8, r3]
 801e58c:	9308      	str	r3, [sp, #32]
 801e58e:	0e1b      	lsrs	r3, r3, #24
 801e590:	9311      	str	r3, [sp, #68]	; 0x44
 801e592:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e596:	930d      	str	r3, [sp, #52]	; 0x34
 801e598:	0e1b      	lsrs	r3, r3, #24
 801e59a:	9314      	str	r3, [sp, #80]	; 0x50
 801e59c:	b280      	uxth	r0, r0
 801e59e:	b289      	uxth	r1, r1
 801e5a0:	fb00 f901 	mul.w	r9, r0, r1
 801e5a4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e5a8:	0100      	lsls	r0, r0, #4
 801e5aa:	eba0 0809 	sub.w	r8, r0, r9
 801e5ae:	b289      	uxth	r1, r1
 801e5b0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e5b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e5b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e5b8:	fa1f f888 	uxth.w	r8, r8
 801e5bc:	1a5b      	subs	r3, r3, r1
 801e5be:	b29b      	uxth	r3, r3
 801e5c0:	fb08 f000 	mul.w	r0, r8, r0
 801e5c4:	fb03 000e 	mla	r0, r3, lr, r0
 801e5c8:	fb01 0005 	mla	r0, r1, r5, r0
 801e5cc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e5ce:	fb09 0005 	mla	r0, r9, r5, r0
 801e5d2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e5d6:	2800      	cmp	r0, #0
 801e5d8:	f000 80fa 	beq.w	801e7d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e5dc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e5e0:	d01b      	beq.n	801e61a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e5e2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e5e6:	fb0e fa0a 	mul.w	sl, lr, sl
 801e5ea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e5ee:	fb0e fe02 	mul.w	lr, lr, r2
 801e5f2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e5f6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e5fa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e5fe:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e602:	4452      	add	r2, sl
 801e604:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e608:	0a12      	lsrs	r2, r2, #8
 801e60a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e60e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e612:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e616:	ea42 020c 	orr.w	r2, r2, ip
 801e61a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e61c:	2dff      	cmp	r5, #255	; 0xff
 801e61e:	d021      	beq.n	801e664 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e620:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e622:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e626:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e628:	fb05 fb0b 	mul.w	fp, r5, fp
 801e62c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e62e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e632:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e634:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e638:	fb05 fa0a 	mul.w	sl, r5, sl
 801e63c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e640:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e644:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e648:	44de      	add	lr, fp
 801e64a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e64e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e652:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e656:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e65a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e65e:	ea4e 050a 	orr.w	r5, lr, sl
 801e662:	950c      	str	r5, [sp, #48]	; 0x30
 801e664:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e666:	2dff      	cmp	r5, #255	; 0xff
 801e668:	d021      	beq.n	801e6ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e66a:	9d08      	ldr	r5, [sp, #32]
 801e66c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e670:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e672:	fb05 fb0b 	mul.w	fp, r5, fp
 801e676:	9d08      	ldr	r5, [sp, #32]
 801e678:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e67c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e67e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e682:	fb05 fa0a 	mul.w	sl, r5, sl
 801e686:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e68a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e68e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e692:	44de      	add	lr, fp
 801e694:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e698:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e69c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e6a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e6a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e6a8:	ea4e 050a 	orr.w	r5, lr, sl
 801e6ac:	9508      	str	r5, [sp, #32]
 801e6ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e6b0:	2dff      	cmp	r5, #255	; 0xff
 801e6b2:	d021      	beq.n	801e6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e6b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e6b6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e6ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e6bc:	fb05 fb0b 	mul.w	fp, r5, fp
 801e6c0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e6c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e6c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e6c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e6cc:	fb05 fa0a 	mul.w	sl, r5, sl
 801e6d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e6d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e6d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e6dc:	44de      	add	lr, fp
 801e6de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e6e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e6e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e6ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e6ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e6f2:	ea4e 050a 	orr.w	r5, lr, sl
 801e6f6:	950d      	str	r5, [sp, #52]	; 0x34
 801e6f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e6fa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e6fe:	9d08      	ldr	r5, [sp, #32]
 801e700:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e704:	fb08 fc0c 	mul.w	ip, r8, ip
 801e708:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e70c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e710:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e712:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e716:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e71a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e71c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e720:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e724:	fb08 f80e 	mul.w	r8, r8, lr
 801e728:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e72c:	fb03 8202 	mla	r2, r3, r2, r8
 801e730:	9b08      	ldr	r3, [sp, #32]
 801e732:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e734:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e738:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e73a:	fb01 220a 	mla	r2, r1, sl, r2
 801e73e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e742:	fb09 2901 	mla	r9, r9, r1, r2
 801e746:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e748:	883b      	ldrh	r3, [r7, #0]
 801e74a:	4342      	muls	r2, r0
 801e74c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e750:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e754:	1c50      	adds	r0, r2, #1
 801e756:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e75a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e75e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e762:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e766:	1219      	asrs	r1, r3, #8
 801e768:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e76c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e770:	b2c0      	uxtb	r0, r0
 801e772:	fb12 f205 	smulbb	r2, r2, r5
 801e776:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e77a:	fb01 2100 	mla	r1, r1, r0, r2
 801e77e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e782:	10da      	asrs	r2, r3, #3
 801e784:	fa5f fc8c 	uxtb.w	ip, ip
 801e788:	00db      	lsls	r3, r3, #3
 801e78a:	fb1c fc05 	smulbb	ip, ip, r5
 801e78e:	b2db      	uxtb	r3, r3
 801e790:	b289      	uxth	r1, r1
 801e792:	fb03 c300 	mla	r3, r3, r0, ip
 801e796:	fa1f fc83 	uxth.w	ip, r3
 801e79a:	1c4b      	adds	r3, r1, #1
 801e79c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e7a0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e7a4:	fb1e fe05 	smulbb	lr, lr, r5
 801e7a8:	f10c 0301 	add.w	r3, ip, #1
 801e7ac:	fb02 e200 	mla	r2, r2, r0, lr
 801e7b0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e7b4:	b292      	uxth	r2, r2
 801e7b6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e7ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e7be:	430b      	orrs	r3, r1
 801e7c0:	1c51      	adds	r1, r2, #1
 801e7c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e7c6:	0952      	lsrs	r2, r2, #5
 801e7c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e7cc:	4313      	orrs	r3, r2
 801e7ce:	803b      	strh	r3, [r7, #0]
 801e7d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e7d2:	441c      	add	r4, r3
 801e7d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e7d6:	441e      	add	r6, r3
 801e7d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e7da:	3b01      	subs	r3, #1
 801e7dc:	3702      	adds	r7, #2
 801e7de:	9318      	str	r3, [sp, #96]	; 0x60
 801e7e0:	e698      	b.n	801e514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e7e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e7e4:	441c      	add	r4, r3
 801e7e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e7e8:	441e      	add	r6, r3
 801e7ea:	9b07      	ldr	r3, [sp, #28]
 801e7ec:	3b01      	subs	r3, #1
 801e7ee:	9307      	str	r3, [sp, #28]
 801e7f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e7f2:	3302      	adds	r3, #2
 801e7f4:	930a      	str	r3, [sp, #40]	; 0x28
 801e7f6:	e66d      	b.n	801e4d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e7f8:	d023      	beq.n	801e842 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e7fa:	9b07      	ldr	r3, [sp, #28]
 801e7fc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e7fe:	3b01      	subs	r3, #1
 801e800:	fb00 4003 	mla	r0, r0, r3, r4
 801e804:	1400      	asrs	r0, r0, #16
 801e806:	f53f ae82 	bmi.w	801e50e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e80a:	3901      	subs	r1, #1
 801e80c:	4288      	cmp	r0, r1
 801e80e:	f6bf ae7e 	bge.w	801e50e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e812:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e814:	fb01 6303 	mla	r3, r1, r3, r6
 801e818:	141b      	asrs	r3, r3, #16
 801e81a:	f53f ae78 	bmi.w	801e50e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e81e:	3a01      	subs	r2, #1
 801e820:	4293      	cmp	r3, r2
 801e822:	f6bf ae74 	bge.w	801e50e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e826:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e82a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e82e:	f1bb 0f00 	cmp.w	fp, #0
 801e832:	dc6c      	bgt.n	801e90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e834:	9b07      	ldr	r3, [sp, #28]
 801e836:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e83a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e83c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e840:	930a      	str	r3, [sp, #40]	; 0x28
 801e842:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e844:	2b00      	cmp	r3, #0
 801e846:	f340 81b3 	ble.w	801ebb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e84a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e84e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e852:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e856:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e858:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e85c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e860:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e864:	eef0 6a62 	vmov.f32	s13, s5
 801e868:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e86c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e870:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e874:	ee16 4a90 	vmov	r4, s13
 801e878:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e87c:	eef0 6a43 	vmov.f32	s13, s6
 801e880:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e884:	ee12 2a90 	vmov	r2, s5
 801e888:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e88c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e890:	ee13 2a10 	vmov	r2, s6
 801e894:	9329      	str	r3, [sp, #164]	; 0xa4
 801e896:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e898:	fb92 f3f3 	sdiv	r3, r2, r3
 801e89c:	932a      	str	r3, [sp, #168]	; 0xa8
 801e89e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e8a0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e8a2:	3b01      	subs	r3, #1
 801e8a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e8a8:	9317      	str	r3, [sp, #92]	; 0x5c
 801e8aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e8ac:	bf08      	it	eq
 801e8ae:	4613      	moveq	r3, r2
 801e8b0:	ee16 6a90 	vmov	r6, s13
 801e8b4:	9307      	str	r3, [sp, #28]
 801e8b6:	eeb0 3a67 	vmov.f32	s6, s15
 801e8ba:	eef0 2a47 	vmov.f32	s5, s14
 801e8be:	e5fb      	b.n	801e4b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e8c0:	2900      	cmp	r1, #0
 801e8c2:	f43f ae6b 	beq.w	801e59c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e8c6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e8ca:	9308      	str	r3, [sp, #32]
 801e8cc:	0e1b      	lsrs	r3, r3, #24
 801e8ce:	9311      	str	r3, [sp, #68]	; 0x44
 801e8d0:	e664      	b.n	801e59c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e8d2:	f112 0801 	adds.w	r8, r2, #1
 801e8d6:	f53f af7b 	bmi.w	801e7d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e8da:	4543      	cmp	r3, r8
 801e8dc:	f6ff af78 	blt.w	801e7d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e8e0:	f11c 0801 	adds.w	r8, ip, #1
 801e8e4:	f53f af74 	bmi.w	801e7d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e8e8:	45c6      	cmp	lr, r8
 801e8ea:	f6ff af71 	blt.w	801e7d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e8ee:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e8f0:	9201      	str	r2, [sp, #4]
 801e8f2:	fa0f f28e 	sxth.w	r2, lr
 801e8f6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e8fa:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e8fe:	9200      	str	r2, [sp, #0]
 801e900:	b21b      	sxth	r3, r3
 801e902:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e904:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e906:	4639      	mov	r1, r7
 801e908:	f7ff fc79 	bl	801e1fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e90c:	e760      	b.n	801e7d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e90e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e910:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e912:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e916:	1427      	asrs	r7, r4, #16
 801e918:	1433      	asrs	r3, r6, #16
 801e91a:	fb01 7303 	mla	r3, r1, r3, r7
 801e91e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e922:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e926:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e92a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e92e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e932:	2a00      	cmp	r2, #0
 801e934:	f000 8133 	beq.w	801eb9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e938:	687d      	ldr	r5, [r7, #4]
 801e93a:	950e      	str	r5, [sp, #56]	; 0x38
 801e93c:	0e2d      	lsrs	r5, r5, #24
 801e93e:	9515      	str	r5, [sp, #84]	; 0x54
 801e940:	b178      	cbz	r0, 801e962 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e942:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e946:	3901      	subs	r1, #1
 801e948:	0089      	lsls	r1, r1, #2
 801e94a:	3104      	adds	r1, #4
 801e94c:	eb07 0e01 	add.w	lr, r7, r1
 801e950:	5879      	ldr	r1, [r7, r1]
 801e952:	9109      	str	r1, [sp, #36]	; 0x24
 801e954:	0e09      	lsrs	r1, r1, #24
 801e956:	9112      	str	r1, [sp, #72]	; 0x48
 801e958:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e95c:	910f      	str	r1, [sp, #60]	; 0x3c
 801e95e:	0e09      	lsrs	r1, r1, #24
 801e960:	9116      	str	r1, [sp, #88]	; 0x58
 801e962:	b292      	uxth	r2, r2
 801e964:	b280      	uxth	r0, r0
 801e966:	fb02 f800 	mul.w	r8, r2, r0
 801e96a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e96e:	0112      	lsls	r2, r2, #4
 801e970:	eba2 0e08 	sub.w	lr, r2, r8
 801e974:	b280      	uxth	r0, r0
 801e976:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e97a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e97c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e97e:	fa1f fe8e 	uxth.w	lr, lr
 801e982:	1a12      	subs	r2, r2, r0
 801e984:	b292      	uxth	r2, r2
 801e986:	fb0e f101 	mul.w	r1, lr, r1
 801e98a:	fb02 110c 	mla	r1, r2, ip, r1
 801e98e:	fb00 1105 	mla	r1, r0, r5, r1
 801e992:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e994:	fb08 1105 	mla	r1, r8, r5, r1
 801e998:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e99c:	2900      	cmp	r1, #0
 801e99e:	f000 80f5 	beq.w	801eb8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e9a2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e9a6:	d019      	beq.n	801e9dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e9a8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e9ac:	fb0c fa0a 	mul.w	sl, ip, sl
 801e9b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e9b4:	fb0c fc03 	mul.w	ip, ip, r3
 801e9b8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e9bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e9c0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e9c4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e9c8:	4453      	add	r3, sl
 801e9ca:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e9ce:	0a1b      	lsrs	r3, r3, #8
 801e9d0:	0a3f      	lsrs	r7, r7, #8
 801e9d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e9d6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e9da:	433b      	orrs	r3, r7
 801e9dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e9de:	2dff      	cmp	r5, #255	; 0xff
 801e9e0:	d020      	beq.n	801ea24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e9e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e9e4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e9e8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e9ea:	436f      	muls	r7, r5
 801e9ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e9ee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e9f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e9f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e9f8:	fb05 fa0a 	mul.w	sl, r5, sl
 801e9fc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ea00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ea04:	44bc      	add	ip, r7
 801ea06:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ea0a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ea0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ea16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ea1a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ea1e:	ea4c 050a 	orr.w	r5, ip, sl
 801ea22:	950e      	str	r5, [sp, #56]	; 0x38
 801ea24:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ea26:	2dff      	cmp	r5, #255	; 0xff
 801ea28:	d020      	beq.n	801ea6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801ea2a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ea2c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ea30:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ea32:	436f      	muls	r7, r5
 801ea34:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ea36:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ea3a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ea3c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ea40:	fb05 fa0a 	mul.w	sl, r5, sl
 801ea44:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ea48:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ea4c:	44bc      	add	ip, r7
 801ea4e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ea52:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ea56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ea5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ea62:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ea66:	ea4c 050a 	orr.w	r5, ip, sl
 801ea6a:	9509      	str	r5, [sp, #36]	; 0x24
 801ea6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ea6e:	2dff      	cmp	r5, #255	; 0xff
 801ea70:	d020      	beq.n	801eab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801ea72:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ea74:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ea78:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ea7a:	436f      	muls	r7, r5
 801ea7c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ea7e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ea82:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ea84:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ea88:	fb05 fa0a 	mul.w	sl, r5, sl
 801ea8c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ea90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ea94:	44bc      	add	ip, r7
 801ea96:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ea9a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ea9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eaa2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eaa6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eaaa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eaae:	ea4c 050a 	orr.w	r5, ip, sl
 801eab2:	950f      	str	r5, [sp, #60]	; 0x3c
 801eab4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eab6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eaba:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eabc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801eac0:	fb0e f707 	mul.w	r7, lr, r7
 801eac4:	fb02 770c 	mla	r7, r2, ip, r7
 801eac8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801eacc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eace:	fb00 770c 	mla	r7, r0, ip, r7
 801ead2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ead6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ead8:	fb08 770c 	mla	r7, r8, ip, r7
 801eadc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801eae0:	fb0e fe0c 	mul.w	lr, lr, ip
 801eae4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801eae8:	fb02 e303 	mla	r3, r2, r3, lr
 801eaec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801eaee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eaf0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801eaf4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801eaf6:	fb00 330a 	mla	r3, r0, sl, r3
 801eafa:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801eafe:	fb08 3c0c 	mla	ip, r8, ip, r3
 801eb02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eb04:	f8b9 0000 	ldrh.w	r0, [r9]
 801eb08:	4359      	muls	r1, r3
 801eb0a:	0a3f      	lsrs	r7, r7, #8
 801eb0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb10:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801eb14:	1c4b      	adds	r3, r1, #1
 801eb16:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801eb1a:	ea47 070c 	orr.w	r7, r7, ip
 801eb1e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801eb22:	1202      	asrs	r2, r0, #8
 801eb24:	0c3b      	lsrs	r3, r7, #16
 801eb26:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801eb2a:	b2c9      	uxtb	r1, r1
 801eb2c:	fb13 f305 	smulbb	r3, r3, r5
 801eb30:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801eb34:	fb02 3201 	mla	r2, r2, r1, r3
 801eb38:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801eb3c:	10c3      	asrs	r3, r0, #3
 801eb3e:	b2ff      	uxtb	r7, r7
 801eb40:	00c0      	lsls	r0, r0, #3
 801eb42:	b2c0      	uxtb	r0, r0
 801eb44:	fb17 f705 	smulbb	r7, r7, r5
 801eb48:	fb00 7001 	mla	r0, r0, r1, r7
 801eb4c:	b292      	uxth	r2, r2
 801eb4e:	fb1c fc05 	smulbb	ip, ip, r5
 801eb52:	b280      	uxth	r0, r0
 801eb54:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801eb58:	fb03 c301 	mla	r3, r3, r1, ip
 801eb5c:	1c51      	adds	r1, r2, #1
 801eb5e:	f100 0c01 	add.w	ip, r0, #1
 801eb62:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801eb66:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801eb6a:	b29b      	uxth	r3, r3
 801eb6c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801eb70:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801eb74:	ea4c 0202 	orr.w	r2, ip, r2
 801eb78:	f103 0c01 	add.w	ip, r3, #1
 801eb7c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801eb80:	095b      	lsrs	r3, r3, #5
 801eb82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb86:	431a      	orrs	r2, r3
 801eb88:	f8a9 2000 	strh.w	r2, [r9]
 801eb8c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801eb8e:	441c      	add	r4, r3
 801eb90:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb92:	f109 0902 	add.w	r9, r9, #2
 801eb96:	441e      	add	r6, r3
 801eb98:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eb9c:	e647      	b.n	801e82e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801eb9e:	2800      	cmp	r0, #0
 801eba0:	f43f aedf 	beq.w	801e962 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801eba4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801eba8:	9109      	str	r1, [sp, #36]	; 0x24
 801ebaa:	0e09      	lsrs	r1, r1, #24
 801ebac:	9112      	str	r1, [sp, #72]	; 0x48
 801ebae:	e6d8      	b.n	801e962 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ebb0:	b01d      	add	sp, #116	; 0x74
 801ebb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ebb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801ebb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ebba:	b085      	sub	sp, #20
 801ebbc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801ebc0:	9102      	str	r1, [sp, #8]
 801ebc2:	2c00      	cmp	r4, #0
 801ebc4:	fb04 7103 	mla	r1, r4, r3, r7
 801ebc8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801ebcc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801ebd0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801ebd4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ebd8:	f2c0 810c 	blt.w	801edf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ebdc:	45a6      	cmp	lr, r4
 801ebde:	f340 8109 	ble.w	801edf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ebe2:	2f00      	cmp	r7, #0
 801ebe4:	f2c0 8104 	blt.w	801edf0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ebe8:	42bb      	cmp	r3, r7
 801ebea:	f340 8101 	ble.w	801edf0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ebee:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ebf2:	1c7a      	adds	r2, r7, #1
 801ebf4:	f100 8101 	bmi.w	801edfa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ebf8:	4293      	cmp	r3, r2
 801ebfa:	f340 80fe 	ble.w	801edfa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ebfe:	2e00      	cmp	r6, #0
 801ec00:	f000 80fd 	beq.w	801edfe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801ec04:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ec08:	3401      	adds	r4, #1
 801ec0a:	f100 80fc 	bmi.w	801ee06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ec0e:	45a6      	cmp	lr, r4
 801ec10:	f340 80f9 	ble.w	801ee06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ec14:	2800      	cmp	r0, #0
 801ec16:	f000 80f9 	beq.w	801ee0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801ec1a:	2f00      	cmp	r7, #0
 801ec1c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801ec20:	f2c0 80ef 	blt.w	801ee02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801ec24:	42bb      	cmp	r3, r7
 801ec26:	f340 80ec 	ble.w	801ee02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801ec2a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ec2e:	3701      	adds	r7, #1
 801ec30:	f100 80ef 	bmi.w	801ee12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ec34:	42bb      	cmp	r3, r7
 801ec36:	f340 80ec 	ble.w	801ee12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ec3a:	2e00      	cmp	r6, #0
 801ec3c:	f000 80eb 	beq.w	801ee16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801ec40:	6852      	ldr	r2, [r2, #4]
 801ec42:	b2b6      	uxth	r6, r6
 801ec44:	b280      	uxth	r0, r0
 801ec46:	fb00 fe06 	mul.w	lr, r0, r6
 801ec4a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ec4e:	0136      	lsls	r6, r6, #4
 801ec50:	eba6 070e 	sub.w	r7, r6, lr
 801ec54:	b280      	uxth	r0, r0
 801ec56:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ec5a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ec5e:	b2bf      	uxth	r7, r7
 801ec60:	1a1b      	subs	r3, r3, r0
 801ec62:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ec66:	b29b      	uxth	r3, r3
 801ec68:	fb07 f60a 	mul.w	r6, r7, sl
 801ec6c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ec70:	fb0b 6603 	mla	r6, fp, r3, r6
 801ec74:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ec78:	fb00 6609 	mla	r6, r0, r9, r6
 801ec7c:	fb0e 6608 	mla	r6, lr, r8, r6
 801ec80:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ec84:	9600      	str	r6, [sp, #0]
 801ec86:	2e00      	cmp	r6, #0
 801ec88:	f000 80af 	beq.w	801edea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801ec8c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ec90:	fb0b fc0c 	mul.w	ip, fp, ip
 801ec94:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ec98:	fb0b f505 	mul.w	r5, fp, r5
 801ec9c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801eca0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801eca4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801eca8:	44dc      	add	ip, fp
 801ecaa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecae:	9501      	str	r5, [sp, #4]
 801ecb0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ecb4:	9503      	str	r5, [sp, #12]
 801ecb6:	9d01      	ldr	r5, [sp, #4]
 801ecb8:	9e02      	ldr	r6, [sp, #8]
 801ecba:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ecbe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ecc2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ecc6:	fb0a fc0c 	mul.w	ip, sl, ip
 801ecca:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ecce:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ecd2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ecd6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ecda:	4465      	add	r5, ip
 801ecdc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ece0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ece4:	fb09 fc0c 	mul.w	ip, r9, ip
 801ece8:	fb09 f904 	mul.w	r9, r9, r4
 801ecec:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ecf0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ecf4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ecf8:	fb08 f404 	mul.w	r4, r8, r4
 801ecfc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ed00:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ed04:	fb08 f802 	mul.w	r8, r8, r2
 801ed08:	fb0a fa01 	mul.w	sl, sl, r1
 801ed0c:	0a22      	lsrs	r2, r4, #8
 801ed0e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ed12:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ed16:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ed1a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ed1e:	4414      	add	r4, r2
 801ed20:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ed24:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ed28:	0a2d      	lsrs	r5, r5, #8
 801ed2a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ed2e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ed32:	9a03      	ldr	r2, [sp, #12]
 801ed34:	8836      	ldrh	r6, [r6, #0]
 801ed36:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ed3a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ed3e:	437d      	muls	r5, r7
 801ed40:	4461      	add	r1, ip
 801ed42:	0a24      	lsrs	r4, r4, #8
 801ed44:	fb02 5503 	mla	r5, r2, r3, r5
 801ed48:	0a09      	lsrs	r1, r1, #8
 801ed4a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ed4e:	fb04 540e 	mla	r4, r4, lr, r5
 801ed52:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ed56:	fb01 4100 	mla	r1, r1, r0, r4
 801ed5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed5e:	0a09      	lsrs	r1, r1, #8
 801ed60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed64:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ed68:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ed6c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ed70:	fb07 f70a 	mul.w	r7, r7, sl
 801ed74:	fb03 7101 	mla	r1, r3, r1, r7
 801ed78:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ed7c:	9b00      	ldr	r3, [sp, #0]
 801ed7e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ed82:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ed86:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ed8a:	fb00 e101 	mla	r1, r0, r1, lr
 801ed8e:	43da      	mvns	r2, r3
 801ed90:	1233      	asrs	r3, r6, #8
 801ed92:	b2d2      	uxtb	r2, r2
 801ed94:	10f0      	asrs	r0, r6, #3
 801ed96:	0a09      	lsrs	r1, r1, #8
 801ed98:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ed9c:	00f6      	lsls	r6, r6, #3
 801ed9e:	4353      	muls	r3, r2
 801eda0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801eda4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801eda8:	b2f6      	uxtb	r6, r6
 801edaa:	4321      	orrs	r1, r4
 801edac:	4350      	muls	r0, r2
 801edae:	4356      	muls	r6, r2
 801edb0:	1c5a      	adds	r2, r3, #1
 801edb2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801edb6:	0c0b      	lsrs	r3, r1, #16
 801edb8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801edbc:	1c42      	adds	r2, r0, #1
 801edbe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801edc2:	0a0a      	lsrs	r2, r1, #8
 801edc4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801edc8:	021b      	lsls	r3, r3, #8
 801edca:	00d2      	lsls	r2, r2, #3
 801edcc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801edd0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801edd4:	4313      	orrs	r3, r2
 801edd6:	1c72      	adds	r2, r6, #1
 801edd8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801eddc:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801ede0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ede4:	4319      	orrs	r1, r3
 801ede6:	9b02      	ldr	r3, [sp, #8]
 801ede8:	8019      	strh	r1, [r3, #0]
 801edea:	b005      	add	sp, #20
 801edec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801edf0:	2500      	movs	r5, #0
 801edf2:	e6fe      	b.n	801ebf2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801edf4:	2100      	movs	r1, #0
 801edf6:	460d      	mov	r5, r1
 801edf8:	e706      	b.n	801ec08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801edfa:	2100      	movs	r1, #0
 801edfc:	e704      	b.n	801ec08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801edfe:	4631      	mov	r1, r6
 801ee00:	e702      	b.n	801ec08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ee02:	2400      	movs	r4, #0
 801ee04:	e713      	b.n	801ec2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801ee06:	2200      	movs	r2, #0
 801ee08:	4614      	mov	r4, r2
 801ee0a:	e71a      	b.n	801ec42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ee0c:	4602      	mov	r2, r0
 801ee0e:	4604      	mov	r4, r0
 801ee10:	e717      	b.n	801ec42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ee12:	2200      	movs	r2, #0
 801ee14:	e715      	b.n	801ec42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ee16:	4632      	mov	r2, r6
 801ee18:	e713      	b.n	801ec42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801ee1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee20:	b09b      	sub	sp, #108	; 0x6c
 801ee22:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ee26:	9218      	str	r2, [sp, #96]	; 0x60
 801ee28:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ee2a:	9116      	str	r1, [sp, #88]	; 0x58
 801ee2c:	9307      	str	r3, [sp, #28]
 801ee2e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ee32:	9019      	str	r0, [sp, #100]	; 0x64
 801ee34:	6850      	ldr	r0, [r2, #4]
 801ee36:	6812      	ldr	r2, [r2, #0]
 801ee38:	fb00 1303 	mla	r3, r0, r3, r1
 801ee3c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ee40:	930a      	str	r3, [sp, #40]	; 0x28
 801ee42:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ee44:	681b      	ldr	r3, [r3, #0]
 801ee46:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ee4a:	2b00      	cmp	r3, #0
 801ee4c:	dc03      	bgt.n	801ee56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ee4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ee50:	2b00      	cmp	r3, #0
 801ee52:	f340 8386 	ble.w	801f562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ee56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ee58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee5c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ee60:	1e48      	subs	r0, r1, #1
 801ee62:	1e57      	subs	r7, r2, #1
 801ee64:	9b07      	ldr	r3, [sp, #28]
 801ee66:	2b00      	cmp	r3, #0
 801ee68:	f340 8166 	ble.w	801f138 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ee6c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ee70:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ee74:	d406      	bmi.n	801ee84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ee76:	4584      	cmp	ip, r0
 801ee78:	da04      	bge.n	801ee84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ee7a:	2b00      	cmp	r3, #0
 801ee7c:	db02      	blt.n	801ee84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ee7e:	42bb      	cmp	r3, r7
 801ee80:	f2c0 815b 	blt.w	801f13a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801ee84:	f11c 0c01 	adds.w	ip, ip, #1
 801ee88:	f100 814b 	bmi.w	801f122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ee8c:	4561      	cmp	r1, ip
 801ee8e:	f2c0 8148 	blt.w	801f122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ee92:	3301      	adds	r3, #1
 801ee94:	f100 8145 	bmi.w	801f122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ee98:	429a      	cmp	r2, r3
 801ee9a:	f2c0 8142 	blt.w	801f122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ee9e:	9b07      	ldr	r3, [sp, #28]
 801eea0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801eea2:	9317      	str	r3, [sp, #92]	; 0x5c
 801eea4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801eea6:	2b00      	cmp	r3, #0
 801eea8:	f340 8165 	ble.w	801f176 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801eeac:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801eeae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eeb0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801eeb4:	689b      	ldr	r3, [r3, #8]
 801eeb6:	1422      	asrs	r2, r4, #16
 801eeb8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801eebc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801eec0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eec4:	f100 81d5 	bmi.w	801f272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eec8:	f103 38ff 	add.w	r8, r3, #4294967295
 801eecc:	4542      	cmp	r2, r8
 801eece:	f280 81d0 	bge.w	801f272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eed2:	f1bc 0f00 	cmp.w	ip, #0
 801eed6:	f2c0 81cc 	blt.w	801f272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eeda:	f10e 38ff 	add.w	r8, lr, #4294967295
 801eede:	45c4      	cmp	ip, r8
 801eee0:	f280 81c7 	bge.w	801f272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eee4:	b21b      	sxth	r3, r3
 801eee6:	fb0c 2203 	mla	r2, ip, r3, r2
 801eeea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eeec:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801eef0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801eef4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801eef8:	2900      	cmp	r1, #0
 801eefa:	f000 8182 	beq.w	801f202 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801eefe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ef02:	950b      	str	r5, [sp, #44]	; 0x2c
 801ef04:	0e2d      	lsrs	r5, r5, #24
 801ef06:	9512      	str	r5, [sp, #72]	; 0x48
 801ef08:	b180      	cbz	r0, 801ef2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ef0a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ef0e:	3b01      	subs	r3, #1
 801ef10:	009b      	lsls	r3, r3, #2
 801ef12:	3304      	adds	r3, #4
 801ef14:	eb08 0c03 	add.w	ip, r8, r3
 801ef18:	f858 3003 	ldr.w	r3, [r8, r3]
 801ef1c:	9308      	str	r3, [sp, #32]
 801ef1e:	0e1b      	lsrs	r3, r3, #24
 801ef20:	9310      	str	r3, [sp, #64]	; 0x40
 801ef22:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ef26:	930c      	str	r3, [sp, #48]	; 0x30
 801ef28:	0e1b      	lsrs	r3, r3, #24
 801ef2a:	9313      	str	r3, [sp, #76]	; 0x4c
 801ef2c:	b289      	uxth	r1, r1
 801ef2e:	b280      	uxth	r0, r0
 801ef30:	fb01 f900 	mul.w	r9, r1, r0
 801ef34:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ef38:	0109      	lsls	r1, r1, #4
 801ef3a:	eba1 0809 	sub.w	r8, r1, r9
 801ef3e:	b280      	uxth	r0, r0
 801ef40:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801ef44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ef46:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ef48:	fa1f f888 	uxth.w	r8, r8
 801ef4c:	1a09      	subs	r1, r1, r0
 801ef4e:	b289      	uxth	r1, r1
 801ef50:	fb08 f303 	mul.w	r3, r8, r3
 801ef54:	fb01 330e 	mla	r3, r1, lr, r3
 801ef58:	fb00 3305 	mla	r3, r0, r5, r3
 801ef5c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ef5e:	fb09 3305 	mla	r3, r9, r5, r3
 801ef62:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ef66:	2b00      	cmp	r3, #0
 801ef68:	f000 80d2 	beq.w	801f110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ef6c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ef70:	d01b      	beq.n	801efaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801ef72:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801ef76:	fb0e fa0a 	mul.w	sl, lr, sl
 801ef7a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ef7e:	fb0e fe02 	mul.w	lr, lr, r2
 801ef82:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ef86:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ef8a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ef8e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ef92:	4452      	add	r2, sl
 801ef94:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ef98:	0a12      	lsrs	r2, r2, #8
 801ef9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef9e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801efa2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801efa6:	ea42 020c 	orr.w	r2, r2, ip
 801efaa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801efac:	2dff      	cmp	r5, #255	; 0xff
 801efae:	d021      	beq.n	801eff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801efb0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801efb2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801efb6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801efb8:	fb05 fb0b 	mul.w	fp, r5, fp
 801efbc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801efbe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801efc2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801efc4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801efc8:	fb05 fa0a 	mul.w	sl, r5, sl
 801efcc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801efd0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801efd4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801efd8:	44de      	add	lr, fp
 801efda:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801efde:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801efe2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efe6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801efea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801efee:	ea4e 050a 	orr.w	r5, lr, sl
 801eff2:	950b      	str	r5, [sp, #44]	; 0x2c
 801eff4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eff6:	2dff      	cmp	r5, #255	; 0xff
 801eff8:	d021      	beq.n	801f03e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801effa:	9d08      	ldr	r5, [sp, #32]
 801effc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f000:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f002:	fb05 fb0b 	mul.w	fp, r5, fp
 801f006:	9d08      	ldr	r5, [sp, #32]
 801f008:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f00c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f00e:	fb05 fa0e 	mul.w	sl, r5, lr
 801f012:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f016:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f01a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f01e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f022:	44de      	add	lr, fp
 801f024:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f028:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f02c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f030:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f034:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f038:	ea4e 050a 	orr.w	r5, lr, sl
 801f03c:	9508      	str	r5, [sp, #32]
 801f03e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f040:	2dff      	cmp	r5, #255	; 0xff
 801f042:	d021      	beq.n	801f088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f044:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f046:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f04a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f04c:	fb05 fb0b 	mul.w	fp, r5, fp
 801f050:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f052:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f056:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f058:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f05c:	fb05 fa0a 	mul.w	sl, r5, sl
 801f060:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f064:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f068:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f06c:	44de      	add	lr, fp
 801f06e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f072:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f076:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f07a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f07e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f082:	ea4e 050a 	orr.w	r5, lr, sl
 801f086:	950c      	str	r5, [sp, #48]	; 0x30
 801f088:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f08a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f08e:	9d08      	ldr	r5, [sp, #32]
 801f090:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801f094:	fb08 fc0c 	mul.w	ip, r8, ip
 801f098:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f09c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f0a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f0a2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f0a6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f0aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f0ac:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f0b0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f0b4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f0b8:	fb08 f80e 	mul.w	r8, r8, lr
 801f0bc:	fb01 8202 	mla	r2, r1, r2, r8
 801f0c0:	9908      	ldr	r1, [sp, #32]
 801f0c2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f0c6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f0c8:	fb00 220a 	mla	r2, r0, sl, r2
 801f0cc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801f0d0:	fb09 2900 	mla	r9, r9, r0, r2
 801f0d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f0d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f0dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f0e0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f0e4:	ea4c 0c09 	orr.w	ip, ip, r9
 801f0e8:	2bff      	cmp	r3, #255	; 0xff
 801f0ea:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f0ee:	f040 8091 	bne.w	801f214 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f0f2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f0f6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801f0fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f0fe:	f022 0207 	bic.w	r2, r2, #7
 801f102:	431a      	orrs	r2, r3
 801f104:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f108:	ea4c 0c02 	orr.w	ip, ip, r2
 801f10c:	f8a7 c000 	strh.w	ip, [r7]
 801f110:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f112:	441c      	add	r4, r3
 801f114:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f116:	441e      	add	r6, r3
 801f118:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f11a:	3b01      	subs	r3, #1
 801f11c:	3702      	adds	r7, #2
 801f11e:	9317      	str	r3, [sp, #92]	; 0x5c
 801f120:	e6c0      	b.n	801eea4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f122:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f124:	441c      	add	r4, r3
 801f126:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f128:	441e      	add	r6, r3
 801f12a:	9b07      	ldr	r3, [sp, #28]
 801f12c:	3b01      	subs	r3, #1
 801f12e:	9307      	str	r3, [sp, #28]
 801f130:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f132:	3302      	adds	r3, #2
 801f134:	930a      	str	r3, [sp, #40]	; 0x28
 801f136:	e695      	b.n	801ee64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f138:	d024      	beq.n	801f184 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f13a:	9b07      	ldr	r3, [sp, #28]
 801f13c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801f13e:	3b01      	subs	r3, #1
 801f140:	fb00 4003 	mla	r0, r0, r3, r4
 801f144:	1400      	asrs	r0, r0, #16
 801f146:	f53f aeaa 	bmi.w	801ee9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f14a:	3901      	subs	r1, #1
 801f14c:	4288      	cmp	r0, r1
 801f14e:	f6bf aea6 	bge.w	801ee9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f152:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f154:	fb01 6303 	mla	r3, r1, r3, r6
 801f158:	141b      	asrs	r3, r3, #16
 801f15a:	f53f aea0 	bmi.w	801ee9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f15e:	3a01      	subs	r2, #1
 801f160:	4293      	cmp	r3, r2
 801f162:	f6bf ae9c 	bge.w	801ee9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f166:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f16a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801f16e:	f1bb 0f00 	cmp.w	fp, #0
 801f172:	f300 809a 	bgt.w	801f2aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f176:	9b07      	ldr	r3, [sp, #28]
 801f178:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f17c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f17e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f182:	930a      	str	r3, [sp, #40]	; 0x28
 801f184:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f186:	2b00      	cmp	r3, #0
 801f188:	f340 81eb 	ble.w	801f562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f18c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f190:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f194:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f198:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f19a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f19e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f1a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f1a6:	eef0 6a62 	vmov.f32	s13, s5
 801f1aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f1ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f1b6:	ee16 4a90 	vmov	r4, s13
 801f1ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f1be:	eef0 6a43 	vmov.f32	s13, s6
 801f1c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f1c6:	ee12 2a90 	vmov	r2, s5
 801f1ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f1ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1d2:	ee13 2a10 	vmov	r2, s6
 801f1d6:	9327      	str	r3, [sp, #156]	; 0x9c
 801f1d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f1da:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1de:	9328      	str	r3, [sp, #160]	; 0xa0
 801f1e0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f1e2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f1e4:	3b01      	subs	r3, #1
 801f1e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1ea:	9316      	str	r3, [sp, #88]	; 0x58
 801f1ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f1ee:	bf08      	it	eq
 801f1f0:	4613      	moveq	r3, r2
 801f1f2:	ee16 6a90 	vmov	r6, s13
 801f1f6:	9307      	str	r3, [sp, #28]
 801f1f8:	eeb0 3a67 	vmov.f32	s6, s15
 801f1fc:	eef0 2a47 	vmov.f32	s5, s14
 801f200:	e622      	b.n	801ee48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f202:	2800      	cmp	r0, #0
 801f204:	f43f ae92 	beq.w	801ef2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f208:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f20c:	9308      	str	r3, [sp, #32]
 801f20e:	0e1b      	lsrs	r3, r3, #24
 801f210:	9310      	str	r3, [sp, #64]	; 0x40
 801f212:	e68b      	b.n	801ef2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f214:	8839      	ldrh	r1, [r7, #0]
 801f216:	4dd4      	ldr	r5, [pc, #848]	; (801f568 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f218:	43db      	mvns	r3, r3
 801f21a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f21e:	fa5f f883 	uxtb.w	r8, r3
 801f222:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f226:	fb0e fe08 	mul.w	lr, lr, r8
 801f22a:	10c8      	asrs	r0, r1, #3
 801f22c:	00cb      	lsls	r3, r1, #3
 801f22e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f232:	f10e 0101 	add.w	r1, lr, #1
 801f236:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f23a:	fb00 f008 	mul.w	r0, r0, r8
 801f23e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f242:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f246:	f100 0e01 	add.w	lr, r0, #1
 801f24a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f24e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f252:	b2db      	uxtb	r3, r3
 801f254:	b2c9      	uxtb	r1, r1
 801f256:	00d2      	lsls	r2, r2, #3
 801f258:	fb03 f308 	mul.w	r3, r3, r8
 801f25c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f260:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f264:	430a      	orrs	r2, r1
 801f266:	1c59      	adds	r1, r3, #1
 801f268:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f26c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f270:	e748      	b.n	801f104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f272:	f112 0801 	adds.w	r8, r2, #1
 801f276:	f53f af4b 	bmi.w	801f110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f27a:	4543      	cmp	r3, r8
 801f27c:	f6ff af48 	blt.w	801f110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f280:	f11c 0801 	adds.w	r8, ip, #1
 801f284:	f53f af44 	bmi.w	801f110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f288:	45c6      	cmp	lr, r8
 801f28a:	f6ff af41 	blt.w	801f110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f28e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f292:	fa0f f28e 	sxth.w	r2, lr
 801f296:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f29a:	9200      	str	r2, [sp, #0]
 801f29c:	b21b      	sxth	r3, r3
 801f29e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f2a0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801f2a2:	4639      	mov	r1, r7
 801f2a4:	f7ff fc87 	bl	801ebb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f2a8:	e732      	b.n	801f110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f2aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f2ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f2ae:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f2b2:	1421      	asrs	r1, r4, #16
 801f2b4:	1433      	asrs	r3, r6, #16
 801f2b6:	fb07 1303 	mla	r3, r7, r3, r1
 801f2ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f2bc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f2c0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f2c4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f2c8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f2cc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f2d0:	2a00      	cmp	r2, #0
 801f2d2:	f000 8107 	beq.w	801f4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f2d6:	684d      	ldr	r5, [r1, #4]
 801f2d8:	950d      	str	r5, [sp, #52]	; 0x34
 801f2da:	0e2d      	lsrs	r5, r5, #24
 801f2dc:	9514      	str	r5, [sp, #80]	; 0x50
 801f2de:	b178      	cbz	r0, 801f300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f2e0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801f2e4:	3f01      	subs	r7, #1
 801f2e6:	00bf      	lsls	r7, r7, #2
 801f2e8:	3704      	adds	r7, #4
 801f2ea:	eb01 0e07 	add.w	lr, r1, r7
 801f2ee:	59c9      	ldr	r1, [r1, r7]
 801f2f0:	9109      	str	r1, [sp, #36]	; 0x24
 801f2f2:	0e09      	lsrs	r1, r1, #24
 801f2f4:	9111      	str	r1, [sp, #68]	; 0x44
 801f2f6:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f2fa:	910e      	str	r1, [sp, #56]	; 0x38
 801f2fc:	0e09      	lsrs	r1, r1, #24
 801f2fe:	9115      	str	r1, [sp, #84]	; 0x54
 801f300:	b292      	uxth	r2, r2
 801f302:	b280      	uxth	r0, r0
 801f304:	fb02 f900 	mul.w	r9, r2, r0
 801f308:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f30c:	0112      	lsls	r2, r2, #4
 801f30e:	eba2 0e09 	sub.w	lr, r2, r9
 801f312:	b280      	uxth	r0, r0
 801f314:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801f318:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f31a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f31c:	fa1f fe8e 	uxth.w	lr, lr
 801f320:	1a09      	subs	r1, r1, r0
 801f322:	b289      	uxth	r1, r1
 801f324:	fb0e f202 	mul.w	r2, lr, r2
 801f328:	fb01 220c 	mla	r2, r1, ip, r2
 801f32c:	fb00 2205 	mla	r2, r0, r5, r2
 801f330:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f332:	fb09 2205 	mla	r2, r9, r5, r2
 801f336:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f33a:	2a00      	cmp	r2, #0
 801f33c:	f000 80c9 	beq.w	801f4d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f340:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f344:	d019      	beq.n	801f37a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f346:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f34a:	fb0c fa0a 	mul.w	sl, ip, sl
 801f34e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f352:	fb0c fc03 	mul.w	ip, ip, r3
 801f356:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f35a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f35e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f362:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f366:	4453      	add	r3, sl
 801f368:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f36c:	0a1b      	lsrs	r3, r3, #8
 801f36e:	0a3f      	lsrs	r7, r7, #8
 801f370:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f374:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f378:	433b      	orrs	r3, r7
 801f37a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f37c:	2dff      	cmp	r5, #255	; 0xff
 801f37e:	d020      	beq.n	801f3c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f380:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f382:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f386:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f388:	436f      	muls	r7, r5
 801f38a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f38c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f390:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f392:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f396:	fb05 fa0a 	mul.w	sl, r5, sl
 801f39a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f39e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3a2:	44bc      	add	ip, r7
 801f3a4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f3a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f3ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f3b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f3bc:	ea4c 050a 	orr.w	r5, ip, sl
 801f3c0:	950d      	str	r5, [sp, #52]	; 0x34
 801f3c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f3c4:	2dff      	cmp	r5, #255	; 0xff
 801f3c6:	d020      	beq.n	801f40a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f3c8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f3ca:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f3ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f3d0:	436f      	muls	r7, r5
 801f3d2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f3d4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f3d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f3da:	fb05 fa0c 	mul.w	sl, r5, ip
 801f3de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f3e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f3ea:	44bc      	add	ip, r7
 801f3ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f3f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f3f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f3fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f400:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f404:	ea4c 050a 	orr.w	r5, ip, sl
 801f408:	9509      	str	r5, [sp, #36]	; 0x24
 801f40a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f40c:	2dff      	cmp	r5, #255	; 0xff
 801f40e:	d020      	beq.n	801f452 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f410:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f412:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f416:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f418:	436f      	muls	r7, r5
 801f41a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f41c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f420:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f422:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f426:	fb05 fa0a 	mul.w	sl, r5, sl
 801f42a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f42e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f432:	44bc      	add	ip, r7
 801f434:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f438:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f43c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f440:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f444:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f448:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f44c:	ea4c 050a 	orr.w	r5, ip, sl
 801f450:	950e      	str	r5, [sp, #56]	; 0x38
 801f452:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f454:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f458:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f45a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f45e:	fb0e f707 	mul.w	r7, lr, r7
 801f462:	fb01 770c 	mla	r7, r1, ip, r7
 801f466:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f46a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f46c:	fb00 770c 	mla	r7, r0, ip, r7
 801f470:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f474:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f476:	fb09 770c 	mla	r7, r9, ip, r7
 801f47a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f47e:	fb0e fe0c 	mul.w	lr, lr, ip
 801f482:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f486:	fb01 e303 	mla	r3, r1, r3, lr
 801f48a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f48c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f490:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f492:	fb00 330a 	mla	r3, r0, sl, r3
 801f496:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801f49a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f49e:	0a3f      	lsrs	r7, r7, #8
 801f4a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f4a4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f4a8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f4ac:	ea47 070c 	orr.w	r7, r7, ip
 801f4b0:	2aff      	cmp	r2, #255	; 0xff
 801f4b2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f4b6:	d11e      	bne.n	801f4f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f4b8:	097a      	lsrs	r2, r7, #5
 801f4ba:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801f4be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f4c2:	f023 0307 	bic.w	r3, r3, #7
 801f4c6:	4313      	orrs	r3, r2
 801f4c8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f4cc:	431f      	orrs	r7, r3
 801f4ce:	f8a8 7000 	strh.w	r7, [r8]
 801f4d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f4d4:	441c      	add	r4, r3
 801f4d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f4d8:	f108 0802 	add.w	r8, r8, #2
 801f4dc:	441e      	add	r6, r3
 801f4de:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f4e2:	e644      	b.n	801f16e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f4e4:	2800      	cmp	r0, #0
 801f4e6:	f43f af0b 	beq.w	801f300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f4ea:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f4ee:	9109      	str	r1, [sp, #36]	; 0x24
 801f4f0:	0e09      	lsrs	r1, r1, #24
 801f4f2:	9111      	str	r1, [sp, #68]	; 0x44
 801f4f4:	e704      	b.n	801f300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f4f6:	f8b8 1000 	ldrh.w	r1, [r8]
 801f4fa:	43d2      	mvns	r2, r2
 801f4fc:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f500:	fa5f fe82 	uxtb.w	lr, r2
 801f504:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f508:	fb0c fc0e 	mul.w	ip, ip, lr
 801f50c:	10c8      	asrs	r0, r1, #3
 801f50e:	00ca      	lsls	r2, r1, #3
 801f510:	f10c 0101 	add.w	r1, ip, #1
 801f514:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f518:	0c39      	lsrs	r1, r7, #16
 801f51a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f51e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f522:	4911      	ldr	r1, [pc, #68]	; (801f568 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f524:	fb00 f00e 	mul.w	r0, r0, lr
 801f528:	fa5f fc8c 	uxtb.w	ip, ip
 801f52c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f530:	b2d2      	uxtb	r2, r2
 801f532:	1c41      	adds	r1, r0, #1
 801f534:	fb02 f20e 	mul.w	r2, r2, lr
 801f538:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f53c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f540:	1c51      	adds	r1, r2, #1
 801f542:	00c0      	lsls	r0, r0, #3
 801f544:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f548:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f54c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f550:	ea4c 0c00 	orr.w	ip, ip, r0
 801f554:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f558:	ea47 0c0c 	orr.w	ip, r7, ip
 801f55c:	f8a8 c000 	strh.w	ip, [r8]
 801f560:	e7b7      	b.n	801f4d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f562:	b01b      	add	sp, #108	; 0x6c
 801f564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f568:	fffff800 	.word	0xfffff800

0801f56c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f56c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f570:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f574:	2d00      	cmp	r5, #0
 801f576:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f57a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f57e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f582:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f586:	fb05 0e03 	mla	lr, r5, r3, r0
 801f58a:	f2c0 808c 	blt.w	801f6a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f58e:	45a9      	cmp	r9, r5
 801f590:	f340 8089 	ble.w	801f6a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f594:	2800      	cmp	r0, #0
 801f596:	f2c0 8084 	blt.w	801f6a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f59a:	4580      	cmp	r8, r0
 801f59c:	f340 8081 	ble.w	801f6a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f5a0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f5a4:	f01e 0f01 	tst.w	lr, #1
 801f5a8:	5d16      	ldrb	r6, [r2, r4]
 801f5aa:	bf0c      	ite	eq
 801f5ac:	f006 060f 	andeq.w	r6, r6, #15
 801f5b0:	1136      	asrne	r6, r6, #4
 801f5b2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f5b6:	b2f6      	uxtb	r6, r6
 801f5b8:	1c44      	adds	r4, r0, #1
 801f5ba:	d477      	bmi.n	801f6ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f5bc:	45a0      	cmp	r8, r4
 801f5be:	dd75      	ble.n	801f6ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f5c0:	2f00      	cmp	r7, #0
 801f5c2:	d075      	beq.n	801f6b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f5c4:	f10e 0a01 	add.w	sl, lr, #1
 801f5c8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f5cc:	f01a 0f01 	tst.w	sl, #1
 801f5d0:	5d14      	ldrb	r4, [r2, r4]
 801f5d2:	bf0c      	ite	eq
 801f5d4:	f004 040f 	andeq.w	r4, r4, #15
 801f5d8:	1124      	asrne	r4, r4, #4
 801f5da:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f5de:	b2e4      	uxtb	r4, r4
 801f5e0:	3501      	adds	r5, #1
 801f5e2:	d469      	bmi.n	801f6b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f5e4:	45a9      	cmp	r9, r5
 801f5e6:	dd67      	ble.n	801f6b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f5e8:	f1bc 0f00 	cmp.w	ip, #0
 801f5ec:	d067      	beq.n	801f6be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f5ee:	2800      	cmp	r0, #0
 801f5f0:	db60      	blt.n	801f6b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f5f2:	4580      	cmp	r8, r0
 801f5f4:	dd5e      	ble.n	801f6b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f5f6:	eb03 090e 	add.w	r9, r3, lr
 801f5fa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f5fe:	f019 0f01 	tst.w	r9, #1
 801f602:	5d55      	ldrb	r5, [r2, r5]
 801f604:	bf0c      	ite	eq
 801f606:	f005 050f 	andeq.w	r5, r5, #15
 801f60a:	112d      	asrne	r5, r5, #4
 801f60c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f610:	b2ed      	uxtb	r5, r5
 801f612:	3001      	adds	r0, #1
 801f614:	d456      	bmi.n	801f6c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f616:	4580      	cmp	r8, r0
 801f618:	dd54      	ble.n	801f6c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f61a:	2f00      	cmp	r7, #0
 801f61c:	d054      	beq.n	801f6c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f61e:	3301      	adds	r3, #1
 801f620:	449e      	add	lr, r3
 801f622:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f626:	f01e 0f01 	tst.w	lr, #1
 801f62a:	5cd0      	ldrb	r0, [r2, r3]
 801f62c:	bf0c      	ite	eq
 801f62e:	f000 000f 	andeq.w	r0, r0, #15
 801f632:	1100      	asrne	r0, r0, #4
 801f634:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f638:	b2c3      	uxtb	r3, r0
 801f63a:	b2ba      	uxth	r2, r7
 801f63c:	fa1f fc8c 	uxth.w	ip, ip
 801f640:	fb02 f00c 	mul.w	r0, r2, ip
 801f644:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f648:	0112      	lsls	r2, r2, #4
 801f64a:	fa1f fc8c 	uxth.w	ip, ip
 801f64e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f652:	1a12      	subs	r2, r2, r0
 801f654:	eba7 070c 	sub.w	r7, r7, ip
 801f658:	b292      	uxth	r2, r2
 801f65a:	b2bf      	uxth	r7, r7
 801f65c:	4362      	muls	r2, r4
 801f65e:	fb06 2207 	mla	r2, r6, r7, r2
 801f662:	fb0c 2505 	mla	r5, ip, r5, r2
 801f666:	fb00 5303 	mla	r3, r0, r3, r5
 801f66a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f66e:	b1b3      	cbz	r3, 801f69e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f670:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f674:	435a      	muls	r2, r3
 801f676:	1c53      	adds	r3, r2, #1
 801f678:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f67c:	4a2d      	ldr	r2, [pc, #180]	; (801f734 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f67e:	121b      	asrs	r3, r3, #8
 801f680:	6812      	ldr	r2, [r2, #0]
 801f682:	2bff      	cmp	r3, #255	; 0xff
 801f684:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f688:	d120      	bne.n	801f6cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f68a:	4b2b      	ldr	r3, [pc, #172]	; (801f738 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f68c:	0950      	lsrs	r0, r2, #5
 801f68e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f692:	4033      	ands	r3, r6
 801f694:	4318      	orrs	r0, r3
 801f696:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f69a:	4302      	orrs	r2, r0
 801f69c:	800a      	strh	r2, [r1, #0]
 801f69e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f6a2:	2600      	movs	r6, #0
 801f6a4:	e788      	b.n	801f5b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f6a6:	2400      	movs	r4, #0
 801f6a8:	4626      	mov	r6, r4
 801f6aa:	e799      	b.n	801f5e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f6ac:	2400      	movs	r4, #0
 801f6ae:	e797      	b.n	801f5e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f6b0:	463c      	mov	r4, r7
 801f6b2:	e795      	b.n	801f5e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f6b4:	2500      	movs	r5, #0
 801f6b6:	e7ac      	b.n	801f612 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f6b8:	2300      	movs	r3, #0
 801f6ba:	461d      	mov	r5, r3
 801f6bc:	e7bd      	b.n	801f63a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f6be:	4663      	mov	r3, ip
 801f6c0:	4665      	mov	r5, ip
 801f6c2:	e7ba      	b.n	801f63a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f6c4:	2300      	movs	r3, #0
 801f6c6:	e7b8      	b.n	801f63a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f6c8:	463b      	mov	r3, r7
 801f6ca:	e7b6      	b.n	801f63a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f6cc:	880d      	ldrh	r5, [r1, #0]
 801f6ce:	b29f      	uxth	r7, r3
 801f6d0:	122c      	asrs	r4, r5, #8
 801f6d2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f6d6:	43db      	mvns	r3, r3
 801f6d8:	b2db      	uxtb	r3, r3
 801f6da:	fb10 f007 	smulbb	r0, r0, r7
 801f6de:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f6e2:	fb04 0403 	mla	r4, r4, r3, r0
 801f6e6:	b2f6      	uxtb	r6, r6
 801f6e8:	10e8      	asrs	r0, r5, #3
 801f6ea:	b2d2      	uxtb	r2, r2
 801f6ec:	00ed      	lsls	r5, r5, #3
 801f6ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f6f2:	fb12 f207 	smulbb	r2, r2, r7
 801f6f6:	fb16 f607 	smulbb	r6, r6, r7
 801f6fa:	b2ed      	uxtb	r5, r5
 801f6fc:	b2a4      	uxth	r4, r4
 801f6fe:	fb00 6603 	mla	r6, r0, r3, r6
 801f702:	fb05 2303 	mla	r3, r5, r3, r2
 801f706:	b29a      	uxth	r2, r3
 801f708:	1c63      	adds	r3, r4, #1
 801f70a:	b2b0      	uxth	r0, r6
 801f70c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f710:	1c53      	adds	r3, r2, #1
 801f712:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f716:	1c42      	adds	r2, r0, #1
 801f718:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f71c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f720:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f724:	0940      	lsrs	r0, r0, #5
 801f726:	4323      	orrs	r3, r4
 801f728:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f72c:	4303      	orrs	r3, r0
 801f72e:	800b      	strh	r3, [r1, #0]
 801f730:	e7b5      	b.n	801f69e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f732:	bf00      	nop
 801f734:	20015810 	.word	0x20015810
 801f738:	00fff800 	.word	0x00fff800

0801f73c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f73c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f740:	b097      	sub	sp, #92	; 0x5c
 801f742:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f746:	9214      	str	r2, [sp, #80]	; 0x50
 801f748:	9309      	str	r3, [sp, #36]	; 0x24
 801f74a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f74c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f750:	910d      	str	r1, [sp, #52]	; 0x34
 801f752:	930f      	str	r3, [sp, #60]	; 0x3c
 801f754:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f758:	9015      	str	r0, [sp, #84]	; 0x54
 801f75a:	6850      	ldr	r0, [r2, #4]
 801f75c:	6812      	ldr	r2, [r2, #0]
 801f75e:	fb00 1303 	mla	r3, r0, r3, r1
 801f762:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f766:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f768:	689b      	ldr	r3, [r3, #8]
 801f76a:	3301      	adds	r3, #1
 801f76c:	f023 0301 	bic.w	r3, r3, #1
 801f770:	930a      	str	r3, [sp, #40]	; 0x28
 801f772:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f774:	681f      	ldr	r7, [r3, #0]
 801f776:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f778:	2b00      	cmp	r3, #0
 801f77a:	dc03      	bgt.n	801f784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f77c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f77e:	2b00      	cmp	r3, #0
 801f780:	f340 8287 	ble.w	801fc92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f784:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f786:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f78a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f78e:	1e48      	subs	r0, r1, #1
 801f790:	f102 3cff 	add.w	ip, r2, #4294967295
 801f794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f796:	2b00      	cmp	r3, #0
 801f798:	f340 80c4 	ble.w	801f924 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f79c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f7a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f7a4:	d406      	bmi.n	801f7b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f7a6:	4586      	cmp	lr, r0
 801f7a8:	da04      	bge.n	801f7b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f7aa:	2b00      	cmp	r3, #0
 801f7ac:	db02      	blt.n	801f7b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f7ae:	4563      	cmp	r3, ip
 801f7b0:	f2c0 80b9 	blt.w	801f926 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f7b4:	f11e 0e01 	adds.w	lr, lr, #1
 801f7b8:	f100 80aa 	bmi.w	801f910 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f7bc:	4571      	cmp	r1, lr
 801f7be:	f2c0 80a7 	blt.w	801f910 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f7c2:	3301      	adds	r3, #1
 801f7c4:	f100 80a4 	bmi.w	801f910 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f7c8:	429a      	cmp	r2, r3
 801f7ca:	f2c0 80a1 	blt.w	801f910 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f7ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7d0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f7d4:	930e      	str	r3, [sp, #56]	; 0x38
 801f7d6:	46c8      	mov	r8, r9
 801f7d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f7da:	2b00      	cmp	r3, #0
 801f7dc:	f340 80c3 	ble.w	801f966 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f7e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f7e2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f7e6:	1423      	asrs	r3, r4, #16
 801f7e8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f7ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f7f0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f7f4:	f100 814d 	bmi.w	801fa92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f7f8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f7fc:	455b      	cmp	r3, fp
 801f7fe:	f280 8148 	bge.w	801fa92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f802:	2800      	cmp	r0, #0
 801f804:	f2c0 8145 	blt.w	801fa92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f808:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f80c:	4558      	cmp	r0, fp
 801f80e:	f280 8140 	bge.w	801fa92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f812:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f814:	fb00 3305 	mla	r3, r0, r5, r3
 801f818:	0858      	lsrs	r0, r3, #1
 801f81a:	07dd      	lsls	r5, r3, #31
 801f81c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f820:	bf54      	ite	pl
 801f822:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f826:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f82a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f82e:	fa5f fc8c 	uxtb.w	ip, ip
 801f832:	2a00      	cmp	r2, #0
 801f834:	f000 80db 	beq.w	801f9ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f838:	1c58      	adds	r0, r3, #1
 801f83a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f83e:	07c0      	lsls	r0, r0, #31
 801f840:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f844:	bf54      	ite	pl
 801f846:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f84a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f84e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f852:	fa5f f08e 	uxtb.w	r0, lr
 801f856:	9010      	str	r0, [sp, #64]	; 0x40
 801f858:	b1c9      	cbz	r1, 801f88e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f85a:	4453      	add	r3, sl
 801f85c:	0858      	lsrs	r0, r3, #1
 801f85e:	07dd      	lsls	r5, r3, #31
 801f860:	5c38      	ldrb	r0, [r7, r0]
 801f862:	bf54      	ite	pl
 801f864:	f000 000f 	andpl.w	r0, r0, #15
 801f868:	1100      	asrmi	r0, r0, #4
 801f86a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f86e:	3301      	adds	r3, #1
 801f870:	b2c0      	uxtb	r0, r0
 801f872:	900b      	str	r0, [sp, #44]	; 0x2c
 801f874:	0858      	lsrs	r0, r3, #1
 801f876:	07dd      	lsls	r5, r3, #31
 801f878:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f87c:	bf54      	ite	pl
 801f87e:	f00e 030f 	andpl.w	r3, lr, #15
 801f882:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f886:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f88a:	b2db      	uxtb	r3, r3
 801f88c:	9311      	str	r3, [sp, #68]	; 0x44
 801f88e:	b292      	uxth	r2, r2
 801f890:	b289      	uxth	r1, r1
 801f892:	fb02 f301 	mul.w	r3, r2, r1
 801f896:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f89a:	0112      	lsls	r2, r2, #4
 801f89c:	b289      	uxth	r1, r1
 801f89e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f8a2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f8a4:	1ad2      	subs	r2, r2, r3
 801f8a6:	1a40      	subs	r0, r0, r1
 801f8a8:	b292      	uxth	r2, r2
 801f8aa:	436a      	muls	r2, r5
 801f8ac:	b280      	uxth	r0, r0
 801f8ae:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f8b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f8b4:	fb01 c102 	mla	r1, r1, r2, ip
 801f8b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f8ba:	fb03 1302 	mla	r3, r3, r2, r1
 801f8be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8c2:	b1db      	cbz	r3, 801f8fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f8c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f8c6:	4353      	muls	r3, r2
 801f8c8:	1c5a      	adds	r2, r3, #1
 801f8ca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f8ce:	4ac6      	ldr	r2, [pc, #792]	; (801fbe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f8d0:	121b      	asrs	r3, r3, #8
 801f8d2:	6812      	ldr	r2, [r2, #0]
 801f8d4:	2bff      	cmp	r3, #255	; 0xff
 801f8d6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f8da:	f040 8099 	bne.w	801fa10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f8de:	0953      	lsrs	r3, r2, #5
 801f8e0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f8e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f8e8:	f02c 0c07 	bic.w	ip, ip, #7
 801f8ec:	ea43 0c0c 	orr.w	ip, r3, ip
 801f8f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f8f4:	ea4c 0202 	orr.w	r2, ip, r2
 801f8f8:	f8a8 2000 	strh.w	r2, [r8]
 801f8fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f8fe:	441c      	add	r4, r3
 801f900:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f902:	441e      	add	r6, r3
 801f904:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f906:	3b01      	subs	r3, #1
 801f908:	f108 0802 	add.w	r8, r8, #2
 801f90c:	930e      	str	r3, [sp, #56]	; 0x38
 801f90e:	e763      	b.n	801f7d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f910:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f912:	441c      	add	r4, r3
 801f914:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f916:	441e      	add	r6, r3
 801f918:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f91a:	3b01      	subs	r3, #1
 801f91c:	9309      	str	r3, [sp, #36]	; 0x24
 801f91e:	f109 0902 	add.w	r9, r9, #2
 801f922:	e737      	b.n	801f794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f924:	d024      	beq.n	801f970 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f926:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f928:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f92a:	3b01      	subs	r3, #1
 801f92c:	fb00 4003 	mla	r0, r0, r3, r4
 801f930:	1400      	asrs	r0, r0, #16
 801f932:	f53f af4c 	bmi.w	801f7ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f936:	3901      	subs	r1, #1
 801f938:	4288      	cmp	r0, r1
 801f93a:	f6bf af48 	bge.w	801f7ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f93e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f940:	fb01 6303 	mla	r3, r1, r3, r6
 801f944:	141b      	asrs	r3, r3, #16
 801f946:	f53f af42 	bmi.w	801f7ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f94a:	3a01      	subs	r2, #1
 801f94c:	4293      	cmp	r3, r2
 801f94e:	f6bf af3e 	bge.w	801f7ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f952:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f956:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f95a:	930e      	str	r3, [sp, #56]	; 0x38
 801f95c:	46c8      	mov	r8, r9
 801f95e:	f1bb 0f00 	cmp.w	fp, #0
 801f962:	f300 80b7 	bgt.w	801fad4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f966:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f968:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f96c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f970:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f972:	2b00      	cmp	r3, #0
 801f974:	f340 818d 	ble.w	801fc92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f978:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f97c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f980:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f984:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f986:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f98a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f98e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f992:	eef0 6a62 	vmov.f32	s13, s5
 801f996:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f99a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f99e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f9a2:	ee16 4a90 	vmov	r4, s13
 801f9a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f9aa:	eef0 6a43 	vmov.f32	s13, s6
 801f9ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f9b2:	ee12 2a90 	vmov	r2, s5
 801f9b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f9ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801f9be:	ee13 2a10 	vmov	r2, s6
 801f9c2:	9323      	str	r3, [sp, #140]	; 0x8c
 801f9c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f9ca:	9324      	str	r3, [sp, #144]	; 0x90
 801f9cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f9ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f9d0:	3b01      	subs	r3, #1
 801f9d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f9d6:	930d      	str	r3, [sp, #52]	; 0x34
 801f9d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9da:	bf08      	it	eq
 801f9dc:	4613      	moveq	r3, r2
 801f9de:	ee16 6a90 	vmov	r6, s13
 801f9e2:	9309      	str	r3, [sp, #36]	; 0x24
 801f9e4:	eeb0 3a67 	vmov.f32	s6, s15
 801f9e8:	eef0 2a47 	vmov.f32	s5, s14
 801f9ec:	e6c3      	b.n	801f776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f9ee:	2900      	cmp	r1, #0
 801f9f0:	f43f af4d 	beq.w	801f88e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f9f4:	eb0a 0003 	add.w	r0, sl, r3
 801f9f8:	0843      	lsrs	r3, r0, #1
 801f9fa:	07c0      	lsls	r0, r0, #31
 801f9fc:	5cfb      	ldrb	r3, [r7, r3]
 801f9fe:	bf54      	ite	pl
 801fa00:	f003 030f 	andpl.w	r3, r3, #15
 801fa04:	111b      	asrmi	r3, r3, #4
 801fa06:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fa0a:	b2db      	uxtb	r3, r3
 801fa0c:	930b      	str	r3, [sp, #44]	; 0x2c
 801fa0e:	e73e      	b.n	801f88e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fa10:	f8b8 e000 	ldrh.w	lr, [r8]
 801fa14:	fa1f fb83 	uxth.w	fp, r3
 801fa18:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fa1c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fa20:	43db      	mvns	r3, r3
 801fa22:	b2db      	uxtb	r3, r3
 801fa24:	fb11 f10b 	smulbb	r1, r1, fp
 801fa28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fa2c:	fb00 1003 	mla	r0, r0, r3, r1
 801fa30:	fa5f fc8c 	uxtb.w	ip, ip
 801fa34:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fa38:	b2d2      	uxtb	r2, r2
 801fa3a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fa3e:	b280      	uxth	r0, r0
 801fa40:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fa44:	fb1c fc0b 	smulbb	ip, ip, fp
 801fa48:	fa5f fe8e 	uxtb.w	lr, lr
 801fa4c:	fb12 fb0b 	smulbb	fp, r2, fp
 801fa50:	fb01 cc03 	mla	ip, r1, r3, ip
 801fa54:	fb0e bb03 	mla	fp, lr, r3, fp
 801fa58:	1c43      	adds	r3, r0, #1
 801fa5a:	fa1f fc8c 	uxth.w	ip, ip
 801fa5e:	fa1f fb8b 	uxth.w	fp, fp
 801fa62:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fa66:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801fa6a:	f10c 0101 	add.w	r1, ip, #1
 801fa6e:	f10b 0001 	add.w	r0, fp, #1
 801fa72:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801fa76:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fa7a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fa7e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fa82:	4318      	orrs	r0, r3
 801fa84:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801fa88:	ea40 000c 	orr.w	r0, r0, ip
 801fa8c:	f8a8 0000 	strh.w	r0, [r8]
 801fa90:	e734      	b.n	801f8fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fa92:	f113 0b01 	adds.w	fp, r3, #1
 801fa96:	f53f af31 	bmi.w	801f8fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fa9a:	45dc      	cmp	ip, fp
 801fa9c:	f6ff af2e 	blt.w	801f8fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801faa0:	f110 0b01 	adds.w	fp, r0, #1
 801faa4:	f53f af2a 	bmi.w	801f8fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801faa8:	45de      	cmp	lr, fp
 801faaa:	f6ff af27 	blt.w	801f8fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801faae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fab0:	9302      	str	r3, [sp, #8]
 801fab2:	fa0f f38e 	sxth.w	r3, lr
 801fab6:	9301      	str	r3, [sp, #4]
 801fab8:	fa0f f38c 	sxth.w	r3, ip
 801fabc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fac0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fac4:	9300      	str	r3, [sp, #0]
 801fac6:	463a      	mov	r2, r7
 801fac8:	4653      	mov	r3, sl
 801faca:	4641      	mov	r1, r8
 801facc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801face:	f7ff fd4d 	bl	801f56c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801fad2:	e713      	b.n	801f8fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fad4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801fad6:	1422      	asrs	r2, r4, #16
 801fad8:	1433      	asrs	r3, r6, #16
 801fada:	fb05 2303 	mla	r3, r5, r3, r2
 801fade:	085a      	lsrs	r2, r3, #1
 801fae0:	07dd      	lsls	r5, r3, #31
 801fae2:	5cba      	ldrb	r2, [r7, r2]
 801fae4:	bf54      	ite	pl
 801fae6:	f002 020f 	andpl.w	r2, r2, #15
 801faea:	1112      	asrmi	r2, r2, #4
 801faec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801faf0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801faf4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801faf8:	b2d2      	uxtb	r2, r2
 801fafa:	2900      	cmp	r1, #0
 801fafc:	d076      	beq.n	801fbec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801fafe:	f103 0e01 	add.w	lr, r3, #1
 801fb02:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801fb06:	f01e 0f01 	tst.w	lr, #1
 801fb0a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fb0e:	bf0c      	ite	eq
 801fb10:	f00c 0c0f 	andeq.w	ip, ip, #15
 801fb14:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801fb18:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fb1c:	fa5f f58c 	uxtb.w	r5, ip
 801fb20:	9512      	str	r5, [sp, #72]	; 0x48
 801fb22:	b300      	cbz	r0, 801fb66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fb24:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fb26:	442b      	add	r3, r5
 801fb28:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fb2c:	07dd      	lsls	r5, r3, #31
 801fb2e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fb32:	bf54      	ite	pl
 801fb34:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fb38:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fb3c:	3301      	adds	r3, #1
 801fb3e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fb42:	fa5f f58c 	uxtb.w	r5, ip
 801fb46:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fb4a:	950c      	str	r5, [sp, #48]	; 0x30
 801fb4c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fb50:	07dd      	lsls	r5, r3, #31
 801fb52:	bf54      	ite	pl
 801fb54:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fb58:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fb5c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fb60:	fa5f f38c 	uxtb.w	r3, ip
 801fb64:	9313      	str	r3, [sp, #76]	; 0x4c
 801fb66:	b289      	uxth	r1, r1
 801fb68:	b280      	uxth	r0, r0
 801fb6a:	fb01 f300 	mul.w	r3, r1, r0
 801fb6e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801fb72:	0109      	lsls	r1, r1, #4
 801fb74:	b280      	uxth	r0, r0
 801fb76:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801fb7a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fb7c:	1ac9      	subs	r1, r1, r3
 801fb7e:	ebac 0c00 	sub.w	ip, ip, r0
 801fb82:	b289      	uxth	r1, r1
 801fb84:	4369      	muls	r1, r5
 801fb86:	fa1f fc8c 	uxth.w	ip, ip
 801fb8a:	fb02 120c 	mla	r2, r2, ip, r1
 801fb8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fb90:	fb00 2001 	mla	r0, r0, r1, r2
 801fb94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801fb96:	fb03 0302 	mla	r3, r3, r2, r0
 801fb9a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb9e:	b1d3      	cbz	r3, 801fbd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801fba0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fba2:	4353      	muls	r3, r2
 801fba4:	1c5a      	adds	r2, r3, #1
 801fba6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fbaa:	4a0f      	ldr	r2, [pc, #60]	; (801fbe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fbac:	121b      	asrs	r3, r3, #8
 801fbae:	6812      	ldr	r2, [r2, #0]
 801fbb0:	2bff      	cmp	r3, #255	; 0xff
 801fbb2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fbb6:	d12d      	bne.n	801fc14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fbb8:	0953      	lsrs	r3, r2, #5
 801fbba:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801fbbe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fbc2:	f02c 0c07 	bic.w	ip, ip, #7
 801fbc6:	ea43 0c0c 	orr.w	ip, r3, ip
 801fbca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fbce:	ea4c 0202 	orr.w	r2, ip, r2
 801fbd2:	f8a8 2000 	strh.w	r2, [r8]
 801fbd6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801fbd8:	441c      	add	r4, r3
 801fbda:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fbdc:	f108 0802 	add.w	r8, r8, #2
 801fbe0:	441e      	add	r6, r3
 801fbe2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fbe6:	e6ba      	b.n	801f95e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fbe8:	20015810 	.word	0x20015810
 801fbec:	2800      	cmp	r0, #0
 801fbee:	d0ba      	beq.n	801fb66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fbf0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fbf2:	442b      	add	r3, r5
 801fbf4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fbf8:	07db      	lsls	r3, r3, #31
 801fbfa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fbfe:	bf54      	ite	pl
 801fc00:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fc04:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fc08:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fc0c:	fa5f f38c 	uxtb.w	r3, ip
 801fc10:	930c      	str	r3, [sp, #48]	; 0x30
 801fc12:	e7a8      	b.n	801fb66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fc14:	f8b8 e000 	ldrh.w	lr, [r8]
 801fc18:	fa1f fa83 	uxth.w	sl, r3
 801fc1c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fc20:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fc24:	43db      	mvns	r3, r3
 801fc26:	b2db      	uxtb	r3, r3
 801fc28:	fb11 f10a 	smulbb	r1, r1, sl
 801fc2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fc30:	fb00 1003 	mla	r0, r0, r3, r1
 801fc34:	b2d2      	uxtb	r2, r2
 801fc36:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fc3a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fc3e:	fa5f fe8e 	uxtb.w	lr, lr
 801fc42:	fb12 f20a 	smulbb	r2, r2, sl
 801fc46:	fb0e 2203 	mla	r2, lr, r3, r2
 801fc4a:	fa5f fc8c 	uxtb.w	ip, ip
 801fc4e:	b280      	uxth	r0, r0
 801fc50:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fc54:	b292      	uxth	r2, r2
 801fc56:	fb1c fc0a 	smulbb	ip, ip, sl
 801fc5a:	fb01 cc03 	mla	ip, r1, r3, ip
 801fc5e:	1c43      	adds	r3, r0, #1
 801fc60:	1c51      	adds	r1, r2, #1
 801fc62:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fc66:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801fc6a:	fa1f fc8c 	uxth.w	ip, ip
 801fc6e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fc72:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fc76:	4308      	orrs	r0, r1
 801fc78:	f10c 0101 	add.w	r1, ip, #1
 801fc7c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fc80:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fc84:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801fc88:	ea40 000c 	orr.w	r0, r0, ip
 801fc8c:	f8a8 0000 	strh.w	r0, [r8]
 801fc90:	e7a1      	b.n	801fbd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801fc92:	b017      	add	sp, #92	; 0x5c
 801fc94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fc98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801fc98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fc9c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801fca0:	2d00      	cmp	r5, #0
 801fca2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801fca6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801fcaa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801fcae:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801fcb2:	fb05 0e03 	mla	lr, r5, r3, r0
 801fcb6:	f2c0 80b0 	blt.w	801fe1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fcba:	45a9      	cmp	r9, r5
 801fcbc:	f340 80ad 	ble.w	801fe1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fcc0:	2800      	cmp	r0, #0
 801fcc2:	f2c0 80a8 	blt.w	801fe16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fcc6:	4580      	cmp	r8, r0
 801fcc8:	f340 80a5 	ble.w	801fe16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fccc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fcd0:	f01e 0f01 	tst.w	lr, #1
 801fcd4:	5d16      	ldrb	r6, [r2, r4]
 801fcd6:	bf0c      	ite	eq
 801fcd8:	f006 060f 	andeq.w	r6, r6, #15
 801fcdc:	1136      	asrne	r6, r6, #4
 801fcde:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801fce2:	b2f6      	uxtb	r6, r6
 801fce4:	1c44      	adds	r4, r0, #1
 801fce6:	f100 809b 	bmi.w	801fe20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fcea:	45a0      	cmp	r8, r4
 801fcec:	f340 8098 	ble.w	801fe20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fcf0:	2f00      	cmp	r7, #0
 801fcf2:	f000 8097 	beq.w	801fe24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801fcf6:	f10e 0a01 	add.w	sl, lr, #1
 801fcfa:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801fcfe:	f01a 0f01 	tst.w	sl, #1
 801fd02:	5d14      	ldrb	r4, [r2, r4]
 801fd04:	bf0c      	ite	eq
 801fd06:	f004 040f 	andeq.w	r4, r4, #15
 801fd0a:	1124      	asrne	r4, r4, #4
 801fd0c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801fd10:	b2e4      	uxtb	r4, r4
 801fd12:	3501      	adds	r5, #1
 801fd14:	f100 808a 	bmi.w	801fe2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fd18:	45a9      	cmp	r9, r5
 801fd1a:	f340 8087 	ble.w	801fe2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fd1e:	f1bc 0f00 	cmp.w	ip, #0
 801fd22:	f000 8086 	beq.w	801fe32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801fd26:	2800      	cmp	r0, #0
 801fd28:	db7e      	blt.n	801fe28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fd2a:	4580      	cmp	r8, r0
 801fd2c:	dd7c      	ble.n	801fe28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fd2e:	eb03 090e 	add.w	r9, r3, lr
 801fd32:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801fd36:	f019 0f01 	tst.w	r9, #1
 801fd3a:	5d55      	ldrb	r5, [r2, r5]
 801fd3c:	bf0c      	ite	eq
 801fd3e:	f005 050f 	andeq.w	r5, r5, #15
 801fd42:	112d      	asrne	r5, r5, #4
 801fd44:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801fd48:	b2ed      	uxtb	r5, r5
 801fd4a:	3001      	adds	r0, #1
 801fd4c:	d474      	bmi.n	801fe38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fd4e:	4580      	cmp	r8, r0
 801fd50:	dd72      	ble.n	801fe38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fd52:	2f00      	cmp	r7, #0
 801fd54:	d072      	beq.n	801fe3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801fd56:	3301      	adds	r3, #1
 801fd58:	449e      	add	lr, r3
 801fd5a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801fd5e:	f01e 0f01 	tst.w	lr, #1
 801fd62:	5cd0      	ldrb	r0, [r2, r3]
 801fd64:	bf0c      	ite	eq
 801fd66:	f000 000f 	andeq.w	r0, r0, #15
 801fd6a:	1100      	asrne	r0, r0, #4
 801fd6c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fd70:	b2c3      	uxtb	r3, r0
 801fd72:	b2ba      	uxth	r2, r7
 801fd74:	fa1f fc8c 	uxth.w	ip, ip
 801fd78:	fb02 f00c 	mul.w	r0, r2, ip
 801fd7c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801fd80:	0112      	lsls	r2, r2, #4
 801fd82:	fa1f fc8c 	uxth.w	ip, ip
 801fd86:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801fd8a:	1a12      	subs	r2, r2, r0
 801fd8c:	eba7 070c 	sub.w	r7, r7, ip
 801fd90:	b292      	uxth	r2, r2
 801fd92:	b2bf      	uxth	r7, r7
 801fd94:	4362      	muls	r2, r4
 801fd96:	fb06 2207 	mla	r2, r6, r7, r2
 801fd9a:	fb0c 2505 	mla	r5, ip, r5, r2
 801fd9e:	fb00 5303 	mla	r3, r0, r3, r5
 801fda2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fda6:	b3a3      	cbz	r3, 801fe12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801fda8:	4a25      	ldr	r2, [pc, #148]	; (801fe40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801fdaa:	880e      	ldrh	r6, [r1, #0]
 801fdac:	6815      	ldr	r5, [r2, #0]
 801fdae:	1234      	asrs	r4, r6, #8
 801fdb0:	b29a      	uxth	r2, r3
 801fdb2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801fdb6:	43db      	mvns	r3, r3
 801fdb8:	b2db      	uxtb	r3, r3
 801fdba:	fb10 f002 	smulbb	r0, r0, r2
 801fdbe:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801fdc2:	fb04 0403 	mla	r4, r4, r3, r0
 801fdc6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801fdca:	10f0      	asrs	r0, r6, #3
 801fdcc:	b2ed      	uxtb	r5, r5
 801fdce:	00f6      	lsls	r6, r6, #3
 801fdd0:	fb17 f702 	smulbb	r7, r7, r2
 801fdd4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fdd8:	fb15 f202 	smulbb	r2, r5, r2
 801fddc:	b2f6      	uxtb	r6, r6
 801fdde:	b2a4      	uxth	r4, r4
 801fde0:	fb00 7003 	mla	r0, r0, r3, r7
 801fde4:	fb06 2303 	mla	r3, r6, r3, r2
 801fde8:	b29a      	uxth	r2, r3
 801fdea:	1c63      	adds	r3, r4, #1
 801fdec:	b280      	uxth	r0, r0
 801fdee:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fdf2:	1c53      	adds	r3, r2, #1
 801fdf4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fdf8:	1c42      	adds	r2, r0, #1
 801fdfa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fdfe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801fe02:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fe06:	0940      	lsrs	r0, r0, #5
 801fe08:	4323      	orrs	r3, r4
 801fe0a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fe0e:	4303      	orrs	r3, r0
 801fe10:	800b      	strh	r3, [r1, #0]
 801fe12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fe16:	2600      	movs	r6, #0
 801fe18:	e764      	b.n	801fce4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801fe1a:	2400      	movs	r4, #0
 801fe1c:	4626      	mov	r6, r4
 801fe1e:	e778      	b.n	801fd12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fe20:	2400      	movs	r4, #0
 801fe22:	e776      	b.n	801fd12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fe24:	463c      	mov	r4, r7
 801fe26:	e774      	b.n	801fd12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fe28:	2500      	movs	r5, #0
 801fe2a:	e78e      	b.n	801fd4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801fe2c:	2300      	movs	r3, #0
 801fe2e:	461d      	mov	r5, r3
 801fe30:	e79f      	b.n	801fd72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fe32:	4663      	mov	r3, ip
 801fe34:	4665      	mov	r5, ip
 801fe36:	e79c      	b.n	801fd72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fe38:	2300      	movs	r3, #0
 801fe3a:	e79a      	b.n	801fd72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fe3c:	463b      	mov	r3, r7
 801fe3e:	e798      	b.n	801fd72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fe40:	20015810 	.word	0x20015810

0801fe44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fe44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe48:	b093      	sub	sp, #76	; 0x4c
 801fe4a:	461d      	mov	r5, r3
 801fe4c:	920c      	str	r2, [sp, #48]	; 0x30
 801fe4e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fe50:	9107      	str	r1, [sp, #28]
 801fe52:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fe56:	9011      	str	r0, [sp, #68]	; 0x44
 801fe58:	6850      	ldr	r0, [r2, #4]
 801fe5a:	6812      	ldr	r2, [r2, #0]
 801fe5c:	fb00 1303 	mla	r3, r0, r3, r1
 801fe60:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fe64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe66:	689b      	ldr	r3, [r3, #8]
 801fe68:	3301      	adds	r3, #1
 801fe6a:	f023 0301 	bic.w	r3, r3, #1
 801fe6e:	9306      	str	r3, [sp, #24]
 801fe70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe72:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801fe76:	681f      	ldr	r7, [r3, #0]
 801fe78:	9b07      	ldr	r3, [sp, #28]
 801fe7a:	2b00      	cmp	r3, #0
 801fe7c:	dc03      	bgt.n	801fe86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801fe7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fe80:	2b00      	cmp	r3, #0
 801fe82:	f340 8267 	ble.w	8020354 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fe86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fe8c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fe90:	1e48      	subs	r0, r1, #1
 801fe92:	f102 3cff 	add.w	ip, r2, #4294967295
 801fe96:	2d00      	cmp	r5, #0
 801fe98:	f340 80b8 	ble.w	802000c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801fe9c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fea0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fea4:	d406      	bmi.n	801feb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fea6:	4586      	cmp	lr, r0
 801fea8:	da04      	bge.n	801feb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801feaa:	2b00      	cmp	r3, #0
 801feac:	db02      	blt.n	801feb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801feae:	4563      	cmp	r3, ip
 801feb0:	f2c0 80ad 	blt.w	802000e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801feb4:	f11e 0e01 	adds.w	lr, lr, #1
 801feb8:	f100 80a0 	bmi.w	801fffc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801febc:	4571      	cmp	r1, lr
 801febe:	f2c0 809d 	blt.w	801fffc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fec2:	3301      	adds	r3, #1
 801fec4:	f100 809a 	bmi.w	801fffc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fec8:	429a      	cmp	r2, r3
 801feca:	f2c0 8097 	blt.w	801fffc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fece:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801fed2:	9509      	str	r5, [sp, #36]	; 0x24
 801fed4:	46c8      	mov	r8, r9
 801fed6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fed8:	2b00      	cmp	r3, #0
 801feda:	f340 80b6 	ble.w	802004a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801fede:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801fee2:	9308      	str	r3, [sp, #32]
 801fee4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fee6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801feea:	1423      	asrs	r3, r4, #16
 801feec:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fef0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fef4:	f100 813e 	bmi.w	8020174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fef8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fefc:	455b      	cmp	r3, fp
 801fefe:	f280 8139 	bge.w	8020174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ff02:	2800      	cmp	r0, #0
 801ff04:	f2c0 8136 	blt.w	8020174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ff08:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ff0c:	4558      	cmp	r0, fp
 801ff0e:	f280 8131 	bge.w	8020174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ff12:	9a06      	ldr	r2, [sp, #24]
 801ff14:	fb00 3302 	mla	r3, r0, r2, r3
 801ff18:	0858      	lsrs	r0, r3, #1
 801ff1a:	07da      	lsls	r2, r3, #31
 801ff1c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ff20:	9a08      	ldr	r2, [sp, #32]
 801ff22:	bf54      	ite	pl
 801ff24:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ff28:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ff2c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ff30:	fa5f fc8c 	uxtb.w	ip, ip
 801ff34:	2a00      	cmp	r2, #0
 801ff36:	f000 80cb 	beq.w	80200d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ff3a:	1c58      	adds	r0, r3, #1
 801ff3c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ff40:	07c0      	lsls	r0, r0, #31
 801ff42:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ff46:	bf54      	ite	pl
 801ff48:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ff4c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ff50:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ff54:	fa5f fe8e 	uxtb.w	lr, lr
 801ff58:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801ff5c:	b1b9      	cbz	r1, 801ff8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ff5e:	4453      	add	r3, sl
 801ff60:	0858      	lsrs	r0, r3, #1
 801ff62:	07da      	lsls	r2, r3, #31
 801ff64:	5c38      	ldrb	r0, [r7, r0]
 801ff66:	bf54      	ite	pl
 801ff68:	f000 000f 	andpl.w	r0, r0, #15
 801ff6c:	1100      	asrmi	r0, r0, #4
 801ff6e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ff72:	b2c0      	uxtb	r0, r0
 801ff74:	900a      	str	r0, [sp, #40]	; 0x28
 801ff76:	1c58      	adds	r0, r3, #1
 801ff78:	0843      	lsrs	r3, r0, #1
 801ff7a:	07c2      	lsls	r2, r0, #31
 801ff7c:	5cfb      	ldrb	r3, [r7, r3]
 801ff7e:	bf54      	ite	pl
 801ff80:	f003 030f 	andpl.w	r3, r3, #15
 801ff84:	111b      	asrmi	r3, r3, #4
 801ff86:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ff8a:	b2db      	uxtb	r3, r3
 801ff8c:	930e      	str	r3, [sp, #56]	; 0x38
 801ff8e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ff92:	b289      	uxth	r1, r1
 801ff94:	fb02 f301 	mul.w	r3, r2, r1
 801ff98:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ff9c:	0112      	lsls	r2, r2, #4
 801ff9e:	b289      	uxth	r1, r1
 801ffa0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ffa4:	1a40      	subs	r0, r0, r1
 801ffa6:	fa1f fe80 	uxth.w	lr, r0
 801ffaa:	1ad2      	subs	r2, r2, r3
 801ffac:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ffae:	b292      	uxth	r2, r2
 801ffb0:	4342      	muls	r2, r0
 801ffb2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801ffb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ffb8:	fb01 c102 	mla	r1, r1, r2, ip
 801ffbc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ffbe:	fb03 1302 	mla	r3, r3, r2, r1
 801ffc2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ffc6:	2bff      	cmp	r3, #255	; 0xff
 801ffc8:	f040 8093 	bne.w	80200f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801ffcc:	4bbe      	ldr	r3, [pc, #760]	; (80202c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801ffce:	681a      	ldr	r2, [r3, #0]
 801ffd0:	4bbe      	ldr	r3, [pc, #760]	; (80202cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801ffd2:	0951      	lsrs	r1, r2, #5
 801ffd4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801ffd8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ffdc:	430b      	orrs	r3, r1
 801ffde:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ffe2:	4313      	orrs	r3, r2
 801ffe4:	f8a8 3000 	strh.w	r3, [r8]
 801ffe8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ffea:	441c      	add	r4, r3
 801ffec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffee:	441e      	add	r6, r3
 801fff0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fff2:	3b01      	subs	r3, #1
 801fff4:	f108 0802 	add.w	r8, r8, #2
 801fff8:	9309      	str	r3, [sp, #36]	; 0x24
 801fffa:	e76c      	b.n	801fed6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fffc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fffe:	441c      	add	r4, r3
 8020000:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020002:	3d01      	subs	r5, #1
 8020004:	441e      	add	r6, r3
 8020006:	f109 0902 	add.w	r9, r9, #2
 802000a:	e744      	b.n	801fe96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802000c:	d021      	beq.n	8020052 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802000e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020010:	1e6b      	subs	r3, r5, #1
 8020012:	fb00 4003 	mla	r0, r0, r3, r4
 8020016:	1400      	asrs	r0, r0, #16
 8020018:	f53f af59 	bmi.w	801fece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802001c:	3901      	subs	r1, #1
 802001e:	4288      	cmp	r0, r1
 8020020:	f6bf af55 	bge.w	801fece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020024:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020026:	fb01 6303 	mla	r3, r1, r3, r6
 802002a:	141b      	asrs	r3, r3, #16
 802002c:	f53f af4f 	bmi.w	801fece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020030:	3a01      	subs	r2, #1
 8020032:	4293      	cmp	r3, r2
 8020034:	f6bf af4b 	bge.w	801fece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020038:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802003c:	9308      	str	r3, [sp, #32]
 802003e:	46a8      	mov	r8, r5
 8020040:	46ce      	mov	lr, r9
 8020042:	f1b8 0f00 	cmp.w	r8, #0
 8020046:	f300 80b5 	bgt.w	80201b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802004a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802004e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020052:	9b07      	ldr	r3, [sp, #28]
 8020054:	2b00      	cmp	r3, #0
 8020056:	f340 817d 	ble.w	8020354 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802005a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802005e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020062:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020066:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020068:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802006c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020070:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020074:	eef0 6a62 	vmov.f32	s13, s5
 8020078:	ee61 7a27 	vmul.f32	s15, s2, s15
 802007c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020080:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020084:	ee16 4a90 	vmov	r4, s13
 8020088:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802008c:	eef0 6a43 	vmov.f32	s13, s6
 8020090:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020094:	ee12 2a90 	vmov	r2, s5
 8020098:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802009c:	fb92 f3f3 	sdiv	r3, r2, r3
 80200a0:	ee13 2a10 	vmov	r2, s6
 80200a4:	931f      	str	r3, [sp, #124]	; 0x7c
 80200a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80200a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80200ac:	9320      	str	r3, [sp, #128]	; 0x80
 80200ae:	9b07      	ldr	r3, [sp, #28]
 80200b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80200b2:	3b01      	subs	r3, #1
 80200b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80200b8:	9307      	str	r3, [sp, #28]
 80200ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80200bc:	ee16 6a90 	vmov	r6, s13
 80200c0:	bf14      	ite	ne
 80200c2:	461d      	movne	r5, r3
 80200c4:	4615      	moveq	r5, r2
 80200c6:	eeb0 3a67 	vmov.f32	s6, s15
 80200ca:	eef0 2a47 	vmov.f32	s5, s14
 80200ce:	e6d3      	b.n	801fe78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80200d0:	2900      	cmp	r1, #0
 80200d2:	f43f af5c 	beq.w	801ff8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80200d6:	eb0a 0003 	add.w	r0, sl, r3
 80200da:	0843      	lsrs	r3, r0, #1
 80200dc:	07c0      	lsls	r0, r0, #31
 80200de:	5cfb      	ldrb	r3, [r7, r3]
 80200e0:	bf54      	ite	pl
 80200e2:	f003 030f 	andpl.w	r3, r3, #15
 80200e6:	111b      	asrmi	r3, r3, #4
 80200e8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80200ec:	b2db      	uxtb	r3, r3
 80200ee:	930a      	str	r3, [sp, #40]	; 0x28
 80200f0:	e74d      	b.n	801ff8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80200f2:	2b00      	cmp	r3, #0
 80200f4:	f43f af78 	beq.w	801ffe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80200f8:	4a73      	ldr	r2, [pc, #460]	; (80202c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80200fa:	f8b8 c000 	ldrh.w	ip, [r8]
 80200fe:	6810      	ldr	r0, [r2, #0]
 8020100:	fa1f fe83 	uxth.w	lr, r3
 8020104:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020108:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802010c:	43db      	mvns	r3, r3
 802010e:	b2db      	uxtb	r3, r3
 8020110:	fb12 f20e 	smulbb	r2, r2, lr
 8020114:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020118:	fb01 2103 	mla	r1, r1, r3, r2
 802011c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020120:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020124:	b2c0      	uxtb	r0, r0
 8020126:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802012a:	fb1b fb0e 	smulbb	fp, fp, lr
 802012e:	b289      	uxth	r1, r1
 8020130:	fb10 fe0e 	smulbb	lr, r0, lr
 8020134:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020138:	fa5f fc8c 	uxtb.w	ip, ip
 802013c:	fb02 b203 	mla	r2, r2, r3, fp
 8020140:	1c48      	adds	r0, r1, #1
 8020142:	fb0c e303 	mla	r3, ip, r3, lr
 8020146:	b292      	uxth	r2, r2
 8020148:	b29b      	uxth	r3, r3
 802014a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802014e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8020152:	f102 0b01 	add.w	fp, r2, #1
 8020156:	1c59      	adds	r1, r3, #1
 8020158:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802015c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020160:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020164:	0952      	lsrs	r2, r2, #5
 8020166:	4301      	orrs	r1, r0
 8020168:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802016c:	4311      	orrs	r1, r2
 802016e:	f8a8 1000 	strh.w	r1, [r8]
 8020172:	e739      	b.n	801ffe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020174:	f113 0b01 	adds.w	fp, r3, #1
 8020178:	f53f af36 	bmi.w	801ffe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802017c:	45dc      	cmp	ip, fp
 802017e:	f6ff af33 	blt.w	801ffe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020182:	f110 0b01 	adds.w	fp, r0, #1
 8020186:	f53f af2f 	bmi.w	801ffe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802018a:	45de      	cmp	lr, fp
 802018c:	f6ff af2c 	blt.w	801ffe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020190:	9a08      	ldr	r2, [sp, #32]
 8020192:	9302      	str	r3, [sp, #8]
 8020194:	fa0f f38e 	sxth.w	r3, lr
 8020198:	9301      	str	r3, [sp, #4]
 802019a:	fa0f f38c 	sxth.w	r3, ip
 802019e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80201a2:	9105      	str	r1, [sp, #20]
 80201a4:	9300      	str	r3, [sp, #0]
 80201a6:	463a      	mov	r2, r7
 80201a8:	4653      	mov	r3, sl
 80201aa:	4641      	mov	r1, r8
 80201ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 80201ae:	f7ff fd73 	bl	801fc98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80201b2:	e719      	b.n	801ffe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80201b4:	9906      	ldr	r1, [sp, #24]
 80201b6:	1422      	asrs	r2, r4, #16
 80201b8:	1433      	asrs	r3, r6, #16
 80201ba:	fb01 2303 	mla	r3, r1, r3, r2
 80201be:	085a      	lsrs	r2, r3, #1
 80201c0:	07d9      	lsls	r1, r3, #31
 80201c2:	5cba      	ldrb	r2, [r7, r2]
 80201c4:	bf54      	ite	pl
 80201c6:	f002 020f 	andpl.w	r2, r2, #15
 80201ca:	1112      	asrmi	r2, r2, #4
 80201cc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80201d0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80201d4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80201d8:	b2d2      	uxtb	r2, r2
 80201da:	2800      	cmp	r0, #0
 80201dc:	d062      	beq.n	80202a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80201de:	f103 0a01 	add.w	sl, r3, #1
 80201e2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80201e6:	f01a 0f01 	tst.w	sl, #1
 80201ea:	5c79      	ldrb	r1, [r7, r1]
 80201ec:	bf0c      	ite	eq
 80201ee:	f001 010f 	andeq.w	r1, r1, #15
 80201f2:	1109      	asrne	r1, r1, #4
 80201f4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80201f8:	b2c9      	uxtb	r1, r1
 80201fa:	910f      	str	r1, [sp, #60]	; 0x3c
 80201fc:	f1bc 0f00 	cmp.w	ip, #0
 8020200:	d019      	beq.n	8020236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020202:	9908      	ldr	r1, [sp, #32]
 8020204:	440b      	add	r3, r1
 8020206:	0859      	lsrs	r1, r3, #1
 8020208:	f013 0f01 	tst.w	r3, #1
 802020c:	5c79      	ldrb	r1, [r7, r1]
 802020e:	bf0c      	ite	eq
 8020210:	f001 010f 	andeq.w	r1, r1, #15
 8020214:	1109      	asrne	r1, r1, #4
 8020216:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802021a:	b2c9      	uxtb	r1, r1
 802021c:	3301      	adds	r3, #1
 802021e:	910b      	str	r1, [sp, #44]	; 0x2c
 8020220:	0859      	lsrs	r1, r3, #1
 8020222:	07db      	lsls	r3, r3, #31
 8020224:	5c79      	ldrb	r1, [r7, r1]
 8020226:	bf54      	ite	pl
 8020228:	f001 010f 	andpl.w	r1, r1, #15
 802022c:	1109      	asrmi	r1, r1, #4
 802022e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020232:	b2c9      	uxtb	r1, r1
 8020234:	9110      	str	r1, [sp, #64]	; 0x40
 8020236:	b280      	uxth	r0, r0
 8020238:	fa1f fc8c 	uxth.w	ip, ip
 802023c:	fb00 f30c 	mul.w	r3, r0, ip
 8020240:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020244:	0100      	lsls	r0, r0, #4
 8020246:	fa1f fc8c 	uxth.w	ip, ip
 802024a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802024e:	eba1 010c 	sub.w	r1, r1, ip
 8020252:	fa1f fa81 	uxth.w	sl, r1
 8020256:	1ac0      	subs	r0, r0, r3
 8020258:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802025a:	b280      	uxth	r0, r0
 802025c:	4348      	muls	r0, r1
 802025e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8020260:	fb02 020a 	mla	r2, r2, sl, r0
 8020264:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020268:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802026a:	fb03 c302 	mla	r3, r3, r2, ip
 802026e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020272:	2bff      	cmp	r3, #255	; 0xff
 8020274:	d12c      	bne.n	80202d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020276:	4b14      	ldr	r3, [pc, #80]	; (80202c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020278:	681a      	ldr	r2, [r3, #0]
 802027a:	4b14      	ldr	r3, [pc, #80]	; (80202cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802027c:	0951      	lsrs	r1, r2, #5
 802027e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020282:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020286:	430b      	orrs	r3, r1
 8020288:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802028c:	4313      	orrs	r3, r2
 802028e:	f8ae 3000 	strh.w	r3, [lr]
 8020292:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020294:	441c      	add	r4, r3
 8020296:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020298:	f10e 0e02 	add.w	lr, lr, #2
 802029c:	441e      	add	r6, r3
 802029e:	f108 38ff 	add.w	r8, r8, #4294967295
 80202a2:	e6ce      	b.n	8020042 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80202a4:	f1bc 0f00 	cmp.w	ip, #0
 80202a8:	d0c5      	beq.n	8020236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80202aa:	9908      	ldr	r1, [sp, #32]
 80202ac:	440b      	add	r3, r1
 80202ae:	0859      	lsrs	r1, r3, #1
 80202b0:	07db      	lsls	r3, r3, #31
 80202b2:	5c79      	ldrb	r1, [r7, r1]
 80202b4:	bf54      	ite	pl
 80202b6:	f001 010f 	andpl.w	r1, r1, #15
 80202ba:	1109      	asrmi	r1, r1, #4
 80202bc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80202c0:	b2c9      	uxtb	r1, r1
 80202c2:	910b      	str	r1, [sp, #44]	; 0x2c
 80202c4:	e7b7      	b.n	8020236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80202c6:	bf00      	nop
 80202c8:	20015810 	.word	0x20015810
 80202cc:	fffff800 	.word	0xfffff800
 80202d0:	2b00      	cmp	r3, #0
 80202d2:	d0de      	beq.n	8020292 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80202d4:	4a21      	ldr	r2, [pc, #132]	; (802035c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80202d6:	f8be c000 	ldrh.w	ip, [lr]
 80202da:	6810      	ldr	r0, [r2, #0]
 80202dc:	fa1f fa83 	uxth.w	sl, r3
 80202e0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80202e4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80202e8:	43db      	mvns	r3, r3
 80202ea:	b2db      	uxtb	r3, r3
 80202ec:	fb12 f20a 	smulbb	r2, r2, sl
 80202f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80202f4:	fb01 2103 	mla	r1, r1, r3, r2
 80202f8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80202fc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020300:	b2c0      	uxtb	r0, r0
 8020302:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020306:	fa5f fc8c 	uxtb.w	ip, ip
 802030a:	fb10 f00a 	smulbb	r0, r0, sl
 802030e:	fb0c 0003 	mla	r0, ip, r3, r0
 8020312:	b289      	uxth	r1, r1
 8020314:	fb1b fb0a 	smulbb	fp, fp, sl
 8020318:	b280      	uxth	r0, r0
 802031a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802031e:	fb02 b203 	mla	r2, r2, r3, fp
 8020322:	1c4b      	adds	r3, r1, #1
 8020324:	f100 0b01 	add.w	fp, r0, #1
 8020328:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802032c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020330:	b292      	uxth	r2, r2
 8020332:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020336:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802033a:	ea4b 0101 	orr.w	r1, fp, r1
 802033e:	f102 0b01 	add.w	fp, r2, #1
 8020342:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020346:	0952      	lsrs	r2, r2, #5
 8020348:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802034c:	4311      	orrs	r1, r2
 802034e:	f8ae 1000 	strh.w	r1, [lr]
 8020352:	e79e      	b.n	8020292 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020354:	b013      	add	sp, #76	; 0x4c
 8020356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802035a:	bf00      	nop
 802035c:	20015810 	.word	0x20015810

08020360 <CRC_Lock>:
 8020360:	b530      	push	{r4, r5, lr}
 8020362:	4a20      	ldr	r2, [pc, #128]	; (80203e4 <CRC_Lock+0x84>)
 8020364:	6813      	ldr	r3, [r2, #0]
 8020366:	f023 0301 	bic.w	r3, r3, #1
 802036a:	6013      	str	r3, [r2, #0]
 802036c:	4b1e      	ldr	r3, [pc, #120]	; (80203e8 <CRC_Lock+0x88>)
 802036e:	681a      	ldr	r2, [r3, #0]
 8020370:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8020374:	4022      	ands	r2, r4
 8020376:	f24c 2540 	movw	r5, #49728	; 0xc240
 802037a:	42aa      	cmp	r2, r5
 802037c:	d005      	beq.n	802038a <CRC_Lock+0x2a>
 802037e:	681b      	ldr	r3, [r3, #0]
 8020380:	f24c 2270 	movw	r2, #49776	; 0xc270
 8020384:	4023      	ands	r3, r4
 8020386:	4293      	cmp	r3, r2
 8020388:	d124      	bne.n	80203d4 <CRC_Lock+0x74>
 802038a:	4b18      	ldr	r3, [pc, #96]	; (80203ec <CRC_Lock+0x8c>)
 802038c:	681b      	ldr	r3, [r3, #0]
 802038e:	bb0b      	cbnz	r3, 80203d4 <CRC_Lock+0x74>
 8020390:	4b17      	ldr	r3, [pc, #92]	; (80203f0 <CRC_Lock+0x90>)
 8020392:	681a      	ldr	r2, [r3, #0]
 8020394:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020398:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802039c:	d00d      	beq.n	80203ba <CRC_Lock+0x5a>
 802039e:	681a      	ldr	r2, [r3, #0]
 80203a0:	f240 4483 	movw	r4, #1155	; 0x483
 80203a4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80203a8:	42a2      	cmp	r2, r4
 80203aa:	d006      	beq.n	80203ba <CRC_Lock+0x5a>
 80203ac:	681b      	ldr	r3, [r3, #0]
 80203ae:	f240 4285 	movw	r2, #1157	; 0x485
 80203b2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80203b6:	4293      	cmp	r3, r2
 80203b8:	d10c      	bne.n	80203d4 <CRC_Lock+0x74>
 80203ba:	4b0e      	ldr	r3, [pc, #56]	; (80203f4 <CRC_Lock+0x94>)
 80203bc:	2201      	movs	r2, #1
 80203be:	601a      	str	r2, [r3, #0]
 80203c0:	681a      	ldr	r2, [r3, #0]
 80203c2:	2a00      	cmp	r2, #0
 80203c4:	d1fc      	bne.n	80203c0 <CRC_Lock+0x60>
 80203c6:	4b0c      	ldr	r3, [pc, #48]	; (80203f8 <CRC_Lock+0x98>)
 80203c8:	6018      	str	r0, [r3, #0]
 80203ca:	6818      	ldr	r0, [r3, #0]
 80203cc:	1a43      	subs	r3, r0, r1
 80203ce:	4258      	negs	r0, r3
 80203d0:	4158      	adcs	r0, r3
 80203d2:	bd30      	pop	{r4, r5, pc}
 80203d4:	4b09      	ldr	r3, [pc, #36]	; (80203fc <CRC_Lock+0x9c>)
 80203d6:	2201      	movs	r2, #1
 80203d8:	601a      	str	r2, [r3, #0]
 80203da:	681a      	ldr	r2, [r3, #0]
 80203dc:	2a00      	cmp	r2, #0
 80203de:	d1fc      	bne.n	80203da <CRC_Lock+0x7a>
 80203e0:	4b07      	ldr	r3, [pc, #28]	; (8020400 <CRC_Lock+0xa0>)
 80203e2:	e7f1      	b.n	80203c8 <CRC_Lock+0x68>
 80203e4:	e0002000 	.word	0xe0002000
 80203e8:	e000ed00 	.word	0xe000ed00
 80203ec:	e0042000 	.word	0xe0042000
 80203f0:	5c001000 	.word	0x5c001000
 80203f4:	58024c08 	.word	0x58024c08
 80203f8:	58024c00 	.word	0x58024c00
 80203fc:	40023008 	.word	0x40023008
 8020400:	40023000 	.word	0x40023000

08020404 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020404:	6101      	str	r1, [r0, #16]
 8020406:	4770      	bx	lr

08020408 <_ZN8touchgfx8Gestures4tickEv>:
 8020408:	7b83      	ldrb	r3, [r0, #14]
 802040a:	b14b      	cbz	r3, 8020420 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802040c:	8903      	ldrh	r3, [r0, #8]
 802040e:	3301      	adds	r3, #1
 8020410:	b29b      	uxth	r3, r3
 8020412:	2b07      	cmp	r3, #7
 8020414:	8103      	strh	r3, [r0, #8]
 8020416:	bf81      	itttt	hi
 8020418:	2300      	movhi	r3, #0
 802041a:	8143      	strhhi	r3, [r0, #10]
 802041c:	8183      	strhhi	r3, [r0, #12]
 802041e:	7383      	strbhi	r3, [r0, #14]
 8020420:	4770      	bx	lr
	...

08020424 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020424:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020428:	4698      	mov	r8, r3
 802042a:	8883      	ldrh	r3, [r0, #4]
 802042c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020430:	eba8 0303 	sub.w	r3, r8, r3
 8020434:	b21b      	sxth	r3, r3
 8020436:	4604      	mov	r4, r0
 8020438:	2b00      	cmp	r3, #0
 802043a:	4617      	mov	r7, r2
 802043c:	4a18      	ldr	r2, [pc, #96]	; (80204a0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802043e:	9200      	str	r2, [sp, #0]
 8020440:	bfb8      	it	lt
 8020442:	425b      	neglt	r3, r3
 8020444:	8aa2      	ldrh	r2, [r4, #20]
 8020446:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802044a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802044e:	b21b      	sxth	r3, r3
 8020450:	460e      	mov	r6, r1
 8020452:	4293      	cmp	r3, r2
 8020454:	88c1      	ldrh	r1, [r0, #6]
 8020456:	f8ad 1008 	strh.w	r1, [sp, #8]
 802045a:	f04f 0000 	mov.w	r0, #0
 802045e:	f88d 0004 	strb.w	r0, [sp, #4]
 8020462:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020466:	dc07      	bgt.n	8020478 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8020468:	1a69      	subs	r1, r5, r1
 802046a:	b209      	sxth	r1, r1
 802046c:	2900      	cmp	r1, #0
 802046e:	bfb8      	it	lt
 8020470:	4249      	neglt	r1, r1
 8020472:	b209      	sxth	r1, r1
 8020474:	428a      	cmp	r2, r1
 8020476:	da10      	bge.n	802049a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8020478:	6920      	ldr	r0, [r4, #16]
 802047a:	6803      	ldr	r3, [r0, #0]
 802047c:	4669      	mov	r1, sp
 802047e:	685b      	ldr	r3, [r3, #4]
 8020480:	4798      	blx	r3
 8020482:	eba8 0606 	sub.w	r6, r8, r6
 8020486:	2300      	movs	r3, #0
 8020488:	1bef      	subs	r7, r5, r7
 802048a:	2001      	movs	r0, #1
 802048c:	8123      	strh	r3, [r4, #8]
 802048e:	8166      	strh	r6, [r4, #10]
 8020490:	81a7      	strh	r7, [r4, #12]
 8020492:	f8a4 8004 	strh.w	r8, [r4, #4]
 8020496:	80e5      	strh	r5, [r4, #6]
 8020498:	73a0      	strb	r0, [r4, #14]
 802049a:	b004      	add	sp, #16
 802049c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80204a0:	080248c8 	.word	0x080248c8

080204a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80204a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80204a6:	461e      	mov	r6, r3
 80204a8:	1e4b      	subs	r3, r1, #1
 80204aa:	2b01      	cmp	r3, #1
 80204ac:	b085      	sub	sp, #20
 80204ae:	4604      	mov	r4, r0
 80204b0:	460d      	mov	r5, r1
 80204b2:	4617      	mov	r7, r2
 80204b4:	d84b      	bhi.n	802054e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80204b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80204ba:	1cd3      	adds	r3, r2, #3
 80204bc:	b29b      	uxth	r3, r3
 80204be:	2b06      	cmp	r3, #6
 80204c0:	d916      	bls.n	80204f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80204c2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8020564 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80204c6:	f8cd c004 	str.w	ip, [sp, #4]
 80204ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80204ce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80204d2:	6900      	ldr	r0, [r0, #16]
 80204d4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80204d8:	f04f 0c00 	mov.w	ip, #0
 80204dc:	f88d c008 	strb.w	ip, [sp, #8]
 80204e0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80204e4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80204e8:	6803      	ldr	r3, [r0, #0]
 80204ea:	a901      	add	r1, sp, #4
 80204ec:	689b      	ldr	r3, [r3, #8]
 80204ee:	4798      	blx	r3
 80204f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80204f4:	1cd3      	adds	r3, r2, #3
 80204f6:	b29b      	uxth	r3, r3
 80204f8:	2b06      	cmp	r3, #6
 80204fa:	d916      	bls.n	802052a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80204fc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8020564 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020500:	f8cd c004 	str.w	ip, [sp, #4]
 8020504:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020508:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802050c:	6920      	ldr	r0, [r4, #16]
 802050e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020512:	f04f 0c01 	mov.w	ip, #1
 8020516:	f88d c008 	strb.w	ip, [sp, #8]
 802051a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802051e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020522:	6803      	ldr	r3, [r0, #0]
 8020524:	a901      	add	r1, sp, #4
 8020526:	689b      	ldr	r3, [r3, #8]
 8020528:	4798      	blx	r3
 802052a:	4b0d      	ldr	r3, [pc, #52]	; (8020560 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802052c:	9301      	str	r3, [sp, #4]
 802052e:	6920      	ldr	r0, [r4, #16]
 8020530:	f88d 5008 	strb.w	r5, [sp, #8]
 8020534:	2300      	movs	r3, #0
 8020536:	f8ad 700a 	strh.w	r7, [sp, #10]
 802053a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802053e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020542:	6803      	ldr	r3, [r0, #0]
 8020544:	a901      	add	r1, sp, #4
 8020546:	681b      	ldr	r3, [r3, #0]
 8020548:	4798      	blx	r3
 802054a:	b005      	add	sp, #20
 802054c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802054e:	2900      	cmp	r1, #0
 8020550:	d1eb      	bne.n	802052a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020552:	80a2      	strh	r2, [r4, #4]
 8020554:	80c6      	strh	r6, [r0, #6]
 8020556:	60a1      	str	r1, [r4, #8]
 8020558:	81a1      	strh	r1, [r4, #12]
 802055a:	73a1      	strb	r1, [r4, #14]
 802055c:	e7e5      	b.n	802052a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802055e:	bf00      	nop
 8020560:	080248b4 	.word	0x080248b4
 8020564:	080248dc 	.word	0x080248dc

08020568 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8020568:	10c9      	asrs	r1, r1, #3
 802056a:	2900      	cmp	r1, #0
 802056c:	bfb8      	it	lt
 802056e:	4249      	neglt	r1, r1
 8020570:	2801      	cmp	r0, #1
 8020572:	d108      	bne.n	8020586 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020574:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8020578:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802057c:	4601      	mov	r1, r0
 802057e:	dd02      	ble.n	8020586 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020580:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8020584:	4770      	bx	lr
 8020586:	29ff      	cmp	r1, #255	; 0xff
 8020588:	bfa8      	it	ge
 802058a:	21ff      	movge	r1, #255	; 0xff
 802058c:	4608      	mov	r0, r1
 802058e:	4770      	bx	lr

08020590 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8020590:	b410      	push	{r4}
 8020592:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8020596:	429c      	cmp	r4, r3
 8020598:	d803      	bhi.n	80205a2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802059a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802059e:	f7ef b97d 	b.w	800f89c <_ZN8touchgfx7Outline6lineToEii>
 80205a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80205a6:	4770      	bx	lr

080205a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80205a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205ac:	b08b      	sub	sp, #44	; 0x2c
 80205ae:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80205b2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80205b6:	9308      	str	r3, [sp, #32]
 80205b8:	4606      	mov	r6, r0
 80205ba:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80205be:	9309      	str	r3, [sp, #36]	; 0x24
 80205c0:	468a      	mov	sl, r1
 80205c2:	f7ef fad8 	bl	800fb76 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80205c6:	68b5      	ldr	r5, [r6, #8]
 80205c8:	4604      	mov	r4, r0
 80205ca:	2d00      	cmp	r5, #0
 80205cc:	d044      	beq.n	8020658 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80205ce:	6873      	ldr	r3, [r6, #4]
 80205d0:	42ab      	cmp	r3, r5
 80205d2:	d33d      	bcc.n	8020650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80205d4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80205d8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80205dc:	eb02 0b03 	add.w	fp, r2, r3
 80205e0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80205e4:	fb02 1203 	mla	r2, r2, r3, r1
 80205e8:	9205      	str	r2, [sp, #20]
 80205ea:	1e6a      	subs	r2, r5, #1
 80205ec:	9204      	str	r2, [sp, #16]
 80205ee:	f04f 0800 	mov.w	r8, #0
 80205f2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80205f6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80205fa:	454b      	cmp	r3, r9
 80205fc:	463a      	mov	r2, r7
 80205fe:	d008      	beq.n	8020612 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020600:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8020604:	eb03 0b09 	add.w	fp, r3, r9
 8020608:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802060c:	fb03 1309 	mla	r3, r3, r9, r1
 8020610:	9305      	str	r3, [sp, #20]
 8020612:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8020616:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802061a:	4498      	add	r8, r3
 802061c:	9b04      	ldr	r3, [sp, #16]
 802061e:	3b01      	subs	r3, #1
 8020620:	9304      	str	r3, [sp, #16]
 8020622:	9b04      	ldr	r3, [sp, #16]
 8020624:	3301      	adds	r3, #1
 8020626:	d015      	beq.n	8020654 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020628:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802062c:	42bb      	cmp	r3, r7
 802062e:	d117      	bne.n	8020660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020630:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8020634:	9b04      	ldr	r3, [sp, #16]
 8020636:	4548      	cmp	r0, r9
 8020638:	f103 33ff 	add.w	r3, r3, #4294967295
 802063c:	d17f      	bne.n	802073e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802063e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8020642:	4401      	add	r1, r0
 8020644:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020648:	4480      	add	r8, r0
 802064a:	e7e9      	b.n	8020620 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802064c:	461f      	mov	r7, r3
 802064e:	e044      	b.n	80206da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8020650:	2000      	movs	r0, #0
 8020652:	e002      	b.n	802065a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8020654:	2900      	cmp	r1, #0
 8020656:	d16f      	bne.n	8020738 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8020658:	2001      	movs	r0, #1
 802065a:	b00b      	add	sp, #44	; 0x2c
 802065c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020660:	2900      	cmp	r1, #0
 8020662:	d030      	beq.n	80206c6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8020664:	2f00      	cmp	r7, #0
 8020666:	db29      	blt.n	80206bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020668:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802066c:	42bb      	cmp	r3, r7
 802066e:	dd25      	ble.n	80206bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020670:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8020674:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020678:	f7ff ff76 	bl	8020568 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802067c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802067e:	fb10 f003 	smulbb	r0, r0, r3
 8020682:	b280      	uxth	r0, r0
 8020684:	1c41      	adds	r1, r0, #1
 8020686:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802068a:	1209      	asrs	r1, r1, #8
 802068c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8020690:	d014      	beq.n	80206bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020692:	9808      	ldr	r0, [sp, #32]
 8020694:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020696:	b2c9      	uxtb	r1, r1
 8020698:	b2ba      	uxth	r2, r7
 802069a:	9102      	str	r1, [sp, #8]
 802069c:	2101      	movs	r1, #1
 802069e:	4413      	add	r3, r2
 80206a0:	9101      	str	r1, [sp, #4]
 80206a2:	4402      	add	r2, r0
 80206a4:	fa0f f18b 	sxth.w	r1, fp
 80206a8:	f8da 0000 	ldr.w	r0, [sl]
 80206ac:	9100      	str	r1, [sp, #0]
 80206ae:	6941      	ldr	r1, [r0, #20]
 80206b0:	b21b      	sxth	r3, r3
 80206b2:	460d      	mov	r5, r1
 80206b4:	b212      	sxth	r2, r2
 80206b6:	9905      	ldr	r1, [sp, #20]
 80206b8:	4650      	mov	r0, sl
 80206ba:	47a8      	blx	r5
 80206bc:	9b04      	ldr	r3, [sp, #16]
 80206be:	3301      	adds	r3, #1
 80206c0:	f107 0201 	add.w	r2, r7, #1
 80206c4:	d0c8      	beq.n	8020658 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80206c6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80206ca:	1abb      	subs	r3, r7, r2
 80206cc:	2b00      	cmp	r3, #0
 80206ce:	dd31      	ble.n	8020734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80206d0:	2a00      	cmp	r2, #0
 80206d2:	dabb      	bge.n	802064c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80206d4:	2f00      	cmp	r7, #0
 80206d6:	dd2d      	ble.n	8020734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80206d8:	2200      	movs	r2, #0
 80206da:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80206de:	19d1      	adds	r1, r2, r7
 80206e0:	4299      	cmp	r1, r3
 80206e2:	db02      	blt.n	80206ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80206e4:	1a9f      	subs	r7, r3, r2
 80206e6:	2f00      	cmp	r7, #0
 80206e8:	dd24      	ble.n	8020734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80206ea:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80206ee:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80206f2:	f7ff ff39 	bl	8020568 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80206f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206f8:	fb10 f003 	smulbb	r0, r0, r3
 80206fc:	b280      	uxth	r0, r0
 80206fe:	1c41      	adds	r1, r0, #1
 8020700:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020704:	1209      	asrs	r1, r1, #8
 8020706:	f011 0fff 	tst.w	r1, #255	; 0xff
 802070a:	d013      	beq.n	8020734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802070c:	9808      	ldr	r0, [sp, #32]
 802070e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020710:	b292      	uxth	r2, r2
 8020712:	b2c9      	uxtb	r1, r1
 8020714:	4413      	add	r3, r2
 8020716:	9102      	str	r1, [sp, #8]
 8020718:	4402      	add	r2, r0
 802071a:	b23f      	sxth	r7, r7
 802071c:	f8da 0000 	ldr.w	r0, [sl]
 8020720:	9701      	str	r7, [sp, #4]
 8020722:	fa0f f18b 	sxth.w	r1, fp
 8020726:	9100      	str	r1, [sp, #0]
 8020728:	6947      	ldr	r7, [r0, #20]
 802072a:	9905      	ldr	r1, [sp, #20]
 802072c:	b21b      	sxth	r3, r3
 802072e:	b212      	sxth	r2, r2
 8020730:	4650      	mov	r0, sl
 8020732:	47b8      	blx	r7
 8020734:	464b      	mov	r3, r9
 8020736:	e75c      	b.n	80205f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020738:	2f00      	cmp	r7, #0
 802073a:	da95      	bge.n	8020668 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802073c:	e78c      	b.n	8020658 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802073e:	2900      	cmp	r1, #0
 8020740:	d0f8      	beq.n	8020734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020742:	e78f      	b.n	8020664 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020744 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020744:	4b4c      	ldr	r3, [pc, #304]	; (8020878 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020746:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802074a:	2500      	movs	r5, #0
 802074c:	f100 0620 	add.w	r6, r0, #32
 8020750:	4604      	mov	r4, r0
 8020752:	e9c0 3100 	strd	r3, r1, [r0]
 8020756:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802075a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802075e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8020762:	f100 0718 	add.w	r7, r0, #24
 8020766:	4630      	mov	r0, r6
 8020768:	4690      	mov	r8, r2
 802076a:	f7ee fbcf 	bl	800ef0c <_ZN8touchgfx7OutlineC1Ev>
 802076e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8020772:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8020776:	2301      	movs	r3, #1
 8020778:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802077c:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8020780:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8020784:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8020788:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802078c:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8020790:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8020794:	f9b8 2000 	ldrsh.w	r2, [r8]
 8020798:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802079c:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80207a0:	9500      	str	r5, [sp, #0]
 80207a2:	4410      	add	r0, r2
 80207a4:	b280      	uxth	r0, r0
 80207a6:	fa0f fa80 	sxth.w	sl, r0
 80207aa:	45aa      	cmp	sl, r5
 80207ac:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80207b0:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80207b4:	dd5c      	ble.n	8020870 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80207b6:	4591      	cmp	r9, r2
 80207b8:	dd5a      	ble.n	8020870 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80207ba:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80207be:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80207c2:	440b      	add	r3, r1
 80207c4:	b29b      	uxth	r3, r3
 80207c6:	b21d      	sxth	r5, r3
 80207c8:	2d00      	cmp	r5, #0
 80207ca:	dd51      	ble.n	8020870 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80207cc:	458e      	cmp	lr, r1
 80207ce:	dd4f      	ble.n	8020870 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80207d0:	45d1      	cmp	r9, sl
 80207d2:	bfb8      	it	lt
 80207d4:	fa1f f089 	uxthlt.w	r0, r9
 80207d8:	45ae      	cmp	lr, r5
 80207da:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80207de:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80207e2:	bfb8      	it	lt
 80207e4:	fa1f f38e 	uxthlt.w	r3, lr
 80207e8:	1a80      	subs	r0, r0, r2
 80207ea:	1a5b      	subs	r3, r3, r1
 80207ec:	f8ad 0004 	strh.w	r0, [sp, #4]
 80207f0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80207f4:	f8ad 2000 	strh.w	r2, [sp]
 80207f8:	f8ad 1002 	strh.w	r1, [sp, #2]
 80207fc:	466d      	mov	r5, sp
 80207fe:	e895 0003 	ldmia.w	r5, {r0, r1}
 8020802:	e887 0003 	stmia.w	r7, {r0, r1}
 8020806:	f8dc 3000 	ldr.w	r3, [ip]
 802080a:	4660      	mov	r0, ip
 802080c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802080e:	4639      	mov	r1, r7
 8020810:	4798      	blx	r3
 8020812:	6861      	ldr	r1, [r4, #4]
 8020814:	4628      	mov	r0, r5
 8020816:	3104      	adds	r1, #4
 8020818:	f7f0 fd0c 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802081c:	4638      	mov	r0, r7
 802081e:	f7f0 fce1 	bl	80111e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020822:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020826:	f8bd 2000 	ldrh.w	r2, [sp]
 802082a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802082e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020832:	4630      	mov	r0, r6
 8020834:	f7ee fb4e 	bl	800eed4 <_ZN8touchgfx7Outline5resetEv>
 8020838:	f9bd 3000 	ldrsh.w	r3, [sp]
 802083c:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020840:	015b      	lsls	r3, r3, #5
 8020842:	60a3      	str	r3, [r4, #8]
 8020844:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020848:	015b      	lsls	r3, r3, #5
 802084a:	60e3      	str	r3, [r4, #12]
 802084c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020850:	015b      	lsls	r3, r3, #5
 8020852:	6123      	str	r3, [r4, #16]
 8020854:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020858:	015b      	lsls	r3, r3, #5
 802085a:	6163      	str	r3, [r4, #20]
 802085c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8020860:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020864:	4620      	mov	r0, r4
 8020866:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802086a:	b002      	add	sp, #8
 802086c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020870:	2300      	movs	r3, #0
 8020872:	9301      	str	r3, [sp, #4]
 8020874:	e7c2      	b.n	80207fc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 8020876:	bf00      	nop
 8020878:	080240dc 	.word	0x080240dc

0802087c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802087c:	b510      	push	{r4, lr}
 802087e:	4b07      	ldr	r3, [pc, #28]	; (802089c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8020880:	781b      	ldrb	r3, [r3, #0]
 8020882:	2b01      	cmp	r3, #1
 8020884:	d108      	bne.n	8020898 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8020886:	6843      	ldr	r3, [r0, #4]
 8020888:	6814      	ldr	r4, [r2, #0]
 802088a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802088e:	680b      	ldr	r3, [r1, #0]
 8020890:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8020894:	6013      	str	r3, [r2, #0]
 8020896:	600c      	str	r4, [r1, #0]
 8020898:	bd10      	pop	{r4, pc}
 802089a:	bf00      	nop
 802089c:	200157f8 	.word	0x200157f8

080208a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80208a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80208a2:	ab02      	add	r3, sp, #8
 80208a4:	4604      	mov	r4, r0
 80208a6:	f843 2d08 	str.w	r2, [r3, #-8]!
 80208aa:	9101      	str	r1, [sp, #4]
 80208ac:	461a      	mov	r2, r3
 80208ae:	a901      	add	r1, sp, #4
 80208b0:	f7ff ffe4 	bl	802087c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80208b4:	68a3      	ldr	r3, [r4, #8]
 80208b6:	9901      	ldr	r1, [sp, #4]
 80208b8:	9a00      	ldr	r2, [sp, #0]
 80208ba:	1ac9      	subs	r1, r1, r3
 80208bc:	68e3      	ldr	r3, [r4, #12]
 80208be:	9101      	str	r1, [sp, #4]
 80208c0:	1ad2      	subs	r2, r2, r3
 80208c2:	2a00      	cmp	r2, #0
 80208c4:	9200      	str	r2, [sp, #0]
 80208c6:	db1c      	blt.n	8020902 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80208c8:	6963      	ldr	r3, [r4, #20]
 80208ca:	429a      	cmp	r2, r3
 80208cc:	bfac      	ite	ge
 80208ce:	2002      	movge	r0, #2
 80208d0:	2000      	movlt	r0, #0
 80208d2:	2900      	cmp	r1, #0
 80208d4:	db17      	blt.n	8020906 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80208d6:	6923      	ldr	r3, [r4, #16]
 80208d8:	4299      	cmp	r1, r3
 80208da:	bfac      	ite	ge
 80208dc:	2308      	movge	r3, #8
 80208de:	2300      	movlt	r3, #0
 80208e0:	4303      	orrs	r3, r0
 80208e2:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80208e6:	b2dd      	uxtb	r5, r3
 80208e8:	b978      	cbnz	r0, 802090a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80208ea:	f104 0020 	add.w	r0, r4, #32
 80208ee:	f7ff fe4f 	bl	8020590 <_ZN8touchgfx10Rasterizer6lineToEii>
 80208f2:	9b01      	ldr	r3, [sp, #4]
 80208f4:	65e3      	str	r3, [r4, #92]	; 0x5c
 80208f6:	9b00      	ldr	r3, [sp, #0]
 80208f8:	6623      	str	r3, [r4, #96]	; 0x60
 80208fa:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80208fe:	b002      	add	sp, #8
 8020900:	bd70      	pop	{r4, r5, r6, pc}
 8020902:	2001      	movs	r0, #1
 8020904:	e7e5      	b.n	80208d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020906:	2304      	movs	r3, #4
 8020908:	e7ea      	b.n	80208e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802090a:	b113      	cbz	r3, 8020912 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802090c:	ea10 0305 	ands.w	r3, r0, r5
 8020910:	d11d      	bne.n	802094e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 8020912:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020916:	f104 0620 	add.w	r6, r4, #32
 802091a:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802091e:	b193      	cbz	r3, 8020946 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8020920:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020924:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020928:	4298      	cmp	r0, r3
 802092a:	d802      	bhi.n	8020932 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802092c:	4630      	mov	r0, r6
 802092e:	f7ee ffcf 	bl	800f8d0 <_ZN8touchgfx7Outline6moveToEii>
 8020932:	2300      	movs	r3, #0
 8020934:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020938:	2301      	movs	r3, #1
 802093a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802093e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020942:	4630      	mov	r0, r6
 8020944:	e7d3      	b.n	80208ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020946:	4630      	mov	r0, r6
 8020948:	f7ff fe22 	bl	8020590 <_ZN8touchgfx10Rasterizer6lineToEii>
 802094c:	e7f7      	b.n	802093e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802094e:	461d      	mov	r5, r3
 8020950:	e7cf      	b.n	80208f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

08020952 <_ZN8touchgfx6Canvas5closeEv>:
 8020952:	b538      	push	{r3, r4, r5, lr}
 8020954:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020958:	4604      	mov	r4, r0
 802095a:	b993      	cbnz	r3, 8020982 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802095c:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8020960:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020964:	4213      	tst	r3, r2
 8020966:	d10c      	bne.n	8020982 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020968:	f100 0520 	add.w	r5, r0, #32
 802096c:	b123      	cbz	r3, 8020978 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802096e:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8020972:	4628      	mov	r0, r5
 8020974:	f7ff fe0c 	bl	8020590 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020978:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802097c:	4628      	mov	r0, r5
 802097e:	f7ff fe07 	bl	8020590 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020982:	2300      	movs	r3, #0
 8020984:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020988:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802098c:	4298      	cmp	r0, r3
 802098e:	bf34      	ite	cc
 8020990:	2000      	movcc	r0, #0
 8020992:	2001      	movcs	r0, #1
 8020994:	bd38      	pop	{r3, r4, r5, pc}
	...

08020998 <_ZN8touchgfx6Canvas6renderEh>:
 8020998:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802099c:	4604      	mov	r4, r0
 802099e:	6840      	ldr	r0, [r0, #4]
 80209a0:	6803      	ldr	r3, [r0, #0]
 80209a2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80209a4:	460d      	mov	r5, r1
 80209a6:	4798      	blx	r3
 80209a8:	fb10 f105 	smulbb	r1, r0, r5
 80209ac:	b289      	uxth	r1, r1
 80209ae:	1c4d      	adds	r5, r1, #1
 80209b0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80209b4:	122d      	asrs	r5, r5, #8
 80209b6:	f000 8098 	beq.w	8020aea <_ZN8touchgfx6Canvas6renderEh+0x152>
 80209ba:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80209be:	2b00      	cmp	r3, #0
 80209c0:	f000 8093 	beq.w	8020aea <_ZN8touchgfx6Canvas6renderEh+0x152>
 80209c4:	4620      	mov	r0, r4
 80209c6:	f7ff ffc4 	bl	8020952 <_ZN8touchgfx6Canvas5closeEv>
 80209ca:	4607      	mov	r7, r0
 80209cc:	2800      	cmp	r0, #0
 80209ce:	d043      	beq.n	8020a58 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80209d0:	6863      	ldr	r3, [r4, #4]
 80209d2:	4e47      	ldr	r6, [pc, #284]	; (8020af0 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 80209d4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80209d6:	6837      	ldr	r7, [r6, #0]
 80209d8:	6803      	ldr	r3, [r0, #0]
 80209da:	689b      	ldr	r3, [r3, #8]
 80209dc:	4798      	blx	r3
 80209de:	4601      	mov	r1, r0
 80209e0:	4638      	mov	r0, r7
 80209e2:	f7eb fb11 	bl	800c008 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80209e6:	4607      	mov	r7, r0
 80209e8:	f7e2 f8ac 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 80209ec:	6803      	ldr	r3, [r0, #0]
 80209ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80209f0:	4798      	blx	r3
 80209f2:	4680      	mov	r8, r0
 80209f4:	f7e2 f8a6 	bl	8002b44 <_ZN8touchgfx3HAL3lcdEv>
 80209f8:	6803      	ldr	r3, [r0, #0]
 80209fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80209fc:	4798      	blx	r3
 80209fe:	280b      	cmp	r0, #11
 8020a00:	d858      	bhi.n	8020ab4 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 8020a02:	e8df f000 	tbb	[pc, r0]
 8020a06:	594e      	.short	0x594e
 8020a08:	2d570669 	.word	0x2d570669
 8020a0c:	6262623d 	.word	0x6262623d
 8020a10:	6262      	.short	0x6262
 8020a12:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020a16:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020a1a:	2208      	movs	r2, #8
 8020a1c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020a20:	fb08 2303 	mla	r3, r8, r3, r2
 8020a24:	441f      	add	r7, r3
 8020a26:	424b      	negs	r3, r1
 8020a28:	f003 0307 	and.w	r3, r3, #7
 8020a2c:	f001 0107 	and.w	r1, r1, #7
 8020a30:	bf58      	it	pl
 8020a32:	4259      	negpl	r1, r3
 8020a34:	b2c9      	uxtb	r1, r1
 8020a36:	b2ed      	uxtb	r5, r5
 8020a38:	e9cd 1500 	strd	r1, r5, [sp]
 8020a3c:	6860      	ldr	r0, [r4, #4]
 8020a3e:	fa0f f388 	sxth.w	r3, r8
 8020a42:	463a      	mov	r2, r7
 8020a44:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020a46:	f104 0020 	add.w	r0, r4, #32
 8020a4a:	f7ff fdad 	bl	80205a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8020a4e:	4607      	mov	r7, r0
 8020a50:	6830      	ldr	r0, [r6, #0]
 8020a52:	6803      	ldr	r3, [r0, #0]
 8020a54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020a56:	4798      	blx	r3
 8020a58:	4638      	mov	r0, r7
 8020a5a:	b002      	add	sp, #8
 8020a5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020a60:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020a64:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020a68:	2204      	movs	r2, #4
 8020a6a:	fb91 f2f2 	sdiv	r2, r1, r2
 8020a6e:	fb08 2303 	mla	r3, r8, r3, r2
 8020a72:	441f      	add	r7, r3
 8020a74:	424b      	negs	r3, r1
 8020a76:	f003 0303 	and.w	r3, r3, #3
 8020a7a:	f001 0103 	and.w	r1, r1, #3
 8020a7e:	e7d7      	b.n	8020a30 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8020a80:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020a84:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020a88:	2900      	cmp	r1, #0
 8020a8a:	f04f 0202 	mov.w	r2, #2
 8020a8e:	fb91 f2f2 	sdiv	r2, r1, r2
 8020a92:	f001 0101 	and.w	r1, r1, #1
 8020a96:	fb08 2303 	mla	r3, r8, r3, r2
 8020a9a:	441f      	add	r7, r3
 8020a9c:	bfb8      	it	lt
 8020a9e:	4249      	neglt	r1, r1
 8020aa0:	e7c8      	b.n	8020a34 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8020aa2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020aa6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020aaa:	fb08 f303 	mul.w	r3, r8, r3
 8020aae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8020ab2:	441f      	add	r7, r3
 8020ab4:	2100      	movs	r1, #0
 8020ab6:	e7be      	b.n	8020a36 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8020ab8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020abc:	fb08 f203 	mul.w	r2, r8, r3
 8020ac0:	8b23      	ldrh	r3, [r4, #24]
 8020ac2:	2103      	movs	r1, #3
 8020ac4:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020ac8:	e7f3      	b.n	8020ab2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020aca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020ace:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020ad2:	fb08 2303 	mla	r3, r8, r3, r2
 8020ad6:	e7ec      	b.n	8020ab2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020ad8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020adc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020ae0:	fb08 f303 	mul.w	r3, r8, r3
 8020ae4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020ae8:	e7e3      	b.n	8020ab2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020aea:	2701      	movs	r7, #1
 8020aec:	e7b4      	b.n	8020a58 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8020aee:	bf00      	nop
 8020af0:	20015800 	.word	0x20015800

08020af4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020af4:	b513      	push	{r0, r1, r4, lr}
 8020af6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020afa:	4604      	mov	r4, r0
 8020afc:	e9cd 2100 	strd	r2, r1, [sp]
 8020b00:	b1a3      	cbz	r3, 8020b2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020b02:	466a      	mov	r2, sp
 8020b04:	a901      	add	r1, sp, #4
 8020b06:	4620      	mov	r0, r4
 8020b08:	f7ff feb8 	bl	802087c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020b0c:	68a3      	ldr	r3, [r4, #8]
 8020b0e:	9901      	ldr	r1, [sp, #4]
 8020b10:	9a00      	ldr	r2, [sp, #0]
 8020b12:	1ac9      	subs	r1, r1, r3
 8020b14:	68e3      	ldr	r3, [r4, #12]
 8020b16:	9101      	str	r1, [sp, #4]
 8020b18:	1ad2      	subs	r2, r2, r3
 8020b1a:	2a00      	cmp	r2, #0
 8020b1c:	9200      	str	r2, [sp, #0]
 8020b1e:	da0b      	bge.n	8020b38 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020b20:	2301      	movs	r3, #1
 8020b22:	2900      	cmp	r1, #0
 8020b24:	da0e      	bge.n	8020b44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020b26:	f043 0304 	orr.w	r3, r3, #4
 8020b2a:	e013      	b.n	8020b54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8020b2c:	f7ff ff11 	bl	8020952 <_ZN8touchgfx6Canvas5closeEv>
 8020b30:	2800      	cmp	r0, #0
 8020b32:	d1e6      	bne.n	8020b02 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020b34:	b002      	add	sp, #8
 8020b36:	bd10      	pop	{r4, pc}
 8020b38:	6963      	ldr	r3, [r4, #20]
 8020b3a:	429a      	cmp	r2, r3
 8020b3c:	bfac      	ite	ge
 8020b3e:	2302      	movge	r3, #2
 8020b40:	2300      	movlt	r3, #0
 8020b42:	e7ee      	b.n	8020b22 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020b44:	6920      	ldr	r0, [r4, #16]
 8020b46:	4281      	cmp	r1, r0
 8020b48:	bfac      	ite	ge
 8020b4a:	2008      	movge	r0, #8
 8020b4c:	2000      	movlt	r0, #0
 8020b4e:	4318      	orrs	r0, r3
 8020b50:	b2c3      	uxtb	r3, r0
 8020b52:	b158      	cbz	r0, 8020b6c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020b54:	2201      	movs	r2, #1
 8020b56:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8020b5a:	9901      	ldr	r1, [sp, #4]
 8020b5c:	9a00      	ldr	r2, [sp, #0]
 8020b5e:	66a1      	str	r1, [r4, #104]	; 0x68
 8020b60:	66e2      	str	r2, [r4, #108]	; 0x6c
 8020b62:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020b66:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8020b6a:	e7e3      	b.n	8020b34 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020b6c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020b70:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020b74:	4298      	cmp	r0, r3
 8020b76:	d803      	bhi.n	8020b80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020b78:	f104 0020 	add.w	r0, r4, #32
 8020b7c:	f7ee fea8 	bl	800f8d0 <_ZN8touchgfx7Outline6moveToEii>
 8020b80:	2300      	movs	r3, #0
 8020b82:	2201      	movs	r2, #1
 8020b84:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020b88:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8020b8c:	e7e5      	b.n	8020b5a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08020b8e <__aeabi_atexit>:
 8020b8e:	460b      	mov	r3, r1
 8020b90:	4601      	mov	r1, r0
 8020b92:	4618      	mov	r0, r3
 8020b94:	f000 b8d8 	b.w	8020d48 <__cxa_atexit>

08020b98 <_ZdlPvj>:
 8020b98:	f000 b812 	b.w	8020bc0 <_ZdlPv>

08020b9c <__cxa_guard_acquire>:
 8020b9c:	6803      	ldr	r3, [r0, #0]
 8020b9e:	07db      	lsls	r3, r3, #31
 8020ba0:	d406      	bmi.n	8020bb0 <__cxa_guard_acquire+0x14>
 8020ba2:	7843      	ldrb	r3, [r0, #1]
 8020ba4:	b103      	cbz	r3, 8020ba8 <__cxa_guard_acquire+0xc>
 8020ba6:	deff      	udf	#255	; 0xff
 8020ba8:	2301      	movs	r3, #1
 8020baa:	7043      	strb	r3, [r0, #1]
 8020bac:	4618      	mov	r0, r3
 8020bae:	4770      	bx	lr
 8020bb0:	2000      	movs	r0, #0
 8020bb2:	4770      	bx	lr

08020bb4 <__cxa_guard_release>:
 8020bb4:	2301      	movs	r3, #1
 8020bb6:	6003      	str	r3, [r0, #0]
 8020bb8:	4770      	bx	lr

08020bba <__cxa_pure_virtual>:
 8020bba:	b508      	push	{r3, lr}
 8020bbc:	f000 f80e 	bl	8020bdc <_ZSt9terminatev>

08020bc0 <_ZdlPv>:
 8020bc0:	f000 ba0e 	b.w	8020fe0 <free>

08020bc4 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020bc4:	b508      	push	{r3, lr}
 8020bc6:	4780      	blx	r0
 8020bc8:	f000 f892 	bl	8020cf0 <abort>

08020bcc <_ZSt13get_terminatev>:
 8020bcc:	4b02      	ldr	r3, [pc, #8]	; (8020bd8 <_ZSt13get_terminatev+0xc>)
 8020bce:	6818      	ldr	r0, [r3, #0]
 8020bd0:	f3bf 8f5b 	dmb	ish
 8020bd4:	4770      	bx	lr
 8020bd6:	bf00      	nop
 8020bd8:	20000100 	.word	0x20000100

08020bdc <_ZSt9terminatev>:
 8020bdc:	b508      	push	{r3, lr}
 8020bde:	f7ff fff5 	bl	8020bcc <_ZSt13get_terminatev>
 8020be2:	f7ff ffef 	bl	8020bc4 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08020be8 <ceilf>:
 8020be8:	ee10 3a10 	vmov	r3, s0
 8020bec:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020bf0:	3a7f      	subs	r2, #127	; 0x7f
 8020bf2:	2a16      	cmp	r2, #22
 8020bf4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020bf8:	dc2a      	bgt.n	8020c50 <ceilf+0x68>
 8020bfa:	2a00      	cmp	r2, #0
 8020bfc:	da11      	bge.n	8020c22 <ceilf+0x3a>
 8020bfe:	eddf 7a19 	vldr	s15, [pc, #100]	; 8020c64 <ceilf+0x7c>
 8020c02:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020c06:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020c0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020c0e:	dd05      	ble.n	8020c1c <ceilf+0x34>
 8020c10:	2b00      	cmp	r3, #0
 8020c12:	db23      	blt.n	8020c5c <ceilf+0x74>
 8020c14:	2900      	cmp	r1, #0
 8020c16:	bf18      	it	ne
 8020c18:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8020c1c:	ee00 3a10 	vmov	s0, r3
 8020c20:	4770      	bx	lr
 8020c22:	4911      	ldr	r1, [pc, #68]	; (8020c68 <ceilf+0x80>)
 8020c24:	4111      	asrs	r1, r2
 8020c26:	420b      	tst	r3, r1
 8020c28:	d0fa      	beq.n	8020c20 <ceilf+0x38>
 8020c2a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8020c64 <ceilf+0x7c>
 8020c2e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020c32:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020c36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020c3a:	ddef      	ble.n	8020c1c <ceilf+0x34>
 8020c3c:	2b00      	cmp	r3, #0
 8020c3e:	bfc2      	ittt	gt
 8020c40:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020c44:	fa40 f202 	asrgt.w	r2, r0, r2
 8020c48:	189b      	addgt	r3, r3, r2
 8020c4a:	ea23 0301 	bic.w	r3, r3, r1
 8020c4e:	e7e5      	b.n	8020c1c <ceilf+0x34>
 8020c50:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020c54:	d3e4      	bcc.n	8020c20 <ceilf+0x38>
 8020c56:	ee30 0a00 	vadd.f32	s0, s0, s0
 8020c5a:	4770      	bx	lr
 8020c5c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8020c60:	e7dc      	b.n	8020c1c <ceilf+0x34>
 8020c62:	bf00      	nop
 8020c64:	7149f2ca 	.word	0x7149f2ca
 8020c68:	007fffff 	.word	0x007fffff

08020c6c <floorf>:
 8020c6c:	ee10 3a10 	vmov	r3, s0
 8020c70:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020c74:	3a7f      	subs	r2, #127	; 0x7f
 8020c76:	2a16      	cmp	r2, #22
 8020c78:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020c7c:	dc2a      	bgt.n	8020cd4 <floorf+0x68>
 8020c7e:	2a00      	cmp	r2, #0
 8020c80:	da11      	bge.n	8020ca6 <floorf+0x3a>
 8020c82:	eddf 7a18 	vldr	s15, [pc, #96]	; 8020ce4 <floorf+0x78>
 8020c86:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020c8a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020c8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020c92:	dd05      	ble.n	8020ca0 <floorf+0x34>
 8020c94:	2b00      	cmp	r3, #0
 8020c96:	da23      	bge.n	8020ce0 <floorf+0x74>
 8020c98:	4a13      	ldr	r2, [pc, #76]	; (8020ce8 <floorf+0x7c>)
 8020c9a:	2900      	cmp	r1, #0
 8020c9c:	bf18      	it	ne
 8020c9e:	4613      	movne	r3, r2
 8020ca0:	ee00 3a10 	vmov	s0, r3
 8020ca4:	4770      	bx	lr
 8020ca6:	4911      	ldr	r1, [pc, #68]	; (8020cec <floorf+0x80>)
 8020ca8:	4111      	asrs	r1, r2
 8020caa:	420b      	tst	r3, r1
 8020cac:	d0fa      	beq.n	8020ca4 <floorf+0x38>
 8020cae:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8020ce4 <floorf+0x78>
 8020cb2:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020cb6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020cba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020cbe:	ddef      	ble.n	8020ca0 <floorf+0x34>
 8020cc0:	2b00      	cmp	r3, #0
 8020cc2:	bfbe      	ittt	lt
 8020cc4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8020cc8:	fa40 f202 	asrlt.w	r2, r0, r2
 8020ccc:	189b      	addlt	r3, r3, r2
 8020cce:	ea23 0301 	bic.w	r3, r3, r1
 8020cd2:	e7e5      	b.n	8020ca0 <floorf+0x34>
 8020cd4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020cd8:	d3e4      	bcc.n	8020ca4 <floorf+0x38>
 8020cda:	ee30 0a00 	vadd.f32	s0, s0, s0
 8020cde:	4770      	bx	lr
 8020ce0:	2300      	movs	r3, #0
 8020ce2:	e7dd      	b.n	8020ca0 <floorf+0x34>
 8020ce4:	7149f2ca 	.word	0x7149f2ca
 8020ce8:	bf800000 	.word	0xbf800000
 8020cec:	007fffff 	.word	0x007fffff

08020cf0 <abort>:
 8020cf0:	b508      	push	{r3, lr}
 8020cf2:	2006      	movs	r0, #6
 8020cf4:	f000 fe02 	bl	80218fc <raise>
 8020cf8:	2001      	movs	r0, #1
 8020cfa:	f7e1 fc4b 	bl	8002594 <_exit>
	...

08020d00 <__assert_func>:
 8020d00:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020d02:	4614      	mov	r4, r2
 8020d04:	461a      	mov	r2, r3
 8020d06:	4b09      	ldr	r3, [pc, #36]	; (8020d2c <__assert_func+0x2c>)
 8020d08:	681b      	ldr	r3, [r3, #0]
 8020d0a:	4605      	mov	r5, r0
 8020d0c:	68d8      	ldr	r0, [r3, #12]
 8020d0e:	b14c      	cbz	r4, 8020d24 <__assert_func+0x24>
 8020d10:	4b07      	ldr	r3, [pc, #28]	; (8020d30 <__assert_func+0x30>)
 8020d12:	9100      	str	r1, [sp, #0]
 8020d14:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020d18:	4906      	ldr	r1, [pc, #24]	; (8020d34 <__assert_func+0x34>)
 8020d1a:	462b      	mov	r3, r5
 8020d1c:	f000 f8fe 	bl	8020f1c <fiprintf>
 8020d20:	f7ff ffe6 	bl	8020cf0 <abort>
 8020d24:	4b04      	ldr	r3, [pc, #16]	; (8020d38 <__assert_func+0x38>)
 8020d26:	461c      	mov	r4, r3
 8020d28:	e7f3      	b.n	8020d12 <__assert_func+0x12>
 8020d2a:	bf00      	nop
 8020d2c:	20000104 	.word	0x20000104
 8020d30:	08024ba4 	.word	0x08024ba4
 8020d34:	08024bb1 	.word	0x08024bb1
 8020d38:	08023b27 	.word	0x08023b27

08020d3c <atexit>:
 8020d3c:	2300      	movs	r3, #0
 8020d3e:	4601      	mov	r1, r0
 8020d40:	461a      	mov	r2, r3
 8020d42:	4618      	mov	r0, r3
 8020d44:	f000 bf0c 	b.w	8021b60 <__register_exitproc>

08020d48 <__cxa_atexit>:
 8020d48:	b510      	push	{r4, lr}
 8020d4a:	4c05      	ldr	r4, [pc, #20]	; (8020d60 <__cxa_atexit+0x18>)
 8020d4c:	4613      	mov	r3, r2
 8020d4e:	b12c      	cbz	r4, 8020d5c <__cxa_atexit+0x14>
 8020d50:	460a      	mov	r2, r1
 8020d52:	4601      	mov	r1, r0
 8020d54:	2002      	movs	r0, #2
 8020d56:	f000 ff03 	bl	8021b60 <__register_exitproc>
 8020d5a:	bd10      	pop	{r4, pc}
 8020d5c:	4620      	mov	r0, r4
 8020d5e:	e7fc      	b.n	8020d5a <__cxa_atexit+0x12>
 8020d60:	08021b61 	.word	0x08021b61

08020d64 <__errno>:
 8020d64:	4b01      	ldr	r3, [pc, #4]	; (8020d6c <__errno+0x8>)
 8020d66:	6818      	ldr	r0, [r3, #0]
 8020d68:	4770      	bx	lr
 8020d6a:	bf00      	nop
 8020d6c:	20000104 	.word	0x20000104

08020d70 <std>:
 8020d70:	2300      	movs	r3, #0
 8020d72:	b510      	push	{r4, lr}
 8020d74:	4604      	mov	r4, r0
 8020d76:	e9c0 3300 	strd	r3, r3, [r0]
 8020d7a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8020d7e:	6083      	str	r3, [r0, #8]
 8020d80:	8181      	strh	r1, [r0, #12]
 8020d82:	6643      	str	r3, [r0, #100]	; 0x64
 8020d84:	81c2      	strh	r2, [r0, #14]
 8020d86:	6183      	str	r3, [r0, #24]
 8020d88:	4619      	mov	r1, r3
 8020d8a:	2208      	movs	r2, #8
 8020d8c:	305c      	adds	r0, #92	; 0x5c
 8020d8e:	f000 f93d 	bl	802100c <memset>
 8020d92:	4b05      	ldr	r3, [pc, #20]	; (8020da8 <std+0x38>)
 8020d94:	6263      	str	r3, [r4, #36]	; 0x24
 8020d96:	4b05      	ldr	r3, [pc, #20]	; (8020dac <std+0x3c>)
 8020d98:	62a3      	str	r3, [r4, #40]	; 0x28
 8020d9a:	4b05      	ldr	r3, [pc, #20]	; (8020db0 <std+0x40>)
 8020d9c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8020d9e:	4b05      	ldr	r3, [pc, #20]	; (8020db4 <std+0x44>)
 8020da0:	6224      	str	r4, [r4, #32]
 8020da2:	6323      	str	r3, [r4, #48]	; 0x30
 8020da4:	bd10      	pop	{r4, pc}
 8020da6:	bf00      	nop
 8020da8:	08021935 	.word	0x08021935
 8020dac:	08021957 	.word	0x08021957
 8020db0:	0802198f 	.word	0x0802198f
 8020db4:	080219b3 	.word	0x080219b3

08020db8 <_cleanup_r>:
 8020db8:	4901      	ldr	r1, [pc, #4]	; (8020dc0 <_cleanup_r+0x8>)
 8020dba:	f000 b8c1 	b.w	8020f40 <_fwalk_reent>
 8020dbe:	bf00      	nop
 8020dc0:	08021d51 	.word	0x08021d51

08020dc4 <__sfmoreglue>:
 8020dc4:	b570      	push	{r4, r5, r6, lr}
 8020dc6:	2268      	movs	r2, #104	; 0x68
 8020dc8:	1e4d      	subs	r5, r1, #1
 8020dca:	4355      	muls	r5, r2
 8020dcc:	460e      	mov	r6, r1
 8020dce:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8020dd2:	f000 f98f 	bl	80210f4 <_malloc_r>
 8020dd6:	4604      	mov	r4, r0
 8020dd8:	b140      	cbz	r0, 8020dec <__sfmoreglue+0x28>
 8020dda:	2100      	movs	r1, #0
 8020ddc:	e9c0 1600 	strd	r1, r6, [r0]
 8020de0:	300c      	adds	r0, #12
 8020de2:	60a0      	str	r0, [r4, #8]
 8020de4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020de8:	f000 f910 	bl	802100c <memset>
 8020dec:	4620      	mov	r0, r4
 8020dee:	bd70      	pop	{r4, r5, r6, pc}

08020df0 <__sfp_lock_acquire>:
 8020df0:	4801      	ldr	r0, [pc, #4]	; (8020df8 <__sfp_lock_acquire+0x8>)
 8020df2:	f000 b8ea 	b.w	8020fca <__retarget_lock_acquire_recursive>
 8020df6:	bf00      	nop
 8020df8:	20015906 	.word	0x20015906

08020dfc <__sfp_lock_release>:
 8020dfc:	4801      	ldr	r0, [pc, #4]	; (8020e04 <__sfp_lock_release+0x8>)
 8020dfe:	f000 b8e6 	b.w	8020fce <__retarget_lock_release_recursive>
 8020e02:	bf00      	nop
 8020e04:	20015906 	.word	0x20015906

08020e08 <__sinit_lock_acquire>:
 8020e08:	4801      	ldr	r0, [pc, #4]	; (8020e10 <__sinit_lock_acquire+0x8>)
 8020e0a:	f000 b8de 	b.w	8020fca <__retarget_lock_acquire_recursive>
 8020e0e:	bf00      	nop
 8020e10:	20015907 	.word	0x20015907

08020e14 <__sinit_lock_release>:
 8020e14:	4801      	ldr	r0, [pc, #4]	; (8020e1c <__sinit_lock_release+0x8>)
 8020e16:	f000 b8da 	b.w	8020fce <__retarget_lock_release_recursive>
 8020e1a:	bf00      	nop
 8020e1c:	20015907 	.word	0x20015907

08020e20 <__sinit>:
 8020e20:	b510      	push	{r4, lr}
 8020e22:	4604      	mov	r4, r0
 8020e24:	f7ff fff0 	bl	8020e08 <__sinit_lock_acquire>
 8020e28:	69a3      	ldr	r3, [r4, #24]
 8020e2a:	b11b      	cbz	r3, 8020e34 <__sinit+0x14>
 8020e2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020e30:	f7ff bff0 	b.w	8020e14 <__sinit_lock_release>
 8020e34:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020e38:	6523      	str	r3, [r4, #80]	; 0x50
 8020e3a:	4b13      	ldr	r3, [pc, #76]	; (8020e88 <__sinit+0x68>)
 8020e3c:	4a13      	ldr	r2, [pc, #76]	; (8020e8c <__sinit+0x6c>)
 8020e3e:	681b      	ldr	r3, [r3, #0]
 8020e40:	62a2      	str	r2, [r4, #40]	; 0x28
 8020e42:	42a3      	cmp	r3, r4
 8020e44:	bf04      	itt	eq
 8020e46:	2301      	moveq	r3, #1
 8020e48:	61a3      	streq	r3, [r4, #24]
 8020e4a:	4620      	mov	r0, r4
 8020e4c:	f000 f820 	bl	8020e90 <__sfp>
 8020e50:	6060      	str	r0, [r4, #4]
 8020e52:	4620      	mov	r0, r4
 8020e54:	f000 f81c 	bl	8020e90 <__sfp>
 8020e58:	60a0      	str	r0, [r4, #8]
 8020e5a:	4620      	mov	r0, r4
 8020e5c:	f000 f818 	bl	8020e90 <__sfp>
 8020e60:	2200      	movs	r2, #0
 8020e62:	60e0      	str	r0, [r4, #12]
 8020e64:	2104      	movs	r1, #4
 8020e66:	6860      	ldr	r0, [r4, #4]
 8020e68:	f7ff ff82 	bl	8020d70 <std>
 8020e6c:	68a0      	ldr	r0, [r4, #8]
 8020e6e:	2201      	movs	r2, #1
 8020e70:	2109      	movs	r1, #9
 8020e72:	f7ff ff7d 	bl	8020d70 <std>
 8020e76:	68e0      	ldr	r0, [r4, #12]
 8020e78:	2202      	movs	r2, #2
 8020e7a:	2112      	movs	r1, #18
 8020e7c:	f7ff ff78 	bl	8020d70 <std>
 8020e80:	2301      	movs	r3, #1
 8020e82:	61a3      	str	r3, [r4, #24]
 8020e84:	e7d2      	b.n	8020e2c <__sinit+0xc>
 8020e86:	bf00      	nop
 8020e88:	08024c40 	.word	0x08024c40
 8020e8c:	08020db9 	.word	0x08020db9

08020e90 <__sfp>:
 8020e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020e92:	4607      	mov	r7, r0
 8020e94:	f7ff ffac 	bl	8020df0 <__sfp_lock_acquire>
 8020e98:	4b1e      	ldr	r3, [pc, #120]	; (8020f14 <__sfp+0x84>)
 8020e9a:	681e      	ldr	r6, [r3, #0]
 8020e9c:	69b3      	ldr	r3, [r6, #24]
 8020e9e:	b913      	cbnz	r3, 8020ea6 <__sfp+0x16>
 8020ea0:	4630      	mov	r0, r6
 8020ea2:	f7ff ffbd 	bl	8020e20 <__sinit>
 8020ea6:	3648      	adds	r6, #72	; 0x48
 8020ea8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020eac:	3b01      	subs	r3, #1
 8020eae:	d503      	bpl.n	8020eb8 <__sfp+0x28>
 8020eb0:	6833      	ldr	r3, [r6, #0]
 8020eb2:	b30b      	cbz	r3, 8020ef8 <__sfp+0x68>
 8020eb4:	6836      	ldr	r6, [r6, #0]
 8020eb6:	e7f7      	b.n	8020ea8 <__sfp+0x18>
 8020eb8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020ebc:	b9d5      	cbnz	r5, 8020ef4 <__sfp+0x64>
 8020ebe:	4b16      	ldr	r3, [pc, #88]	; (8020f18 <__sfp+0x88>)
 8020ec0:	60e3      	str	r3, [r4, #12]
 8020ec2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020ec6:	6665      	str	r5, [r4, #100]	; 0x64
 8020ec8:	f000 f87e 	bl	8020fc8 <__retarget_lock_init_recursive>
 8020ecc:	f7ff ff96 	bl	8020dfc <__sfp_lock_release>
 8020ed0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8020ed4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020ed8:	6025      	str	r5, [r4, #0]
 8020eda:	61a5      	str	r5, [r4, #24]
 8020edc:	2208      	movs	r2, #8
 8020ede:	4629      	mov	r1, r5
 8020ee0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020ee4:	f000 f892 	bl	802100c <memset>
 8020ee8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020eec:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8020ef0:	4620      	mov	r0, r4
 8020ef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020ef4:	3468      	adds	r4, #104	; 0x68
 8020ef6:	e7d9      	b.n	8020eac <__sfp+0x1c>
 8020ef8:	2104      	movs	r1, #4
 8020efa:	4638      	mov	r0, r7
 8020efc:	f7ff ff62 	bl	8020dc4 <__sfmoreglue>
 8020f00:	4604      	mov	r4, r0
 8020f02:	6030      	str	r0, [r6, #0]
 8020f04:	2800      	cmp	r0, #0
 8020f06:	d1d5      	bne.n	8020eb4 <__sfp+0x24>
 8020f08:	f7ff ff78 	bl	8020dfc <__sfp_lock_release>
 8020f0c:	230c      	movs	r3, #12
 8020f0e:	603b      	str	r3, [r7, #0]
 8020f10:	e7ee      	b.n	8020ef0 <__sfp+0x60>
 8020f12:	bf00      	nop
 8020f14:	08024c40 	.word	0x08024c40
 8020f18:	ffff0001 	.word	0xffff0001

08020f1c <fiprintf>:
 8020f1c:	b40e      	push	{r1, r2, r3}
 8020f1e:	b503      	push	{r0, r1, lr}
 8020f20:	4601      	mov	r1, r0
 8020f22:	ab03      	add	r3, sp, #12
 8020f24:	4805      	ldr	r0, [pc, #20]	; (8020f3c <fiprintf+0x20>)
 8020f26:	f853 2b04 	ldr.w	r2, [r3], #4
 8020f2a:	6800      	ldr	r0, [r0, #0]
 8020f2c:	9301      	str	r3, [sp, #4]
 8020f2e:	f000 f97f 	bl	8021230 <_vfiprintf_r>
 8020f32:	b002      	add	sp, #8
 8020f34:	f85d eb04 	ldr.w	lr, [sp], #4
 8020f38:	b003      	add	sp, #12
 8020f3a:	4770      	bx	lr
 8020f3c:	20000104 	.word	0x20000104

08020f40 <_fwalk_reent>:
 8020f40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020f44:	4606      	mov	r6, r0
 8020f46:	4688      	mov	r8, r1
 8020f48:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020f4c:	2700      	movs	r7, #0
 8020f4e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020f52:	f1b9 0901 	subs.w	r9, r9, #1
 8020f56:	d505      	bpl.n	8020f64 <_fwalk_reent+0x24>
 8020f58:	6824      	ldr	r4, [r4, #0]
 8020f5a:	2c00      	cmp	r4, #0
 8020f5c:	d1f7      	bne.n	8020f4e <_fwalk_reent+0xe>
 8020f5e:	4638      	mov	r0, r7
 8020f60:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020f64:	89ab      	ldrh	r3, [r5, #12]
 8020f66:	2b01      	cmp	r3, #1
 8020f68:	d907      	bls.n	8020f7a <_fwalk_reent+0x3a>
 8020f6a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020f6e:	3301      	adds	r3, #1
 8020f70:	d003      	beq.n	8020f7a <_fwalk_reent+0x3a>
 8020f72:	4629      	mov	r1, r5
 8020f74:	4630      	mov	r0, r6
 8020f76:	47c0      	blx	r8
 8020f78:	4307      	orrs	r7, r0
 8020f7a:	3568      	adds	r5, #104	; 0x68
 8020f7c:	e7e9      	b.n	8020f52 <_fwalk_reent+0x12>
	...

08020f80 <__libc_init_array>:
 8020f80:	b570      	push	{r4, r5, r6, lr}
 8020f82:	4d0d      	ldr	r5, [pc, #52]	; (8020fb8 <__libc_init_array+0x38>)
 8020f84:	4c0d      	ldr	r4, [pc, #52]	; (8020fbc <__libc_init_array+0x3c>)
 8020f86:	1b64      	subs	r4, r4, r5
 8020f88:	10a4      	asrs	r4, r4, #2
 8020f8a:	2600      	movs	r6, #0
 8020f8c:	42a6      	cmp	r6, r4
 8020f8e:	d109      	bne.n	8020fa4 <__libc_init_array+0x24>
 8020f90:	4d0b      	ldr	r5, [pc, #44]	; (8020fc0 <__libc_init_array+0x40>)
 8020f92:	4c0c      	ldr	r4, [pc, #48]	; (8020fc4 <__libc_init_array+0x44>)
 8020f94:	f000 ffd0 	bl	8021f38 <_init>
 8020f98:	1b64      	subs	r4, r4, r5
 8020f9a:	10a4      	asrs	r4, r4, #2
 8020f9c:	2600      	movs	r6, #0
 8020f9e:	42a6      	cmp	r6, r4
 8020fa0:	d105      	bne.n	8020fae <__libc_init_array+0x2e>
 8020fa2:	bd70      	pop	{r4, r5, r6, pc}
 8020fa4:	f855 3b04 	ldr.w	r3, [r5], #4
 8020fa8:	4798      	blx	r3
 8020faa:	3601      	adds	r6, #1
 8020fac:	e7ee      	b.n	8020f8c <__libc_init_array+0xc>
 8020fae:	f855 3b04 	ldr.w	r3, [r5], #4
 8020fb2:	4798      	blx	r3
 8020fb4:	3601      	adds	r6, #1
 8020fb6:	e7f2      	b.n	8020f9e <__libc_init_array+0x1e>
 8020fb8:	080c3814 	.word	0x080c3814
 8020fbc:	080c3814 	.word	0x080c3814
 8020fc0:	080c3814 	.word	0x080c3814
 8020fc4:	080c3828 	.word	0x080c3828

08020fc8 <__retarget_lock_init_recursive>:
 8020fc8:	4770      	bx	lr

08020fca <__retarget_lock_acquire_recursive>:
 8020fca:	4770      	bx	lr

08020fcc <__retarget_lock_release>:
 8020fcc:	4770      	bx	lr

08020fce <__retarget_lock_release_recursive>:
 8020fce:	4770      	bx	lr

08020fd0 <malloc>:
 8020fd0:	4b02      	ldr	r3, [pc, #8]	; (8020fdc <malloc+0xc>)
 8020fd2:	4601      	mov	r1, r0
 8020fd4:	6818      	ldr	r0, [r3, #0]
 8020fd6:	f000 b88d 	b.w	80210f4 <_malloc_r>
 8020fda:	bf00      	nop
 8020fdc:	20000104 	.word	0x20000104

08020fe0 <free>:
 8020fe0:	4b02      	ldr	r3, [pc, #8]	; (8020fec <free+0xc>)
 8020fe2:	4601      	mov	r1, r0
 8020fe4:	6818      	ldr	r0, [r3, #0]
 8020fe6:	f000 b819 	b.w	802101c <_free_r>
 8020fea:	bf00      	nop
 8020fec:	20000104 	.word	0x20000104

08020ff0 <memcpy>:
 8020ff0:	440a      	add	r2, r1
 8020ff2:	4291      	cmp	r1, r2
 8020ff4:	f100 33ff 	add.w	r3, r0, #4294967295
 8020ff8:	d100      	bne.n	8020ffc <memcpy+0xc>
 8020ffa:	4770      	bx	lr
 8020ffc:	b510      	push	{r4, lr}
 8020ffe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8021002:	f803 4f01 	strb.w	r4, [r3, #1]!
 8021006:	4291      	cmp	r1, r2
 8021008:	d1f9      	bne.n	8020ffe <memcpy+0xe>
 802100a:	bd10      	pop	{r4, pc}

0802100c <memset>:
 802100c:	4402      	add	r2, r0
 802100e:	4603      	mov	r3, r0
 8021010:	4293      	cmp	r3, r2
 8021012:	d100      	bne.n	8021016 <memset+0xa>
 8021014:	4770      	bx	lr
 8021016:	f803 1b01 	strb.w	r1, [r3], #1
 802101a:	e7f9      	b.n	8021010 <memset+0x4>

0802101c <_free_r>:
 802101c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802101e:	2900      	cmp	r1, #0
 8021020:	d044      	beq.n	80210ac <_free_r+0x90>
 8021022:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8021026:	9001      	str	r0, [sp, #4]
 8021028:	2b00      	cmp	r3, #0
 802102a:	f1a1 0404 	sub.w	r4, r1, #4
 802102e:	bfb8      	it	lt
 8021030:	18e4      	addlt	r4, r4, r3
 8021032:	f000 ff41 	bl	8021eb8 <__malloc_lock>
 8021036:	4a1e      	ldr	r2, [pc, #120]	; (80210b0 <_free_r+0x94>)
 8021038:	9801      	ldr	r0, [sp, #4]
 802103a:	6813      	ldr	r3, [r2, #0]
 802103c:	b933      	cbnz	r3, 802104c <_free_r+0x30>
 802103e:	6063      	str	r3, [r4, #4]
 8021040:	6014      	str	r4, [r2, #0]
 8021042:	b003      	add	sp, #12
 8021044:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8021048:	f000 bf3c 	b.w	8021ec4 <__malloc_unlock>
 802104c:	42a3      	cmp	r3, r4
 802104e:	d908      	bls.n	8021062 <_free_r+0x46>
 8021050:	6825      	ldr	r5, [r4, #0]
 8021052:	1961      	adds	r1, r4, r5
 8021054:	428b      	cmp	r3, r1
 8021056:	bf01      	itttt	eq
 8021058:	6819      	ldreq	r1, [r3, #0]
 802105a:	685b      	ldreq	r3, [r3, #4]
 802105c:	1949      	addeq	r1, r1, r5
 802105e:	6021      	streq	r1, [r4, #0]
 8021060:	e7ed      	b.n	802103e <_free_r+0x22>
 8021062:	461a      	mov	r2, r3
 8021064:	685b      	ldr	r3, [r3, #4]
 8021066:	b10b      	cbz	r3, 802106c <_free_r+0x50>
 8021068:	42a3      	cmp	r3, r4
 802106a:	d9fa      	bls.n	8021062 <_free_r+0x46>
 802106c:	6811      	ldr	r1, [r2, #0]
 802106e:	1855      	adds	r5, r2, r1
 8021070:	42a5      	cmp	r5, r4
 8021072:	d10b      	bne.n	802108c <_free_r+0x70>
 8021074:	6824      	ldr	r4, [r4, #0]
 8021076:	4421      	add	r1, r4
 8021078:	1854      	adds	r4, r2, r1
 802107a:	42a3      	cmp	r3, r4
 802107c:	6011      	str	r1, [r2, #0]
 802107e:	d1e0      	bne.n	8021042 <_free_r+0x26>
 8021080:	681c      	ldr	r4, [r3, #0]
 8021082:	685b      	ldr	r3, [r3, #4]
 8021084:	6053      	str	r3, [r2, #4]
 8021086:	4421      	add	r1, r4
 8021088:	6011      	str	r1, [r2, #0]
 802108a:	e7da      	b.n	8021042 <_free_r+0x26>
 802108c:	d902      	bls.n	8021094 <_free_r+0x78>
 802108e:	230c      	movs	r3, #12
 8021090:	6003      	str	r3, [r0, #0]
 8021092:	e7d6      	b.n	8021042 <_free_r+0x26>
 8021094:	6825      	ldr	r5, [r4, #0]
 8021096:	1961      	adds	r1, r4, r5
 8021098:	428b      	cmp	r3, r1
 802109a:	bf04      	itt	eq
 802109c:	6819      	ldreq	r1, [r3, #0]
 802109e:	685b      	ldreq	r3, [r3, #4]
 80210a0:	6063      	str	r3, [r4, #4]
 80210a2:	bf04      	itt	eq
 80210a4:	1949      	addeq	r1, r1, r5
 80210a6:	6021      	streq	r1, [r4, #0]
 80210a8:	6054      	str	r4, [r2, #4]
 80210aa:	e7ca      	b.n	8021042 <_free_r+0x26>
 80210ac:	b003      	add	sp, #12
 80210ae:	bd30      	pop	{r4, r5, pc}
 80210b0:	20015908 	.word	0x20015908

080210b4 <sbrk_aligned>:
 80210b4:	b570      	push	{r4, r5, r6, lr}
 80210b6:	4e0e      	ldr	r6, [pc, #56]	; (80210f0 <sbrk_aligned+0x3c>)
 80210b8:	460c      	mov	r4, r1
 80210ba:	6831      	ldr	r1, [r6, #0]
 80210bc:	4605      	mov	r5, r0
 80210be:	b911      	cbnz	r1, 80210c6 <sbrk_aligned+0x12>
 80210c0:	f000 fbe4 	bl	802188c <_sbrk_r>
 80210c4:	6030      	str	r0, [r6, #0]
 80210c6:	4621      	mov	r1, r4
 80210c8:	4628      	mov	r0, r5
 80210ca:	f000 fbdf 	bl	802188c <_sbrk_r>
 80210ce:	1c43      	adds	r3, r0, #1
 80210d0:	d00a      	beq.n	80210e8 <sbrk_aligned+0x34>
 80210d2:	1cc4      	adds	r4, r0, #3
 80210d4:	f024 0403 	bic.w	r4, r4, #3
 80210d8:	42a0      	cmp	r0, r4
 80210da:	d007      	beq.n	80210ec <sbrk_aligned+0x38>
 80210dc:	1a21      	subs	r1, r4, r0
 80210de:	4628      	mov	r0, r5
 80210e0:	f000 fbd4 	bl	802188c <_sbrk_r>
 80210e4:	3001      	adds	r0, #1
 80210e6:	d101      	bne.n	80210ec <sbrk_aligned+0x38>
 80210e8:	f04f 34ff 	mov.w	r4, #4294967295
 80210ec:	4620      	mov	r0, r4
 80210ee:	bd70      	pop	{r4, r5, r6, pc}
 80210f0:	2001590c 	.word	0x2001590c

080210f4 <_malloc_r>:
 80210f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80210f8:	1ccd      	adds	r5, r1, #3
 80210fa:	f025 0503 	bic.w	r5, r5, #3
 80210fe:	3508      	adds	r5, #8
 8021100:	2d0c      	cmp	r5, #12
 8021102:	bf38      	it	cc
 8021104:	250c      	movcc	r5, #12
 8021106:	2d00      	cmp	r5, #0
 8021108:	4607      	mov	r7, r0
 802110a:	db01      	blt.n	8021110 <_malloc_r+0x1c>
 802110c:	42a9      	cmp	r1, r5
 802110e:	d905      	bls.n	802111c <_malloc_r+0x28>
 8021110:	230c      	movs	r3, #12
 8021112:	603b      	str	r3, [r7, #0]
 8021114:	2600      	movs	r6, #0
 8021116:	4630      	mov	r0, r6
 8021118:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802111c:	4e2e      	ldr	r6, [pc, #184]	; (80211d8 <_malloc_r+0xe4>)
 802111e:	f000 fecb 	bl	8021eb8 <__malloc_lock>
 8021122:	6833      	ldr	r3, [r6, #0]
 8021124:	461c      	mov	r4, r3
 8021126:	bb34      	cbnz	r4, 8021176 <_malloc_r+0x82>
 8021128:	4629      	mov	r1, r5
 802112a:	4638      	mov	r0, r7
 802112c:	f7ff ffc2 	bl	80210b4 <sbrk_aligned>
 8021130:	1c43      	adds	r3, r0, #1
 8021132:	4604      	mov	r4, r0
 8021134:	d14d      	bne.n	80211d2 <_malloc_r+0xde>
 8021136:	6834      	ldr	r4, [r6, #0]
 8021138:	4626      	mov	r6, r4
 802113a:	2e00      	cmp	r6, #0
 802113c:	d140      	bne.n	80211c0 <_malloc_r+0xcc>
 802113e:	6823      	ldr	r3, [r4, #0]
 8021140:	4631      	mov	r1, r6
 8021142:	4638      	mov	r0, r7
 8021144:	eb04 0803 	add.w	r8, r4, r3
 8021148:	f000 fba0 	bl	802188c <_sbrk_r>
 802114c:	4580      	cmp	r8, r0
 802114e:	d13a      	bne.n	80211c6 <_malloc_r+0xd2>
 8021150:	6821      	ldr	r1, [r4, #0]
 8021152:	3503      	adds	r5, #3
 8021154:	1a6d      	subs	r5, r5, r1
 8021156:	f025 0503 	bic.w	r5, r5, #3
 802115a:	3508      	adds	r5, #8
 802115c:	2d0c      	cmp	r5, #12
 802115e:	bf38      	it	cc
 8021160:	250c      	movcc	r5, #12
 8021162:	4629      	mov	r1, r5
 8021164:	4638      	mov	r0, r7
 8021166:	f7ff ffa5 	bl	80210b4 <sbrk_aligned>
 802116a:	3001      	adds	r0, #1
 802116c:	d02b      	beq.n	80211c6 <_malloc_r+0xd2>
 802116e:	6823      	ldr	r3, [r4, #0]
 8021170:	442b      	add	r3, r5
 8021172:	6023      	str	r3, [r4, #0]
 8021174:	e00e      	b.n	8021194 <_malloc_r+0xa0>
 8021176:	6822      	ldr	r2, [r4, #0]
 8021178:	1b52      	subs	r2, r2, r5
 802117a:	d41e      	bmi.n	80211ba <_malloc_r+0xc6>
 802117c:	2a0b      	cmp	r2, #11
 802117e:	d916      	bls.n	80211ae <_malloc_r+0xba>
 8021180:	1961      	adds	r1, r4, r5
 8021182:	42a3      	cmp	r3, r4
 8021184:	6025      	str	r5, [r4, #0]
 8021186:	bf18      	it	ne
 8021188:	6059      	strne	r1, [r3, #4]
 802118a:	6863      	ldr	r3, [r4, #4]
 802118c:	bf08      	it	eq
 802118e:	6031      	streq	r1, [r6, #0]
 8021190:	5162      	str	r2, [r4, r5]
 8021192:	604b      	str	r3, [r1, #4]
 8021194:	4638      	mov	r0, r7
 8021196:	f104 060b 	add.w	r6, r4, #11
 802119a:	f000 fe93 	bl	8021ec4 <__malloc_unlock>
 802119e:	f026 0607 	bic.w	r6, r6, #7
 80211a2:	1d23      	adds	r3, r4, #4
 80211a4:	1af2      	subs	r2, r6, r3
 80211a6:	d0b6      	beq.n	8021116 <_malloc_r+0x22>
 80211a8:	1b9b      	subs	r3, r3, r6
 80211aa:	50a3      	str	r3, [r4, r2]
 80211ac:	e7b3      	b.n	8021116 <_malloc_r+0x22>
 80211ae:	6862      	ldr	r2, [r4, #4]
 80211b0:	42a3      	cmp	r3, r4
 80211b2:	bf0c      	ite	eq
 80211b4:	6032      	streq	r2, [r6, #0]
 80211b6:	605a      	strne	r2, [r3, #4]
 80211b8:	e7ec      	b.n	8021194 <_malloc_r+0xa0>
 80211ba:	4623      	mov	r3, r4
 80211bc:	6864      	ldr	r4, [r4, #4]
 80211be:	e7b2      	b.n	8021126 <_malloc_r+0x32>
 80211c0:	4634      	mov	r4, r6
 80211c2:	6876      	ldr	r6, [r6, #4]
 80211c4:	e7b9      	b.n	802113a <_malloc_r+0x46>
 80211c6:	230c      	movs	r3, #12
 80211c8:	603b      	str	r3, [r7, #0]
 80211ca:	4638      	mov	r0, r7
 80211cc:	f000 fe7a 	bl	8021ec4 <__malloc_unlock>
 80211d0:	e7a1      	b.n	8021116 <_malloc_r+0x22>
 80211d2:	6025      	str	r5, [r4, #0]
 80211d4:	e7de      	b.n	8021194 <_malloc_r+0xa0>
 80211d6:	bf00      	nop
 80211d8:	20015908 	.word	0x20015908

080211dc <__sfputc_r>:
 80211dc:	6893      	ldr	r3, [r2, #8]
 80211de:	3b01      	subs	r3, #1
 80211e0:	2b00      	cmp	r3, #0
 80211e2:	b410      	push	{r4}
 80211e4:	6093      	str	r3, [r2, #8]
 80211e6:	da08      	bge.n	80211fa <__sfputc_r+0x1e>
 80211e8:	6994      	ldr	r4, [r2, #24]
 80211ea:	42a3      	cmp	r3, r4
 80211ec:	db01      	blt.n	80211f2 <__sfputc_r+0x16>
 80211ee:	290a      	cmp	r1, #10
 80211f0:	d103      	bne.n	80211fa <__sfputc_r+0x1e>
 80211f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80211f6:	f000 bbe1 	b.w	80219bc <__swbuf_r>
 80211fa:	6813      	ldr	r3, [r2, #0]
 80211fc:	1c58      	adds	r0, r3, #1
 80211fe:	6010      	str	r0, [r2, #0]
 8021200:	7019      	strb	r1, [r3, #0]
 8021202:	4608      	mov	r0, r1
 8021204:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021208:	4770      	bx	lr

0802120a <__sfputs_r>:
 802120a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802120c:	4606      	mov	r6, r0
 802120e:	460f      	mov	r7, r1
 8021210:	4614      	mov	r4, r2
 8021212:	18d5      	adds	r5, r2, r3
 8021214:	42ac      	cmp	r4, r5
 8021216:	d101      	bne.n	802121c <__sfputs_r+0x12>
 8021218:	2000      	movs	r0, #0
 802121a:	e007      	b.n	802122c <__sfputs_r+0x22>
 802121c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021220:	463a      	mov	r2, r7
 8021222:	4630      	mov	r0, r6
 8021224:	f7ff ffda 	bl	80211dc <__sfputc_r>
 8021228:	1c43      	adds	r3, r0, #1
 802122a:	d1f3      	bne.n	8021214 <__sfputs_r+0xa>
 802122c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08021230 <_vfiprintf_r>:
 8021230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021234:	460d      	mov	r5, r1
 8021236:	b09d      	sub	sp, #116	; 0x74
 8021238:	4614      	mov	r4, r2
 802123a:	4698      	mov	r8, r3
 802123c:	4606      	mov	r6, r0
 802123e:	b118      	cbz	r0, 8021248 <_vfiprintf_r+0x18>
 8021240:	6983      	ldr	r3, [r0, #24]
 8021242:	b90b      	cbnz	r3, 8021248 <_vfiprintf_r+0x18>
 8021244:	f7ff fdec 	bl	8020e20 <__sinit>
 8021248:	4b89      	ldr	r3, [pc, #548]	; (8021470 <_vfiprintf_r+0x240>)
 802124a:	429d      	cmp	r5, r3
 802124c:	d11b      	bne.n	8021286 <_vfiprintf_r+0x56>
 802124e:	6875      	ldr	r5, [r6, #4]
 8021250:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021252:	07d9      	lsls	r1, r3, #31
 8021254:	d405      	bmi.n	8021262 <_vfiprintf_r+0x32>
 8021256:	89ab      	ldrh	r3, [r5, #12]
 8021258:	059a      	lsls	r2, r3, #22
 802125a:	d402      	bmi.n	8021262 <_vfiprintf_r+0x32>
 802125c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802125e:	f7ff feb4 	bl	8020fca <__retarget_lock_acquire_recursive>
 8021262:	89ab      	ldrh	r3, [r5, #12]
 8021264:	071b      	lsls	r3, r3, #28
 8021266:	d501      	bpl.n	802126c <_vfiprintf_r+0x3c>
 8021268:	692b      	ldr	r3, [r5, #16]
 802126a:	b9eb      	cbnz	r3, 80212a8 <_vfiprintf_r+0x78>
 802126c:	4629      	mov	r1, r5
 802126e:	4630      	mov	r0, r6
 8021270:	f000 fc08 	bl	8021a84 <__swsetup_r>
 8021274:	b1c0      	cbz	r0, 80212a8 <_vfiprintf_r+0x78>
 8021276:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021278:	07dc      	lsls	r4, r3, #31
 802127a:	d50e      	bpl.n	802129a <_vfiprintf_r+0x6a>
 802127c:	f04f 30ff 	mov.w	r0, #4294967295
 8021280:	b01d      	add	sp, #116	; 0x74
 8021282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021286:	4b7b      	ldr	r3, [pc, #492]	; (8021474 <_vfiprintf_r+0x244>)
 8021288:	429d      	cmp	r5, r3
 802128a:	d101      	bne.n	8021290 <_vfiprintf_r+0x60>
 802128c:	68b5      	ldr	r5, [r6, #8]
 802128e:	e7df      	b.n	8021250 <_vfiprintf_r+0x20>
 8021290:	4b79      	ldr	r3, [pc, #484]	; (8021478 <_vfiprintf_r+0x248>)
 8021292:	429d      	cmp	r5, r3
 8021294:	bf08      	it	eq
 8021296:	68f5      	ldreq	r5, [r6, #12]
 8021298:	e7da      	b.n	8021250 <_vfiprintf_r+0x20>
 802129a:	89ab      	ldrh	r3, [r5, #12]
 802129c:	0598      	lsls	r0, r3, #22
 802129e:	d4ed      	bmi.n	802127c <_vfiprintf_r+0x4c>
 80212a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80212a2:	f7ff fe94 	bl	8020fce <__retarget_lock_release_recursive>
 80212a6:	e7e9      	b.n	802127c <_vfiprintf_r+0x4c>
 80212a8:	2300      	movs	r3, #0
 80212aa:	9309      	str	r3, [sp, #36]	; 0x24
 80212ac:	2320      	movs	r3, #32
 80212ae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80212b2:	f8cd 800c 	str.w	r8, [sp, #12]
 80212b6:	2330      	movs	r3, #48	; 0x30
 80212b8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802147c <_vfiprintf_r+0x24c>
 80212bc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80212c0:	f04f 0901 	mov.w	r9, #1
 80212c4:	4623      	mov	r3, r4
 80212c6:	469a      	mov	sl, r3
 80212c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80212cc:	b10a      	cbz	r2, 80212d2 <_vfiprintf_r+0xa2>
 80212ce:	2a25      	cmp	r2, #37	; 0x25
 80212d0:	d1f9      	bne.n	80212c6 <_vfiprintf_r+0x96>
 80212d2:	ebba 0b04 	subs.w	fp, sl, r4
 80212d6:	d00b      	beq.n	80212f0 <_vfiprintf_r+0xc0>
 80212d8:	465b      	mov	r3, fp
 80212da:	4622      	mov	r2, r4
 80212dc:	4629      	mov	r1, r5
 80212de:	4630      	mov	r0, r6
 80212e0:	f7ff ff93 	bl	802120a <__sfputs_r>
 80212e4:	3001      	adds	r0, #1
 80212e6:	f000 80aa 	beq.w	802143e <_vfiprintf_r+0x20e>
 80212ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80212ec:	445a      	add	r2, fp
 80212ee:	9209      	str	r2, [sp, #36]	; 0x24
 80212f0:	f89a 3000 	ldrb.w	r3, [sl]
 80212f4:	2b00      	cmp	r3, #0
 80212f6:	f000 80a2 	beq.w	802143e <_vfiprintf_r+0x20e>
 80212fa:	2300      	movs	r3, #0
 80212fc:	f04f 32ff 	mov.w	r2, #4294967295
 8021300:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8021304:	f10a 0a01 	add.w	sl, sl, #1
 8021308:	9304      	str	r3, [sp, #16]
 802130a:	9307      	str	r3, [sp, #28]
 802130c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8021310:	931a      	str	r3, [sp, #104]	; 0x68
 8021312:	4654      	mov	r4, sl
 8021314:	2205      	movs	r2, #5
 8021316:	f814 1b01 	ldrb.w	r1, [r4], #1
 802131a:	4858      	ldr	r0, [pc, #352]	; (802147c <_vfiprintf_r+0x24c>)
 802131c:	f7de ff68 	bl	80001f0 <memchr>
 8021320:	9a04      	ldr	r2, [sp, #16]
 8021322:	b9d8      	cbnz	r0, 802135c <_vfiprintf_r+0x12c>
 8021324:	06d1      	lsls	r1, r2, #27
 8021326:	bf44      	itt	mi
 8021328:	2320      	movmi	r3, #32
 802132a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802132e:	0713      	lsls	r3, r2, #28
 8021330:	bf44      	itt	mi
 8021332:	232b      	movmi	r3, #43	; 0x2b
 8021334:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8021338:	f89a 3000 	ldrb.w	r3, [sl]
 802133c:	2b2a      	cmp	r3, #42	; 0x2a
 802133e:	d015      	beq.n	802136c <_vfiprintf_r+0x13c>
 8021340:	9a07      	ldr	r2, [sp, #28]
 8021342:	4654      	mov	r4, sl
 8021344:	2000      	movs	r0, #0
 8021346:	f04f 0c0a 	mov.w	ip, #10
 802134a:	4621      	mov	r1, r4
 802134c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021350:	3b30      	subs	r3, #48	; 0x30
 8021352:	2b09      	cmp	r3, #9
 8021354:	d94e      	bls.n	80213f4 <_vfiprintf_r+0x1c4>
 8021356:	b1b0      	cbz	r0, 8021386 <_vfiprintf_r+0x156>
 8021358:	9207      	str	r2, [sp, #28]
 802135a:	e014      	b.n	8021386 <_vfiprintf_r+0x156>
 802135c:	eba0 0308 	sub.w	r3, r0, r8
 8021360:	fa09 f303 	lsl.w	r3, r9, r3
 8021364:	4313      	orrs	r3, r2
 8021366:	9304      	str	r3, [sp, #16]
 8021368:	46a2      	mov	sl, r4
 802136a:	e7d2      	b.n	8021312 <_vfiprintf_r+0xe2>
 802136c:	9b03      	ldr	r3, [sp, #12]
 802136e:	1d19      	adds	r1, r3, #4
 8021370:	681b      	ldr	r3, [r3, #0]
 8021372:	9103      	str	r1, [sp, #12]
 8021374:	2b00      	cmp	r3, #0
 8021376:	bfbb      	ittet	lt
 8021378:	425b      	neglt	r3, r3
 802137a:	f042 0202 	orrlt.w	r2, r2, #2
 802137e:	9307      	strge	r3, [sp, #28]
 8021380:	9307      	strlt	r3, [sp, #28]
 8021382:	bfb8      	it	lt
 8021384:	9204      	strlt	r2, [sp, #16]
 8021386:	7823      	ldrb	r3, [r4, #0]
 8021388:	2b2e      	cmp	r3, #46	; 0x2e
 802138a:	d10c      	bne.n	80213a6 <_vfiprintf_r+0x176>
 802138c:	7863      	ldrb	r3, [r4, #1]
 802138e:	2b2a      	cmp	r3, #42	; 0x2a
 8021390:	d135      	bne.n	80213fe <_vfiprintf_r+0x1ce>
 8021392:	9b03      	ldr	r3, [sp, #12]
 8021394:	1d1a      	adds	r2, r3, #4
 8021396:	681b      	ldr	r3, [r3, #0]
 8021398:	9203      	str	r2, [sp, #12]
 802139a:	2b00      	cmp	r3, #0
 802139c:	bfb8      	it	lt
 802139e:	f04f 33ff 	movlt.w	r3, #4294967295
 80213a2:	3402      	adds	r4, #2
 80213a4:	9305      	str	r3, [sp, #20]
 80213a6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 802148c <_vfiprintf_r+0x25c>
 80213aa:	7821      	ldrb	r1, [r4, #0]
 80213ac:	2203      	movs	r2, #3
 80213ae:	4650      	mov	r0, sl
 80213b0:	f7de ff1e 	bl	80001f0 <memchr>
 80213b4:	b140      	cbz	r0, 80213c8 <_vfiprintf_r+0x198>
 80213b6:	2340      	movs	r3, #64	; 0x40
 80213b8:	eba0 000a 	sub.w	r0, r0, sl
 80213bc:	fa03 f000 	lsl.w	r0, r3, r0
 80213c0:	9b04      	ldr	r3, [sp, #16]
 80213c2:	4303      	orrs	r3, r0
 80213c4:	3401      	adds	r4, #1
 80213c6:	9304      	str	r3, [sp, #16]
 80213c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80213cc:	482c      	ldr	r0, [pc, #176]	; (8021480 <_vfiprintf_r+0x250>)
 80213ce:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80213d2:	2206      	movs	r2, #6
 80213d4:	f7de ff0c 	bl	80001f0 <memchr>
 80213d8:	2800      	cmp	r0, #0
 80213da:	d03f      	beq.n	802145c <_vfiprintf_r+0x22c>
 80213dc:	4b29      	ldr	r3, [pc, #164]	; (8021484 <_vfiprintf_r+0x254>)
 80213de:	bb1b      	cbnz	r3, 8021428 <_vfiprintf_r+0x1f8>
 80213e0:	9b03      	ldr	r3, [sp, #12]
 80213e2:	3307      	adds	r3, #7
 80213e4:	f023 0307 	bic.w	r3, r3, #7
 80213e8:	3308      	adds	r3, #8
 80213ea:	9303      	str	r3, [sp, #12]
 80213ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80213ee:	443b      	add	r3, r7
 80213f0:	9309      	str	r3, [sp, #36]	; 0x24
 80213f2:	e767      	b.n	80212c4 <_vfiprintf_r+0x94>
 80213f4:	fb0c 3202 	mla	r2, ip, r2, r3
 80213f8:	460c      	mov	r4, r1
 80213fa:	2001      	movs	r0, #1
 80213fc:	e7a5      	b.n	802134a <_vfiprintf_r+0x11a>
 80213fe:	2300      	movs	r3, #0
 8021400:	3401      	adds	r4, #1
 8021402:	9305      	str	r3, [sp, #20]
 8021404:	4619      	mov	r1, r3
 8021406:	f04f 0c0a 	mov.w	ip, #10
 802140a:	4620      	mov	r0, r4
 802140c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8021410:	3a30      	subs	r2, #48	; 0x30
 8021412:	2a09      	cmp	r2, #9
 8021414:	d903      	bls.n	802141e <_vfiprintf_r+0x1ee>
 8021416:	2b00      	cmp	r3, #0
 8021418:	d0c5      	beq.n	80213a6 <_vfiprintf_r+0x176>
 802141a:	9105      	str	r1, [sp, #20]
 802141c:	e7c3      	b.n	80213a6 <_vfiprintf_r+0x176>
 802141e:	fb0c 2101 	mla	r1, ip, r1, r2
 8021422:	4604      	mov	r4, r0
 8021424:	2301      	movs	r3, #1
 8021426:	e7f0      	b.n	802140a <_vfiprintf_r+0x1da>
 8021428:	ab03      	add	r3, sp, #12
 802142a:	9300      	str	r3, [sp, #0]
 802142c:	462a      	mov	r2, r5
 802142e:	4b16      	ldr	r3, [pc, #88]	; (8021488 <_vfiprintf_r+0x258>)
 8021430:	a904      	add	r1, sp, #16
 8021432:	4630      	mov	r0, r6
 8021434:	f3af 8000 	nop.w
 8021438:	4607      	mov	r7, r0
 802143a:	1c78      	adds	r0, r7, #1
 802143c:	d1d6      	bne.n	80213ec <_vfiprintf_r+0x1bc>
 802143e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021440:	07d9      	lsls	r1, r3, #31
 8021442:	d405      	bmi.n	8021450 <_vfiprintf_r+0x220>
 8021444:	89ab      	ldrh	r3, [r5, #12]
 8021446:	059a      	lsls	r2, r3, #22
 8021448:	d402      	bmi.n	8021450 <_vfiprintf_r+0x220>
 802144a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802144c:	f7ff fdbf 	bl	8020fce <__retarget_lock_release_recursive>
 8021450:	89ab      	ldrh	r3, [r5, #12]
 8021452:	065b      	lsls	r3, r3, #25
 8021454:	f53f af12 	bmi.w	802127c <_vfiprintf_r+0x4c>
 8021458:	9809      	ldr	r0, [sp, #36]	; 0x24
 802145a:	e711      	b.n	8021280 <_vfiprintf_r+0x50>
 802145c:	ab03      	add	r3, sp, #12
 802145e:	9300      	str	r3, [sp, #0]
 8021460:	462a      	mov	r2, r5
 8021462:	4b09      	ldr	r3, [pc, #36]	; (8021488 <_vfiprintf_r+0x258>)
 8021464:	a904      	add	r1, sp, #16
 8021466:	4630      	mov	r0, r6
 8021468:	f000 f880 	bl	802156c <_printf_i>
 802146c:	e7e4      	b.n	8021438 <_vfiprintf_r+0x208>
 802146e:	bf00      	nop
 8021470:	08024c00 	.word	0x08024c00
 8021474:	08024c20 	.word	0x08024c20
 8021478:	08024be0 	.word	0x08024be0
 802147c:	08024c44 	.word	0x08024c44
 8021480:	08024c4e 	.word	0x08024c4e
 8021484:	00000000 	.word	0x00000000
 8021488:	0802120b 	.word	0x0802120b
 802148c:	08024c4a 	.word	0x08024c4a

08021490 <_printf_common>:
 8021490:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021494:	4616      	mov	r6, r2
 8021496:	4699      	mov	r9, r3
 8021498:	688a      	ldr	r2, [r1, #8]
 802149a:	690b      	ldr	r3, [r1, #16]
 802149c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80214a0:	4293      	cmp	r3, r2
 80214a2:	bfb8      	it	lt
 80214a4:	4613      	movlt	r3, r2
 80214a6:	6033      	str	r3, [r6, #0]
 80214a8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80214ac:	4607      	mov	r7, r0
 80214ae:	460c      	mov	r4, r1
 80214b0:	b10a      	cbz	r2, 80214b6 <_printf_common+0x26>
 80214b2:	3301      	adds	r3, #1
 80214b4:	6033      	str	r3, [r6, #0]
 80214b6:	6823      	ldr	r3, [r4, #0]
 80214b8:	0699      	lsls	r1, r3, #26
 80214ba:	bf42      	ittt	mi
 80214bc:	6833      	ldrmi	r3, [r6, #0]
 80214be:	3302      	addmi	r3, #2
 80214c0:	6033      	strmi	r3, [r6, #0]
 80214c2:	6825      	ldr	r5, [r4, #0]
 80214c4:	f015 0506 	ands.w	r5, r5, #6
 80214c8:	d106      	bne.n	80214d8 <_printf_common+0x48>
 80214ca:	f104 0a19 	add.w	sl, r4, #25
 80214ce:	68e3      	ldr	r3, [r4, #12]
 80214d0:	6832      	ldr	r2, [r6, #0]
 80214d2:	1a9b      	subs	r3, r3, r2
 80214d4:	42ab      	cmp	r3, r5
 80214d6:	dc26      	bgt.n	8021526 <_printf_common+0x96>
 80214d8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80214dc:	1e13      	subs	r3, r2, #0
 80214de:	6822      	ldr	r2, [r4, #0]
 80214e0:	bf18      	it	ne
 80214e2:	2301      	movne	r3, #1
 80214e4:	0692      	lsls	r2, r2, #26
 80214e6:	d42b      	bmi.n	8021540 <_printf_common+0xb0>
 80214e8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80214ec:	4649      	mov	r1, r9
 80214ee:	4638      	mov	r0, r7
 80214f0:	47c0      	blx	r8
 80214f2:	3001      	adds	r0, #1
 80214f4:	d01e      	beq.n	8021534 <_printf_common+0xa4>
 80214f6:	6823      	ldr	r3, [r4, #0]
 80214f8:	68e5      	ldr	r5, [r4, #12]
 80214fa:	6832      	ldr	r2, [r6, #0]
 80214fc:	f003 0306 	and.w	r3, r3, #6
 8021500:	2b04      	cmp	r3, #4
 8021502:	bf08      	it	eq
 8021504:	1aad      	subeq	r5, r5, r2
 8021506:	68a3      	ldr	r3, [r4, #8]
 8021508:	6922      	ldr	r2, [r4, #16]
 802150a:	bf0c      	ite	eq
 802150c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021510:	2500      	movne	r5, #0
 8021512:	4293      	cmp	r3, r2
 8021514:	bfc4      	itt	gt
 8021516:	1a9b      	subgt	r3, r3, r2
 8021518:	18ed      	addgt	r5, r5, r3
 802151a:	2600      	movs	r6, #0
 802151c:	341a      	adds	r4, #26
 802151e:	42b5      	cmp	r5, r6
 8021520:	d11a      	bne.n	8021558 <_printf_common+0xc8>
 8021522:	2000      	movs	r0, #0
 8021524:	e008      	b.n	8021538 <_printf_common+0xa8>
 8021526:	2301      	movs	r3, #1
 8021528:	4652      	mov	r2, sl
 802152a:	4649      	mov	r1, r9
 802152c:	4638      	mov	r0, r7
 802152e:	47c0      	blx	r8
 8021530:	3001      	adds	r0, #1
 8021532:	d103      	bne.n	802153c <_printf_common+0xac>
 8021534:	f04f 30ff 	mov.w	r0, #4294967295
 8021538:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802153c:	3501      	adds	r5, #1
 802153e:	e7c6      	b.n	80214ce <_printf_common+0x3e>
 8021540:	18e1      	adds	r1, r4, r3
 8021542:	1c5a      	adds	r2, r3, #1
 8021544:	2030      	movs	r0, #48	; 0x30
 8021546:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802154a:	4422      	add	r2, r4
 802154c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021550:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021554:	3302      	adds	r3, #2
 8021556:	e7c7      	b.n	80214e8 <_printf_common+0x58>
 8021558:	2301      	movs	r3, #1
 802155a:	4622      	mov	r2, r4
 802155c:	4649      	mov	r1, r9
 802155e:	4638      	mov	r0, r7
 8021560:	47c0      	blx	r8
 8021562:	3001      	adds	r0, #1
 8021564:	d0e6      	beq.n	8021534 <_printf_common+0xa4>
 8021566:	3601      	adds	r6, #1
 8021568:	e7d9      	b.n	802151e <_printf_common+0x8e>
	...

0802156c <_printf_i>:
 802156c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8021570:	7e0f      	ldrb	r7, [r1, #24]
 8021572:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021574:	2f78      	cmp	r7, #120	; 0x78
 8021576:	4691      	mov	r9, r2
 8021578:	4680      	mov	r8, r0
 802157a:	460c      	mov	r4, r1
 802157c:	469a      	mov	sl, r3
 802157e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8021582:	d807      	bhi.n	8021594 <_printf_i+0x28>
 8021584:	2f62      	cmp	r7, #98	; 0x62
 8021586:	d80a      	bhi.n	802159e <_printf_i+0x32>
 8021588:	2f00      	cmp	r7, #0
 802158a:	f000 80d8 	beq.w	802173e <_printf_i+0x1d2>
 802158e:	2f58      	cmp	r7, #88	; 0x58
 8021590:	f000 80a3 	beq.w	80216da <_printf_i+0x16e>
 8021594:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021598:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802159c:	e03a      	b.n	8021614 <_printf_i+0xa8>
 802159e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80215a2:	2b15      	cmp	r3, #21
 80215a4:	d8f6      	bhi.n	8021594 <_printf_i+0x28>
 80215a6:	a101      	add	r1, pc, #4	; (adr r1, 80215ac <_printf_i+0x40>)
 80215a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80215ac:	08021605 	.word	0x08021605
 80215b0:	08021619 	.word	0x08021619
 80215b4:	08021595 	.word	0x08021595
 80215b8:	08021595 	.word	0x08021595
 80215bc:	08021595 	.word	0x08021595
 80215c0:	08021595 	.word	0x08021595
 80215c4:	08021619 	.word	0x08021619
 80215c8:	08021595 	.word	0x08021595
 80215cc:	08021595 	.word	0x08021595
 80215d0:	08021595 	.word	0x08021595
 80215d4:	08021595 	.word	0x08021595
 80215d8:	08021725 	.word	0x08021725
 80215dc:	08021649 	.word	0x08021649
 80215e0:	08021707 	.word	0x08021707
 80215e4:	08021595 	.word	0x08021595
 80215e8:	08021595 	.word	0x08021595
 80215ec:	08021747 	.word	0x08021747
 80215f0:	08021595 	.word	0x08021595
 80215f4:	08021649 	.word	0x08021649
 80215f8:	08021595 	.word	0x08021595
 80215fc:	08021595 	.word	0x08021595
 8021600:	0802170f 	.word	0x0802170f
 8021604:	682b      	ldr	r3, [r5, #0]
 8021606:	1d1a      	adds	r2, r3, #4
 8021608:	681b      	ldr	r3, [r3, #0]
 802160a:	602a      	str	r2, [r5, #0]
 802160c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021610:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021614:	2301      	movs	r3, #1
 8021616:	e0a3      	b.n	8021760 <_printf_i+0x1f4>
 8021618:	6820      	ldr	r0, [r4, #0]
 802161a:	6829      	ldr	r1, [r5, #0]
 802161c:	0606      	lsls	r6, r0, #24
 802161e:	f101 0304 	add.w	r3, r1, #4
 8021622:	d50a      	bpl.n	802163a <_printf_i+0xce>
 8021624:	680e      	ldr	r6, [r1, #0]
 8021626:	602b      	str	r3, [r5, #0]
 8021628:	2e00      	cmp	r6, #0
 802162a:	da03      	bge.n	8021634 <_printf_i+0xc8>
 802162c:	232d      	movs	r3, #45	; 0x2d
 802162e:	4276      	negs	r6, r6
 8021630:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021634:	485e      	ldr	r0, [pc, #376]	; (80217b0 <_printf_i+0x244>)
 8021636:	230a      	movs	r3, #10
 8021638:	e019      	b.n	802166e <_printf_i+0x102>
 802163a:	680e      	ldr	r6, [r1, #0]
 802163c:	602b      	str	r3, [r5, #0]
 802163e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021642:	bf18      	it	ne
 8021644:	b236      	sxthne	r6, r6
 8021646:	e7ef      	b.n	8021628 <_printf_i+0xbc>
 8021648:	682b      	ldr	r3, [r5, #0]
 802164a:	6820      	ldr	r0, [r4, #0]
 802164c:	1d19      	adds	r1, r3, #4
 802164e:	6029      	str	r1, [r5, #0]
 8021650:	0601      	lsls	r1, r0, #24
 8021652:	d501      	bpl.n	8021658 <_printf_i+0xec>
 8021654:	681e      	ldr	r6, [r3, #0]
 8021656:	e002      	b.n	802165e <_printf_i+0xf2>
 8021658:	0646      	lsls	r6, r0, #25
 802165a:	d5fb      	bpl.n	8021654 <_printf_i+0xe8>
 802165c:	881e      	ldrh	r6, [r3, #0]
 802165e:	4854      	ldr	r0, [pc, #336]	; (80217b0 <_printf_i+0x244>)
 8021660:	2f6f      	cmp	r7, #111	; 0x6f
 8021662:	bf0c      	ite	eq
 8021664:	2308      	moveq	r3, #8
 8021666:	230a      	movne	r3, #10
 8021668:	2100      	movs	r1, #0
 802166a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802166e:	6865      	ldr	r5, [r4, #4]
 8021670:	60a5      	str	r5, [r4, #8]
 8021672:	2d00      	cmp	r5, #0
 8021674:	bfa2      	ittt	ge
 8021676:	6821      	ldrge	r1, [r4, #0]
 8021678:	f021 0104 	bicge.w	r1, r1, #4
 802167c:	6021      	strge	r1, [r4, #0]
 802167e:	b90e      	cbnz	r6, 8021684 <_printf_i+0x118>
 8021680:	2d00      	cmp	r5, #0
 8021682:	d04d      	beq.n	8021720 <_printf_i+0x1b4>
 8021684:	4615      	mov	r5, r2
 8021686:	fbb6 f1f3 	udiv	r1, r6, r3
 802168a:	fb03 6711 	mls	r7, r3, r1, r6
 802168e:	5dc7      	ldrb	r7, [r0, r7]
 8021690:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8021694:	4637      	mov	r7, r6
 8021696:	42bb      	cmp	r3, r7
 8021698:	460e      	mov	r6, r1
 802169a:	d9f4      	bls.n	8021686 <_printf_i+0x11a>
 802169c:	2b08      	cmp	r3, #8
 802169e:	d10b      	bne.n	80216b8 <_printf_i+0x14c>
 80216a0:	6823      	ldr	r3, [r4, #0]
 80216a2:	07de      	lsls	r6, r3, #31
 80216a4:	d508      	bpl.n	80216b8 <_printf_i+0x14c>
 80216a6:	6923      	ldr	r3, [r4, #16]
 80216a8:	6861      	ldr	r1, [r4, #4]
 80216aa:	4299      	cmp	r1, r3
 80216ac:	bfde      	ittt	le
 80216ae:	2330      	movle	r3, #48	; 0x30
 80216b0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80216b4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80216b8:	1b52      	subs	r2, r2, r5
 80216ba:	6122      	str	r2, [r4, #16]
 80216bc:	f8cd a000 	str.w	sl, [sp]
 80216c0:	464b      	mov	r3, r9
 80216c2:	aa03      	add	r2, sp, #12
 80216c4:	4621      	mov	r1, r4
 80216c6:	4640      	mov	r0, r8
 80216c8:	f7ff fee2 	bl	8021490 <_printf_common>
 80216cc:	3001      	adds	r0, #1
 80216ce:	d14c      	bne.n	802176a <_printf_i+0x1fe>
 80216d0:	f04f 30ff 	mov.w	r0, #4294967295
 80216d4:	b004      	add	sp, #16
 80216d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80216da:	4835      	ldr	r0, [pc, #212]	; (80217b0 <_printf_i+0x244>)
 80216dc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80216e0:	6829      	ldr	r1, [r5, #0]
 80216e2:	6823      	ldr	r3, [r4, #0]
 80216e4:	f851 6b04 	ldr.w	r6, [r1], #4
 80216e8:	6029      	str	r1, [r5, #0]
 80216ea:	061d      	lsls	r5, r3, #24
 80216ec:	d514      	bpl.n	8021718 <_printf_i+0x1ac>
 80216ee:	07df      	lsls	r7, r3, #31
 80216f0:	bf44      	itt	mi
 80216f2:	f043 0320 	orrmi.w	r3, r3, #32
 80216f6:	6023      	strmi	r3, [r4, #0]
 80216f8:	b91e      	cbnz	r6, 8021702 <_printf_i+0x196>
 80216fa:	6823      	ldr	r3, [r4, #0]
 80216fc:	f023 0320 	bic.w	r3, r3, #32
 8021700:	6023      	str	r3, [r4, #0]
 8021702:	2310      	movs	r3, #16
 8021704:	e7b0      	b.n	8021668 <_printf_i+0xfc>
 8021706:	6823      	ldr	r3, [r4, #0]
 8021708:	f043 0320 	orr.w	r3, r3, #32
 802170c:	6023      	str	r3, [r4, #0]
 802170e:	2378      	movs	r3, #120	; 0x78
 8021710:	4828      	ldr	r0, [pc, #160]	; (80217b4 <_printf_i+0x248>)
 8021712:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8021716:	e7e3      	b.n	80216e0 <_printf_i+0x174>
 8021718:	0659      	lsls	r1, r3, #25
 802171a:	bf48      	it	mi
 802171c:	b2b6      	uxthmi	r6, r6
 802171e:	e7e6      	b.n	80216ee <_printf_i+0x182>
 8021720:	4615      	mov	r5, r2
 8021722:	e7bb      	b.n	802169c <_printf_i+0x130>
 8021724:	682b      	ldr	r3, [r5, #0]
 8021726:	6826      	ldr	r6, [r4, #0]
 8021728:	6961      	ldr	r1, [r4, #20]
 802172a:	1d18      	adds	r0, r3, #4
 802172c:	6028      	str	r0, [r5, #0]
 802172e:	0635      	lsls	r5, r6, #24
 8021730:	681b      	ldr	r3, [r3, #0]
 8021732:	d501      	bpl.n	8021738 <_printf_i+0x1cc>
 8021734:	6019      	str	r1, [r3, #0]
 8021736:	e002      	b.n	802173e <_printf_i+0x1d2>
 8021738:	0670      	lsls	r0, r6, #25
 802173a:	d5fb      	bpl.n	8021734 <_printf_i+0x1c8>
 802173c:	8019      	strh	r1, [r3, #0]
 802173e:	2300      	movs	r3, #0
 8021740:	6123      	str	r3, [r4, #16]
 8021742:	4615      	mov	r5, r2
 8021744:	e7ba      	b.n	80216bc <_printf_i+0x150>
 8021746:	682b      	ldr	r3, [r5, #0]
 8021748:	1d1a      	adds	r2, r3, #4
 802174a:	602a      	str	r2, [r5, #0]
 802174c:	681d      	ldr	r5, [r3, #0]
 802174e:	6862      	ldr	r2, [r4, #4]
 8021750:	2100      	movs	r1, #0
 8021752:	4628      	mov	r0, r5
 8021754:	f7de fd4c 	bl	80001f0 <memchr>
 8021758:	b108      	cbz	r0, 802175e <_printf_i+0x1f2>
 802175a:	1b40      	subs	r0, r0, r5
 802175c:	6060      	str	r0, [r4, #4]
 802175e:	6863      	ldr	r3, [r4, #4]
 8021760:	6123      	str	r3, [r4, #16]
 8021762:	2300      	movs	r3, #0
 8021764:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021768:	e7a8      	b.n	80216bc <_printf_i+0x150>
 802176a:	6923      	ldr	r3, [r4, #16]
 802176c:	462a      	mov	r2, r5
 802176e:	4649      	mov	r1, r9
 8021770:	4640      	mov	r0, r8
 8021772:	47d0      	blx	sl
 8021774:	3001      	adds	r0, #1
 8021776:	d0ab      	beq.n	80216d0 <_printf_i+0x164>
 8021778:	6823      	ldr	r3, [r4, #0]
 802177a:	079b      	lsls	r3, r3, #30
 802177c:	d413      	bmi.n	80217a6 <_printf_i+0x23a>
 802177e:	68e0      	ldr	r0, [r4, #12]
 8021780:	9b03      	ldr	r3, [sp, #12]
 8021782:	4298      	cmp	r0, r3
 8021784:	bfb8      	it	lt
 8021786:	4618      	movlt	r0, r3
 8021788:	e7a4      	b.n	80216d4 <_printf_i+0x168>
 802178a:	2301      	movs	r3, #1
 802178c:	4632      	mov	r2, r6
 802178e:	4649      	mov	r1, r9
 8021790:	4640      	mov	r0, r8
 8021792:	47d0      	blx	sl
 8021794:	3001      	adds	r0, #1
 8021796:	d09b      	beq.n	80216d0 <_printf_i+0x164>
 8021798:	3501      	adds	r5, #1
 802179a:	68e3      	ldr	r3, [r4, #12]
 802179c:	9903      	ldr	r1, [sp, #12]
 802179e:	1a5b      	subs	r3, r3, r1
 80217a0:	42ab      	cmp	r3, r5
 80217a2:	dcf2      	bgt.n	802178a <_printf_i+0x21e>
 80217a4:	e7eb      	b.n	802177e <_printf_i+0x212>
 80217a6:	2500      	movs	r5, #0
 80217a8:	f104 0619 	add.w	r6, r4, #25
 80217ac:	e7f5      	b.n	802179a <_printf_i+0x22e>
 80217ae:	bf00      	nop
 80217b0:	08024c55 	.word	0x08024c55
 80217b4:	08024c66 	.word	0x08024c66

080217b8 <cleanup_glue>:
 80217b8:	b538      	push	{r3, r4, r5, lr}
 80217ba:	460c      	mov	r4, r1
 80217bc:	6809      	ldr	r1, [r1, #0]
 80217be:	4605      	mov	r5, r0
 80217c0:	b109      	cbz	r1, 80217c6 <cleanup_glue+0xe>
 80217c2:	f7ff fff9 	bl	80217b8 <cleanup_glue>
 80217c6:	4621      	mov	r1, r4
 80217c8:	4628      	mov	r0, r5
 80217ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80217ce:	f7ff bc25 	b.w	802101c <_free_r>
	...

080217d4 <_reclaim_reent>:
 80217d4:	4b2c      	ldr	r3, [pc, #176]	; (8021888 <_reclaim_reent+0xb4>)
 80217d6:	681b      	ldr	r3, [r3, #0]
 80217d8:	4283      	cmp	r3, r0
 80217da:	b570      	push	{r4, r5, r6, lr}
 80217dc:	4604      	mov	r4, r0
 80217de:	d051      	beq.n	8021884 <_reclaim_reent+0xb0>
 80217e0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80217e2:	b143      	cbz	r3, 80217f6 <_reclaim_reent+0x22>
 80217e4:	68db      	ldr	r3, [r3, #12]
 80217e6:	2b00      	cmp	r3, #0
 80217e8:	d14a      	bne.n	8021880 <_reclaim_reent+0xac>
 80217ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80217ec:	6819      	ldr	r1, [r3, #0]
 80217ee:	b111      	cbz	r1, 80217f6 <_reclaim_reent+0x22>
 80217f0:	4620      	mov	r0, r4
 80217f2:	f7ff fc13 	bl	802101c <_free_r>
 80217f6:	6961      	ldr	r1, [r4, #20]
 80217f8:	b111      	cbz	r1, 8021800 <_reclaim_reent+0x2c>
 80217fa:	4620      	mov	r0, r4
 80217fc:	f7ff fc0e 	bl	802101c <_free_r>
 8021800:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8021802:	b111      	cbz	r1, 802180a <_reclaim_reent+0x36>
 8021804:	4620      	mov	r0, r4
 8021806:	f7ff fc09 	bl	802101c <_free_r>
 802180a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802180c:	b111      	cbz	r1, 8021814 <_reclaim_reent+0x40>
 802180e:	4620      	mov	r0, r4
 8021810:	f7ff fc04 	bl	802101c <_free_r>
 8021814:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021816:	b111      	cbz	r1, 802181e <_reclaim_reent+0x4a>
 8021818:	4620      	mov	r0, r4
 802181a:	f7ff fbff 	bl	802101c <_free_r>
 802181e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8021820:	b111      	cbz	r1, 8021828 <_reclaim_reent+0x54>
 8021822:	4620      	mov	r0, r4
 8021824:	f7ff fbfa 	bl	802101c <_free_r>
 8021828:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802182a:	b111      	cbz	r1, 8021832 <_reclaim_reent+0x5e>
 802182c:	4620      	mov	r0, r4
 802182e:	f7ff fbf5 	bl	802101c <_free_r>
 8021832:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021834:	b111      	cbz	r1, 802183c <_reclaim_reent+0x68>
 8021836:	4620      	mov	r0, r4
 8021838:	f7ff fbf0 	bl	802101c <_free_r>
 802183c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802183e:	b111      	cbz	r1, 8021846 <_reclaim_reent+0x72>
 8021840:	4620      	mov	r0, r4
 8021842:	f7ff fbeb 	bl	802101c <_free_r>
 8021846:	69a3      	ldr	r3, [r4, #24]
 8021848:	b1e3      	cbz	r3, 8021884 <_reclaim_reent+0xb0>
 802184a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802184c:	4620      	mov	r0, r4
 802184e:	4798      	blx	r3
 8021850:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8021852:	b1b9      	cbz	r1, 8021884 <_reclaim_reent+0xb0>
 8021854:	4620      	mov	r0, r4
 8021856:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802185a:	f7ff bfad 	b.w	80217b8 <cleanup_glue>
 802185e:	5949      	ldr	r1, [r1, r5]
 8021860:	b941      	cbnz	r1, 8021874 <_reclaim_reent+0xa0>
 8021862:	3504      	adds	r5, #4
 8021864:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021866:	2d80      	cmp	r5, #128	; 0x80
 8021868:	68d9      	ldr	r1, [r3, #12]
 802186a:	d1f8      	bne.n	802185e <_reclaim_reent+0x8a>
 802186c:	4620      	mov	r0, r4
 802186e:	f7ff fbd5 	bl	802101c <_free_r>
 8021872:	e7ba      	b.n	80217ea <_reclaim_reent+0x16>
 8021874:	680e      	ldr	r6, [r1, #0]
 8021876:	4620      	mov	r0, r4
 8021878:	f7ff fbd0 	bl	802101c <_free_r>
 802187c:	4631      	mov	r1, r6
 802187e:	e7ef      	b.n	8021860 <_reclaim_reent+0x8c>
 8021880:	2500      	movs	r5, #0
 8021882:	e7ef      	b.n	8021864 <_reclaim_reent+0x90>
 8021884:	bd70      	pop	{r4, r5, r6, pc}
 8021886:	bf00      	nop
 8021888:	20000104 	.word	0x20000104

0802188c <_sbrk_r>:
 802188c:	b538      	push	{r3, r4, r5, lr}
 802188e:	4d06      	ldr	r5, [pc, #24]	; (80218a8 <_sbrk_r+0x1c>)
 8021890:	2300      	movs	r3, #0
 8021892:	4604      	mov	r4, r0
 8021894:	4608      	mov	r0, r1
 8021896:	602b      	str	r3, [r5, #0]
 8021898:	f7e0 feaa 	bl	80025f0 <_sbrk>
 802189c:	1c43      	adds	r3, r0, #1
 802189e:	d102      	bne.n	80218a6 <_sbrk_r+0x1a>
 80218a0:	682b      	ldr	r3, [r5, #0]
 80218a2:	b103      	cbz	r3, 80218a6 <_sbrk_r+0x1a>
 80218a4:	6023      	str	r3, [r4, #0]
 80218a6:	bd38      	pop	{r3, r4, r5, pc}
 80218a8:	20015a18 	.word	0x20015a18

080218ac <_raise_r>:
 80218ac:	291f      	cmp	r1, #31
 80218ae:	b538      	push	{r3, r4, r5, lr}
 80218b0:	4604      	mov	r4, r0
 80218b2:	460d      	mov	r5, r1
 80218b4:	d904      	bls.n	80218c0 <_raise_r+0x14>
 80218b6:	2316      	movs	r3, #22
 80218b8:	6003      	str	r3, [r0, #0]
 80218ba:	f04f 30ff 	mov.w	r0, #4294967295
 80218be:	bd38      	pop	{r3, r4, r5, pc}
 80218c0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80218c2:	b112      	cbz	r2, 80218ca <_raise_r+0x1e>
 80218c4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80218c8:	b94b      	cbnz	r3, 80218de <_raise_r+0x32>
 80218ca:	4620      	mov	r0, r4
 80218cc:	f000 f830 	bl	8021930 <_getpid_r>
 80218d0:	462a      	mov	r2, r5
 80218d2:	4601      	mov	r1, r0
 80218d4:	4620      	mov	r0, r4
 80218d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80218da:	f000 b817 	b.w	802190c <_kill_r>
 80218de:	2b01      	cmp	r3, #1
 80218e0:	d00a      	beq.n	80218f8 <_raise_r+0x4c>
 80218e2:	1c59      	adds	r1, r3, #1
 80218e4:	d103      	bne.n	80218ee <_raise_r+0x42>
 80218e6:	2316      	movs	r3, #22
 80218e8:	6003      	str	r3, [r0, #0]
 80218ea:	2001      	movs	r0, #1
 80218ec:	e7e7      	b.n	80218be <_raise_r+0x12>
 80218ee:	2400      	movs	r4, #0
 80218f0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80218f4:	4628      	mov	r0, r5
 80218f6:	4798      	blx	r3
 80218f8:	2000      	movs	r0, #0
 80218fa:	e7e0      	b.n	80218be <_raise_r+0x12>

080218fc <raise>:
 80218fc:	4b02      	ldr	r3, [pc, #8]	; (8021908 <raise+0xc>)
 80218fe:	4601      	mov	r1, r0
 8021900:	6818      	ldr	r0, [r3, #0]
 8021902:	f7ff bfd3 	b.w	80218ac <_raise_r>
 8021906:	bf00      	nop
 8021908:	20000104 	.word	0x20000104

0802190c <_kill_r>:
 802190c:	b538      	push	{r3, r4, r5, lr}
 802190e:	4d07      	ldr	r5, [pc, #28]	; (802192c <_kill_r+0x20>)
 8021910:	2300      	movs	r3, #0
 8021912:	4604      	mov	r4, r0
 8021914:	4608      	mov	r0, r1
 8021916:	4611      	mov	r1, r2
 8021918:	602b      	str	r3, [r5, #0]
 802191a:	f7e0 fe33 	bl	8002584 <_kill>
 802191e:	1c43      	adds	r3, r0, #1
 8021920:	d102      	bne.n	8021928 <_kill_r+0x1c>
 8021922:	682b      	ldr	r3, [r5, #0]
 8021924:	b103      	cbz	r3, 8021928 <_kill_r+0x1c>
 8021926:	6023      	str	r3, [r4, #0]
 8021928:	bd38      	pop	{r3, r4, r5, pc}
 802192a:	bf00      	nop
 802192c:	20015a18 	.word	0x20015a18

08021930 <_getpid_r>:
 8021930:	f7e0 be26 	b.w	8002580 <_getpid>

08021934 <__sread>:
 8021934:	b510      	push	{r4, lr}
 8021936:	460c      	mov	r4, r1
 8021938:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802193c:	f000 fac8 	bl	8021ed0 <_read_r>
 8021940:	2800      	cmp	r0, #0
 8021942:	bfab      	itete	ge
 8021944:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021946:	89a3      	ldrhlt	r3, [r4, #12]
 8021948:	181b      	addge	r3, r3, r0
 802194a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802194e:	bfac      	ite	ge
 8021950:	6563      	strge	r3, [r4, #84]	; 0x54
 8021952:	81a3      	strhlt	r3, [r4, #12]
 8021954:	bd10      	pop	{r4, pc}

08021956 <__swrite>:
 8021956:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802195a:	461f      	mov	r7, r3
 802195c:	898b      	ldrh	r3, [r1, #12]
 802195e:	05db      	lsls	r3, r3, #23
 8021960:	4605      	mov	r5, r0
 8021962:	460c      	mov	r4, r1
 8021964:	4616      	mov	r6, r2
 8021966:	d505      	bpl.n	8021974 <__swrite+0x1e>
 8021968:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802196c:	2302      	movs	r3, #2
 802196e:	2200      	movs	r2, #0
 8021970:	f000 fa2a 	bl	8021dc8 <_lseek_r>
 8021974:	89a3      	ldrh	r3, [r4, #12]
 8021976:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802197a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802197e:	81a3      	strh	r3, [r4, #12]
 8021980:	4632      	mov	r2, r6
 8021982:	463b      	mov	r3, r7
 8021984:	4628      	mov	r0, r5
 8021986:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802198a:	f000 b869 	b.w	8021a60 <_write_r>

0802198e <__sseek>:
 802198e:	b510      	push	{r4, lr}
 8021990:	460c      	mov	r4, r1
 8021992:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021996:	f000 fa17 	bl	8021dc8 <_lseek_r>
 802199a:	1c43      	adds	r3, r0, #1
 802199c:	89a3      	ldrh	r3, [r4, #12]
 802199e:	bf15      	itete	ne
 80219a0:	6560      	strne	r0, [r4, #84]	; 0x54
 80219a2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80219a6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80219aa:	81a3      	strheq	r3, [r4, #12]
 80219ac:	bf18      	it	ne
 80219ae:	81a3      	strhne	r3, [r4, #12]
 80219b0:	bd10      	pop	{r4, pc}

080219b2 <__sclose>:
 80219b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80219b6:	f000 b935 	b.w	8021c24 <_close_r>
	...

080219bc <__swbuf_r>:
 80219bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80219be:	460e      	mov	r6, r1
 80219c0:	4614      	mov	r4, r2
 80219c2:	4605      	mov	r5, r0
 80219c4:	b118      	cbz	r0, 80219ce <__swbuf_r+0x12>
 80219c6:	6983      	ldr	r3, [r0, #24]
 80219c8:	b90b      	cbnz	r3, 80219ce <__swbuf_r+0x12>
 80219ca:	f7ff fa29 	bl	8020e20 <__sinit>
 80219ce:	4b21      	ldr	r3, [pc, #132]	; (8021a54 <__swbuf_r+0x98>)
 80219d0:	429c      	cmp	r4, r3
 80219d2:	d12b      	bne.n	8021a2c <__swbuf_r+0x70>
 80219d4:	686c      	ldr	r4, [r5, #4]
 80219d6:	69a3      	ldr	r3, [r4, #24]
 80219d8:	60a3      	str	r3, [r4, #8]
 80219da:	89a3      	ldrh	r3, [r4, #12]
 80219dc:	071a      	lsls	r2, r3, #28
 80219de:	d52f      	bpl.n	8021a40 <__swbuf_r+0x84>
 80219e0:	6923      	ldr	r3, [r4, #16]
 80219e2:	b36b      	cbz	r3, 8021a40 <__swbuf_r+0x84>
 80219e4:	6923      	ldr	r3, [r4, #16]
 80219e6:	6820      	ldr	r0, [r4, #0]
 80219e8:	1ac0      	subs	r0, r0, r3
 80219ea:	6963      	ldr	r3, [r4, #20]
 80219ec:	b2f6      	uxtb	r6, r6
 80219ee:	4283      	cmp	r3, r0
 80219f0:	4637      	mov	r7, r6
 80219f2:	dc04      	bgt.n	80219fe <__swbuf_r+0x42>
 80219f4:	4621      	mov	r1, r4
 80219f6:	4628      	mov	r0, r5
 80219f8:	f000 f9aa 	bl	8021d50 <_fflush_r>
 80219fc:	bb30      	cbnz	r0, 8021a4c <__swbuf_r+0x90>
 80219fe:	68a3      	ldr	r3, [r4, #8]
 8021a00:	3b01      	subs	r3, #1
 8021a02:	60a3      	str	r3, [r4, #8]
 8021a04:	6823      	ldr	r3, [r4, #0]
 8021a06:	1c5a      	adds	r2, r3, #1
 8021a08:	6022      	str	r2, [r4, #0]
 8021a0a:	701e      	strb	r6, [r3, #0]
 8021a0c:	6963      	ldr	r3, [r4, #20]
 8021a0e:	3001      	adds	r0, #1
 8021a10:	4283      	cmp	r3, r0
 8021a12:	d004      	beq.n	8021a1e <__swbuf_r+0x62>
 8021a14:	89a3      	ldrh	r3, [r4, #12]
 8021a16:	07db      	lsls	r3, r3, #31
 8021a18:	d506      	bpl.n	8021a28 <__swbuf_r+0x6c>
 8021a1a:	2e0a      	cmp	r6, #10
 8021a1c:	d104      	bne.n	8021a28 <__swbuf_r+0x6c>
 8021a1e:	4621      	mov	r1, r4
 8021a20:	4628      	mov	r0, r5
 8021a22:	f000 f995 	bl	8021d50 <_fflush_r>
 8021a26:	b988      	cbnz	r0, 8021a4c <__swbuf_r+0x90>
 8021a28:	4638      	mov	r0, r7
 8021a2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021a2c:	4b0a      	ldr	r3, [pc, #40]	; (8021a58 <__swbuf_r+0x9c>)
 8021a2e:	429c      	cmp	r4, r3
 8021a30:	d101      	bne.n	8021a36 <__swbuf_r+0x7a>
 8021a32:	68ac      	ldr	r4, [r5, #8]
 8021a34:	e7cf      	b.n	80219d6 <__swbuf_r+0x1a>
 8021a36:	4b09      	ldr	r3, [pc, #36]	; (8021a5c <__swbuf_r+0xa0>)
 8021a38:	429c      	cmp	r4, r3
 8021a3a:	bf08      	it	eq
 8021a3c:	68ec      	ldreq	r4, [r5, #12]
 8021a3e:	e7ca      	b.n	80219d6 <__swbuf_r+0x1a>
 8021a40:	4621      	mov	r1, r4
 8021a42:	4628      	mov	r0, r5
 8021a44:	f000 f81e 	bl	8021a84 <__swsetup_r>
 8021a48:	2800      	cmp	r0, #0
 8021a4a:	d0cb      	beq.n	80219e4 <__swbuf_r+0x28>
 8021a4c:	f04f 37ff 	mov.w	r7, #4294967295
 8021a50:	e7ea      	b.n	8021a28 <__swbuf_r+0x6c>
 8021a52:	bf00      	nop
 8021a54:	08024c00 	.word	0x08024c00
 8021a58:	08024c20 	.word	0x08024c20
 8021a5c:	08024be0 	.word	0x08024be0

08021a60 <_write_r>:
 8021a60:	b538      	push	{r3, r4, r5, lr}
 8021a62:	4d07      	ldr	r5, [pc, #28]	; (8021a80 <_write_r+0x20>)
 8021a64:	4604      	mov	r4, r0
 8021a66:	4608      	mov	r0, r1
 8021a68:	4611      	mov	r1, r2
 8021a6a:	2200      	movs	r2, #0
 8021a6c:	602a      	str	r2, [r5, #0]
 8021a6e:	461a      	mov	r2, r3
 8021a70:	f7e0 fda4 	bl	80025bc <_write>
 8021a74:	1c43      	adds	r3, r0, #1
 8021a76:	d102      	bne.n	8021a7e <_write_r+0x1e>
 8021a78:	682b      	ldr	r3, [r5, #0]
 8021a7a:	b103      	cbz	r3, 8021a7e <_write_r+0x1e>
 8021a7c:	6023      	str	r3, [r4, #0]
 8021a7e:	bd38      	pop	{r3, r4, r5, pc}
 8021a80:	20015a18 	.word	0x20015a18

08021a84 <__swsetup_r>:
 8021a84:	4b32      	ldr	r3, [pc, #200]	; (8021b50 <__swsetup_r+0xcc>)
 8021a86:	b570      	push	{r4, r5, r6, lr}
 8021a88:	681d      	ldr	r5, [r3, #0]
 8021a8a:	4606      	mov	r6, r0
 8021a8c:	460c      	mov	r4, r1
 8021a8e:	b125      	cbz	r5, 8021a9a <__swsetup_r+0x16>
 8021a90:	69ab      	ldr	r3, [r5, #24]
 8021a92:	b913      	cbnz	r3, 8021a9a <__swsetup_r+0x16>
 8021a94:	4628      	mov	r0, r5
 8021a96:	f7ff f9c3 	bl	8020e20 <__sinit>
 8021a9a:	4b2e      	ldr	r3, [pc, #184]	; (8021b54 <__swsetup_r+0xd0>)
 8021a9c:	429c      	cmp	r4, r3
 8021a9e:	d10f      	bne.n	8021ac0 <__swsetup_r+0x3c>
 8021aa0:	686c      	ldr	r4, [r5, #4]
 8021aa2:	89a3      	ldrh	r3, [r4, #12]
 8021aa4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021aa8:	0719      	lsls	r1, r3, #28
 8021aaa:	d42c      	bmi.n	8021b06 <__swsetup_r+0x82>
 8021aac:	06dd      	lsls	r5, r3, #27
 8021aae:	d411      	bmi.n	8021ad4 <__swsetup_r+0x50>
 8021ab0:	2309      	movs	r3, #9
 8021ab2:	6033      	str	r3, [r6, #0]
 8021ab4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8021ab8:	81a3      	strh	r3, [r4, #12]
 8021aba:	f04f 30ff 	mov.w	r0, #4294967295
 8021abe:	e03e      	b.n	8021b3e <__swsetup_r+0xba>
 8021ac0:	4b25      	ldr	r3, [pc, #148]	; (8021b58 <__swsetup_r+0xd4>)
 8021ac2:	429c      	cmp	r4, r3
 8021ac4:	d101      	bne.n	8021aca <__swsetup_r+0x46>
 8021ac6:	68ac      	ldr	r4, [r5, #8]
 8021ac8:	e7eb      	b.n	8021aa2 <__swsetup_r+0x1e>
 8021aca:	4b24      	ldr	r3, [pc, #144]	; (8021b5c <__swsetup_r+0xd8>)
 8021acc:	429c      	cmp	r4, r3
 8021ace:	bf08      	it	eq
 8021ad0:	68ec      	ldreq	r4, [r5, #12]
 8021ad2:	e7e6      	b.n	8021aa2 <__swsetup_r+0x1e>
 8021ad4:	0758      	lsls	r0, r3, #29
 8021ad6:	d512      	bpl.n	8021afe <__swsetup_r+0x7a>
 8021ad8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021ada:	b141      	cbz	r1, 8021aee <__swsetup_r+0x6a>
 8021adc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021ae0:	4299      	cmp	r1, r3
 8021ae2:	d002      	beq.n	8021aea <__swsetup_r+0x66>
 8021ae4:	4630      	mov	r0, r6
 8021ae6:	f7ff fa99 	bl	802101c <_free_r>
 8021aea:	2300      	movs	r3, #0
 8021aec:	6363      	str	r3, [r4, #52]	; 0x34
 8021aee:	89a3      	ldrh	r3, [r4, #12]
 8021af0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021af4:	81a3      	strh	r3, [r4, #12]
 8021af6:	2300      	movs	r3, #0
 8021af8:	6063      	str	r3, [r4, #4]
 8021afa:	6923      	ldr	r3, [r4, #16]
 8021afc:	6023      	str	r3, [r4, #0]
 8021afe:	89a3      	ldrh	r3, [r4, #12]
 8021b00:	f043 0308 	orr.w	r3, r3, #8
 8021b04:	81a3      	strh	r3, [r4, #12]
 8021b06:	6923      	ldr	r3, [r4, #16]
 8021b08:	b94b      	cbnz	r3, 8021b1e <__swsetup_r+0x9a>
 8021b0a:	89a3      	ldrh	r3, [r4, #12]
 8021b0c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021b10:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021b14:	d003      	beq.n	8021b1e <__swsetup_r+0x9a>
 8021b16:	4621      	mov	r1, r4
 8021b18:	4630      	mov	r0, r6
 8021b1a:	f000 f98d 	bl	8021e38 <__smakebuf_r>
 8021b1e:	89a0      	ldrh	r0, [r4, #12]
 8021b20:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021b24:	f010 0301 	ands.w	r3, r0, #1
 8021b28:	d00a      	beq.n	8021b40 <__swsetup_r+0xbc>
 8021b2a:	2300      	movs	r3, #0
 8021b2c:	60a3      	str	r3, [r4, #8]
 8021b2e:	6963      	ldr	r3, [r4, #20]
 8021b30:	425b      	negs	r3, r3
 8021b32:	61a3      	str	r3, [r4, #24]
 8021b34:	6923      	ldr	r3, [r4, #16]
 8021b36:	b943      	cbnz	r3, 8021b4a <__swsetup_r+0xc6>
 8021b38:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8021b3c:	d1ba      	bne.n	8021ab4 <__swsetup_r+0x30>
 8021b3e:	bd70      	pop	{r4, r5, r6, pc}
 8021b40:	0781      	lsls	r1, r0, #30
 8021b42:	bf58      	it	pl
 8021b44:	6963      	ldrpl	r3, [r4, #20]
 8021b46:	60a3      	str	r3, [r4, #8]
 8021b48:	e7f4      	b.n	8021b34 <__swsetup_r+0xb0>
 8021b4a:	2000      	movs	r0, #0
 8021b4c:	e7f7      	b.n	8021b3e <__swsetup_r+0xba>
 8021b4e:	bf00      	nop
 8021b50:	20000104 	.word	0x20000104
 8021b54:	08024c00 	.word	0x08024c00
 8021b58:	08024c20 	.word	0x08024c20
 8021b5c:	08024be0 	.word	0x08024be0

08021b60 <__register_exitproc>:
 8021b60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021b64:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021c20 <__register_exitproc+0xc0>
 8021b68:	4606      	mov	r6, r0
 8021b6a:	f8d8 0000 	ldr.w	r0, [r8]
 8021b6e:	461f      	mov	r7, r3
 8021b70:	460d      	mov	r5, r1
 8021b72:	4691      	mov	r9, r2
 8021b74:	f7ff fa29 	bl	8020fca <__retarget_lock_acquire_recursive>
 8021b78:	4b25      	ldr	r3, [pc, #148]	; (8021c10 <__register_exitproc+0xb0>)
 8021b7a:	681c      	ldr	r4, [r3, #0]
 8021b7c:	b934      	cbnz	r4, 8021b8c <__register_exitproc+0x2c>
 8021b7e:	4c25      	ldr	r4, [pc, #148]	; (8021c14 <__register_exitproc+0xb4>)
 8021b80:	601c      	str	r4, [r3, #0]
 8021b82:	4b25      	ldr	r3, [pc, #148]	; (8021c18 <__register_exitproc+0xb8>)
 8021b84:	b113      	cbz	r3, 8021b8c <__register_exitproc+0x2c>
 8021b86:	681b      	ldr	r3, [r3, #0]
 8021b88:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8021b8c:	6863      	ldr	r3, [r4, #4]
 8021b8e:	2b1f      	cmp	r3, #31
 8021b90:	dd07      	ble.n	8021ba2 <__register_exitproc+0x42>
 8021b92:	f8d8 0000 	ldr.w	r0, [r8]
 8021b96:	f7ff fa1a 	bl	8020fce <__retarget_lock_release_recursive>
 8021b9a:	f04f 30ff 	mov.w	r0, #4294967295
 8021b9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021ba2:	b34e      	cbz	r6, 8021bf8 <__register_exitproc+0x98>
 8021ba4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021ba8:	b988      	cbnz	r0, 8021bce <__register_exitproc+0x6e>
 8021baa:	4b1c      	ldr	r3, [pc, #112]	; (8021c1c <__register_exitproc+0xbc>)
 8021bac:	b923      	cbnz	r3, 8021bb8 <__register_exitproc+0x58>
 8021bae:	f8d8 0000 	ldr.w	r0, [r8]
 8021bb2:	f7ff fa0b 	bl	8020fcc <__retarget_lock_release>
 8021bb6:	e7f0      	b.n	8021b9a <__register_exitproc+0x3a>
 8021bb8:	f44f 7084 	mov.w	r0, #264	; 0x108
 8021bbc:	f7ff fa08 	bl	8020fd0 <malloc>
 8021bc0:	2800      	cmp	r0, #0
 8021bc2:	d0f4      	beq.n	8021bae <__register_exitproc+0x4e>
 8021bc4:	2300      	movs	r3, #0
 8021bc6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8021bca:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8021bce:	6863      	ldr	r3, [r4, #4]
 8021bd0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021bd4:	2201      	movs	r2, #1
 8021bd6:	409a      	lsls	r2, r3
 8021bd8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8021bdc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021be0:	4313      	orrs	r3, r2
 8021be2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021be6:	2e02      	cmp	r6, #2
 8021be8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8021bec:	bf02      	ittt	eq
 8021bee:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8021bf2:	4313      	orreq	r3, r2
 8021bf4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021bf8:	6863      	ldr	r3, [r4, #4]
 8021bfa:	f8d8 0000 	ldr.w	r0, [r8]
 8021bfe:	1c5a      	adds	r2, r3, #1
 8021c00:	3302      	adds	r3, #2
 8021c02:	6062      	str	r2, [r4, #4]
 8021c04:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021c08:	f7ff f9e1 	bl	8020fce <__retarget_lock_release_recursive>
 8021c0c:	2000      	movs	r0, #0
 8021c0e:	e7c6      	b.n	8021b9e <__register_exitproc+0x3e>
 8021c10:	20015aa8 	.word	0x20015aa8
 8021c14:	20015a1c 	.word	0x20015a1c
 8021c18:	08024c78 	.word	0x08024c78
 8021c1c:	08020fd1 	.word	0x08020fd1
 8021c20:	20000168 	.word	0x20000168

08021c24 <_close_r>:
 8021c24:	b538      	push	{r3, r4, r5, lr}
 8021c26:	4d06      	ldr	r5, [pc, #24]	; (8021c40 <_close_r+0x1c>)
 8021c28:	2300      	movs	r3, #0
 8021c2a:	4604      	mov	r4, r0
 8021c2c:	4608      	mov	r0, r1
 8021c2e:	602b      	str	r3, [r5, #0]
 8021c30:	f7e0 fcd2 	bl	80025d8 <_close>
 8021c34:	1c43      	adds	r3, r0, #1
 8021c36:	d102      	bne.n	8021c3e <_close_r+0x1a>
 8021c38:	682b      	ldr	r3, [r5, #0]
 8021c3a:	b103      	cbz	r3, 8021c3e <_close_r+0x1a>
 8021c3c:	6023      	str	r3, [r4, #0]
 8021c3e:	bd38      	pop	{r3, r4, r5, pc}
 8021c40:	20015a18 	.word	0x20015a18

08021c44 <__sflush_r>:
 8021c44:	898a      	ldrh	r2, [r1, #12]
 8021c46:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021c4a:	4605      	mov	r5, r0
 8021c4c:	0710      	lsls	r0, r2, #28
 8021c4e:	460c      	mov	r4, r1
 8021c50:	d458      	bmi.n	8021d04 <__sflush_r+0xc0>
 8021c52:	684b      	ldr	r3, [r1, #4]
 8021c54:	2b00      	cmp	r3, #0
 8021c56:	dc05      	bgt.n	8021c64 <__sflush_r+0x20>
 8021c58:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8021c5a:	2b00      	cmp	r3, #0
 8021c5c:	dc02      	bgt.n	8021c64 <__sflush_r+0x20>
 8021c5e:	2000      	movs	r0, #0
 8021c60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021c64:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021c66:	2e00      	cmp	r6, #0
 8021c68:	d0f9      	beq.n	8021c5e <__sflush_r+0x1a>
 8021c6a:	2300      	movs	r3, #0
 8021c6c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8021c70:	682f      	ldr	r7, [r5, #0]
 8021c72:	602b      	str	r3, [r5, #0]
 8021c74:	d032      	beq.n	8021cdc <__sflush_r+0x98>
 8021c76:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021c78:	89a3      	ldrh	r3, [r4, #12]
 8021c7a:	075a      	lsls	r2, r3, #29
 8021c7c:	d505      	bpl.n	8021c8a <__sflush_r+0x46>
 8021c7e:	6863      	ldr	r3, [r4, #4]
 8021c80:	1ac0      	subs	r0, r0, r3
 8021c82:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021c84:	b10b      	cbz	r3, 8021c8a <__sflush_r+0x46>
 8021c86:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021c88:	1ac0      	subs	r0, r0, r3
 8021c8a:	2300      	movs	r3, #0
 8021c8c:	4602      	mov	r2, r0
 8021c8e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021c90:	6a21      	ldr	r1, [r4, #32]
 8021c92:	4628      	mov	r0, r5
 8021c94:	47b0      	blx	r6
 8021c96:	1c43      	adds	r3, r0, #1
 8021c98:	89a3      	ldrh	r3, [r4, #12]
 8021c9a:	d106      	bne.n	8021caa <__sflush_r+0x66>
 8021c9c:	6829      	ldr	r1, [r5, #0]
 8021c9e:	291d      	cmp	r1, #29
 8021ca0:	d82c      	bhi.n	8021cfc <__sflush_r+0xb8>
 8021ca2:	4a2a      	ldr	r2, [pc, #168]	; (8021d4c <__sflush_r+0x108>)
 8021ca4:	40ca      	lsrs	r2, r1
 8021ca6:	07d6      	lsls	r6, r2, #31
 8021ca8:	d528      	bpl.n	8021cfc <__sflush_r+0xb8>
 8021caa:	2200      	movs	r2, #0
 8021cac:	6062      	str	r2, [r4, #4]
 8021cae:	04d9      	lsls	r1, r3, #19
 8021cb0:	6922      	ldr	r2, [r4, #16]
 8021cb2:	6022      	str	r2, [r4, #0]
 8021cb4:	d504      	bpl.n	8021cc0 <__sflush_r+0x7c>
 8021cb6:	1c42      	adds	r2, r0, #1
 8021cb8:	d101      	bne.n	8021cbe <__sflush_r+0x7a>
 8021cba:	682b      	ldr	r3, [r5, #0]
 8021cbc:	b903      	cbnz	r3, 8021cc0 <__sflush_r+0x7c>
 8021cbe:	6560      	str	r0, [r4, #84]	; 0x54
 8021cc0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021cc2:	602f      	str	r7, [r5, #0]
 8021cc4:	2900      	cmp	r1, #0
 8021cc6:	d0ca      	beq.n	8021c5e <__sflush_r+0x1a>
 8021cc8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021ccc:	4299      	cmp	r1, r3
 8021cce:	d002      	beq.n	8021cd6 <__sflush_r+0x92>
 8021cd0:	4628      	mov	r0, r5
 8021cd2:	f7ff f9a3 	bl	802101c <_free_r>
 8021cd6:	2000      	movs	r0, #0
 8021cd8:	6360      	str	r0, [r4, #52]	; 0x34
 8021cda:	e7c1      	b.n	8021c60 <__sflush_r+0x1c>
 8021cdc:	6a21      	ldr	r1, [r4, #32]
 8021cde:	2301      	movs	r3, #1
 8021ce0:	4628      	mov	r0, r5
 8021ce2:	47b0      	blx	r6
 8021ce4:	1c41      	adds	r1, r0, #1
 8021ce6:	d1c7      	bne.n	8021c78 <__sflush_r+0x34>
 8021ce8:	682b      	ldr	r3, [r5, #0]
 8021cea:	2b00      	cmp	r3, #0
 8021cec:	d0c4      	beq.n	8021c78 <__sflush_r+0x34>
 8021cee:	2b1d      	cmp	r3, #29
 8021cf0:	d001      	beq.n	8021cf6 <__sflush_r+0xb2>
 8021cf2:	2b16      	cmp	r3, #22
 8021cf4:	d101      	bne.n	8021cfa <__sflush_r+0xb6>
 8021cf6:	602f      	str	r7, [r5, #0]
 8021cf8:	e7b1      	b.n	8021c5e <__sflush_r+0x1a>
 8021cfa:	89a3      	ldrh	r3, [r4, #12]
 8021cfc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021d00:	81a3      	strh	r3, [r4, #12]
 8021d02:	e7ad      	b.n	8021c60 <__sflush_r+0x1c>
 8021d04:	690f      	ldr	r7, [r1, #16]
 8021d06:	2f00      	cmp	r7, #0
 8021d08:	d0a9      	beq.n	8021c5e <__sflush_r+0x1a>
 8021d0a:	0793      	lsls	r3, r2, #30
 8021d0c:	680e      	ldr	r6, [r1, #0]
 8021d0e:	bf08      	it	eq
 8021d10:	694b      	ldreq	r3, [r1, #20]
 8021d12:	600f      	str	r7, [r1, #0]
 8021d14:	bf18      	it	ne
 8021d16:	2300      	movne	r3, #0
 8021d18:	eba6 0807 	sub.w	r8, r6, r7
 8021d1c:	608b      	str	r3, [r1, #8]
 8021d1e:	f1b8 0f00 	cmp.w	r8, #0
 8021d22:	dd9c      	ble.n	8021c5e <__sflush_r+0x1a>
 8021d24:	6a21      	ldr	r1, [r4, #32]
 8021d26:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021d28:	4643      	mov	r3, r8
 8021d2a:	463a      	mov	r2, r7
 8021d2c:	4628      	mov	r0, r5
 8021d2e:	47b0      	blx	r6
 8021d30:	2800      	cmp	r0, #0
 8021d32:	dc06      	bgt.n	8021d42 <__sflush_r+0xfe>
 8021d34:	89a3      	ldrh	r3, [r4, #12]
 8021d36:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021d3a:	81a3      	strh	r3, [r4, #12]
 8021d3c:	f04f 30ff 	mov.w	r0, #4294967295
 8021d40:	e78e      	b.n	8021c60 <__sflush_r+0x1c>
 8021d42:	4407      	add	r7, r0
 8021d44:	eba8 0800 	sub.w	r8, r8, r0
 8021d48:	e7e9      	b.n	8021d1e <__sflush_r+0xda>
 8021d4a:	bf00      	nop
 8021d4c:	20400001 	.word	0x20400001

08021d50 <_fflush_r>:
 8021d50:	b538      	push	{r3, r4, r5, lr}
 8021d52:	690b      	ldr	r3, [r1, #16]
 8021d54:	4605      	mov	r5, r0
 8021d56:	460c      	mov	r4, r1
 8021d58:	b913      	cbnz	r3, 8021d60 <_fflush_r+0x10>
 8021d5a:	2500      	movs	r5, #0
 8021d5c:	4628      	mov	r0, r5
 8021d5e:	bd38      	pop	{r3, r4, r5, pc}
 8021d60:	b118      	cbz	r0, 8021d6a <_fflush_r+0x1a>
 8021d62:	6983      	ldr	r3, [r0, #24]
 8021d64:	b90b      	cbnz	r3, 8021d6a <_fflush_r+0x1a>
 8021d66:	f7ff f85b 	bl	8020e20 <__sinit>
 8021d6a:	4b14      	ldr	r3, [pc, #80]	; (8021dbc <_fflush_r+0x6c>)
 8021d6c:	429c      	cmp	r4, r3
 8021d6e:	d11b      	bne.n	8021da8 <_fflush_r+0x58>
 8021d70:	686c      	ldr	r4, [r5, #4]
 8021d72:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021d76:	2b00      	cmp	r3, #0
 8021d78:	d0ef      	beq.n	8021d5a <_fflush_r+0xa>
 8021d7a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8021d7c:	07d0      	lsls	r0, r2, #31
 8021d7e:	d404      	bmi.n	8021d8a <_fflush_r+0x3a>
 8021d80:	0599      	lsls	r1, r3, #22
 8021d82:	d402      	bmi.n	8021d8a <_fflush_r+0x3a>
 8021d84:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021d86:	f7ff f920 	bl	8020fca <__retarget_lock_acquire_recursive>
 8021d8a:	4628      	mov	r0, r5
 8021d8c:	4621      	mov	r1, r4
 8021d8e:	f7ff ff59 	bl	8021c44 <__sflush_r>
 8021d92:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021d94:	07da      	lsls	r2, r3, #31
 8021d96:	4605      	mov	r5, r0
 8021d98:	d4e0      	bmi.n	8021d5c <_fflush_r+0xc>
 8021d9a:	89a3      	ldrh	r3, [r4, #12]
 8021d9c:	059b      	lsls	r3, r3, #22
 8021d9e:	d4dd      	bmi.n	8021d5c <_fflush_r+0xc>
 8021da0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021da2:	f7ff f914 	bl	8020fce <__retarget_lock_release_recursive>
 8021da6:	e7d9      	b.n	8021d5c <_fflush_r+0xc>
 8021da8:	4b05      	ldr	r3, [pc, #20]	; (8021dc0 <_fflush_r+0x70>)
 8021daa:	429c      	cmp	r4, r3
 8021dac:	d101      	bne.n	8021db2 <_fflush_r+0x62>
 8021dae:	68ac      	ldr	r4, [r5, #8]
 8021db0:	e7df      	b.n	8021d72 <_fflush_r+0x22>
 8021db2:	4b04      	ldr	r3, [pc, #16]	; (8021dc4 <_fflush_r+0x74>)
 8021db4:	429c      	cmp	r4, r3
 8021db6:	bf08      	it	eq
 8021db8:	68ec      	ldreq	r4, [r5, #12]
 8021dba:	e7da      	b.n	8021d72 <_fflush_r+0x22>
 8021dbc:	08024c00 	.word	0x08024c00
 8021dc0:	08024c20 	.word	0x08024c20
 8021dc4:	08024be0 	.word	0x08024be0

08021dc8 <_lseek_r>:
 8021dc8:	b538      	push	{r3, r4, r5, lr}
 8021dca:	4d07      	ldr	r5, [pc, #28]	; (8021de8 <_lseek_r+0x20>)
 8021dcc:	4604      	mov	r4, r0
 8021dce:	4608      	mov	r0, r1
 8021dd0:	4611      	mov	r1, r2
 8021dd2:	2200      	movs	r2, #0
 8021dd4:	602a      	str	r2, [r5, #0]
 8021dd6:	461a      	mov	r2, r3
 8021dd8:	f7e0 fc08 	bl	80025ec <_lseek>
 8021ddc:	1c43      	adds	r3, r0, #1
 8021dde:	d102      	bne.n	8021de6 <_lseek_r+0x1e>
 8021de0:	682b      	ldr	r3, [r5, #0]
 8021de2:	b103      	cbz	r3, 8021de6 <_lseek_r+0x1e>
 8021de4:	6023      	str	r3, [r4, #0]
 8021de6:	bd38      	pop	{r3, r4, r5, pc}
 8021de8:	20015a18 	.word	0x20015a18

08021dec <__swhatbuf_r>:
 8021dec:	b570      	push	{r4, r5, r6, lr}
 8021dee:	460e      	mov	r6, r1
 8021df0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021df4:	2900      	cmp	r1, #0
 8021df6:	b096      	sub	sp, #88	; 0x58
 8021df8:	4614      	mov	r4, r2
 8021dfa:	461d      	mov	r5, r3
 8021dfc:	da08      	bge.n	8021e10 <__swhatbuf_r+0x24>
 8021dfe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8021e02:	2200      	movs	r2, #0
 8021e04:	602a      	str	r2, [r5, #0]
 8021e06:	061a      	lsls	r2, r3, #24
 8021e08:	d410      	bmi.n	8021e2c <__swhatbuf_r+0x40>
 8021e0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021e0e:	e00e      	b.n	8021e2e <__swhatbuf_r+0x42>
 8021e10:	466a      	mov	r2, sp
 8021e12:	f000 f86f 	bl	8021ef4 <_fstat_r>
 8021e16:	2800      	cmp	r0, #0
 8021e18:	dbf1      	blt.n	8021dfe <__swhatbuf_r+0x12>
 8021e1a:	9a01      	ldr	r2, [sp, #4]
 8021e1c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021e20:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021e24:	425a      	negs	r2, r3
 8021e26:	415a      	adcs	r2, r3
 8021e28:	602a      	str	r2, [r5, #0]
 8021e2a:	e7ee      	b.n	8021e0a <__swhatbuf_r+0x1e>
 8021e2c:	2340      	movs	r3, #64	; 0x40
 8021e2e:	2000      	movs	r0, #0
 8021e30:	6023      	str	r3, [r4, #0]
 8021e32:	b016      	add	sp, #88	; 0x58
 8021e34:	bd70      	pop	{r4, r5, r6, pc}
	...

08021e38 <__smakebuf_r>:
 8021e38:	898b      	ldrh	r3, [r1, #12]
 8021e3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021e3c:	079d      	lsls	r5, r3, #30
 8021e3e:	4606      	mov	r6, r0
 8021e40:	460c      	mov	r4, r1
 8021e42:	d507      	bpl.n	8021e54 <__smakebuf_r+0x1c>
 8021e44:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021e48:	6023      	str	r3, [r4, #0]
 8021e4a:	6123      	str	r3, [r4, #16]
 8021e4c:	2301      	movs	r3, #1
 8021e4e:	6163      	str	r3, [r4, #20]
 8021e50:	b002      	add	sp, #8
 8021e52:	bd70      	pop	{r4, r5, r6, pc}
 8021e54:	ab01      	add	r3, sp, #4
 8021e56:	466a      	mov	r2, sp
 8021e58:	f7ff ffc8 	bl	8021dec <__swhatbuf_r>
 8021e5c:	9900      	ldr	r1, [sp, #0]
 8021e5e:	4605      	mov	r5, r0
 8021e60:	4630      	mov	r0, r6
 8021e62:	f7ff f947 	bl	80210f4 <_malloc_r>
 8021e66:	b948      	cbnz	r0, 8021e7c <__smakebuf_r+0x44>
 8021e68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021e6c:	059a      	lsls	r2, r3, #22
 8021e6e:	d4ef      	bmi.n	8021e50 <__smakebuf_r+0x18>
 8021e70:	f023 0303 	bic.w	r3, r3, #3
 8021e74:	f043 0302 	orr.w	r3, r3, #2
 8021e78:	81a3      	strh	r3, [r4, #12]
 8021e7a:	e7e3      	b.n	8021e44 <__smakebuf_r+0xc>
 8021e7c:	4b0d      	ldr	r3, [pc, #52]	; (8021eb4 <__smakebuf_r+0x7c>)
 8021e7e:	62b3      	str	r3, [r6, #40]	; 0x28
 8021e80:	89a3      	ldrh	r3, [r4, #12]
 8021e82:	6020      	str	r0, [r4, #0]
 8021e84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021e88:	81a3      	strh	r3, [r4, #12]
 8021e8a:	9b00      	ldr	r3, [sp, #0]
 8021e8c:	6163      	str	r3, [r4, #20]
 8021e8e:	9b01      	ldr	r3, [sp, #4]
 8021e90:	6120      	str	r0, [r4, #16]
 8021e92:	b15b      	cbz	r3, 8021eac <__smakebuf_r+0x74>
 8021e94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021e98:	4630      	mov	r0, r6
 8021e9a:	f000 f83d 	bl	8021f18 <_isatty_r>
 8021e9e:	b128      	cbz	r0, 8021eac <__smakebuf_r+0x74>
 8021ea0:	89a3      	ldrh	r3, [r4, #12]
 8021ea2:	f023 0303 	bic.w	r3, r3, #3
 8021ea6:	f043 0301 	orr.w	r3, r3, #1
 8021eaa:	81a3      	strh	r3, [r4, #12]
 8021eac:	89a0      	ldrh	r0, [r4, #12]
 8021eae:	4305      	orrs	r5, r0
 8021eb0:	81a5      	strh	r5, [r4, #12]
 8021eb2:	e7cd      	b.n	8021e50 <__smakebuf_r+0x18>
 8021eb4:	08020db9 	.word	0x08020db9

08021eb8 <__malloc_lock>:
 8021eb8:	4801      	ldr	r0, [pc, #4]	; (8021ec0 <__malloc_lock+0x8>)
 8021eba:	f7ff b886 	b.w	8020fca <__retarget_lock_acquire_recursive>
 8021ebe:	bf00      	nop
 8021ec0:	20015905 	.word	0x20015905

08021ec4 <__malloc_unlock>:
 8021ec4:	4801      	ldr	r0, [pc, #4]	; (8021ecc <__malloc_unlock+0x8>)
 8021ec6:	f7ff b882 	b.w	8020fce <__retarget_lock_release_recursive>
 8021eca:	bf00      	nop
 8021ecc:	20015905 	.word	0x20015905

08021ed0 <_read_r>:
 8021ed0:	b538      	push	{r3, r4, r5, lr}
 8021ed2:	4d07      	ldr	r5, [pc, #28]	; (8021ef0 <_read_r+0x20>)
 8021ed4:	4604      	mov	r4, r0
 8021ed6:	4608      	mov	r0, r1
 8021ed8:	4611      	mov	r1, r2
 8021eda:	2200      	movs	r2, #0
 8021edc:	602a      	str	r2, [r5, #0]
 8021ede:	461a      	mov	r2, r3
 8021ee0:	f7e0 fb5e 	bl	80025a0 <_read>
 8021ee4:	1c43      	adds	r3, r0, #1
 8021ee6:	d102      	bne.n	8021eee <_read_r+0x1e>
 8021ee8:	682b      	ldr	r3, [r5, #0]
 8021eea:	b103      	cbz	r3, 8021eee <_read_r+0x1e>
 8021eec:	6023      	str	r3, [r4, #0]
 8021eee:	bd38      	pop	{r3, r4, r5, pc}
 8021ef0:	20015a18 	.word	0x20015a18

08021ef4 <_fstat_r>:
 8021ef4:	b538      	push	{r3, r4, r5, lr}
 8021ef6:	4d07      	ldr	r5, [pc, #28]	; (8021f14 <_fstat_r+0x20>)
 8021ef8:	2300      	movs	r3, #0
 8021efa:	4604      	mov	r4, r0
 8021efc:	4608      	mov	r0, r1
 8021efe:	4611      	mov	r1, r2
 8021f00:	602b      	str	r3, [r5, #0]
 8021f02:	f7e0 fb6c 	bl	80025de <_fstat>
 8021f06:	1c43      	adds	r3, r0, #1
 8021f08:	d102      	bne.n	8021f10 <_fstat_r+0x1c>
 8021f0a:	682b      	ldr	r3, [r5, #0]
 8021f0c:	b103      	cbz	r3, 8021f10 <_fstat_r+0x1c>
 8021f0e:	6023      	str	r3, [r4, #0]
 8021f10:	bd38      	pop	{r3, r4, r5, pc}
 8021f12:	bf00      	nop
 8021f14:	20015a18 	.word	0x20015a18

08021f18 <_isatty_r>:
 8021f18:	b538      	push	{r3, r4, r5, lr}
 8021f1a:	4d06      	ldr	r5, [pc, #24]	; (8021f34 <_isatty_r+0x1c>)
 8021f1c:	2300      	movs	r3, #0
 8021f1e:	4604      	mov	r4, r0
 8021f20:	4608      	mov	r0, r1
 8021f22:	602b      	str	r3, [r5, #0]
 8021f24:	f7e0 fb60 	bl	80025e8 <_isatty>
 8021f28:	1c43      	adds	r3, r0, #1
 8021f2a:	d102      	bne.n	8021f32 <_isatty_r+0x1a>
 8021f2c:	682b      	ldr	r3, [r5, #0]
 8021f2e:	b103      	cbz	r3, 8021f32 <_isatty_r+0x1a>
 8021f30:	6023      	str	r3, [r4, #0]
 8021f32:	bd38      	pop	{r3, r4, r5, pc}
 8021f34:	20015a18 	.word	0x20015a18

08021f38 <_init>:
 8021f38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021f3a:	bf00      	nop
 8021f3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021f3e:	bc08      	pop	{r3}
 8021f40:	469e      	mov	lr, r3
 8021f42:	4770      	bx	lr

08021f44 <_fini>:
 8021f44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021f46:	bf00      	nop
 8021f48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021f4a:	bc08      	pop	{r3}
 8021f4c:	469e      	mov	lr, r3
 8021f4e:	4770      	bx	lr
